
LCD_LT24.elf:     file format elf32-littlenios2
LCD_LT24.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10100244

Program Header:
    LOAD off    0x00001000 vaddr 0x10100000 paddr 0x10100000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10100020 paddr 0x10100020 align 2**12
         filesz 0x0000fb08 memsz 0x0000fb08 flags r-x
    LOAD off    0x00010b28 vaddr 0x1010fb28 paddr 0x10111614 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00013100 vaddr 0x10113100 paddr 0x10113100 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10100000  10100000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  10100020  10100020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f5bc  10100244  10100244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000328  1010f800  1010f800  00010800  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  1010fb28  10111614  00010b28  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  10113100  10113100  00013100  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  10113260  10113260  00012614  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012614  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e98  00000000  00000000  00012638  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002326a  00000000  00000000  000134d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008ef2  00000000  00000000  0003673a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b385  00000000  00000000  0003f62c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000209c  00000000  00000000  0004a9b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000375a  00000000  00000000  0004ca50  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017b46  00000000  00000000  000501aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00067cf0  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018c0  00000000  00000000  00067d20  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006c63e  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006c641  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006c64d  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006c64e  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006c64f  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006c65a  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006c665  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000a  00000000  00000000  0006c670  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000031  00000000  00000000  0006c67a  2**0
                  CONTENTS, READONLY
 26 .jdi          000049d7  00000000  00000000  0006c6ab  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0027a97b  00000000  00000000  00071082  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10100000 l    d  .entry	00000000 .entry
10100020 l    d  .exceptions	00000000 .exceptions
10100244 l    d  .text	00000000 .text
1010f800 l    d  .rodata	00000000 .rodata
1010fb28 l    d  .rwdata	00000000 .rwdata
10113100 l    d  .bss	00000000 .bss
10113260 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 D:/Skydrive/Documenten/Univ/ES/GIT/LCD/sw/nios/LCD_LT24_bsp//obj/HAL/src/crt0.o
1010028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
1010f86e l     O .rodata	00000010 zeroes.4404
10102b0c l     F .text	000000bc __sbprintf
1010f87e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
10102d1c l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
1010484c l     F .text	00000008 __fp_unlock
10104860 l     F .text	0000019c __sinit.part.1
101049fc l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
1010fb28 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
1010ff6c l     O .rwdata	00000020 lc_ctype_charset
1010ff4c l     O .rwdata	00000020 lc_message_charset
1010ff8c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
1010f8b0 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
10107df8 l     F .text	000000fc __sprint_r.part.0
1010f9e4 l     O .rodata	00000010 blanks.4348
1010f9d4 l     O .rodata	00000010 zeroes.4349
10109384 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
1010d040 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
1010d160 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1010d18c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
1010d28c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
1010d380 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
1010d46c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
1010d654 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
10111604 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
1010d8b4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
1010d9fc l     F .text	00000038 alt_dev_reg
10110574 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
1010dce0 l     F .text	0000020c altera_avalon_jtag_uart_irq
1010deec l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
1010e6b4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
1010eb6c l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
1010ecac l     F .text	00000050 alt_get_errno
1010ecfc l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
10113134 g     O .bss	00000004 alt_instruction_exception_handler
1010743c g     F .text	00000074 _mprec_log10
10107528 g     F .text	0000008c __any_on
10109920 g     F .text	00000054 _isatty_r
1010f8bc g     O .rodata	00000028 __mprec_tinytens
1010d590 g     F .text	0000007c alt_main
1010078c g     F .text	000000c0 _puts_r
10113160 g     O .bss	00000100 alt_irq
10109974 g     F .text	00000060 _lseek_r
10111614 g       *ABS*	00000000 __flash_rwdata_start
1010bb6c g     F .text	00000088 .hidden __eqdf2
10113260 g       *ABS*	00000000 __alt_heap_start
10100750 g     F .text	0000003c printf
10109b8c g     F .text	0000009c _wcrtomb_r
10107cb8 g     F .text	0000005c __sseek
10104b9c g     F .text	00000010 __sinit
10109a34 g     F .text	00000140 __swbuf_r
10105664 g     F .text	0000007c _setlocale_r
10104a04 g     F .text	00000068 __sfmoreglue
1010d630 g     F .text	00000024 __malloc_unlock
10106334 g     F .text	0000015c memmove
10104b84 g     F .text	00000018 _cleanup
101065b8 g     F .text	000000a8 _Balloc
1010bbf4 g     F .text	000000dc .hidden __gtdf2
1010f0c4 g     F .text	00000024 altera_nios2_gen2_irq_init
10100000 g     F .entry	0000001c __reset
10100020 g       *ABS*	00000000 __flash_exceptions_start
101098c4 g     F .text	0000005c _fstat_r
10113118 g     O .bss	00000004 errno
10107c34 g     F .text	00000008 __seofread
10100290 g     F .text	00000034 LCD_WR_REG
10113120 g     O .bss	00000004 alt_argv
101195d4 g       *ABS*	00000000 _gp
101103f4 g     O .rwdata	00000180 alt_fd_list
1010f0e8 g     F .text	00000090 alt_find_dev
101061ec g     F .text	00000148 memcpy
10104854 g     F .text	0000000c _cleanup_r
1010ce58 g     F .text	000000dc .hidden __floatsidf
1010ec30 g     F .text	0000007c alt_io_redirect
1010bcd0 g     F .text	000000f4 .hidden __ltdf2
1010f800 g       *ABS*	00000000 __DTOR_END__
1010084c g     F .text	00000014 puts
1010f3d0 g     F .text	0000009c alt_exception_cause_generated_bad_addr
10107b18 g     F .text	00000074 __fpclassifyd
10107398 g     F .text	000000a4 __ratio
10109368 g     F .text	0000001c __vfiprintf_internal
1010e0ec g     F .text	0000021c altera_avalon_jtag_uart_read
10100720 g     F .text	00000030 _printf_r
10100000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
1010a91c g     F .text	00000064 .hidden __udivsi3
1010d2dc g     F .text	000000a4 isatty
1010f90c g     O .rodata	000000c8 __mprec_tens
101056e0 g     F .text	0000000c __locale_charset
1010f340 g     F .text	00000090 alt_icache_flush
10113114 g     O .bss	00000004 __malloc_top_pad
101115dc g     O .rwdata	00000004 __mb_cur_max
10105710 g     F .text	0000000c _localeconv_r
101002f8 g     F .text	00000034 LCD_RST
101069c4 g     F .text	0000003c __i2b
10105020 g     F .text	000004bc __sfvwrite_r
10107b8c g     F .text	00000054 _sbrk_r
101099d4 g     F .text	00000060 _read_r
101115fc g     O .rwdata	00000004 alt_max_fd
101095b8 g     F .text	000000f0 _fclose_r
1010481c g     F .text	00000030 fflush
10113110 g     O .bss	00000004 __malloc_max_sbrked_mem
1010a9d8 g     F .text	000008ac .hidden __adddf3
10107140 g     F .text	0000010c __b2d
1010a2ec g     F .text	00000538 .hidden __umoddi3
1010d4bc g     F .text	000000d4 lseek
101115d4 g     O .rwdata	00000004 _global_impure_ptr
101075b4 g     F .text	00000564 _realloc_r
10113260 g       *ABS*	00000000 __bss_end
1010ea7c g     F .text	000000f0 alt_iic_isr_register
1010efbc g     F .text	00000108 alt_tick
10109d74 g     F .text	00000578 .hidden __udivdi3
10109820 g     F .text	00000024 _fputwc_r
1010f8e4 g     O .rodata	00000028 __mprec_bigtens
101067a8 g     F .text	00000104 __s2b
1010cf34 g     F .text	000000a8 .hidden __floatunsidf
10106e80 g     F .text	00000060 __mcmp
10104bbc g     F .text	00000018 __fp_lock_all
1010ea30 g     F .text	0000004c alt_ic_irq_enabled
1010ef20 g     F .text	0000009c alt_alarm_stop
10113128 g     O .bss	00000004 alt_irq_active
101000fc g     F .exceptions	000000d4 alt_irq_handler
101103cc g     O .rwdata	00000028 alt_dev_null
1010e66c g     F .text	00000048 alt_dcache_flush_all
101068ac g     F .text	00000068 __hi0bits
1010cdd8 g     F .text	00000080 .hidden __fixdfsi
10111614 g       *ABS*	00000000 __ram_rwdata_end
101002c4 g     F .text	00000034 LCD_WR_DATA
101115f4 g     O .rwdata	00000008 alt_dev_list
1010d904 g     F .text	000000f8 write
1010fb28 g       *ABS*	00000000 __ram_rodata_end
1010d1dc g     F .text	000000b0 fstat
1010bcd0 g     F .text	000000f4 .hidden __ledf2
10106bf8 g     F .text	00000140 __pow5mult
10107f0c g     F .text	0000145c ___vfiprintf_internal_r
10113108 g     O .bss	00000004 __nlocale_changed
1010a980 g     F .text	00000058 .hidden __umodsi3
10113260 g       *ABS*	00000000 end
1010dc18 g     F .text	000000c8 altera_avalon_jtag_uart_init
101001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
1010f800 g       *ABS*	00000000 __CTOR_LIST__
10120000 g       *ABS*	00000000 __alt_stack_pointer
1010cfdc g     F .text	00000064 .hidden __clzsi2
1010e308 g     F .text	00000224 altera_avalon_jtag_uart_write
10104bac g     F .text	00000004 __sfp_lock_acquire
10106108 g     F .text	000000e4 memchr
101008f8 g     F .text	000021f8 ___vfprintf_internal_r
10104d10 g     F .text	00000310 _free_r
101056ec g     F .text	00000010 __locale_mb_cur_max
1010f64c g     F .text	00000180 __call_exitprocs
10113104 g     O .bss	00000004 __mlocale_changed
101115e0 g     O .rwdata	00000004 __malloc_sbrk_base
10100244 g     F .text	0000004c _start
1011312c g     O .bss	00000004 _alt_tick_rate
10106d38 g     F .text	00000148 __lshift
10113130 g     O .bss	00000004 _alt_nticks
1010d6a4 g     F .text	000000fc read
1010da6c g     F .text	00000048 alt_sys_init
1010f534 g     F .text	00000118 __register_exitproc
10106a00 g     F .text	000001f8 __multiply
1010df94 g     F .text	00000068 altera_avalon_jtag_uart_close
1010fb28 g       *ABS*	00000000 __ram_rwdata_start
1010f800 g       *ABS*	00000000 __ram_rodata_start
10113138 g     O .bss	00000028 __malloc_current_mallinfo
1010724c g     F .text	0000014c __d2b
1010dab4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
1010f28c g     F .text	000000b4 alt_get_fd
101094a0 g     F .text	00000054 _close_r
1010f4b8 g     F .text	0000007c memcmp
1010db74 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
10113260 g       *ABS*	00000000 __alt_stack_base
1010dbc4 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10102bc8 g     F .text	00000154 __swsetup_r
1010b284 g     F .text	000008e8 .hidden __divdf3
10104a6c g     F .text	00000118 __sfp
101074b0 g     F .text	00000078 __copybits
1010ffc4 g     O .rwdata	00000408 __malloc_av_
10104bb8 g     F .text	00000004 __sinit_lock_release
1010bdc4 g     F .text	00000718 .hidden __muldf3
10107be0 g     F .text	00000054 __sread
1010f178 g     F .text	00000114 alt_find_file
1010e704 g     F .text	000000a4 alt_dev_llist_insert
1010d60c g     F .text	00000024 __malloc_lock
1010d804 g     F .text	000000b0 sbrk
101047c0 g     F .text	0000005c _fflush_r
101094f4 g     F .text	000000c4 _calloc_r
10113100 g       *ABS*	00000000 __bss_start
1010032c g     F .text	0000033c LCD_Init
10106490 g     F .text	00000128 memset
10100668 g     F .text	000000b8 main
10113124 g     O .bss	00000004 alt_envp
1011310c g     O .bss	00000004 __malloc_max_total_mem
1010db14 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
10109b74 g     F .text	00000018 __swbuf
10107d14 g     F .text	00000008 __sclose
10120000 g       *ABS*	00000000 __alt_heap_limit
101096a8 g     F .text	00000014 fclose
10102f1c g     F .text	00001688 _dtoa_r
101058fc g     F .text	0000080c _malloc_r
10109ce8 g     F .text	00000030 __ascii_wctomb
10111600 g     O .rwdata	00000004 alt_errno
101054dc g     F .text	000000c4 _fwalk
1010a824 g     F .text	00000084 .hidden __divsi3
10104bec g     F .text	00000124 _malloc_trim_r
1010f800 g       *ABS*	00000000 __CTOR_END__
10107d1c g     F .text	000000dc strcmp
1010f800 g       *ABS*	00000000 __flash_rodata_start
1010f800 g       *ABS*	00000000 __DTOR_LIST__
1010bb6c g     F .text	00000088 .hidden __nedf2
1010da34 g     F .text	00000038 alt_irq_init
1010d7a0 g     F .text	00000064 alt_release_fd
1010f9f4 g     O .rodata	00000100 .hidden __clz_tab
10113100 g     O .bss	00000004 _PathLocale
1010f46c g     F .text	00000014 atexit
10109440 g     F .text	00000060 _write_r
1010571c g     F .text	00000018 setlocale
101115d8 g     O .rwdata	00000004 _impure_ptr
1011311c g     O .bss	00000004 alt_argc
101045a4 g     F .text	0000021c __sflush_r
1010e808 g     F .text	00000060 _do_dtors
10105708 g     F .text	00000008 __locale_cjk_lang
10100020 g       .exceptions	00000000 alt_irq_entry
101070dc g     F .text	00000064 __ulp
10104bd4 g     F .text	00000018 __fp_unlock_all
101115ec g     O .rwdata	00000008 alt_fs_list
10100020 g       *ABS*	00000000 __ram_exceptions_start
10105734 g     F .text	0000000c localeconv
1010e89c g     F .text	00000050 alt_ic_isr_register
10111614 g       *ABS*	00000000 _edata
10113260 g       *ABS*	00000000 _end
101096bc g     F .text	00000164 __fputwc
10100244 g       *ABS*	00000000 __ram_exceptions_end
1010dffc g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
1010e98c g     F .text	000000a4 alt_ic_irq_disable
10107c3c g     F .text	0000007c __swrite
101115e4 g     O .rwdata	00000004 __malloc_trim_threshold
101056fc g     F .text	0000000c __locale_msgcharset
1010f480 g     F .text	00000038 exit
101055a0 g     F .text	000000c4 _fwalk_reent
10106ee0 g     F .text	000001fc __mdiff
1010a8a8 g     F .text	00000074 .hidden __modsi3
10120000 g       *ABS*	00000000 __alt_data_end
10100020 g     F .exceptions	00000000 alt_exception
10104bb0 g     F .text	00000004 __sfp_lock_release
1010f7cc g     F .text	00000034 _exit
1010e52c g     F .text	00000140 alt_alarm_start
10105740 g     F .text	000001bc __smakebuf_r
10100860 g     F .text	00000098 strlen
1010edc8 g     F .text	00000158 open
1010bbf4 g     F .text	000000dc .hidden __gedf2
101115e8 g     O .rwdata	00000004 __wctomb
10107ef4 g     F .text	00000018 __sprint_r
1010e868 g     F .text	00000034 alt_icache_flush_all
10111608 g     O .rwdata	00000004 alt_priority_mask
1010e8ec g     F .text	000000a0 alt_ic_irq_enable
10102af0 g     F .text	0000001c __vfprintf_internal
10109d18 g     F .text	0000005c _wctomb_r
1010c4dc g     F .text	000008fc .hidden __subdf3
10106914 g     F .text	000000b0 __lo0bits
1011160c g     O .rwdata	00000008 alt_alarm_list
1010e7a8 g     F .text	00000060 _do_ctors
10109c28 g     F .text	000000c0 wcrtomb
1010d090 g     F .text	000000d0 close
1010d3e8 g     F .text	00000084 alt_load
10109844 g     F .text	00000080 fputwc
10104bb4 g     F .text	00000004 __sinit_lock_acquire
10106688 g     F .text	00000120 __multadd
10106660 g     F .text	00000028 _Bfree



Disassembly of section .entry:

10100000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
10100000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
10100004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
10100008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
1010000c:	00bffd16 	blt	zero,r2,10100004 <__alt_data_end+0xfffe0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10100010:	00440434 	movhi	at,4112
    ori r1, r1, %lo(_start)
10100014:	08409114 	ori	at,at,580
    jmp r1
10100018:	0800683a 	jmp	at
1010001c:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>

Disassembly of section .exceptions:

10100020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10100020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10100024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10100028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1010002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10100030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10100034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10100038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1010003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10100040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10100044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10100048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1010004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10100050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10100054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10100058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1010005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10100060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10100064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10100068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1010006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10100070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10100074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10100078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1010007c:	10000326 	beq	r2,zero,1010008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10100080:	20000226 	beq	r4,zero,1010008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10100084:	01000fc0 	call	101000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10100088:	00000706 	br	101000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1010008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10100090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10100094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10100098:	01001d00 	call	101001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1010009c:	1000021e 	bne	r2,zero,101000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
101000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
101000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
101000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
101000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
101000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
101000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
101000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
101000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
101000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
101000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
101000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
101000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
101000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
101000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
101000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
101000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
101000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
101000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
101000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
101000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
101000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
101000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
101000f8:	ef80083a 	eret

101000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
101000fc:	defff904 	addi	sp,sp,-28
10100100:	dfc00615 	stw	ra,24(sp)
10100104:	df000515 	stw	fp,20(sp)
10100108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1010010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10100110:	0005313a 	rdctl	r2,ipending
10100114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10100118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1010011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10100120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10100124:	00800044 	movi	r2,1
10100128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1010012c:	e0fffb17 	ldw	r3,-20(fp)
10100130:	e0bffc17 	ldw	r2,-16(fp)
10100134:	1884703a 	and	r2,r3,r2
10100138:	10001426 	beq	r2,zero,1010018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1010013c:	00840474 	movhi	r2,4113
10100140:	108c5804 	addi	r2,r2,12640
10100144:	e0fffd17 	ldw	r3,-12(fp)
10100148:	180690fa 	slli	r3,r3,3
1010014c:	10c5883a 	add	r2,r2,r3
10100150:	10c00017 	ldw	r3,0(r2)
10100154:	00840474 	movhi	r2,4113
10100158:	108c5804 	addi	r2,r2,12640
1010015c:	e13ffd17 	ldw	r4,-12(fp)
10100160:	200890fa 	slli	r4,r4,3
10100164:	1105883a 	add	r2,r2,r4
10100168:	10800104 	addi	r2,r2,4
1010016c:	10800017 	ldw	r2,0(r2)
10100170:	1009883a 	mov	r4,r2
10100174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10100178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1010017c:	0005313a 	rdctl	r2,ipending
10100180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10100184:	e0bfff17 	ldw	r2,-4(fp)
10100188:	00000706 	br	101001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1010018c:	e0bffc17 	ldw	r2,-16(fp)
10100190:	1085883a 	add	r2,r2,r2
10100194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10100198:	e0bffd17 	ldw	r2,-12(fp)
1010019c:	10800044 	addi	r2,r2,1
101001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
101001a4:	003fe106 	br	1010012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
101001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
101001ac:	e0bffb17 	ldw	r2,-20(fp)
101001b0:	103fdb1e 	bne	r2,zero,10100120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
101001b4:	0001883a 	nop
}
101001b8:	0001883a 	nop
101001bc:	e037883a 	mov	sp,fp
101001c0:	dfc00117 	ldw	ra,4(sp)
101001c4:	df000017 	ldw	fp,0(sp)
101001c8:	dec00204 	addi	sp,sp,8
101001cc:	f800283a 	ret

101001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
101001d0:	defffb04 	addi	sp,sp,-20
101001d4:	dfc00415 	stw	ra,16(sp)
101001d8:	df000315 	stw	fp,12(sp)
101001dc:	df000304 	addi	fp,sp,12
101001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
101001e4:	000531fa 	rdctl	r2,exception
101001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
101001ec:	e0bffd17 	ldw	r2,-12(fp)
101001f0:	10801f0c 	andi	r2,r2,124
101001f4:	1004d0ba 	srli	r2,r2,2
101001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
101001fc:	0005333a 	rdctl	r2,badaddr
10100200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
10100204:	d0a6d817 	ldw	r2,-25760(gp)
10100208:	10000726 	beq	r2,zero,10100228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
1010020c:	d0a6d817 	ldw	r2,-25760(gp)
10100210:	e0fffd17 	ldw	r3,-12(fp)
10100214:	e1bffe17 	ldw	r6,-8(fp)
10100218:	e17fff17 	ldw	r5,-4(fp)
1010021c:	1809883a 	mov	r4,r3
10100220:	103ee83a 	callr	r2
10100224:	00000206 	br	10100230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10100228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
1010022c:	0005883a 	mov	r2,zero
}
10100230:	e037883a 	mov	sp,fp
10100234:	dfc00117 	ldw	ra,4(sp)
10100238:	df000017 	ldw	fp,0(sp)
1010023c:	dec00204 	addi	sp,sp,8
10100240:	f800283a 	ret

Disassembly of section .text:

10100244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
10100244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
10100248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
1010024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
10100250:	00bffd16 	blt	zero,r2,10100248 <__alt_data_end+0xfffe0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10100254:	06c404b4 	movhi	sp,4114
    ori sp, sp, %lo(__alt_stack_pointer)
10100258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
1010025c:	06840474 	movhi	gp,4113
    ori gp, gp, %lo(_gp)
10100260:	d6a57514 	ori	gp,gp,38356
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10100264:	00840474 	movhi	r2,4113
    ori r2, r2, %lo(__bss_start)
10100268:	108c4014 	ori	r2,r2,12544

    movhi r3, %hi(__bss_end)
1010026c:	00c40474 	movhi	r3,4113
    ori r3, r3, %lo(__bss_end)
10100270:	18cc9814 	ori	r3,r3,12896

    beq r2, r3, 1f
10100274:	10c00326 	beq	r2,r3,10100284 <_start+0x40>

0:
    stw zero, (r2)
10100278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
1010027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
10100280:	10fffd36 	bltu	r2,r3,10100278 <__alt_data_end+0xfffe0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10100284:	010d3e80 	call	1010d3e8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10100288:	010d5900 	call	1010d590 <alt_main>

1010028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
1010028c:	003fff06 	br	1010028c <__alt_data_end+0xfffe028c>

10100290 <LCD_WR_REG>:
//#include "altera_avalon_pio_regs.h"
#include "io.h"
#include "system.h"


void LCD_WR_REG(int cmd) {
10100290:	defffe04 	addi	sp,sp,-8
10100294:	df000115 	stw	fp,4(sp)
10100298:	df000104 	addi	fp,sp,4
1010029c:	e13fff15 	stw	r4,-4(fp)

	IOWR_32DIRECT(LT24_0_BASE, 0, cmd);
101002a0:	00840034 	movhi	r2,4096
101002a4:	10820404 	addi	r2,r2,2064
101002a8:	e0ffff17 	ldw	r3,-4(fp)
101002ac:	10c00035 	stwio	r3,0(r2)

}
101002b0:	0001883a 	nop
101002b4:	e037883a 	mov	sp,fp
101002b8:	df000017 	ldw	fp,0(sp)
101002bc:	dec00104 	addi	sp,sp,4
101002c0:	f800283a 	ret

101002c4 <LCD_WR_DATA>:

void LCD_WR_DATA(int data) {
101002c4:	defffe04 	addi	sp,sp,-8
101002c8:	df000115 	stw	fp,4(sp)
101002cc:	df000104 	addi	fp,sp,4
101002d0:	e13fff15 	stw	r4,-4(fp)
	IOWR_32DIRECT(LT24_0_BASE, 1, data);
101002d4:	00840034 	movhi	r2,4096
101002d8:	10820444 	addi	r2,r2,2065
101002dc:	e0ffff17 	ldw	r3,-4(fp)
101002e0:	10c00035 	stwio	r3,0(r2)
}
101002e4:	0001883a 	nop
101002e8:	e037883a 	mov	sp,fp
101002ec:	df000017 	ldw	fp,0(sp)
101002f0:	dec00104 	addi	sp,sp,4
101002f4:	f800283a 	ret

101002f8 <LCD_RST>:

void LCD_RST(){
101002f8:	deffff04 	addi	sp,sp,-4
101002fc:	df000015 	stw	fp,0(sp)
10100300:	d839883a 	mov	fp,sp
	IOWR_32DIRECT(LT24_0_BASE, 2, '0x0080');
10100304:	00cc0c34 	movhi	r3,12336
10100308:	18ce0c04 	addi	r3,r3,14384
1010030c:	00840034 	movhi	r2,4096
10100310:	10820484 	addi	r2,r2,2066
10100314:	10c00035 	stwio	r3,0(r2)
}
10100318:	0001883a 	nop
1010031c:	e037883a 	mov	sp,fp
10100320:	df000017 	ldw	fp,0(sp)
10100324:	dec00104 	addi	sp,sp,4
10100328:	f800283a 	ret

1010032c <LCD_Init>:



void LCD_Init()
{
1010032c:	defffe04 	addi	sp,sp,-8
10100330:	dfc00115 	stw	ra,4(sp)
10100334:	df000015 	stw	fp,0(sp)
10100338:	d839883a 	mov	fp,sp

	LCD_RST();
1010033c:	01002f80 	call	101002f8 <LCD_RST>
	//Delay_Ms(120);       // Delay 120 ms
//	Clr_LCD_CS;



	LCD_WR_REG(0x0011); //Exit Sleep
10100340:	01000444 	movi	r4,17
10100344:	01002900 	call	10100290 <LCD_WR_REG>
	LCD_WR_REG(0x00CF);
10100348:	010033c4 	movi	r4,207
1010034c:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0000);
10100350:	0009883a 	mov	r4,zero
10100354:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0081);
10100358:	01002044 	movi	r4,129
1010035c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0X00c0);
10100360:	01003004 	movi	r4,192
10100364:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00ED);
10100368:	01003b44 	movi	r4,237
1010036c:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0064);
10100370:	01001904 	movi	r4,100
10100374:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0003);
10100378:	010000c4 	movi	r4,3
1010037c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0X0012);
10100380:	01000484 	movi	r4,18
10100384:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0X0081);
10100388:	01002044 	movi	r4,129
1010038c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00E8);
10100390:	01003a04 	movi	r4,232
10100394:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0085);
10100398:	01002144 	movi	r4,133
1010039c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0001);
101003a0:	01000044 	movi	r4,1
101003a4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x00798);
101003a8:	0101e604 	movi	r4,1944
101003ac:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00CB);
101003b0:	010032c4 	movi	r4,203
101003b4:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0039);
101003b8:	01000e44 	movi	r4,57
101003bc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x002C);
101003c0:	01000b04 	movi	r4,44
101003c4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0000);
101003c8:	0009883a 	mov	r4,zero
101003cc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0034);
101003d0:	01000d04 	movi	r4,52
101003d4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0002);
101003d8:	01000084 	movi	r4,2
101003dc:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00F7);
101003e0:	01003dc4 	movi	r4,247
101003e4:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0020);
101003e8:	01000804 	movi	r4,32
101003ec:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00EA);
101003f0:	01003a84 	movi	r4,234
101003f4:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0000);
101003f8:	0009883a 	mov	r4,zero
101003fc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0000);
10100400:	0009883a 	mov	r4,zero
10100404:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00B1);
10100408:	01002c44 	movi	r4,177
1010040c:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0000);
10100410:	0009883a 	mov	r4,zero
10100414:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x001b);
10100418:	010006c4 	movi	r4,27
1010041c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00B6);
10100420:	01002d84 	movi	r4,182
10100424:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x000A);
10100428:	01000284 	movi	r4,10
1010042c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x00A2);
10100430:	01002884 	movi	r4,162
10100434:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00C0);    //Power control
10100438:	01003004 	movi	r4,192
1010043c:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0005);   //VRH[5:0]
10100440:	01000144 	movi	r4,5
10100444:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00C1);    //Power control
10100448:	01003044 	movi	r4,193
1010044c:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0011);   //SAP[2:0];BT[3:0]
10100450:	01000444 	movi	r4,17
10100454:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00C5);    //VCM control
10100458:	01003144 	movi	r4,197
1010045c:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0045);       //3F
10100460:	01001144 	movi	r4,69
10100464:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0045);       //3C
10100468:	01001144 	movi	r4,69
1010046c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	 LCD_WR_REG(0x00C7);    //VCM control2
10100470:	010031c4 	movi	r4,199
10100474:	01002900 	call	10100290 <LCD_WR_REG>
		 LCD_WR_DATA(0X00a2);
10100478:	01002884 	movi	r4,162
1010047c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	 LCD_WR_REG(0x0036);    // Memory Access Control will be overwritten below
10100480:	01000d84 	movi	r4,54
10100484:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0008);//48
10100488:	01000204 	movi	r4,8
1010048c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00F2);    // 3Gamma Function Disable
10100490:	01003c84 	movi	r4,242
10100494:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0000);
10100498:	0009883a 	mov	r4,zero
1010049c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x0026);    //Gamma curve selected
101004a0:	01000984 	movi	r4,38
101004a4:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0001);
101004a8:	01000044 	movi	r4,1
101004ac:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00E0);    //Set Gamma
101004b0:	01003804 	movi	r4,224
101004b4:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x000F);
101004b8:	010003c4 	movi	r4,15
101004bc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0026);
101004c0:	01000984 	movi	r4,38
101004c4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0024);
101004c8:	01000904 	movi	r4,36
101004cc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x000b);
101004d0:	010002c4 	movi	r4,11
101004d4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x000E);
101004d8:	01000384 	movi	r4,14
101004dc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0008);
101004e0:	01000204 	movi	r4,8
101004e4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x004b);
101004e8:	010012c4 	movi	r4,75
101004ec:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0X00a8);
101004f0:	01002a04 	movi	r4,168
101004f4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x003b);
101004f8:	01000ec4 	movi	r4,59
101004fc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x000a);
10100500:	01000284 	movi	r4,10
10100504:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0014);
10100508:	01000504 	movi	r4,20
1010050c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0006);
10100510:	01000184 	movi	r4,6
10100514:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0010);
10100518:	01000404 	movi	r4,16
1010051c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0009);
10100520:	01000244 	movi	r4,9
10100524:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0000);
10100528:	0009883a 	mov	r4,zero
1010052c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0X00E1);    //Set Gamma
10100530:	01003844 	movi	r4,225
10100534:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0000);
10100538:	0009883a 	mov	r4,zero
1010053c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x001c);
10100540:	01000704 	movi	r4,28
10100544:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0020);
10100548:	01000804 	movi	r4,32
1010054c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0004);
10100550:	01000104 	movi	r4,4
10100554:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0010);
10100558:	01000404 	movi	r4,16
1010055c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0008);
10100560:	01000204 	movi	r4,8
10100564:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0034);
10100568:	01000d04 	movi	r4,52
1010056c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0047);
10100570:	010011c4 	movi	r4,71
10100574:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0044);
10100578:	01001104 	movi	r4,68
1010057c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0005);
10100580:	01000144 	movi	r4,5
10100584:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x000b);
10100588:	010002c4 	movi	r4,11
1010058c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0009);
10100590:	01000244 	movi	r4,9
10100594:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x002f);
10100598:	01000bc4 	movi	r4,47
1010059c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0036);
101005a0:	01000d84 	movi	r4,54
101005a4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x000f);
101005a8:	010003c4 	movi	r4,15
101005ac:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x002A);
101005b0:	01000a84 	movi	r4,42
101005b4:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0000);
101005b8:	0009883a 	mov	r4,zero
101005bc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0000);
101005c0:	0009883a 	mov	r4,zero
101005c4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0000);
101005c8:	0009883a 	mov	r4,zero
101005cc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x00ef);
101005d0:	01003bc4 	movi	r4,239
101005d4:	01002c40 	call	101002c4 <LCD_WR_DATA>

	 LCD_WR_REG(0x002B);
101005d8:	01000ac4 	movi	r4,43
101005dc:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0000);
101005e0:	0009883a 	mov	r4,zero
101005e4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0000);
101005e8:	0009883a 	mov	r4,zero
101005ec:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0001);
101005f0:	01000044 	movi	r4,1
101005f4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x003f);
101005f8:	01000fc4 	movi	r4,63
101005fc:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x003A);
10100600:	01000e84 	movi	r4,58
10100604:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0055);
10100608:	01001544 	movi	r4,85
1010060c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00f6);
10100610:	01003d84 	movi	r4,246
10100614:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0001);
10100618:	01000044 	movi	r4,1
1010061c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0030);
10100620:	01000c04 	movi	r4,48
10100624:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0000);
10100628:	0009883a 	mov	r4,zero
1010062c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	// Change MADCTL
    // Set LCD in reverse mode (row/column) exchange:  MADCTL B5='1'
    // BGR: MADCTL B3='1'
	LCD_WR_REG(0x0036);    // Memory Access Control will be overwritten below
10100630:	01000d84 	movi	r4,54
10100634:	01002900 	call	10100290 <LCD_WR_REG>
	LCD_WR_DATA(0x0028);
10100638:	01000a04 	movi	r4,40
1010063c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x0029); //display on
10100640:	01000a44 	movi	r4,41
10100644:	01002900 	call	10100290 <LCD_WR_REG>

	LCD_WR_REG(0x002c);    // 0x2C
10100648:	01000b04 	movi	r4,44
1010064c:	01002900 	call	10100290 <LCD_WR_REG>



}
10100650:	0001883a 	nop
10100654:	e037883a 	mov	sp,fp
10100658:	dfc00117 	ldw	ra,4(sp)
1010065c:	df000017 	ldw	fp,0(sp)
10100660:	dec00204 	addi	sp,sp,8
10100664:	f800283a 	ret

10100668 <main>:

int main()
{
10100668:	defffc04 	addi	sp,sp,-16
1010066c:	dfc00315 	stw	ra,12(sp)
10100670:	df000215 	stw	fp,8(sp)
10100674:	df000204 	addi	fp,sp,8

printf("HERE");
10100678:	01040474 	movhi	r4,4113
1010067c:	213e0004 	addi	r4,r4,-2048
10100680:	01007500 	call	10100750 <printf>
 // LCD_Init();


  while(1){
	  //printf("floopooop");
	  IOWR_32DIRECT(LT24_0_BASE, 3*4, 0x5678);
10100684:	00d59e04 	movi	r3,22136
10100688:	00840034 	movhi	r2,4096
1010068c:	10820704 	addi	r2,r2,2076
10100690:	10c00035 	stwio	r3,0(r2)

	  printf("send");
10100694:	01040474 	movhi	r4,4113
10100698:	213e0204 	addi	r4,r4,-2040
1010069c:	01007500 	call	10100750 <printf>
	  int delay = 0;
101006a0:	e03ffe15 	stw	zero,-8(fp)
	 // printf("looping");
	  while(delay < 10000){
101006a4:	00000306 	br	101006b4 <main+0x4c>
		//  printf("looping");
		  delay++;
101006a8:	e0bffe17 	ldw	r2,-8(fp)
101006ac:	10800044 	addi	r2,r2,1
101006b0:	e0bffe15 	stw	r2,-8(fp)
	  IOWR_32DIRECT(LT24_0_BASE, 3*4, 0x5678);

	  printf("send");
	  int delay = 0;
	 // printf("looping");
	  while(delay < 10000){
101006b4:	e0bffe17 	ldw	r2,-8(fp)
101006b8:	1089c410 	cmplti	r2,r2,10000
101006bc:	103ffa1e 	bne	r2,zero,101006a8 <__alt_data_end+0xfffe06a8>
		//  printf("looping");
		  delay++;
	  }
	  printf("poll");
101006c0:	01040474 	movhi	r4,4113
101006c4:	213e0404 	addi	r4,r4,-2032
101006c8:	01007500 	call	10100750 <printf>
	  //IOWR_32DIRECT(LT24_0_BASE, 3*4, 0x5678);
	  int test = IORD_32DIRECT(LT24_0_BASE, 3*4)+1;
101006cc:	00840034 	movhi	r2,4096
101006d0:	10820704 	addi	r2,r2,2076
101006d4:	10800037 	ldwio	r2,0(r2)
101006d8:	10800044 	addi	r2,r2,1
101006dc:	e0bfff15 	stw	r2,-4(fp)
	  printf("received \n");
101006e0:	01040474 	movhi	r4,4113
101006e4:	213e0604 	addi	r4,r4,-2024
101006e8:	010084c0 	call	1010084c <puts>

	   delay = 0;
101006ec:	e03ffe15 	stw	zero,-8(fp)
	  while(delay < 100){
101006f0:	00000306 	br	10100700 <main+0x98>
	  		//  printf("looping");
	  		  delay++;
101006f4:	e0bffe17 	ldw	r2,-8(fp)
101006f8:	10800044 	addi	r2,r2,1
101006fc:	e0bffe15 	stw	r2,-8(fp)
	  //IOWR_32DIRECT(LT24_0_BASE, 3*4, 0x5678);
	  int test = IORD_32DIRECT(LT24_0_BASE, 3*4)+1;
	  printf("received \n");

	   delay = 0;
	  while(delay < 100){
10100700:	e0bffe17 	ldw	r2,-8(fp)
10100704:	10801910 	cmplti	r2,r2,100
10100708:	103ffa1e 	bne	r2,zero,101006f4 <__alt_data_end+0xfffe06f4>
	  		//  printf("looping");
	  		  delay++;
	  	  }
	  printf("%d", test);
1010070c:	e17fff17 	ldw	r5,-4(fp)
10100710:	01040474 	movhi	r4,4113
10100714:	213e0904 	addi	r4,r4,-2012
10100718:	01007500 	call	10100750 <printf>

  }
1010071c:	003fd906 	br	10100684 <__alt_data_end+0xfffe0684>

10100720 <_printf_r>:
10100720:	defffd04 	addi	sp,sp,-12
10100724:	2805883a 	mov	r2,r5
10100728:	dfc00015 	stw	ra,0(sp)
1010072c:	d9800115 	stw	r6,4(sp)
10100730:	d9c00215 	stw	r7,8(sp)
10100734:	21400217 	ldw	r5,8(r4)
10100738:	d9c00104 	addi	r7,sp,4
1010073c:	100d883a 	mov	r6,r2
10100740:	01008f80 	call	101008f8 <___vfprintf_internal_r>
10100744:	dfc00017 	ldw	ra,0(sp)
10100748:	dec00304 	addi	sp,sp,12
1010074c:	f800283a 	ret

10100750 <printf>:
10100750:	defffc04 	addi	sp,sp,-16
10100754:	dfc00015 	stw	ra,0(sp)
10100758:	d9400115 	stw	r5,4(sp)
1010075c:	d9800215 	stw	r6,8(sp)
10100760:	d9c00315 	stw	r7,12(sp)
10100764:	00840474 	movhi	r2,4113
10100768:	10857604 	addi	r2,r2,5592
1010076c:	10800017 	ldw	r2,0(r2)
10100770:	200b883a 	mov	r5,r4
10100774:	d9800104 	addi	r6,sp,4
10100778:	11000217 	ldw	r4,8(r2)
1010077c:	0102af00 	call	10102af0 <__vfprintf_internal>
10100780:	dfc00017 	ldw	ra,0(sp)
10100784:	dec00404 	addi	sp,sp,16
10100788:	f800283a 	ret

1010078c <_puts_r>:
1010078c:	defff604 	addi	sp,sp,-40
10100790:	dc000715 	stw	r16,28(sp)
10100794:	2021883a 	mov	r16,r4
10100798:	2809883a 	mov	r4,r5
1010079c:	dc400815 	stw	r17,32(sp)
101007a0:	dfc00915 	stw	ra,36(sp)
101007a4:	2823883a 	mov	r17,r5
101007a8:	01008600 	call	10100860 <strlen>
101007ac:	10c00044 	addi	r3,r2,1
101007b0:	d8800115 	stw	r2,4(sp)
101007b4:	00840474 	movhi	r2,4113
101007b8:	10be0a04 	addi	r2,r2,-2008
101007bc:	d8800215 	stw	r2,8(sp)
101007c0:	00800044 	movi	r2,1
101007c4:	d8800315 	stw	r2,12(sp)
101007c8:	00800084 	movi	r2,2
101007cc:	dc400015 	stw	r17,0(sp)
101007d0:	d8c00615 	stw	r3,24(sp)
101007d4:	dec00415 	stw	sp,16(sp)
101007d8:	d8800515 	stw	r2,20(sp)
101007dc:	80000226 	beq	r16,zero,101007e8 <_puts_r+0x5c>
101007e0:	80800e17 	ldw	r2,56(r16)
101007e4:	10001426 	beq	r2,zero,10100838 <_puts_r+0xac>
101007e8:	81400217 	ldw	r5,8(r16)
101007ec:	2880030b 	ldhu	r2,12(r5)
101007f0:	10c8000c 	andi	r3,r2,8192
101007f4:	1800061e 	bne	r3,zero,10100810 <_puts_r+0x84>
101007f8:	29001917 	ldw	r4,100(r5)
101007fc:	00f7ffc4 	movi	r3,-8193
10100800:	10880014 	ori	r2,r2,8192
10100804:	20c6703a 	and	r3,r4,r3
10100808:	2880030d 	sth	r2,12(r5)
1010080c:	28c01915 	stw	r3,100(r5)
10100810:	d9800404 	addi	r6,sp,16
10100814:	8009883a 	mov	r4,r16
10100818:	01050200 	call	10105020 <__sfvwrite_r>
1010081c:	1000091e 	bne	r2,zero,10100844 <_puts_r+0xb8>
10100820:	00800284 	movi	r2,10
10100824:	dfc00917 	ldw	ra,36(sp)
10100828:	dc400817 	ldw	r17,32(sp)
1010082c:	dc000717 	ldw	r16,28(sp)
10100830:	dec00a04 	addi	sp,sp,40
10100834:	f800283a 	ret
10100838:	8009883a 	mov	r4,r16
1010083c:	0104b9c0 	call	10104b9c <__sinit>
10100840:	003fe906 	br	101007e8 <__alt_data_end+0xfffe07e8>
10100844:	00bfffc4 	movi	r2,-1
10100848:	003ff606 	br	10100824 <__alt_data_end+0xfffe0824>

1010084c <puts>:
1010084c:	00840474 	movhi	r2,4113
10100850:	10857604 	addi	r2,r2,5592
10100854:	200b883a 	mov	r5,r4
10100858:	11000017 	ldw	r4,0(r2)
1010085c:	010078c1 	jmpi	1010078c <_puts_r>

10100860 <strlen>:
10100860:	208000cc 	andi	r2,r4,3
10100864:	10002026 	beq	r2,zero,101008e8 <strlen+0x88>
10100868:	20800007 	ldb	r2,0(r4)
1010086c:	10002026 	beq	r2,zero,101008f0 <strlen+0x90>
10100870:	2005883a 	mov	r2,r4
10100874:	00000206 	br	10100880 <strlen+0x20>
10100878:	10c00007 	ldb	r3,0(r2)
1010087c:	18001826 	beq	r3,zero,101008e0 <strlen+0x80>
10100880:	10800044 	addi	r2,r2,1
10100884:	10c000cc 	andi	r3,r2,3
10100888:	183ffb1e 	bne	r3,zero,10100878 <__alt_data_end+0xfffe0878>
1010088c:	10c00017 	ldw	r3,0(r2)
10100890:	01ffbff4 	movhi	r7,65279
10100894:	39ffbfc4 	addi	r7,r7,-257
10100898:	00ca303a 	nor	r5,zero,r3
1010089c:	01a02074 	movhi	r6,32897
101008a0:	19c7883a 	add	r3,r3,r7
101008a4:	31a02004 	addi	r6,r6,-32640
101008a8:	1946703a 	and	r3,r3,r5
101008ac:	1986703a 	and	r3,r3,r6
101008b0:	1800091e 	bne	r3,zero,101008d8 <strlen+0x78>
101008b4:	10800104 	addi	r2,r2,4
101008b8:	10c00017 	ldw	r3,0(r2)
101008bc:	19cb883a 	add	r5,r3,r7
101008c0:	00c6303a 	nor	r3,zero,r3
101008c4:	28c6703a 	and	r3,r5,r3
101008c8:	1986703a 	and	r3,r3,r6
101008cc:	183ff926 	beq	r3,zero,101008b4 <__alt_data_end+0xfffe08b4>
101008d0:	00000106 	br	101008d8 <strlen+0x78>
101008d4:	10800044 	addi	r2,r2,1
101008d8:	10c00007 	ldb	r3,0(r2)
101008dc:	183ffd1e 	bne	r3,zero,101008d4 <__alt_data_end+0xfffe08d4>
101008e0:	1105c83a 	sub	r2,r2,r4
101008e4:	f800283a 	ret
101008e8:	2005883a 	mov	r2,r4
101008ec:	003fe706 	br	1010088c <__alt_data_end+0xfffe088c>
101008f0:	0005883a 	mov	r2,zero
101008f4:	f800283a 	ret

101008f8 <___vfprintf_internal_r>:
101008f8:	deffb804 	addi	sp,sp,-288
101008fc:	dfc04715 	stw	ra,284(sp)
10100900:	ddc04515 	stw	r23,276(sp)
10100904:	dd404315 	stw	r21,268(sp)
10100908:	d9002c15 	stw	r4,176(sp)
1010090c:	282f883a 	mov	r23,r5
10100910:	302b883a 	mov	r21,r6
10100914:	d9c02d15 	stw	r7,180(sp)
10100918:	df004615 	stw	fp,280(sp)
1010091c:	dd804415 	stw	r22,272(sp)
10100920:	dd004215 	stw	r20,264(sp)
10100924:	dcc04115 	stw	r19,260(sp)
10100928:	dc804015 	stw	r18,256(sp)
1010092c:	dc403f15 	stw	r17,252(sp)
10100930:	dc003e15 	stw	r16,248(sp)
10100934:	01057100 	call	10105710 <_localeconv_r>
10100938:	10800017 	ldw	r2,0(r2)
1010093c:	1009883a 	mov	r4,r2
10100940:	d8803415 	stw	r2,208(sp)
10100944:	01008600 	call	10100860 <strlen>
10100948:	d8803715 	stw	r2,220(sp)
1010094c:	d8802c17 	ldw	r2,176(sp)
10100950:	10000226 	beq	r2,zero,1010095c <___vfprintf_internal_r+0x64>
10100954:	10800e17 	ldw	r2,56(r2)
10100958:	1000f926 	beq	r2,zero,10100d40 <___vfprintf_internal_r+0x448>
1010095c:	b880030b 	ldhu	r2,12(r23)
10100960:	10c8000c 	andi	r3,r2,8192
10100964:	1800061e 	bne	r3,zero,10100980 <___vfprintf_internal_r+0x88>
10100968:	b9001917 	ldw	r4,100(r23)
1010096c:	00f7ffc4 	movi	r3,-8193
10100970:	10880014 	ori	r2,r2,8192
10100974:	20c6703a 	and	r3,r4,r3
10100978:	b880030d 	sth	r2,12(r23)
1010097c:	b8c01915 	stw	r3,100(r23)
10100980:	10c0020c 	andi	r3,r2,8
10100984:	1800c126 	beq	r3,zero,10100c8c <___vfprintf_internal_r+0x394>
10100988:	b8c00417 	ldw	r3,16(r23)
1010098c:	1800bf26 	beq	r3,zero,10100c8c <___vfprintf_internal_r+0x394>
10100990:	1080068c 	andi	r2,r2,26
10100994:	00c00284 	movi	r3,10
10100998:	10c0c426 	beq	r2,r3,10100cac <___vfprintf_internal_r+0x3b4>
1010099c:	d8c00404 	addi	r3,sp,16
101009a0:	05040474 	movhi	r20,4113
101009a4:	d9001e04 	addi	r4,sp,120
101009a8:	a53e1b84 	addi	r20,r20,-1938
101009ac:	d8c01e15 	stw	r3,120(sp)
101009b0:	d8002015 	stw	zero,128(sp)
101009b4:	d8001f15 	stw	zero,124(sp)
101009b8:	d8003315 	stw	zero,204(sp)
101009bc:	d8003615 	stw	zero,216(sp)
101009c0:	d8003815 	stw	zero,224(sp)
101009c4:	1811883a 	mov	r8,r3
101009c8:	d8003915 	stw	zero,228(sp)
101009cc:	d8003a15 	stw	zero,232(sp)
101009d0:	d8002f15 	stw	zero,188(sp)
101009d4:	d9002815 	stw	r4,160(sp)
101009d8:	a8800007 	ldb	r2,0(r21)
101009dc:	10027b26 	beq	r2,zero,101013cc <___vfprintf_internal_r+0xad4>
101009e0:	00c00944 	movi	r3,37
101009e4:	a821883a 	mov	r16,r21
101009e8:	10c0021e 	bne	r2,r3,101009f4 <___vfprintf_internal_r+0xfc>
101009ec:	00001406 	br	10100a40 <___vfprintf_internal_r+0x148>
101009f0:	10c00326 	beq	r2,r3,10100a00 <___vfprintf_internal_r+0x108>
101009f4:	84000044 	addi	r16,r16,1
101009f8:	80800007 	ldb	r2,0(r16)
101009fc:	103ffc1e 	bne	r2,zero,101009f0 <__alt_data_end+0xfffe09f0>
10100a00:	8563c83a 	sub	r17,r16,r21
10100a04:	88000e26 	beq	r17,zero,10100a40 <___vfprintf_internal_r+0x148>
10100a08:	d8c02017 	ldw	r3,128(sp)
10100a0c:	d8801f17 	ldw	r2,124(sp)
10100a10:	45400015 	stw	r21,0(r8)
10100a14:	1c47883a 	add	r3,r3,r17
10100a18:	10800044 	addi	r2,r2,1
10100a1c:	d8c02015 	stw	r3,128(sp)
10100a20:	44400115 	stw	r17,4(r8)
10100a24:	d8801f15 	stw	r2,124(sp)
10100a28:	00c001c4 	movi	r3,7
10100a2c:	1880a716 	blt	r3,r2,10100ccc <___vfprintf_internal_r+0x3d4>
10100a30:	42000204 	addi	r8,r8,8
10100a34:	d9402f17 	ldw	r5,188(sp)
10100a38:	2c4b883a 	add	r5,r5,r17
10100a3c:	d9402f15 	stw	r5,188(sp)
10100a40:	80800007 	ldb	r2,0(r16)
10100a44:	1000a826 	beq	r2,zero,10100ce8 <___vfprintf_internal_r+0x3f0>
10100a48:	84400047 	ldb	r17,1(r16)
10100a4c:	00bfffc4 	movi	r2,-1
10100a50:	85400044 	addi	r21,r16,1
10100a54:	d8002785 	stb	zero,158(sp)
10100a58:	0007883a 	mov	r3,zero
10100a5c:	000f883a 	mov	r7,zero
10100a60:	d8802915 	stw	r2,164(sp)
10100a64:	d8003115 	stw	zero,196(sp)
10100a68:	0025883a 	mov	r18,zero
10100a6c:	01401604 	movi	r5,88
10100a70:	01800244 	movi	r6,9
10100a74:	02800a84 	movi	r10,42
10100a78:	02401b04 	movi	r9,108
10100a7c:	ad400044 	addi	r21,r21,1
10100a80:	88bff804 	addi	r2,r17,-32
10100a84:	28830436 	bltu	r5,r2,10101698 <___vfprintf_internal_r+0xda0>
10100a88:	100490ba 	slli	r2,r2,2
10100a8c:	01040434 	movhi	r4,4112
10100a90:	2102a804 	addi	r4,r4,2720
10100a94:	1105883a 	add	r2,r2,r4
10100a98:	10800017 	ldw	r2,0(r2)
10100a9c:	1000683a 	jmp	r2
10100aa0:	101015b8 	rdprs	zero,r2,16470
10100aa4:	10101698 	cmpnei	zero,r2,16474
10100aa8:	10101698 	cmpnei	zero,r2,16474
10100aac:	101015d8 	cmpnei	zero,r2,16471
10100ab0:	10101698 	cmpnei	zero,r2,16474
10100ab4:	10101698 	cmpnei	zero,r2,16474
10100ab8:	10101698 	cmpnei	zero,r2,16474
10100abc:	10101698 	cmpnei	zero,r2,16474
10100ac0:	10101698 	cmpnei	zero,r2,16474
10100ac4:	10101698 	cmpnei	zero,r2,16474
10100ac8:	10100d4c 	andi	zero,r2,16437
10100acc:	101014f4 	orhi	zero,r2,16467
10100ad0:	10101698 	cmpnei	zero,r2,16474
10100ad4:	10100c14 	ori	zero,r2,16432
10100ad8:	10100d74 	orhi	zero,r2,16437
10100adc:	10101698 	cmpnei	zero,r2,16474
10100ae0:	10100db4 	orhi	zero,r2,16438
10100ae4:	10100dc0 	call	110100dc <__alt_data_end+0xef00dc>
10100ae8:	10100dc0 	call	110100dc <__alt_data_end+0xef00dc>
10100aec:	10100dc0 	call	110100dc <__alt_data_end+0xef00dc>
10100af0:	10100dc0 	call	110100dc <__alt_data_end+0xef00dc>
10100af4:	10100dc0 	call	110100dc <__alt_data_end+0xef00dc>
10100af8:	10100dc0 	call	110100dc <__alt_data_end+0xef00dc>
10100afc:	10100dc0 	call	110100dc <__alt_data_end+0xef00dc>
10100b00:	10100dc0 	call	110100dc <__alt_data_end+0xef00dc>
10100b04:	10100dc0 	call	110100dc <__alt_data_end+0xef00dc>
10100b08:	10101698 	cmpnei	zero,r2,16474
10100b0c:	10101698 	cmpnei	zero,r2,16474
10100b10:	10101698 	cmpnei	zero,r2,16474
10100b14:	10101698 	cmpnei	zero,r2,16474
10100b18:	10101698 	cmpnei	zero,r2,16474
10100b1c:	10101698 	cmpnei	zero,r2,16474
10100b20:	10101698 	cmpnei	zero,r2,16474
10100b24:	10101698 	cmpnei	zero,r2,16474
10100b28:	10101698 	cmpnei	zero,r2,16474
10100b2c:	10101698 	cmpnei	zero,r2,16474
10100b30:	10100df4 	orhi	zero,r2,16439
10100b34:	10100eb0 	cmpltui	zero,r2,16442
10100b38:	10101698 	cmpnei	zero,r2,16474
10100b3c:	10100eb0 	cmpltui	zero,r2,16442
10100b40:	10101698 	cmpnei	zero,r2,16474
10100b44:	10101698 	cmpnei	zero,r2,16474
10100b48:	10101698 	cmpnei	zero,r2,16474
10100b4c:	10101698 	cmpnei	zero,r2,16474
10100b50:	10100f50 	cmplti	zero,r2,16445
10100b54:	10101698 	cmpnei	zero,r2,16474
10100b58:	10101698 	cmpnei	zero,r2,16474
10100b5c:	10100f5c 	xori	zero,r2,16445
10100b60:	10101698 	cmpnei	zero,r2,16474
10100b64:	10101698 	cmpnei	zero,r2,16474
10100b68:	10101698 	cmpnei	zero,r2,16474
10100b6c:	10101698 	cmpnei	zero,r2,16474
10100b70:	10101698 	cmpnei	zero,r2,16474
10100b74:	101013d4 	ori	zero,r2,16463
10100b78:	10101698 	cmpnei	zero,r2,16474
10100b7c:	10101698 	cmpnei	zero,r2,16474
10100b80:	10101434 	orhi	zero,r2,16464
10100b84:	10101698 	cmpnei	zero,r2,16474
10100b88:	10101698 	cmpnei	zero,r2,16474
10100b8c:	10101698 	cmpnei	zero,r2,16474
10100b90:	10101698 	cmpnei	zero,r2,16474
10100b94:	10101698 	cmpnei	zero,r2,16474
10100b98:	10101698 	cmpnei	zero,r2,16474
10100b9c:	10101698 	cmpnei	zero,r2,16474
10100ba0:	10101698 	cmpnei	zero,r2,16474
10100ba4:	10101698 	cmpnei	zero,r2,16474
10100ba8:	10101698 	cmpnei	zero,r2,16474
10100bac:	10101644 	addi	zero,r2,16473
10100bb0:	101015e4 	muli	zero,r2,16471
10100bb4:	10100eb0 	cmpltui	zero,r2,16442
10100bb8:	10100eb0 	cmpltui	zero,r2,16442
10100bbc:	10100eb0 	cmpltui	zero,r2,16442
10100bc0:	101015f4 	orhi	zero,r2,16471
10100bc4:	101015e4 	muli	zero,r2,16471
10100bc8:	10101698 	cmpnei	zero,r2,16474
10100bcc:	10101698 	cmpnei	zero,r2,16474
10100bd0:	10101600 	call	11010160 <__alt_data_end+0xef0160>
10100bd4:	10101698 	cmpnei	zero,r2,16474
10100bd8:	10101610 	cmplti	zero,r2,16472
10100bdc:	101014e4 	muli	zero,r2,16467
10100be0:	10100c20 	cmpeqi	zero,r2,16432
10100be4:	10101504 	addi	zero,r2,16468
10100be8:	10101698 	cmpnei	zero,r2,16474
10100bec:	10101510 	cmplti	zero,r2,16468
10100bf0:	10101698 	cmpnei	zero,r2,16474
10100bf4:	1010156c 	andhi	zero,r2,16469
10100bf8:	10101698 	cmpnei	zero,r2,16474
10100bfc:	10101698 	cmpnei	zero,r2,16474
10100c00:	1010157c 	xorhi	zero,r2,16469
10100c04:	d9003117 	ldw	r4,196(sp)
10100c08:	d8802d15 	stw	r2,180(sp)
10100c0c:	0109c83a 	sub	r4,zero,r4
10100c10:	d9003115 	stw	r4,196(sp)
10100c14:	94800114 	ori	r18,r18,4
10100c18:	ac400007 	ldb	r17,0(r21)
10100c1c:	003f9706 	br	10100a7c <__alt_data_end+0xfffe0a7c>
10100c20:	00800c04 	movi	r2,48
10100c24:	d9002d17 	ldw	r4,180(sp)
10100c28:	d9402917 	ldw	r5,164(sp)
10100c2c:	d8802705 	stb	r2,156(sp)
10100c30:	00801e04 	movi	r2,120
10100c34:	d8802745 	stb	r2,157(sp)
10100c38:	d8002785 	stb	zero,158(sp)
10100c3c:	20c00104 	addi	r3,r4,4
10100c40:	24c00017 	ldw	r19,0(r4)
10100c44:	002d883a 	mov	r22,zero
10100c48:	90800094 	ori	r2,r18,2
10100c4c:	28029a16 	blt	r5,zero,101016b8 <___vfprintf_internal_r+0xdc0>
10100c50:	00bfdfc4 	movi	r2,-129
10100c54:	90a4703a 	and	r18,r18,r2
10100c58:	d8c02d15 	stw	r3,180(sp)
10100c5c:	94800094 	ori	r18,r18,2
10100c60:	9802871e 	bne	r19,zero,10101680 <___vfprintf_internal_r+0xd88>
10100c64:	00840474 	movhi	r2,4113
10100c68:	10be1404 	addi	r2,r2,-1968
10100c6c:	d8803915 	stw	r2,228(sp)
10100c70:	04401e04 	movi	r17,120
10100c74:	d8802917 	ldw	r2,164(sp)
10100c78:	0039883a 	mov	fp,zero
10100c7c:	1001e926 	beq	r2,zero,10101424 <___vfprintf_internal_r+0xb2c>
10100c80:	0027883a 	mov	r19,zero
10100c84:	002d883a 	mov	r22,zero
10100c88:	00020506 	br	101014a0 <___vfprintf_internal_r+0xba8>
10100c8c:	d9002c17 	ldw	r4,176(sp)
10100c90:	b80b883a 	mov	r5,r23
10100c94:	0102bc80 	call	10102bc8 <__swsetup_r>
10100c98:	1005ac1e 	bne	r2,zero,1010234c <___vfprintf_internal_r+0x1a54>
10100c9c:	b880030b 	ldhu	r2,12(r23)
10100ca0:	00c00284 	movi	r3,10
10100ca4:	1080068c 	andi	r2,r2,26
10100ca8:	10ff3c1e 	bne	r2,r3,1010099c <__alt_data_end+0xfffe099c>
10100cac:	b880038f 	ldh	r2,14(r23)
10100cb0:	103f3a16 	blt	r2,zero,1010099c <__alt_data_end+0xfffe099c>
10100cb4:	d9c02d17 	ldw	r7,180(sp)
10100cb8:	d9002c17 	ldw	r4,176(sp)
10100cbc:	a80d883a 	mov	r6,r21
10100cc0:	b80b883a 	mov	r5,r23
10100cc4:	0102b0c0 	call	10102b0c <__sbprintf>
10100cc8:	00001106 	br	10100d10 <___vfprintf_internal_r+0x418>
10100ccc:	d9002c17 	ldw	r4,176(sp)
10100cd0:	d9801e04 	addi	r6,sp,120
10100cd4:	b80b883a 	mov	r5,r23
10100cd8:	0107ef40 	call	10107ef4 <__sprint_r>
10100cdc:	1000081e 	bne	r2,zero,10100d00 <___vfprintf_internal_r+0x408>
10100ce0:	da000404 	addi	r8,sp,16
10100ce4:	003f5306 	br	10100a34 <__alt_data_end+0xfffe0a34>
10100ce8:	d8802017 	ldw	r2,128(sp)
10100cec:	10000426 	beq	r2,zero,10100d00 <___vfprintf_internal_r+0x408>
10100cf0:	d9002c17 	ldw	r4,176(sp)
10100cf4:	d9801e04 	addi	r6,sp,120
10100cf8:	b80b883a 	mov	r5,r23
10100cfc:	0107ef40 	call	10107ef4 <__sprint_r>
10100d00:	b880030b 	ldhu	r2,12(r23)
10100d04:	1080100c 	andi	r2,r2,64
10100d08:	1005901e 	bne	r2,zero,1010234c <___vfprintf_internal_r+0x1a54>
10100d0c:	d8802f17 	ldw	r2,188(sp)
10100d10:	dfc04717 	ldw	ra,284(sp)
10100d14:	df004617 	ldw	fp,280(sp)
10100d18:	ddc04517 	ldw	r23,276(sp)
10100d1c:	dd804417 	ldw	r22,272(sp)
10100d20:	dd404317 	ldw	r21,268(sp)
10100d24:	dd004217 	ldw	r20,264(sp)
10100d28:	dcc04117 	ldw	r19,260(sp)
10100d2c:	dc804017 	ldw	r18,256(sp)
10100d30:	dc403f17 	ldw	r17,252(sp)
10100d34:	dc003e17 	ldw	r16,248(sp)
10100d38:	dec04804 	addi	sp,sp,288
10100d3c:	f800283a 	ret
10100d40:	d9002c17 	ldw	r4,176(sp)
10100d44:	0104b9c0 	call	10104b9c <__sinit>
10100d48:	003f0406 	br	1010095c <__alt_data_end+0xfffe095c>
10100d4c:	d8802d17 	ldw	r2,180(sp)
10100d50:	d9002d17 	ldw	r4,180(sp)
10100d54:	10800017 	ldw	r2,0(r2)
10100d58:	d8803115 	stw	r2,196(sp)
10100d5c:	20800104 	addi	r2,r4,4
10100d60:	d9003117 	ldw	r4,196(sp)
10100d64:	203fa716 	blt	r4,zero,10100c04 <__alt_data_end+0xfffe0c04>
10100d68:	d8802d15 	stw	r2,180(sp)
10100d6c:	ac400007 	ldb	r17,0(r21)
10100d70:	003f4206 	br	10100a7c <__alt_data_end+0xfffe0a7c>
10100d74:	ac400007 	ldb	r17,0(r21)
10100d78:	aac00044 	addi	r11,r21,1
10100d7c:	8a872826 	beq	r17,r10,10102a20 <___vfprintf_internal_r+0x2128>
10100d80:	88bff404 	addi	r2,r17,-48
10100d84:	0009883a 	mov	r4,zero
10100d88:	30867d36 	bltu	r6,r2,10102780 <___vfprintf_internal_r+0x1e88>
10100d8c:	5c400007 	ldb	r17,0(r11)
10100d90:	210002a4 	muli	r4,r4,10
10100d94:	5d400044 	addi	r21,r11,1
10100d98:	a817883a 	mov	r11,r21
10100d9c:	2089883a 	add	r4,r4,r2
10100da0:	88bff404 	addi	r2,r17,-48
10100da4:	30bff92e 	bgeu	r6,r2,10100d8c <__alt_data_end+0xfffe0d8c>
10100da8:	2005c916 	blt	r4,zero,101024d0 <___vfprintf_internal_r+0x1bd8>
10100dac:	d9002915 	stw	r4,164(sp)
10100db0:	003f3306 	br	10100a80 <__alt_data_end+0xfffe0a80>
10100db4:	94802014 	ori	r18,r18,128
10100db8:	ac400007 	ldb	r17,0(r21)
10100dbc:	003f2f06 	br	10100a7c <__alt_data_end+0xfffe0a7c>
10100dc0:	a809883a 	mov	r4,r21
10100dc4:	d8003115 	stw	zero,196(sp)
10100dc8:	88bff404 	addi	r2,r17,-48
10100dcc:	0017883a 	mov	r11,zero
10100dd0:	24400007 	ldb	r17,0(r4)
10100dd4:	5ac002a4 	muli	r11,r11,10
10100dd8:	ad400044 	addi	r21,r21,1
10100ddc:	a809883a 	mov	r4,r21
10100de0:	12d7883a 	add	r11,r2,r11
10100de4:	88bff404 	addi	r2,r17,-48
10100de8:	30bff92e 	bgeu	r6,r2,10100dd0 <__alt_data_end+0xfffe0dd0>
10100dec:	dac03115 	stw	r11,196(sp)
10100df0:	003f2306 	br	10100a80 <__alt_data_end+0xfffe0a80>
10100df4:	18c03fcc 	andi	r3,r3,255
10100df8:	18072b1e 	bne	r3,zero,10102aa8 <___vfprintf_internal_r+0x21b0>
10100dfc:	94800414 	ori	r18,r18,16
10100e00:	9080080c 	andi	r2,r18,32
10100e04:	10037b26 	beq	r2,zero,10101bf4 <___vfprintf_internal_r+0x12fc>
10100e08:	d9402d17 	ldw	r5,180(sp)
10100e0c:	28800117 	ldw	r2,4(r5)
10100e10:	2cc00017 	ldw	r19,0(r5)
10100e14:	29400204 	addi	r5,r5,8
10100e18:	d9402d15 	stw	r5,180(sp)
10100e1c:	102d883a 	mov	r22,r2
10100e20:	10044b16 	blt	r2,zero,10101f50 <___vfprintf_internal_r+0x1658>
10100e24:	d9402917 	ldw	r5,164(sp)
10100e28:	df002783 	ldbu	fp,158(sp)
10100e2c:	2803bc16 	blt	r5,zero,10101d20 <___vfprintf_internal_r+0x1428>
10100e30:	00ffdfc4 	movi	r3,-129
10100e34:	9d84b03a 	or	r2,r19,r22
10100e38:	90e4703a 	and	r18,r18,r3
10100e3c:	10017726 	beq	r2,zero,1010141c <___vfprintf_internal_r+0xb24>
10100e40:	b0038326 	beq	r22,zero,10101c50 <___vfprintf_internal_r+0x1358>
10100e44:	dc402a15 	stw	r17,168(sp)
10100e48:	dc001e04 	addi	r16,sp,120
10100e4c:	b023883a 	mov	r17,r22
10100e50:	402d883a 	mov	r22,r8
10100e54:	9809883a 	mov	r4,r19
10100e58:	880b883a 	mov	r5,r17
10100e5c:	01800284 	movi	r6,10
10100e60:	000f883a 	mov	r7,zero
10100e64:	010a2ec0 	call	1010a2ec <__umoddi3>
10100e68:	10800c04 	addi	r2,r2,48
10100e6c:	843fffc4 	addi	r16,r16,-1
10100e70:	9809883a 	mov	r4,r19
10100e74:	880b883a 	mov	r5,r17
10100e78:	80800005 	stb	r2,0(r16)
10100e7c:	01800284 	movi	r6,10
10100e80:	000f883a 	mov	r7,zero
10100e84:	0109d740 	call	10109d74 <__udivdi3>
10100e88:	1027883a 	mov	r19,r2
10100e8c:	10c4b03a 	or	r2,r2,r3
10100e90:	1823883a 	mov	r17,r3
10100e94:	103fef1e 	bne	r2,zero,10100e54 <__alt_data_end+0xfffe0e54>
10100e98:	d8c02817 	ldw	r3,160(sp)
10100e9c:	dc402a17 	ldw	r17,168(sp)
10100ea0:	b011883a 	mov	r8,r22
10100ea4:	1c07c83a 	sub	r3,r3,r16
10100ea8:	d8c02e15 	stw	r3,184(sp)
10100eac:	00005906 	br	10101014 <___vfprintf_internal_r+0x71c>
10100eb0:	18c03fcc 	andi	r3,r3,255
10100eb4:	1806fa1e 	bne	r3,zero,10102aa0 <___vfprintf_internal_r+0x21a8>
10100eb8:	9080020c 	andi	r2,r18,8
10100ebc:	10048a26 	beq	r2,zero,101020e8 <___vfprintf_internal_r+0x17f0>
10100ec0:	d8c02d17 	ldw	r3,180(sp)
10100ec4:	d9002d17 	ldw	r4,180(sp)
10100ec8:	d9402d17 	ldw	r5,180(sp)
10100ecc:	18c00017 	ldw	r3,0(r3)
10100ed0:	21000117 	ldw	r4,4(r4)
10100ed4:	29400204 	addi	r5,r5,8
10100ed8:	d8c03615 	stw	r3,216(sp)
10100edc:	d9003815 	stw	r4,224(sp)
10100ee0:	d9402d15 	stw	r5,180(sp)
10100ee4:	d9003617 	ldw	r4,216(sp)
10100ee8:	d9403817 	ldw	r5,224(sp)
10100eec:	da003d15 	stw	r8,244(sp)
10100ef0:	04000044 	movi	r16,1
10100ef4:	0107b180 	call	10107b18 <__fpclassifyd>
10100ef8:	da003d17 	ldw	r8,244(sp)
10100efc:	14041f1e 	bne	r2,r16,10101f7c <___vfprintf_internal_r+0x1684>
10100f00:	d9003617 	ldw	r4,216(sp)
10100f04:	d9403817 	ldw	r5,224(sp)
10100f08:	000d883a 	mov	r6,zero
10100f0c:	000f883a 	mov	r7,zero
10100f10:	010bcd00 	call	1010bcd0 <__ledf2>
10100f14:	da003d17 	ldw	r8,244(sp)
10100f18:	1005be16 	blt	r2,zero,10102614 <___vfprintf_internal_r+0x1d1c>
10100f1c:	df002783 	ldbu	fp,158(sp)
10100f20:	008011c4 	movi	r2,71
10100f24:	1445330e 	bge	r2,r17,101023f4 <___vfprintf_internal_r+0x1afc>
10100f28:	04040474 	movhi	r16,4113
10100f2c:	843e0c04 	addi	r16,r16,-2000
10100f30:	00c000c4 	movi	r3,3
10100f34:	00bfdfc4 	movi	r2,-129
10100f38:	d8c02a15 	stw	r3,168(sp)
10100f3c:	90a4703a 	and	r18,r18,r2
10100f40:	d8c02e15 	stw	r3,184(sp)
10100f44:	d8002915 	stw	zero,164(sp)
10100f48:	d8003215 	stw	zero,200(sp)
10100f4c:	00003706 	br	1010102c <___vfprintf_internal_r+0x734>
10100f50:	94800214 	ori	r18,r18,8
10100f54:	ac400007 	ldb	r17,0(r21)
10100f58:	003ec806 	br	10100a7c <__alt_data_end+0xfffe0a7c>
10100f5c:	18c03fcc 	andi	r3,r3,255
10100f60:	1806db1e 	bne	r3,zero,10102ad0 <___vfprintf_internal_r+0x21d8>
10100f64:	94800414 	ori	r18,r18,16
10100f68:	9080080c 	andi	r2,r18,32
10100f6c:	1002d826 	beq	r2,zero,10101ad0 <___vfprintf_internal_r+0x11d8>
10100f70:	d9402d17 	ldw	r5,180(sp)
10100f74:	d8c02917 	ldw	r3,164(sp)
10100f78:	d8002785 	stb	zero,158(sp)
10100f7c:	28800204 	addi	r2,r5,8
10100f80:	2cc00017 	ldw	r19,0(r5)
10100f84:	2d800117 	ldw	r22,4(r5)
10100f88:	18048f16 	blt	r3,zero,101021c8 <___vfprintf_internal_r+0x18d0>
10100f8c:	013fdfc4 	movi	r4,-129
10100f90:	9d86b03a 	or	r3,r19,r22
10100f94:	d8802d15 	stw	r2,180(sp)
10100f98:	9124703a 	and	r18,r18,r4
10100f9c:	1802d91e 	bne	r3,zero,10101b04 <___vfprintf_internal_r+0x120c>
10100fa0:	d8c02917 	ldw	r3,164(sp)
10100fa4:	0039883a 	mov	fp,zero
10100fa8:	1805c326 	beq	r3,zero,101026b8 <___vfprintf_internal_r+0x1dc0>
10100fac:	0027883a 	mov	r19,zero
10100fb0:	002d883a 	mov	r22,zero
10100fb4:	dc001e04 	addi	r16,sp,120
10100fb8:	9806d0fa 	srli	r3,r19,3
10100fbc:	b008977a 	slli	r4,r22,29
10100fc0:	b02cd0fa 	srli	r22,r22,3
10100fc4:	9cc001cc 	andi	r19,r19,7
10100fc8:	98800c04 	addi	r2,r19,48
10100fcc:	843fffc4 	addi	r16,r16,-1
10100fd0:	20e6b03a 	or	r19,r4,r3
10100fd4:	80800005 	stb	r2,0(r16)
10100fd8:	9d86b03a 	or	r3,r19,r22
10100fdc:	183ff61e 	bne	r3,zero,10100fb8 <__alt_data_end+0xfffe0fb8>
10100fe0:	90c0004c 	andi	r3,r18,1
10100fe4:	18013b26 	beq	r3,zero,101014d4 <___vfprintf_internal_r+0xbdc>
10100fe8:	10803fcc 	andi	r2,r2,255
10100fec:	1080201c 	xori	r2,r2,128
10100ff0:	10bfe004 	addi	r2,r2,-128
10100ff4:	00c00c04 	movi	r3,48
10100ff8:	10c13626 	beq	r2,r3,101014d4 <___vfprintf_internal_r+0xbdc>
10100ffc:	80ffffc5 	stb	r3,-1(r16)
10101000:	d8c02817 	ldw	r3,160(sp)
10101004:	80bfffc4 	addi	r2,r16,-1
10101008:	1021883a 	mov	r16,r2
1010100c:	1887c83a 	sub	r3,r3,r2
10101010:	d8c02e15 	stw	r3,184(sp)
10101014:	d8802e17 	ldw	r2,184(sp)
10101018:	d9002917 	ldw	r4,164(sp)
1010101c:	1100010e 	bge	r2,r4,10101024 <___vfprintf_internal_r+0x72c>
10101020:	2005883a 	mov	r2,r4
10101024:	d8802a15 	stw	r2,168(sp)
10101028:	d8003215 	stw	zero,200(sp)
1010102c:	e7003fcc 	andi	fp,fp,255
10101030:	e700201c 	xori	fp,fp,128
10101034:	e73fe004 	addi	fp,fp,-128
10101038:	e0000326 	beq	fp,zero,10101048 <___vfprintf_internal_r+0x750>
1010103c:	d8c02a17 	ldw	r3,168(sp)
10101040:	18c00044 	addi	r3,r3,1
10101044:	d8c02a15 	stw	r3,168(sp)
10101048:	90c0008c 	andi	r3,r18,2
1010104c:	d8c02b15 	stw	r3,172(sp)
10101050:	18000326 	beq	r3,zero,10101060 <___vfprintf_internal_r+0x768>
10101054:	d8c02a17 	ldw	r3,168(sp)
10101058:	18c00084 	addi	r3,r3,2
1010105c:	d8c02a15 	stw	r3,168(sp)
10101060:	90c0210c 	andi	r3,r18,132
10101064:	d8c03015 	stw	r3,192(sp)
10101068:	1801a31e 	bne	r3,zero,101016f8 <___vfprintf_internal_r+0xe00>
1010106c:	d9003117 	ldw	r4,196(sp)
10101070:	d8c02a17 	ldw	r3,168(sp)
10101074:	20e7c83a 	sub	r19,r4,r3
10101078:	04c19f0e 	bge	zero,r19,101016f8 <___vfprintf_internal_r+0xe00>
1010107c:	02400404 	movi	r9,16
10101080:	d8c02017 	ldw	r3,128(sp)
10101084:	d8801f17 	ldw	r2,124(sp)
10101088:	4cc50d0e 	bge	r9,r19,101024c0 <___vfprintf_internal_r+0x1bc8>
1010108c:	01440474 	movhi	r5,4113
10101090:	297e1f84 	addi	r5,r5,-1922
10101094:	dc403b15 	stw	r17,236(sp)
10101098:	d9403515 	stw	r5,212(sp)
1010109c:	9823883a 	mov	r17,r19
101010a0:	482d883a 	mov	r22,r9
101010a4:	9027883a 	mov	r19,r18
101010a8:	070001c4 	movi	fp,7
101010ac:	8025883a 	mov	r18,r16
101010b0:	dc002c17 	ldw	r16,176(sp)
101010b4:	00000306 	br	101010c4 <___vfprintf_internal_r+0x7cc>
101010b8:	8c7ffc04 	addi	r17,r17,-16
101010bc:	42000204 	addi	r8,r8,8
101010c0:	b440130e 	bge	r22,r17,10101110 <___vfprintf_internal_r+0x818>
101010c4:	01040474 	movhi	r4,4113
101010c8:	18c00404 	addi	r3,r3,16
101010cc:	10800044 	addi	r2,r2,1
101010d0:	213e1f84 	addi	r4,r4,-1922
101010d4:	41000015 	stw	r4,0(r8)
101010d8:	45800115 	stw	r22,4(r8)
101010dc:	d8c02015 	stw	r3,128(sp)
101010e0:	d8801f15 	stw	r2,124(sp)
101010e4:	e0bff40e 	bge	fp,r2,101010b8 <__alt_data_end+0xfffe10b8>
101010e8:	d9801e04 	addi	r6,sp,120
101010ec:	b80b883a 	mov	r5,r23
101010f0:	8009883a 	mov	r4,r16
101010f4:	0107ef40 	call	10107ef4 <__sprint_r>
101010f8:	103f011e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
101010fc:	8c7ffc04 	addi	r17,r17,-16
10101100:	d8c02017 	ldw	r3,128(sp)
10101104:	d8801f17 	ldw	r2,124(sp)
10101108:	da000404 	addi	r8,sp,16
1010110c:	b47fed16 	blt	r22,r17,101010c4 <__alt_data_end+0xfffe10c4>
10101110:	9021883a 	mov	r16,r18
10101114:	9825883a 	mov	r18,r19
10101118:	8827883a 	mov	r19,r17
1010111c:	dc403b17 	ldw	r17,236(sp)
10101120:	d9403517 	ldw	r5,212(sp)
10101124:	98c7883a 	add	r3,r19,r3
10101128:	10800044 	addi	r2,r2,1
1010112c:	41400015 	stw	r5,0(r8)
10101130:	44c00115 	stw	r19,4(r8)
10101134:	d8c02015 	stw	r3,128(sp)
10101138:	d8801f15 	stw	r2,124(sp)
1010113c:	010001c4 	movi	r4,7
10101140:	2082a316 	blt	r4,r2,10101bd0 <___vfprintf_internal_r+0x12d8>
10101144:	df002787 	ldb	fp,158(sp)
10101148:	42000204 	addi	r8,r8,8
1010114c:	e0000c26 	beq	fp,zero,10101180 <___vfprintf_internal_r+0x888>
10101150:	d8801f17 	ldw	r2,124(sp)
10101154:	d9002784 	addi	r4,sp,158
10101158:	18c00044 	addi	r3,r3,1
1010115c:	10800044 	addi	r2,r2,1
10101160:	41000015 	stw	r4,0(r8)
10101164:	01000044 	movi	r4,1
10101168:	41000115 	stw	r4,4(r8)
1010116c:	d8c02015 	stw	r3,128(sp)
10101170:	d8801f15 	stw	r2,124(sp)
10101174:	010001c4 	movi	r4,7
10101178:	20823c16 	blt	r4,r2,10101a6c <___vfprintf_internal_r+0x1174>
1010117c:	42000204 	addi	r8,r8,8
10101180:	d8802b17 	ldw	r2,172(sp)
10101184:	10000c26 	beq	r2,zero,101011b8 <___vfprintf_internal_r+0x8c0>
10101188:	d8801f17 	ldw	r2,124(sp)
1010118c:	d9002704 	addi	r4,sp,156
10101190:	18c00084 	addi	r3,r3,2
10101194:	10800044 	addi	r2,r2,1
10101198:	41000015 	stw	r4,0(r8)
1010119c:	01000084 	movi	r4,2
101011a0:	41000115 	stw	r4,4(r8)
101011a4:	d8c02015 	stw	r3,128(sp)
101011a8:	d8801f15 	stw	r2,124(sp)
101011ac:	010001c4 	movi	r4,7
101011b0:	20823616 	blt	r4,r2,10101a8c <___vfprintf_internal_r+0x1194>
101011b4:	42000204 	addi	r8,r8,8
101011b8:	d9003017 	ldw	r4,192(sp)
101011bc:	00802004 	movi	r2,128
101011c0:	20819926 	beq	r4,r2,10101828 <___vfprintf_internal_r+0xf30>
101011c4:	d9402917 	ldw	r5,164(sp)
101011c8:	d8802e17 	ldw	r2,184(sp)
101011cc:	28adc83a 	sub	r22,r5,r2
101011d0:	0580310e 	bge	zero,r22,10101298 <___vfprintf_internal_r+0x9a0>
101011d4:	07000404 	movi	fp,16
101011d8:	d8801f17 	ldw	r2,124(sp)
101011dc:	e584140e 	bge	fp,r22,10102230 <___vfprintf_internal_r+0x1938>
101011e0:	01440474 	movhi	r5,4113
101011e4:	297e1b84 	addi	r5,r5,-1938
101011e8:	dc402915 	stw	r17,164(sp)
101011ec:	d9402b15 	stw	r5,172(sp)
101011f0:	b023883a 	mov	r17,r22
101011f4:	04c001c4 	movi	r19,7
101011f8:	a82d883a 	mov	r22,r21
101011fc:	902b883a 	mov	r21,r18
10101200:	8025883a 	mov	r18,r16
10101204:	dc002c17 	ldw	r16,176(sp)
10101208:	00000306 	br	10101218 <___vfprintf_internal_r+0x920>
1010120c:	8c7ffc04 	addi	r17,r17,-16
10101210:	42000204 	addi	r8,r8,8
10101214:	e440110e 	bge	fp,r17,1010125c <___vfprintf_internal_r+0x964>
10101218:	18c00404 	addi	r3,r3,16
1010121c:	10800044 	addi	r2,r2,1
10101220:	45000015 	stw	r20,0(r8)
10101224:	47000115 	stw	fp,4(r8)
10101228:	d8c02015 	stw	r3,128(sp)
1010122c:	d8801f15 	stw	r2,124(sp)
10101230:	98bff60e 	bge	r19,r2,1010120c <__alt_data_end+0xfffe120c>
10101234:	d9801e04 	addi	r6,sp,120
10101238:	b80b883a 	mov	r5,r23
1010123c:	8009883a 	mov	r4,r16
10101240:	0107ef40 	call	10107ef4 <__sprint_r>
10101244:	103eae1e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101248:	8c7ffc04 	addi	r17,r17,-16
1010124c:	d8c02017 	ldw	r3,128(sp)
10101250:	d8801f17 	ldw	r2,124(sp)
10101254:	da000404 	addi	r8,sp,16
10101258:	e47fef16 	blt	fp,r17,10101218 <__alt_data_end+0xfffe1218>
1010125c:	9021883a 	mov	r16,r18
10101260:	a825883a 	mov	r18,r21
10101264:	b02b883a 	mov	r21,r22
10101268:	882d883a 	mov	r22,r17
1010126c:	dc402917 	ldw	r17,164(sp)
10101270:	d9002b17 	ldw	r4,172(sp)
10101274:	1d87883a 	add	r3,r3,r22
10101278:	10800044 	addi	r2,r2,1
1010127c:	41000015 	stw	r4,0(r8)
10101280:	45800115 	stw	r22,4(r8)
10101284:	d8c02015 	stw	r3,128(sp)
10101288:	d8801f15 	stw	r2,124(sp)
1010128c:	010001c4 	movi	r4,7
10101290:	2081ee16 	blt	r4,r2,10101a4c <___vfprintf_internal_r+0x1154>
10101294:	42000204 	addi	r8,r8,8
10101298:	9080400c 	andi	r2,r18,256
1010129c:	1001181e 	bne	r2,zero,10101700 <___vfprintf_internal_r+0xe08>
101012a0:	d9402e17 	ldw	r5,184(sp)
101012a4:	d8801f17 	ldw	r2,124(sp)
101012a8:	44000015 	stw	r16,0(r8)
101012ac:	1947883a 	add	r3,r3,r5
101012b0:	10800044 	addi	r2,r2,1
101012b4:	41400115 	stw	r5,4(r8)
101012b8:	d8c02015 	stw	r3,128(sp)
101012bc:	d8801f15 	stw	r2,124(sp)
101012c0:	010001c4 	movi	r4,7
101012c4:	2081d316 	blt	r4,r2,10101a14 <___vfprintf_internal_r+0x111c>
101012c8:	42000204 	addi	r8,r8,8
101012cc:	9480010c 	andi	r18,r18,4
101012d0:	90003226 	beq	r18,zero,1010139c <___vfprintf_internal_r+0xaa4>
101012d4:	d9403117 	ldw	r5,196(sp)
101012d8:	d8802a17 	ldw	r2,168(sp)
101012dc:	28a1c83a 	sub	r16,r5,r2
101012e0:	04002e0e 	bge	zero,r16,1010139c <___vfprintf_internal_r+0xaa4>
101012e4:	04400404 	movi	r17,16
101012e8:	d8801f17 	ldw	r2,124(sp)
101012ec:	8c04a20e 	bge	r17,r16,10102578 <___vfprintf_internal_r+0x1c80>
101012f0:	01440474 	movhi	r5,4113
101012f4:	297e1f84 	addi	r5,r5,-1922
101012f8:	d9403515 	stw	r5,212(sp)
101012fc:	048001c4 	movi	r18,7
10101300:	dcc02c17 	ldw	r19,176(sp)
10101304:	00000306 	br	10101314 <___vfprintf_internal_r+0xa1c>
10101308:	843ffc04 	addi	r16,r16,-16
1010130c:	42000204 	addi	r8,r8,8
10101310:	8c00130e 	bge	r17,r16,10101360 <___vfprintf_internal_r+0xa68>
10101314:	01040474 	movhi	r4,4113
10101318:	18c00404 	addi	r3,r3,16
1010131c:	10800044 	addi	r2,r2,1
10101320:	213e1f84 	addi	r4,r4,-1922
10101324:	41000015 	stw	r4,0(r8)
10101328:	44400115 	stw	r17,4(r8)
1010132c:	d8c02015 	stw	r3,128(sp)
10101330:	d8801f15 	stw	r2,124(sp)
10101334:	90bff40e 	bge	r18,r2,10101308 <__alt_data_end+0xfffe1308>
10101338:	d9801e04 	addi	r6,sp,120
1010133c:	b80b883a 	mov	r5,r23
10101340:	9809883a 	mov	r4,r19
10101344:	0107ef40 	call	10107ef4 <__sprint_r>
10101348:	103e6d1e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
1010134c:	843ffc04 	addi	r16,r16,-16
10101350:	d8c02017 	ldw	r3,128(sp)
10101354:	d8801f17 	ldw	r2,124(sp)
10101358:	da000404 	addi	r8,sp,16
1010135c:	8c3fed16 	blt	r17,r16,10101314 <__alt_data_end+0xfffe1314>
10101360:	d9403517 	ldw	r5,212(sp)
10101364:	1c07883a 	add	r3,r3,r16
10101368:	10800044 	addi	r2,r2,1
1010136c:	41400015 	stw	r5,0(r8)
10101370:	44000115 	stw	r16,4(r8)
10101374:	d8c02015 	stw	r3,128(sp)
10101378:	d8801f15 	stw	r2,124(sp)
1010137c:	010001c4 	movi	r4,7
10101380:	2080060e 	bge	r4,r2,1010139c <___vfprintf_internal_r+0xaa4>
10101384:	d9002c17 	ldw	r4,176(sp)
10101388:	d9801e04 	addi	r6,sp,120
1010138c:	b80b883a 	mov	r5,r23
10101390:	0107ef40 	call	10107ef4 <__sprint_r>
10101394:	103e5a1e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101398:	d8c02017 	ldw	r3,128(sp)
1010139c:	d8803117 	ldw	r2,196(sp)
101013a0:	d9002a17 	ldw	r4,168(sp)
101013a4:	1100010e 	bge	r2,r4,101013ac <___vfprintf_internal_r+0xab4>
101013a8:	2005883a 	mov	r2,r4
101013ac:	d9402f17 	ldw	r5,188(sp)
101013b0:	288b883a 	add	r5,r5,r2
101013b4:	d9402f15 	stw	r5,188(sp)
101013b8:	18019e1e 	bne	r3,zero,10101a34 <___vfprintf_internal_r+0x113c>
101013bc:	a8800007 	ldb	r2,0(r21)
101013c0:	d8001f15 	stw	zero,124(sp)
101013c4:	da000404 	addi	r8,sp,16
101013c8:	103d851e 	bne	r2,zero,101009e0 <__alt_data_end+0xfffe09e0>
101013cc:	a821883a 	mov	r16,r21
101013d0:	003d9b06 	br	10100a40 <__alt_data_end+0xfffe0a40>
101013d4:	18c03fcc 	andi	r3,r3,255
101013d8:	1805c11e 	bne	r3,zero,10102ae0 <___vfprintf_internal_r+0x21e8>
101013dc:	94800414 	ori	r18,r18,16
101013e0:	9080080c 	andi	r2,r18,32
101013e4:	10020c26 	beq	r2,zero,10101c18 <___vfprintf_internal_r+0x1320>
101013e8:	d8802d17 	ldw	r2,180(sp)
101013ec:	d9002917 	ldw	r4,164(sp)
101013f0:	d8002785 	stb	zero,158(sp)
101013f4:	10c00204 	addi	r3,r2,8
101013f8:	14c00017 	ldw	r19,0(r2)
101013fc:	15800117 	ldw	r22,4(r2)
10101400:	20040f16 	blt	r4,zero,10102440 <___vfprintf_internal_r+0x1b48>
10101404:	013fdfc4 	movi	r4,-129
10101408:	9d84b03a 	or	r2,r19,r22
1010140c:	d8c02d15 	stw	r3,180(sp)
10101410:	9124703a 	and	r18,r18,r4
10101414:	0039883a 	mov	fp,zero
10101418:	103e891e 	bne	r2,zero,10100e40 <__alt_data_end+0xfffe0e40>
1010141c:	d9002917 	ldw	r4,164(sp)
10101420:	2002c11e 	bne	r4,zero,10101f28 <___vfprintf_internal_r+0x1630>
10101424:	d8002915 	stw	zero,164(sp)
10101428:	d8002e15 	stw	zero,184(sp)
1010142c:	dc001e04 	addi	r16,sp,120
10101430:	003ef806 	br	10101014 <__alt_data_end+0xfffe1014>
10101434:	18c03fcc 	andi	r3,r3,255
10101438:	18059d1e 	bne	r3,zero,10102ab0 <___vfprintf_internal_r+0x21b8>
1010143c:	01440474 	movhi	r5,4113
10101440:	297e0f04 	addi	r5,r5,-1988
10101444:	d9403915 	stw	r5,228(sp)
10101448:	9080080c 	andi	r2,r18,32
1010144c:	10005226 	beq	r2,zero,10101598 <___vfprintf_internal_r+0xca0>
10101450:	d8802d17 	ldw	r2,180(sp)
10101454:	14c00017 	ldw	r19,0(r2)
10101458:	15800117 	ldw	r22,4(r2)
1010145c:	10800204 	addi	r2,r2,8
10101460:	d8802d15 	stw	r2,180(sp)
10101464:	9080004c 	andi	r2,r18,1
10101468:	10019026 	beq	r2,zero,10101aac <___vfprintf_internal_r+0x11b4>
1010146c:	9d84b03a 	or	r2,r19,r22
10101470:	10036926 	beq	r2,zero,10102218 <___vfprintf_internal_r+0x1920>
10101474:	d8c02917 	ldw	r3,164(sp)
10101478:	00800c04 	movi	r2,48
1010147c:	d8802705 	stb	r2,156(sp)
10101480:	dc402745 	stb	r17,157(sp)
10101484:	d8002785 	stb	zero,158(sp)
10101488:	90800094 	ori	r2,r18,2
1010148c:	18045d16 	blt	r3,zero,10102604 <___vfprintf_internal_r+0x1d0c>
10101490:	00bfdfc4 	movi	r2,-129
10101494:	90a4703a 	and	r18,r18,r2
10101498:	94800094 	ori	r18,r18,2
1010149c:	0039883a 	mov	fp,zero
101014a0:	d9003917 	ldw	r4,228(sp)
101014a4:	dc001e04 	addi	r16,sp,120
101014a8:	988003cc 	andi	r2,r19,15
101014ac:	b006973a 	slli	r3,r22,28
101014b0:	2085883a 	add	r2,r4,r2
101014b4:	9826d13a 	srli	r19,r19,4
101014b8:	10800003 	ldbu	r2,0(r2)
101014bc:	b02cd13a 	srli	r22,r22,4
101014c0:	843fffc4 	addi	r16,r16,-1
101014c4:	1ce6b03a 	or	r19,r3,r19
101014c8:	80800005 	stb	r2,0(r16)
101014cc:	9d84b03a 	or	r2,r19,r22
101014d0:	103ff51e 	bne	r2,zero,101014a8 <__alt_data_end+0xfffe14a8>
101014d4:	d8c02817 	ldw	r3,160(sp)
101014d8:	1c07c83a 	sub	r3,r3,r16
101014dc:	d8c02e15 	stw	r3,184(sp)
101014e0:	003ecc06 	br	10101014 <__alt_data_end+0xfffe1014>
101014e4:	18c03fcc 	andi	r3,r3,255
101014e8:	183e9f26 	beq	r3,zero,10100f68 <__alt_data_end+0xfffe0f68>
101014ec:	d9c02785 	stb	r7,158(sp)
101014f0:	003e9d06 	br	10100f68 <__alt_data_end+0xfffe0f68>
101014f4:	00c00044 	movi	r3,1
101014f8:	01c00ac4 	movi	r7,43
101014fc:	ac400007 	ldb	r17,0(r21)
10101500:	003d5e06 	br	10100a7c <__alt_data_end+0xfffe0a7c>
10101504:	94800814 	ori	r18,r18,32
10101508:	ac400007 	ldb	r17,0(r21)
1010150c:	003d5b06 	br	10100a7c <__alt_data_end+0xfffe0a7c>
10101510:	d8c02d17 	ldw	r3,180(sp)
10101514:	d8002785 	stb	zero,158(sp)
10101518:	1c000017 	ldw	r16,0(r3)
1010151c:	1cc00104 	addi	r19,r3,4
10101520:	80041926 	beq	r16,zero,10102588 <___vfprintf_internal_r+0x1c90>
10101524:	d9002917 	ldw	r4,164(sp)
10101528:	2003d016 	blt	r4,zero,1010246c <___vfprintf_internal_r+0x1b74>
1010152c:	200d883a 	mov	r6,r4
10101530:	000b883a 	mov	r5,zero
10101534:	8009883a 	mov	r4,r16
10101538:	da003d15 	stw	r8,244(sp)
1010153c:	01061080 	call	10106108 <memchr>
10101540:	da003d17 	ldw	r8,244(sp)
10101544:	10045426 	beq	r2,zero,10102698 <___vfprintf_internal_r+0x1da0>
10101548:	1405c83a 	sub	r2,r2,r16
1010154c:	d8802e15 	stw	r2,184(sp)
10101550:	1003cc16 	blt	r2,zero,10102484 <___vfprintf_internal_r+0x1b8c>
10101554:	df002783 	ldbu	fp,158(sp)
10101558:	d8802a15 	stw	r2,168(sp)
1010155c:	dcc02d15 	stw	r19,180(sp)
10101560:	d8002915 	stw	zero,164(sp)
10101564:	d8003215 	stw	zero,200(sp)
10101568:	003eb006 	br	1010102c <__alt_data_end+0xfffe102c>
1010156c:	18c03fcc 	andi	r3,r3,255
10101570:	183f9b26 	beq	r3,zero,101013e0 <__alt_data_end+0xfffe13e0>
10101574:	d9c02785 	stb	r7,158(sp)
10101578:	003f9906 	br	101013e0 <__alt_data_end+0xfffe13e0>
1010157c:	18c03fcc 	andi	r3,r3,255
10101580:	1805551e 	bne	r3,zero,10102ad8 <___vfprintf_internal_r+0x21e0>
10101584:	01440474 	movhi	r5,4113
10101588:	297e1404 	addi	r5,r5,-1968
1010158c:	d9403915 	stw	r5,228(sp)
10101590:	9080080c 	andi	r2,r18,32
10101594:	103fae1e 	bne	r2,zero,10101450 <__alt_data_end+0xfffe1450>
10101598:	9080040c 	andi	r2,r18,16
1010159c:	1002de26 	beq	r2,zero,10102118 <___vfprintf_internal_r+0x1820>
101015a0:	d8c02d17 	ldw	r3,180(sp)
101015a4:	002d883a 	mov	r22,zero
101015a8:	1cc00017 	ldw	r19,0(r3)
101015ac:	18c00104 	addi	r3,r3,4
101015b0:	d8c02d15 	stw	r3,180(sp)
101015b4:	003fab06 	br	10101464 <__alt_data_end+0xfffe1464>
101015b8:	38803fcc 	andi	r2,r7,255
101015bc:	1080201c 	xori	r2,r2,128
101015c0:	10bfe004 	addi	r2,r2,-128
101015c4:	1002d21e 	bne	r2,zero,10102110 <___vfprintf_internal_r+0x1818>
101015c8:	00c00044 	movi	r3,1
101015cc:	01c00804 	movi	r7,32
101015d0:	ac400007 	ldb	r17,0(r21)
101015d4:	003d2906 	br	10100a7c <__alt_data_end+0xfffe0a7c>
101015d8:	94800054 	ori	r18,r18,1
101015dc:	ac400007 	ldb	r17,0(r21)
101015e0:	003d2606 	br	10100a7c <__alt_data_end+0xfffe0a7c>
101015e4:	18c03fcc 	andi	r3,r3,255
101015e8:	183e0526 	beq	r3,zero,10100e00 <__alt_data_end+0xfffe0e00>
101015ec:	d9c02785 	stb	r7,158(sp)
101015f0:	003e0306 	br	10100e00 <__alt_data_end+0xfffe0e00>
101015f4:	94801014 	ori	r18,r18,64
101015f8:	ac400007 	ldb	r17,0(r21)
101015fc:	003d1f06 	br	10100a7c <__alt_data_end+0xfffe0a7c>
10101600:	ac400007 	ldb	r17,0(r21)
10101604:	8a438726 	beq	r17,r9,10102424 <___vfprintf_internal_r+0x1b2c>
10101608:	94800414 	ori	r18,r18,16
1010160c:	003d1b06 	br	10100a7c <__alt_data_end+0xfffe0a7c>
10101610:	18c03fcc 	andi	r3,r3,255
10101614:	1805341e 	bne	r3,zero,10102ae8 <___vfprintf_internal_r+0x21f0>
10101618:	9080080c 	andi	r2,r18,32
1010161c:	1002cd26 	beq	r2,zero,10102154 <___vfprintf_internal_r+0x185c>
10101620:	d9402d17 	ldw	r5,180(sp)
10101624:	d9002f17 	ldw	r4,188(sp)
10101628:	28800017 	ldw	r2,0(r5)
1010162c:	2007d7fa 	srai	r3,r4,31
10101630:	29400104 	addi	r5,r5,4
10101634:	d9402d15 	stw	r5,180(sp)
10101638:	11000015 	stw	r4,0(r2)
1010163c:	10c00115 	stw	r3,4(r2)
10101640:	003ce506 	br	101009d8 <__alt_data_end+0xfffe09d8>
10101644:	d8c02d17 	ldw	r3,180(sp)
10101648:	d9002d17 	ldw	r4,180(sp)
1010164c:	d8002785 	stb	zero,158(sp)
10101650:	18800017 	ldw	r2,0(r3)
10101654:	21000104 	addi	r4,r4,4
10101658:	00c00044 	movi	r3,1
1010165c:	d8c02a15 	stw	r3,168(sp)
10101660:	d8801405 	stb	r2,80(sp)
10101664:	d9002d15 	stw	r4,180(sp)
10101668:	d8c02e15 	stw	r3,184(sp)
1010166c:	d8002915 	stw	zero,164(sp)
10101670:	d8003215 	stw	zero,200(sp)
10101674:	dc001404 	addi	r16,sp,80
10101678:	0039883a 	mov	fp,zero
1010167c:	003e7206 	br	10101048 <__alt_data_end+0xfffe1048>
10101680:	01040474 	movhi	r4,4113
10101684:	213e1404 	addi	r4,r4,-1968
10101688:	0039883a 	mov	fp,zero
1010168c:	d9003915 	stw	r4,228(sp)
10101690:	04401e04 	movi	r17,120
10101694:	003f8206 	br	101014a0 <__alt_data_end+0xfffe14a0>
10101698:	18c03fcc 	andi	r3,r3,255
1010169c:	1805061e 	bne	r3,zero,10102ab8 <___vfprintf_internal_r+0x21c0>
101016a0:	883d9126 	beq	r17,zero,10100ce8 <__alt_data_end+0xfffe0ce8>
101016a4:	00c00044 	movi	r3,1
101016a8:	d8c02a15 	stw	r3,168(sp)
101016ac:	dc401405 	stb	r17,80(sp)
101016b0:	d8002785 	stb	zero,158(sp)
101016b4:	003fec06 	br	10101668 <__alt_data_end+0xfffe1668>
101016b8:	01440474 	movhi	r5,4113
101016bc:	297e1404 	addi	r5,r5,-1968
101016c0:	d9403915 	stw	r5,228(sp)
101016c4:	d8c02d15 	stw	r3,180(sp)
101016c8:	1025883a 	mov	r18,r2
101016cc:	04401e04 	movi	r17,120
101016d0:	9d84b03a 	or	r2,r19,r22
101016d4:	1000fc1e 	bne	r2,zero,10101ac8 <___vfprintf_internal_r+0x11d0>
101016d8:	0039883a 	mov	fp,zero
101016dc:	00800084 	movi	r2,2
101016e0:	10803fcc 	andi	r2,r2,255
101016e4:	00c00044 	movi	r3,1
101016e8:	10c20f26 	beq	r2,r3,10101f28 <___vfprintf_internal_r+0x1630>
101016ec:	00c00084 	movi	r3,2
101016f0:	10fd6326 	beq	r2,r3,10100c80 <__alt_data_end+0xfffe0c80>
101016f4:	003e2d06 	br	10100fac <__alt_data_end+0xfffe0fac>
101016f8:	d8c02017 	ldw	r3,128(sp)
101016fc:	003e9306 	br	1010114c <__alt_data_end+0xfffe114c>
10101700:	00801944 	movi	r2,101
10101704:	14407e0e 	bge	r2,r17,10101900 <___vfprintf_internal_r+0x1008>
10101708:	d9003617 	ldw	r4,216(sp)
1010170c:	d9403817 	ldw	r5,224(sp)
10101710:	000d883a 	mov	r6,zero
10101714:	000f883a 	mov	r7,zero
10101718:	d8c03c15 	stw	r3,240(sp)
1010171c:	da003d15 	stw	r8,244(sp)
10101720:	010bb6c0 	call	1010bb6c <__eqdf2>
10101724:	d8c03c17 	ldw	r3,240(sp)
10101728:	da003d17 	ldw	r8,244(sp)
1010172c:	1000f71e 	bne	r2,zero,10101b0c <___vfprintf_internal_r+0x1214>
10101730:	d8801f17 	ldw	r2,124(sp)
10101734:	01040474 	movhi	r4,4113
10101738:	213e1b04 	addi	r4,r4,-1940
1010173c:	18c00044 	addi	r3,r3,1
10101740:	10800044 	addi	r2,r2,1
10101744:	41000015 	stw	r4,0(r8)
10101748:	01000044 	movi	r4,1
1010174c:	41000115 	stw	r4,4(r8)
10101750:	d8c02015 	stw	r3,128(sp)
10101754:	d8801f15 	stw	r2,124(sp)
10101758:	010001c4 	movi	r4,7
1010175c:	2082b816 	blt	r4,r2,10102240 <___vfprintf_internal_r+0x1948>
10101760:	42000204 	addi	r8,r8,8
10101764:	d8802617 	ldw	r2,152(sp)
10101768:	d9403317 	ldw	r5,204(sp)
1010176c:	11400216 	blt	r2,r5,10101778 <___vfprintf_internal_r+0xe80>
10101770:	9080004c 	andi	r2,r18,1
10101774:	103ed526 	beq	r2,zero,101012cc <__alt_data_end+0xfffe12cc>
10101778:	d8803717 	ldw	r2,220(sp)
1010177c:	d9003417 	ldw	r4,208(sp)
10101780:	d9403717 	ldw	r5,220(sp)
10101784:	1887883a 	add	r3,r3,r2
10101788:	d8801f17 	ldw	r2,124(sp)
1010178c:	41000015 	stw	r4,0(r8)
10101790:	41400115 	stw	r5,4(r8)
10101794:	10800044 	addi	r2,r2,1
10101798:	d8c02015 	stw	r3,128(sp)
1010179c:	d8801f15 	stw	r2,124(sp)
101017a0:	010001c4 	movi	r4,7
101017a4:	20832916 	blt	r4,r2,1010244c <___vfprintf_internal_r+0x1b54>
101017a8:	42000204 	addi	r8,r8,8
101017ac:	d8803317 	ldw	r2,204(sp)
101017b0:	143fffc4 	addi	r16,r2,-1
101017b4:	043ec50e 	bge	zero,r16,101012cc <__alt_data_end+0xfffe12cc>
101017b8:	04400404 	movi	r17,16
101017bc:	d8801f17 	ldw	r2,124(sp)
101017c0:	8c00880e 	bge	r17,r16,101019e4 <___vfprintf_internal_r+0x10ec>
101017c4:	01440474 	movhi	r5,4113
101017c8:	297e1b84 	addi	r5,r5,-1938
101017cc:	d9402b15 	stw	r5,172(sp)
101017d0:	058001c4 	movi	r22,7
101017d4:	dcc02c17 	ldw	r19,176(sp)
101017d8:	00000306 	br	101017e8 <___vfprintf_internal_r+0xef0>
101017dc:	42000204 	addi	r8,r8,8
101017e0:	843ffc04 	addi	r16,r16,-16
101017e4:	8c00820e 	bge	r17,r16,101019f0 <___vfprintf_internal_r+0x10f8>
101017e8:	18c00404 	addi	r3,r3,16
101017ec:	10800044 	addi	r2,r2,1
101017f0:	45000015 	stw	r20,0(r8)
101017f4:	44400115 	stw	r17,4(r8)
101017f8:	d8c02015 	stw	r3,128(sp)
101017fc:	d8801f15 	stw	r2,124(sp)
10101800:	b0bff60e 	bge	r22,r2,101017dc <__alt_data_end+0xfffe17dc>
10101804:	d9801e04 	addi	r6,sp,120
10101808:	b80b883a 	mov	r5,r23
1010180c:	9809883a 	mov	r4,r19
10101810:	0107ef40 	call	10107ef4 <__sprint_r>
10101814:	103d3a1e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101818:	d8c02017 	ldw	r3,128(sp)
1010181c:	d8801f17 	ldw	r2,124(sp)
10101820:	da000404 	addi	r8,sp,16
10101824:	003fee06 	br	101017e0 <__alt_data_end+0xfffe17e0>
10101828:	d9403117 	ldw	r5,196(sp)
1010182c:	d8802a17 	ldw	r2,168(sp)
10101830:	28adc83a 	sub	r22,r5,r2
10101834:	05be630e 	bge	zero,r22,101011c4 <__alt_data_end+0xfffe11c4>
10101838:	07000404 	movi	fp,16
1010183c:	d8801f17 	ldw	r2,124(sp)
10101840:	e5838f0e 	bge	fp,r22,10102680 <___vfprintf_internal_r+0x1d88>
10101844:	01440474 	movhi	r5,4113
10101848:	297e1b84 	addi	r5,r5,-1938
1010184c:	dc403015 	stw	r17,192(sp)
10101850:	d9402b15 	stw	r5,172(sp)
10101854:	b023883a 	mov	r17,r22
10101858:	04c001c4 	movi	r19,7
1010185c:	a82d883a 	mov	r22,r21
10101860:	902b883a 	mov	r21,r18
10101864:	8025883a 	mov	r18,r16
10101868:	dc002c17 	ldw	r16,176(sp)
1010186c:	00000306 	br	1010187c <___vfprintf_internal_r+0xf84>
10101870:	8c7ffc04 	addi	r17,r17,-16
10101874:	42000204 	addi	r8,r8,8
10101878:	e440110e 	bge	fp,r17,101018c0 <___vfprintf_internal_r+0xfc8>
1010187c:	18c00404 	addi	r3,r3,16
10101880:	10800044 	addi	r2,r2,1
10101884:	45000015 	stw	r20,0(r8)
10101888:	47000115 	stw	fp,4(r8)
1010188c:	d8c02015 	stw	r3,128(sp)
10101890:	d8801f15 	stw	r2,124(sp)
10101894:	98bff60e 	bge	r19,r2,10101870 <__alt_data_end+0xfffe1870>
10101898:	d9801e04 	addi	r6,sp,120
1010189c:	b80b883a 	mov	r5,r23
101018a0:	8009883a 	mov	r4,r16
101018a4:	0107ef40 	call	10107ef4 <__sprint_r>
101018a8:	103d151e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
101018ac:	8c7ffc04 	addi	r17,r17,-16
101018b0:	d8c02017 	ldw	r3,128(sp)
101018b4:	d8801f17 	ldw	r2,124(sp)
101018b8:	da000404 	addi	r8,sp,16
101018bc:	e47fef16 	blt	fp,r17,1010187c <__alt_data_end+0xfffe187c>
101018c0:	9021883a 	mov	r16,r18
101018c4:	a825883a 	mov	r18,r21
101018c8:	b02b883a 	mov	r21,r22
101018cc:	882d883a 	mov	r22,r17
101018d0:	dc403017 	ldw	r17,192(sp)
101018d4:	d9002b17 	ldw	r4,172(sp)
101018d8:	1d87883a 	add	r3,r3,r22
101018dc:	10800044 	addi	r2,r2,1
101018e0:	41000015 	stw	r4,0(r8)
101018e4:	45800115 	stw	r22,4(r8)
101018e8:	d8c02015 	stw	r3,128(sp)
101018ec:	d8801f15 	stw	r2,124(sp)
101018f0:	010001c4 	movi	r4,7
101018f4:	20818e16 	blt	r4,r2,10101f30 <___vfprintf_internal_r+0x1638>
101018f8:	42000204 	addi	r8,r8,8
101018fc:	003e3106 	br	101011c4 <__alt_data_end+0xfffe11c4>
10101900:	d9403317 	ldw	r5,204(sp)
10101904:	00800044 	movi	r2,1
10101908:	18c00044 	addi	r3,r3,1
1010190c:	1141530e 	bge	r2,r5,10101e5c <___vfprintf_internal_r+0x1564>
10101910:	dc401f17 	ldw	r17,124(sp)
10101914:	00800044 	movi	r2,1
10101918:	40800115 	stw	r2,4(r8)
1010191c:	8c400044 	addi	r17,r17,1
10101920:	44000015 	stw	r16,0(r8)
10101924:	d8c02015 	stw	r3,128(sp)
10101928:	dc401f15 	stw	r17,124(sp)
1010192c:	008001c4 	movi	r2,7
10101930:	14416b16 	blt	r2,r17,10101ee0 <___vfprintf_internal_r+0x15e8>
10101934:	42000204 	addi	r8,r8,8
10101938:	d8803717 	ldw	r2,220(sp)
1010193c:	d9003417 	ldw	r4,208(sp)
10101940:	8c400044 	addi	r17,r17,1
10101944:	10c7883a 	add	r3,r2,r3
10101948:	40800115 	stw	r2,4(r8)
1010194c:	41000015 	stw	r4,0(r8)
10101950:	d8c02015 	stw	r3,128(sp)
10101954:	dc401f15 	stw	r17,124(sp)
10101958:	008001c4 	movi	r2,7
1010195c:	14416916 	blt	r2,r17,10101f04 <___vfprintf_internal_r+0x160c>
10101960:	45800204 	addi	r22,r8,8
10101964:	d9003617 	ldw	r4,216(sp)
10101968:	d9403817 	ldw	r5,224(sp)
1010196c:	000d883a 	mov	r6,zero
10101970:	000f883a 	mov	r7,zero
10101974:	d8c03c15 	stw	r3,240(sp)
10101978:	010bb6c0 	call	1010bb6c <__eqdf2>
1010197c:	d8c03c17 	ldw	r3,240(sp)
10101980:	1000bc26 	beq	r2,zero,10101c74 <___vfprintf_internal_r+0x137c>
10101984:	d9403317 	ldw	r5,204(sp)
10101988:	84000044 	addi	r16,r16,1
1010198c:	8c400044 	addi	r17,r17,1
10101990:	28bfffc4 	addi	r2,r5,-1
10101994:	1887883a 	add	r3,r3,r2
10101998:	b0800115 	stw	r2,4(r22)
1010199c:	b4000015 	stw	r16,0(r22)
101019a0:	d8c02015 	stw	r3,128(sp)
101019a4:	dc401f15 	stw	r17,124(sp)
101019a8:	008001c4 	movi	r2,7
101019ac:	14414316 	blt	r2,r17,10101ebc <___vfprintf_internal_r+0x15c4>
101019b0:	b5800204 	addi	r22,r22,8
101019b4:	d9003a17 	ldw	r4,232(sp)
101019b8:	df0022c4 	addi	fp,sp,139
101019bc:	8c400044 	addi	r17,r17,1
101019c0:	20c7883a 	add	r3,r4,r3
101019c4:	b7000015 	stw	fp,0(r22)
101019c8:	b1000115 	stw	r4,4(r22)
101019cc:	d8c02015 	stw	r3,128(sp)
101019d0:	dc401f15 	stw	r17,124(sp)
101019d4:	008001c4 	movi	r2,7
101019d8:	14400e16 	blt	r2,r17,10101a14 <___vfprintf_internal_r+0x111c>
101019dc:	b2000204 	addi	r8,r22,8
101019e0:	003e3a06 	br	101012cc <__alt_data_end+0xfffe12cc>
101019e4:	01040474 	movhi	r4,4113
101019e8:	213e1b84 	addi	r4,r4,-1938
101019ec:	d9002b15 	stw	r4,172(sp)
101019f0:	d9002b17 	ldw	r4,172(sp)
101019f4:	1c07883a 	add	r3,r3,r16
101019f8:	44000115 	stw	r16,4(r8)
101019fc:	41000015 	stw	r4,0(r8)
10101a00:	10800044 	addi	r2,r2,1
10101a04:	d8c02015 	stw	r3,128(sp)
10101a08:	d8801f15 	stw	r2,124(sp)
10101a0c:	010001c4 	movi	r4,7
10101a10:	20be2d0e 	bge	r4,r2,101012c8 <__alt_data_end+0xfffe12c8>
10101a14:	d9002c17 	ldw	r4,176(sp)
10101a18:	d9801e04 	addi	r6,sp,120
10101a1c:	b80b883a 	mov	r5,r23
10101a20:	0107ef40 	call	10107ef4 <__sprint_r>
10101a24:	103cb61e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101a28:	d8c02017 	ldw	r3,128(sp)
10101a2c:	da000404 	addi	r8,sp,16
10101a30:	003e2606 	br	101012cc <__alt_data_end+0xfffe12cc>
10101a34:	d9002c17 	ldw	r4,176(sp)
10101a38:	d9801e04 	addi	r6,sp,120
10101a3c:	b80b883a 	mov	r5,r23
10101a40:	0107ef40 	call	10107ef4 <__sprint_r>
10101a44:	103e5d26 	beq	r2,zero,101013bc <__alt_data_end+0xfffe13bc>
10101a48:	003cad06 	br	10100d00 <__alt_data_end+0xfffe0d00>
10101a4c:	d9002c17 	ldw	r4,176(sp)
10101a50:	d9801e04 	addi	r6,sp,120
10101a54:	b80b883a 	mov	r5,r23
10101a58:	0107ef40 	call	10107ef4 <__sprint_r>
10101a5c:	103ca81e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101a60:	d8c02017 	ldw	r3,128(sp)
10101a64:	da000404 	addi	r8,sp,16
10101a68:	003e0b06 	br	10101298 <__alt_data_end+0xfffe1298>
10101a6c:	d9002c17 	ldw	r4,176(sp)
10101a70:	d9801e04 	addi	r6,sp,120
10101a74:	b80b883a 	mov	r5,r23
10101a78:	0107ef40 	call	10107ef4 <__sprint_r>
10101a7c:	103ca01e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101a80:	d8c02017 	ldw	r3,128(sp)
10101a84:	da000404 	addi	r8,sp,16
10101a88:	003dbd06 	br	10101180 <__alt_data_end+0xfffe1180>
10101a8c:	d9002c17 	ldw	r4,176(sp)
10101a90:	d9801e04 	addi	r6,sp,120
10101a94:	b80b883a 	mov	r5,r23
10101a98:	0107ef40 	call	10107ef4 <__sprint_r>
10101a9c:	103c981e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101aa0:	d8c02017 	ldw	r3,128(sp)
10101aa4:	da000404 	addi	r8,sp,16
10101aa8:	003dc306 	br	101011b8 <__alt_data_end+0xfffe11b8>
10101aac:	d8802917 	ldw	r2,164(sp)
10101ab0:	d8002785 	stb	zero,158(sp)
10101ab4:	103f0616 	blt	r2,zero,101016d0 <__alt_data_end+0xfffe16d0>
10101ab8:	00ffdfc4 	movi	r3,-129
10101abc:	9d84b03a 	or	r2,r19,r22
10101ac0:	90e4703a 	and	r18,r18,r3
10101ac4:	103c6b26 	beq	r2,zero,10100c74 <__alt_data_end+0xfffe0c74>
10101ac8:	0039883a 	mov	fp,zero
10101acc:	003e7406 	br	101014a0 <__alt_data_end+0xfffe14a0>
10101ad0:	9080040c 	andi	r2,r18,16
10101ad4:	1001b326 	beq	r2,zero,101021a4 <___vfprintf_internal_r+0x18ac>
10101ad8:	d9002d17 	ldw	r4,180(sp)
10101adc:	d9402917 	ldw	r5,164(sp)
10101ae0:	d8002785 	stb	zero,158(sp)
10101ae4:	20800104 	addi	r2,r4,4
10101ae8:	24c00017 	ldw	r19,0(r4)
10101aec:	002d883a 	mov	r22,zero
10101af0:	2801b516 	blt	r5,zero,101021c8 <___vfprintf_internal_r+0x18d0>
10101af4:	00ffdfc4 	movi	r3,-129
10101af8:	d8802d15 	stw	r2,180(sp)
10101afc:	90e4703a 	and	r18,r18,r3
10101b00:	983d2726 	beq	r19,zero,10100fa0 <__alt_data_end+0xfffe0fa0>
10101b04:	0039883a 	mov	fp,zero
10101b08:	003d2a06 	br	10100fb4 <__alt_data_end+0xfffe0fb4>
10101b0c:	dc402617 	ldw	r17,152(sp)
10101b10:	0441d30e 	bge	zero,r17,10102260 <___vfprintf_internal_r+0x1968>
10101b14:	dc403217 	ldw	r17,200(sp)
10101b18:	d8803317 	ldw	r2,204(sp)
10101b1c:	1440010e 	bge	r2,r17,10101b24 <___vfprintf_internal_r+0x122c>
10101b20:	1023883a 	mov	r17,r2
10101b24:	04400a0e 	bge	zero,r17,10101b50 <___vfprintf_internal_r+0x1258>
10101b28:	d8801f17 	ldw	r2,124(sp)
10101b2c:	1c47883a 	add	r3,r3,r17
10101b30:	44000015 	stw	r16,0(r8)
10101b34:	10800044 	addi	r2,r2,1
10101b38:	44400115 	stw	r17,4(r8)
10101b3c:	d8c02015 	stw	r3,128(sp)
10101b40:	d8801f15 	stw	r2,124(sp)
10101b44:	010001c4 	movi	r4,7
10101b48:	20826516 	blt	r4,r2,101024e0 <___vfprintf_internal_r+0x1be8>
10101b4c:	42000204 	addi	r8,r8,8
10101b50:	88026116 	blt	r17,zero,101024d8 <___vfprintf_internal_r+0x1be0>
10101b54:	d9003217 	ldw	r4,200(sp)
10101b58:	2463c83a 	sub	r17,r4,r17
10101b5c:	04407b0e 	bge	zero,r17,10101d4c <___vfprintf_internal_r+0x1454>
10101b60:	05800404 	movi	r22,16
10101b64:	d8801f17 	ldw	r2,124(sp)
10101b68:	b4419d0e 	bge	r22,r17,101021e0 <___vfprintf_internal_r+0x18e8>
10101b6c:	01040474 	movhi	r4,4113
10101b70:	213e1b84 	addi	r4,r4,-1938
10101b74:	d9002b15 	stw	r4,172(sp)
10101b78:	070001c4 	movi	fp,7
10101b7c:	dcc02c17 	ldw	r19,176(sp)
10101b80:	00000306 	br	10101b90 <___vfprintf_internal_r+0x1298>
10101b84:	42000204 	addi	r8,r8,8
10101b88:	8c7ffc04 	addi	r17,r17,-16
10101b8c:	b441970e 	bge	r22,r17,101021ec <___vfprintf_internal_r+0x18f4>
10101b90:	18c00404 	addi	r3,r3,16
10101b94:	10800044 	addi	r2,r2,1
10101b98:	45000015 	stw	r20,0(r8)
10101b9c:	45800115 	stw	r22,4(r8)
10101ba0:	d8c02015 	stw	r3,128(sp)
10101ba4:	d8801f15 	stw	r2,124(sp)
10101ba8:	e0bff60e 	bge	fp,r2,10101b84 <__alt_data_end+0xfffe1b84>
10101bac:	d9801e04 	addi	r6,sp,120
10101bb0:	b80b883a 	mov	r5,r23
10101bb4:	9809883a 	mov	r4,r19
10101bb8:	0107ef40 	call	10107ef4 <__sprint_r>
10101bbc:	103c501e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101bc0:	d8c02017 	ldw	r3,128(sp)
10101bc4:	d8801f17 	ldw	r2,124(sp)
10101bc8:	da000404 	addi	r8,sp,16
10101bcc:	003fee06 	br	10101b88 <__alt_data_end+0xfffe1b88>
10101bd0:	d9002c17 	ldw	r4,176(sp)
10101bd4:	d9801e04 	addi	r6,sp,120
10101bd8:	b80b883a 	mov	r5,r23
10101bdc:	0107ef40 	call	10107ef4 <__sprint_r>
10101be0:	103c471e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101be4:	d8c02017 	ldw	r3,128(sp)
10101be8:	df002787 	ldb	fp,158(sp)
10101bec:	da000404 	addi	r8,sp,16
10101bf0:	003d5606 	br	1010114c <__alt_data_end+0xfffe114c>
10101bf4:	9080040c 	andi	r2,r18,16
10101bf8:	10016126 	beq	r2,zero,10102180 <___vfprintf_internal_r+0x1888>
10101bfc:	d8802d17 	ldw	r2,180(sp)
10101c00:	14c00017 	ldw	r19,0(r2)
10101c04:	10800104 	addi	r2,r2,4
10101c08:	d8802d15 	stw	r2,180(sp)
10101c0c:	982dd7fa 	srai	r22,r19,31
10101c10:	b005883a 	mov	r2,r22
10101c14:	003c8206 	br	10100e20 <__alt_data_end+0xfffe0e20>
10101c18:	9080040c 	andi	r2,r18,16
10101c1c:	10003526 	beq	r2,zero,10101cf4 <___vfprintf_internal_r+0x13fc>
10101c20:	d9402d17 	ldw	r5,180(sp)
10101c24:	d8c02917 	ldw	r3,164(sp)
10101c28:	d8002785 	stb	zero,158(sp)
10101c2c:	28800104 	addi	r2,r5,4
10101c30:	2cc00017 	ldw	r19,0(r5)
10101c34:	002d883a 	mov	r22,zero
10101c38:	18003716 	blt	r3,zero,10101d18 <___vfprintf_internal_r+0x1420>
10101c3c:	00ffdfc4 	movi	r3,-129
10101c40:	d8802d15 	stw	r2,180(sp)
10101c44:	90e4703a 	and	r18,r18,r3
10101c48:	0039883a 	mov	fp,zero
10101c4c:	983df326 	beq	r19,zero,1010141c <__alt_data_end+0xfffe141c>
10101c50:	00800244 	movi	r2,9
10101c54:	14fc7b36 	bltu	r2,r19,10100e44 <__alt_data_end+0xfffe0e44>
10101c58:	d8c02817 	ldw	r3,160(sp)
10101c5c:	dc001dc4 	addi	r16,sp,119
10101c60:	9cc00c04 	addi	r19,r19,48
10101c64:	1c07c83a 	sub	r3,r3,r16
10101c68:	dcc01dc5 	stb	r19,119(sp)
10101c6c:	d8c02e15 	stw	r3,184(sp)
10101c70:	003ce806 	br	10101014 <__alt_data_end+0xfffe1014>
10101c74:	d8803317 	ldw	r2,204(sp)
10101c78:	143fffc4 	addi	r16,r2,-1
10101c7c:	043f4d0e 	bge	zero,r16,101019b4 <__alt_data_end+0xfffe19b4>
10101c80:	07000404 	movi	fp,16
10101c84:	e400810e 	bge	fp,r16,10101e8c <___vfprintf_internal_r+0x1594>
10101c88:	01440474 	movhi	r5,4113
10101c8c:	297e1b84 	addi	r5,r5,-1938
10101c90:	d9402b15 	stw	r5,172(sp)
10101c94:	01c001c4 	movi	r7,7
10101c98:	dcc02c17 	ldw	r19,176(sp)
10101c9c:	00000306 	br	10101cac <___vfprintf_internal_r+0x13b4>
10101ca0:	b5800204 	addi	r22,r22,8
10101ca4:	843ffc04 	addi	r16,r16,-16
10101ca8:	e4007b0e 	bge	fp,r16,10101e98 <___vfprintf_internal_r+0x15a0>
10101cac:	18c00404 	addi	r3,r3,16
10101cb0:	8c400044 	addi	r17,r17,1
10101cb4:	b5000015 	stw	r20,0(r22)
10101cb8:	b7000115 	stw	fp,4(r22)
10101cbc:	d8c02015 	stw	r3,128(sp)
10101cc0:	dc401f15 	stw	r17,124(sp)
10101cc4:	3c7ff60e 	bge	r7,r17,10101ca0 <__alt_data_end+0xfffe1ca0>
10101cc8:	d9801e04 	addi	r6,sp,120
10101ccc:	b80b883a 	mov	r5,r23
10101cd0:	9809883a 	mov	r4,r19
10101cd4:	d9c03c15 	stw	r7,240(sp)
10101cd8:	0107ef40 	call	10107ef4 <__sprint_r>
10101cdc:	d9c03c17 	ldw	r7,240(sp)
10101ce0:	103c071e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101ce4:	d8c02017 	ldw	r3,128(sp)
10101ce8:	dc401f17 	ldw	r17,124(sp)
10101cec:	dd800404 	addi	r22,sp,16
10101cf0:	003fec06 	br	10101ca4 <__alt_data_end+0xfffe1ca4>
10101cf4:	9080100c 	andi	r2,r18,64
10101cf8:	d8002785 	stb	zero,158(sp)
10101cfc:	10010e26 	beq	r2,zero,10102138 <___vfprintf_internal_r+0x1840>
10101d00:	d9002d17 	ldw	r4,180(sp)
10101d04:	d9402917 	ldw	r5,164(sp)
10101d08:	002d883a 	mov	r22,zero
10101d0c:	20800104 	addi	r2,r4,4
10101d10:	24c0000b 	ldhu	r19,0(r4)
10101d14:	283fc90e 	bge	r5,zero,10101c3c <__alt_data_end+0xfffe1c3c>
10101d18:	d8802d15 	stw	r2,180(sp)
10101d1c:	0039883a 	mov	fp,zero
10101d20:	9d84b03a 	or	r2,r19,r22
10101d24:	103c461e 	bne	r2,zero,10100e40 <__alt_data_end+0xfffe0e40>
10101d28:	00800044 	movi	r2,1
10101d2c:	003e6c06 	br	101016e0 <__alt_data_end+0xfffe16e0>
10101d30:	d9002c17 	ldw	r4,176(sp)
10101d34:	d9801e04 	addi	r6,sp,120
10101d38:	b80b883a 	mov	r5,r23
10101d3c:	0107ef40 	call	10107ef4 <__sprint_r>
10101d40:	103bef1e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101d44:	d8c02017 	ldw	r3,128(sp)
10101d48:	da000404 	addi	r8,sp,16
10101d4c:	d9003217 	ldw	r4,200(sp)
10101d50:	d8802617 	ldw	r2,152(sp)
10101d54:	d9403317 	ldw	r5,204(sp)
10101d58:	8123883a 	add	r17,r16,r4
10101d5c:	11400216 	blt	r2,r5,10101d68 <___vfprintf_internal_r+0x1470>
10101d60:	9100004c 	andi	r4,r18,1
10101d64:	20000d26 	beq	r4,zero,10101d9c <___vfprintf_internal_r+0x14a4>
10101d68:	d9003717 	ldw	r4,220(sp)
10101d6c:	d9403417 	ldw	r5,208(sp)
10101d70:	1907883a 	add	r3,r3,r4
10101d74:	d9001f17 	ldw	r4,124(sp)
10101d78:	41400015 	stw	r5,0(r8)
10101d7c:	d9403717 	ldw	r5,220(sp)
10101d80:	21000044 	addi	r4,r4,1
10101d84:	d8c02015 	stw	r3,128(sp)
10101d88:	41400115 	stw	r5,4(r8)
10101d8c:	d9001f15 	stw	r4,124(sp)
10101d90:	014001c4 	movi	r5,7
10101d94:	2901e816 	blt	r5,r4,10102538 <___vfprintf_internal_r+0x1c40>
10101d98:	42000204 	addi	r8,r8,8
10101d9c:	d9003317 	ldw	r4,204(sp)
10101da0:	8121883a 	add	r16,r16,r4
10101da4:	2085c83a 	sub	r2,r4,r2
10101da8:	8461c83a 	sub	r16,r16,r17
10101dac:	1400010e 	bge	r2,r16,10101db4 <___vfprintf_internal_r+0x14bc>
10101db0:	1021883a 	mov	r16,r2
10101db4:	04000a0e 	bge	zero,r16,10101de0 <___vfprintf_internal_r+0x14e8>
10101db8:	d9001f17 	ldw	r4,124(sp)
10101dbc:	1c07883a 	add	r3,r3,r16
10101dc0:	44400015 	stw	r17,0(r8)
10101dc4:	21000044 	addi	r4,r4,1
10101dc8:	44000115 	stw	r16,4(r8)
10101dcc:	d8c02015 	stw	r3,128(sp)
10101dd0:	d9001f15 	stw	r4,124(sp)
10101dd4:	014001c4 	movi	r5,7
10101dd8:	2901fb16 	blt	r5,r4,101025c8 <___vfprintf_internal_r+0x1cd0>
10101ddc:	42000204 	addi	r8,r8,8
10101de0:	8001f716 	blt	r16,zero,101025c0 <___vfprintf_internal_r+0x1cc8>
10101de4:	1421c83a 	sub	r16,r2,r16
10101de8:	043d380e 	bge	zero,r16,101012cc <__alt_data_end+0xfffe12cc>
10101dec:	04400404 	movi	r17,16
10101df0:	d8801f17 	ldw	r2,124(sp)
10101df4:	8c3efb0e 	bge	r17,r16,101019e4 <__alt_data_end+0xfffe19e4>
10101df8:	01440474 	movhi	r5,4113
10101dfc:	297e1b84 	addi	r5,r5,-1938
10101e00:	d9402b15 	stw	r5,172(sp)
10101e04:	058001c4 	movi	r22,7
10101e08:	dcc02c17 	ldw	r19,176(sp)
10101e0c:	00000306 	br	10101e1c <___vfprintf_internal_r+0x1524>
10101e10:	42000204 	addi	r8,r8,8
10101e14:	843ffc04 	addi	r16,r16,-16
10101e18:	8c3ef50e 	bge	r17,r16,101019f0 <__alt_data_end+0xfffe19f0>
10101e1c:	18c00404 	addi	r3,r3,16
10101e20:	10800044 	addi	r2,r2,1
10101e24:	45000015 	stw	r20,0(r8)
10101e28:	44400115 	stw	r17,4(r8)
10101e2c:	d8c02015 	stw	r3,128(sp)
10101e30:	d8801f15 	stw	r2,124(sp)
10101e34:	b0bff60e 	bge	r22,r2,10101e10 <__alt_data_end+0xfffe1e10>
10101e38:	d9801e04 	addi	r6,sp,120
10101e3c:	b80b883a 	mov	r5,r23
10101e40:	9809883a 	mov	r4,r19
10101e44:	0107ef40 	call	10107ef4 <__sprint_r>
10101e48:	103bad1e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101e4c:	d8c02017 	ldw	r3,128(sp)
10101e50:	d8801f17 	ldw	r2,124(sp)
10101e54:	da000404 	addi	r8,sp,16
10101e58:	003fee06 	br	10101e14 <__alt_data_end+0xfffe1e14>
10101e5c:	9088703a 	and	r4,r18,r2
10101e60:	203eab1e 	bne	r4,zero,10101910 <__alt_data_end+0xfffe1910>
10101e64:	dc401f17 	ldw	r17,124(sp)
10101e68:	40800115 	stw	r2,4(r8)
10101e6c:	44000015 	stw	r16,0(r8)
10101e70:	8c400044 	addi	r17,r17,1
10101e74:	d8c02015 	stw	r3,128(sp)
10101e78:	dc401f15 	stw	r17,124(sp)
10101e7c:	008001c4 	movi	r2,7
10101e80:	14400e16 	blt	r2,r17,10101ebc <___vfprintf_internal_r+0x15c4>
10101e84:	45800204 	addi	r22,r8,8
10101e88:	003eca06 	br	101019b4 <__alt_data_end+0xfffe19b4>
10101e8c:	01040474 	movhi	r4,4113
10101e90:	213e1b84 	addi	r4,r4,-1938
10101e94:	d9002b15 	stw	r4,172(sp)
10101e98:	d8802b17 	ldw	r2,172(sp)
10101e9c:	1c07883a 	add	r3,r3,r16
10101ea0:	8c400044 	addi	r17,r17,1
10101ea4:	b0800015 	stw	r2,0(r22)
10101ea8:	b4000115 	stw	r16,4(r22)
10101eac:	d8c02015 	stw	r3,128(sp)
10101eb0:	dc401f15 	stw	r17,124(sp)
10101eb4:	008001c4 	movi	r2,7
10101eb8:	147ebd0e 	bge	r2,r17,101019b0 <__alt_data_end+0xfffe19b0>
10101ebc:	d9002c17 	ldw	r4,176(sp)
10101ec0:	d9801e04 	addi	r6,sp,120
10101ec4:	b80b883a 	mov	r5,r23
10101ec8:	0107ef40 	call	10107ef4 <__sprint_r>
10101ecc:	103b8c1e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101ed0:	d8c02017 	ldw	r3,128(sp)
10101ed4:	dc401f17 	ldw	r17,124(sp)
10101ed8:	dd800404 	addi	r22,sp,16
10101edc:	003eb506 	br	101019b4 <__alt_data_end+0xfffe19b4>
10101ee0:	d9002c17 	ldw	r4,176(sp)
10101ee4:	d9801e04 	addi	r6,sp,120
10101ee8:	b80b883a 	mov	r5,r23
10101eec:	0107ef40 	call	10107ef4 <__sprint_r>
10101ef0:	103b831e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101ef4:	d8c02017 	ldw	r3,128(sp)
10101ef8:	dc401f17 	ldw	r17,124(sp)
10101efc:	da000404 	addi	r8,sp,16
10101f00:	003e8d06 	br	10101938 <__alt_data_end+0xfffe1938>
10101f04:	d9002c17 	ldw	r4,176(sp)
10101f08:	d9801e04 	addi	r6,sp,120
10101f0c:	b80b883a 	mov	r5,r23
10101f10:	0107ef40 	call	10107ef4 <__sprint_r>
10101f14:	103b7a1e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101f18:	d8c02017 	ldw	r3,128(sp)
10101f1c:	dc401f17 	ldw	r17,124(sp)
10101f20:	dd800404 	addi	r22,sp,16
10101f24:	003e8f06 	br	10101964 <__alt_data_end+0xfffe1964>
10101f28:	0027883a 	mov	r19,zero
10101f2c:	003f4a06 	br	10101c58 <__alt_data_end+0xfffe1c58>
10101f30:	d9002c17 	ldw	r4,176(sp)
10101f34:	d9801e04 	addi	r6,sp,120
10101f38:	b80b883a 	mov	r5,r23
10101f3c:	0107ef40 	call	10107ef4 <__sprint_r>
10101f40:	103b6f1e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10101f44:	d8c02017 	ldw	r3,128(sp)
10101f48:	da000404 	addi	r8,sp,16
10101f4c:	003c9d06 	br	101011c4 <__alt_data_end+0xfffe11c4>
10101f50:	04e7c83a 	sub	r19,zero,r19
10101f54:	9804c03a 	cmpne	r2,r19,zero
10101f58:	05adc83a 	sub	r22,zero,r22
10101f5c:	b0adc83a 	sub	r22,r22,r2
10101f60:	d8802917 	ldw	r2,164(sp)
10101f64:	07000b44 	movi	fp,45
10101f68:	df002785 	stb	fp,158(sp)
10101f6c:	10017b16 	blt	r2,zero,1010255c <___vfprintf_internal_r+0x1c64>
10101f70:	00bfdfc4 	movi	r2,-129
10101f74:	90a4703a 	and	r18,r18,r2
10101f78:	003bb106 	br	10100e40 <__alt_data_end+0xfffe0e40>
10101f7c:	d9003617 	ldw	r4,216(sp)
10101f80:	d9403817 	ldw	r5,224(sp)
10101f84:	da003d15 	stw	r8,244(sp)
10101f88:	0107b180 	call	10107b18 <__fpclassifyd>
10101f8c:	da003d17 	ldw	r8,244(sp)
10101f90:	1000f026 	beq	r2,zero,10102354 <___vfprintf_internal_r+0x1a5c>
10101f94:	d9002917 	ldw	r4,164(sp)
10101f98:	05bff7c4 	movi	r22,-33
10101f9c:	00bfffc4 	movi	r2,-1
10101fa0:	8dac703a 	and	r22,r17,r22
10101fa4:	20820026 	beq	r4,r2,101027a8 <___vfprintf_internal_r+0x1eb0>
10101fa8:	008011c4 	movi	r2,71
10101fac:	b081f726 	beq	r22,r2,1010278c <___vfprintf_internal_r+0x1e94>
10101fb0:	d9003817 	ldw	r4,224(sp)
10101fb4:	90c04014 	ori	r3,r18,256
10101fb8:	d8c02b15 	stw	r3,172(sp)
10101fbc:	20021516 	blt	r4,zero,10102814 <___vfprintf_internal_r+0x1f1c>
10101fc0:	dcc03817 	ldw	r19,224(sp)
10101fc4:	d8002a05 	stb	zero,168(sp)
10101fc8:	00801984 	movi	r2,102
10101fcc:	8881f926 	beq	r17,r2,101027b4 <___vfprintf_internal_r+0x1ebc>
10101fd0:	00801184 	movi	r2,70
10101fd4:	88821c26 	beq	r17,r2,10102848 <___vfprintf_internal_r+0x1f50>
10101fd8:	00801144 	movi	r2,69
10101fdc:	b081ef26 	beq	r22,r2,1010279c <___vfprintf_internal_r+0x1ea4>
10101fe0:	d8c02917 	ldw	r3,164(sp)
10101fe4:	d8802104 	addi	r2,sp,132
10101fe8:	d8800315 	stw	r2,12(sp)
10101fec:	d9403617 	ldw	r5,216(sp)
10101ff0:	d8802504 	addi	r2,sp,148
10101ff4:	d9002c17 	ldw	r4,176(sp)
10101ff8:	d8800215 	stw	r2,8(sp)
10101ffc:	d8802604 	addi	r2,sp,152
10102000:	d8c00015 	stw	r3,0(sp)
10102004:	d8800115 	stw	r2,4(sp)
10102008:	01c00084 	movi	r7,2
1010200c:	980d883a 	mov	r6,r19
10102010:	d8c03c15 	stw	r3,240(sp)
10102014:	da003d15 	stw	r8,244(sp)
10102018:	0102f1c0 	call	10102f1c <_dtoa_r>
1010201c:	1021883a 	mov	r16,r2
10102020:	008019c4 	movi	r2,103
10102024:	d8c03c17 	ldw	r3,240(sp)
10102028:	da003d17 	ldw	r8,244(sp)
1010202c:	88817126 	beq	r17,r2,101025f4 <___vfprintf_internal_r+0x1cfc>
10102030:	008011c4 	movi	r2,71
10102034:	88829226 	beq	r17,r2,10102a80 <___vfprintf_internal_r+0x2188>
10102038:	80f9883a 	add	fp,r16,r3
1010203c:	d9003617 	ldw	r4,216(sp)
10102040:	000d883a 	mov	r6,zero
10102044:	000f883a 	mov	r7,zero
10102048:	980b883a 	mov	r5,r19
1010204c:	da003d15 	stw	r8,244(sp)
10102050:	010bb6c0 	call	1010bb6c <__eqdf2>
10102054:	da003d17 	ldw	r8,244(sp)
10102058:	10018d26 	beq	r2,zero,10102690 <___vfprintf_internal_r+0x1d98>
1010205c:	d8802117 	ldw	r2,132(sp)
10102060:	1700062e 	bgeu	r2,fp,1010207c <___vfprintf_internal_r+0x1784>
10102064:	01000c04 	movi	r4,48
10102068:	10c00044 	addi	r3,r2,1
1010206c:	d8c02115 	stw	r3,132(sp)
10102070:	11000005 	stb	r4,0(r2)
10102074:	d8802117 	ldw	r2,132(sp)
10102078:	173ffb36 	bltu	r2,fp,10102068 <__alt_data_end+0xfffe2068>
1010207c:	1405c83a 	sub	r2,r2,r16
10102080:	d8803315 	stw	r2,204(sp)
10102084:	008011c4 	movi	r2,71
10102088:	b0817626 	beq	r22,r2,10102664 <___vfprintf_internal_r+0x1d6c>
1010208c:	00801944 	movi	r2,101
10102090:	1442810e 	bge	r2,r17,10102a98 <___vfprintf_internal_r+0x21a0>
10102094:	d8c02617 	ldw	r3,152(sp)
10102098:	00801984 	movi	r2,102
1010209c:	d8c03215 	stw	r3,200(sp)
101020a0:	8881fe26 	beq	r17,r2,1010289c <___vfprintf_internal_r+0x1fa4>
101020a4:	d8c03217 	ldw	r3,200(sp)
101020a8:	d9003317 	ldw	r4,204(sp)
101020ac:	1901dd16 	blt	r3,r4,10102824 <___vfprintf_internal_r+0x1f2c>
101020b0:	9480004c 	andi	r18,r18,1
101020b4:	90022b1e 	bne	r18,zero,10102964 <___vfprintf_internal_r+0x206c>
101020b8:	1805883a 	mov	r2,r3
101020bc:	18028016 	blt	r3,zero,10102ac0 <___vfprintf_internal_r+0x21c8>
101020c0:	d8c03217 	ldw	r3,200(sp)
101020c4:	044019c4 	movi	r17,103
101020c8:	d8c02e15 	stw	r3,184(sp)
101020cc:	df002a07 	ldb	fp,168(sp)
101020d0:	e001531e 	bne	fp,zero,10102620 <___vfprintf_internal_r+0x1d28>
101020d4:	df002783 	ldbu	fp,158(sp)
101020d8:	d8802a15 	stw	r2,168(sp)
101020dc:	dc802b17 	ldw	r18,172(sp)
101020e0:	d8002915 	stw	zero,164(sp)
101020e4:	003bd106 	br	1010102c <__alt_data_end+0xfffe102c>
101020e8:	d8802d17 	ldw	r2,180(sp)
101020ec:	d8c02d17 	ldw	r3,180(sp)
101020f0:	d9002d17 	ldw	r4,180(sp)
101020f4:	10800017 	ldw	r2,0(r2)
101020f8:	18c00117 	ldw	r3,4(r3)
101020fc:	21000204 	addi	r4,r4,8
10102100:	d8803615 	stw	r2,216(sp)
10102104:	d8c03815 	stw	r3,224(sp)
10102108:	d9002d15 	stw	r4,180(sp)
1010210c:	003b7506 	br	10100ee4 <__alt_data_end+0xfffe0ee4>
10102110:	ac400007 	ldb	r17,0(r21)
10102114:	003a5906 	br	10100a7c <__alt_data_end+0xfffe0a7c>
10102118:	9080100c 	andi	r2,r18,64
1010211c:	1000a826 	beq	r2,zero,101023c0 <___vfprintf_internal_r+0x1ac8>
10102120:	d9002d17 	ldw	r4,180(sp)
10102124:	002d883a 	mov	r22,zero
10102128:	24c0000b 	ldhu	r19,0(r4)
1010212c:	21000104 	addi	r4,r4,4
10102130:	d9002d15 	stw	r4,180(sp)
10102134:	003ccb06 	br	10101464 <__alt_data_end+0xfffe1464>
10102138:	d8c02d17 	ldw	r3,180(sp)
1010213c:	d9002917 	ldw	r4,164(sp)
10102140:	002d883a 	mov	r22,zero
10102144:	18800104 	addi	r2,r3,4
10102148:	1cc00017 	ldw	r19,0(r3)
1010214c:	203ebb0e 	bge	r4,zero,10101c3c <__alt_data_end+0xfffe1c3c>
10102150:	003ef106 	br	10101d18 <__alt_data_end+0xfffe1d18>
10102154:	9080040c 	andi	r2,r18,16
10102158:	1000921e 	bne	r2,zero,101023a4 <___vfprintf_internal_r+0x1aac>
1010215c:	9480100c 	andi	r18,r18,64
10102160:	90013926 	beq	r18,zero,10102648 <___vfprintf_internal_r+0x1d50>
10102164:	d9002d17 	ldw	r4,180(sp)
10102168:	d9402f17 	ldw	r5,188(sp)
1010216c:	20800017 	ldw	r2,0(r4)
10102170:	21000104 	addi	r4,r4,4
10102174:	d9002d15 	stw	r4,180(sp)
10102178:	1140000d 	sth	r5,0(r2)
1010217c:	003a1606 	br	101009d8 <__alt_data_end+0xfffe09d8>
10102180:	9080100c 	andi	r2,r18,64
10102184:	10008026 	beq	r2,zero,10102388 <___vfprintf_internal_r+0x1a90>
10102188:	d8c02d17 	ldw	r3,180(sp)
1010218c:	1cc0000f 	ldh	r19,0(r3)
10102190:	18c00104 	addi	r3,r3,4
10102194:	d8c02d15 	stw	r3,180(sp)
10102198:	982dd7fa 	srai	r22,r19,31
1010219c:	b005883a 	mov	r2,r22
101021a0:	003b1f06 	br	10100e20 <__alt_data_end+0xfffe0e20>
101021a4:	9080100c 	andi	r2,r18,64
101021a8:	d8002785 	stb	zero,158(sp)
101021ac:	10008a1e 	bne	r2,zero,101023d8 <___vfprintf_internal_r+0x1ae0>
101021b0:	d9402d17 	ldw	r5,180(sp)
101021b4:	d8c02917 	ldw	r3,164(sp)
101021b8:	002d883a 	mov	r22,zero
101021bc:	28800104 	addi	r2,r5,4
101021c0:	2cc00017 	ldw	r19,0(r5)
101021c4:	183e4b0e 	bge	r3,zero,10101af4 <__alt_data_end+0xfffe1af4>
101021c8:	9d86b03a 	or	r3,r19,r22
101021cc:	d8802d15 	stw	r2,180(sp)
101021d0:	183e4c1e 	bne	r3,zero,10101b04 <__alt_data_end+0xfffe1b04>
101021d4:	0039883a 	mov	fp,zero
101021d8:	0005883a 	mov	r2,zero
101021dc:	003d4006 	br	101016e0 <__alt_data_end+0xfffe16e0>
101021e0:	01440474 	movhi	r5,4113
101021e4:	297e1b84 	addi	r5,r5,-1938
101021e8:	d9402b15 	stw	r5,172(sp)
101021ec:	d9402b17 	ldw	r5,172(sp)
101021f0:	1c47883a 	add	r3,r3,r17
101021f4:	10800044 	addi	r2,r2,1
101021f8:	41400015 	stw	r5,0(r8)
101021fc:	44400115 	stw	r17,4(r8)
10102200:	d8c02015 	stw	r3,128(sp)
10102204:	d8801f15 	stw	r2,124(sp)
10102208:	010001c4 	movi	r4,7
1010220c:	20bec816 	blt	r4,r2,10101d30 <__alt_data_end+0xfffe1d30>
10102210:	42000204 	addi	r8,r8,8
10102214:	003ecd06 	br	10101d4c <__alt_data_end+0xfffe1d4c>
10102218:	d9002917 	ldw	r4,164(sp)
1010221c:	d8002785 	stb	zero,158(sp)
10102220:	203d2d16 	blt	r4,zero,101016d8 <__alt_data_end+0xfffe16d8>
10102224:	00bfdfc4 	movi	r2,-129
10102228:	90a4703a 	and	r18,r18,r2
1010222c:	003a9106 	br	10100c74 <__alt_data_end+0xfffe0c74>
10102230:	01040474 	movhi	r4,4113
10102234:	213e1b84 	addi	r4,r4,-1938
10102238:	d9002b15 	stw	r4,172(sp)
1010223c:	003c0c06 	br	10101270 <__alt_data_end+0xfffe1270>
10102240:	d9002c17 	ldw	r4,176(sp)
10102244:	d9801e04 	addi	r6,sp,120
10102248:	b80b883a 	mov	r5,r23
1010224c:	0107ef40 	call	10107ef4 <__sprint_r>
10102250:	103aab1e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10102254:	d8c02017 	ldw	r3,128(sp)
10102258:	da000404 	addi	r8,sp,16
1010225c:	003d4106 	br	10101764 <__alt_data_end+0xfffe1764>
10102260:	d8801f17 	ldw	r2,124(sp)
10102264:	01440474 	movhi	r5,4113
10102268:	01000044 	movi	r4,1
1010226c:	18c00044 	addi	r3,r3,1
10102270:	10800044 	addi	r2,r2,1
10102274:	297e1b04 	addi	r5,r5,-1940
10102278:	41000115 	stw	r4,4(r8)
1010227c:	41400015 	stw	r5,0(r8)
10102280:	d8c02015 	stw	r3,128(sp)
10102284:	d8801f15 	stw	r2,124(sp)
10102288:	010001c4 	movi	r4,7
1010228c:	20805c16 	blt	r4,r2,10102400 <___vfprintf_internal_r+0x1b08>
10102290:	42000204 	addi	r8,r8,8
10102294:	8800041e 	bne	r17,zero,101022a8 <___vfprintf_internal_r+0x19b0>
10102298:	d8803317 	ldw	r2,204(sp)
1010229c:	1000021e 	bne	r2,zero,101022a8 <___vfprintf_internal_r+0x19b0>
101022a0:	9080004c 	andi	r2,r18,1
101022a4:	103c0926 	beq	r2,zero,101012cc <__alt_data_end+0xfffe12cc>
101022a8:	d9003717 	ldw	r4,220(sp)
101022ac:	d8801f17 	ldw	r2,124(sp)
101022b0:	d9403417 	ldw	r5,208(sp)
101022b4:	20c7883a 	add	r3,r4,r3
101022b8:	10800044 	addi	r2,r2,1
101022bc:	41000115 	stw	r4,4(r8)
101022c0:	41400015 	stw	r5,0(r8)
101022c4:	d8c02015 	stw	r3,128(sp)
101022c8:	d8801f15 	stw	r2,124(sp)
101022cc:	010001c4 	movi	r4,7
101022d0:	20812116 	blt	r4,r2,10102758 <___vfprintf_internal_r+0x1e60>
101022d4:	42000204 	addi	r8,r8,8
101022d8:	0463c83a 	sub	r17,zero,r17
101022dc:	0440730e 	bge	zero,r17,101024ac <___vfprintf_internal_r+0x1bb4>
101022e0:	05800404 	movi	r22,16
101022e4:	b440860e 	bge	r22,r17,10102500 <___vfprintf_internal_r+0x1c08>
101022e8:	01440474 	movhi	r5,4113
101022ec:	297e1b84 	addi	r5,r5,-1938
101022f0:	d9402b15 	stw	r5,172(sp)
101022f4:	070001c4 	movi	fp,7
101022f8:	dcc02c17 	ldw	r19,176(sp)
101022fc:	00000306 	br	1010230c <___vfprintf_internal_r+0x1a14>
10102300:	42000204 	addi	r8,r8,8
10102304:	8c7ffc04 	addi	r17,r17,-16
10102308:	b440800e 	bge	r22,r17,1010250c <___vfprintf_internal_r+0x1c14>
1010230c:	18c00404 	addi	r3,r3,16
10102310:	10800044 	addi	r2,r2,1
10102314:	45000015 	stw	r20,0(r8)
10102318:	45800115 	stw	r22,4(r8)
1010231c:	d8c02015 	stw	r3,128(sp)
10102320:	d8801f15 	stw	r2,124(sp)
10102324:	e0bff60e 	bge	fp,r2,10102300 <__alt_data_end+0xfffe2300>
10102328:	d9801e04 	addi	r6,sp,120
1010232c:	b80b883a 	mov	r5,r23
10102330:	9809883a 	mov	r4,r19
10102334:	0107ef40 	call	10107ef4 <__sprint_r>
10102338:	103a711e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
1010233c:	d8c02017 	ldw	r3,128(sp)
10102340:	d8801f17 	ldw	r2,124(sp)
10102344:	da000404 	addi	r8,sp,16
10102348:	003fee06 	br	10102304 <__alt_data_end+0xfffe2304>
1010234c:	00bfffc4 	movi	r2,-1
10102350:	003a6f06 	br	10100d10 <__alt_data_end+0xfffe0d10>
10102354:	008011c4 	movi	r2,71
10102358:	1440b816 	blt	r2,r17,1010263c <___vfprintf_internal_r+0x1d44>
1010235c:	04040474 	movhi	r16,4113
10102360:	843e0d04 	addi	r16,r16,-1996
10102364:	00c000c4 	movi	r3,3
10102368:	00bfdfc4 	movi	r2,-129
1010236c:	d8c02a15 	stw	r3,168(sp)
10102370:	90a4703a 	and	r18,r18,r2
10102374:	df002783 	ldbu	fp,158(sp)
10102378:	d8c02e15 	stw	r3,184(sp)
1010237c:	d8002915 	stw	zero,164(sp)
10102380:	d8003215 	stw	zero,200(sp)
10102384:	003b2906 	br	1010102c <__alt_data_end+0xfffe102c>
10102388:	d9002d17 	ldw	r4,180(sp)
1010238c:	24c00017 	ldw	r19,0(r4)
10102390:	21000104 	addi	r4,r4,4
10102394:	d9002d15 	stw	r4,180(sp)
10102398:	982dd7fa 	srai	r22,r19,31
1010239c:	b005883a 	mov	r2,r22
101023a0:	003a9f06 	br	10100e20 <__alt_data_end+0xfffe0e20>
101023a4:	d9402d17 	ldw	r5,180(sp)
101023a8:	d8c02f17 	ldw	r3,188(sp)
101023ac:	28800017 	ldw	r2,0(r5)
101023b0:	29400104 	addi	r5,r5,4
101023b4:	d9402d15 	stw	r5,180(sp)
101023b8:	10c00015 	stw	r3,0(r2)
101023bc:	00398606 	br	101009d8 <__alt_data_end+0xfffe09d8>
101023c0:	d9402d17 	ldw	r5,180(sp)
101023c4:	002d883a 	mov	r22,zero
101023c8:	2cc00017 	ldw	r19,0(r5)
101023cc:	29400104 	addi	r5,r5,4
101023d0:	d9402d15 	stw	r5,180(sp)
101023d4:	003c2306 	br	10101464 <__alt_data_end+0xfffe1464>
101023d8:	d8c02d17 	ldw	r3,180(sp)
101023dc:	d9002917 	ldw	r4,164(sp)
101023e0:	002d883a 	mov	r22,zero
101023e4:	18800104 	addi	r2,r3,4
101023e8:	1cc0000b 	ldhu	r19,0(r3)
101023ec:	203dc10e 	bge	r4,zero,10101af4 <__alt_data_end+0xfffe1af4>
101023f0:	003f7506 	br	101021c8 <__alt_data_end+0xfffe21c8>
101023f4:	04040474 	movhi	r16,4113
101023f8:	843e0b04 	addi	r16,r16,-2004
101023fc:	003acc06 	br	10100f30 <__alt_data_end+0xfffe0f30>
10102400:	d9002c17 	ldw	r4,176(sp)
10102404:	d9801e04 	addi	r6,sp,120
10102408:	b80b883a 	mov	r5,r23
1010240c:	0107ef40 	call	10107ef4 <__sprint_r>
10102410:	103a3b1e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10102414:	dc402617 	ldw	r17,152(sp)
10102418:	d8c02017 	ldw	r3,128(sp)
1010241c:	da000404 	addi	r8,sp,16
10102420:	003f9c06 	br	10102294 <__alt_data_end+0xfffe2294>
10102424:	ac400043 	ldbu	r17,1(r21)
10102428:	94800814 	ori	r18,r18,32
1010242c:	ad400044 	addi	r21,r21,1
10102430:	8c403fcc 	andi	r17,r17,255
10102434:	8c40201c 	xori	r17,r17,128
10102438:	8c7fe004 	addi	r17,r17,-128
1010243c:	00398f06 	br	10100a7c <__alt_data_end+0xfffe0a7c>
10102440:	d8c02d15 	stw	r3,180(sp)
10102444:	0039883a 	mov	fp,zero
10102448:	003e3506 	br	10101d20 <__alt_data_end+0xfffe1d20>
1010244c:	d9002c17 	ldw	r4,176(sp)
10102450:	d9801e04 	addi	r6,sp,120
10102454:	b80b883a 	mov	r5,r23
10102458:	0107ef40 	call	10107ef4 <__sprint_r>
1010245c:	103a281e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
10102460:	d8c02017 	ldw	r3,128(sp)
10102464:	da000404 	addi	r8,sp,16
10102468:	003cd006 	br	101017ac <__alt_data_end+0xfffe17ac>
1010246c:	8009883a 	mov	r4,r16
10102470:	da003d15 	stw	r8,244(sp)
10102474:	01008600 	call	10100860 <strlen>
10102478:	d8802e15 	stw	r2,184(sp)
1010247c:	da003d17 	ldw	r8,244(sp)
10102480:	103c340e 	bge	r2,zero,10101554 <__alt_data_end+0xfffe1554>
10102484:	0005883a 	mov	r2,zero
10102488:	003c3206 	br	10101554 <__alt_data_end+0xfffe1554>
1010248c:	d9002c17 	ldw	r4,176(sp)
10102490:	d9801e04 	addi	r6,sp,120
10102494:	b80b883a 	mov	r5,r23
10102498:	0107ef40 	call	10107ef4 <__sprint_r>
1010249c:	103a181e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
101024a0:	d8c02017 	ldw	r3,128(sp)
101024a4:	d8801f17 	ldw	r2,124(sp)
101024a8:	da000404 	addi	r8,sp,16
101024ac:	d9403317 	ldw	r5,204(sp)
101024b0:	10800044 	addi	r2,r2,1
101024b4:	44000015 	stw	r16,0(r8)
101024b8:	28c7883a 	add	r3,r5,r3
101024bc:	003b7d06 	br	101012b4 <__alt_data_end+0xfffe12b4>
101024c0:	01040474 	movhi	r4,4113
101024c4:	213e1f84 	addi	r4,r4,-1922
101024c8:	d9003515 	stw	r4,212(sp)
101024cc:	003b1406 	br	10101120 <__alt_data_end+0xfffe1120>
101024d0:	013fffc4 	movi	r4,-1
101024d4:	003a3506 	br	10100dac <__alt_data_end+0xfffe0dac>
101024d8:	0023883a 	mov	r17,zero
101024dc:	003d9d06 	br	10101b54 <__alt_data_end+0xfffe1b54>
101024e0:	d9002c17 	ldw	r4,176(sp)
101024e4:	d9801e04 	addi	r6,sp,120
101024e8:	b80b883a 	mov	r5,r23
101024ec:	0107ef40 	call	10107ef4 <__sprint_r>
101024f0:	103a031e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
101024f4:	d8c02017 	ldw	r3,128(sp)
101024f8:	da000404 	addi	r8,sp,16
101024fc:	003d9406 	br	10101b50 <__alt_data_end+0xfffe1b50>
10102500:	01040474 	movhi	r4,4113
10102504:	213e1b84 	addi	r4,r4,-1938
10102508:	d9002b15 	stw	r4,172(sp)
1010250c:	d9002b17 	ldw	r4,172(sp)
10102510:	1c47883a 	add	r3,r3,r17
10102514:	10800044 	addi	r2,r2,1
10102518:	41000015 	stw	r4,0(r8)
1010251c:	44400115 	stw	r17,4(r8)
10102520:	d8c02015 	stw	r3,128(sp)
10102524:	d8801f15 	stw	r2,124(sp)
10102528:	010001c4 	movi	r4,7
1010252c:	20bfd716 	blt	r4,r2,1010248c <__alt_data_end+0xfffe248c>
10102530:	42000204 	addi	r8,r8,8
10102534:	003fdd06 	br	101024ac <__alt_data_end+0xfffe24ac>
10102538:	d9002c17 	ldw	r4,176(sp)
1010253c:	d9801e04 	addi	r6,sp,120
10102540:	b80b883a 	mov	r5,r23
10102544:	0107ef40 	call	10107ef4 <__sprint_r>
10102548:	1039ed1e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
1010254c:	d8802617 	ldw	r2,152(sp)
10102550:	d8c02017 	ldw	r3,128(sp)
10102554:	da000404 	addi	r8,sp,16
10102558:	003e1006 	br	10101d9c <__alt_data_end+0xfffe1d9c>
1010255c:	00800044 	movi	r2,1
10102560:	10803fcc 	andi	r2,r2,255
10102564:	00c00044 	movi	r3,1
10102568:	10fa3526 	beq	r2,r3,10100e40 <__alt_data_end+0xfffe0e40>
1010256c:	00c00084 	movi	r3,2
10102570:	10fbcb26 	beq	r2,r3,101014a0 <__alt_data_end+0xfffe14a0>
10102574:	003a8f06 	br	10100fb4 <__alt_data_end+0xfffe0fb4>
10102578:	01040474 	movhi	r4,4113
1010257c:	213e1f84 	addi	r4,r4,-1922
10102580:	d9003515 	stw	r4,212(sp)
10102584:	003b7606 	br	10101360 <__alt_data_end+0xfffe1360>
10102588:	d8802917 	ldw	r2,164(sp)
1010258c:	00c00184 	movi	r3,6
10102590:	1880012e 	bgeu	r3,r2,10102598 <___vfprintf_internal_r+0x1ca0>
10102594:	1805883a 	mov	r2,r3
10102598:	d8802e15 	stw	r2,184(sp)
1010259c:	1000ef16 	blt	r2,zero,1010295c <___vfprintf_internal_r+0x2064>
101025a0:	04040474 	movhi	r16,4113
101025a4:	d8802a15 	stw	r2,168(sp)
101025a8:	dcc02d15 	stw	r19,180(sp)
101025ac:	d8002915 	stw	zero,164(sp)
101025b0:	d8003215 	stw	zero,200(sp)
101025b4:	843e1904 	addi	r16,r16,-1948
101025b8:	0039883a 	mov	fp,zero
101025bc:	003aa206 	br	10101048 <__alt_data_end+0xfffe1048>
101025c0:	0021883a 	mov	r16,zero
101025c4:	003e0706 	br	10101de4 <__alt_data_end+0xfffe1de4>
101025c8:	d9002c17 	ldw	r4,176(sp)
101025cc:	d9801e04 	addi	r6,sp,120
101025d0:	b80b883a 	mov	r5,r23
101025d4:	0107ef40 	call	10107ef4 <__sprint_r>
101025d8:	1039c91e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
101025dc:	d8802617 	ldw	r2,152(sp)
101025e0:	d9403317 	ldw	r5,204(sp)
101025e4:	d8c02017 	ldw	r3,128(sp)
101025e8:	da000404 	addi	r8,sp,16
101025ec:	2885c83a 	sub	r2,r5,r2
101025f0:	003dfb06 	br	10101de0 <__alt_data_end+0xfffe1de0>
101025f4:	9080004c 	andi	r2,r18,1
101025f8:	103e8f1e 	bne	r2,zero,10102038 <__alt_data_end+0xfffe2038>
101025fc:	d8802117 	ldw	r2,132(sp)
10102600:	003e9e06 	br	1010207c <__alt_data_end+0xfffe207c>
10102604:	1025883a 	mov	r18,r2
10102608:	0039883a 	mov	fp,zero
1010260c:	00800084 	movi	r2,2
10102610:	003fd306 	br	10102560 <__alt_data_end+0xfffe2560>
10102614:	07000b44 	movi	fp,45
10102618:	df002785 	stb	fp,158(sp)
1010261c:	003a4006 	br	10100f20 <__alt_data_end+0xfffe0f20>
10102620:	00c00b44 	movi	r3,45
10102624:	d8c02785 	stb	r3,158(sp)
10102628:	d8802a15 	stw	r2,168(sp)
1010262c:	dc802b17 	ldw	r18,172(sp)
10102630:	d8002915 	stw	zero,164(sp)
10102634:	07000b44 	movi	fp,45
10102638:	003a8006 	br	1010103c <__alt_data_end+0xfffe103c>
1010263c:	04040474 	movhi	r16,4113
10102640:	843e0e04 	addi	r16,r16,-1992
10102644:	003f4706 	br	10102364 <__alt_data_end+0xfffe2364>
10102648:	d8c02d17 	ldw	r3,180(sp)
1010264c:	d9002f17 	ldw	r4,188(sp)
10102650:	18800017 	ldw	r2,0(r3)
10102654:	18c00104 	addi	r3,r3,4
10102658:	d8c02d15 	stw	r3,180(sp)
1010265c:	11000015 	stw	r4,0(r2)
10102660:	0038dd06 	br	101009d8 <__alt_data_end+0xfffe09d8>
10102664:	dd802617 	ldw	r22,152(sp)
10102668:	00bfff44 	movi	r2,-3
1010266c:	b0801c16 	blt	r22,r2,101026e0 <___vfprintf_internal_r+0x1de8>
10102670:	d9402917 	ldw	r5,164(sp)
10102674:	2d801a16 	blt	r5,r22,101026e0 <___vfprintf_internal_r+0x1de8>
10102678:	dd803215 	stw	r22,200(sp)
1010267c:	003e8906 	br	101020a4 <__alt_data_end+0xfffe20a4>
10102680:	01040474 	movhi	r4,4113
10102684:	213e1b84 	addi	r4,r4,-1938
10102688:	d9002b15 	stw	r4,172(sp)
1010268c:	003c9106 	br	101018d4 <__alt_data_end+0xfffe18d4>
10102690:	e005883a 	mov	r2,fp
10102694:	003e7906 	br	1010207c <__alt_data_end+0xfffe207c>
10102698:	d9402917 	ldw	r5,164(sp)
1010269c:	df002783 	ldbu	fp,158(sp)
101026a0:	dcc02d15 	stw	r19,180(sp)
101026a4:	d9402a15 	stw	r5,168(sp)
101026a8:	d9402e15 	stw	r5,184(sp)
101026ac:	d8002915 	stw	zero,164(sp)
101026b0:	d8003215 	stw	zero,200(sp)
101026b4:	003a5d06 	br	1010102c <__alt_data_end+0xfffe102c>
101026b8:	9080004c 	andi	r2,r18,1
101026bc:	0039883a 	mov	fp,zero
101026c0:	10000426 	beq	r2,zero,101026d4 <___vfprintf_internal_r+0x1ddc>
101026c4:	00800c04 	movi	r2,48
101026c8:	dc001dc4 	addi	r16,sp,119
101026cc:	d8801dc5 	stb	r2,119(sp)
101026d0:	003b8006 	br	101014d4 <__alt_data_end+0xfffe14d4>
101026d4:	d8002e15 	stw	zero,184(sp)
101026d8:	dc001e04 	addi	r16,sp,120
101026dc:	003a4d06 	br	10101014 <__alt_data_end+0xfffe1014>
101026e0:	8c7fff84 	addi	r17,r17,-2
101026e4:	b5bfffc4 	addi	r22,r22,-1
101026e8:	dd802615 	stw	r22,152(sp)
101026ec:	dc4022c5 	stb	r17,139(sp)
101026f0:	b000bf16 	blt	r22,zero,101029f0 <___vfprintf_internal_r+0x20f8>
101026f4:	00800ac4 	movi	r2,43
101026f8:	d8802305 	stb	r2,140(sp)
101026fc:	00800244 	movi	r2,9
10102700:	15807016 	blt	r2,r22,101028c4 <___vfprintf_internal_r+0x1fcc>
10102704:	00800c04 	movi	r2,48
10102708:	b5800c04 	addi	r22,r22,48
1010270c:	d8802345 	stb	r2,141(sp)
10102710:	dd802385 	stb	r22,142(sp)
10102714:	d88023c4 	addi	r2,sp,143
10102718:	df0022c4 	addi	fp,sp,139
1010271c:	d8c03317 	ldw	r3,204(sp)
10102720:	1739c83a 	sub	fp,r2,fp
10102724:	d9003317 	ldw	r4,204(sp)
10102728:	e0c7883a 	add	r3,fp,r3
1010272c:	df003a15 	stw	fp,232(sp)
10102730:	d8c02e15 	stw	r3,184(sp)
10102734:	00800044 	movi	r2,1
10102738:	1100b30e 	bge	r2,r4,10102a08 <___vfprintf_internal_r+0x2110>
1010273c:	d8c02e17 	ldw	r3,184(sp)
10102740:	18c00044 	addi	r3,r3,1
10102744:	d8c02e15 	stw	r3,184(sp)
10102748:	1805883a 	mov	r2,r3
1010274c:	1800ac16 	blt	r3,zero,10102a00 <___vfprintf_internal_r+0x2108>
10102750:	d8003215 	stw	zero,200(sp)
10102754:	003e5d06 	br	101020cc <__alt_data_end+0xfffe20cc>
10102758:	d9002c17 	ldw	r4,176(sp)
1010275c:	d9801e04 	addi	r6,sp,120
10102760:	b80b883a 	mov	r5,r23
10102764:	0107ef40 	call	10107ef4 <__sprint_r>
10102768:	1039651e 	bne	r2,zero,10100d00 <__alt_data_end+0xfffe0d00>
1010276c:	dc402617 	ldw	r17,152(sp)
10102770:	d8c02017 	ldw	r3,128(sp)
10102774:	d8801f17 	ldw	r2,124(sp)
10102778:	da000404 	addi	r8,sp,16
1010277c:	003ed606 	br	101022d8 <__alt_data_end+0xfffe22d8>
10102780:	582b883a 	mov	r21,r11
10102784:	d8002915 	stw	zero,164(sp)
10102788:	0038bd06 	br	10100a80 <__alt_data_end+0xfffe0a80>
1010278c:	d8802917 	ldw	r2,164(sp)
10102790:	103e071e 	bne	r2,zero,10101fb0 <__alt_data_end+0xfffe1fb0>
10102794:	dc002915 	stw	r16,164(sp)
10102798:	003e0506 	br	10101fb0 <__alt_data_end+0xfffe1fb0>
1010279c:	d9002917 	ldw	r4,164(sp)
101027a0:	20c00044 	addi	r3,r4,1
101027a4:	003e0f06 	br	10101fe4 <__alt_data_end+0xfffe1fe4>
101027a8:	01400184 	movi	r5,6
101027ac:	d9402915 	stw	r5,164(sp)
101027b0:	003dff06 	br	10101fb0 <__alt_data_end+0xfffe1fb0>
101027b4:	d8802104 	addi	r2,sp,132
101027b8:	d8800315 	stw	r2,12(sp)
101027bc:	d8802504 	addi	r2,sp,148
101027c0:	d8800215 	stw	r2,8(sp)
101027c4:	d8802604 	addi	r2,sp,152
101027c8:	d8800115 	stw	r2,4(sp)
101027cc:	d8802917 	ldw	r2,164(sp)
101027d0:	d9403617 	ldw	r5,216(sp)
101027d4:	d9002c17 	ldw	r4,176(sp)
101027d8:	d8800015 	stw	r2,0(sp)
101027dc:	01c000c4 	movi	r7,3
101027e0:	980d883a 	mov	r6,r19
101027e4:	da003d15 	stw	r8,244(sp)
101027e8:	0102f1c0 	call	10102f1c <_dtoa_r>
101027ec:	d8c02917 	ldw	r3,164(sp)
101027f0:	da003d17 	ldw	r8,244(sp)
101027f4:	1021883a 	mov	r16,r2
101027f8:	10f9883a 	add	fp,r2,r3
101027fc:	81000007 	ldb	r4,0(r16)
10102800:	00800c04 	movi	r2,48
10102804:	20805e26 	beq	r4,r2,10102980 <___vfprintf_internal_r+0x2088>
10102808:	d8c02617 	ldw	r3,152(sp)
1010280c:	e0f9883a 	add	fp,fp,r3
10102810:	003e0a06 	br	1010203c <__alt_data_end+0xfffe203c>
10102814:	00c00b44 	movi	r3,45
10102818:	24e0003c 	xorhi	r19,r4,32768
1010281c:	d8c02a05 	stb	r3,168(sp)
10102820:	003de906 	br	10101fc8 <__alt_data_end+0xfffe1fc8>
10102824:	d8c03217 	ldw	r3,200(sp)
10102828:	00c07a0e 	bge	zero,r3,10102a14 <___vfprintf_internal_r+0x211c>
1010282c:	00800044 	movi	r2,1
10102830:	d9003317 	ldw	r4,204(sp)
10102834:	1105883a 	add	r2,r2,r4
10102838:	d8802e15 	stw	r2,184(sp)
1010283c:	10004e16 	blt	r2,zero,10102978 <___vfprintf_internal_r+0x2080>
10102840:	044019c4 	movi	r17,103
10102844:	003e2106 	br	101020cc <__alt_data_end+0xfffe20cc>
10102848:	d9002917 	ldw	r4,164(sp)
1010284c:	d8802104 	addi	r2,sp,132
10102850:	d8800315 	stw	r2,12(sp)
10102854:	d9000015 	stw	r4,0(sp)
10102858:	d8802504 	addi	r2,sp,148
1010285c:	d9403617 	ldw	r5,216(sp)
10102860:	d9002c17 	ldw	r4,176(sp)
10102864:	d8800215 	stw	r2,8(sp)
10102868:	d8802604 	addi	r2,sp,152
1010286c:	d8800115 	stw	r2,4(sp)
10102870:	01c000c4 	movi	r7,3
10102874:	980d883a 	mov	r6,r19
10102878:	da003d15 	stw	r8,244(sp)
1010287c:	0102f1c0 	call	10102f1c <_dtoa_r>
10102880:	d8c02917 	ldw	r3,164(sp)
10102884:	da003d17 	ldw	r8,244(sp)
10102888:	1021883a 	mov	r16,r2
1010288c:	00801184 	movi	r2,70
10102890:	80f9883a 	add	fp,r16,r3
10102894:	88bfd926 	beq	r17,r2,101027fc <__alt_data_end+0xfffe27fc>
10102898:	003de806 	br	1010203c <__alt_data_end+0xfffe203c>
1010289c:	d9002917 	ldw	r4,164(sp)
101028a0:	00c04d0e 	bge	zero,r3,101029d8 <___vfprintf_internal_r+0x20e0>
101028a4:	2000441e 	bne	r4,zero,101029b8 <___vfprintf_internal_r+0x20c0>
101028a8:	9480004c 	andi	r18,r18,1
101028ac:	9000421e 	bne	r18,zero,101029b8 <___vfprintf_internal_r+0x20c0>
101028b0:	1805883a 	mov	r2,r3
101028b4:	18007016 	blt	r3,zero,10102a78 <___vfprintf_internal_r+0x2180>
101028b8:	d8c03217 	ldw	r3,200(sp)
101028bc:	d8c02e15 	stw	r3,184(sp)
101028c0:	003e0206 	br	101020cc <__alt_data_end+0xfffe20cc>
101028c4:	df0022c4 	addi	fp,sp,139
101028c8:	dc002915 	stw	r16,164(sp)
101028cc:	4027883a 	mov	r19,r8
101028d0:	e021883a 	mov	r16,fp
101028d4:	b009883a 	mov	r4,r22
101028d8:	01400284 	movi	r5,10
101028dc:	010a8a80 	call	1010a8a8 <__modsi3>
101028e0:	10800c04 	addi	r2,r2,48
101028e4:	843fffc4 	addi	r16,r16,-1
101028e8:	b009883a 	mov	r4,r22
101028ec:	01400284 	movi	r5,10
101028f0:	80800005 	stb	r2,0(r16)
101028f4:	010a8240 	call	1010a824 <__divsi3>
101028f8:	102d883a 	mov	r22,r2
101028fc:	00800244 	movi	r2,9
10102900:	15bff416 	blt	r2,r22,101028d4 <__alt_data_end+0xfffe28d4>
10102904:	9811883a 	mov	r8,r19
10102908:	b0800c04 	addi	r2,r22,48
1010290c:	8027883a 	mov	r19,r16
10102910:	997fffc4 	addi	r5,r19,-1
10102914:	98bfffc5 	stb	r2,-1(r19)
10102918:	dc002917 	ldw	r16,164(sp)
1010291c:	2f006a2e 	bgeu	r5,fp,10102ac8 <___vfprintf_internal_r+0x21d0>
10102920:	d9c02384 	addi	r7,sp,142
10102924:	3ccfc83a 	sub	r7,r7,r19
10102928:	d9002344 	addi	r4,sp,141
1010292c:	e1cf883a 	add	r7,fp,r7
10102930:	00000106 	br	10102938 <___vfprintf_internal_r+0x2040>
10102934:	28800003 	ldbu	r2,0(r5)
10102938:	20800005 	stb	r2,0(r4)
1010293c:	21000044 	addi	r4,r4,1
10102940:	29400044 	addi	r5,r5,1
10102944:	393ffb1e 	bne	r7,r4,10102934 <__alt_data_end+0xfffe2934>
10102948:	d8802304 	addi	r2,sp,140
1010294c:	14c5c83a 	sub	r2,r2,r19
10102950:	d8c02344 	addi	r3,sp,141
10102954:	1885883a 	add	r2,r3,r2
10102958:	003f7006 	br	1010271c <__alt_data_end+0xfffe271c>
1010295c:	0005883a 	mov	r2,zero
10102960:	003f0f06 	br	101025a0 <__alt_data_end+0xfffe25a0>
10102964:	d8c03217 	ldw	r3,200(sp)
10102968:	18c00044 	addi	r3,r3,1
1010296c:	d8c02e15 	stw	r3,184(sp)
10102970:	1805883a 	mov	r2,r3
10102974:	183fb20e 	bge	r3,zero,10102840 <__alt_data_end+0xfffe2840>
10102978:	0005883a 	mov	r2,zero
1010297c:	003fb006 	br	10102840 <__alt_data_end+0xfffe2840>
10102980:	d9003617 	ldw	r4,216(sp)
10102984:	000d883a 	mov	r6,zero
10102988:	000f883a 	mov	r7,zero
1010298c:	980b883a 	mov	r5,r19
10102990:	d8c03c15 	stw	r3,240(sp)
10102994:	da003d15 	stw	r8,244(sp)
10102998:	010bb6c0 	call	1010bb6c <__eqdf2>
1010299c:	d8c03c17 	ldw	r3,240(sp)
101029a0:	da003d17 	ldw	r8,244(sp)
101029a4:	103f9826 	beq	r2,zero,10102808 <__alt_data_end+0xfffe2808>
101029a8:	00800044 	movi	r2,1
101029ac:	10c7c83a 	sub	r3,r2,r3
101029b0:	d8c02615 	stw	r3,152(sp)
101029b4:	003f9506 	br	1010280c <__alt_data_end+0xfffe280c>
101029b8:	d9002917 	ldw	r4,164(sp)
101029bc:	d8c03217 	ldw	r3,200(sp)
101029c0:	20800044 	addi	r2,r4,1
101029c4:	1885883a 	add	r2,r3,r2
101029c8:	d8802e15 	stw	r2,184(sp)
101029cc:	103dbf0e 	bge	r2,zero,101020cc <__alt_data_end+0xfffe20cc>
101029d0:	0005883a 	mov	r2,zero
101029d4:	003dbd06 	br	101020cc <__alt_data_end+0xfffe20cc>
101029d8:	2000211e 	bne	r4,zero,10102a60 <___vfprintf_internal_r+0x2168>
101029dc:	9480004c 	andi	r18,r18,1
101029e0:	90001f1e 	bne	r18,zero,10102a60 <___vfprintf_internal_r+0x2168>
101029e4:	00800044 	movi	r2,1
101029e8:	d8802e15 	stw	r2,184(sp)
101029ec:	003db706 	br	101020cc <__alt_data_end+0xfffe20cc>
101029f0:	00800b44 	movi	r2,45
101029f4:	05adc83a 	sub	r22,zero,r22
101029f8:	d8802305 	stb	r2,140(sp)
101029fc:	003f3f06 	br	101026fc <__alt_data_end+0xfffe26fc>
10102a00:	0005883a 	mov	r2,zero
10102a04:	003f5206 	br	10102750 <__alt_data_end+0xfffe2750>
10102a08:	90a4703a 	and	r18,r18,r2
10102a0c:	903f4e26 	beq	r18,zero,10102748 <__alt_data_end+0xfffe2748>
10102a10:	003f4a06 	br	1010273c <__alt_data_end+0xfffe273c>
10102a14:	00800084 	movi	r2,2
10102a18:	10c5c83a 	sub	r2,r2,r3
10102a1c:	003f8406 	br	10102830 <__alt_data_end+0xfffe2830>
10102a20:	d8802d17 	ldw	r2,180(sp)
10102a24:	d9002d17 	ldw	r4,180(sp)
10102a28:	ac400043 	ldbu	r17,1(r21)
10102a2c:	10800017 	ldw	r2,0(r2)
10102a30:	582b883a 	mov	r21,r11
10102a34:	d8802915 	stw	r2,164(sp)
10102a38:	20800104 	addi	r2,r4,4
10102a3c:	d9002917 	ldw	r4,164(sp)
10102a40:	d8802d15 	stw	r2,180(sp)
10102a44:	203e7a0e 	bge	r4,zero,10102430 <__alt_data_end+0xfffe2430>
10102a48:	8c403fcc 	andi	r17,r17,255
10102a4c:	00bfffc4 	movi	r2,-1
10102a50:	8c40201c 	xori	r17,r17,128
10102a54:	d8802915 	stw	r2,164(sp)
10102a58:	8c7fe004 	addi	r17,r17,-128
10102a5c:	00380706 	br	10100a7c <__alt_data_end+0xfffe0a7c>
10102a60:	d8c02917 	ldw	r3,164(sp)
10102a64:	18c00084 	addi	r3,r3,2
10102a68:	d8c02e15 	stw	r3,184(sp)
10102a6c:	1805883a 	mov	r2,r3
10102a70:	183d960e 	bge	r3,zero,101020cc <__alt_data_end+0xfffe20cc>
10102a74:	003fd606 	br	101029d0 <__alt_data_end+0xfffe29d0>
10102a78:	0005883a 	mov	r2,zero
10102a7c:	003f8e06 	br	101028b8 <__alt_data_end+0xfffe28b8>
10102a80:	9080004c 	andi	r2,r18,1
10102a84:	103f811e 	bne	r2,zero,1010288c <__alt_data_end+0xfffe288c>
10102a88:	d8802117 	ldw	r2,132(sp)
10102a8c:	1405c83a 	sub	r2,r2,r16
10102a90:	d8803315 	stw	r2,204(sp)
10102a94:	b47ef326 	beq	r22,r17,10102664 <__alt_data_end+0xfffe2664>
10102a98:	dd802617 	ldw	r22,152(sp)
10102a9c:	003f1106 	br	101026e4 <__alt_data_end+0xfffe26e4>
10102aa0:	d9c02785 	stb	r7,158(sp)
10102aa4:	00390406 	br	10100eb8 <__alt_data_end+0xfffe0eb8>
10102aa8:	d9c02785 	stb	r7,158(sp)
10102aac:	0038d306 	br	10100dfc <__alt_data_end+0xfffe0dfc>
10102ab0:	d9c02785 	stb	r7,158(sp)
10102ab4:	003a6106 	br	1010143c <__alt_data_end+0xfffe143c>
10102ab8:	d9c02785 	stb	r7,158(sp)
10102abc:	003af806 	br	101016a0 <__alt_data_end+0xfffe16a0>
10102ac0:	0005883a 	mov	r2,zero
10102ac4:	003d7e06 	br	101020c0 <__alt_data_end+0xfffe20c0>
10102ac8:	d8802344 	addi	r2,sp,141
10102acc:	003f1306 	br	1010271c <__alt_data_end+0xfffe271c>
10102ad0:	d9c02785 	stb	r7,158(sp)
10102ad4:	00392306 	br	10100f64 <__alt_data_end+0xfffe0f64>
10102ad8:	d9c02785 	stb	r7,158(sp)
10102adc:	003aa906 	br	10101584 <__alt_data_end+0xfffe1584>
10102ae0:	d9c02785 	stb	r7,158(sp)
10102ae4:	003a3d06 	br	101013dc <__alt_data_end+0xfffe13dc>
10102ae8:	d9c02785 	stb	r7,158(sp)
10102aec:	003aca06 	br	10101618 <__alt_data_end+0xfffe1618>

10102af0 <__vfprintf_internal>:
10102af0:	00840474 	movhi	r2,4113
10102af4:	10857604 	addi	r2,r2,5592
10102af8:	300f883a 	mov	r7,r6
10102afc:	280d883a 	mov	r6,r5
10102b00:	200b883a 	mov	r5,r4
10102b04:	11000017 	ldw	r4,0(r2)
10102b08:	01008f81 	jmpi	101008f8 <___vfprintf_internal_r>

10102b0c <__sbprintf>:
10102b0c:	2880030b 	ldhu	r2,12(r5)
10102b10:	2ac01917 	ldw	r11,100(r5)
10102b14:	2a80038b 	ldhu	r10,14(r5)
10102b18:	2a400717 	ldw	r9,28(r5)
10102b1c:	2a000917 	ldw	r8,36(r5)
10102b20:	defee204 	addi	sp,sp,-1144
10102b24:	00c10004 	movi	r3,1024
10102b28:	dc011a15 	stw	r16,1128(sp)
10102b2c:	10bfff4c 	andi	r2,r2,65533
10102b30:	2821883a 	mov	r16,r5
10102b34:	d8cb883a 	add	r5,sp,r3
10102b38:	dc811c15 	stw	r18,1136(sp)
10102b3c:	dc411b15 	stw	r17,1132(sp)
10102b40:	dfc11d15 	stw	ra,1140(sp)
10102b44:	2025883a 	mov	r18,r4
10102b48:	d881030d 	sth	r2,1036(sp)
10102b4c:	dac11915 	stw	r11,1124(sp)
10102b50:	da81038d 	sth	r10,1038(sp)
10102b54:	da410715 	stw	r9,1052(sp)
10102b58:	da010915 	stw	r8,1060(sp)
10102b5c:	dec10015 	stw	sp,1024(sp)
10102b60:	dec10415 	stw	sp,1040(sp)
10102b64:	d8c10215 	stw	r3,1032(sp)
10102b68:	d8c10515 	stw	r3,1044(sp)
10102b6c:	d8010615 	stw	zero,1048(sp)
10102b70:	01008f80 	call	101008f8 <___vfprintf_internal_r>
10102b74:	1023883a 	mov	r17,r2
10102b78:	10000416 	blt	r2,zero,10102b8c <__sbprintf+0x80>
10102b7c:	d9410004 	addi	r5,sp,1024
10102b80:	9009883a 	mov	r4,r18
10102b84:	01047c00 	call	101047c0 <_fflush_r>
10102b88:	10000d1e 	bne	r2,zero,10102bc0 <__sbprintf+0xb4>
10102b8c:	d881030b 	ldhu	r2,1036(sp)
10102b90:	1080100c 	andi	r2,r2,64
10102b94:	10000326 	beq	r2,zero,10102ba4 <__sbprintf+0x98>
10102b98:	8080030b 	ldhu	r2,12(r16)
10102b9c:	10801014 	ori	r2,r2,64
10102ba0:	8080030d 	sth	r2,12(r16)
10102ba4:	8805883a 	mov	r2,r17
10102ba8:	dfc11d17 	ldw	ra,1140(sp)
10102bac:	dc811c17 	ldw	r18,1136(sp)
10102bb0:	dc411b17 	ldw	r17,1132(sp)
10102bb4:	dc011a17 	ldw	r16,1128(sp)
10102bb8:	dec11e04 	addi	sp,sp,1144
10102bbc:	f800283a 	ret
10102bc0:	047fffc4 	movi	r17,-1
10102bc4:	003ff106 	br	10102b8c <__alt_data_end+0xfffe2b8c>

10102bc8 <__swsetup_r>:
10102bc8:	00840474 	movhi	r2,4113
10102bcc:	defffd04 	addi	sp,sp,-12
10102bd0:	10857604 	addi	r2,r2,5592
10102bd4:	dc400115 	stw	r17,4(sp)
10102bd8:	2023883a 	mov	r17,r4
10102bdc:	11000017 	ldw	r4,0(r2)
10102be0:	dc000015 	stw	r16,0(sp)
10102be4:	dfc00215 	stw	ra,8(sp)
10102be8:	2821883a 	mov	r16,r5
10102bec:	20000226 	beq	r4,zero,10102bf8 <__swsetup_r+0x30>
10102bf0:	20800e17 	ldw	r2,56(r4)
10102bf4:	10003126 	beq	r2,zero,10102cbc <__swsetup_r+0xf4>
10102bf8:	8080030b 	ldhu	r2,12(r16)
10102bfc:	10c0020c 	andi	r3,r2,8
10102c00:	1009883a 	mov	r4,r2
10102c04:	18000f26 	beq	r3,zero,10102c44 <__swsetup_r+0x7c>
10102c08:	80c00417 	ldw	r3,16(r16)
10102c0c:	18001526 	beq	r3,zero,10102c64 <__swsetup_r+0x9c>
10102c10:	1100004c 	andi	r4,r2,1
10102c14:	20001c1e 	bne	r4,zero,10102c88 <__swsetup_r+0xc0>
10102c18:	1080008c 	andi	r2,r2,2
10102c1c:	1000291e 	bne	r2,zero,10102cc4 <__swsetup_r+0xfc>
10102c20:	80800517 	ldw	r2,20(r16)
10102c24:	80800215 	stw	r2,8(r16)
10102c28:	18001c26 	beq	r3,zero,10102c9c <__swsetup_r+0xd4>
10102c2c:	0005883a 	mov	r2,zero
10102c30:	dfc00217 	ldw	ra,8(sp)
10102c34:	dc400117 	ldw	r17,4(sp)
10102c38:	dc000017 	ldw	r16,0(sp)
10102c3c:	dec00304 	addi	sp,sp,12
10102c40:	f800283a 	ret
10102c44:	2080040c 	andi	r2,r4,16
10102c48:	10002e26 	beq	r2,zero,10102d04 <__swsetup_r+0x13c>
10102c4c:	2080010c 	andi	r2,r4,4
10102c50:	10001e1e 	bne	r2,zero,10102ccc <__swsetup_r+0x104>
10102c54:	80c00417 	ldw	r3,16(r16)
10102c58:	20800214 	ori	r2,r4,8
10102c5c:	8080030d 	sth	r2,12(r16)
10102c60:	183feb1e 	bne	r3,zero,10102c10 <__alt_data_end+0xfffe2c10>
10102c64:	1100a00c 	andi	r4,r2,640
10102c68:	01408004 	movi	r5,512
10102c6c:	217fe826 	beq	r4,r5,10102c10 <__alt_data_end+0xfffe2c10>
10102c70:	800b883a 	mov	r5,r16
10102c74:	8809883a 	mov	r4,r17
10102c78:	01057400 	call	10105740 <__smakebuf_r>
10102c7c:	8080030b 	ldhu	r2,12(r16)
10102c80:	80c00417 	ldw	r3,16(r16)
10102c84:	003fe206 	br	10102c10 <__alt_data_end+0xfffe2c10>
10102c88:	80800517 	ldw	r2,20(r16)
10102c8c:	80000215 	stw	zero,8(r16)
10102c90:	0085c83a 	sub	r2,zero,r2
10102c94:	80800615 	stw	r2,24(r16)
10102c98:	183fe41e 	bne	r3,zero,10102c2c <__alt_data_end+0xfffe2c2c>
10102c9c:	80c0030b 	ldhu	r3,12(r16)
10102ca0:	0005883a 	mov	r2,zero
10102ca4:	1900200c 	andi	r4,r3,128
10102ca8:	203fe126 	beq	r4,zero,10102c30 <__alt_data_end+0xfffe2c30>
10102cac:	18c01014 	ori	r3,r3,64
10102cb0:	80c0030d 	sth	r3,12(r16)
10102cb4:	00bfffc4 	movi	r2,-1
10102cb8:	003fdd06 	br	10102c30 <__alt_data_end+0xfffe2c30>
10102cbc:	0104b9c0 	call	10104b9c <__sinit>
10102cc0:	003fcd06 	br	10102bf8 <__alt_data_end+0xfffe2bf8>
10102cc4:	0005883a 	mov	r2,zero
10102cc8:	003fd606 	br	10102c24 <__alt_data_end+0xfffe2c24>
10102ccc:	81400c17 	ldw	r5,48(r16)
10102cd0:	28000626 	beq	r5,zero,10102cec <__swsetup_r+0x124>
10102cd4:	80801004 	addi	r2,r16,64
10102cd8:	28800326 	beq	r5,r2,10102ce8 <__swsetup_r+0x120>
10102cdc:	8809883a 	mov	r4,r17
10102ce0:	0104d100 	call	10104d10 <_free_r>
10102ce4:	8100030b 	ldhu	r4,12(r16)
10102ce8:	80000c15 	stw	zero,48(r16)
10102cec:	80c00417 	ldw	r3,16(r16)
10102cf0:	00bff6c4 	movi	r2,-37
10102cf4:	1108703a 	and	r4,r2,r4
10102cf8:	80000115 	stw	zero,4(r16)
10102cfc:	80c00015 	stw	r3,0(r16)
10102d00:	003fd506 	br	10102c58 <__alt_data_end+0xfffe2c58>
10102d04:	00800244 	movi	r2,9
10102d08:	88800015 	stw	r2,0(r17)
10102d0c:	20801014 	ori	r2,r4,64
10102d10:	8080030d 	sth	r2,12(r16)
10102d14:	00bfffc4 	movi	r2,-1
10102d18:	003fc506 	br	10102c30 <__alt_data_end+0xfffe2c30>

10102d1c <quorem>:
10102d1c:	defff704 	addi	sp,sp,-36
10102d20:	dc800215 	stw	r18,8(sp)
10102d24:	20800417 	ldw	r2,16(r4)
10102d28:	2c800417 	ldw	r18,16(r5)
10102d2c:	dfc00815 	stw	ra,32(sp)
10102d30:	ddc00715 	stw	r23,28(sp)
10102d34:	dd800615 	stw	r22,24(sp)
10102d38:	dd400515 	stw	r21,20(sp)
10102d3c:	dd000415 	stw	r20,16(sp)
10102d40:	dcc00315 	stw	r19,12(sp)
10102d44:	dc400115 	stw	r17,4(sp)
10102d48:	dc000015 	stw	r16,0(sp)
10102d4c:	14807116 	blt	r2,r18,10102f14 <quorem+0x1f8>
10102d50:	94bfffc4 	addi	r18,r18,-1
10102d54:	94ad883a 	add	r22,r18,r18
10102d58:	b5ad883a 	add	r22,r22,r22
10102d5c:	2c400504 	addi	r17,r5,20
10102d60:	8da9883a 	add	r20,r17,r22
10102d64:	25400504 	addi	r21,r4,20
10102d68:	282f883a 	mov	r23,r5
10102d6c:	adad883a 	add	r22,r21,r22
10102d70:	a1400017 	ldw	r5,0(r20)
10102d74:	2021883a 	mov	r16,r4
10102d78:	b1000017 	ldw	r4,0(r22)
10102d7c:	29400044 	addi	r5,r5,1
10102d80:	010a91c0 	call	1010a91c <__udivsi3>
10102d84:	1027883a 	mov	r19,r2
10102d88:	10002c26 	beq	r2,zero,10102e3c <quorem+0x120>
10102d8c:	a813883a 	mov	r9,r21
10102d90:	880b883a 	mov	r5,r17
10102d94:	0009883a 	mov	r4,zero
10102d98:	000d883a 	mov	r6,zero
10102d9c:	2a000017 	ldw	r8,0(r5)
10102da0:	49c00017 	ldw	r7,0(r9)
10102da4:	29400104 	addi	r5,r5,4
10102da8:	40bfffcc 	andi	r2,r8,65535
10102dac:	14c5383a 	mul	r2,r2,r19
10102db0:	4010d43a 	srli	r8,r8,16
10102db4:	38ffffcc 	andi	r3,r7,65535
10102db8:	1105883a 	add	r2,r2,r4
10102dbc:	1008d43a 	srli	r4,r2,16
10102dc0:	44d1383a 	mul	r8,r8,r19
10102dc4:	198d883a 	add	r6,r3,r6
10102dc8:	10ffffcc 	andi	r3,r2,65535
10102dcc:	30c7c83a 	sub	r3,r6,r3
10102dd0:	380ed43a 	srli	r7,r7,16
10102dd4:	4105883a 	add	r2,r8,r4
10102dd8:	180dd43a 	srai	r6,r3,16
10102ddc:	113fffcc 	andi	r4,r2,65535
10102de0:	390fc83a 	sub	r7,r7,r4
10102de4:	398d883a 	add	r6,r7,r6
10102de8:	300e943a 	slli	r7,r6,16
10102dec:	18ffffcc 	andi	r3,r3,65535
10102df0:	1008d43a 	srli	r4,r2,16
10102df4:	38ceb03a 	or	r7,r7,r3
10102df8:	49c00015 	stw	r7,0(r9)
10102dfc:	300dd43a 	srai	r6,r6,16
10102e00:	4a400104 	addi	r9,r9,4
10102e04:	a17fe52e 	bgeu	r20,r5,10102d9c <__alt_data_end+0xfffe2d9c>
10102e08:	b0800017 	ldw	r2,0(r22)
10102e0c:	10000b1e 	bne	r2,zero,10102e3c <quorem+0x120>
10102e10:	b0bfff04 	addi	r2,r22,-4
10102e14:	a880082e 	bgeu	r21,r2,10102e38 <quorem+0x11c>
10102e18:	b0ffff17 	ldw	r3,-4(r22)
10102e1c:	18000326 	beq	r3,zero,10102e2c <quorem+0x110>
10102e20:	00000506 	br	10102e38 <quorem+0x11c>
10102e24:	10c00017 	ldw	r3,0(r2)
10102e28:	1800031e 	bne	r3,zero,10102e38 <quorem+0x11c>
10102e2c:	10bfff04 	addi	r2,r2,-4
10102e30:	94bfffc4 	addi	r18,r18,-1
10102e34:	a8bffb36 	bltu	r21,r2,10102e24 <__alt_data_end+0xfffe2e24>
10102e38:	84800415 	stw	r18,16(r16)
10102e3c:	b80b883a 	mov	r5,r23
10102e40:	8009883a 	mov	r4,r16
10102e44:	0106e800 	call	10106e80 <__mcmp>
10102e48:	10002616 	blt	r2,zero,10102ee4 <quorem+0x1c8>
10102e4c:	9cc00044 	addi	r19,r19,1
10102e50:	a805883a 	mov	r2,r21
10102e54:	000b883a 	mov	r5,zero
10102e58:	11000017 	ldw	r4,0(r2)
10102e5c:	89800017 	ldw	r6,0(r17)
10102e60:	10800104 	addi	r2,r2,4
10102e64:	20ffffcc 	andi	r3,r4,65535
10102e68:	194b883a 	add	r5,r3,r5
10102e6c:	30ffffcc 	andi	r3,r6,65535
10102e70:	28c7c83a 	sub	r3,r5,r3
10102e74:	300cd43a 	srli	r6,r6,16
10102e78:	2008d43a 	srli	r4,r4,16
10102e7c:	180bd43a 	srai	r5,r3,16
10102e80:	18ffffcc 	andi	r3,r3,65535
10102e84:	2189c83a 	sub	r4,r4,r6
10102e88:	2149883a 	add	r4,r4,r5
10102e8c:	200c943a 	slli	r6,r4,16
10102e90:	8c400104 	addi	r17,r17,4
10102e94:	200bd43a 	srai	r5,r4,16
10102e98:	30c6b03a 	or	r3,r6,r3
10102e9c:	10ffff15 	stw	r3,-4(r2)
10102ea0:	a47fed2e 	bgeu	r20,r17,10102e58 <__alt_data_end+0xfffe2e58>
10102ea4:	9485883a 	add	r2,r18,r18
10102ea8:	1085883a 	add	r2,r2,r2
10102eac:	a887883a 	add	r3,r21,r2
10102eb0:	18800017 	ldw	r2,0(r3)
10102eb4:	10000b1e 	bne	r2,zero,10102ee4 <quorem+0x1c8>
10102eb8:	18bfff04 	addi	r2,r3,-4
10102ebc:	a880082e 	bgeu	r21,r2,10102ee0 <quorem+0x1c4>
10102ec0:	18ffff17 	ldw	r3,-4(r3)
10102ec4:	18000326 	beq	r3,zero,10102ed4 <quorem+0x1b8>
10102ec8:	00000506 	br	10102ee0 <quorem+0x1c4>
10102ecc:	10c00017 	ldw	r3,0(r2)
10102ed0:	1800031e 	bne	r3,zero,10102ee0 <quorem+0x1c4>
10102ed4:	10bfff04 	addi	r2,r2,-4
10102ed8:	94bfffc4 	addi	r18,r18,-1
10102edc:	a8bffb36 	bltu	r21,r2,10102ecc <__alt_data_end+0xfffe2ecc>
10102ee0:	84800415 	stw	r18,16(r16)
10102ee4:	9805883a 	mov	r2,r19
10102ee8:	dfc00817 	ldw	ra,32(sp)
10102eec:	ddc00717 	ldw	r23,28(sp)
10102ef0:	dd800617 	ldw	r22,24(sp)
10102ef4:	dd400517 	ldw	r21,20(sp)
10102ef8:	dd000417 	ldw	r20,16(sp)
10102efc:	dcc00317 	ldw	r19,12(sp)
10102f00:	dc800217 	ldw	r18,8(sp)
10102f04:	dc400117 	ldw	r17,4(sp)
10102f08:	dc000017 	ldw	r16,0(sp)
10102f0c:	dec00904 	addi	sp,sp,36
10102f10:	f800283a 	ret
10102f14:	0005883a 	mov	r2,zero
10102f18:	003ff306 	br	10102ee8 <__alt_data_end+0xfffe2ee8>

10102f1c <_dtoa_r>:
10102f1c:	20801017 	ldw	r2,64(r4)
10102f20:	deffde04 	addi	sp,sp,-136
10102f24:	df002015 	stw	fp,128(sp)
10102f28:	dcc01b15 	stw	r19,108(sp)
10102f2c:	dc801a15 	stw	r18,104(sp)
10102f30:	dc401915 	stw	r17,100(sp)
10102f34:	dc001815 	stw	r16,96(sp)
10102f38:	dfc02115 	stw	ra,132(sp)
10102f3c:	ddc01f15 	stw	r23,124(sp)
10102f40:	dd801e15 	stw	r22,120(sp)
10102f44:	dd401d15 	stw	r21,116(sp)
10102f48:	dd001c15 	stw	r20,112(sp)
10102f4c:	d9c00315 	stw	r7,12(sp)
10102f50:	2039883a 	mov	fp,r4
10102f54:	3023883a 	mov	r17,r6
10102f58:	2825883a 	mov	r18,r5
10102f5c:	dc002417 	ldw	r16,144(sp)
10102f60:	3027883a 	mov	r19,r6
10102f64:	10000826 	beq	r2,zero,10102f88 <_dtoa_r+0x6c>
10102f68:	21801117 	ldw	r6,68(r4)
10102f6c:	00c00044 	movi	r3,1
10102f70:	100b883a 	mov	r5,r2
10102f74:	1986983a 	sll	r3,r3,r6
10102f78:	11800115 	stw	r6,4(r2)
10102f7c:	10c00215 	stw	r3,8(r2)
10102f80:	01066600 	call	10106660 <_Bfree>
10102f84:	e0001015 	stw	zero,64(fp)
10102f88:	88002e16 	blt	r17,zero,10103044 <_dtoa_r+0x128>
10102f8c:	80000015 	stw	zero,0(r16)
10102f90:	889ffc2c 	andhi	r2,r17,32752
10102f94:	00dffc34 	movhi	r3,32752
10102f98:	10c01c26 	beq	r2,r3,1010300c <_dtoa_r+0xf0>
10102f9c:	000d883a 	mov	r6,zero
10102fa0:	000f883a 	mov	r7,zero
10102fa4:	9009883a 	mov	r4,r18
10102fa8:	980b883a 	mov	r5,r19
10102fac:	010bb6c0 	call	1010bb6c <__eqdf2>
10102fb0:	10002b1e 	bne	r2,zero,10103060 <_dtoa_r+0x144>
10102fb4:	d9c02317 	ldw	r7,140(sp)
10102fb8:	00800044 	movi	r2,1
10102fbc:	38800015 	stw	r2,0(r7)
10102fc0:	d8802517 	ldw	r2,148(sp)
10102fc4:	10019e26 	beq	r2,zero,10103640 <_dtoa_r+0x724>
10102fc8:	d8c02517 	ldw	r3,148(sp)
10102fcc:	00840474 	movhi	r2,4113
10102fd0:	10be1b44 	addi	r2,r2,-1939
10102fd4:	18800015 	stw	r2,0(r3)
10102fd8:	10bfffc4 	addi	r2,r2,-1
10102fdc:	dfc02117 	ldw	ra,132(sp)
10102fe0:	df002017 	ldw	fp,128(sp)
10102fe4:	ddc01f17 	ldw	r23,124(sp)
10102fe8:	dd801e17 	ldw	r22,120(sp)
10102fec:	dd401d17 	ldw	r21,116(sp)
10102ff0:	dd001c17 	ldw	r20,112(sp)
10102ff4:	dcc01b17 	ldw	r19,108(sp)
10102ff8:	dc801a17 	ldw	r18,104(sp)
10102ffc:	dc401917 	ldw	r17,100(sp)
10103000:	dc001817 	ldw	r16,96(sp)
10103004:	dec02204 	addi	sp,sp,136
10103008:	f800283a 	ret
1010300c:	d8c02317 	ldw	r3,140(sp)
10103010:	0089c3c4 	movi	r2,9999
10103014:	18800015 	stw	r2,0(r3)
10103018:	90017726 	beq	r18,zero,101035f8 <_dtoa_r+0x6dc>
1010301c:	00840474 	movhi	r2,4113
10103020:	10be2704 	addi	r2,r2,-1892
10103024:	d9002517 	ldw	r4,148(sp)
10103028:	203fec26 	beq	r4,zero,10102fdc <__alt_data_end+0xfffe2fdc>
1010302c:	10c000c7 	ldb	r3,3(r2)
10103030:	1801781e 	bne	r3,zero,10103614 <_dtoa_r+0x6f8>
10103034:	10c000c4 	addi	r3,r2,3
10103038:	d9802517 	ldw	r6,148(sp)
1010303c:	30c00015 	stw	r3,0(r6)
10103040:	003fe606 	br	10102fdc <__alt_data_end+0xfffe2fdc>
10103044:	04e00034 	movhi	r19,32768
10103048:	9cffffc4 	addi	r19,r19,-1
1010304c:	00800044 	movi	r2,1
10103050:	8ce6703a 	and	r19,r17,r19
10103054:	80800015 	stw	r2,0(r16)
10103058:	9823883a 	mov	r17,r19
1010305c:	003fcc06 	br	10102f90 <__alt_data_end+0xfffe2f90>
10103060:	d8800204 	addi	r2,sp,8
10103064:	d8800015 	stw	r2,0(sp)
10103068:	d9c00104 	addi	r7,sp,4
1010306c:	900b883a 	mov	r5,r18
10103070:	980d883a 	mov	r6,r19
10103074:	e009883a 	mov	r4,fp
10103078:	8820d53a 	srli	r16,r17,20
1010307c:	010724c0 	call	1010724c <__d2b>
10103080:	d8800915 	stw	r2,36(sp)
10103084:	8001651e 	bne	r16,zero,1010361c <_dtoa_r+0x700>
10103088:	dd800217 	ldw	r22,8(sp)
1010308c:	dc000117 	ldw	r16,4(sp)
10103090:	00800804 	movi	r2,32
10103094:	b421883a 	add	r16,r22,r16
10103098:	80c10c84 	addi	r3,r16,1074
1010309c:	10c2d10e 	bge	r2,r3,10103be4 <_dtoa_r+0xcc8>
101030a0:	00801004 	movi	r2,64
101030a4:	81010484 	addi	r4,r16,1042
101030a8:	10c7c83a 	sub	r3,r2,r3
101030ac:	9108d83a 	srl	r4,r18,r4
101030b0:	88e2983a 	sll	r17,r17,r3
101030b4:	2448b03a 	or	r4,r4,r17
101030b8:	010cf340 	call	1010cf34 <__floatunsidf>
101030bc:	017f8434 	movhi	r5,65040
101030c0:	01800044 	movi	r6,1
101030c4:	1009883a 	mov	r4,r2
101030c8:	194b883a 	add	r5,r3,r5
101030cc:	843fffc4 	addi	r16,r16,-1
101030d0:	d9801115 	stw	r6,68(sp)
101030d4:	000d883a 	mov	r6,zero
101030d8:	01cffe34 	movhi	r7,16376
101030dc:	010c4dc0 	call	1010c4dc <__subdf3>
101030e0:	0198dbf4 	movhi	r6,25455
101030e4:	01cff4f4 	movhi	r7,16339
101030e8:	3190d844 	addi	r6,r6,17249
101030ec:	39e1e9c4 	addi	r7,r7,-30809
101030f0:	1009883a 	mov	r4,r2
101030f4:	180b883a 	mov	r5,r3
101030f8:	010bdc40 	call	1010bdc4 <__muldf3>
101030fc:	01a2d874 	movhi	r6,35681
10103100:	01cff1f4 	movhi	r7,16327
10103104:	31b22cc4 	addi	r6,r6,-14157
10103108:	39e28a04 	addi	r7,r7,-30168
1010310c:	180b883a 	mov	r5,r3
10103110:	1009883a 	mov	r4,r2
10103114:	010a9d80 	call	1010a9d8 <__adddf3>
10103118:	8009883a 	mov	r4,r16
1010311c:	1029883a 	mov	r20,r2
10103120:	1823883a 	mov	r17,r3
10103124:	010ce580 	call	1010ce58 <__floatsidf>
10103128:	019427f4 	movhi	r6,20639
1010312c:	01cff4f4 	movhi	r7,16339
10103130:	319e7ec4 	addi	r6,r6,31227
10103134:	39d104c4 	addi	r7,r7,17427
10103138:	1009883a 	mov	r4,r2
1010313c:	180b883a 	mov	r5,r3
10103140:	010bdc40 	call	1010bdc4 <__muldf3>
10103144:	100d883a 	mov	r6,r2
10103148:	180f883a 	mov	r7,r3
1010314c:	a009883a 	mov	r4,r20
10103150:	880b883a 	mov	r5,r17
10103154:	010a9d80 	call	1010a9d8 <__adddf3>
10103158:	1009883a 	mov	r4,r2
1010315c:	180b883a 	mov	r5,r3
10103160:	1029883a 	mov	r20,r2
10103164:	1823883a 	mov	r17,r3
10103168:	010cdd80 	call	1010cdd8 <__fixdfsi>
1010316c:	000d883a 	mov	r6,zero
10103170:	000f883a 	mov	r7,zero
10103174:	a009883a 	mov	r4,r20
10103178:	880b883a 	mov	r5,r17
1010317c:	d8800515 	stw	r2,20(sp)
10103180:	010bcd00 	call	1010bcd0 <__ledf2>
10103184:	10028716 	blt	r2,zero,10103ba4 <_dtoa_r+0xc88>
10103188:	d8c00517 	ldw	r3,20(sp)
1010318c:	00800584 	movi	r2,22
10103190:	10c27536 	bltu	r2,r3,10103b68 <_dtoa_r+0xc4c>
10103194:	180490fa 	slli	r2,r3,3
10103198:	00c40474 	movhi	r3,4113
1010319c:	18fe4304 	addi	r3,r3,-1780
101031a0:	1885883a 	add	r2,r3,r2
101031a4:	11000017 	ldw	r4,0(r2)
101031a8:	11400117 	ldw	r5,4(r2)
101031ac:	900d883a 	mov	r6,r18
101031b0:	980f883a 	mov	r7,r19
101031b4:	010bbf40 	call	1010bbf4 <__gedf2>
101031b8:	00828d0e 	bge	zero,r2,10103bf0 <_dtoa_r+0xcd4>
101031bc:	d9000517 	ldw	r4,20(sp)
101031c0:	d8000e15 	stw	zero,56(sp)
101031c4:	213fffc4 	addi	r4,r4,-1
101031c8:	d9000515 	stw	r4,20(sp)
101031cc:	b42dc83a 	sub	r22,r22,r16
101031d0:	b5bfffc4 	addi	r22,r22,-1
101031d4:	b0026f16 	blt	r22,zero,10103b94 <_dtoa_r+0xc78>
101031d8:	d8000815 	stw	zero,32(sp)
101031dc:	d9c00517 	ldw	r7,20(sp)
101031e0:	38026416 	blt	r7,zero,10103b74 <_dtoa_r+0xc58>
101031e4:	b1ed883a 	add	r22,r22,r7
101031e8:	d9c00d15 	stw	r7,52(sp)
101031ec:	d8000a15 	stw	zero,40(sp)
101031f0:	d9800317 	ldw	r6,12(sp)
101031f4:	00800244 	movi	r2,9
101031f8:	11811436 	bltu	r2,r6,1010364c <_dtoa_r+0x730>
101031fc:	00800144 	movi	r2,5
10103200:	1184e10e 	bge	r2,r6,10104588 <_dtoa_r+0x166c>
10103204:	31bfff04 	addi	r6,r6,-4
10103208:	d9800315 	stw	r6,12(sp)
1010320c:	0023883a 	mov	r17,zero
10103210:	d9800317 	ldw	r6,12(sp)
10103214:	008000c4 	movi	r2,3
10103218:	30836726 	beq	r6,r2,10103fb8 <_dtoa_r+0x109c>
1010321c:	1183410e 	bge	r2,r6,10103f24 <_dtoa_r+0x1008>
10103220:	d9c00317 	ldw	r7,12(sp)
10103224:	00800104 	movi	r2,4
10103228:	38827c26 	beq	r7,r2,10103c1c <_dtoa_r+0xd00>
1010322c:	00800144 	movi	r2,5
10103230:	3884c41e 	bne	r7,r2,10104544 <_dtoa_r+0x1628>
10103234:	00800044 	movi	r2,1
10103238:	d8800b15 	stw	r2,44(sp)
1010323c:	d8c00517 	ldw	r3,20(sp)
10103240:	d9002217 	ldw	r4,136(sp)
10103244:	1907883a 	add	r3,r3,r4
10103248:	19800044 	addi	r6,r3,1
1010324c:	d8c00c15 	stw	r3,48(sp)
10103250:	d9800615 	stw	r6,24(sp)
10103254:	0183a40e 	bge	zero,r6,101040e8 <_dtoa_r+0x11cc>
10103258:	d9800617 	ldw	r6,24(sp)
1010325c:	3021883a 	mov	r16,r6
10103260:	e0001115 	stw	zero,68(fp)
10103264:	008005c4 	movi	r2,23
10103268:	1184c92e 	bgeu	r2,r6,10104590 <_dtoa_r+0x1674>
1010326c:	00c00044 	movi	r3,1
10103270:	00800104 	movi	r2,4
10103274:	1085883a 	add	r2,r2,r2
10103278:	11000504 	addi	r4,r2,20
1010327c:	180b883a 	mov	r5,r3
10103280:	18c00044 	addi	r3,r3,1
10103284:	313ffb2e 	bgeu	r6,r4,10103274 <__alt_data_end+0xfffe3274>
10103288:	e1401115 	stw	r5,68(fp)
1010328c:	e009883a 	mov	r4,fp
10103290:	01065b80 	call	101065b8 <_Balloc>
10103294:	d8800715 	stw	r2,28(sp)
10103298:	e0801015 	stw	r2,64(fp)
1010329c:	00800384 	movi	r2,14
101032a0:	1400f736 	bltu	r2,r16,10103680 <_dtoa_r+0x764>
101032a4:	8800f626 	beq	r17,zero,10103680 <_dtoa_r+0x764>
101032a8:	d9c00517 	ldw	r7,20(sp)
101032ac:	01c39a0e 	bge	zero,r7,10104118 <_dtoa_r+0x11fc>
101032b0:	388003cc 	andi	r2,r7,15
101032b4:	100490fa 	slli	r2,r2,3
101032b8:	382bd13a 	srai	r21,r7,4
101032bc:	00c40474 	movhi	r3,4113
101032c0:	18fe4304 	addi	r3,r3,-1780
101032c4:	1885883a 	add	r2,r3,r2
101032c8:	a8c0040c 	andi	r3,r21,16
101032cc:	12400017 	ldw	r9,0(r2)
101032d0:	12000117 	ldw	r8,4(r2)
101032d4:	18037926 	beq	r3,zero,101040bc <_dtoa_r+0x11a0>
101032d8:	00840474 	movhi	r2,4113
101032dc:	10be3904 	addi	r2,r2,-1820
101032e0:	11800817 	ldw	r6,32(r2)
101032e4:	11c00917 	ldw	r7,36(r2)
101032e8:	9009883a 	mov	r4,r18
101032ec:	980b883a 	mov	r5,r19
101032f0:	da001715 	stw	r8,92(sp)
101032f4:	da401615 	stw	r9,88(sp)
101032f8:	010b2840 	call	1010b284 <__divdf3>
101032fc:	da001717 	ldw	r8,92(sp)
10103300:	da401617 	ldw	r9,88(sp)
10103304:	ad4003cc 	andi	r21,r21,15
10103308:	040000c4 	movi	r16,3
1010330c:	1023883a 	mov	r17,r2
10103310:	1829883a 	mov	r20,r3
10103314:	a8001126 	beq	r21,zero,1010335c <_dtoa_r+0x440>
10103318:	05c40474 	movhi	r23,4113
1010331c:	bdfe3904 	addi	r23,r23,-1820
10103320:	4805883a 	mov	r2,r9
10103324:	4007883a 	mov	r3,r8
10103328:	a980004c 	andi	r6,r21,1
1010332c:	1009883a 	mov	r4,r2
10103330:	a82bd07a 	srai	r21,r21,1
10103334:	180b883a 	mov	r5,r3
10103338:	30000426 	beq	r6,zero,1010334c <_dtoa_r+0x430>
1010333c:	b9800017 	ldw	r6,0(r23)
10103340:	b9c00117 	ldw	r7,4(r23)
10103344:	84000044 	addi	r16,r16,1
10103348:	010bdc40 	call	1010bdc4 <__muldf3>
1010334c:	bdc00204 	addi	r23,r23,8
10103350:	a83ff51e 	bne	r21,zero,10103328 <__alt_data_end+0xfffe3328>
10103354:	1013883a 	mov	r9,r2
10103358:	1811883a 	mov	r8,r3
1010335c:	480d883a 	mov	r6,r9
10103360:	400f883a 	mov	r7,r8
10103364:	8809883a 	mov	r4,r17
10103368:	a00b883a 	mov	r5,r20
1010336c:	010b2840 	call	1010b284 <__divdf3>
10103370:	d8800f15 	stw	r2,60(sp)
10103374:	d8c01015 	stw	r3,64(sp)
10103378:	d8c00e17 	ldw	r3,56(sp)
1010337c:	18000626 	beq	r3,zero,10103398 <_dtoa_r+0x47c>
10103380:	d9000f17 	ldw	r4,60(sp)
10103384:	d9401017 	ldw	r5,64(sp)
10103388:	000d883a 	mov	r6,zero
1010338c:	01cffc34 	movhi	r7,16368
10103390:	010bcd00 	call	1010bcd0 <__ledf2>
10103394:	10040b16 	blt	r2,zero,101043c4 <_dtoa_r+0x14a8>
10103398:	8009883a 	mov	r4,r16
1010339c:	010ce580 	call	1010ce58 <__floatsidf>
101033a0:	d9800f17 	ldw	r6,60(sp)
101033a4:	d9c01017 	ldw	r7,64(sp)
101033a8:	1009883a 	mov	r4,r2
101033ac:	180b883a 	mov	r5,r3
101033b0:	010bdc40 	call	1010bdc4 <__muldf3>
101033b4:	000d883a 	mov	r6,zero
101033b8:	01d00734 	movhi	r7,16412
101033bc:	1009883a 	mov	r4,r2
101033c0:	180b883a 	mov	r5,r3
101033c4:	010a9d80 	call	1010a9d8 <__adddf3>
101033c8:	1021883a 	mov	r16,r2
101033cc:	d8800617 	ldw	r2,24(sp)
101033d0:	047f3034 	movhi	r17,64704
101033d4:	1c63883a 	add	r17,r3,r17
101033d8:	10031826 	beq	r2,zero,1010403c <_dtoa_r+0x1120>
101033dc:	d8c00517 	ldw	r3,20(sp)
101033e0:	db000617 	ldw	r12,24(sp)
101033e4:	d8c01315 	stw	r3,76(sp)
101033e8:	d9000b17 	ldw	r4,44(sp)
101033ec:	20038f26 	beq	r4,zero,1010422c <_dtoa_r+0x1310>
101033f0:	60bfffc4 	addi	r2,r12,-1
101033f4:	100490fa 	slli	r2,r2,3
101033f8:	00c40474 	movhi	r3,4113
101033fc:	18fe4304 	addi	r3,r3,-1780
10103400:	1885883a 	add	r2,r3,r2
10103404:	11800017 	ldw	r6,0(r2)
10103408:	11c00117 	ldw	r7,4(r2)
1010340c:	d8800717 	ldw	r2,28(sp)
10103410:	0009883a 	mov	r4,zero
10103414:	014ff834 	movhi	r5,16352
10103418:	db001615 	stw	r12,88(sp)
1010341c:	15c00044 	addi	r23,r2,1
10103420:	010b2840 	call	1010b284 <__divdf3>
10103424:	800d883a 	mov	r6,r16
10103428:	880f883a 	mov	r7,r17
1010342c:	1009883a 	mov	r4,r2
10103430:	180b883a 	mov	r5,r3
10103434:	010c4dc0 	call	1010c4dc <__subdf3>
10103438:	d9401017 	ldw	r5,64(sp)
1010343c:	d9000f17 	ldw	r4,60(sp)
10103440:	102b883a 	mov	r21,r2
10103444:	d8c01215 	stw	r3,72(sp)
10103448:	010cdd80 	call	1010cdd8 <__fixdfsi>
1010344c:	1009883a 	mov	r4,r2
10103450:	1029883a 	mov	r20,r2
10103454:	010ce580 	call	1010ce58 <__floatsidf>
10103458:	d9000f17 	ldw	r4,60(sp)
1010345c:	d9401017 	ldw	r5,64(sp)
10103460:	100d883a 	mov	r6,r2
10103464:	180f883a 	mov	r7,r3
10103468:	010c4dc0 	call	1010c4dc <__subdf3>
1010346c:	1823883a 	mov	r17,r3
10103470:	d8c00717 	ldw	r3,28(sp)
10103474:	d9401217 	ldw	r5,72(sp)
10103478:	a2000c04 	addi	r8,r20,48
1010347c:	1021883a 	mov	r16,r2
10103480:	1a000005 	stb	r8,0(r3)
10103484:	800d883a 	mov	r6,r16
10103488:	880f883a 	mov	r7,r17
1010348c:	a809883a 	mov	r4,r21
10103490:	4029883a 	mov	r20,r8
10103494:	010bbf40 	call	1010bbf4 <__gedf2>
10103498:	00841d16 	blt	zero,r2,10104510 <_dtoa_r+0x15f4>
1010349c:	800d883a 	mov	r6,r16
101034a0:	880f883a 	mov	r7,r17
101034a4:	0009883a 	mov	r4,zero
101034a8:	014ffc34 	movhi	r5,16368
101034ac:	010c4dc0 	call	1010c4dc <__subdf3>
101034b0:	d9401217 	ldw	r5,72(sp)
101034b4:	100d883a 	mov	r6,r2
101034b8:	180f883a 	mov	r7,r3
101034bc:	a809883a 	mov	r4,r21
101034c0:	010bbf40 	call	1010bbf4 <__gedf2>
101034c4:	db001617 	ldw	r12,88(sp)
101034c8:	00840e16 	blt	zero,r2,10104504 <_dtoa_r+0x15e8>
101034cc:	00800044 	movi	r2,1
101034d0:	13006b0e 	bge	r2,r12,10103680 <_dtoa_r+0x764>
101034d4:	d9000717 	ldw	r4,28(sp)
101034d8:	dd800f15 	stw	r22,60(sp)
101034dc:	dcc01015 	stw	r19,64(sp)
101034e0:	2319883a 	add	r12,r4,r12
101034e4:	dcc01217 	ldw	r19,72(sp)
101034e8:	602d883a 	mov	r22,r12
101034ec:	dc801215 	stw	r18,72(sp)
101034f0:	b825883a 	mov	r18,r23
101034f4:	00000906 	br	1010351c <_dtoa_r+0x600>
101034f8:	010c4dc0 	call	1010c4dc <__subdf3>
101034fc:	a80d883a 	mov	r6,r21
10103500:	980f883a 	mov	r7,r19
10103504:	1009883a 	mov	r4,r2
10103508:	180b883a 	mov	r5,r3
1010350c:	010bcd00 	call	1010bcd0 <__ledf2>
10103510:	1003e816 	blt	r2,zero,101044b4 <_dtoa_r+0x1598>
10103514:	b825883a 	mov	r18,r23
10103518:	bd83e926 	beq	r23,r22,101044c0 <_dtoa_r+0x15a4>
1010351c:	a809883a 	mov	r4,r21
10103520:	980b883a 	mov	r5,r19
10103524:	000d883a 	mov	r6,zero
10103528:	01d00934 	movhi	r7,16420
1010352c:	010bdc40 	call	1010bdc4 <__muldf3>
10103530:	000d883a 	mov	r6,zero
10103534:	01d00934 	movhi	r7,16420
10103538:	8009883a 	mov	r4,r16
1010353c:	880b883a 	mov	r5,r17
10103540:	102b883a 	mov	r21,r2
10103544:	1827883a 	mov	r19,r3
10103548:	010bdc40 	call	1010bdc4 <__muldf3>
1010354c:	180b883a 	mov	r5,r3
10103550:	1009883a 	mov	r4,r2
10103554:	1821883a 	mov	r16,r3
10103558:	1023883a 	mov	r17,r2
1010355c:	010cdd80 	call	1010cdd8 <__fixdfsi>
10103560:	1009883a 	mov	r4,r2
10103564:	1029883a 	mov	r20,r2
10103568:	010ce580 	call	1010ce58 <__floatsidf>
1010356c:	8809883a 	mov	r4,r17
10103570:	800b883a 	mov	r5,r16
10103574:	100d883a 	mov	r6,r2
10103578:	180f883a 	mov	r7,r3
1010357c:	010c4dc0 	call	1010c4dc <__subdf3>
10103580:	a5000c04 	addi	r20,r20,48
10103584:	a80d883a 	mov	r6,r21
10103588:	980f883a 	mov	r7,r19
1010358c:	1009883a 	mov	r4,r2
10103590:	180b883a 	mov	r5,r3
10103594:	95000005 	stb	r20,0(r18)
10103598:	1021883a 	mov	r16,r2
1010359c:	1823883a 	mov	r17,r3
101035a0:	010bcd00 	call	1010bcd0 <__ledf2>
101035a4:	bdc00044 	addi	r23,r23,1
101035a8:	800d883a 	mov	r6,r16
101035ac:	880f883a 	mov	r7,r17
101035b0:	0009883a 	mov	r4,zero
101035b4:	014ffc34 	movhi	r5,16368
101035b8:	103fcf0e 	bge	r2,zero,101034f8 <__alt_data_end+0xfffe34f8>
101035bc:	d8c01317 	ldw	r3,76(sp)
101035c0:	d8c00515 	stw	r3,20(sp)
101035c4:	d9400917 	ldw	r5,36(sp)
101035c8:	e009883a 	mov	r4,fp
101035cc:	01066600 	call	10106660 <_Bfree>
101035d0:	d9000517 	ldw	r4,20(sp)
101035d4:	d9802317 	ldw	r6,140(sp)
101035d8:	d9c02517 	ldw	r7,148(sp)
101035dc:	b8000005 	stb	zero,0(r23)
101035e0:	20800044 	addi	r2,r4,1
101035e4:	30800015 	stw	r2,0(r6)
101035e8:	3802aa26 	beq	r7,zero,10104094 <_dtoa_r+0x1178>
101035ec:	3dc00015 	stw	r23,0(r7)
101035f0:	d8800717 	ldw	r2,28(sp)
101035f4:	003e7906 	br	10102fdc <__alt_data_end+0xfffe2fdc>
101035f8:	00800434 	movhi	r2,16
101035fc:	10bfffc4 	addi	r2,r2,-1
10103600:	88a2703a 	and	r17,r17,r2
10103604:	883e851e 	bne	r17,zero,1010301c <__alt_data_end+0xfffe301c>
10103608:	00840474 	movhi	r2,4113
1010360c:	10be2404 	addi	r2,r2,-1904
10103610:	003e8406 	br	10103024 <__alt_data_end+0xfffe3024>
10103614:	10c00204 	addi	r3,r2,8
10103618:	003e8706 	br	10103038 <__alt_data_end+0xfffe3038>
1010361c:	01400434 	movhi	r5,16
10103620:	297fffc4 	addi	r5,r5,-1
10103624:	994a703a 	and	r5,r19,r5
10103628:	9009883a 	mov	r4,r18
1010362c:	843f0044 	addi	r16,r16,-1023
10103630:	294ffc34 	orhi	r5,r5,16368
10103634:	dd800217 	ldw	r22,8(sp)
10103638:	d8001115 	stw	zero,68(sp)
1010363c:	003ea506 	br	101030d4 <__alt_data_end+0xfffe30d4>
10103640:	00840474 	movhi	r2,4113
10103644:	10be1b04 	addi	r2,r2,-1940
10103648:	003e6406 	br	10102fdc <__alt_data_end+0xfffe2fdc>
1010364c:	e0001115 	stw	zero,68(fp)
10103650:	000b883a 	mov	r5,zero
10103654:	e009883a 	mov	r4,fp
10103658:	01065b80 	call	101065b8 <_Balloc>
1010365c:	01bfffc4 	movi	r6,-1
10103660:	01c00044 	movi	r7,1
10103664:	d8800715 	stw	r2,28(sp)
10103668:	d9800c15 	stw	r6,48(sp)
1010366c:	e0801015 	stw	r2,64(fp)
10103670:	d8000315 	stw	zero,12(sp)
10103674:	d9c00b15 	stw	r7,44(sp)
10103678:	d9800615 	stw	r6,24(sp)
1010367c:	d8002215 	stw	zero,136(sp)
10103680:	d8800117 	ldw	r2,4(sp)
10103684:	10008916 	blt	r2,zero,101038ac <_dtoa_r+0x990>
10103688:	d9000517 	ldw	r4,20(sp)
1010368c:	00c00384 	movi	r3,14
10103690:	19008616 	blt	r3,r4,101038ac <_dtoa_r+0x990>
10103694:	200490fa 	slli	r2,r4,3
10103698:	00c40474 	movhi	r3,4113
1010369c:	d9802217 	ldw	r6,136(sp)
101036a0:	18fe4304 	addi	r3,r3,-1780
101036a4:	1885883a 	add	r2,r3,r2
101036a8:	14000017 	ldw	r16,0(r2)
101036ac:	14400117 	ldw	r17,4(r2)
101036b0:	30016316 	blt	r6,zero,10103c40 <_dtoa_r+0xd24>
101036b4:	800d883a 	mov	r6,r16
101036b8:	880f883a 	mov	r7,r17
101036bc:	9009883a 	mov	r4,r18
101036c0:	980b883a 	mov	r5,r19
101036c4:	010b2840 	call	1010b284 <__divdf3>
101036c8:	180b883a 	mov	r5,r3
101036cc:	1009883a 	mov	r4,r2
101036d0:	010cdd80 	call	1010cdd8 <__fixdfsi>
101036d4:	1009883a 	mov	r4,r2
101036d8:	102b883a 	mov	r21,r2
101036dc:	010ce580 	call	1010ce58 <__floatsidf>
101036e0:	800d883a 	mov	r6,r16
101036e4:	880f883a 	mov	r7,r17
101036e8:	1009883a 	mov	r4,r2
101036ec:	180b883a 	mov	r5,r3
101036f0:	010bdc40 	call	1010bdc4 <__muldf3>
101036f4:	100d883a 	mov	r6,r2
101036f8:	180f883a 	mov	r7,r3
101036fc:	9009883a 	mov	r4,r18
10103700:	980b883a 	mov	r5,r19
10103704:	010c4dc0 	call	1010c4dc <__subdf3>
10103708:	d9c00717 	ldw	r7,28(sp)
1010370c:	1009883a 	mov	r4,r2
10103710:	a8800c04 	addi	r2,r21,48
10103714:	38800005 	stb	r2,0(r7)
10103718:	3dc00044 	addi	r23,r7,1
1010371c:	d9c00617 	ldw	r7,24(sp)
10103720:	01800044 	movi	r6,1
10103724:	180b883a 	mov	r5,r3
10103728:	2005883a 	mov	r2,r4
1010372c:	39803826 	beq	r7,r6,10103810 <_dtoa_r+0x8f4>
10103730:	000d883a 	mov	r6,zero
10103734:	01d00934 	movhi	r7,16420
10103738:	010bdc40 	call	1010bdc4 <__muldf3>
1010373c:	000d883a 	mov	r6,zero
10103740:	000f883a 	mov	r7,zero
10103744:	1009883a 	mov	r4,r2
10103748:	180b883a 	mov	r5,r3
1010374c:	1025883a 	mov	r18,r2
10103750:	1827883a 	mov	r19,r3
10103754:	010bb6c0 	call	1010bb6c <__eqdf2>
10103758:	103f9a26 	beq	r2,zero,101035c4 <__alt_data_end+0xfffe35c4>
1010375c:	d9c00617 	ldw	r7,24(sp)
10103760:	d8c00717 	ldw	r3,28(sp)
10103764:	b829883a 	mov	r20,r23
10103768:	38bfffc4 	addi	r2,r7,-1
1010376c:	18ad883a 	add	r22,r3,r2
10103770:	00000a06 	br	1010379c <_dtoa_r+0x880>
10103774:	010bdc40 	call	1010bdc4 <__muldf3>
10103778:	000d883a 	mov	r6,zero
1010377c:	000f883a 	mov	r7,zero
10103780:	1009883a 	mov	r4,r2
10103784:	180b883a 	mov	r5,r3
10103788:	1025883a 	mov	r18,r2
1010378c:	1827883a 	mov	r19,r3
10103790:	b829883a 	mov	r20,r23
10103794:	010bb6c0 	call	1010bb6c <__eqdf2>
10103798:	103f8a26 	beq	r2,zero,101035c4 <__alt_data_end+0xfffe35c4>
1010379c:	800d883a 	mov	r6,r16
101037a0:	880f883a 	mov	r7,r17
101037a4:	9009883a 	mov	r4,r18
101037a8:	980b883a 	mov	r5,r19
101037ac:	010b2840 	call	1010b284 <__divdf3>
101037b0:	180b883a 	mov	r5,r3
101037b4:	1009883a 	mov	r4,r2
101037b8:	010cdd80 	call	1010cdd8 <__fixdfsi>
101037bc:	1009883a 	mov	r4,r2
101037c0:	102b883a 	mov	r21,r2
101037c4:	010ce580 	call	1010ce58 <__floatsidf>
101037c8:	800d883a 	mov	r6,r16
101037cc:	880f883a 	mov	r7,r17
101037d0:	1009883a 	mov	r4,r2
101037d4:	180b883a 	mov	r5,r3
101037d8:	010bdc40 	call	1010bdc4 <__muldf3>
101037dc:	100d883a 	mov	r6,r2
101037e0:	180f883a 	mov	r7,r3
101037e4:	9009883a 	mov	r4,r18
101037e8:	980b883a 	mov	r5,r19
101037ec:	010c4dc0 	call	1010c4dc <__subdf3>
101037f0:	aa000c04 	addi	r8,r21,48
101037f4:	a2000005 	stb	r8,0(r20)
101037f8:	000d883a 	mov	r6,zero
101037fc:	01d00934 	movhi	r7,16420
10103800:	1009883a 	mov	r4,r2
10103804:	180b883a 	mov	r5,r3
10103808:	a5c00044 	addi	r23,r20,1
1010380c:	b53fd91e 	bne	r22,r20,10103774 <__alt_data_end+0xfffe3774>
10103810:	100d883a 	mov	r6,r2
10103814:	180f883a 	mov	r7,r3
10103818:	1009883a 	mov	r4,r2
1010381c:	180b883a 	mov	r5,r3
10103820:	010a9d80 	call	1010a9d8 <__adddf3>
10103824:	100d883a 	mov	r6,r2
10103828:	180f883a 	mov	r7,r3
1010382c:	8009883a 	mov	r4,r16
10103830:	880b883a 	mov	r5,r17
10103834:	1027883a 	mov	r19,r2
10103838:	1825883a 	mov	r18,r3
1010383c:	010bcd00 	call	1010bcd0 <__ledf2>
10103840:	10000816 	blt	r2,zero,10103864 <_dtoa_r+0x948>
10103844:	980d883a 	mov	r6,r19
10103848:	900f883a 	mov	r7,r18
1010384c:	8009883a 	mov	r4,r16
10103850:	880b883a 	mov	r5,r17
10103854:	010bb6c0 	call	1010bb6c <__eqdf2>
10103858:	103f5a1e 	bne	r2,zero,101035c4 <__alt_data_end+0xfffe35c4>
1010385c:	ad40004c 	andi	r21,r21,1
10103860:	a83f5826 	beq	r21,zero,101035c4 <__alt_data_end+0xfffe35c4>
10103864:	bd3fffc3 	ldbu	r20,-1(r23)
10103868:	b8bfffc4 	addi	r2,r23,-1
1010386c:	1007883a 	mov	r3,r2
10103870:	01400e44 	movi	r5,57
10103874:	d9800717 	ldw	r6,28(sp)
10103878:	00000506 	br	10103890 <_dtoa_r+0x974>
1010387c:	18ffffc4 	addi	r3,r3,-1
10103880:	11824726 	beq	r2,r6,101041a0 <_dtoa_r+0x1284>
10103884:	1d000003 	ldbu	r20,0(r3)
10103888:	102f883a 	mov	r23,r2
1010388c:	10bfffc4 	addi	r2,r2,-1
10103890:	a1003fcc 	andi	r4,r20,255
10103894:	2100201c 	xori	r4,r4,128
10103898:	213fe004 	addi	r4,r4,-128
1010389c:	217ff726 	beq	r4,r5,1010387c <__alt_data_end+0xfffe387c>
101038a0:	a2000044 	addi	r8,r20,1
101038a4:	12000005 	stb	r8,0(r2)
101038a8:	003f4606 	br	101035c4 <__alt_data_end+0xfffe35c4>
101038ac:	d9000b17 	ldw	r4,44(sp)
101038b0:	2000c826 	beq	r4,zero,10103bd4 <_dtoa_r+0xcb8>
101038b4:	d9800317 	ldw	r6,12(sp)
101038b8:	00c00044 	movi	r3,1
101038bc:	1980f90e 	bge	r3,r6,10103ca4 <_dtoa_r+0xd88>
101038c0:	d8800617 	ldw	r2,24(sp)
101038c4:	d8c00a17 	ldw	r3,40(sp)
101038c8:	157fffc4 	addi	r21,r2,-1
101038cc:	1d41f316 	blt	r3,r21,1010409c <_dtoa_r+0x1180>
101038d0:	1d6bc83a 	sub	r21,r3,r21
101038d4:	d9c00617 	ldw	r7,24(sp)
101038d8:	3802aa16 	blt	r7,zero,10104384 <_dtoa_r+0x1468>
101038dc:	dd000817 	ldw	r20,32(sp)
101038e0:	d8800617 	ldw	r2,24(sp)
101038e4:	d8c00817 	ldw	r3,32(sp)
101038e8:	01400044 	movi	r5,1
101038ec:	e009883a 	mov	r4,fp
101038f0:	1887883a 	add	r3,r3,r2
101038f4:	d8c00815 	stw	r3,32(sp)
101038f8:	b0ad883a 	add	r22,r22,r2
101038fc:	01069c40 	call	101069c4 <__i2b>
10103900:	1023883a 	mov	r17,r2
10103904:	a0000826 	beq	r20,zero,10103928 <_dtoa_r+0xa0c>
10103908:	0580070e 	bge	zero,r22,10103928 <_dtoa_r+0xa0c>
1010390c:	a005883a 	mov	r2,r20
10103910:	b500b916 	blt	r22,r20,10103bf8 <_dtoa_r+0xcdc>
10103914:	d9000817 	ldw	r4,32(sp)
10103918:	a0a9c83a 	sub	r20,r20,r2
1010391c:	b0adc83a 	sub	r22,r22,r2
10103920:	2089c83a 	sub	r4,r4,r2
10103924:	d9000815 	stw	r4,32(sp)
10103928:	d9800a17 	ldw	r6,40(sp)
1010392c:	0181810e 	bge	zero,r6,10103f34 <_dtoa_r+0x1018>
10103930:	d9c00b17 	ldw	r7,44(sp)
10103934:	3800b326 	beq	r7,zero,10103c04 <_dtoa_r+0xce8>
10103938:	a800b226 	beq	r21,zero,10103c04 <_dtoa_r+0xce8>
1010393c:	880b883a 	mov	r5,r17
10103940:	a80d883a 	mov	r6,r21
10103944:	e009883a 	mov	r4,fp
10103948:	0106bf80 	call	10106bf8 <__pow5mult>
1010394c:	d9800917 	ldw	r6,36(sp)
10103950:	100b883a 	mov	r5,r2
10103954:	e009883a 	mov	r4,fp
10103958:	1023883a 	mov	r17,r2
1010395c:	0106a000 	call	10106a00 <__multiply>
10103960:	1021883a 	mov	r16,r2
10103964:	d8800a17 	ldw	r2,40(sp)
10103968:	d9400917 	ldw	r5,36(sp)
1010396c:	e009883a 	mov	r4,fp
10103970:	1545c83a 	sub	r2,r2,r21
10103974:	d8800a15 	stw	r2,40(sp)
10103978:	01066600 	call	10106660 <_Bfree>
1010397c:	d8c00a17 	ldw	r3,40(sp)
10103980:	18009f1e 	bne	r3,zero,10103c00 <_dtoa_r+0xce4>
10103984:	05c00044 	movi	r23,1
10103988:	e009883a 	mov	r4,fp
1010398c:	b80b883a 	mov	r5,r23
10103990:	01069c40 	call	101069c4 <__i2b>
10103994:	d9000d17 	ldw	r4,52(sp)
10103998:	102b883a 	mov	r21,r2
1010399c:	2000ce26 	beq	r4,zero,10103cd8 <_dtoa_r+0xdbc>
101039a0:	200d883a 	mov	r6,r4
101039a4:	100b883a 	mov	r5,r2
101039a8:	e009883a 	mov	r4,fp
101039ac:	0106bf80 	call	10106bf8 <__pow5mult>
101039b0:	d9800317 	ldw	r6,12(sp)
101039b4:	102b883a 	mov	r21,r2
101039b8:	b981810e 	bge	r23,r6,10103fc0 <_dtoa_r+0x10a4>
101039bc:	0027883a 	mov	r19,zero
101039c0:	a8800417 	ldw	r2,16(r21)
101039c4:	05c00804 	movi	r23,32
101039c8:	10800104 	addi	r2,r2,4
101039cc:	1085883a 	add	r2,r2,r2
101039d0:	1085883a 	add	r2,r2,r2
101039d4:	a885883a 	add	r2,r21,r2
101039d8:	11000017 	ldw	r4,0(r2)
101039dc:	01068ac0 	call	101068ac <__hi0bits>
101039e0:	b885c83a 	sub	r2,r23,r2
101039e4:	1585883a 	add	r2,r2,r22
101039e8:	108007cc 	andi	r2,r2,31
101039ec:	1000b326 	beq	r2,zero,10103cbc <_dtoa_r+0xda0>
101039f0:	00c00804 	movi	r3,32
101039f4:	1887c83a 	sub	r3,r3,r2
101039f8:	01000104 	movi	r4,4
101039fc:	20c2cd0e 	bge	r4,r3,10104534 <_dtoa_r+0x1618>
10103a00:	00c00704 	movi	r3,28
10103a04:	1885c83a 	sub	r2,r3,r2
10103a08:	d8c00817 	ldw	r3,32(sp)
10103a0c:	a0a9883a 	add	r20,r20,r2
10103a10:	b0ad883a 	add	r22,r22,r2
10103a14:	1887883a 	add	r3,r3,r2
10103a18:	d8c00815 	stw	r3,32(sp)
10103a1c:	d9800817 	ldw	r6,32(sp)
10103a20:	0180040e 	bge	zero,r6,10103a34 <_dtoa_r+0xb18>
10103a24:	800b883a 	mov	r5,r16
10103a28:	e009883a 	mov	r4,fp
10103a2c:	0106d380 	call	10106d38 <__lshift>
10103a30:	1021883a 	mov	r16,r2
10103a34:	0580050e 	bge	zero,r22,10103a4c <_dtoa_r+0xb30>
10103a38:	a80b883a 	mov	r5,r21
10103a3c:	b00d883a 	mov	r6,r22
10103a40:	e009883a 	mov	r4,fp
10103a44:	0106d380 	call	10106d38 <__lshift>
10103a48:	102b883a 	mov	r21,r2
10103a4c:	d9c00e17 	ldw	r7,56(sp)
10103a50:	3801211e 	bne	r7,zero,10103ed8 <_dtoa_r+0xfbc>
10103a54:	d9800617 	ldw	r6,24(sp)
10103a58:	0181380e 	bge	zero,r6,10103f3c <_dtoa_r+0x1020>
10103a5c:	d8c00b17 	ldw	r3,44(sp)
10103a60:	1800ab1e 	bne	r3,zero,10103d10 <_dtoa_r+0xdf4>
10103a64:	dc800717 	ldw	r18,28(sp)
10103a68:	dcc00617 	ldw	r19,24(sp)
10103a6c:	9029883a 	mov	r20,r18
10103a70:	00000206 	br	10103a7c <_dtoa_r+0xb60>
10103a74:	01066880 	call	10106688 <__multadd>
10103a78:	1021883a 	mov	r16,r2
10103a7c:	a80b883a 	mov	r5,r21
10103a80:	8009883a 	mov	r4,r16
10103a84:	0102d1c0 	call	10102d1c <quorem>
10103a88:	10800c04 	addi	r2,r2,48
10103a8c:	90800005 	stb	r2,0(r18)
10103a90:	94800044 	addi	r18,r18,1
10103a94:	9507c83a 	sub	r3,r18,r20
10103a98:	000f883a 	mov	r7,zero
10103a9c:	01800284 	movi	r6,10
10103aa0:	800b883a 	mov	r5,r16
10103aa4:	e009883a 	mov	r4,fp
10103aa8:	1cfff216 	blt	r3,r19,10103a74 <__alt_data_end+0xfffe3a74>
10103aac:	1011883a 	mov	r8,r2
10103ab0:	d8800617 	ldw	r2,24(sp)
10103ab4:	0082370e 	bge	zero,r2,10104394 <_dtoa_r+0x1478>
10103ab8:	d9000717 	ldw	r4,28(sp)
10103abc:	0025883a 	mov	r18,zero
10103ac0:	20af883a 	add	r23,r4,r2
10103ac4:	01800044 	movi	r6,1
10103ac8:	800b883a 	mov	r5,r16
10103acc:	e009883a 	mov	r4,fp
10103ad0:	da001715 	stw	r8,92(sp)
10103ad4:	0106d380 	call	10106d38 <__lshift>
10103ad8:	a80b883a 	mov	r5,r21
10103adc:	1009883a 	mov	r4,r2
10103ae0:	d8800915 	stw	r2,36(sp)
10103ae4:	0106e800 	call	10106e80 <__mcmp>
10103ae8:	da001717 	ldw	r8,92(sp)
10103aec:	0081800e 	bge	zero,r2,101040f0 <_dtoa_r+0x11d4>
10103af0:	b93fffc3 	ldbu	r4,-1(r23)
10103af4:	b8bfffc4 	addi	r2,r23,-1
10103af8:	1007883a 	mov	r3,r2
10103afc:	01800e44 	movi	r6,57
10103b00:	d9c00717 	ldw	r7,28(sp)
10103b04:	00000506 	br	10103b1c <_dtoa_r+0xc00>
10103b08:	18ffffc4 	addi	r3,r3,-1
10103b0c:	11c12326 	beq	r2,r7,10103f9c <_dtoa_r+0x1080>
10103b10:	19000003 	ldbu	r4,0(r3)
10103b14:	102f883a 	mov	r23,r2
10103b18:	10bfffc4 	addi	r2,r2,-1
10103b1c:	21403fcc 	andi	r5,r4,255
10103b20:	2940201c 	xori	r5,r5,128
10103b24:	297fe004 	addi	r5,r5,-128
10103b28:	29bff726 	beq	r5,r6,10103b08 <__alt_data_end+0xfffe3b08>
10103b2c:	21000044 	addi	r4,r4,1
10103b30:	11000005 	stb	r4,0(r2)
10103b34:	a80b883a 	mov	r5,r21
10103b38:	e009883a 	mov	r4,fp
10103b3c:	01066600 	call	10106660 <_Bfree>
10103b40:	883ea026 	beq	r17,zero,101035c4 <__alt_data_end+0xfffe35c4>
10103b44:	90000426 	beq	r18,zero,10103b58 <_dtoa_r+0xc3c>
10103b48:	94400326 	beq	r18,r17,10103b58 <_dtoa_r+0xc3c>
10103b4c:	900b883a 	mov	r5,r18
10103b50:	e009883a 	mov	r4,fp
10103b54:	01066600 	call	10106660 <_Bfree>
10103b58:	880b883a 	mov	r5,r17
10103b5c:	e009883a 	mov	r4,fp
10103b60:	01066600 	call	10106660 <_Bfree>
10103b64:	003e9706 	br	101035c4 <__alt_data_end+0xfffe35c4>
10103b68:	01800044 	movi	r6,1
10103b6c:	d9800e15 	stw	r6,56(sp)
10103b70:	003d9606 	br	101031cc <__alt_data_end+0xfffe31cc>
10103b74:	d8800817 	ldw	r2,32(sp)
10103b78:	d8c00517 	ldw	r3,20(sp)
10103b7c:	d8000d15 	stw	zero,52(sp)
10103b80:	10c5c83a 	sub	r2,r2,r3
10103b84:	00c9c83a 	sub	r4,zero,r3
10103b88:	d8800815 	stw	r2,32(sp)
10103b8c:	d9000a15 	stw	r4,40(sp)
10103b90:	003d9706 	br	101031f0 <__alt_data_end+0xfffe31f0>
10103b94:	05adc83a 	sub	r22,zero,r22
10103b98:	dd800815 	stw	r22,32(sp)
10103b9c:	002d883a 	mov	r22,zero
10103ba0:	003d8e06 	br	101031dc <__alt_data_end+0xfffe31dc>
10103ba4:	d9000517 	ldw	r4,20(sp)
10103ba8:	010ce580 	call	1010ce58 <__floatsidf>
10103bac:	100d883a 	mov	r6,r2
10103bb0:	180f883a 	mov	r7,r3
10103bb4:	a009883a 	mov	r4,r20
10103bb8:	880b883a 	mov	r5,r17
10103bbc:	010bb6c0 	call	1010bb6c <__eqdf2>
10103bc0:	103d7126 	beq	r2,zero,10103188 <__alt_data_end+0xfffe3188>
10103bc4:	d9c00517 	ldw	r7,20(sp)
10103bc8:	39ffffc4 	addi	r7,r7,-1
10103bcc:	d9c00515 	stw	r7,20(sp)
10103bd0:	003d6d06 	br	10103188 <__alt_data_end+0xfffe3188>
10103bd4:	dd400a17 	ldw	r21,40(sp)
10103bd8:	dd000817 	ldw	r20,32(sp)
10103bdc:	0023883a 	mov	r17,zero
10103be0:	003f4806 	br	10103904 <__alt_data_end+0xfffe3904>
10103be4:	10e3c83a 	sub	r17,r2,r3
10103be8:	9448983a 	sll	r4,r18,r17
10103bec:	003d3206 	br	101030b8 <__alt_data_end+0xfffe30b8>
10103bf0:	d8000e15 	stw	zero,56(sp)
10103bf4:	003d7506 	br	101031cc <__alt_data_end+0xfffe31cc>
10103bf8:	b005883a 	mov	r2,r22
10103bfc:	003f4506 	br	10103914 <__alt_data_end+0xfffe3914>
10103c00:	dc000915 	stw	r16,36(sp)
10103c04:	d9800a17 	ldw	r6,40(sp)
10103c08:	d9400917 	ldw	r5,36(sp)
10103c0c:	e009883a 	mov	r4,fp
10103c10:	0106bf80 	call	10106bf8 <__pow5mult>
10103c14:	1021883a 	mov	r16,r2
10103c18:	003f5a06 	br	10103984 <__alt_data_end+0xfffe3984>
10103c1c:	01c00044 	movi	r7,1
10103c20:	d9c00b15 	stw	r7,44(sp)
10103c24:	d8802217 	ldw	r2,136(sp)
10103c28:	0081280e 	bge	zero,r2,101040cc <_dtoa_r+0x11b0>
10103c2c:	100d883a 	mov	r6,r2
10103c30:	1021883a 	mov	r16,r2
10103c34:	d8800c15 	stw	r2,48(sp)
10103c38:	d8800615 	stw	r2,24(sp)
10103c3c:	003d8806 	br	10103260 <__alt_data_end+0xfffe3260>
10103c40:	d8800617 	ldw	r2,24(sp)
10103c44:	00be9b16 	blt	zero,r2,101036b4 <__alt_data_end+0xfffe36b4>
10103c48:	10010f1e 	bne	r2,zero,10104088 <_dtoa_r+0x116c>
10103c4c:	880b883a 	mov	r5,r17
10103c50:	000d883a 	mov	r6,zero
10103c54:	01d00534 	movhi	r7,16404
10103c58:	8009883a 	mov	r4,r16
10103c5c:	010bdc40 	call	1010bdc4 <__muldf3>
10103c60:	900d883a 	mov	r6,r18
10103c64:	980f883a 	mov	r7,r19
10103c68:	1009883a 	mov	r4,r2
10103c6c:	180b883a 	mov	r5,r3
10103c70:	010bbf40 	call	1010bbf4 <__gedf2>
10103c74:	002b883a 	mov	r21,zero
10103c78:	0023883a 	mov	r17,zero
10103c7c:	1000bf16 	blt	r2,zero,10103f7c <_dtoa_r+0x1060>
10103c80:	d9802217 	ldw	r6,136(sp)
10103c84:	ddc00717 	ldw	r23,28(sp)
10103c88:	018c303a 	nor	r6,zero,r6
10103c8c:	d9800515 	stw	r6,20(sp)
10103c90:	a80b883a 	mov	r5,r21
10103c94:	e009883a 	mov	r4,fp
10103c98:	01066600 	call	10106660 <_Bfree>
10103c9c:	883e4926 	beq	r17,zero,101035c4 <__alt_data_end+0xfffe35c4>
10103ca0:	003fad06 	br	10103b58 <__alt_data_end+0xfffe3b58>
10103ca4:	d9c01117 	ldw	r7,68(sp)
10103ca8:	3801bc26 	beq	r7,zero,1010439c <_dtoa_r+0x1480>
10103cac:	10810cc4 	addi	r2,r2,1075
10103cb0:	dd400a17 	ldw	r21,40(sp)
10103cb4:	dd000817 	ldw	r20,32(sp)
10103cb8:	003f0a06 	br	101038e4 <__alt_data_end+0xfffe38e4>
10103cbc:	00800704 	movi	r2,28
10103cc0:	d9000817 	ldw	r4,32(sp)
10103cc4:	a0a9883a 	add	r20,r20,r2
10103cc8:	b0ad883a 	add	r22,r22,r2
10103ccc:	2089883a 	add	r4,r4,r2
10103cd0:	d9000815 	stw	r4,32(sp)
10103cd4:	003f5106 	br	10103a1c <__alt_data_end+0xfffe3a1c>
10103cd8:	d8c00317 	ldw	r3,12(sp)
10103cdc:	b8c1fc0e 	bge	r23,r3,101044d0 <_dtoa_r+0x15b4>
10103ce0:	0027883a 	mov	r19,zero
10103ce4:	b805883a 	mov	r2,r23
10103ce8:	003f3e06 	br	101039e4 <__alt_data_end+0xfffe39e4>
10103cec:	880b883a 	mov	r5,r17
10103cf0:	e009883a 	mov	r4,fp
10103cf4:	000f883a 	mov	r7,zero
10103cf8:	01800284 	movi	r6,10
10103cfc:	01066880 	call	10106688 <__multadd>
10103d00:	d9000c17 	ldw	r4,48(sp)
10103d04:	1023883a 	mov	r17,r2
10103d08:	0102040e 	bge	zero,r4,1010451c <_dtoa_r+0x1600>
10103d0c:	d9000615 	stw	r4,24(sp)
10103d10:	0500050e 	bge	zero,r20,10103d28 <_dtoa_r+0xe0c>
10103d14:	880b883a 	mov	r5,r17
10103d18:	a00d883a 	mov	r6,r20
10103d1c:	e009883a 	mov	r4,fp
10103d20:	0106d380 	call	10106d38 <__lshift>
10103d24:	1023883a 	mov	r17,r2
10103d28:	9801241e 	bne	r19,zero,101041bc <_dtoa_r+0x12a0>
10103d2c:	8829883a 	mov	r20,r17
10103d30:	d9000617 	ldw	r4,24(sp)
10103d34:	dcc00717 	ldw	r19,28(sp)
10103d38:	9480004c 	andi	r18,r18,1
10103d3c:	20bfffc4 	addi	r2,r4,-1
10103d40:	9885883a 	add	r2,r19,r2
10103d44:	d8800415 	stw	r2,16(sp)
10103d48:	dc800615 	stw	r18,24(sp)
10103d4c:	a80b883a 	mov	r5,r21
10103d50:	8009883a 	mov	r4,r16
10103d54:	0102d1c0 	call	10102d1c <quorem>
10103d58:	880b883a 	mov	r5,r17
10103d5c:	8009883a 	mov	r4,r16
10103d60:	102f883a 	mov	r23,r2
10103d64:	0106e800 	call	10106e80 <__mcmp>
10103d68:	a80b883a 	mov	r5,r21
10103d6c:	a00d883a 	mov	r6,r20
10103d70:	e009883a 	mov	r4,fp
10103d74:	102d883a 	mov	r22,r2
10103d78:	0106ee00 	call	10106ee0 <__mdiff>
10103d7c:	1007883a 	mov	r3,r2
10103d80:	10800317 	ldw	r2,12(r2)
10103d84:	bc800c04 	addi	r18,r23,48
10103d88:	180b883a 	mov	r5,r3
10103d8c:	10004e1e 	bne	r2,zero,10103ec8 <_dtoa_r+0xfac>
10103d90:	8009883a 	mov	r4,r16
10103d94:	d8c01615 	stw	r3,88(sp)
10103d98:	0106e800 	call	10106e80 <__mcmp>
10103d9c:	d8c01617 	ldw	r3,88(sp)
10103da0:	e009883a 	mov	r4,fp
10103da4:	d8801615 	stw	r2,88(sp)
10103da8:	180b883a 	mov	r5,r3
10103dac:	01066600 	call	10106660 <_Bfree>
10103db0:	d8801617 	ldw	r2,88(sp)
10103db4:	1000041e 	bne	r2,zero,10103dc8 <_dtoa_r+0xeac>
10103db8:	d9800317 	ldw	r6,12(sp)
10103dbc:	3000021e 	bne	r6,zero,10103dc8 <_dtoa_r+0xeac>
10103dc0:	d8c00617 	ldw	r3,24(sp)
10103dc4:	18003726 	beq	r3,zero,10103ea4 <_dtoa_r+0xf88>
10103dc8:	b0002016 	blt	r22,zero,10103e4c <_dtoa_r+0xf30>
10103dcc:	b000041e 	bne	r22,zero,10103de0 <_dtoa_r+0xec4>
10103dd0:	d9000317 	ldw	r4,12(sp)
10103dd4:	2000021e 	bne	r4,zero,10103de0 <_dtoa_r+0xec4>
10103dd8:	d8c00617 	ldw	r3,24(sp)
10103ddc:	18001b26 	beq	r3,zero,10103e4c <_dtoa_r+0xf30>
10103de0:	00810716 	blt	zero,r2,10104200 <_dtoa_r+0x12e4>
10103de4:	d8c00417 	ldw	r3,16(sp)
10103de8:	9d800044 	addi	r22,r19,1
10103dec:	9c800005 	stb	r18,0(r19)
10103df0:	b02f883a 	mov	r23,r22
10103df4:	98c10626 	beq	r19,r3,10104210 <_dtoa_r+0x12f4>
10103df8:	800b883a 	mov	r5,r16
10103dfc:	000f883a 	mov	r7,zero
10103e00:	01800284 	movi	r6,10
10103e04:	e009883a 	mov	r4,fp
10103e08:	01066880 	call	10106688 <__multadd>
10103e0c:	1021883a 	mov	r16,r2
10103e10:	000f883a 	mov	r7,zero
10103e14:	01800284 	movi	r6,10
10103e18:	880b883a 	mov	r5,r17
10103e1c:	e009883a 	mov	r4,fp
10103e20:	8d002526 	beq	r17,r20,10103eb8 <_dtoa_r+0xf9c>
10103e24:	01066880 	call	10106688 <__multadd>
10103e28:	a00b883a 	mov	r5,r20
10103e2c:	000f883a 	mov	r7,zero
10103e30:	01800284 	movi	r6,10
10103e34:	e009883a 	mov	r4,fp
10103e38:	1023883a 	mov	r17,r2
10103e3c:	01066880 	call	10106688 <__multadd>
10103e40:	1029883a 	mov	r20,r2
10103e44:	b027883a 	mov	r19,r22
10103e48:	003fc006 	br	10103d4c <__alt_data_end+0xfffe3d4c>
10103e4c:	9011883a 	mov	r8,r18
10103e50:	00800e0e 	bge	zero,r2,10103e8c <_dtoa_r+0xf70>
10103e54:	800b883a 	mov	r5,r16
10103e58:	01800044 	movi	r6,1
10103e5c:	e009883a 	mov	r4,fp
10103e60:	da001715 	stw	r8,92(sp)
10103e64:	0106d380 	call	10106d38 <__lshift>
10103e68:	a80b883a 	mov	r5,r21
10103e6c:	1009883a 	mov	r4,r2
10103e70:	1021883a 	mov	r16,r2
10103e74:	0106e800 	call	10106e80 <__mcmp>
10103e78:	da001717 	ldw	r8,92(sp)
10103e7c:	0081960e 	bge	zero,r2,101044d8 <_dtoa_r+0x15bc>
10103e80:	00800e44 	movi	r2,57
10103e84:	40817026 	beq	r8,r2,10104448 <_dtoa_r+0x152c>
10103e88:	ba000c44 	addi	r8,r23,49
10103e8c:	8825883a 	mov	r18,r17
10103e90:	9dc00044 	addi	r23,r19,1
10103e94:	9a000005 	stb	r8,0(r19)
10103e98:	a023883a 	mov	r17,r20
10103e9c:	dc000915 	stw	r16,36(sp)
10103ea0:	003f2406 	br	10103b34 <__alt_data_end+0xfffe3b34>
10103ea4:	00800e44 	movi	r2,57
10103ea8:	9011883a 	mov	r8,r18
10103eac:	90816626 	beq	r18,r2,10104448 <_dtoa_r+0x152c>
10103eb0:	05bff516 	blt	zero,r22,10103e88 <__alt_data_end+0xfffe3e88>
10103eb4:	003ff506 	br	10103e8c <__alt_data_end+0xfffe3e8c>
10103eb8:	01066880 	call	10106688 <__multadd>
10103ebc:	1023883a 	mov	r17,r2
10103ec0:	1029883a 	mov	r20,r2
10103ec4:	003fdf06 	br	10103e44 <__alt_data_end+0xfffe3e44>
10103ec8:	e009883a 	mov	r4,fp
10103ecc:	01066600 	call	10106660 <_Bfree>
10103ed0:	00800044 	movi	r2,1
10103ed4:	003fbc06 	br	10103dc8 <__alt_data_end+0xfffe3dc8>
10103ed8:	a80b883a 	mov	r5,r21
10103edc:	8009883a 	mov	r4,r16
10103ee0:	0106e800 	call	10106e80 <__mcmp>
10103ee4:	103edb0e 	bge	r2,zero,10103a54 <__alt_data_end+0xfffe3a54>
10103ee8:	800b883a 	mov	r5,r16
10103eec:	000f883a 	mov	r7,zero
10103ef0:	01800284 	movi	r6,10
10103ef4:	e009883a 	mov	r4,fp
10103ef8:	01066880 	call	10106688 <__multadd>
10103efc:	1021883a 	mov	r16,r2
10103f00:	d8800517 	ldw	r2,20(sp)
10103f04:	d8c00b17 	ldw	r3,44(sp)
10103f08:	10bfffc4 	addi	r2,r2,-1
10103f0c:	d8800515 	stw	r2,20(sp)
10103f10:	183f761e 	bne	r3,zero,10103cec <__alt_data_end+0xfffe3cec>
10103f14:	d9000c17 	ldw	r4,48(sp)
10103f18:	0101730e 	bge	zero,r4,101044e8 <_dtoa_r+0x15cc>
10103f1c:	d9000615 	stw	r4,24(sp)
10103f20:	003ed006 	br	10103a64 <__alt_data_end+0xfffe3a64>
10103f24:	00800084 	movi	r2,2
10103f28:	3081861e 	bne	r6,r2,10104544 <_dtoa_r+0x1628>
10103f2c:	d8000b15 	stw	zero,44(sp)
10103f30:	003f3c06 	br	10103c24 <__alt_data_end+0xfffe3c24>
10103f34:	dc000917 	ldw	r16,36(sp)
10103f38:	003e9206 	br	10103984 <__alt_data_end+0xfffe3984>
10103f3c:	d9c00317 	ldw	r7,12(sp)
10103f40:	00800084 	movi	r2,2
10103f44:	11fec50e 	bge	r2,r7,10103a5c <__alt_data_end+0xfffe3a5c>
10103f48:	d9000617 	ldw	r4,24(sp)
10103f4c:	20013c1e 	bne	r4,zero,10104440 <_dtoa_r+0x1524>
10103f50:	a80b883a 	mov	r5,r21
10103f54:	000f883a 	mov	r7,zero
10103f58:	01800144 	movi	r6,5
10103f5c:	e009883a 	mov	r4,fp
10103f60:	01066880 	call	10106688 <__multadd>
10103f64:	100b883a 	mov	r5,r2
10103f68:	8009883a 	mov	r4,r16
10103f6c:	102b883a 	mov	r21,r2
10103f70:	0106e800 	call	10106e80 <__mcmp>
10103f74:	dc000915 	stw	r16,36(sp)
10103f78:	00bf410e 	bge	zero,r2,10103c80 <__alt_data_end+0xfffe3c80>
10103f7c:	d9c00717 	ldw	r7,28(sp)
10103f80:	00800c44 	movi	r2,49
10103f84:	38800005 	stb	r2,0(r7)
10103f88:	d8800517 	ldw	r2,20(sp)
10103f8c:	3dc00044 	addi	r23,r7,1
10103f90:	10800044 	addi	r2,r2,1
10103f94:	d8800515 	stw	r2,20(sp)
10103f98:	003f3d06 	br	10103c90 <__alt_data_end+0xfffe3c90>
10103f9c:	d9800517 	ldw	r6,20(sp)
10103fa0:	d9c00717 	ldw	r7,28(sp)
10103fa4:	00800c44 	movi	r2,49
10103fa8:	31800044 	addi	r6,r6,1
10103fac:	d9800515 	stw	r6,20(sp)
10103fb0:	38800005 	stb	r2,0(r7)
10103fb4:	003edf06 	br	10103b34 <__alt_data_end+0xfffe3b34>
10103fb8:	d8000b15 	stw	zero,44(sp)
10103fbc:	003c9f06 	br	1010323c <__alt_data_end+0xfffe323c>
10103fc0:	903e7e1e 	bne	r18,zero,101039bc <__alt_data_end+0xfffe39bc>
10103fc4:	00800434 	movhi	r2,16
10103fc8:	10bfffc4 	addi	r2,r2,-1
10103fcc:	9884703a 	and	r2,r19,r2
10103fd0:	1000ea1e 	bne	r2,zero,1010437c <_dtoa_r+0x1460>
10103fd4:	9cdffc2c 	andhi	r19,r19,32752
10103fd8:	9800e826 	beq	r19,zero,1010437c <_dtoa_r+0x1460>
10103fdc:	d9c00817 	ldw	r7,32(sp)
10103fe0:	b5800044 	addi	r22,r22,1
10103fe4:	04c00044 	movi	r19,1
10103fe8:	39c00044 	addi	r7,r7,1
10103fec:	d9c00815 	stw	r7,32(sp)
10103ff0:	d8800d17 	ldw	r2,52(sp)
10103ff4:	103e721e 	bne	r2,zero,101039c0 <__alt_data_end+0xfffe39c0>
10103ff8:	00800044 	movi	r2,1
10103ffc:	003e7906 	br	101039e4 <__alt_data_end+0xfffe39e4>
10104000:	8009883a 	mov	r4,r16
10104004:	010ce580 	call	1010ce58 <__floatsidf>
10104008:	d9800f17 	ldw	r6,60(sp)
1010400c:	d9c01017 	ldw	r7,64(sp)
10104010:	1009883a 	mov	r4,r2
10104014:	180b883a 	mov	r5,r3
10104018:	010bdc40 	call	1010bdc4 <__muldf3>
1010401c:	000d883a 	mov	r6,zero
10104020:	01d00734 	movhi	r7,16412
10104024:	1009883a 	mov	r4,r2
10104028:	180b883a 	mov	r5,r3
1010402c:	010a9d80 	call	1010a9d8 <__adddf3>
10104030:	047f3034 	movhi	r17,64704
10104034:	1021883a 	mov	r16,r2
10104038:	1c63883a 	add	r17,r3,r17
1010403c:	d9000f17 	ldw	r4,60(sp)
10104040:	d9401017 	ldw	r5,64(sp)
10104044:	000d883a 	mov	r6,zero
10104048:	01d00534 	movhi	r7,16404
1010404c:	010c4dc0 	call	1010c4dc <__subdf3>
10104050:	800d883a 	mov	r6,r16
10104054:	880f883a 	mov	r7,r17
10104058:	1009883a 	mov	r4,r2
1010405c:	180b883a 	mov	r5,r3
10104060:	102b883a 	mov	r21,r2
10104064:	1829883a 	mov	r20,r3
10104068:	010bbf40 	call	1010bbf4 <__gedf2>
1010406c:	00806c16 	blt	zero,r2,10104220 <_dtoa_r+0x1304>
10104070:	89e0003c 	xorhi	r7,r17,32768
10104074:	800d883a 	mov	r6,r16
10104078:	a809883a 	mov	r4,r21
1010407c:	a00b883a 	mov	r5,r20
10104080:	010bcd00 	call	1010bcd0 <__ledf2>
10104084:	103d7e0e 	bge	r2,zero,10103680 <__alt_data_end+0xfffe3680>
10104088:	002b883a 	mov	r21,zero
1010408c:	0023883a 	mov	r17,zero
10104090:	003efb06 	br	10103c80 <__alt_data_end+0xfffe3c80>
10104094:	d8800717 	ldw	r2,28(sp)
10104098:	003bd006 	br	10102fdc <__alt_data_end+0xfffe2fdc>
1010409c:	d9000a17 	ldw	r4,40(sp)
101040a0:	d9800d17 	ldw	r6,52(sp)
101040a4:	dd400a15 	stw	r21,40(sp)
101040a8:	a905c83a 	sub	r2,r21,r4
101040ac:	308d883a 	add	r6,r6,r2
101040b0:	d9800d15 	stw	r6,52(sp)
101040b4:	002b883a 	mov	r21,zero
101040b8:	003e0606 	br	101038d4 <__alt_data_end+0xfffe38d4>
101040bc:	9023883a 	mov	r17,r18
101040c0:	9829883a 	mov	r20,r19
101040c4:	04000084 	movi	r16,2
101040c8:	003c9206 	br	10103314 <__alt_data_end+0xfffe3314>
101040cc:	04000044 	movi	r16,1
101040d0:	dc000c15 	stw	r16,48(sp)
101040d4:	dc000615 	stw	r16,24(sp)
101040d8:	dc002215 	stw	r16,136(sp)
101040dc:	e0001115 	stw	zero,68(fp)
101040e0:	000b883a 	mov	r5,zero
101040e4:	003c6906 	br	1010328c <__alt_data_end+0xfffe328c>
101040e8:	3021883a 	mov	r16,r6
101040ec:	003ffb06 	br	101040dc <__alt_data_end+0xfffe40dc>
101040f0:	1000021e 	bne	r2,zero,101040fc <_dtoa_r+0x11e0>
101040f4:	4200004c 	andi	r8,r8,1
101040f8:	403e7d1e 	bne	r8,zero,10103af0 <__alt_data_end+0xfffe3af0>
101040fc:	01000c04 	movi	r4,48
10104100:	00000106 	br	10104108 <_dtoa_r+0x11ec>
10104104:	102f883a 	mov	r23,r2
10104108:	b8bfffc4 	addi	r2,r23,-1
1010410c:	10c00007 	ldb	r3,0(r2)
10104110:	193ffc26 	beq	r3,r4,10104104 <__alt_data_end+0xfffe4104>
10104114:	003e8706 	br	10103b34 <__alt_data_end+0xfffe3b34>
10104118:	d8800517 	ldw	r2,20(sp)
1010411c:	00a3c83a 	sub	r17,zero,r2
10104120:	8800a426 	beq	r17,zero,101043b4 <_dtoa_r+0x1498>
10104124:	888003cc 	andi	r2,r17,15
10104128:	100490fa 	slli	r2,r2,3
1010412c:	00c40474 	movhi	r3,4113
10104130:	18fe4304 	addi	r3,r3,-1780
10104134:	1885883a 	add	r2,r3,r2
10104138:	11800017 	ldw	r6,0(r2)
1010413c:	11c00117 	ldw	r7,4(r2)
10104140:	9009883a 	mov	r4,r18
10104144:	980b883a 	mov	r5,r19
10104148:	8823d13a 	srai	r17,r17,4
1010414c:	010bdc40 	call	1010bdc4 <__muldf3>
10104150:	d8800f15 	stw	r2,60(sp)
10104154:	d8c01015 	stw	r3,64(sp)
10104158:	8800e826 	beq	r17,zero,101044fc <_dtoa_r+0x15e0>
1010415c:	05040474 	movhi	r20,4113
10104160:	a53e3904 	addi	r20,r20,-1820
10104164:	04000084 	movi	r16,2
10104168:	8980004c 	andi	r6,r17,1
1010416c:	1009883a 	mov	r4,r2
10104170:	8823d07a 	srai	r17,r17,1
10104174:	180b883a 	mov	r5,r3
10104178:	30000426 	beq	r6,zero,1010418c <_dtoa_r+0x1270>
1010417c:	a1800017 	ldw	r6,0(r20)
10104180:	a1c00117 	ldw	r7,4(r20)
10104184:	84000044 	addi	r16,r16,1
10104188:	010bdc40 	call	1010bdc4 <__muldf3>
1010418c:	a5000204 	addi	r20,r20,8
10104190:	883ff51e 	bne	r17,zero,10104168 <__alt_data_end+0xfffe4168>
10104194:	d8800f15 	stw	r2,60(sp)
10104198:	d8c01015 	stw	r3,64(sp)
1010419c:	003c7606 	br	10103378 <__alt_data_end+0xfffe3378>
101041a0:	00c00c04 	movi	r3,48
101041a4:	10c00005 	stb	r3,0(r2)
101041a8:	d8c00517 	ldw	r3,20(sp)
101041ac:	bd3fffc3 	ldbu	r20,-1(r23)
101041b0:	18c00044 	addi	r3,r3,1
101041b4:	d8c00515 	stw	r3,20(sp)
101041b8:	003db906 	br	101038a0 <__alt_data_end+0xfffe38a0>
101041bc:	89400117 	ldw	r5,4(r17)
101041c0:	e009883a 	mov	r4,fp
101041c4:	01065b80 	call	101065b8 <_Balloc>
101041c8:	89800417 	ldw	r6,16(r17)
101041cc:	89400304 	addi	r5,r17,12
101041d0:	11000304 	addi	r4,r2,12
101041d4:	31800084 	addi	r6,r6,2
101041d8:	318d883a 	add	r6,r6,r6
101041dc:	318d883a 	add	r6,r6,r6
101041e0:	1027883a 	mov	r19,r2
101041e4:	01061ec0 	call	101061ec <memcpy>
101041e8:	01800044 	movi	r6,1
101041ec:	980b883a 	mov	r5,r19
101041f0:	e009883a 	mov	r4,fp
101041f4:	0106d380 	call	10106d38 <__lshift>
101041f8:	1029883a 	mov	r20,r2
101041fc:	003ecc06 	br	10103d30 <__alt_data_end+0xfffe3d30>
10104200:	00800e44 	movi	r2,57
10104204:	90809026 	beq	r18,r2,10104448 <_dtoa_r+0x152c>
10104208:	92000044 	addi	r8,r18,1
1010420c:	003f1f06 	br	10103e8c <__alt_data_end+0xfffe3e8c>
10104210:	9011883a 	mov	r8,r18
10104214:	8825883a 	mov	r18,r17
10104218:	a023883a 	mov	r17,r20
1010421c:	003e2906 	br	10103ac4 <__alt_data_end+0xfffe3ac4>
10104220:	002b883a 	mov	r21,zero
10104224:	0023883a 	mov	r17,zero
10104228:	003f5406 	br	10103f7c <__alt_data_end+0xfffe3f7c>
1010422c:	61bfffc4 	addi	r6,r12,-1
10104230:	300490fa 	slli	r2,r6,3
10104234:	00c40474 	movhi	r3,4113
10104238:	18fe4304 	addi	r3,r3,-1780
1010423c:	1885883a 	add	r2,r3,r2
10104240:	11000017 	ldw	r4,0(r2)
10104244:	11400117 	ldw	r5,4(r2)
10104248:	d8800717 	ldw	r2,28(sp)
1010424c:	880f883a 	mov	r7,r17
10104250:	d9801215 	stw	r6,72(sp)
10104254:	800d883a 	mov	r6,r16
10104258:	db001615 	stw	r12,88(sp)
1010425c:	15c00044 	addi	r23,r2,1
10104260:	010bdc40 	call	1010bdc4 <__muldf3>
10104264:	d9401017 	ldw	r5,64(sp)
10104268:	d9000f17 	ldw	r4,60(sp)
1010426c:	d8c01515 	stw	r3,84(sp)
10104270:	d8801415 	stw	r2,80(sp)
10104274:	010cdd80 	call	1010cdd8 <__fixdfsi>
10104278:	1009883a 	mov	r4,r2
1010427c:	1021883a 	mov	r16,r2
10104280:	010ce580 	call	1010ce58 <__floatsidf>
10104284:	d9000f17 	ldw	r4,60(sp)
10104288:	d9401017 	ldw	r5,64(sp)
1010428c:	100d883a 	mov	r6,r2
10104290:	180f883a 	mov	r7,r3
10104294:	010c4dc0 	call	1010c4dc <__subdf3>
10104298:	1829883a 	mov	r20,r3
1010429c:	d8c00717 	ldw	r3,28(sp)
101042a0:	84000c04 	addi	r16,r16,48
101042a4:	1023883a 	mov	r17,r2
101042a8:	1c000005 	stb	r16,0(r3)
101042ac:	db001617 	ldw	r12,88(sp)
101042b0:	00800044 	movi	r2,1
101042b4:	60802226 	beq	r12,r2,10104340 <_dtoa_r+0x1424>
101042b8:	d9c00717 	ldw	r7,28(sp)
101042bc:	8805883a 	mov	r2,r17
101042c0:	b82b883a 	mov	r21,r23
101042c4:	3b19883a 	add	r12,r7,r12
101042c8:	6023883a 	mov	r17,r12
101042cc:	a007883a 	mov	r3,r20
101042d0:	dc800f15 	stw	r18,60(sp)
101042d4:	000d883a 	mov	r6,zero
101042d8:	01d00934 	movhi	r7,16420
101042dc:	1009883a 	mov	r4,r2
101042e0:	180b883a 	mov	r5,r3
101042e4:	010bdc40 	call	1010bdc4 <__muldf3>
101042e8:	180b883a 	mov	r5,r3
101042ec:	1009883a 	mov	r4,r2
101042f0:	1829883a 	mov	r20,r3
101042f4:	1025883a 	mov	r18,r2
101042f8:	010cdd80 	call	1010cdd8 <__fixdfsi>
101042fc:	1009883a 	mov	r4,r2
10104300:	1021883a 	mov	r16,r2
10104304:	010ce580 	call	1010ce58 <__floatsidf>
10104308:	100d883a 	mov	r6,r2
1010430c:	180f883a 	mov	r7,r3
10104310:	9009883a 	mov	r4,r18
10104314:	a00b883a 	mov	r5,r20
10104318:	84000c04 	addi	r16,r16,48
1010431c:	010c4dc0 	call	1010c4dc <__subdf3>
10104320:	ad400044 	addi	r21,r21,1
10104324:	ac3fffc5 	stb	r16,-1(r21)
10104328:	ac7fea1e 	bne	r21,r17,101042d4 <__alt_data_end+0xfffe42d4>
1010432c:	1023883a 	mov	r17,r2
10104330:	d8801217 	ldw	r2,72(sp)
10104334:	dc800f17 	ldw	r18,60(sp)
10104338:	1829883a 	mov	r20,r3
1010433c:	b8af883a 	add	r23,r23,r2
10104340:	d9001417 	ldw	r4,80(sp)
10104344:	d9401517 	ldw	r5,84(sp)
10104348:	000d883a 	mov	r6,zero
1010434c:	01cff834 	movhi	r7,16352
10104350:	010a9d80 	call	1010a9d8 <__adddf3>
10104354:	880d883a 	mov	r6,r17
10104358:	a00f883a 	mov	r7,r20
1010435c:	1009883a 	mov	r4,r2
10104360:	180b883a 	mov	r5,r3
10104364:	010bcd00 	call	1010bcd0 <__ledf2>
10104368:	10003e0e 	bge	r2,zero,10104464 <_dtoa_r+0x1548>
1010436c:	d9001317 	ldw	r4,76(sp)
10104370:	bd3fffc3 	ldbu	r20,-1(r23)
10104374:	d9000515 	stw	r4,20(sp)
10104378:	003d3b06 	br	10103868 <__alt_data_end+0xfffe3868>
1010437c:	0027883a 	mov	r19,zero
10104380:	003f1b06 	br	10103ff0 <__alt_data_end+0xfffe3ff0>
10104384:	d8800817 	ldw	r2,32(sp)
10104388:	11e9c83a 	sub	r20,r2,r7
1010438c:	0005883a 	mov	r2,zero
10104390:	003d5406 	br	101038e4 <__alt_data_end+0xfffe38e4>
10104394:	00800044 	movi	r2,1
10104398:	003dc706 	br	10103ab8 <__alt_data_end+0xfffe3ab8>
1010439c:	d8c00217 	ldw	r3,8(sp)
101043a0:	00800d84 	movi	r2,54
101043a4:	dd400a17 	ldw	r21,40(sp)
101043a8:	10c5c83a 	sub	r2,r2,r3
101043ac:	dd000817 	ldw	r20,32(sp)
101043b0:	003d4c06 	br	101038e4 <__alt_data_end+0xfffe38e4>
101043b4:	dc800f15 	stw	r18,60(sp)
101043b8:	dcc01015 	stw	r19,64(sp)
101043bc:	04000084 	movi	r16,2
101043c0:	003bed06 	br	10103378 <__alt_data_end+0xfffe3378>
101043c4:	d9000617 	ldw	r4,24(sp)
101043c8:	203f0d26 	beq	r4,zero,10104000 <__alt_data_end+0xfffe4000>
101043cc:	d9800c17 	ldw	r6,48(sp)
101043d0:	01bcab0e 	bge	zero,r6,10103680 <__alt_data_end+0xfffe3680>
101043d4:	d9401017 	ldw	r5,64(sp)
101043d8:	d9000f17 	ldw	r4,60(sp)
101043dc:	000d883a 	mov	r6,zero
101043e0:	01d00934 	movhi	r7,16420
101043e4:	010bdc40 	call	1010bdc4 <__muldf3>
101043e8:	81000044 	addi	r4,r16,1
101043ec:	d8800f15 	stw	r2,60(sp)
101043f0:	d8c01015 	stw	r3,64(sp)
101043f4:	010ce580 	call	1010ce58 <__floatsidf>
101043f8:	d9800f17 	ldw	r6,60(sp)
101043fc:	d9c01017 	ldw	r7,64(sp)
10104400:	1009883a 	mov	r4,r2
10104404:	180b883a 	mov	r5,r3
10104408:	010bdc40 	call	1010bdc4 <__muldf3>
1010440c:	01d00734 	movhi	r7,16412
10104410:	000d883a 	mov	r6,zero
10104414:	1009883a 	mov	r4,r2
10104418:	180b883a 	mov	r5,r3
1010441c:	010a9d80 	call	1010a9d8 <__adddf3>
10104420:	d9c00517 	ldw	r7,20(sp)
10104424:	047f3034 	movhi	r17,64704
10104428:	1021883a 	mov	r16,r2
1010442c:	39ffffc4 	addi	r7,r7,-1
10104430:	d9c01315 	stw	r7,76(sp)
10104434:	1c63883a 	add	r17,r3,r17
10104438:	db000c17 	ldw	r12,48(sp)
1010443c:	003bea06 	br	101033e8 <__alt_data_end+0xfffe33e8>
10104440:	dc000915 	stw	r16,36(sp)
10104444:	003e0e06 	br	10103c80 <__alt_data_end+0xfffe3c80>
10104448:	01000e44 	movi	r4,57
1010444c:	8825883a 	mov	r18,r17
10104450:	9dc00044 	addi	r23,r19,1
10104454:	99000005 	stb	r4,0(r19)
10104458:	a023883a 	mov	r17,r20
1010445c:	dc000915 	stw	r16,36(sp)
10104460:	003da406 	br	10103af4 <__alt_data_end+0xfffe3af4>
10104464:	d9801417 	ldw	r6,80(sp)
10104468:	d9c01517 	ldw	r7,84(sp)
1010446c:	0009883a 	mov	r4,zero
10104470:	014ff834 	movhi	r5,16352
10104474:	010c4dc0 	call	1010c4dc <__subdf3>
10104478:	880d883a 	mov	r6,r17
1010447c:	a00f883a 	mov	r7,r20
10104480:	1009883a 	mov	r4,r2
10104484:	180b883a 	mov	r5,r3
10104488:	010bbf40 	call	1010bbf4 <__gedf2>
1010448c:	00bc7c0e 	bge	zero,r2,10103680 <__alt_data_end+0xfffe3680>
10104490:	01000c04 	movi	r4,48
10104494:	00000106 	br	1010449c <_dtoa_r+0x1580>
10104498:	102f883a 	mov	r23,r2
1010449c:	b8bfffc4 	addi	r2,r23,-1
101044a0:	10c00007 	ldb	r3,0(r2)
101044a4:	193ffc26 	beq	r3,r4,10104498 <__alt_data_end+0xfffe4498>
101044a8:	d9801317 	ldw	r6,76(sp)
101044ac:	d9800515 	stw	r6,20(sp)
101044b0:	003c4406 	br	101035c4 <__alt_data_end+0xfffe35c4>
101044b4:	d9801317 	ldw	r6,76(sp)
101044b8:	d9800515 	stw	r6,20(sp)
101044bc:	003cea06 	br	10103868 <__alt_data_end+0xfffe3868>
101044c0:	dd800f17 	ldw	r22,60(sp)
101044c4:	dcc01017 	ldw	r19,64(sp)
101044c8:	dc801217 	ldw	r18,72(sp)
101044cc:	003c6c06 	br	10103680 <__alt_data_end+0xfffe3680>
101044d0:	903e031e 	bne	r18,zero,10103ce0 <__alt_data_end+0xfffe3ce0>
101044d4:	003ebb06 	br	10103fc4 <__alt_data_end+0xfffe3fc4>
101044d8:	103e6c1e 	bne	r2,zero,10103e8c <__alt_data_end+0xfffe3e8c>
101044dc:	4080004c 	andi	r2,r8,1
101044e0:	103e6a26 	beq	r2,zero,10103e8c <__alt_data_end+0xfffe3e8c>
101044e4:	003e6606 	br	10103e80 <__alt_data_end+0xfffe3e80>
101044e8:	d8c00317 	ldw	r3,12(sp)
101044ec:	00800084 	movi	r2,2
101044f0:	10c02916 	blt	r2,r3,10104598 <_dtoa_r+0x167c>
101044f4:	d9000c17 	ldw	r4,48(sp)
101044f8:	003e8806 	br	10103f1c <__alt_data_end+0xfffe3f1c>
101044fc:	04000084 	movi	r16,2
10104500:	003b9d06 	br	10103378 <__alt_data_end+0xfffe3378>
10104504:	d9001317 	ldw	r4,76(sp)
10104508:	d9000515 	stw	r4,20(sp)
1010450c:	003cd606 	br	10103868 <__alt_data_end+0xfffe3868>
10104510:	d8801317 	ldw	r2,76(sp)
10104514:	d8800515 	stw	r2,20(sp)
10104518:	003c2a06 	br	101035c4 <__alt_data_end+0xfffe35c4>
1010451c:	d9800317 	ldw	r6,12(sp)
10104520:	00800084 	movi	r2,2
10104524:	11801516 	blt	r2,r6,1010457c <_dtoa_r+0x1660>
10104528:	d9c00c17 	ldw	r7,48(sp)
1010452c:	d9c00615 	stw	r7,24(sp)
10104530:	003df706 	br	10103d10 <__alt_data_end+0xfffe3d10>
10104534:	193d3926 	beq	r3,r4,10103a1c <__alt_data_end+0xfffe3a1c>
10104538:	00c00f04 	movi	r3,60
1010453c:	1885c83a 	sub	r2,r3,r2
10104540:	003ddf06 	br	10103cc0 <__alt_data_end+0xfffe3cc0>
10104544:	e009883a 	mov	r4,fp
10104548:	e0001115 	stw	zero,68(fp)
1010454c:	000b883a 	mov	r5,zero
10104550:	01065b80 	call	101065b8 <_Balloc>
10104554:	d8800715 	stw	r2,28(sp)
10104558:	d8c00717 	ldw	r3,28(sp)
1010455c:	00bfffc4 	movi	r2,-1
10104560:	01000044 	movi	r4,1
10104564:	d8800c15 	stw	r2,48(sp)
10104568:	e0c01015 	stw	r3,64(fp)
1010456c:	d9000b15 	stw	r4,44(sp)
10104570:	d8800615 	stw	r2,24(sp)
10104574:	d8002215 	stw	zero,136(sp)
10104578:	003c4106 	br	10103680 <__alt_data_end+0xfffe3680>
1010457c:	d8c00c17 	ldw	r3,48(sp)
10104580:	d8c00615 	stw	r3,24(sp)
10104584:	003e7006 	br	10103f48 <__alt_data_end+0xfffe3f48>
10104588:	04400044 	movi	r17,1
1010458c:	003b2006 	br	10103210 <__alt_data_end+0xfffe3210>
10104590:	000b883a 	mov	r5,zero
10104594:	003b3d06 	br	1010328c <__alt_data_end+0xfffe328c>
10104598:	d8800c17 	ldw	r2,48(sp)
1010459c:	d8800615 	stw	r2,24(sp)
101045a0:	003e6906 	br	10103f48 <__alt_data_end+0xfffe3f48>

101045a4 <__sflush_r>:
101045a4:	2880030b 	ldhu	r2,12(r5)
101045a8:	defffb04 	addi	sp,sp,-20
101045ac:	dcc00315 	stw	r19,12(sp)
101045b0:	dc400115 	stw	r17,4(sp)
101045b4:	dfc00415 	stw	ra,16(sp)
101045b8:	dc800215 	stw	r18,8(sp)
101045bc:	dc000015 	stw	r16,0(sp)
101045c0:	10c0020c 	andi	r3,r2,8
101045c4:	2823883a 	mov	r17,r5
101045c8:	2027883a 	mov	r19,r4
101045cc:	1800311e 	bne	r3,zero,10104694 <__sflush_r+0xf0>
101045d0:	28c00117 	ldw	r3,4(r5)
101045d4:	10820014 	ori	r2,r2,2048
101045d8:	2880030d 	sth	r2,12(r5)
101045dc:	00c04b0e 	bge	zero,r3,1010470c <__sflush_r+0x168>
101045e0:	8a000a17 	ldw	r8,40(r17)
101045e4:	40002326 	beq	r8,zero,10104674 <__sflush_r+0xd0>
101045e8:	9c000017 	ldw	r16,0(r19)
101045ec:	10c4000c 	andi	r3,r2,4096
101045f0:	98000015 	stw	zero,0(r19)
101045f4:	18004826 	beq	r3,zero,10104718 <__sflush_r+0x174>
101045f8:	89801417 	ldw	r6,80(r17)
101045fc:	10c0010c 	andi	r3,r2,4
10104600:	18000626 	beq	r3,zero,1010461c <__sflush_r+0x78>
10104604:	88c00117 	ldw	r3,4(r17)
10104608:	88800c17 	ldw	r2,48(r17)
1010460c:	30cdc83a 	sub	r6,r6,r3
10104610:	10000226 	beq	r2,zero,1010461c <__sflush_r+0x78>
10104614:	88800f17 	ldw	r2,60(r17)
10104618:	308dc83a 	sub	r6,r6,r2
1010461c:	89400717 	ldw	r5,28(r17)
10104620:	000f883a 	mov	r7,zero
10104624:	9809883a 	mov	r4,r19
10104628:	403ee83a 	callr	r8
1010462c:	00ffffc4 	movi	r3,-1
10104630:	10c04426 	beq	r2,r3,10104744 <__sflush_r+0x1a0>
10104634:	88c0030b 	ldhu	r3,12(r17)
10104638:	89000417 	ldw	r4,16(r17)
1010463c:	88000115 	stw	zero,4(r17)
10104640:	197dffcc 	andi	r5,r3,63487
10104644:	8940030d 	sth	r5,12(r17)
10104648:	89000015 	stw	r4,0(r17)
1010464c:	18c4000c 	andi	r3,r3,4096
10104650:	18002c1e 	bne	r3,zero,10104704 <__sflush_r+0x160>
10104654:	89400c17 	ldw	r5,48(r17)
10104658:	9c000015 	stw	r16,0(r19)
1010465c:	28000526 	beq	r5,zero,10104674 <__sflush_r+0xd0>
10104660:	88801004 	addi	r2,r17,64
10104664:	28800226 	beq	r5,r2,10104670 <__sflush_r+0xcc>
10104668:	9809883a 	mov	r4,r19
1010466c:	0104d100 	call	10104d10 <_free_r>
10104670:	88000c15 	stw	zero,48(r17)
10104674:	0005883a 	mov	r2,zero
10104678:	dfc00417 	ldw	ra,16(sp)
1010467c:	dcc00317 	ldw	r19,12(sp)
10104680:	dc800217 	ldw	r18,8(sp)
10104684:	dc400117 	ldw	r17,4(sp)
10104688:	dc000017 	ldw	r16,0(sp)
1010468c:	dec00504 	addi	sp,sp,20
10104690:	f800283a 	ret
10104694:	2c800417 	ldw	r18,16(r5)
10104698:	903ff626 	beq	r18,zero,10104674 <__alt_data_end+0xfffe4674>
1010469c:	2c000017 	ldw	r16,0(r5)
101046a0:	108000cc 	andi	r2,r2,3
101046a4:	2c800015 	stw	r18,0(r5)
101046a8:	84a1c83a 	sub	r16,r16,r18
101046ac:	1000131e 	bne	r2,zero,101046fc <__sflush_r+0x158>
101046b0:	28800517 	ldw	r2,20(r5)
101046b4:	88800215 	stw	r2,8(r17)
101046b8:	04000316 	blt	zero,r16,101046c8 <__sflush_r+0x124>
101046bc:	003fed06 	br	10104674 <__alt_data_end+0xfffe4674>
101046c0:	90a5883a 	add	r18,r18,r2
101046c4:	043feb0e 	bge	zero,r16,10104674 <__alt_data_end+0xfffe4674>
101046c8:	88800917 	ldw	r2,36(r17)
101046cc:	89400717 	ldw	r5,28(r17)
101046d0:	800f883a 	mov	r7,r16
101046d4:	900d883a 	mov	r6,r18
101046d8:	9809883a 	mov	r4,r19
101046dc:	103ee83a 	callr	r2
101046e0:	80a1c83a 	sub	r16,r16,r2
101046e4:	00bff616 	blt	zero,r2,101046c0 <__alt_data_end+0xfffe46c0>
101046e8:	88c0030b 	ldhu	r3,12(r17)
101046ec:	00bfffc4 	movi	r2,-1
101046f0:	18c01014 	ori	r3,r3,64
101046f4:	88c0030d 	sth	r3,12(r17)
101046f8:	003fdf06 	br	10104678 <__alt_data_end+0xfffe4678>
101046fc:	0005883a 	mov	r2,zero
10104700:	003fec06 	br	101046b4 <__alt_data_end+0xfffe46b4>
10104704:	88801415 	stw	r2,80(r17)
10104708:	003fd206 	br	10104654 <__alt_data_end+0xfffe4654>
1010470c:	28c00f17 	ldw	r3,60(r5)
10104710:	00ffb316 	blt	zero,r3,101045e0 <__alt_data_end+0xfffe45e0>
10104714:	003fd706 	br	10104674 <__alt_data_end+0xfffe4674>
10104718:	89400717 	ldw	r5,28(r17)
1010471c:	000d883a 	mov	r6,zero
10104720:	01c00044 	movi	r7,1
10104724:	9809883a 	mov	r4,r19
10104728:	403ee83a 	callr	r8
1010472c:	100d883a 	mov	r6,r2
10104730:	00bfffc4 	movi	r2,-1
10104734:	30801426 	beq	r6,r2,10104788 <__sflush_r+0x1e4>
10104738:	8880030b 	ldhu	r2,12(r17)
1010473c:	8a000a17 	ldw	r8,40(r17)
10104740:	003fae06 	br	101045fc <__alt_data_end+0xfffe45fc>
10104744:	98c00017 	ldw	r3,0(r19)
10104748:	183fba26 	beq	r3,zero,10104634 <__alt_data_end+0xfffe4634>
1010474c:	01000744 	movi	r4,29
10104750:	19000626 	beq	r3,r4,1010476c <__sflush_r+0x1c8>
10104754:	01000584 	movi	r4,22
10104758:	19000426 	beq	r3,r4,1010476c <__sflush_r+0x1c8>
1010475c:	88c0030b 	ldhu	r3,12(r17)
10104760:	18c01014 	ori	r3,r3,64
10104764:	88c0030d 	sth	r3,12(r17)
10104768:	003fc306 	br	10104678 <__alt_data_end+0xfffe4678>
1010476c:	8880030b 	ldhu	r2,12(r17)
10104770:	88c00417 	ldw	r3,16(r17)
10104774:	88000115 	stw	zero,4(r17)
10104778:	10bdffcc 	andi	r2,r2,63487
1010477c:	8880030d 	sth	r2,12(r17)
10104780:	88c00015 	stw	r3,0(r17)
10104784:	003fb306 	br	10104654 <__alt_data_end+0xfffe4654>
10104788:	98800017 	ldw	r2,0(r19)
1010478c:	103fea26 	beq	r2,zero,10104738 <__alt_data_end+0xfffe4738>
10104790:	00c00744 	movi	r3,29
10104794:	10c00226 	beq	r2,r3,101047a0 <__sflush_r+0x1fc>
10104798:	00c00584 	movi	r3,22
1010479c:	10c0031e 	bne	r2,r3,101047ac <__sflush_r+0x208>
101047a0:	9c000015 	stw	r16,0(r19)
101047a4:	0005883a 	mov	r2,zero
101047a8:	003fb306 	br	10104678 <__alt_data_end+0xfffe4678>
101047ac:	88c0030b 	ldhu	r3,12(r17)
101047b0:	3005883a 	mov	r2,r6
101047b4:	18c01014 	ori	r3,r3,64
101047b8:	88c0030d 	sth	r3,12(r17)
101047bc:	003fae06 	br	10104678 <__alt_data_end+0xfffe4678>

101047c0 <_fflush_r>:
101047c0:	defffd04 	addi	sp,sp,-12
101047c4:	dc000115 	stw	r16,4(sp)
101047c8:	dfc00215 	stw	ra,8(sp)
101047cc:	2021883a 	mov	r16,r4
101047d0:	20000226 	beq	r4,zero,101047dc <_fflush_r+0x1c>
101047d4:	20800e17 	ldw	r2,56(r4)
101047d8:	10000c26 	beq	r2,zero,1010480c <_fflush_r+0x4c>
101047dc:	2880030f 	ldh	r2,12(r5)
101047e0:	1000051e 	bne	r2,zero,101047f8 <_fflush_r+0x38>
101047e4:	0005883a 	mov	r2,zero
101047e8:	dfc00217 	ldw	ra,8(sp)
101047ec:	dc000117 	ldw	r16,4(sp)
101047f0:	dec00304 	addi	sp,sp,12
101047f4:	f800283a 	ret
101047f8:	8009883a 	mov	r4,r16
101047fc:	dfc00217 	ldw	ra,8(sp)
10104800:	dc000117 	ldw	r16,4(sp)
10104804:	dec00304 	addi	sp,sp,12
10104808:	01045a41 	jmpi	101045a4 <__sflush_r>
1010480c:	d9400015 	stw	r5,0(sp)
10104810:	0104b9c0 	call	10104b9c <__sinit>
10104814:	d9400017 	ldw	r5,0(sp)
10104818:	003ff006 	br	101047dc <__alt_data_end+0xfffe47dc>

1010481c <fflush>:
1010481c:	20000526 	beq	r4,zero,10104834 <fflush+0x18>
10104820:	00840474 	movhi	r2,4113
10104824:	10857604 	addi	r2,r2,5592
10104828:	200b883a 	mov	r5,r4
1010482c:	11000017 	ldw	r4,0(r2)
10104830:	01047c01 	jmpi	101047c0 <_fflush_r>
10104834:	00840474 	movhi	r2,4113
10104838:	10857504 	addi	r2,r2,5588
1010483c:	11000017 	ldw	r4,0(r2)
10104840:	01440434 	movhi	r5,4112
10104844:	2951f004 	addi	r5,r5,18368
10104848:	01055a01 	jmpi	101055a0 <_fwalk_reent>

1010484c <__fp_unlock>:
1010484c:	0005883a 	mov	r2,zero
10104850:	f800283a 	ret

10104854 <_cleanup_r>:
10104854:	01440474 	movhi	r5,4113
10104858:	29656e04 	addi	r5,r5,-27208
1010485c:	01055a01 	jmpi	101055a0 <_fwalk_reent>

10104860 <__sinit.part.1>:
10104860:	defff704 	addi	sp,sp,-36
10104864:	00c40434 	movhi	r3,4112
10104868:	dfc00815 	stw	ra,32(sp)
1010486c:	ddc00715 	stw	r23,28(sp)
10104870:	dd800615 	stw	r22,24(sp)
10104874:	dd400515 	stw	r21,20(sp)
10104878:	dd000415 	stw	r20,16(sp)
1010487c:	dcc00315 	stw	r19,12(sp)
10104880:	dc800215 	stw	r18,8(sp)
10104884:	dc400115 	stw	r17,4(sp)
10104888:	dc000015 	stw	r16,0(sp)
1010488c:	18d21504 	addi	r3,r3,18516
10104890:	24000117 	ldw	r16,4(r4)
10104894:	20c00f15 	stw	r3,60(r4)
10104898:	2080bb04 	addi	r2,r4,748
1010489c:	00c000c4 	movi	r3,3
101048a0:	20c0b915 	stw	r3,740(r4)
101048a4:	2080ba15 	stw	r2,744(r4)
101048a8:	2000b815 	stw	zero,736(r4)
101048ac:	05c00204 	movi	r23,8
101048b0:	00800104 	movi	r2,4
101048b4:	2025883a 	mov	r18,r4
101048b8:	b80d883a 	mov	r6,r23
101048bc:	81001704 	addi	r4,r16,92
101048c0:	000b883a 	mov	r5,zero
101048c4:	80000015 	stw	zero,0(r16)
101048c8:	80000115 	stw	zero,4(r16)
101048cc:	80000215 	stw	zero,8(r16)
101048d0:	8080030d 	sth	r2,12(r16)
101048d4:	80001915 	stw	zero,100(r16)
101048d8:	8000038d 	sth	zero,14(r16)
101048dc:	80000415 	stw	zero,16(r16)
101048e0:	80000515 	stw	zero,20(r16)
101048e4:	80000615 	stw	zero,24(r16)
101048e8:	01064900 	call	10106490 <memset>
101048ec:	05840434 	movhi	r22,4112
101048f0:	94400217 	ldw	r17,8(r18)
101048f4:	05440434 	movhi	r21,4112
101048f8:	05040434 	movhi	r20,4112
101048fc:	04c40434 	movhi	r19,4112
10104900:	b59ef804 	addi	r22,r22,31712
10104904:	ad5f0f04 	addi	r21,r21,31804
10104908:	a51f2e04 	addi	r20,r20,31928
1010490c:	9cdf4504 	addi	r19,r19,32020
10104910:	85800815 	stw	r22,32(r16)
10104914:	85400915 	stw	r21,36(r16)
10104918:	85000a15 	stw	r20,40(r16)
1010491c:	84c00b15 	stw	r19,44(r16)
10104920:	84000715 	stw	r16,28(r16)
10104924:	00800284 	movi	r2,10
10104928:	8880030d 	sth	r2,12(r17)
1010492c:	00800044 	movi	r2,1
10104930:	b80d883a 	mov	r6,r23
10104934:	89001704 	addi	r4,r17,92
10104938:	000b883a 	mov	r5,zero
1010493c:	88000015 	stw	zero,0(r17)
10104940:	88000115 	stw	zero,4(r17)
10104944:	88000215 	stw	zero,8(r17)
10104948:	88001915 	stw	zero,100(r17)
1010494c:	8880038d 	sth	r2,14(r17)
10104950:	88000415 	stw	zero,16(r17)
10104954:	88000515 	stw	zero,20(r17)
10104958:	88000615 	stw	zero,24(r17)
1010495c:	01064900 	call	10106490 <memset>
10104960:	94000317 	ldw	r16,12(r18)
10104964:	00800484 	movi	r2,18
10104968:	8c400715 	stw	r17,28(r17)
1010496c:	8d800815 	stw	r22,32(r17)
10104970:	8d400915 	stw	r21,36(r17)
10104974:	8d000a15 	stw	r20,40(r17)
10104978:	8cc00b15 	stw	r19,44(r17)
1010497c:	8080030d 	sth	r2,12(r16)
10104980:	00800084 	movi	r2,2
10104984:	80000015 	stw	zero,0(r16)
10104988:	80000115 	stw	zero,4(r16)
1010498c:	80000215 	stw	zero,8(r16)
10104990:	80001915 	stw	zero,100(r16)
10104994:	8080038d 	sth	r2,14(r16)
10104998:	80000415 	stw	zero,16(r16)
1010499c:	80000515 	stw	zero,20(r16)
101049a0:	80000615 	stw	zero,24(r16)
101049a4:	b80d883a 	mov	r6,r23
101049a8:	000b883a 	mov	r5,zero
101049ac:	81001704 	addi	r4,r16,92
101049b0:	01064900 	call	10106490 <memset>
101049b4:	00800044 	movi	r2,1
101049b8:	84000715 	stw	r16,28(r16)
101049bc:	85800815 	stw	r22,32(r16)
101049c0:	85400915 	stw	r21,36(r16)
101049c4:	85000a15 	stw	r20,40(r16)
101049c8:	84c00b15 	stw	r19,44(r16)
101049cc:	90800e15 	stw	r2,56(r18)
101049d0:	dfc00817 	ldw	ra,32(sp)
101049d4:	ddc00717 	ldw	r23,28(sp)
101049d8:	dd800617 	ldw	r22,24(sp)
101049dc:	dd400517 	ldw	r21,20(sp)
101049e0:	dd000417 	ldw	r20,16(sp)
101049e4:	dcc00317 	ldw	r19,12(sp)
101049e8:	dc800217 	ldw	r18,8(sp)
101049ec:	dc400117 	ldw	r17,4(sp)
101049f0:	dc000017 	ldw	r16,0(sp)
101049f4:	dec00904 	addi	sp,sp,36
101049f8:	f800283a 	ret

101049fc <__fp_lock>:
101049fc:	0005883a 	mov	r2,zero
10104a00:	f800283a 	ret

10104a04 <__sfmoreglue>:
10104a04:	defffc04 	addi	sp,sp,-16
10104a08:	dc400115 	stw	r17,4(sp)
10104a0c:	2c7fffc4 	addi	r17,r5,-1
10104a10:	8c401a24 	muli	r17,r17,104
10104a14:	dc800215 	stw	r18,8(sp)
10104a18:	2825883a 	mov	r18,r5
10104a1c:	89401d04 	addi	r5,r17,116
10104a20:	dc000015 	stw	r16,0(sp)
10104a24:	dfc00315 	stw	ra,12(sp)
10104a28:	01058fc0 	call	101058fc <_malloc_r>
10104a2c:	1021883a 	mov	r16,r2
10104a30:	10000726 	beq	r2,zero,10104a50 <__sfmoreglue+0x4c>
10104a34:	11000304 	addi	r4,r2,12
10104a38:	10000015 	stw	zero,0(r2)
10104a3c:	14800115 	stw	r18,4(r2)
10104a40:	11000215 	stw	r4,8(r2)
10104a44:	89801a04 	addi	r6,r17,104
10104a48:	000b883a 	mov	r5,zero
10104a4c:	01064900 	call	10106490 <memset>
10104a50:	8005883a 	mov	r2,r16
10104a54:	dfc00317 	ldw	ra,12(sp)
10104a58:	dc800217 	ldw	r18,8(sp)
10104a5c:	dc400117 	ldw	r17,4(sp)
10104a60:	dc000017 	ldw	r16,0(sp)
10104a64:	dec00404 	addi	sp,sp,16
10104a68:	f800283a 	ret

10104a6c <__sfp>:
10104a6c:	defffb04 	addi	sp,sp,-20
10104a70:	dc000015 	stw	r16,0(sp)
10104a74:	04040474 	movhi	r16,4113
10104a78:	84057504 	addi	r16,r16,5588
10104a7c:	dcc00315 	stw	r19,12(sp)
10104a80:	2027883a 	mov	r19,r4
10104a84:	81000017 	ldw	r4,0(r16)
10104a88:	dfc00415 	stw	ra,16(sp)
10104a8c:	dc800215 	stw	r18,8(sp)
10104a90:	20800e17 	ldw	r2,56(r4)
10104a94:	dc400115 	stw	r17,4(sp)
10104a98:	1000021e 	bne	r2,zero,10104aa4 <__sfp+0x38>
10104a9c:	01048600 	call	10104860 <__sinit.part.1>
10104aa0:	81000017 	ldw	r4,0(r16)
10104aa4:	2480b804 	addi	r18,r4,736
10104aa8:	047fffc4 	movi	r17,-1
10104aac:	91000117 	ldw	r4,4(r18)
10104ab0:	94000217 	ldw	r16,8(r18)
10104ab4:	213fffc4 	addi	r4,r4,-1
10104ab8:	20000a16 	blt	r4,zero,10104ae4 <__sfp+0x78>
10104abc:	8080030f 	ldh	r2,12(r16)
10104ac0:	10000c26 	beq	r2,zero,10104af4 <__sfp+0x88>
10104ac4:	80c01d04 	addi	r3,r16,116
10104ac8:	00000206 	br	10104ad4 <__sfp+0x68>
10104acc:	18bfe60f 	ldh	r2,-104(r3)
10104ad0:	10000826 	beq	r2,zero,10104af4 <__sfp+0x88>
10104ad4:	213fffc4 	addi	r4,r4,-1
10104ad8:	1c3ffd04 	addi	r16,r3,-12
10104adc:	18c01a04 	addi	r3,r3,104
10104ae0:	247ffa1e 	bne	r4,r17,10104acc <__alt_data_end+0xfffe4acc>
10104ae4:	90800017 	ldw	r2,0(r18)
10104ae8:	10001d26 	beq	r2,zero,10104b60 <__sfp+0xf4>
10104aec:	1025883a 	mov	r18,r2
10104af0:	003fee06 	br	10104aac <__alt_data_end+0xfffe4aac>
10104af4:	00bfffc4 	movi	r2,-1
10104af8:	8080038d 	sth	r2,14(r16)
10104afc:	00800044 	movi	r2,1
10104b00:	8080030d 	sth	r2,12(r16)
10104b04:	80001915 	stw	zero,100(r16)
10104b08:	80000015 	stw	zero,0(r16)
10104b0c:	80000215 	stw	zero,8(r16)
10104b10:	80000115 	stw	zero,4(r16)
10104b14:	80000415 	stw	zero,16(r16)
10104b18:	80000515 	stw	zero,20(r16)
10104b1c:	80000615 	stw	zero,24(r16)
10104b20:	01800204 	movi	r6,8
10104b24:	000b883a 	mov	r5,zero
10104b28:	81001704 	addi	r4,r16,92
10104b2c:	01064900 	call	10106490 <memset>
10104b30:	8005883a 	mov	r2,r16
10104b34:	80000c15 	stw	zero,48(r16)
10104b38:	80000d15 	stw	zero,52(r16)
10104b3c:	80001115 	stw	zero,68(r16)
10104b40:	80001215 	stw	zero,72(r16)
10104b44:	dfc00417 	ldw	ra,16(sp)
10104b48:	dcc00317 	ldw	r19,12(sp)
10104b4c:	dc800217 	ldw	r18,8(sp)
10104b50:	dc400117 	ldw	r17,4(sp)
10104b54:	dc000017 	ldw	r16,0(sp)
10104b58:	dec00504 	addi	sp,sp,20
10104b5c:	f800283a 	ret
10104b60:	01400104 	movi	r5,4
10104b64:	9809883a 	mov	r4,r19
10104b68:	0104a040 	call	10104a04 <__sfmoreglue>
10104b6c:	90800015 	stw	r2,0(r18)
10104b70:	103fde1e 	bne	r2,zero,10104aec <__alt_data_end+0xfffe4aec>
10104b74:	00800304 	movi	r2,12
10104b78:	98800015 	stw	r2,0(r19)
10104b7c:	0005883a 	mov	r2,zero
10104b80:	003ff006 	br	10104b44 <__alt_data_end+0xfffe4b44>

10104b84 <_cleanup>:
10104b84:	00840474 	movhi	r2,4113
10104b88:	10857504 	addi	r2,r2,5588
10104b8c:	11000017 	ldw	r4,0(r2)
10104b90:	01440474 	movhi	r5,4113
10104b94:	29656e04 	addi	r5,r5,-27208
10104b98:	01055a01 	jmpi	101055a0 <_fwalk_reent>

10104b9c <__sinit>:
10104b9c:	20800e17 	ldw	r2,56(r4)
10104ba0:	10000126 	beq	r2,zero,10104ba8 <__sinit+0xc>
10104ba4:	f800283a 	ret
10104ba8:	01048601 	jmpi	10104860 <__sinit.part.1>

10104bac <__sfp_lock_acquire>:
10104bac:	f800283a 	ret

10104bb0 <__sfp_lock_release>:
10104bb0:	f800283a 	ret

10104bb4 <__sinit_lock_acquire>:
10104bb4:	f800283a 	ret

10104bb8 <__sinit_lock_release>:
10104bb8:	f800283a 	ret

10104bbc <__fp_lock_all>:
10104bbc:	00840474 	movhi	r2,4113
10104bc0:	10857604 	addi	r2,r2,5592
10104bc4:	11000017 	ldw	r4,0(r2)
10104bc8:	01440434 	movhi	r5,4112
10104bcc:	29527f04 	addi	r5,r5,18940
10104bd0:	01054dc1 	jmpi	101054dc <_fwalk>

10104bd4 <__fp_unlock_all>:
10104bd4:	00840474 	movhi	r2,4113
10104bd8:	10857604 	addi	r2,r2,5592
10104bdc:	11000017 	ldw	r4,0(r2)
10104be0:	01440434 	movhi	r5,4112
10104be4:	29521304 	addi	r5,r5,18508
10104be8:	01054dc1 	jmpi	101054dc <_fwalk>

10104bec <_malloc_trim_r>:
10104bec:	defffb04 	addi	sp,sp,-20
10104bf0:	dcc00315 	stw	r19,12(sp)
10104bf4:	04c40474 	movhi	r19,4113
10104bf8:	dc800215 	stw	r18,8(sp)
10104bfc:	dc400115 	stw	r17,4(sp)
10104c00:	dc000015 	stw	r16,0(sp)
10104c04:	dfc00415 	stw	ra,16(sp)
10104c08:	2821883a 	mov	r16,r5
10104c0c:	9cfff104 	addi	r19,r19,-60
10104c10:	2025883a 	mov	r18,r4
10104c14:	010d60c0 	call	1010d60c <__malloc_lock>
10104c18:	98800217 	ldw	r2,8(r19)
10104c1c:	14400117 	ldw	r17,4(r2)
10104c20:	00bfff04 	movi	r2,-4
10104c24:	88a2703a 	and	r17,r17,r2
10104c28:	8c21c83a 	sub	r16,r17,r16
10104c2c:	8403fbc4 	addi	r16,r16,4079
10104c30:	8020d33a 	srli	r16,r16,12
10104c34:	0083ffc4 	movi	r2,4095
10104c38:	843fffc4 	addi	r16,r16,-1
10104c3c:	8020933a 	slli	r16,r16,12
10104c40:	1400060e 	bge	r2,r16,10104c5c <_malloc_trim_r+0x70>
10104c44:	000b883a 	mov	r5,zero
10104c48:	9009883a 	mov	r4,r18
10104c4c:	0107b8c0 	call	10107b8c <_sbrk_r>
10104c50:	98c00217 	ldw	r3,8(r19)
10104c54:	1c47883a 	add	r3,r3,r17
10104c58:	10c00a26 	beq	r2,r3,10104c84 <_malloc_trim_r+0x98>
10104c5c:	9009883a 	mov	r4,r18
10104c60:	010d6300 	call	1010d630 <__malloc_unlock>
10104c64:	0005883a 	mov	r2,zero
10104c68:	dfc00417 	ldw	ra,16(sp)
10104c6c:	dcc00317 	ldw	r19,12(sp)
10104c70:	dc800217 	ldw	r18,8(sp)
10104c74:	dc400117 	ldw	r17,4(sp)
10104c78:	dc000017 	ldw	r16,0(sp)
10104c7c:	dec00504 	addi	sp,sp,20
10104c80:	f800283a 	ret
10104c84:	040bc83a 	sub	r5,zero,r16
10104c88:	9009883a 	mov	r4,r18
10104c8c:	0107b8c0 	call	10107b8c <_sbrk_r>
10104c90:	00ffffc4 	movi	r3,-1
10104c94:	10c00d26 	beq	r2,r3,10104ccc <_malloc_trim_r+0xe0>
10104c98:	00c40474 	movhi	r3,4113
10104c9c:	18cc4e04 	addi	r3,r3,12600
10104ca0:	18800017 	ldw	r2,0(r3)
10104ca4:	99000217 	ldw	r4,8(r19)
10104ca8:	8c23c83a 	sub	r17,r17,r16
10104cac:	8c400054 	ori	r17,r17,1
10104cb0:	1421c83a 	sub	r16,r2,r16
10104cb4:	24400115 	stw	r17,4(r4)
10104cb8:	9009883a 	mov	r4,r18
10104cbc:	1c000015 	stw	r16,0(r3)
10104cc0:	010d6300 	call	1010d630 <__malloc_unlock>
10104cc4:	00800044 	movi	r2,1
10104cc8:	003fe706 	br	10104c68 <__alt_data_end+0xfffe4c68>
10104ccc:	000b883a 	mov	r5,zero
10104cd0:	9009883a 	mov	r4,r18
10104cd4:	0107b8c0 	call	10107b8c <_sbrk_r>
10104cd8:	99000217 	ldw	r4,8(r19)
10104cdc:	014003c4 	movi	r5,15
10104ce0:	1107c83a 	sub	r3,r2,r4
10104ce4:	28ffdd0e 	bge	r5,r3,10104c5c <__alt_data_end+0xfffe4c5c>
10104ce8:	01440474 	movhi	r5,4113
10104cec:	29457804 	addi	r5,r5,5600
10104cf0:	29400017 	ldw	r5,0(r5)
10104cf4:	18c00054 	ori	r3,r3,1
10104cf8:	20c00115 	stw	r3,4(r4)
10104cfc:	00c40474 	movhi	r3,4113
10104d00:	1145c83a 	sub	r2,r2,r5
10104d04:	18cc4e04 	addi	r3,r3,12600
10104d08:	18800015 	stw	r2,0(r3)
10104d0c:	003fd306 	br	10104c5c <__alt_data_end+0xfffe4c5c>

10104d10 <_free_r>:
10104d10:	28004126 	beq	r5,zero,10104e18 <_free_r+0x108>
10104d14:	defffd04 	addi	sp,sp,-12
10104d18:	dc400115 	stw	r17,4(sp)
10104d1c:	dc000015 	stw	r16,0(sp)
10104d20:	2023883a 	mov	r17,r4
10104d24:	2821883a 	mov	r16,r5
10104d28:	dfc00215 	stw	ra,8(sp)
10104d2c:	010d60c0 	call	1010d60c <__malloc_lock>
10104d30:	81ffff17 	ldw	r7,-4(r16)
10104d34:	00bfff84 	movi	r2,-2
10104d38:	01040474 	movhi	r4,4113
10104d3c:	81bffe04 	addi	r6,r16,-8
10104d40:	3884703a 	and	r2,r7,r2
10104d44:	213ff104 	addi	r4,r4,-60
10104d48:	308b883a 	add	r5,r6,r2
10104d4c:	2a400117 	ldw	r9,4(r5)
10104d50:	22000217 	ldw	r8,8(r4)
10104d54:	00ffff04 	movi	r3,-4
10104d58:	48c6703a 	and	r3,r9,r3
10104d5c:	2a005726 	beq	r5,r8,10104ebc <_free_r+0x1ac>
10104d60:	28c00115 	stw	r3,4(r5)
10104d64:	39c0004c 	andi	r7,r7,1
10104d68:	3800091e 	bne	r7,zero,10104d90 <_free_r+0x80>
10104d6c:	823ffe17 	ldw	r8,-8(r16)
10104d70:	22400204 	addi	r9,r4,8
10104d74:	320dc83a 	sub	r6,r6,r8
10104d78:	31c00217 	ldw	r7,8(r6)
10104d7c:	1205883a 	add	r2,r2,r8
10104d80:	3a406526 	beq	r7,r9,10104f18 <_free_r+0x208>
10104d84:	32000317 	ldw	r8,12(r6)
10104d88:	3a000315 	stw	r8,12(r7)
10104d8c:	41c00215 	stw	r7,8(r8)
10104d90:	28cf883a 	add	r7,r5,r3
10104d94:	39c00117 	ldw	r7,4(r7)
10104d98:	39c0004c 	andi	r7,r7,1
10104d9c:	38003a26 	beq	r7,zero,10104e88 <_free_r+0x178>
10104da0:	10c00054 	ori	r3,r2,1
10104da4:	30c00115 	stw	r3,4(r6)
10104da8:	3087883a 	add	r3,r6,r2
10104dac:	18800015 	stw	r2,0(r3)
10104db0:	00c07fc4 	movi	r3,511
10104db4:	18801936 	bltu	r3,r2,10104e1c <_free_r+0x10c>
10104db8:	1004d0fa 	srli	r2,r2,3
10104dbc:	01c00044 	movi	r7,1
10104dc0:	21400117 	ldw	r5,4(r4)
10104dc4:	10c00044 	addi	r3,r2,1
10104dc8:	18c7883a 	add	r3,r3,r3
10104dcc:	1005d0ba 	srai	r2,r2,2
10104dd0:	18c7883a 	add	r3,r3,r3
10104dd4:	18c7883a 	add	r3,r3,r3
10104dd8:	1907883a 	add	r3,r3,r4
10104ddc:	3884983a 	sll	r2,r7,r2
10104de0:	19c00017 	ldw	r7,0(r3)
10104de4:	1a3ffe04 	addi	r8,r3,-8
10104de8:	1144b03a 	or	r2,r2,r5
10104dec:	32000315 	stw	r8,12(r6)
10104df0:	31c00215 	stw	r7,8(r6)
10104df4:	20800115 	stw	r2,4(r4)
10104df8:	19800015 	stw	r6,0(r3)
10104dfc:	39800315 	stw	r6,12(r7)
10104e00:	8809883a 	mov	r4,r17
10104e04:	dfc00217 	ldw	ra,8(sp)
10104e08:	dc400117 	ldw	r17,4(sp)
10104e0c:	dc000017 	ldw	r16,0(sp)
10104e10:	dec00304 	addi	sp,sp,12
10104e14:	010d6301 	jmpi	1010d630 <__malloc_unlock>
10104e18:	f800283a 	ret
10104e1c:	100ad27a 	srli	r5,r2,9
10104e20:	00c00104 	movi	r3,4
10104e24:	19404a36 	bltu	r3,r5,10104f50 <_free_r+0x240>
10104e28:	100ad1ba 	srli	r5,r2,6
10104e2c:	28c00e44 	addi	r3,r5,57
10104e30:	18c7883a 	add	r3,r3,r3
10104e34:	29400e04 	addi	r5,r5,56
10104e38:	18c7883a 	add	r3,r3,r3
10104e3c:	18c7883a 	add	r3,r3,r3
10104e40:	1909883a 	add	r4,r3,r4
10104e44:	20c00017 	ldw	r3,0(r4)
10104e48:	01c40474 	movhi	r7,4113
10104e4c:	213ffe04 	addi	r4,r4,-8
10104e50:	39fff104 	addi	r7,r7,-60
10104e54:	20c04426 	beq	r4,r3,10104f68 <_free_r+0x258>
10104e58:	01ffff04 	movi	r7,-4
10104e5c:	19400117 	ldw	r5,4(r3)
10104e60:	29ca703a 	and	r5,r5,r7
10104e64:	1140022e 	bgeu	r2,r5,10104e70 <_free_r+0x160>
10104e68:	18c00217 	ldw	r3,8(r3)
10104e6c:	20fffb1e 	bne	r4,r3,10104e5c <__alt_data_end+0xfffe4e5c>
10104e70:	19000317 	ldw	r4,12(r3)
10104e74:	31000315 	stw	r4,12(r6)
10104e78:	30c00215 	stw	r3,8(r6)
10104e7c:	21800215 	stw	r6,8(r4)
10104e80:	19800315 	stw	r6,12(r3)
10104e84:	003fde06 	br	10104e00 <__alt_data_end+0xfffe4e00>
10104e88:	29c00217 	ldw	r7,8(r5)
10104e8c:	10c5883a 	add	r2,r2,r3
10104e90:	00c40474 	movhi	r3,4113
10104e94:	18fff304 	addi	r3,r3,-52
10104e98:	38c03b26 	beq	r7,r3,10104f88 <_free_r+0x278>
10104e9c:	2a000317 	ldw	r8,12(r5)
10104ea0:	11400054 	ori	r5,r2,1
10104ea4:	3087883a 	add	r3,r6,r2
10104ea8:	3a000315 	stw	r8,12(r7)
10104eac:	41c00215 	stw	r7,8(r8)
10104eb0:	31400115 	stw	r5,4(r6)
10104eb4:	18800015 	stw	r2,0(r3)
10104eb8:	003fbd06 	br	10104db0 <__alt_data_end+0xfffe4db0>
10104ebc:	39c0004c 	andi	r7,r7,1
10104ec0:	10c5883a 	add	r2,r2,r3
10104ec4:	3800071e 	bne	r7,zero,10104ee4 <_free_r+0x1d4>
10104ec8:	81fffe17 	ldw	r7,-8(r16)
10104ecc:	31cdc83a 	sub	r6,r6,r7
10104ed0:	30c00317 	ldw	r3,12(r6)
10104ed4:	31400217 	ldw	r5,8(r6)
10104ed8:	11c5883a 	add	r2,r2,r7
10104edc:	28c00315 	stw	r3,12(r5)
10104ee0:	19400215 	stw	r5,8(r3)
10104ee4:	10c00054 	ori	r3,r2,1
10104ee8:	30c00115 	stw	r3,4(r6)
10104eec:	00c40474 	movhi	r3,4113
10104ef0:	18c57904 	addi	r3,r3,5604
10104ef4:	18c00017 	ldw	r3,0(r3)
10104ef8:	21800215 	stw	r6,8(r4)
10104efc:	10ffc036 	bltu	r2,r3,10104e00 <__alt_data_end+0xfffe4e00>
10104f00:	00840474 	movhi	r2,4113
10104f04:	108c4504 	addi	r2,r2,12564
10104f08:	11400017 	ldw	r5,0(r2)
10104f0c:	8809883a 	mov	r4,r17
10104f10:	0104bec0 	call	10104bec <_malloc_trim_r>
10104f14:	003fba06 	br	10104e00 <__alt_data_end+0xfffe4e00>
10104f18:	28c9883a 	add	r4,r5,r3
10104f1c:	21000117 	ldw	r4,4(r4)
10104f20:	2100004c 	andi	r4,r4,1
10104f24:	2000391e 	bne	r4,zero,1010500c <_free_r+0x2fc>
10104f28:	29c00217 	ldw	r7,8(r5)
10104f2c:	29000317 	ldw	r4,12(r5)
10104f30:	1885883a 	add	r2,r3,r2
10104f34:	10c00054 	ori	r3,r2,1
10104f38:	39000315 	stw	r4,12(r7)
10104f3c:	21c00215 	stw	r7,8(r4)
10104f40:	30c00115 	stw	r3,4(r6)
10104f44:	308d883a 	add	r6,r6,r2
10104f48:	30800015 	stw	r2,0(r6)
10104f4c:	003fac06 	br	10104e00 <__alt_data_end+0xfffe4e00>
10104f50:	00c00504 	movi	r3,20
10104f54:	19401536 	bltu	r3,r5,10104fac <_free_r+0x29c>
10104f58:	28c01704 	addi	r3,r5,92
10104f5c:	18c7883a 	add	r3,r3,r3
10104f60:	294016c4 	addi	r5,r5,91
10104f64:	003fb406 	br	10104e38 <__alt_data_end+0xfffe4e38>
10104f68:	280bd0ba 	srai	r5,r5,2
10104f6c:	00c00044 	movi	r3,1
10104f70:	38800117 	ldw	r2,4(r7)
10104f74:	194a983a 	sll	r5,r3,r5
10104f78:	2007883a 	mov	r3,r4
10104f7c:	2884b03a 	or	r2,r5,r2
10104f80:	38800115 	stw	r2,4(r7)
10104f84:	003fbb06 	br	10104e74 <__alt_data_end+0xfffe4e74>
10104f88:	21800515 	stw	r6,20(r4)
10104f8c:	21800415 	stw	r6,16(r4)
10104f90:	10c00054 	ori	r3,r2,1
10104f94:	31c00315 	stw	r7,12(r6)
10104f98:	31c00215 	stw	r7,8(r6)
10104f9c:	30c00115 	stw	r3,4(r6)
10104fa0:	308d883a 	add	r6,r6,r2
10104fa4:	30800015 	stw	r2,0(r6)
10104fa8:	003f9506 	br	10104e00 <__alt_data_end+0xfffe4e00>
10104fac:	00c01504 	movi	r3,84
10104fb0:	19400536 	bltu	r3,r5,10104fc8 <_free_r+0x2b8>
10104fb4:	100ad33a 	srli	r5,r2,12
10104fb8:	28c01bc4 	addi	r3,r5,111
10104fbc:	18c7883a 	add	r3,r3,r3
10104fc0:	29401b84 	addi	r5,r5,110
10104fc4:	003f9c06 	br	10104e38 <__alt_data_end+0xfffe4e38>
10104fc8:	00c05504 	movi	r3,340
10104fcc:	19400536 	bltu	r3,r5,10104fe4 <_free_r+0x2d4>
10104fd0:	100ad3fa 	srli	r5,r2,15
10104fd4:	28c01e04 	addi	r3,r5,120
10104fd8:	18c7883a 	add	r3,r3,r3
10104fdc:	29401dc4 	addi	r5,r5,119
10104fe0:	003f9506 	br	10104e38 <__alt_data_end+0xfffe4e38>
10104fe4:	00c15504 	movi	r3,1364
10104fe8:	19400536 	bltu	r3,r5,10105000 <_free_r+0x2f0>
10104fec:	100ad4ba 	srli	r5,r2,18
10104ff0:	28c01f44 	addi	r3,r5,125
10104ff4:	18c7883a 	add	r3,r3,r3
10104ff8:	29401f04 	addi	r5,r5,124
10104ffc:	003f8e06 	br	10104e38 <__alt_data_end+0xfffe4e38>
10105000:	00c03f84 	movi	r3,254
10105004:	01401f84 	movi	r5,126
10105008:	003f8b06 	br	10104e38 <__alt_data_end+0xfffe4e38>
1010500c:	10c00054 	ori	r3,r2,1
10105010:	30c00115 	stw	r3,4(r6)
10105014:	308d883a 	add	r6,r6,r2
10105018:	30800015 	stw	r2,0(r6)
1010501c:	003f7806 	br	10104e00 <__alt_data_end+0xfffe4e00>

10105020 <__sfvwrite_r>:
10105020:	30800217 	ldw	r2,8(r6)
10105024:	10006726 	beq	r2,zero,101051c4 <__sfvwrite_r+0x1a4>
10105028:	28c0030b 	ldhu	r3,12(r5)
1010502c:	defff404 	addi	sp,sp,-48
10105030:	dd400715 	stw	r21,28(sp)
10105034:	dd000615 	stw	r20,24(sp)
10105038:	dc000215 	stw	r16,8(sp)
1010503c:	dfc00b15 	stw	ra,44(sp)
10105040:	df000a15 	stw	fp,40(sp)
10105044:	ddc00915 	stw	r23,36(sp)
10105048:	dd800815 	stw	r22,32(sp)
1010504c:	dcc00515 	stw	r19,20(sp)
10105050:	dc800415 	stw	r18,16(sp)
10105054:	dc400315 	stw	r17,12(sp)
10105058:	1880020c 	andi	r2,r3,8
1010505c:	2821883a 	mov	r16,r5
10105060:	202b883a 	mov	r21,r4
10105064:	3029883a 	mov	r20,r6
10105068:	10002726 	beq	r2,zero,10105108 <__sfvwrite_r+0xe8>
1010506c:	28800417 	ldw	r2,16(r5)
10105070:	10002526 	beq	r2,zero,10105108 <__sfvwrite_r+0xe8>
10105074:	1880008c 	andi	r2,r3,2
10105078:	a4400017 	ldw	r17,0(r20)
1010507c:	10002a26 	beq	r2,zero,10105128 <__sfvwrite_r+0x108>
10105080:	05a00034 	movhi	r22,32768
10105084:	0027883a 	mov	r19,zero
10105088:	0025883a 	mov	r18,zero
1010508c:	b5bf0004 	addi	r22,r22,-1024
10105090:	980d883a 	mov	r6,r19
10105094:	a809883a 	mov	r4,r21
10105098:	90004626 	beq	r18,zero,101051b4 <__sfvwrite_r+0x194>
1010509c:	900f883a 	mov	r7,r18
101050a0:	b480022e 	bgeu	r22,r18,101050ac <__sfvwrite_r+0x8c>
101050a4:	01e00034 	movhi	r7,32768
101050a8:	39ff0004 	addi	r7,r7,-1024
101050ac:	80800917 	ldw	r2,36(r16)
101050b0:	81400717 	ldw	r5,28(r16)
101050b4:	103ee83a 	callr	r2
101050b8:	0080570e 	bge	zero,r2,10105218 <__sfvwrite_r+0x1f8>
101050bc:	a0c00217 	ldw	r3,8(r20)
101050c0:	98a7883a 	add	r19,r19,r2
101050c4:	90a5c83a 	sub	r18,r18,r2
101050c8:	1885c83a 	sub	r2,r3,r2
101050cc:	a0800215 	stw	r2,8(r20)
101050d0:	103fef1e 	bne	r2,zero,10105090 <__alt_data_end+0xfffe5090>
101050d4:	0005883a 	mov	r2,zero
101050d8:	dfc00b17 	ldw	ra,44(sp)
101050dc:	df000a17 	ldw	fp,40(sp)
101050e0:	ddc00917 	ldw	r23,36(sp)
101050e4:	dd800817 	ldw	r22,32(sp)
101050e8:	dd400717 	ldw	r21,28(sp)
101050ec:	dd000617 	ldw	r20,24(sp)
101050f0:	dcc00517 	ldw	r19,20(sp)
101050f4:	dc800417 	ldw	r18,16(sp)
101050f8:	dc400317 	ldw	r17,12(sp)
101050fc:	dc000217 	ldw	r16,8(sp)
10105100:	dec00c04 	addi	sp,sp,48
10105104:	f800283a 	ret
10105108:	800b883a 	mov	r5,r16
1010510c:	a809883a 	mov	r4,r21
10105110:	0102bc80 	call	10102bc8 <__swsetup_r>
10105114:	1000eb1e 	bne	r2,zero,101054c4 <__sfvwrite_r+0x4a4>
10105118:	80c0030b 	ldhu	r3,12(r16)
1010511c:	a4400017 	ldw	r17,0(r20)
10105120:	1880008c 	andi	r2,r3,2
10105124:	103fd61e 	bne	r2,zero,10105080 <__alt_data_end+0xfffe5080>
10105128:	1880004c 	andi	r2,r3,1
1010512c:	10003f1e 	bne	r2,zero,1010522c <__sfvwrite_r+0x20c>
10105130:	0039883a 	mov	fp,zero
10105134:	0025883a 	mov	r18,zero
10105138:	90001a26 	beq	r18,zero,101051a4 <__sfvwrite_r+0x184>
1010513c:	1880800c 	andi	r2,r3,512
10105140:	84c00217 	ldw	r19,8(r16)
10105144:	10002126 	beq	r2,zero,101051cc <__sfvwrite_r+0x1ac>
10105148:	982f883a 	mov	r23,r19
1010514c:	94c09336 	bltu	r18,r19,1010539c <__sfvwrite_r+0x37c>
10105150:	1881200c 	andi	r2,r3,1152
10105154:	10009e1e 	bne	r2,zero,101053d0 <__sfvwrite_r+0x3b0>
10105158:	81000017 	ldw	r4,0(r16)
1010515c:	b80d883a 	mov	r6,r23
10105160:	e00b883a 	mov	r5,fp
10105164:	01063340 	call	10106334 <memmove>
10105168:	80c00217 	ldw	r3,8(r16)
1010516c:	81000017 	ldw	r4,0(r16)
10105170:	9005883a 	mov	r2,r18
10105174:	1ce7c83a 	sub	r19,r3,r19
10105178:	25cf883a 	add	r7,r4,r23
1010517c:	84c00215 	stw	r19,8(r16)
10105180:	81c00015 	stw	r7,0(r16)
10105184:	a0c00217 	ldw	r3,8(r20)
10105188:	e0b9883a 	add	fp,fp,r2
1010518c:	90a5c83a 	sub	r18,r18,r2
10105190:	18a7c83a 	sub	r19,r3,r2
10105194:	a4c00215 	stw	r19,8(r20)
10105198:	983fce26 	beq	r19,zero,101050d4 <__alt_data_end+0xfffe50d4>
1010519c:	80c0030b 	ldhu	r3,12(r16)
101051a0:	903fe61e 	bne	r18,zero,1010513c <__alt_data_end+0xfffe513c>
101051a4:	8f000017 	ldw	fp,0(r17)
101051a8:	8c800117 	ldw	r18,4(r17)
101051ac:	8c400204 	addi	r17,r17,8
101051b0:	003fe106 	br	10105138 <__alt_data_end+0xfffe5138>
101051b4:	8cc00017 	ldw	r19,0(r17)
101051b8:	8c800117 	ldw	r18,4(r17)
101051bc:	8c400204 	addi	r17,r17,8
101051c0:	003fb306 	br	10105090 <__alt_data_end+0xfffe5090>
101051c4:	0005883a 	mov	r2,zero
101051c8:	f800283a 	ret
101051cc:	81000017 	ldw	r4,0(r16)
101051d0:	80800417 	ldw	r2,16(r16)
101051d4:	11005736 	bltu	r2,r4,10105334 <__sfvwrite_r+0x314>
101051d8:	85c00517 	ldw	r23,20(r16)
101051dc:	95c05536 	bltu	r18,r23,10105334 <__sfvwrite_r+0x314>
101051e0:	00a00034 	movhi	r2,32768
101051e4:	10bfffc4 	addi	r2,r2,-1
101051e8:	9009883a 	mov	r4,r18
101051ec:	1480012e 	bgeu	r2,r18,101051f4 <__sfvwrite_r+0x1d4>
101051f0:	1009883a 	mov	r4,r2
101051f4:	b80b883a 	mov	r5,r23
101051f8:	010a8240 	call	1010a824 <__divsi3>
101051fc:	15cf383a 	mul	r7,r2,r23
10105200:	81400717 	ldw	r5,28(r16)
10105204:	80800917 	ldw	r2,36(r16)
10105208:	e00d883a 	mov	r6,fp
1010520c:	a809883a 	mov	r4,r21
10105210:	103ee83a 	callr	r2
10105214:	00bfdb16 	blt	zero,r2,10105184 <__alt_data_end+0xfffe5184>
10105218:	8080030b 	ldhu	r2,12(r16)
1010521c:	10801014 	ori	r2,r2,64
10105220:	8080030d 	sth	r2,12(r16)
10105224:	00bfffc4 	movi	r2,-1
10105228:	003fab06 	br	101050d8 <__alt_data_end+0xfffe50d8>
1010522c:	0027883a 	mov	r19,zero
10105230:	0011883a 	mov	r8,zero
10105234:	0039883a 	mov	fp,zero
10105238:	0025883a 	mov	r18,zero
1010523c:	90001f26 	beq	r18,zero,101052bc <__sfvwrite_r+0x29c>
10105240:	40005a26 	beq	r8,zero,101053ac <__sfvwrite_r+0x38c>
10105244:	982d883a 	mov	r22,r19
10105248:	94c0012e 	bgeu	r18,r19,10105250 <__sfvwrite_r+0x230>
1010524c:	902d883a 	mov	r22,r18
10105250:	81000017 	ldw	r4,0(r16)
10105254:	80800417 	ldw	r2,16(r16)
10105258:	b02f883a 	mov	r23,r22
1010525c:	81c00517 	ldw	r7,20(r16)
10105260:	1100032e 	bgeu	r2,r4,10105270 <__sfvwrite_r+0x250>
10105264:	80c00217 	ldw	r3,8(r16)
10105268:	38c7883a 	add	r3,r7,r3
1010526c:	1d801816 	blt	r3,r22,101052d0 <__sfvwrite_r+0x2b0>
10105270:	b1c03e16 	blt	r22,r7,1010536c <__sfvwrite_r+0x34c>
10105274:	80800917 	ldw	r2,36(r16)
10105278:	81400717 	ldw	r5,28(r16)
1010527c:	e00d883a 	mov	r6,fp
10105280:	da000115 	stw	r8,4(sp)
10105284:	a809883a 	mov	r4,r21
10105288:	103ee83a 	callr	r2
1010528c:	102f883a 	mov	r23,r2
10105290:	da000117 	ldw	r8,4(sp)
10105294:	00bfe00e 	bge	zero,r2,10105218 <__alt_data_end+0xfffe5218>
10105298:	9de7c83a 	sub	r19,r19,r23
1010529c:	98001f26 	beq	r19,zero,1010531c <__sfvwrite_r+0x2fc>
101052a0:	a0800217 	ldw	r2,8(r20)
101052a4:	e5f9883a 	add	fp,fp,r23
101052a8:	95e5c83a 	sub	r18,r18,r23
101052ac:	15efc83a 	sub	r23,r2,r23
101052b0:	a5c00215 	stw	r23,8(r20)
101052b4:	b83f8726 	beq	r23,zero,101050d4 <__alt_data_end+0xfffe50d4>
101052b8:	903fe11e 	bne	r18,zero,10105240 <__alt_data_end+0xfffe5240>
101052bc:	8f000017 	ldw	fp,0(r17)
101052c0:	8c800117 	ldw	r18,4(r17)
101052c4:	0011883a 	mov	r8,zero
101052c8:	8c400204 	addi	r17,r17,8
101052cc:	003fdb06 	br	1010523c <__alt_data_end+0xfffe523c>
101052d0:	180d883a 	mov	r6,r3
101052d4:	e00b883a 	mov	r5,fp
101052d8:	da000115 	stw	r8,4(sp)
101052dc:	d8c00015 	stw	r3,0(sp)
101052e0:	01063340 	call	10106334 <memmove>
101052e4:	d8c00017 	ldw	r3,0(sp)
101052e8:	80800017 	ldw	r2,0(r16)
101052ec:	800b883a 	mov	r5,r16
101052f0:	a809883a 	mov	r4,r21
101052f4:	10c5883a 	add	r2,r2,r3
101052f8:	80800015 	stw	r2,0(r16)
101052fc:	d8c00015 	stw	r3,0(sp)
10105300:	01047c00 	call	101047c0 <_fflush_r>
10105304:	d8c00017 	ldw	r3,0(sp)
10105308:	da000117 	ldw	r8,4(sp)
1010530c:	103fc21e 	bne	r2,zero,10105218 <__alt_data_end+0xfffe5218>
10105310:	182f883a 	mov	r23,r3
10105314:	9de7c83a 	sub	r19,r19,r23
10105318:	983fe11e 	bne	r19,zero,101052a0 <__alt_data_end+0xfffe52a0>
1010531c:	800b883a 	mov	r5,r16
10105320:	a809883a 	mov	r4,r21
10105324:	01047c00 	call	101047c0 <_fflush_r>
10105328:	103fbb1e 	bne	r2,zero,10105218 <__alt_data_end+0xfffe5218>
1010532c:	0011883a 	mov	r8,zero
10105330:	003fdb06 	br	101052a0 <__alt_data_end+0xfffe52a0>
10105334:	94c0012e 	bgeu	r18,r19,1010533c <__sfvwrite_r+0x31c>
10105338:	9027883a 	mov	r19,r18
1010533c:	980d883a 	mov	r6,r19
10105340:	e00b883a 	mov	r5,fp
10105344:	01063340 	call	10106334 <memmove>
10105348:	80800217 	ldw	r2,8(r16)
1010534c:	80c00017 	ldw	r3,0(r16)
10105350:	14c5c83a 	sub	r2,r2,r19
10105354:	1cc7883a 	add	r3,r3,r19
10105358:	80800215 	stw	r2,8(r16)
1010535c:	80c00015 	stw	r3,0(r16)
10105360:	10004326 	beq	r2,zero,10105470 <__sfvwrite_r+0x450>
10105364:	9805883a 	mov	r2,r19
10105368:	003f8606 	br	10105184 <__alt_data_end+0xfffe5184>
1010536c:	b00d883a 	mov	r6,r22
10105370:	e00b883a 	mov	r5,fp
10105374:	da000115 	stw	r8,4(sp)
10105378:	01063340 	call	10106334 <memmove>
1010537c:	80800217 	ldw	r2,8(r16)
10105380:	80c00017 	ldw	r3,0(r16)
10105384:	da000117 	ldw	r8,4(sp)
10105388:	1585c83a 	sub	r2,r2,r22
1010538c:	1dad883a 	add	r22,r3,r22
10105390:	80800215 	stw	r2,8(r16)
10105394:	85800015 	stw	r22,0(r16)
10105398:	003fbf06 	br	10105298 <__alt_data_end+0xfffe5298>
1010539c:	81000017 	ldw	r4,0(r16)
101053a0:	9027883a 	mov	r19,r18
101053a4:	902f883a 	mov	r23,r18
101053a8:	003f6c06 	br	1010515c <__alt_data_end+0xfffe515c>
101053ac:	900d883a 	mov	r6,r18
101053b0:	01400284 	movi	r5,10
101053b4:	e009883a 	mov	r4,fp
101053b8:	01061080 	call	10106108 <memchr>
101053bc:	10003e26 	beq	r2,zero,101054b8 <__sfvwrite_r+0x498>
101053c0:	10800044 	addi	r2,r2,1
101053c4:	1727c83a 	sub	r19,r2,fp
101053c8:	02000044 	movi	r8,1
101053cc:	003f9d06 	br	10105244 <__alt_data_end+0xfffe5244>
101053d0:	80800517 	ldw	r2,20(r16)
101053d4:	81400417 	ldw	r5,16(r16)
101053d8:	81c00017 	ldw	r7,0(r16)
101053dc:	10a7883a 	add	r19,r2,r2
101053e0:	9885883a 	add	r2,r19,r2
101053e4:	1026d7fa 	srli	r19,r2,31
101053e8:	396dc83a 	sub	r22,r7,r5
101053ec:	b1000044 	addi	r4,r22,1
101053f0:	9885883a 	add	r2,r19,r2
101053f4:	1027d07a 	srai	r19,r2,1
101053f8:	2485883a 	add	r2,r4,r18
101053fc:	980d883a 	mov	r6,r19
10105400:	9880022e 	bgeu	r19,r2,1010540c <__sfvwrite_r+0x3ec>
10105404:	1027883a 	mov	r19,r2
10105408:	100d883a 	mov	r6,r2
1010540c:	18c1000c 	andi	r3,r3,1024
10105410:	18001c26 	beq	r3,zero,10105484 <__sfvwrite_r+0x464>
10105414:	300b883a 	mov	r5,r6
10105418:	a809883a 	mov	r4,r21
1010541c:	01058fc0 	call	101058fc <_malloc_r>
10105420:	102f883a 	mov	r23,r2
10105424:	10002926 	beq	r2,zero,101054cc <__sfvwrite_r+0x4ac>
10105428:	81400417 	ldw	r5,16(r16)
1010542c:	b00d883a 	mov	r6,r22
10105430:	1009883a 	mov	r4,r2
10105434:	01061ec0 	call	101061ec <memcpy>
10105438:	8080030b 	ldhu	r2,12(r16)
1010543c:	00fedfc4 	movi	r3,-1153
10105440:	10c4703a 	and	r2,r2,r3
10105444:	10802014 	ori	r2,r2,128
10105448:	8080030d 	sth	r2,12(r16)
1010544c:	bd89883a 	add	r4,r23,r22
10105450:	9d8fc83a 	sub	r7,r19,r22
10105454:	85c00415 	stw	r23,16(r16)
10105458:	84c00515 	stw	r19,20(r16)
1010545c:	81000015 	stw	r4,0(r16)
10105460:	9027883a 	mov	r19,r18
10105464:	81c00215 	stw	r7,8(r16)
10105468:	902f883a 	mov	r23,r18
1010546c:	003f3b06 	br	1010515c <__alt_data_end+0xfffe515c>
10105470:	800b883a 	mov	r5,r16
10105474:	a809883a 	mov	r4,r21
10105478:	01047c00 	call	101047c0 <_fflush_r>
1010547c:	103fb926 	beq	r2,zero,10105364 <__alt_data_end+0xfffe5364>
10105480:	003f6506 	br	10105218 <__alt_data_end+0xfffe5218>
10105484:	a809883a 	mov	r4,r21
10105488:	01075b40 	call	101075b4 <_realloc_r>
1010548c:	102f883a 	mov	r23,r2
10105490:	103fee1e 	bne	r2,zero,1010544c <__alt_data_end+0xfffe544c>
10105494:	81400417 	ldw	r5,16(r16)
10105498:	a809883a 	mov	r4,r21
1010549c:	0104d100 	call	10104d10 <_free_r>
101054a0:	8080030b 	ldhu	r2,12(r16)
101054a4:	00ffdfc4 	movi	r3,-129
101054a8:	1884703a 	and	r2,r3,r2
101054ac:	00c00304 	movi	r3,12
101054b0:	a8c00015 	stw	r3,0(r21)
101054b4:	003f5906 	br	1010521c <__alt_data_end+0xfffe521c>
101054b8:	94c00044 	addi	r19,r18,1
101054bc:	02000044 	movi	r8,1
101054c0:	003f6006 	br	10105244 <__alt_data_end+0xfffe5244>
101054c4:	00bfffc4 	movi	r2,-1
101054c8:	003f0306 	br	101050d8 <__alt_data_end+0xfffe50d8>
101054cc:	00800304 	movi	r2,12
101054d0:	a8800015 	stw	r2,0(r21)
101054d4:	8080030b 	ldhu	r2,12(r16)
101054d8:	003f5006 	br	1010521c <__alt_data_end+0xfffe521c>

101054dc <_fwalk>:
101054dc:	defff704 	addi	sp,sp,-36
101054e0:	dd000415 	stw	r20,16(sp)
101054e4:	dfc00815 	stw	ra,32(sp)
101054e8:	ddc00715 	stw	r23,28(sp)
101054ec:	dd800615 	stw	r22,24(sp)
101054f0:	dd400515 	stw	r21,20(sp)
101054f4:	dcc00315 	stw	r19,12(sp)
101054f8:	dc800215 	stw	r18,8(sp)
101054fc:	dc400115 	stw	r17,4(sp)
10105500:	dc000015 	stw	r16,0(sp)
10105504:	2500b804 	addi	r20,r4,736
10105508:	a0002326 	beq	r20,zero,10105598 <_fwalk+0xbc>
1010550c:	282b883a 	mov	r21,r5
10105510:	002f883a 	mov	r23,zero
10105514:	05800044 	movi	r22,1
10105518:	04ffffc4 	movi	r19,-1
1010551c:	a4400117 	ldw	r17,4(r20)
10105520:	a4800217 	ldw	r18,8(r20)
10105524:	8c7fffc4 	addi	r17,r17,-1
10105528:	88000d16 	blt	r17,zero,10105560 <_fwalk+0x84>
1010552c:	94000304 	addi	r16,r18,12
10105530:	94800384 	addi	r18,r18,14
10105534:	8080000b 	ldhu	r2,0(r16)
10105538:	8c7fffc4 	addi	r17,r17,-1
1010553c:	813ffd04 	addi	r4,r16,-12
10105540:	b080042e 	bgeu	r22,r2,10105554 <_fwalk+0x78>
10105544:	9080000f 	ldh	r2,0(r18)
10105548:	14c00226 	beq	r2,r19,10105554 <_fwalk+0x78>
1010554c:	a83ee83a 	callr	r21
10105550:	b8aeb03a 	or	r23,r23,r2
10105554:	84001a04 	addi	r16,r16,104
10105558:	94801a04 	addi	r18,r18,104
1010555c:	8cfff51e 	bne	r17,r19,10105534 <__alt_data_end+0xfffe5534>
10105560:	a5000017 	ldw	r20,0(r20)
10105564:	a03fed1e 	bne	r20,zero,1010551c <__alt_data_end+0xfffe551c>
10105568:	b805883a 	mov	r2,r23
1010556c:	dfc00817 	ldw	ra,32(sp)
10105570:	ddc00717 	ldw	r23,28(sp)
10105574:	dd800617 	ldw	r22,24(sp)
10105578:	dd400517 	ldw	r21,20(sp)
1010557c:	dd000417 	ldw	r20,16(sp)
10105580:	dcc00317 	ldw	r19,12(sp)
10105584:	dc800217 	ldw	r18,8(sp)
10105588:	dc400117 	ldw	r17,4(sp)
1010558c:	dc000017 	ldw	r16,0(sp)
10105590:	dec00904 	addi	sp,sp,36
10105594:	f800283a 	ret
10105598:	002f883a 	mov	r23,zero
1010559c:	003ff206 	br	10105568 <__alt_data_end+0xfffe5568>

101055a0 <_fwalk_reent>:
101055a0:	defff704 	addi	sp,sp,-36
101055a4:	dd000415 	stw	r20,16(sp)
101055a8:	dfc00815 	stw	ra,32(sp)
101055ac:	ddc00715 	stw	r23,28(sp)
101055b0:	dd800615 	stw	r22,24(sp)
101055b4:	dd400515 	stw	r21,20(sp)
101055b8:	dcc00315 	stw	r19,12(sp)
101055bc:	dc800215 	stw	r18,8(sp)
101055c0:	dc400115 	stw	r17,4(sp)
101055c4:	dc000015 	stw	r16,0(sp)
101055c8:	2500b804 	addi	r20,r4,736
101055cc:	a0002326 	beq	r20,zero,1010565c <_fwalk_reent+0xbc>
101055d0:	282b883a 	mov	r21,r5
101055d4:	2027883a 	mov	r19,r4
101055d8:	002f883a 	mov	r23,zero
101055dc:	05800044 	movi	r22,1
101055e0:	04bfffc4 	movi	r18,-1
101055e4:	a4400117 	ldw	r17,4(r20)
101055e8:	a4000217 	ldw	r16,8(r20)
101055ec:	8c7fffc4 	addi	r17,r17,-1
101055f0:	88000c16 	blt	r17,zero,10105624 <_fwalk_reent+0x84>
101055f4:	84000304 	addi	r16,r16,12
101055f8:	8080000b 	ldhu	r2,0(r16)
101055fc:	8c7fffc4 	addi	r17,r17,-1
10105600:	817ffd04 	addi	r5,r16,-12
10105604:	b080052e 	bgeu	r22,r2,1010561c <_fwalk_reent+0x7c>
10105608:	8080008f 	ldh	r2,2(r16)
1010560c:	9809883a 	mov	r4,r19
10105610:	14800226 	beq	r2,r18,1010561c <_fwalk_reent+0x7c>
10105614:	a83ee83a 	callr	r21
10105618:	b8aeb03a 	or	r23,r23,r2
1010561c:	84001a04 	addi	r16,r16,104
10105620:	8cbff51e 	bne	r17,r18,101055f8 <__alt_data_end+0xfffe55f8>
10105624:	a5000017 	ldw	r20,0(r20)
10105628:	a03fee1e 	bne	r20,zero,101055e4 <__alt_data_end+0xfffe55e4>
1010562c:	b805883a 	mov	r2,r23
10105630:	dfc00817 	ldw	ra,32(sp)
10105634:	ddc00717 	ldw	r23,28(sp)
10105638:	dd800617 	ldw	r22,24(sp)
1010563c:	dd400517 	ldw	r21,20(sp)
10105640:	dd000417 	ldw	r20,16(sp)
10105644:	dcc00317 	ldw	r19,12(sp)
10105648:	dc800217 	ldw	r18,8(sp)
1010564c:	dc400117 	ldw	r17,4(sp)
10105650:	dc000017 	ldw	r16,0(sp)
10105654:	dec00904 	addi	sp,sp,36
10105658:	f800283a 	ret
1010565c:	002f883a 	mov	r23,zero
10105660:	003ff206 	br	1010562c <__alt_data_end+0xfffe562c>

10105664 <_setlocale_r>:
10105664:	30001b26 	beq	r6,zero,101056d4 <_setlocale_r+0x70>
10105668:	01440474 	movhi	r5,4113
1010566c:	defffe04 	addi	sp,sp,-8
10105670:	297e2904 	addi	r5,r5,-1884
10105674:	3009883a 	mov	r4,r6
10105678:	dc000015 	stw	r16,0(sp)
1010567c:	dfc00115 	stw	ra,4(sp)
10105680:	3021883a 	mov	r16,r6
10105684:	0107d1c0 	call	10107d1c <strcmp>
10105688:	1000061e 	bne	r2,zero,101056a4 <_setlocale_r+0x40>
1010568c:	00840474 	movhi	r2,4113
10105690:	10be2804 	addi	r2,r2,-1888
10105694:	dfc00117 	ldw	ra,4(sp)
10105698:	dc000017 	ldw	r16,0(sp)
1010569c:	dec00204 	addi	sp,sp,8
101056a0:	f800283a 	ret
101056a4:	01440474 	movhi	r5,4113
101056a8:	297e2804 	addi	r5,r5,-1888
101056ac:	8009883a 	mov	r4,r16
101056b0:	0107d1c0 	call	10107d1c <strcmp>
101056b4:	103ff526 	beq	r2,zero,1010568c <__alt_data_end+0xfffe568c>
101056b8:	01440474 	movhi	r5,4113
101056bc:	297e1304 	addi	r5,r5,-1972
101056c0:	8009883a 	mov	r4,r16
101056c4:	0107d1c0 	call	10107d1c <strcmp>
101056c8:	103ff026 	beq	r2,zero,1010568c <__alt_data_end+0xfffe568c>
101056cc:	0005883a 	mov	r2,zero
101056d0:	003ff006 	br	10105694 <__alt_data_end+0xfffe5694>
101056d4:	00840474 	movhi	r2,4113
101056d8:	10be2804 	addi	r2,r2,-1888
101056dc:	f800283a 	ret

101056e0 <__locale_charset>:
101056e0:	00840474 	movhi	r2,4113
101056e4:	10bfdb04 	addi	r2,r2,-148
101056e8:	f800283a 	ret

101056ec <__locale_mb_cur_max>:
101056ec:	00840474 	movhi	r2,4113
101056f0:	10857704 	addi	r2,r2,5596
101056f4:	10800017 	ldw	r2,0(r2)
101056f8:	f800283a 	ret

101056fc <__locale_msgcharset>:
101056fc:	00840474 	movhi	r2,4113
10105700:	10bfd304 	addi	r2,r2,-180
10105704:	f800283a 	ret

10105708 <__locale_cjk_lang>:
10105708:	0005883a 	mov	r2,zero
1010570c:	f800283a 	ret

10105710 <_localeconv_r>:
10105710:	00840474 	movhi	r2,4113
10105714:	10bfe304 	addi	r2,r2,-116
10105718:	f800283a 	ret

1010571c <setlocale>:
1010571c:	00840474 	movhi	r2,4113
10105720:	10857604 	addi	r2,r2,5592
10105724:	280d883a 	mov	r6,r5
10105728:	200b883a 	mov	r5,r4
1010572c:	11000017 	ldw	r4,0(r2)
10105730:	01056641 	jmpi	10105664 <_setlocale_r>

10105734 <localeconv>:
10105734:	00840474 	movhi	r2,4113
10105738:	10bfe304 	addi	r2,r2,-116
1010573c:	f800283a 	ret

10105740 <__smakebuf_r>:
10105740:	2880030b 	ldhu	r2,12(r5)
10105744:	10c0008c 	andi	r3,r2,2
10105748:	1800411e 	bne	r3,zero,10105850 <__smakebuf_r+0x110>
1010574c:	deffec04 	addi	sp,sp,-80
10105750:	dc000f15 	stw	r16,60(sp)
10105754:	2821883a 	mov	r16,r5
10105758:	2940038f 	ldh	r5,14(r5)
1010575c:	dc401015 	stw	r17,64(sp)
10105760:	dfc01315 	stw	ra,76(sp)
10105764:	dcc01215 	stw	r19,72(sp)
10105768:	dc801115 	stw	r18,68(sp)
1010576c:	2023883a 	mov	r17,r4
10105770:	28001c16 	blt	r5,zero,101057e4 <__smakebuf_r+0xa4>
10105774:	d80d883a 	mov	r6,sp
10105778:	01098c40 	call	101098c4 <_fstat_r>
1010577c:	10001816 	blt	r2,zero,101057e0 <__smakebuf_r+0xa0>
10105780:	d8800117 	ldw	r2,4(sp)
10105784:	00e00014 	movui	r3,32768
10105788:	10bc000c 	andi	r2,r2,61440
1010578c:	14c80020 	cmpeqi	r19,r2,8192
10105790:	10c03726 	beq	r2,r3,10105870 <__smakebuf_r+0x130>
10105794:	80c0030b 	ldhu	r3,12(r16)
10105798:	18c20014 	ori	r3,r3,2048
1010579c:	80c0030d 	sth	r3,12(r16)
101057a0:	00c80004 	movi	r3,8192
101057a4:	10c0521e 	bne	r2,r3,101058f0 <__smakebuf_r+0x1b0>
101057a8:	8140038f 	ldh	r5,14(r16)
101057ac:	8809883a 	mov	r4,r17
101057b0:	01099200 	call	10109920 <_isatty_r>
101057b4:	10004c26 	beq	r2,zero,101058e8 <__smakebuf_r+0x1a8>
101057b8:	8080030b 	ldhu	r2,12(r16)
101057bc:	80c010c4 	addi	r3,r16,67
101057c0:	80c00015 	stw	r3,0(r16)
101057c4:	10800054 	ori	r2,r2,1
101057c8:	8080030d 	sth	r2,12(r16)
101057cc:	00800044 	movi	r2,1
101057d0:	80c00415 	stw	r3,16(r16)
101057d4:	80800515 	stw	r2,20(r16)
101057d8:	04810004 	movi	r18,1024
101057dc:	00000706 	br	101057fc <__smakebuf_r+0xbc>
101057e0:	8080030b 	ldhu	r2,12(r16)
101057e4:	10c0200c 	andi	r3,r2,128
101057e8:	18001f1e 	bne	r3,zero,10105868 <__smakebuf_r+0x128>
101057ec:	04810004 	movi	r18,1024
101057f0:	10820014 	ori	r2,r2,2048
101057f4:	8080030d 	sth	r2,12(r16)
101057f8:	0027883a 	mov	r19,zero
101057fc:	900b883a 	mov	r5,r18
10105800:	8809883a 	mov	r4,r17
10105804:	01058fc0 	call	101058fc <_malloc_r>
10105808:	10002c26 	beq	r2,zero,101058bc <__smakebuf_r+0x17c>
1010580c:	80c0030b 	ldhu	r3,12(r16)
10105810:	01040434 	movhi	r4,4112
10105814:	21121504 	addi	r4,r4,18516
10105818:	89000f15 	stw	r4,60(r17)
1010581c:	18c02014 	ori	r3,r3,128
10105820:	80c0030d 	sth	r3,12(r16)
10105824:	80800015 	stw	r2,0(r16)
10105828:	80800415 	stw	r2,16(r16)
1010582c:	84800515 	stw	r18,20(r16)
10105830:	98001a1e 	bne	r19,zero,1010589c <__smakebuf_r+0x15c>
10105834:	dfc01317 	ldw	ra,76(sp)
10105838:	dcc01217 	ldw	r19,72(sp)
1010583c:	dc801117 	ldw	r18,68(sp)
10105840:	dc401017 	ldw	r17,64(sp)
10105844:	dc000f17 	ldw	r16,60(sp)
10105848:	dec01404 	addi	sp,sp,80
1010584c:	f800283a 	ret
10105850:	288010c4 	addi	r2,r5,67
10105854:	28800015 	stw	r2,0(r5)
10105858:	28800415 	stw	r2,16(r5)
1010585c:	00800044 	movi	r2,1
10105860:	28800515 	stw	r2,20(r5)
10105864:	f800283a 	ret
10105868:	04801004 	movi	r18,64
1010586c:	003fe006 	br	101057f0 <__alt_data_end+0xfffe57f0>
10105870:	81000a17 	ldw	r4,40(r16)
10105874:	00c40434 	movhi	r3,4112
10105878:	18df2e04 	addi	r3,r3,31928
1010587c:	20ffc51e 	bne	r4,r3,10105794 <__alt_data_end+0xfffe5794>
10105880:	8080030b 	ldhu	r2,12(r16)
10105884:	04810004 	movi	r18,1024
10105888:	84801315 	stw	r18,76(r16)
1010588c:	1484b03a 	or	r2,r2,r18
10105890:	8080030d 	sth	r2,12(r16)
10105894:	0027883a 	mov	r19,zero
10105898:	003fd806 	br	101057fc <__alt_data_end+0xfffe57fc>
1010589c:	8140038f 	ldh	r5,14(r16)
101058a0:	8809883a 	mov	r4,r17
101058a4:	01099200 	call	10109920 <_isatty_r>
101058a8:	103fe226 	beq	r2,zero,10105834 <__alt_data_end+0xfffe5834>
101058ac:	8080030b 	ldhu	r2,12(r16)
101058b0:	10800054 	ori	r2,r2,1
101058b4:	8080030d 	sth	r2,12(r16)
101058b8:	003fde06 	br	10105834 <__alt_data_end+0xfffe5834>
101058bc:	8080030b 	ldhu	r2,12(r16)
101058c0:	10c0800c 	andi	r3,r2,512
101058c4:	183fdb1e 	bne	r3,zero,10105834 <__alt_data_end+0xfffe5834>
101058c8:	10800094 	ori	r2,r2,2
101058cc:	80c010c4 	addi	r3,r16,67
101058d0:	8080030d 	sth	r2,12(r16)
101058d4:	00800044 	movi	r2,1
101058d8:	80c00015 	stw	r3,0(r16)
101058dc:	80c00415 	stw	r3,16(r16)
101058e0:	80800515 	stw	r2,20(r16)
101058e4:	003fd306 	br	10105834 <__alt_data_end+0xfffe5834>
101058e8:	04810004 	movi	r18,1024
101058ec:	003fc306 	br	101057fc <__alt_data_end+0xfffe57fc>
101058f0:	0027883a 	mov	r19,zero
101058f4:	04810004 	movi	r18,1024
101058f8:	003fc006 	br	101057fc <__alt_data_end+0xfffe57fc>

101058fc <_malloc_r>:
101058fc:	defff504 	addi	sp,sp,-44
10105900:	dc800315 	stw	r18,12(sp)
10105904:	dfc00a15 	stw	ra,40(sp)
10105908:	df000915 	stw	fp,36(sp)
1010590c:	ddc00815 	stw	r23,32(sp)
10105910:	dd800715 	stw	r22,28(sp)
10105914:	dd400615 	stw	r21,24(sp)
10105918:	dd000515 	stw	r20,20(sp)
1010591c:	dcc00415 	stw	r19,16(sp)
10105920:	dc400215 	stw	r17,8(sp)
10105924:	dc000115 	stw	r16,4(sp)
10105928:	288002c4 	addi	r2,r5,11
1010592c:	00c00584 	movi	r3,22
10105930:	2025883a 	mov	r18,r4
10105934:	18807f2e 	bgeu	r3,r2,10105b34 <_malloc_r+0x238>
10105938:	047ffe04 	movi	r17,-8
1010593c:	1462703a 	and	r17,r2,r17
10105940:	8800a316 	blt	r17,zero,10105bd0 <_malloc_r+0x2d4>
10105944:	8940a236 	bltu	r17,r5,10105bd0 <_malloc_r+0x2d4>
10105948:	010d60c0 	call	1010d60c <__malloc_lock>
1010594c:	00807dc4 	movi	r2,503
10105950:	1441e92e 	bgeu	r2,r17,101060f8 <_malloc_r+0x7fc>
10105954:	8804d27a 	srli	r2,r17,9
10105958:	1000a126 	beq	r2,zero,10105be0 <_malloc_r+0x2e4>
1010595c:	00c00104 	movi	r3,4
10105960:	18811e36 	bltu	r3,r2,10105ddc <_malloc_r+0x4e0>
10105964:	8804d1ba 	srli	r2,r17,6
10105968:	12000e44 	addi	r8,r2,57
1010596c:	11c00e04 	addi	r7,r2,56
10105970:	4209883a 	add	r4,r8,r8
10105974:	04c40474 	movhi	r19,4113
10105978:	2109883a 	add	r4,r4,r4
1010597c:	9cfff104 	addi	r19,r19,-60
10105980:	2109883a 	add	r4,r4,r4
10105984:	9909883a 	add	r4,r19,r4
10105988:	24000117 	ldw	r16,4(r4)
1010598c:	213ffe04 	addi	r4,r4,-8
10105990:	24009726 	beq	r4,r16,10105bf0 <_malloc_r+0x2f4>
10105994:	80800117 	ldw	r2,4(r16)
10105998:	01bfff04 	movi	r6,-4
1010599c:	014003c4 	movi	r5,15
101059a0:	1184703a 	and	r2,r2,r6
101059a4:	1447c83a 	sub	r3,r2,r17
101059a8:	28c00716 	blt	r5,r3,101059c8 <_malloc_r+0xcc>
101059ac:	1800920e 	bge	r3,zero,10105bf8 <_malloc_r+0x2fc>
101059b0:	84000317 	ldw	r16,12(r16)
101059b4:	24008e26 	beq	r4,r16,10105bf0 <_malloc_r+0x2f4>
101059b8:	80800117 	ldw	r2,4(r16)
101059bc:	1184703a 	and	r2,r2,r6
101059c0:	1447c83a 	sub	r3,r2,r17
101059c4:	28fff90e 	bge	r5,r3,101059ac <__alt_data_end+0xfffe59ac>
101059c8:	3809883a 	mov	r4,r7
101059cc:	01840474 	movhi	r6,4113
101059d0:	9c000417 	ldw	r16,16(r19)
101059d4:	31bff104 	addi	r6,r6,-60
101059d8:	32000204 	addi	r8,r6,8
101059dc:	82013426 	beq	r16,r8,10105eb0 <_malloc_r+0x5b4>
101059e0:	80c00117 	ldw	r3,4(r16)
101059e4:	00bfff04 	movi	r2,-4
101059e8:	188e703a 	and	r7,r3,r2
101059ec:	3c45c83a 	sub	r2,r7,r17
101059f0:	00c003c4 	movi	r3,15
101059f4:	18811f16 	blt	r3,r2,10105e74 <_malloc_r+0x578>
101059f8:	32000515 	stw	r8,20(r6)
101059fc:	32000415 	stw	r8,16(r6)
10105a00:	10007f0e 	bge	r2,zero,10105c00 <_malloc_r+0x304>
10105a04:	00807fc4 	movi	r2,511
10105a08:	11c0fd36 	bltu	r2,r7,10105e00 <_malloc_r+0x504>
10105a0c:	3806d0fa 	srli	r3,r7,3
10105a10:	01c00044 	movi	r7,1
10105a14:	30800117 	ldw	r2,4(r6)
10105a18:	19400044 	addi	r5,r3,1
10105a1c:	294b883a 	add	r5,r5,r5
10105a20:	1807d0ba 	srai	r3,r3,2
10105a24:	294b883a 	add	r5,r5,r5
10105a28:	294b883a 	add	r5,r5,r5
10105a2c:	298b883a 	add	r5,r5,r6
10105a30:	38c6983a 	sll	r3,r7,r3
10105a34:	29c00017 	ldw	r7,0(r5)
10105a38:	2a7ffe04 	addi	r9,r5,-8
10105a3c:	1886b03a 	or	r3,r3,r2
10105a40:	82400315 	stw	r9,12(r16)
10105a44:	81c00215 	stw	r7,8(r16)
10105a48:	30c00115 	stw	r3,4(r6)
10105a4c:	2c000015 	stw	r16,0(r5)
10105a50:	3c000315 	stw	r16,12(r7)
10105a54:	2005d0ba 	srai	r2,r4,2
10105a58:	01400044 	movi	r5,1
10105a5c:	288a983a 	sll	r5,r5,r2
10105a60:	19406f36 	bltu	r3,r5,10105c20 <_malloc_r+0x324>
10105a64:	28c4703a 	and	r2,r5,r3
10105a68:	10000a1e 	bne	r2,zero,10105a94 <_malloc_r+0x198>
10105a6c:	00bfff04 	movi	r2,-4
10105a70:	294b883a 	add	r5,r5,r5
10105a74:	2088703a 	and	r4,r4,r2
10105a78:	28c4703a 	and	r2,r5,r3
10105a7c:	21000104 	addi	r4,r4,4
10105a80:	1000041e 	bne	r2,zero,10105a94 <_malloc_r+0x198>
10105a84:	294b883a 	add	r5,r5,r5
10105a88:	28c4703a 	and	r2,r5,r3
10105a8c:	21000104 	addi	r4,r4,4
10105a90:	103ffc26 	beq	r2,zero,10105a84 <__alt_data_end+0xfffe5a84>
10105a94:	02bfff04 	movi	r10,-4
10105a98:	024003c4 	movi	r9,15
10105a9c:	21800044 	addi	r6,r4,1
10105aa0:	318d883a 	add	r6,r6,r6
10105aa4:	318d883a 	add	r6,r6,r6
10105aa8:	318d883a 	add	r6,r6,r6
10105aac:	998d883a 	add	r6,r19,r6
10105ab0:	333ffe04 	addi	r12,r6,-8
10105ab4:	2017883a 	mov	r11,r4
10105ab8:	31800104 	addi	r6,r6,4
10105abc:	34000017 	ldw	r16,0(r6)
10105ac0:	31fffd04 	addi	r7,r6,-12
10105ac4:	81c0041e 	bne	r16,r7,10105ad8 <_malloc_r+0x1dc>
10105ac8:	0000fb06 	br	10105eb8 <_malloc_r+0x5bc>
10105acc:	1801030e 	bge	r3,zero,10105edc <_malloc_r+0x5e0>
10105ad0:	84000317 	ldw	r16,12(r16)
10105ad4:	81c0f826 	beq	r16,r7,10105eb8 <_malloc_r+0x5bc>
10105ad8:	80800117 	ldw	r2,4(r16)
10105adc:	1284703a 	and	r2,r2,r10
10105ae0:	1447c83a 	sub	r3,r2,r17
10105ae4:	48fff90e 	bge	r9,r3,10105acc <__alt_data_end+0xfffe5acc>
10105ae8:	80800317 	ldw	r2,12(r16)
10105aec:	81000217 	ldw	r4,8(r16)
10105af0:	89400054 	ori	r5,r17,1
10105af4:	81400115 	stw	r5,4(r16)
10105af8:	20800315 	stw	r2,12(r4)
10105afc:	11000215 	stw	r4,8(r2)
10105b00:	8463883a 	add	r17,r16,r17
10105b04:	9c400515 	stw	r17,20(r19)
10105b08:	9c400415 	stw	r17,16(r19)
10105b0c:	18800054 	ori	r2,r3,1
10105b10:	88800115 	stw	r2,4(r17)
10105b14:	8a000315 	stw	r8,12(r17)
10105b18:	8a000215 	stw	r8,8(r17)
10105b1c:	88e3883a 	add	r17,r17,r3
10105b20:	88c00015 	stw	r3,0(r17)
10105b24:	9009883a 	mov	r4,r18
10105b28:	010d6300 	call	1010d630 <__malloc_unlock>
10105b2c:	80800204 	addi	r2,r16,8
10105b30:	00001b06 	br	10105ba0 <_malloc_r+0x2a4>
10105b34:	04400404 	movi	r17,16
10105b38:	89402536 	bltu	r17,r5,10105bd0 <_malloc_r+0x2d4>
10105b3c:	010d60c0 	call	1010d60c <__malloc_lock>
10105b40:	00800184 	movi	r2,6
10105b44:	01000084 	movi	r4,2
10105b48:	04c40474 	movhi	r19,4113
10105b4c:	1085883a 	add	r2,r2,r2
10105b50:	9cfff104 	addi	r19,r19,-60
10105b54:	1085883a 	add	r2,r2,r2
10105b58:	9885883a 	add	r2,r19,r2
10105b5c:	14000117 	ldw	r16,4(r2)
10105b60:	10fffe04 	addi	r3,r2,-8
10105b64:	80c0d926 	beq	r16,r3,10105ecc <_malloc_r+0x5d0>
10105b68:	80c00117 	ldw	r3,4(r16)
10105b6c:	81000317 	ldw	r4,12(r16)
10105b70:	00bfff04 	movi	r2,-4
10105b74:	1884703a 	and	r2,r3,r2
10105b78:	81400217 	ldw	r5,8(r16)
10105b7c:	8085883a 	add	r2,r16,r2
10105b80:	10c00117 	ldw	r3,4(r2)
10105b84:	29000315 	stw	r4,12(r5)
10105b88:	21400215 	stw	r5,8(r4)
10105b8c:	18c00054 	ori	r3,r3,1
10105b90:	10c00115 	stw	r3,4(r2)
10105b94:	9009883a 	mov	r4,r18
10105b98:	010d6300 	call	1010d630 <__malloc_unlock>
10105b9c:	80800204 	addi	r2,r16,8
10105ba0:	dfc00a17 	ldw	ra,40(sp)
10105ba4:	df000917 	ldw	fp,36(sp)
10105ba8:	ddc00817 	ldw	r23,32(sp)
10105bac:	dd800717 	ldw	r22,28(sp)
10105bb0:	dd400617 	ldw	r21,24(sp)
10105bb4:	dd000517 	ldw	r20,20(sp)
10105bb8:	dcc00417 	ldw	r19,16(sp)
10105bbc:	dc800317 	ldw	r18,12(sp)
10105bc0:	dc400217 	ldw	r17,8(sp)
10105bc4:	dc000117 	ldw	r16,4(sp)
10105bc8:	dec00b04 	addi	sp,sp,44
10105bcc:	f800283a 	ret
10105bd0:	00800304 	movi	r2,12
10105bd4:	90800015 	stw	r2,0(r18)
10105bd8:	0005883a 	mov	r2,zero
10105bdc:	003ff006 	br	10105ba0 <__alt_data_end+0xfffe5ba0>
10105be0:	01002004 	movi	r4,128
10105be4:	02001004 	movi	r8,64
10105be8:	01c00fc4 	movi	r7,63
10105bec:	003f6106 	br	10105974 <__alt_data_end+0xfffe5974>
10105bf0:	4009883a 	mov	r4,r8
10105bf4:	003f7506 	br	101059cc <__alt_data_end+0xfffe59cc>
10105bf8:	81000317 	ldw	r4,12(r16)
10105bfc:	003fde06 	br	10105b78 <__alt_data_end+0xfffe5b78>
10105c00:	81c5883a 	add	r2,r16,r7
10105c04:	11400117 	ldw	r5,4(r2)
10105c08:	9009883a 	mov	r4,r18
10105c0c:	29400054 	ori	r5,r5,1
10105c10:	11400115 	stw	r5,4(r2)
10105c14:	010d6300 	call	1010d630 <__malloc_unlock>
10105c18:	80800204 	addi	r2,r16,8
10105c1c:	003fe006 	br	10105ba0 <__alt_data_end+0xfffe5ba0>
10105c20:	9c000217 	ldw	r16,8(r19)
10105c24:	00bfff04 	movi	r2,-4
10105c28:	85800117 	ldw	r22,4(r16)
10105c2c:	b0ac703a 	and	r22,r22,r2
10105c30:	b4400336 	bltu	r22,r17,10105c40 <_malloc_r+0x344>
10105c34:	b445c83a 	sub	r2,r22,r17
10105c38:	00c003c4 	movi	r3,15
10105c3c:	18805d16 	blt	r3,r2,10105db4 <_malloc_r+0x4b8>
10105c40:	05c40474 	movhi	r23,4113
10105c44:	00840474 	movhi	r2,4113
10105c48:	108c4504 	addi	r2,r2,12564
10105c4c:	bdc57804 	addi	r23,r23,5600
10105c50:	15400017 	ldw	r21,0(r2)
10105c54:	b8c00017 	ldw	r3,0(r23)
10105c58:	00bfffc4 	movi	r2,-1
10105c5c:	858d883a 	add	r6,r16,r22
10105c60:	8d6b883a 	add	r21,r17,r21
10105c64:	1880ea26 	beq	r3,r2,10106010 <_malloc_r+0x714>
10105c68:	ad4403c4 	addi	r21,r21,4111
10105c6c:	00bc0004 	movi	r2,-4096
10105c70:	a8aa703a 	and	r21,r21,r2
10105c74:	a80b883a 	mov	r5,r21
10105c78:	9009883a 	mov	r4,r18
10105c7c:	d9800015 	stw	r6,0(sp)
10105c80:	0107b8c0 	call	10107b8c <_sbrk_r>
10105c84:	1029883a 	mov	r20,r2
10105c88:	00bfffc4 	movi	r2,-1
10105c8c:	d9800017 	ldw	r6,0(sp)
10105c90:	a080e826 	beq	r20,r2,10106034 <_malloc_r+0x738>
10105c94:	a180a636 	bltu	r20,r6,10105f30 <_malloc_r+0x634>
10105c98:	07040474 	movhi	fp,4113
10105c9c:	e70c4e04 	addi	fp,fp,12600
10105ca0:	e0800017 	ldw	r2,0(fp)
10105ca4:	a887883a 	add	r3,r21,r2
10105ca8:	e0c00015 	stw	r3,0(fp)
10105cac:	3500e626 	beq	r6,r20,10106048 <_malloc_r+0x74c>
10105cb0:	b9000017 	ldw	r4,0(r23)
10105cb4:	00bfffc4 	movi	r2,-1
10105cb8:	2080ee26 	beq	r4,r2,10106074 <_malloc_r+0x778>
10105cbc:	a185c83a 	sub	r2,r20,r6
10105cc0:	10c5883a 	add	r2,r2,r3
10105cc4:	e0800015 	stw	r2,0(fp)
10105cc8:	a0c001cc 	andi	r3,r20,7
10105ccc:	1800bc26 	beq	r3,zero,10105fc0 <_malloc_r+0x6c4>
10105cd0:	a0e9c83a 	sub	r20,r20,r3
10105cd4:	00840204 	movi	r2,4104
10105cd8:	a5000204 	addi	r20,r20,8
10105cdc:	10c7c83a 	sub	r3,r2,r3
10105ce0:	a545883a 	add	r2,r20,r21
10105ce4:	1083ffcc 	andi	r2,r2,4095
10105ce8:	18abc83a 	sub	r21,r3,r2
10105cec:	a80b883a 	mov	r5,r21
10105cf0:	9009883a 	mov	r4,r18
10105cf4:	0107b8c0 	call	10107b8c <_sbrk_r>
10105cf8:	00ffffc4 	movi	r3,-1
10105cfc:	10c0e126 	beq	r2,r3,10106084 <_malloc_r+0x788>
10105d00:	1505c83a 	sub	r2,r2,r20
10105d04:	1545883a 	add	r2,r2,r21
10105d08:	10800054 	ori	r2,r2,1
10105d0c:	e0c00017 	ldw	r3,0(fp)
10105d10:	9d000215 	stw	r20,8(r19)
10105d14:	a0800115 	stw	r2,4(r20)
10105d18:	a8c7883a 	add	r3,r21,r3
10105d1c:	e0c00015 	stw	r3,0(fp)
10105d20:	84c00e26 	beq	r16,r19,10105d5c <_malloc_r+0x460>
10105d24:	018003c4 	movi	r6,15
10105d28:	3580a72e 	bgeu	r6,r22,10105fc8 <_malloc_r+0x6cc>
10105d2c:	81400117 	ldw	r5,4(r16)
10105d30:	013ffe04 	movi	r4,-8
10105d34:	b0bffd04 	addi	r2,r22,-12
10105d38:	1104703a 	and	r2,r2,r4
10105d3c:	2900004c 	andi	r4,r5,1
10105d40:	2088b03a 	or	r4,r4,r2
10105d44:	81000115 	stw	r4,4(r16)
10105d48:	01400144 	movi	r5,5
10105d4c:	8089883a 	add	r4,r16,r2
10105d50:	21400115 	stw	r5,4(r4)
10105d54:	21400215 	stw	r5,8(r4)
10105d58:	3080cd36 	bltu	r6,r2,10106090 <_malloc_r+0x794>
10105d5c:	00840474 	movhi	r2,4113
10105d60:	108c4404 	addi	r2,r2,12560
10105d64:	11000017 	ldw	r4,0(r2)
10105d68:	20c0012e 	bgeu	r4,r3,10105d70 <_malloc_r+0x474>
10105d6c:	10c00015 	stw	r3,0(r2)
10105d70:	00840474 	movhi	r2,4113
10105d74:	108c4304 	addi	r2,r2,12556
10105d78:	11000017 	ldw	r4,0(r2)
10105d7c:	9c000217 	ldw	r16,8(r19)
10105d80:	20c0012e 	bgeu	r4,r3,10105d88 <_malloc_r+0x48c>
10105d84:	10c00015 	stw	r3,0(r2)
10105d88:	80c00117 	ldw	r3,4(r16)
10105d8c:	00bfff04 	movi	r2,-4
10105d90:	1886703a 	and	r3,r3,r2
10105d94:	1c45c83a 	sub	r2,r3,r17
10105d98:	1c400236 	bltu	r3,r17,10105da4 <_malloc_r+0x4a8>
10105d9c:	00c003c4 	movi	r3,15
10105da0:	18800416 	blt	r3,r2,10105db4 <_malloc_r+0x4b8>
10105da4:	9009883a 	mov	r4,r18
10105da8:	010d6300 	call	1010d630 <__malloc_unlock>
10105dac:	0005883a 	mov	r2,zero
10105db0:	003f7b06 	br	10105ba0 <__alt_data_end+0xfffe5ba0>
10105db4:	88c00054 	ori	r3,r17,1
10105db8:	80c00115 	stw	r3,4(r16)
10105dbc:	8463883a 	add	r17,r16,r17
10105dc0:	10800054 	ori	r2,r2,1
10105dc4:	9c400215 	stw	r17,8(r19)
10105dc8:	88800115 	stw	r2,4(r17)
10105dcc:	9009883a 	mov	r4,r18
10105dd0:	010d6300 	call	1010d630 <__malloc_unlock>
10105dd4:	80800204 	addi	r2,r16,8
10105dd8:	003f7106 	br	10105ba0 <__alt_data_end+0xfffe5ba0>
10105ddc:	00c00504 	movi	r3,20
10105de0:	18804a2e 	bgeu	r3,r2,10105f0c <_malloc_r+0x610>
10105de4:	00c01504 	movi	r3,84
10105de8:	18806e36 	bltu	r3,r2,10105fa4 <_malloc_r+0x6a8>
10105dec:	8804d33a 	srli	r2,r17,12
10105df0:	12001bc4 	addi	r8,r2,111
10105df4:	11c01b84 	addi	r7,r2,110
10105df8:	4209883a 	add	r4,r8,r8
10105dfc:	003edd06 	br	10105974 <__alt_data_end+0xfffe5974>
10105e00:	3804d27a 	srli	r2,r7,9
10105e04:	00c00104 	movi	r3,4
10105e08:	1880442e 	bgeu	r3,r2,10105f1c <_malloc_r+0x620>
10105e0c:	00c00504 	movi	r3,20
10105e10:	18808136 	bltu	r3,r2,10106018 <_malloc_r+0x71c>
10105e14:	11401704 	addi	r5,r2,92
10105e18:	10c016c4 	addi	r3,r2,91
10105e1c:	294b883a 	add	r5,r5,r5
10105e20:	294b883a 	add	r5,r5,r5
10105e24:	294b883a 	add	r5,r5,r5
10105e28:	994b883a 	add	r5,r19,r5
10105e2c:	28800017 	ldw	r2,0(r5)
10105e30:	01840474 	movhi	r6,4113
10105e34:	297ffe04 	addi	r5,r5,-8
10105e38:	31bff104 	addi	r6,r6,-60
10105e3c:	28806526 	beq	r5,r2,10105fd4 <_malloc_r+0x6d8>
10105e40:	01bfff04 	movi	r6,-4
10105e44:	10c00117 	ldw	r3,4(r2)
10105e48:	1986703a 	and	r3,r3,r6
10105e4c:	38c0022e 	bgeu	r7,r3,10105e58 <_malloc_r+0x55c>
10105e50:	10800217 	ldw	r2,8(r2)
10105e54:	28bffb1e 	bne	r5,r2,10105e44 <__alt_data_end+0xfffe5e44>
10105e58:	11400317 	ldw	r5,12(r2)
10105e5c:	98c00117 	ldw	r3,4(r19)
10105e60:	81400315 	stw	r5,12(r16)
10105e64:	80800215 	stw	r2,8(r16)
10105e68:	2c000215 	stw	r16,8(r5)
10105e6c:	14000315 	stw	r16,12(r2)
10105e70:	003ef806 	br	10105a54 <__alt_data_end+0xfffe5a54>
10105e74:	88c00054 	ori	r3,r17,1
10105e78:	80c00115 	stw	r3,4(r16)
10105e7c:	8463883a 	add	r17,r16,r17
10105e80:	34400515 	stw	r17,20(r6)
10105e84:	34400415 	stw	r17,16(r6)
10105e88:	10c00054 	ori	r3,r2,1
10105e8c:	8a000315 	stw	r8,12(r17)
10105e90:	8a000215 	stw	r8,8(r17)
10105e94:	88c00115 	stw	r3,4(r17)
10105e98:	88a3883a 	add	r17,r17,r2
10105e9c:	88800015 	stw	r2,0(r17)
10105ea0:	9009883a 	mov	r4,r18
10105ea4:	010d6300 	call	1010d630 <__malloc_unlock>
10105ea8:	80800204 	addi	r2,r16,8
10105eac:	003f3c06 	br	10105ba0 <__alt_data_end+0xfffe5ba0>
10105eb0:	30c00117 	ldw	r3,4(r6)
10105eb4:	003ee706 	br	10105a54 <__alt_data_end+0xfffe5a54>
10105eb8:	5ac00044 	addi	r11,r11,1
10105ebc:	588000cc 	andi	r2,r11,3
10105ec0:	31800204 	addi	r6,r6,8
10105ec4:	103efd1e 	bne	r2,zero,10105abc <__alt_data_end+0xfffe5abc>
10105ec8:	00002406 	br	10105f5c <_malloc_r+0x660>
10105ecc:	14000317 	ldw	r16,12(r2)
10105ed0:	143f251e 	bne	r2,r16,10105b68 <__alt_data_end+0xfffe5b68>
10105ed4:	21000084 	addi	r4,r4,2
10105ed8:	003ebc06 	br	101059cc <__alt_data_end+0xfffe59cc>
10105edc:	8085883a 	add	r2,r16,r2
10105ee0:	10c00117 	ldw	r3,4(r2)
10105ee4:	81000317 	ldw	r4,12(r16)
10105ee8:	81400217 	ldw	r5,8(r16)
10105eec:	18c00054 	ori	r3,r3,1
10105ef0:	10c00115 	stw	r3,4(r2)
10105ef4:	29000315 	stw	r4,12(r5)
10105ef8:	21400215 	stw	r5,8(r4)
10105efc:	9009883a 	mov	r4,r18
10105f00:	010d6300 	call	1010d630 <__malloc_unlock>
10105f04:	80800204 	addi	r2,r16,8
10105f08:	003f2506 	br	10105ba0 <__alt_data_end+0xfffe5ba0>
10105f0c:	12001704 	addi	r8,r2,92
10105f10:	11c016c4 	addi	r7,r2,91
10105f14:	4209883a 	add	r4,r8,r8
10105f18:	003e9606 	br	10105974 <__alt_data_end+0xfffe5974>
10105f1c:	3804d1ba 	srli	r2,r7,6
10105f20:	11400e44 	addi	r5,r2,57
10105f24:	10c00e04 	addi	r3,r2,56
10105f28:	294b883a 	add	r5,r5,r5
10105f2c:	003fbc06 	br	10105e20 <__alt_data_end+0xfffe5e20>
10105f30:	84ff5926 	beq	r16,r19,10105c98 <__alt_data_end+0xfffe5c98>
10105f34:	00840474 	movhi	r2,4113
10105f38:	10bff104 	addi	r2,r2,-60
10105f3c:	14000217 	ldw	r16,8(r2)
10105f40:	00bfff04 	movi	r2,-4
10105f44:	80c00117 	ldw	r3,4(r16)
10105f48:	1886703a 	and	r3,r3,r2
10105f4c:	003f9106 	br	10105d94 <__alt_data_end+0xfffe5d94>
10105f50:	60800217 	ldw	r2,8(r12)
10105f54:	213fffc4 	addi	r4,r4,-1
10105f58:	1300651e 	bne	r2,r12,101060f0 <_malloc_r+0x7f4>
10105f5c:	208000cc 	andi	r2,r4,3
10105f60:	633ffe04 	addi	r12,r12,-8
10105f64:	103ffa1e 	bne	r2,zero,10105f50 <__alt_data_end+0xfffe5f50>
10105f68:	98800117 	ldw	r2,4(r19)
10105f6c:	0146303a 	nor	r3,zero,r5
10105f70:	1884703a 	and	r2,r3,r2
10105f74:	98800115 	stw	r2,4(r19)
10105f78:	294b883a 	add	r5,r5,r5
10105f7c:	117f2836 	bltu	r2,r5,10105c20 <__alt_data_end+0xfffe5c20>
10105f80:	283f2726 	beq	r5,zero,10105c20 <__alt_data_end+0xfffe5c20>
10105f84:	2886703a 	and	r3,r5,r2
10105f88:	5809883a 	mov	r4,r11
10105f8c:	183ec31e 	bne	r3,zero,10105a9c <__alt_data_end+0xfffe5a9c>
10105f90:	294b883a 	add	r5,r5,r5
10105f94:	2886703a 	and	r3,r5,r2
10105f98:	21000104 	addi	r4,r4,4
10105f9c:	183ffc26 	beq	r3,zero,10105f90 <__alt_data_end+0xfffe5f90>
10105fa0:	003ebe06 	br	10105a9c <__alt_data_end+0xfffe5a9c>
10105fa4:	00c05504 	movi	r3,340
10105fa8:	18801236 	bltu	r3,r2,10105ff4 <_malloc_r+0x6f8>
10105fac:	8804d3fa 	srli	r2,r17,15
10105fb0:	12001e04 	addi	r8,r2,120
10105fb4:	11c01dc4 	addi	r7,r2,119
10105fb8:	4209883a 	add	r4,r8,r8
10105fbc:	003e6d06 	br	10105974 <__alt_data_end+0xfffe5974>
10105fc0:	00c40004 	movi	r3,4096
10105fc4:	003f4606 	br	10105ce0 <__alt_data_end+0xfffe5ce0>
10105fc8:	00800044 	movi	r2,1
10105fcc:	a0800115 	stw	r2,4(r20)
10105fd0:	003f7406 	br	10105da4 <__alt_data_end+0xfffe5da4>
10105fd4:	1805d0ba 	srai	r2,r3,2
10105fd8:	01c00044 	movi	r7,1
10105fdc:	30c00117 	ldw	r3,4(r6)
10105fe0:	388e983a 	sll	r7,r7,r2
10105fe4:	2805883a 	mov	r2,r5
10105fe8:	38c6b03a 	or	r3,r7,r3
10105fec:	30c00115 	stw	r3,4(r6)
10105ff0:	003f9b06 	br	10105e60 <__alt_data_end+0xfffe5e60>
10105ff4:	00c15504 	movi	r3,1364
10105ff8:	18801a36 	bltu	r3,r2,10106064 <_malloc_r+0x768>
10105ffc:	8804d4ba 	srli	r2,r17,18
10106000:	12001f44 	addi	r8,r2,125
10106004:	11c01f04 	addi	r7,r2,124
10106008:	4209883a 	add	r4,r8,r8
1010600c:	003e5906 	br	10105974 <__alt_data_end+0xfffe5974>
10106010:	ad400404 	addi	r21,r21,16
10106014:	003f1706 	br	10105c74 <__alt_data_end+0xfffe5c74>
10106018:	00c01504 	movi	r3,84
1010601c:	18802336 	bltu	r3,r2,101060ac <_malloc_r+0x7b0>
10106020:	3804d33a 	srli	r2,r7,12
10106024:	11401bc4 	addi	r5,r2,111
10106028:	10c01b84 	addi	r3,r2,110
1010602c:	294b883a 	add	r5,r5,r5
10106030:	003f7b06 	br	10105e20 <__alt_data_end+0xfffe5e20>
10106034:	9c000217 	ldw	r16,8(r19)
10106038:	00bfff04 	movi	r2,-4
1010603c:	80c00117 	ldw	r3,4(r16)
10106040:	1886703a 	and	r3,r3,r2
10106044:	003f5306 	br	10105d94 <__alt_data_end+0xfffe5d94>
10106048:	3083ffcc 	andi	r2,r6,4095
1010604c:	103f181e 	bne	r2,zero,10105cb0 <__alt_data_end+0xfffe5cb0>
10106050:	99000217 	ldw	r4,8(r19)
10106054:	b545883a 	add	r2,r22,r21
10106058:	10800054 	ori	r2,r2,1
1010605c:	20800115 	stw	r2,4(r4)
10106060:	003f3e06 	br	10105d5c <__alt_data_end+0xfffe5d5c>
10106064:	01003f84 	movi	r4,254
10106068:	02001fc4 	movi	r8,127
1010606c:	01c01f84 	movi	r7,126
10106070:	003e4006 	br	10105974 <__alt_data_end+0xfffe5974>
10106074:	00840474 	movhi	r2,4113
10106078:	10857804 	addi	r2,r2,5600
1010607c:	15000015 	stw	r20,0(r2)
10106080:	003f1106 	br	10105cc8 <__alt_data_end+0xfffe5cc8>
10106084:	00800044 	movi	r2,1
10106088:	002b883a 	mov	r21,zero
1010608c:	003f1f06 	br	10105d0c <__alt_data_end+0xfffe5d0c>
10106090:	81400204 	addi	r5,r16,8
10106094:	9009883a 	mov	r4,r18
10106098:	0104d100 	call	10104d10 <_free_r>
1010609c:	00840474 	movhi	r2,4113
101060a0:	108c4e04 	addi	r2,r2,12600
101060a4:	10c00017 	ldw	r3,0(r2)
101060a8:	003f2c06 	br	10105d5c <__alt_data_end+0xfffe5d5c>
101060ac:	00c05504 	movi	r3,340
101060b0:	18800536 	bltu	r3,r2,101060c8 <_malloc_r+0x7cc>
101060b4:	3804d3fa 	srli	r2,r7,15
101060b8:	11401e04 	addi	r5,r2,120
101060bc:	10c01dc4 	addi	r3,r2,119
101060c0:	294b883a 	add	r5,r5,r5
101060c4:	003f5606 	br	10105e20 <__alt_data_end+0xfffe5e20>
101060c8:	00c15504 	movi	r3,1364
101060cc:	18800536 	bltu	r3,r2,101060e4 <_malloc_r+0x7e8>
101060d0:	3804d4ba 	srli	r2,r7,18
101060d4:	11401f44 	addi	r5,r2,125
101060d8:	10c01f04 	addi	r3,r2,124
101060dc:	294b883a 	add	r5,r5,r5
101060e0:	003f4f06 	br	10105e20 <__alt_data_end+0xfffe5e20>
101060e4:	01403f84 	movi	r5,254
101060e8:	00c01f84 	movi	r3,126
101060ec:	003f4c06 	br	10105e20 <__alt_data_end+0xfffe5e20>
101060f0:	98800117 	ldw	r2,4(r19)
101060f4:	003fa006 	br	10105f78 <__alt_data_end+0xfffe5f78>
101060f8:	8808d0fa 	srli	r4,r17,3
101060fc:	20800044 	addi	r2,r4,1
10106100:	1085883a 	add	r2,r2,r2
10106104:	003e9006 	br	10105b48 <__alt_data_end+0xfffe5b48>

10106108 <memchr>:
10106108:	208000cc 	andi	r2,r4,3
1010610c:	280f883a 	mov	r7,r5
10106110:	10003426 	beq	r2,zero,101061e4 <memchr+0xdc>
10106114:	30bfffc4 	addi	r2,r6,-1
10106118:	30001a26 	beq	r6,zero,10106184 <memchr+0x7c>
1010611c:	20c00003 	ldbu	r3,0(r4)
10106120:	29803fcc 	andi	r6,r5,255
10106124:	30c0051e 	bne	r6,r3,1010613c <memchr+0x34>
10106128:	00001806 	br	1010618c <memchr+0x84>
1010612c:	10001526 	beq	r2,zero,10106184 <memchr+0x7c>
10106130:	20c00003 	ldbu	r3,0(r4)
10106134:	10bfffc4 	addi	r2,r2,-1
10106138:	30c01426 	beq	r6,r3,1010618c <memchr+0x84>
1010613c:	21000044 	addi	r4,r4,1
10106140:	20c000cc 	andi	r3,r4,3
10106144:	183ff91e 	bne	r3,zero,1010612c <__alt_data_end+0xfffe612c>
10106148:	020000c4 	movi	r8,3
1010614c:	40801136 	bltu	r8,r2,10106194 <memchr+0x8c>
10106150:	10000c26 	beq	r2,zero,10106184 <memchr+0x7c>
10106154:	20c00003 	ldbu	r3,0(r4)
10106158:	29403fcc 	andi	r5,r5,255
1010615c:	28c00b26 	beq	r5,r3,1010618c <memchr+0x84>
10106160:	20c00044 	addi	r3,r4,1
10106164:	39803fcc 	andi	r6,r7,255
10106168:	2089883a 	add	r4,r4,r2
1010616c:	00000306 	br	1010617c <memchr+0x74>
10106170:	18c00044 	addi	r3,r3,1
10106174:	197fffc3 	ldbu	r5,-1(r3)
10106178:	31400526 	beq	r6,r5,10106190 <memchr+0x88>
1010617c:	1805883a 	mov	r2,r3
10106180:	20fffb1e 	bne	r4,r3,10106170 <__alt_data_end+0xfffe6170>
10106184:	0005883a 	mov	r2,zero
10106188:	f800283a 	ret
1010618c:	2005883a 	mov	r2,r4
10106190:	f800283a 	ret
10106194:	28c03fcc 	andi	r3,r5,255
10106198:	1812923a 	slli	r9,r3,8
1010619c:	02ffbff4 	movhi	r11,65279
101061a0:	02a02074 	movhi	r10,32897
101061a4:	48d2b03a 	or	r9,r9,r3
101061a8:	4806943a 	slli	r3,r9,16
101061ac:	5affbfc4 	addi	r11,r11,-257
101061b0:	52a02004 	addi	r10,r10,-32640
101061b4:	48d2b03a 	or	r9,r9,r3
101061b8:	20c00017 	ldw	r3,0(r4)
101061bc:	48c6f03a 	xor	r3,r9,r3
101061c0:	1acd883a 	add	r6,r3,r11
101061c4:	00c6303a 	nor	r3,zero,r3
101061c8:	30c6703a 	and	r3,r6,r3
101061cc:	1a86703a 	and	r3,r3,r10
101061d0:	183fe01e 	bne	r3,zero,10106154 <__alt_data_end+0xfffe6154>
101061d4:	10bfff04 	addi	r2,r2,-4
101061d8:	21000104 	addi	r4,r4,4
101061dc:	40bff636 	bltu	r8,r2,101061b8 <__alt_data_end+0xfffe61b8>
101061e0:	003fdb06 	br	10106150 <__alt_data_end+0xfffe6150>
101061e4:	3005883a 	mov	r2,r6
101061e8:	003fd706 	br	10106148 <__alt_data_end+0xfffe6148>

101061ec <memcpy>:
101061ec:	defffd04 	addi	sp,sp,-12
101061f0:	dfc00215 	stw	ra,8(sp)
101061f4:	dc400115 	stw	r17,4(sp)
101061f8:	dc000015 	stw	r16,0(sp)
101061fc:	00c003c4 	movi	r3,15
10106200:	2005883a 	mov	r2,r4
10106204:	1980452e 	bgeu	r3,r6,1010631c <memcpy+0x130>
10106208:	2906b03a 	or	r3,r5,r4
1010620c:	18c000cc 	andi	r3,r3,3
10106210:	1800441e 	bne	r3,zero,10106324 <memcpy+0x138>
10106214:	347ffc04 	addi	r17,r6,-16
10106218:	8822d13a 	srli	r17,r17,4
1010621c:	28c00104 	addi	r3,r5,4
10106220:	23400104 	addi	r13,r4,4
10106224:	8820913a 	slli	r16,r17,4
10106228:	2b000204 	addi	r12,r5,8
1010622c:	22c00204 	addi	r11,r4,8
10106230:	84000504 	addi	r16,r16,20
10106234:	2a800304 	addi	r10,r5,12
10106238:	22400304 	addi	r9,r4,12
1010623c:	2c21883a 	add	r16,r5,r16
10106240:	2811883a 	mov	r8,r5
10106244:	200f883a 	mov	r7,r4
10106248:	41000017 	ldw	r4,0(r8)
1010624c:	1fc00017 	ldw	ra,0(r3)
10106250:	63c00017 	ldw	r15,0(r12)
10106254:	39000015 	stw	r4,0(r7)
10106258:	53800017 	ldw	r14,0(r10)
1010625c:	6fc00015 	stw	ra,0(r13)
10106260:	5bc00015 	stw	r15,0(r11)
10106264:	4b800015 	stw	r14,0(r9)
10106268:	18c00404 	addi	r3,r3,16
1010626c:	39c00404 	addi	r7,r7,16
10106270:	42000404 	addi	r8,r8,16
10106274:	6b400404 	addi	r13,r13,16
10106278:	63000404 	addi	r12,r12,16
1010627c:	5ac00404 	addi	r11,r11,16
10106280:	52800404 	addi	r10,r10,16
10106284:	4a400404 	addi	r9,r9,16
10106288:	1c3fef1e 	bne	r3,r16,10106248 <__alt_data_end+0xfffe6248>
1010628c:	89c00044 	addi	r7,r17,1
10106290:	380e913a 	slli	r7,r7,4
10106294:	310003cc 	andi	r4,r6,15
10106298:	02c000c4 	movi	r11,3
1010629c:	11c7883a 	add	r3,r2,r7
101062a0:	29cb883a 	add	r5,r5,r7
101062a4:	5900212e 	bgeu	r11,r4,1010632c <memcpy+0x140>
101062a8:	1813883a 	mov	r9,r3
101062ac:	2811883a 	mov	r8,r5
101062b0:	200f883a 	mov	r7,r4
101062b4:	42800017 	ldw	r10,0(r8)
101062b8:	4a400104 	addi	r9,r9,4
101062bc:	39ffff04 	addi	r7,r7,-4
101062c0:	4abfff15 	stw	r10,-4(r9)
101062c4:	42000104 	addi	r8,r8,4
101062c8:	59fffa36 	bltu	r11,r7,101062b4 <__alt_data_end+0xfffe62b4>
101062cc:	213fff04 	addi	r4,r4,-4
101062d0:	2008d0ba 	srli	r4,r4,2
101062d4:	318000cc 	andi	r6,r6,3
101062d8:	21000044 	addi	r4,r4,1
101062dc:	2109883a 	add	r4,r4,r4
101062e0:	2109883a 	add	r4,r4,r4
101062e4:	1907883a 	add	r3,r3,r4
101062e8:	290b883a 	add	r5,r5,r4
101062ec:	30000626 	beq	r6,zero,10106308 <memcpy+0x11c>
101062f0:	198d883a 	add	r6,r3,r6
101062f4:	29c00003 	ldbu	r7,0(r5)
101062f8:	18c00044 	addi	r3,r3,1
101062fc:	29400044 	addi	r5,r5,1
10106300:	19ffffc5 	stb	r7,-1(r3)
10106304:	19bffb1e 	bne	r3,r6,101062f4 <__alt_data_end+0xfffe62f4>
10106308:	dfc00217 	ldw	ra,8(sp)
1010630c:	dc400117 	ldw	r17,4(sp)
10106310:	dc000017 	ldw	r16,0(sp)
10106314:	dec00304 	addi	sp,sp,12
10106318:	f800283a 	ret
1010631c:	2007883a 	mov	r3,r4
10106320:	003ff206 	br	101062ec <__alt_data_end+0xfffe62ec>
10106324:	2007883a 	mov	r3,r4
10106328:	003ff106 	br	101062f0 <__alt_data_end+0xfffe62f0>
1010632c:	200d883a 	mov	r6,r4
10106330:	003fee06 	br	101062ec <__alt_data_end+0xfffe62ec>

10106334 <memmove>:
10106334:	2005883a 	mov	r2,r4
10106338:	29000b2e 	bgeu	r5,r4,10106368 <memmove+0x34>
1010633c:	298f883a 	add	r7,r5,r6
10106340:	21c0092e 	bgeu	r4,r7,10106368 <memmove+0x34>
10106344:	2187883a 	add	r3,r4,r6
10106348:	198bc83a 	sub	r5,r3,r6
1010634c:	30004826 	beq	r6,zero,10106470 <memmove+0x13c>
10106350:	39ffffc4 	addi	r7,r7,-1
10106354:	39000003 	ldbu	r4,0(r7)
10106358:	18ffffc4 	addi	r3,r3,-1
1010635c:	19000005 	stb	r4,0(r3)
10106360:	28fffb1e 	bne	r5,r3,10106350 <__alt_data_end+0xfffe6350>
10106364:	f800283a 	ret
10106368:	00c003c4 	movi	r3,15
1010636c:	1980412e 	bgeu	r3,r6,10106474 <memmove+0x140>
10106370:	2886b03a 	or	r3,r5,r2
10106374:	18c000cc 	andi	r3,r3,3
10106378:	1800401e 	bne	r3,zero,1010647c <memmove+0x148>
1010637c:	33fffc04 	addi	r15,r6,-16
10106380:	781ed13a 	srli	r15,r15,4
10106384:	28c00104 	addi	r3,r5,4
10106388:	13400104 	addi	r13,r2,4
1010638c:	781c913a 	slli	r14,r15,4
10106390:	2b000204 	addi	r12,r5,8
10106394:	12c00204 	addi	r11,r2,8
10106398:	73800504 	addi	r14,r14,20
1010639c:	2a800304 	addi	r10,r5,12
101063a0:	12400304 	addi	r9,r2,12
101063a4:	2b9d883a 	add	r14,r5,r14
101063a8:	2811883a 	mov	r8,r5
101063ac:	100f883a 	mov	r7,r2
101063b0:	41000017 	ldw	r4,0(r8)
101063b4:	39c00404 	addi	r7,r7,16
101063b8:	18c00404 	addi	r3,r3,16
101063bc:	393ffc15 	stw	r4,-16(r7)
101063c0:	193ffc17 	ldw	r4,-16(r3)
101063c4:	6b400404 	addi	r13,r13,16
101063c8:	5ac00404 	addi	r11,r11,16
101063cc:	693ffc15 	stw	r4,-16(r13)
101063d0:	61000017 	ldw	r4,0(r12)
101063d4:	4a400404 	addi	r9,r9,16
101063d8:	42000404 	addi	r8,r8,16
101063dc:	593ffc15 	stw	r4,-16(r11)
101063e0:	51000017 	ldw	r4,0(r10)
101063e4:	63000404 	addi	r12,r12,16
101063e8:	52800404 	addi	r10,r10,16
101063ec:	493ffc15 	stw	r4,-16(r9)
101063f0:	1bbfef1e 	bne	r3,r14,101063b0 <__alt_data_end+0xfffe63b0>
101063f4:	79000044 	addi	r4,r15,1
101063f8:	2008913a 	slli	r4,r4,4
101063fc:	328003cc 	andi	r10,r6,15
10106400:	02c000c4 	movi	r11,3
10106404:	1107883a 	add	r3,r2,r4
10106408:	290b883a 	add	r5,r5,r4
1010640c:	5a801e2e 	bgeu	r11,r10,10106488 <memmove+0x154>
10106410:	1813883a 	mov	r9,r3
10106414:	2811883a 	mov	r8,r5
10106418:	500f883a 	mov	r7,r10
1010641c:	41000017 	ldw	r4,0(r8)
10106420:	4a400104 	addi	r9,r9,4
10106424:	39ffff04 	addi	r7,r7,-4
10106428:	493fff15 	stw	r4,-4(r9)
1010642c:	42000104 	addi	r8,r8,4
10106430:	59fffa36 	bltu	r11,r7,1010641c <__alt_data_end+0xfffe641c>
10106434:	513fff04 	addi	r4,r10,-4
10106438:	2008d0ba 	srli	r4,r4,2
1010643c:	318000cc 	andi	r6,r6,3
10106440:	21000044 	addi	r4,r4,1
10106444:	2109883a 	add	r4,r4,r4
10106448:	2109883a 	add	r4,r4,r4
1010644c:	1907883a 	add	r3,r3,r4
10106450:	290b883a 	add	r5,r5,r4
10106454:	30000b26 	beq	r6,zero,10106484 <memmove+0x150>
10106458:	198d883a 	add	r6,r3,r6
1010645c:	29c00003 	ldbu	r7,0(r5)
10106460:	18c00044 	addi	r3,r3,1
10106464:	29400044 	addi	r5,r5,1
10106468:	19ffffc5 	stb	r7,-1(r3)
1010646c:	19bffb1e 	bne	r3,r6,1010645c <__alt_data_end+0xfffe645c>
10106470:	f800283a 	ret
10106474:	1007883a 	mov	r3,r2
10106478:	003ff606 	br	10106454 <__alt_data_end+0xfffe6454>
1010647c:	1007883a 	mov	r3,r2
10106480:	003ff506 	br	10106458 <__alt_data_end+0xfffe6458>
10106484:	f800283a 	ret
10106488:	500d883a 	mov	r6,r10
1010648c:	003ff106 	br	10106454 <__alt_data_end+0xfffe6454>

10106490 <memset>:
10106490:	20c000cc 	andi	r3,r4,3
10106494:	2005883a 	mov	r2,r4
10106498:	18004426 	beq	r3,zero,101065ac <memset+0x11c>
1010649c:	31ffffc4 	addi	r7,r6,-1
101064a0:	30004026 	beq	r6,zero,101065a4 <memset+0x114>
101064a4:	2813883a 	mov	r9,r5
101064a8:	200d883a 	mov	r6,r4
101064ac:	2007883a 	mov	r3,r4
101064b0:	00000406 	br	101064c4 <memset+0x34>
101064b4:	3a3fffc4 	addi	r8,r7,-1
101064b8:	31800044 	addi	r6,r6,1
101064bc:	38003926 	beq	r7,zero,101065a4 <memset+0x114>
101064c0:	400f883a 	mov	r7,r8
101064c4:	18c00044 	addi	r3,r3,1
101064c8:	32400005 	stb	r9,0(r6)
101064cc:	1a0000cc 	andi	r8,r3,3
101064d0:	403ff81e 	bne	r8,zero,101064b4 <__alt_data_end+0xfffe64b4>
101064d4:	010000c4 	movi	r4,3
101064d8:	21c02d2e 	bgeu	r4,r7,10106590 <memset+0x100>
101064dc:	29003fcc 	andi	r4,r5,255
101064e0:	200c923a 	slli	r6,r4,8
101064e4:	3108b03a 	or	r4,r6,r4
101064e8:	200c943a 	slli	r6,r4,16
101064ec:	218cb03a 	or	r6,r4,r6
101064f0:	010003c4 	movi	r4,15
101064f4:	21c0182e 	bgeu	r4,r7,10106558 <memset+0xc8>
101064f8:	3b3ffc04 	addi	r12,r7,-16
101064fc:	6018d13a 	srli	r12,r12,4
10106500:	1a000104 	addi	r8,r3,4
10106504:	1ac00204 	addi	r11,r3,8
10106508:	6008913a 	slli	r4,r12,4
1010650c:	1a800304 	addi	r10,r3,12
10106510:	1813883a 	mov	r9,r3
10106514:	21000504 	addi	r4,r4,20
10106518:	1909883a 	add	r4,r3,r4
1010651c:	49800015 	stw	r6,0(r9)
10106520:	41800015 	stw	r6,0(r8)
10106524:	59800015 	stw	r6,0(r11)
10106528:	51800015 	stw	r6,0(r10)
1010652c:	42000404 	addi	r8,r8,16
10106530:	4a400404 	addi	r9,r9,16
10106534:	5ac00404 	addi	r11,r11,16
10106538:	52800404 	addi	r10,r10,16
1010653c:	413ff71e 	bne	r8,r4,1010651c <__alt_data_end+0xfffe651c>
10106540:	63000044 	addi	r12,r12,1
10106544:	6018913a 	slli	r12,r12,4
10106548:	39c003cc 	andi	r7,r7,15
1010654c:	010000c4 	movi	r4,3
10106550:	1b07883a 	add	r3,r3,r12
10106554:	21c00e2e 	bgeu	r4,r7,10106590 <memset+0x100>
10106558:	1813883a 	mov	r9,r3
1010655c:	3811883a 	mov	r8,r7
10106560:	010000c4 	movi	r4,3
10106564:	49800015 	stw	r6,0(r9)
10106568:	423fff04 	addi	r8,r8,-4
1010656c:	4a400104 	addi	r9,r9,4
10106570:	223ffc36 	bltu	r4,r8,10106564 <__alt_data_end+0xfffe6564>
10106574:	393fff04 	addi	r4,r7,-4
10106578:	2008d0ba 	srli	r4,r4,2
1010657c:	39c000cc 	andi	r7,r7,3
10106580:	21000044 	addi	r4,r4,1
10106584:	2109883a 	add	r4,r4,r4
10106588:	2109883a 	add	r4,r4,r4
1010658c:	1907883a 	add	r3,r3,r4
10106590:	38000526 	beq	r7,zero,101065a8 <memset+0x118>
10106594:	19cf883a 	add	r7,r3,r7
10106598:	19400005 	stb	r5,0(r3)
1010659c:	18c00044 	addi	r3,r3,1
101065a0:	38fffd1e 	bne	r7,r3,10106598 <__alt_data_end+0xfffe6598>
101065a4:	f800283a 	ret
101065a8:	f800283a 	ret
101065ac:	2007883a 	mov	r3,r4
101065b0:	300f883a 	mov	r7,r6
101065b4:	003fc706 	br	101064d4 <__alt_data_end+0xfffe64d4>

101065b8 <_Balloc>:
101065b8:	20801317 	ldw	r2,76(r4)
101065bc:	defffc04 	addi	sp,sp,-16
101065c0:	dc400115 	stw	r17,4(sp)
101065c4:	dc000015 	stw	r16,0(sp)
101065c8:	dfc00315 	stw	ra,12(sp)
101065cc:	dc800215 	stw	r18,8(sp)
101065d0:	2023883a 	mov	r17,r4
101065d4:	2821883a 	mov	r16,r5
101065d8:	10000f26 	beq	r2,zero,10106618 <_Balloc+0x60>
101065dc:	8407883a 	add	r3,r16,r16
101065e0:	18c7883a 	add	r3,r3,r3
101065e4:	10c7883a 	add	r3,r2,r3
101065e8:	18800017 	ldw	r2,0(r3)
101065ec:	10001126 	beq	r2,zero,10106634 <_Balloc+0x7c>
101065f0:	11000017 	ldw	r4,0(r2)
101065f4:	19000015 	stw	r4,0(r3)
101065f8:	10000415 	stw	zero,16(r2)
101065fc:	10000315 	stw	zero,12(r2)
10106600:	dfc00317 	ldw	ra,12(sp)
10106604:	dc800217 	ldw	r18,8(sp)
10106608:	dc400117 	ldw	r17,4(sp)
1010660c:	dc000017 	ldw	r16,0(sp)
10106610:	dec00404 	addi	sp,sp,16
10106614:	f800283a 	ret
10106618:	01800844 	movi	r6,33
1010661c:	01400104 	movi	r5,4
10106620:	01094f40 	call	101094f4 <_calloc_r>
10106624:	88801315 	stw	r2,76(r17)
10106628:	103fec1e 	bne	r2,zero,101065dc <__alt_data_end+0xfffe65dc>
1010662c:	0005883a 	mov	r2,zero
10106630:	003ff306 	br	10106600 <__alt_data_end+0xfffe6600>
10106634:	01400044 	movi	r5,1
10106638:	2c24983a 	sll	r18,r5,r16
1010663c:	8809883a 	mov	r4,r17
10106640:	91800144 	addi	r6,r18,5
10106644:	318d883a 	add	r6,r6,r6
10106648:	318d883a 	add	r6,r6,r6
1010664c:	01094f40 	call	101094f4 <_calloc_r>
10106650:	103ff626 	beq	r2,zero,1010662c <__alt_data_end+0xfffe662c>
10106654:	14000115 	stw	r16,4(r2)
10106658:	14800215 	stw	r18,8(r2)
1010665c:	003fe606 	br	101065f8 <__alt_data_end+0xfffe65f8>

10106660 <_Bfree>:
10106660:	28000826 	beq	r5,zero,10106684 <_Bfree+0x24>
10106664:	28c00117 	ldw	r3,4(r5)
10106668:	20801317 	ldw	r2,76(r4)
1010666c:	18c7883a 	add	r3,r3,r3
10106670:	18c7883a 	add	r3,r3,r3
10106674:	10c5883a 	add	r2,r2,r3
10106678:	10c00017 	ldw	r3,0(r2)
1010667c:	28c00015 	stw	r3,0(r5)
10106680:	11400015 	stw	r5,0(r2)
10106684:	f800283a 	ret

10106688 <__multadd>:
10106688:	defffa04 	addi	sp,sp,-24
1010668c:	dc800315 	stw	r18,12(sp)
10106690:	dc400215 	stw	r17,8(sp)
10106694:	dc000115 	stw	r16,4(sp)
10106698:	2823883a 	mov	r17,r5
1010669c:	2c000417 	ldw	r16,16(r5)
101066a0:	dfc00515 	stw	ra,20(sp)
101066a4:	dcc00415 	stw	r19,16(sp)
101066a8:	2025883a 	mov	r18,r4
101066ac:	29400504 	addi	r5,r5,20
101066b0:	0011883a 	mov	r8,zero
101066b4:	28c00017 	ldw	r3,0(r5)
101066b8:	29400104 	addi	r5,r5,4
101066bc:	42000044 	addi	r8,r8,1
101066c0:	18bfffcc 	andi	r2,r3,65535
101066c4:	1185383a 	mul	r2,r2,r6
101066c8:	1806d43a 	srli	r3,r3,16
101066cc:	11cf883a 	add	r7,r2,r7
101066d0:	3808d43a 	srli	r4,r7,16
101066d4:	1987383a 	mul	r3,r3,r6
101066d8:	38bfffcc 	andi	r2,r7,65535
101066dc:	1907883a 	add	r3,r3,r4
101066e0:	1808943a 	slli	r4,r3,16
101066e4:	180ed43a 	srli	r7,r3,16
101066e8:	2085883a 	add	r2,r4,r2
101066ec:	28bfff15 	stw	r2,-4(r5)
101066f0:	443ff016 	blt	r8,r16,101066b4 <__alt_data_end+0xfffe66b4>
101066f4:	38000926 	beq	r7,zero,1010671c <__multadd+0x94>
101066f8:	88800217 	ldw	r2,8(r17)
101066fc:	80800f0e 	bge	r16,r2,1010673c <__multadd+0xb4>
10106700:	80800144 	addi	r2,r16,5
10106704:	1085883a 	add	r2,r2,r2
10106708:	1085883a 	add	r2,r2,r2
1010670c:	8885883a 	add	r2,r17,r2
10106710:	11c00015 	stw	r7,0(r2)
10106714:	84000044 	addi	r16,r16,1
10106718:	8c000415 	stw	r16,16(r17)
1010671c:	8805883a 	mov	r2,r17
10106720:	dfc00517 	ldw	ra,20(sp)
10106724:	dcc00417 	ldw	r19,16(sp)
10106728:	dc800317 	ldw	r18,12(sp)
1010672c:	dc400217 	ldw	r17,8(sp)
10106730:	dc000117 	ldw	r16,4(sp)
10106734:	dec00604 	addi	sp,sp,24
10106738:	f800283a 	ret
1010673c:	89400117 	ldw	r5,4(r17)
10106740:	9009883a 	mov	r4,r18
10106744:	d9c00015 	stw	r7,0(sp)
10106748:	29400044 	addi	r5,r5,1
1010674c:	01065b80 	call	101065b8 <_Balloc>
10106750:	89800417 	ldw	r6,16(r17)
10106754:	89400304 	addi	r5,r17,12
10106758:	11000304 	addi	r4,r2,12
1010675c:	31800084 	addi	r6,r6,2
10106760:	318d883a 	add	r6,r6,r6
10106764:	318d883a 	add	r6,r6,r6
10106768:	1027883a 	mov	r19,r2
1010676c:	01061ec0 	call	101061ec <memcpy>
10106770:	d9c00017 	ldw	r7,0(sp)
10106774:	88000a26 	beq	r17,zero,101067a0 <__multadd+0x118>
10106778:	88c00117 	ldw	r3,4(r17)
1010677c:	90801317 	ldw	r2,76(r18)
10106780:	18c7883a 	add	r3,r3,r3
10106784:	18c7883a 	add	r3,r3,r3
10106788:	10c5883a 	add	r2,r2,r3
1010678c:	10c00017 	ldw	r3,0(r2)
10106790:	88c00015 	stw	r3,0(r17)
10106794:	14400015 	stw	r17,0(r2)
10106798:	9823883a 	mov	r17,r19
1010679c:	003fd806 	br	10106700 <__alt_data_end+0xfffe6700>
101067a0:	9823883a 	mov	r17,r19
101067a4:	003fd606 	br	10106700 <__alt_data_end+0xfffe6700>

101067a8 <__s2b>:
101067a8:	defff904 	addi	sp,sp,-28
101067ac:	dc400115 	stw	r17,4(sp)
101067b0:	dc000015 	stw	r16,0(sp)
101067b4:	2023883a 	mov	r17,r4
101067b8:	2821883a 	mov	r16,r5
101067bc:	39000204 	addi	r4,r7,8
101067c0:	01400244 	movi	r5,9
101067c4:	dcc00315 	stw	r19,12(sp)
101067c8:	dc800215 	stw	r18,8(sp)
101067cc:	dfc00615 	stw	ra,24(sp)
101067d0:	dd400515 	stw	r21,20(sp)
101067d4:	dd000415 	stw	r20,16(sp)
101067d8:	3825883a 	mov	r18,r7
101067dc:	3027883a 	mov	r19,r6
101067e0:	010a8240 	call	1010a824 <__divsi3>
101067e4:	00c00044 	movi	r3,1
101067e8:	000b883a 	mov	r5,zero
101067ec:	1880030e 	bge	r3,r2,101067fc <__s2b+0x54>
101067f0:	18c7883a 	add	r3,r3,r3
101067f4:	29400044 	addi	r5,r5,1
101067f8:	18bffd16 	blt	r3,r2,101067f0 <__alt_data_end+0xfffe67f0>
101067fc:	8809883a 	mov	r4,r17
10106800:	01065b80 	call	101065b8 <_Balloc>
10106804:	d8c00717 	ldw	r3,28(sp)
10106808:	10c00515 	stw	r3,20(r2)
1010680c:	00c00044 	movi	r3,1
10106810:	10c00415 	stw	r3,16(r2)
10106814:	00c00244 	movi	r3,9
10106818:	1cc0210e 	bge	r3,r19,101068a0 <__s2b+0xf8>
1010681c:	80eb883a 	add	r21,r16,r3
10106820:	a829883a 	mov	r20,r21
10106824:	84e1883a 	add	r16,r16,r19
10106828:	a1c00007 	ldb	r7,0(r20)
1010682c:	01800284 	movi	r6,10
10106830:	a5000044 	addi	r20,r20,1
10106834:	100b883a 	mov	r5,r2
10106838:	39fff404 	addi	r7,r7,-48
1010683c:	8809883a 	mov	r4,r17
10106840:	01066880 	call	10106688 <__multadd>
10106844:	a43ff81e 	bne	r20,r16,10106828 <__alt_data_end+0xfffe6828>
10106848:	ace1883a 	add	r16,r21,r19
1010684c:	843ffe04 	addi	r16,r16,-8
10106850:	9c800a0e 	bge	r19,r18,1010687c <__s2b+0xd4>
10106854:	94e5c83a 	sub	r18,r18,r19
10106858:	84a5883a 	add	r18,r16,r18
1010685c:	81c00007 	ldb	r7,0(r16)
10106860:	01800284 	movi	r6,10
10106864:	84000044 	addi	r16,r16,1
10106868:	100b883a 	mov	r5,r2
1010686c:	39fff404 	addi	r7,r7,-48
10106870:	8809883a 	mov	r4,r17
10106874:	01066880 	call	10106688 <__multadd>
10106878:	84bff81e 	bne	r16,r18,1010685c <__alt_data_end+0xfffe685c>
1010687c:	dfc00617 	ldw	ra,24(sp)
10106880:	dd400517 	ldw	r21,20(sp)
10106884:	dd000417 	ldw	r20,16(sp)
10106888:	dcc00317 	ldw	r19,12(sp)
1010688c:	dc800217 	ldw	r18,8(sp)
10106890:	dc400117 	ldw	r17,4(sp)
10106894:	dc000017 	ldw	r16,0(sp)
10106898:	dec00704 	addi	sp,sp,28
1010689c:	f800283a 	ret
101068a0:	84000284 	addi	r16,r16,10
101068a4:	1827883a 	mov	r19,r3
101068a8:	003fe906 	br	10106850 <__alt_data_end+0xfffe6850>

101068ac <__hi0bits>:
101068ac:	20bfffec 	andhi	r2,r4,65535
101068b0:	1000141e 	bne	r2,zero,10106904 <__hi0bits+0x58>
101068b4:	2008943a 	slli	r4,r4,16
101068b8:	00800404 	movi	r2,16
101068bc:	20ffc02c 	andhi	r3,r4,65280
101068c0:	1800021e 	bne	r3,zero,101068cc <__hi0bits+0x20>
101068c4:	2008923a 	slli	r4,r4,8
101068c8:	10800204 	addi	r2,r2,8
101068cc:	20fc002c 	andhi	r3,r4,61440
101068d0:	1800021e 	bne	r3,zero,101068dc <__hi0bits+0x30>
101068d4:	2008913a 	slli	r4,r4,4
101068d8:	10800104 	addi	r2,r2,4
101068dc:	20f0002c 	andhi	r3,r4,49152
101068e0:	1800031e 	bne	r3,zero,101068f0 <__hi0bits+0x44>
101068e4:	2109883a 	add	r4,r4,r4
101068e8:	10800084 	addi	r2,r2,2
101068ec:	2109883a 	add	r4,r4,r4
101068f0:	20000316 	blt	r4,zero,10106900 <__hi0bits+0x54>
101068f4:	2110002c 	andhi	r4,r4,16384
101068f8:	2000041e 	bne	r4,zero,1010690c <__hi0bits+0x60>
101068fc:	00800804 	movi	r2,32
10106900:	f800283a 	ret
10106904:	0005883a 	mov	r2,zero
10106908:	003fec06 	br	101068bc <__alt_data_end+0xfffe68bc>
1010690c:	10800044 	addi	r2,r2,1
10106910:	f800283a 	ret

10106914 <__lo0bits>:
10106914:	20c00017 	ldw	r3,0(r4)
10106918:	188001cc 	andi	r2,r3,7
1010691c:	10000826 	beq	r2,zero,10106940 <__lo0bits+0x2c>
10106920:	1880004c 	andi	r2,r3,1
10106924:	1000211e 	bne	r2,zero,101069ac <__lo0bits+0x98>
10106928:	1880008c 	andi	r2,r3,2
1010692c:	1000211e 	bne	r2,zero,101069b4 <__lo0bits+0xa0>
10106930:	1806d0ba 	srli	r3,r3,2
10106934:	00800084 	movi	r2,2
10106938:	20c00015 	stw	r3,0(r4)
1010693c:	f800283a 	ret
10106940:	18bfffcc 	andi	r2,r3,65535
10106944:	10001326 	beq	r2,zero,10106994 <__lo0bits+0x80>
10106948:	0005883a 	mov	r2,zero
1010694c:	19403fcc 	andi	r5,r3,255
10106950:	2800021e 	bne	r5,zero,1010695c <__lo0bits+0x48>
10106954:	1806d23a 	srli	r3,r3,8
10106958:	10800204 	addi	r2,r2,8
1010695c:	194003cc 	andi	r5,r3,15
10106960:	2800021e 	bne	r5,zero,1010696c <__lo0bits+0x58>
10106964:	1806d13a 	srli	r3,r3,4
10106968:	10800104 	addi	r2,r2,4
1010696c:	194000cc 	andi	r5,r3,3
10106970:	2800021e 	bne	r5,zero,1010697c <__lo0bits+0x68>
10106974:	1806d0ba 	srli	r3,r3,2
10106978:	10800084 	addi	r2,r2,2
1010697c:	1940004c 	andi	r5,r3,1
10106980:	2800081e 	bne	r5,zero,101069a4 <__lo0bits+0x90>
10106984:	1806d07a 	srli	r3,r3,1
10106988:	1800051e 	bne	r3,zero,101069a0 <__lo0bits+0x8c>
1010698c:	00800804 	movi	r2,32
10106990:	f800283a 	ret
10106994:	1806d43a 	srli	r3,r3,16
10106998:	00800404 	movi	r2,16
1010699c:	003feb06 	br	1010694c <__alt_data_end+0xfffe694c>
101069a0:	10800044 	addi	r2,r2,1
101069a4:	20c00015 	stw	r3,0(r4)
101069a8:	f800283a 	ret
101069ac:	0005883a 	mov	r2,zero
101069b0:	f800283a 	ret
101069b4:	1806d07a 	srli	r3,r3,1
101069b8:	00800044 	movi	r2,1
101069bc:	20c00015 	stw	r3,0(r4)
101069c0:	f800283a 	ret

101069c4 <__i2b>:
101069c4:	defffd04 	addi	sp,sp,-12
101069c8:	dc000015 	stw	r16,0(sp)
101069cc:	04000044 	movi	r16,1
101069d0:	dc400115 	stw	r17,4(sp)
101069d4:	2823883a 	mov	r17,r5
101069d8:	800b883a 	mov	r5,r16
101069dc:	dfc00215 	stw	ra,8(sp)
101069e0:	01065b80 	call	101065b8 <_Balloc>
101069e4:	14400515 	stw	r17,20(r2)
101069e8:	14000415 	stw	r16,16(r2)
101069ec:	dfc00217 	ldw	ra,8(sp)
101069f0:	dc400117 	ldw	r17,4(sp)
101069f4:	dc000017 	ldw	r16,0(sp)
101069f8:	dec00304 	addi	sp,sp,12
101069fc:	f800283a 	ret

10106a00 <__multiply>:
10106a00:	defffa04 	addi	sp,sp,-24
10106a04:	dcc00315 	stw	r19,12(sp)
10106a08:	dc800215 	stw	r18,8(sp)
10106a0c:	34c00417 	ldw	r19,16(r6)
10106a10:	2c800417 	ldw	r18,16(r5)
10106a14:	dd000415 	stw	r20,16(sp)
10106a18:	dc400115 	stw	r17,4(sp)
10106a1c:	dfc00515 	stw	ra,20(sp)
10106a20:	dc000015 	stw	r16,0(sp)
10106a24:	2829883a 	mov	r20,r5
10106a28:	3023883a 	mov	r17,r6
10106a2c:	94c0050e 	bge	r18,r19,10106a44 <__multiply+0x44>
10106a30:	9007883a 	mov	r3,r18
10106a34:	3029883a 	mov	r20,r6
10106a38:	9825883a 	mov	r18,r19
10106a3c:	2823883a 	mov	r17,r5
10106a40:	1827883a 	mov	r19,r3
10106a44:	a0800217 	ldw	r2,8(r20)
10106a48:	94e1883a 	add	r16,r18,r19
10106a4c:	a1400117 	ldw	r5,4(r20)
10106a50:	1400010e 	bge	r2,r16,10106a58 <__multiply+0x58>
10106a54:	29400044 	addi	r5,r5,1
10106a58:	01065b80 	call	101065b8 <_Balloc>
10106a5c:	8415883a 	add	r10,r16,r16
10106a60:	12c00504 	addi	r11,r2,20
10106a64:	5295883a 	add	r10,r10,r10
10106a68:	5a95883a 	add	r10,r11,r10
10106a6c:	5807883a 	mov	r3,r11
10106a70:	5a80032e 	bgeu	r11,r10,10106a80 <__multiply+0x80>
10106a74:	18000015 	stw	zero,0(r3)
10106a78:	18c00104 	addi	r3,r3,4
10106a7c:	1abffd36 	bltu	r3,r10,10106a74 <__alt_data_end+0xfffe6a74>
10106a80:	9ce7883a 	add	r19,r19,r19
10106a84:	94a5883a 	add	r18,r18,r18
10106a88:	89800504 	addi	r6,r17,20
10106a8c:	9ce7883a 	add	r19,r19,r19
10106a90:	a3400504 	addi	r13,r20,20
10106a94:	94a5883a 	add	r18,r18,r18
10106a98:	34d9883a 	add	r12,r6,r19
10106a9c:	6c93883a 	add	r9,r13,r18
10106aa0:	3300422e 	bgeu	r6,r12,10106bac <__multiply+0x1ac>
10106aa4:	37c00017 	ldw	ra,0(r6)
10106aa8:	fbffffcc 	andi	r15,ra,65535
10106aac:	78001b26 	beq	r15,zero,10106b1c <__multiply+0x11c>
10106ab0:	5811883a 	mov	r8,r11
10106ab4:	681d883a 	mov	r14,r13
10106ab8:	000f883a 	mov	r7,zero
10106abc:	71000017 	ldw	r4,0(r14)
10106ac0:	40c00017 	ldw	r3,0(r8)
10106ac4:	73800104 	addi	r14,r14,4
10106ac8:	217fffcc 	andi	r5,r4,65535
10106acc:	2bcb383a 	mul	r5,r5,r15
10106ad0:	2008d43a 	srli	r4,r4,16
10106ad4:	1c7fffcc 	andi	r17,r3,65535
10106ad8:	2c4b883a 	add	r5,r5,r17
10106adc:	29cb883a 	add	r5,r5,r7
10106ae0:	23c9383a 	mul	r4,r4,r15
10106ae4:	1806d43a 	srli	r3,r3,16
10106ae8:	280ed43a 	srli	r7,r5,16
10106aec:	297fffcc 	andi	r5,r5,65535
10106af0:	20c7883a 	add	r3,r4,r3
10106af4:	19c7883a 	add	r3,r3,r7
10106af8:	1808943a 	slli	r4,r3,16
10106afc:	4023883a 	mov	r17,r8
10106b00:	180ed43a 	srli	r7,r3,16
10106b04:	214ab03a 	or	r5,r4,r5
10106b08:	41400015 	stw	r5,0(r8)
10106b0c:	42000104 	addi	r8,r8,4
10106b10:	727fea36 	bltu	r14,r9,10106abc <__alt_data_end+0xfffe6abc>
10106b14:	89c00115 	stw	r7,4(r17)
10106b18:	37c00017 	ldw	ra,0(r6)
10106b1c:	f83ed43a 	srli	ra,ra,16
10106b20:	f8001f26 	beq	ra,zero,10106ba0 <__multiply+0x1a0>
10106b24:	58c00017 	ldw	r3,0(r11)
10106b28:	681d883a 	mov	r14,r13
10106b2c:	581f883a 	mov	r15,r11
10106b30:	1811883a 	mov	r8,r3
10106b34:	5825883a 	mov	r18,r11
10106b38:	000f883a 	mov	r7,zero
10106b3c:	00000106 	br	10106b44 <__multiply+0x144>
10106b40:	8825883a 	mov	r18,r17
10106b44:	7140000b 	ldhu	r5,0(r14)
10106b48:	4010d43a 	srli	r8,r8,16
10106b4c:	193fffcc 	andi	r4,r3,65535
10106b50:	2fcb383a 	mul	r5,r5,ra
10106b54:	7bc00104 	addi	r15,r15,4
10106b58:	73800104 	addi	r14,r14,4
10106b5c:	2a0b883a 	add	r5,r5,r8
10106b60:	29cb883a 	add	r5,r5,r7
10106b64:	2806943a 	slli	r3,r5,16
10106b68:	94400104 	addi	r17,r18,4
10106b6c:	280ad43a 	srli	r5,r5,16
10106b70:	1908b03a 	or	r4,r3,r4
10106b74:	793fff15 	stw	r4,-4(r15)
10106b78:	70ffff17 	ldw	r3,-4(r14)
10106b7c:	8a000017 	ldw	r8,0(r17)
10106b80:	1806d43a 	srli	r3,r3,16
10106b84:	413fffcc 	andi	r4,r8,65535
10106b88:	1fc7383a 	mul	r3,r3,ra
10106b8c:	1907883a 	add	r3,r3,r4
10106b90:	1947883a 	add	r3,r3,r5
10106b94:	180ed43a 	srli	r7,r3,16
10106b98:	727fe936 	bltu	r14,r9,10106b40 <__alt_data_end+0xfffe6b40>
10106b9c:	90c00115 	stw	r3,4(r18)
10106ba0:	31800104 	addi	r6,r6,4
10106ba4:	5ac00104 	addi	r11,r11,4
10106ba8:	333fbe36 	bltu	r6,r12,10106aa4 <__alt_data_end+0xfffe6aa4>
10106bac:	0400090e 	bge	zero,r16,10106bd4 <__multiply+0x1d4>
10106bb0:	50ffff17 	ldw	r3,-4(r10)
10106bb4:	52bfff04 	addi	r10,r10,-4
10106bb8:	18000326 	beq	r3,zero,10106bc8 <__multiply+0x1c8>
10106bbc:	00000506 	br	10106bd4 <__multiply+0x1d4>
10106bc0:	50c00017 	ldw	r3,0(r10)
10106bc4:	1800031e 	bne	r3,zero,10106bd4 <__multiply+0x1d4>
10106bc8:	843fffc4 	addi	r16,r16,-1
10106bcc:	52bfff04 	addi	r10,r10,-4
10106bd0:	803ffb1e 	bne	r16,zero,10106bc0 <__alt_data_end+0xfffe6bc0>
10106bd4:	14000415 	stw	r16,16(r2)
10106bd8:	dfc00517 	ldw	ra,20(sp)
10106bdc:	dd000417 	ldw	r20,16(sp)
10106be0:	dcc00317 	ldw	r19,12(sp)
10106be4:	dc800217 	ldw	r18,8(sp)
10106be8:	dc400117 	ldw	r17,4(sp)
10106bec:	dc000017 	ldw	r16,0(sp)
10106bf0:	dec00604 	addi	sp,sp,24
10106bf4:	f800283a 	ret

10106bf8 <__pow5mult>:
10106bf8:	defffa04 	addi	sp,sp,-24
10106bfc:	dcc00315 	stw	r19,12(sp)
10106c00:	dc000015 	stw	r16,0(sp)
10106c04:	dfc00515 	stw	ra,20(sp)
10106c08:	dd000415 	stw	r20,16(sp)
10106c0c:	dc800215 	stw	r18,8(sp)
10106c10:	dc400115 	stw	r17,4(sp)
10106c14:	308000cc 	andi	r2,r6,3
10106c18:	3021883a 	mov	r16,r6
10106c1c:	2027883a 	mov	r19,r4
10106c20:	10002f1e 	bne	r2,zero,10106ce0 <__pow5mult+0xe8>
10106c24:	2825883a 	mov	r18,r5
10106c28:	8021d0ba 	srai	r16,r16,2
10106c2c:	80001a26 	beq	r16,zero,10106c98 <__pow5mult+0xa0>
10106c30:	9c401217 	ldw	r17,72(r19)
10106c34:	8800061e 	bne	r17,zero,10106c50 <__pow5mult+0x58>
10106c38:	00003406 	br	10106d0c <__pow5mult+0x114>
10106c3c:	8021d07a 	srai	r16,r16,1
10106c40:	80001526 	beq	r16,zero,10106c98 <__pow5mult+0xa0>
10106c44:	88800017 	ldw	r2,0(r17)
10106c48:	10001c26 	beq	r2,zero,10106cbc <__pow5mult+0xc4>
10106c4c:	1023883a 	mov	r17,r2
10106c50:	8080004c 	andi	r2,r16,1
10106c54:	103ff926 	beq	r2,zero,10106c3c <__alt_data_end+0xfffe6c3c>
10106c58:	880d883a 	mov	r6,r17
10106c5c:	900b883a 	mov	r5,r18
10106c60:	9809883a 	mov	r4,r19
10106c64:	0106a000 	call	10106a00 <__multiply>
10106c68:	90001b26 	beq	r18,zero,10106cd8 <__pow5mult+0xe0>
10106c6c:	91000117 	ldw	r4,4(r18)
10106c70:	98c01317 	ldw	r3,76(r19)
10106c74:	8021d07a 	srai	r16,r16,1
10106c78:	2109883a 	add	r4,r4,r4
10106c7c:	2109883a 	add	r4,r4,r4
10106c80:	1907883a 	add	r3,r3,r4
10106c84:	19000017 	ldw	r4,0(r3)
10106c88:	91000015 	stw	r4,0(r18)
10106c8c:	1c800015 	stw	r18,0(r3)
10106c90:	1025883a 	mov	r18,r2
10106c94:	803feb1e 	bne	r16,zero,10106c44 <__alt_data_end+0xfffe6c44>
10106c98:	9005883a 	mov	r2,r18
10106c9c:	dfc00517 	ldw	ra,20(sp)
10106ca0:	dd000417 	ldw	r20,16(sp)
10106ca4:	dcc00317 	ldw	r19,12(sp)
10106ca8:	dc800217 	ldw	r18,8(sp)
10106cac:	dc400117 	ldw	r17,4(sp)
10106cb0:	dc000017 	ldw	r16,0(sp)
10106cb4:	dec00604 	addi	sp,sp,24
10106cb8:	f800283a 	ret
10106cbc:	880d883a 	mov	r6,r17
10106cc0:	880b883a 	mov	r5,r17
10106cc4:	9809883a 	mov	r4,r19
10106cc8:	0106a000 	call	10106a00 <__multiply>
10106ccc:	88800015 	stw	r2,0(r17)
10106cd0:	10000015 	stw	zero,0(r2)
10106cd4:	003fdd06 	br	10106c4c <__alt_data_end+0xfffe6c4c>
10106cd8:	1025883a 	mov	r18,r2
10106cdc:	003fd706 	br	10106c3c <__alt_data_end+0xfffe6c3c>
10106ce0:	10bfffc4 	addi	r2,r2,-1
10106ce4:	1085883a 	add	r2,r2,r2
10106ce8:	00c40474 	movhi	r3,4113
10106cec:	18fe2c04 	addi	r3,r3,-1872
10106cf0:	1085883a 	add	r2,r2,r2
10106cf4:	1885883a 	add	r2,r3,r2
10106cf8:	11800017 	ldw	r6,0(r2)
10106cfc:	000f883a 	mov	r7,zero
10106d00:	01066880 	call	10106688 <__multadd>
10106d04:	1025883a 	mov	r18,r2
10106d08:	003fc706 	br	10106c28 <__alt_data_end+0xfffe6c28>
10106d0c:	05000044 	movi	r20,1
10106d10:	a00b883a 	mov	r5,r20
10106d14:	9809883a 	mov	r4,r19
10106d18:	01065b80 	call	101065b8 <_Balloc>
10106d1c:	1023883a 	mov	r17,r2
10106d20:	00809c44 	movi	r2,625
10106d24:	88800515 	stw	r2,20(r17)
10106d28:	8d000415 	stw	r20,16(r17)
10106d2c:	9c401215 	stw	r17,72(r19)
10106d30:	88000015 	stw	zero,0(r17)
10106d34:	003fc606 	br	10106c50 <__alt_data_end+0xfffe6c50>

10106d38 <__lshift>:
10106d38:	defff904 	addi	sp,sp,-28
10106d3c:	dd400515 	stw	r21,20(sp)
10106d40:	dcc00315 	stw	r19,12(sp)
10106d44:	302bd17a 	srai	r21,r6,5
10106d48:	2cc00417 	ldw	r19,16(r5)
10106d4c:	28800217 	ldw	r2,8(r5)
10106d50:	dd000415 	stw	r20,16(sp)
10106d54:	ace7883a 	add	r19,r21,r19
10106d58:	dc800215 	stw	r18,8(sp)
10106d5c:	dc400115 	stw	r17,4(sp)
10106d60:	dc000015 	stw	r16,0(sp)
10106d64:	dfc00615 	stw	ra,24(sp)
10106d68:	9c000044 	addi	r16,r19,1
10106d6c:	2823883a 	mov	r17,r5
10106d70:	3029883a 	mov	r20,r6
10106d74:	2025883a 	mov	r18,r4
10106d78:	29400117 	ldw	r5,4(r5)
10106d7c:	1400030e 	bge	r2,r16,10106d8c <__lshift+0x54>
10106d80:	1085883a 	add	r2,r2,r2
10106d84:	29400044 	addi	r5,r5,1
10106d88:	143ffd16 	blt	r2,r16,10106d80 <__alt_data_end+0xfffe6d80>
10106d8c:	9009883a 	mov	r4,r18
10106d90:	01065b80 	call	101065b8 <_Balloc>
10106d94:	10c00504 	addi	r3,r2,20
10106d98:	0540070e 	bge	zero,r21,10106db8 <__lshift+0x80>
10106d9c:	ad6b883a 	add	r21,r21,r21
10106da0:	ad6b883a 	add	r21,r21,r21
10106da4:	1809883a 	mov	r4,r3
10106da8:	1d47883a 	add	r3,r3,r21
10106dac:	20000015 	stw	zero,0(r4)
10106db0:	21000104 	addi	r4,r4,4
10106db4:	193ffd1e 	bne	r3,r4,10106dac <__alt_data_end+0xfffe6dac>
10106db8:	8a000417 	ldw	r8,16(r17)
10106dbc:	89000504 	addi	r4,r17,20
10106dc0:	a18007cc 	andi	r6,r20,31
10106dc4:	4211883a 	add	r8,r8,r8
10106dc8:	4211883a 	add	r8,r8,r8
10106dcc:	2211883a 	add	r8,r4,r8
10106dd0:	30002326 	beq	r6,zero,10106e60 <__lshift+0x128>
10106dd4:	02400804 	movi	r9,32
10106dd8:	4993c83a 	sub	r9,r9,r6
10106ddc:	000b883a 	mov	r5,zero
10106de0:	21c00017 	ldw	r7,0(r4)
10106de4:	1815883a 	mov	r10,r3
10106de8:	18c00104 	addi	r3,r3,4
10106dec:	398e983a 	sll	r7,r7,r6
10106df0:	21000104 	addi	r4,r4,4
10106df4:	394ab03a 	or	r5,r7,r5
10106df8:	197fff15 	stw	r5,-4(r3)
10106dfc:	217fff17 	ldw	r5,-4(r4)
10106e00:	2a4ad83a 	srl	r5,r5,r9
10106e04:	223ff636 	bltu	r4,r8,10106de0 <__alt_data_end+0xfffe6de0>
10106e08:	51400115 	stw	r5,4(r10)
10106e0c:	28001a1e 	bne	r5,zero,10106e78 <__lshift+0x140>
10106e10:	843fffc4 	addi	r16,r16,-1
10106e14:	14000415 	stw	r16,16(r2)
10106e18:	88000826 	beq	r17,zero,10106e3c <__lshift+0x104>
10106e1c:	89000117 	ldw	r4,4(r17)
10106e20:	90c01317 	ldw	r3,76(r18)
10106e24:	2109883a 	add	r4,r4,r4
10106e28:	2109883a 	add	r4,r4,r4
10106e2c:	1907883a 	add	r3,r3,r4
10106e30:	19000017 	ldw	r4,0(r3)
10106e34:	89000015 	stw	r4,0(r17)
10106e38:	1c400015 	stw	r17,0(r3)
10106e3c:	dfc00617 	ldw	ra,24(sp)
10106e40:	dd400517 	ldw	r21,20(sp)
10106e44:	dd000417 	ldw	r20,16(sp)
10106e48:	dcc00317 	ldw	r19,12(sp)
10106e4c:	dc800217 	ldw	r18,8(sp)
10106e50:	dc400117 	ldw	r17,4(sp)
10106e54:	dc000017 	ldw	r16,0(sp)
10106e58:	dec00704 	addi	sp,sp,28
10106e5c:	f800283a 	ret
10106e60:	21400017 	ldw	r5,0(r4)
10106e64:	18c00104 	addi	r3,r3,4
10106e68:	21000104 	addi	r4,r4,4
10106e6c:	197fff15 	stw	r5,-4(r3)
10106e70:	223ffb36 	bltu	r4,r8,10106e60 <__alt_data_end+0xfffe6e60>
10106e74:	003fe606 	br	10106e10 <__alt_data_end+0xfffe6e10>
10106e78:	9c000084 	addi	r16,r19,2
10106e7c:	003fe406 	br	10106e10 <__alt_data_end+0xfffe6e10>

10106e80 <__mcmp>:
10106e80:	20800417 	ldw	r2,16(r4)
10106e84:	28c00417 	ldw	r3,16(r5)
10106e88:	10c5c83a 	sub	r2,r2,r3
10106e8c:	1000111e 	bne	r2,zero,10106ed4 <__mcmp+0x54>
10106e90:	18c7883a 	add	r3,r3,r3
10106e94:	18c7883a 	add	r3,r3,r3
10106e98:	21000504 	addi	r4,r4,20
10106e9c:	29400504 	addi	r5,r5,20
10106ea0:	20c5883a 	add	r2,r4,r3
10106ea4:	28cb883a 	add	r5,r5,r3
10106ea8:	00000106 	br	10106eb0 <__mcmp+0x30>
10106eac:	20800a2e 	bgeu	r4,r2,10106ed8 <__mcmp+0x58>
10106eb0:	10bfff04 	addi	r2,r2,-4
10106eb4:	297fff04 	addi	r5,r5,-4
10106eb8:	11800017 	ldw	r6,0(r2)
10106ebc:	28c00017 	ldw	r3,0(r5)
10106ec0:	30fffa26 	beq	r6,r3,10106eac <__alt_data_end+0xfffe6eac>
10106ec4:	30c00236 	bltu	r6,r3,10106ed0 <__mcmp+0x50>
10106ec8:	00800044 	movi	r2,1
10106ecc:	f800283a 	ret
10106ed0:	00bfffc4 	movi	r2,-1
10106ed4:	f800283a 	ret
10106ed8:	0005883a 	mov	r2,zero
10106edc:	f800283a 	ret

10106ee0 <__mdiff>:
10106ee0:	28c00417 	ldw	r3,16(r5)
10106ee4:	30800417 	ldw	r2,16(r6)
10106ee8:	defffa04 	addi	sp,sp,-24
10106eec:	dcc00315 	stw	r19,12(sp)
10106ef0:	dc800215 	stw	r18,8(sp)
10106ef4:	dfc00515 	stw	ra,20(sp)
10106ef8:	dd000415 	stw	r20,16(sp)
10106efc:	dc400115 	stw	r17,4(sp)
10106f00:	dc000015 	stw	r16,0(sp)
10106f04:	1887c83a 	sub	r3,r3,r2
10106f08:	2825883a 	mov	r18,r5
10106f0c:	3027883a 	mov	r19,r6
10106f10:	1800141e 	bne	r3,zero,10106f64 <__mdiff+0x84>
10106f14:	1085883a 	add	r2,r2,r2
10106f18:	1085883a 	add	r2,r2,r2
10106f1c:	2a000504 	addi	r8,r5,20
10106f20:	34000504 	addi	r16,r6,20
10106f24:	4087883a 	add	r3,r8,r2
10106f28:	8085883a 	add	r2,r16,r2
10106f2c:	00000106 	br	10106f34 <__mdiff+0x54>
10106f30:	40c0592e 	bgeu	r8,r3,10107098 <__mdiff+0x1b8>
10106f34:	18ffff04 	addi	r3,r3,-4
10106f38:	10bfff04 	addi	r2,r2,-4
10106f3c:	19c00017 	ldw	r7,0(r3)
10106f40:	11400017 	ldw	r5,0(r2)
10106f44:	397ffa26 	beq	r7,r5,10106f30 <__alt_data_end+0xfffe6f30>
10106f48:	3940592e 	bgeu	r7,r5,101070b0 <__mdiff+0x1d0>
10106f4c:	9005883a 	mov	r2,r18
10106f50:	4023883a 	mov	r17,r8
10106f54:	9825883a 	mov	r18,r19
10106f58:	05000044 	movi	r20,1
10106f5c:	1027883a 	mov	r19,r2
10106f60:	00000406 	br	10106f74 <__mdiff+0x94>
10106f64:	18005616 	blt	r3,zero,101070c0 <__mdiff+0x1e0>
10106f68:	34400504 	addi	r17,r6,20
10106f6c:	2c000504 	addi	r16,r5,20
10106f70:	0029883a 	mov	r20,zero
10106f74:	91400117 	ldw	r5,4(r18)
10106f78:	01065b80 	call	101065b8 <_Balloc>
10106f7c:	92400417 	ldw	r9,16(r18)
10106f80:	9b000417 	ldw	r12,16(r19)
10106f84:	12c00504 	addi	r11,r2,20
10106f88:	4a51883a 	add	r8,r9,r9
10106f8c:	6319883a 	add	r12,r12,r12
10106f90:	4211883a 	add	r8,r8,r8
10106f94:	6319883a 	add	r12,r12,r12
10106f98:	15000315 	stw	r20,12(r2)
10106f9c:	8211883a 	add	r8,r16,r8
10106fa0:	8b19883a 	add	r12,r17,r12
10106fa4:	0007883a 	mov	r3,zero
10106fa8:	81400017 	ldw	r5,0(r16)
10106fac:	89c00017 	ldw	r7,0(r17)
10106fb0:	59800104 	addi	r6,r11,4
10106fb4:	293fffcc 	andi	r4,r5,65535
10106fb8:	20c7883a 	add	r3,r4,r3
10106fbc:	393fffcc 	andi	r4,r7,65535
10106fc0:	1909c83a 	sub	r4,r3,r4
10106fc4:	280ad43a 	srli	r5,r5,16
10106fc8:	380ed43a 	srli	r7,r7,16
10106fcc:	2007d43a 	srai	r3,r4,16
10106fd0:	213fffcc 	andi	r4,r4,65535
10106fd4:	29cbc83a 	sub	r5,r5,r7
10106fd8:	28c7883a 	add	r3,r5,r3
10106fdc:	180a943a 	slli	r5,r3,16
10106fe0:	8c400104 	addi	r17,r17,4
10106fe4:	84000104 	addi	r16,r16,4
10106fe8:	2908b03a 	or	r4,r5,r4
10106fec:	59000015 	stw	r4,0(r11)
10106ff0:	1807d43a 	srai	r3,r3,16
10106ff4:	3015883a 	mov	r10,r6
10106ff8:	3017883a 	mov	r11,r6
10106ffc:	8b3fea36 	bltu	r17,r12,10106fa8 <__alt_data_end+0xfffe6fa8>
10107000:	8200162e 	bgeu	r16,r8,1010705c <__mdiff+0x17c>
10107004:	8017883a 	mov	r11,r16
10107008:	59400017 	ldw	r5,0(r11)
1010700c:	31800104 	addi	r6,r6,4
10107010:	5ac00104 	addi	r11,r11,4
10107014:	293fffcc 	andi	r4,r5,65535
10107018:	20c7883a 	add	r3,r4,r3
1010701c:	280ed43a 	srli	r7,r5,16
10107020:	180bd43a 	srai	r5,r3,16
10107024:	193fffcc 	andi	r4,r3,65535
10107028:	3947883a 	add	r3,r7,r5
1010702c:	180a943a 	slli	r5,r3,16
10107030:	1807d43a 	srai	r3,r3,16
10107034:	2908b03a 	or	r4,r5,r4
10107038:	313fff15 	stw	r4,-4(r6)
1010703c:	5a3ff236 	bltu	r11,r8,10107008 <__alt_data_end+0xfffe7008>
10107040:	0406303a 	nor	r3,zero,r16
10107044:	1a07883a 	add	r3,r3,r8
10107048:	1806d0ba 	srli	r3,r3,2
1010704c:	18c00044 	addi	r3,r3,1
10107050:	18c7883a 	add	r3,r3,r3
10107054:	18c7883a 	add	r3,r3,r3
10107058:	50d5883a 	add	r10,r10,r3
1010705c:	50ffff04 	addi	r3,r10,-4
10107060:	2000041e 	bne	r4,zero,10107074 <__mdiff+0x194>
10107064:	18ffff04 	addi	r3,r3,-4
10107068:	19000017 	ldw	r4,0(r3)
1010706c:	4a7fffc4 	addi	r9,r9,-1
10107070:	203ffc26 	beq	r4,zero,10107064 <__alt_data_end+0xfffe7064>
10107074:	12400415 	stw	r9,16(r2)
10107078:	dfc00517 	ldw	ra,20(sp)
1010707c:	dd000417 	ldw	r20,16(sp)
10107080:	dcc00317 	ldw	r19,12(sp)
10107084:	dc800217 	ldw	r18,8(sp)
10107088:	dc400117 	ldw	r17,4(sp)
1010708c:	dc000017 	ldw	r16,0(sp)
10107090:	dec00604 	addi	sp,sp,24
10107094:	f800283a 	ret
10107098:	000b883a 	mov	r5,zero
1010709c:	01065b80 	call	101065b8 <_Balloc>
101070a0:	00c00044 	movi	r3,1
101070a4:	10c00415 	stw	r3,16(r2)
101070a8:	10000515 	stw	zero,20(r2)
101070ac:	003ff206 	br	10107078 <__alt_data_end+0xfffe7078>
101070b0:	8023883a 	mov	r17,r16
101070b4:	0029883a 	mov	r20,zero
101070b8:	4021883a 	mov	r16,r8
101070bc:	003fad06 	br	10106f74 <__alt_data_end+0xfffe6f74>
101070c0:	9005883a 	mov	r2,r18
101070c4:	94400504 	addi	r17,r18,20
101070c8:	9c000504 	addi	r16,r19,20
101070cc:	9825883a 	mov	r18,r19
101070d0:	05000044 	movi	r20,1
101070d4:	1027883a 	mov	r19,r2
101070d8:	003fa606 	br	10106f74 <__alt_data_end+0xfffe6f74>

101070dc <__ulp>:
101070dc:	295ffc2c 	andhi	r5,r5,32752
101070e0:	00bf3034 	movhi	r2,64704
101070e4:	2887883a 	add	r3,r5,r2
101070e8:	00c0020e 	bge	zero,r3,101070f4 <__ulp+0x18>
101070ec:	0005883a 	mov	r2,zero
101070f0:	f800283a 	ret
101070f4:	00c7c83a 	sub	r3,zero,r3
101070f8:	1807d53a 	srai	r3,r3,20
101070fc:	008004c4 	movi	r2,19
10107100:	10c00b0e 	bge	r2,r3,10107130 <__ulp+0x54>
10107104:	18bffb04 	addi	r2,r3,-20
10107108:	01000784 	movi	r4,30
1010710c:	0007883a 	mov	r3,zero
10107110:	20800516 	blt	r4,r2,10107128 <__ulp+0x4c>
10107114:	010007c4 	movi	r4,31
10107118:	2089c83a 	sub	r4,r4,r2
1010711c:	00800044 	movi	r2,1
10107120:	1104983a 	sll	r2,r2,r4
10107124:	f800283a 	ret
10107128:	00800044 	movi	r2,1
1010712c:	f800283a 	ret
10107130:	01400234 	movhi	r5,8
10107134:	28c7d83a 	sra	r3,r5,r3
10107138:	0005883a 	mov	r2,zero
1010713c:	f800283a 	ret

10107140 <__b2d>:
10107140:	defffa04 	addi	sp,sp,-24
10107144:	dc000015 	stw	r16,0(sp)
10107148:	24000417 	ldw	r16,16(r4)
1010714c:	dc400115 	stw	r17,4(sp)
10107150:	24400504 	addi	r17,r4,20
10107154:	8421883a 	add	r16,r16,r16
10107158:	8421883a 	add	r16,r16,r16
1010715c:	8c21883a 	add	r16,r17,r16
10107160:	dc800215 	stw	r18,8(sp)
10107164:	84bfff17 	ldw	r18,-4(r16)
10107168:	dd000415 	stw	r20,16(sp)
1010716c:	dcc00315 	stw	r19,12(sp)
10107170:	9009883a 	mov	r4,r18
10107174:	2829883a 	mov	r20,r5
10107178:	dfc00515 	stw	ra,20(sp)
1010717c:	01068ac0 	call	101068ac <__hi0bits>
10107180:	00c00804 	movi	r3,32
10107184:	1889c83a 	sub	r4,r3,r2
10107188:	a1000015 	stw	r4,0(r20)
1010718c:	01000284 	movi	r4,10
10107190:	84ffff04 	addi	r19,r16,-4
10107194:	20801216 	blt	r4,r2,101071e0 <__b2d+0xa0>
10107198:	018002c4 	movi	r6,11
1010719c:	308dc83a 	sub	r6,r6,r2
101071a0:	9186d83a 	srl	r3,r18,r6
101071a4:	18cffc34 	orhi	r3,r3,16368
101071a8:	8cc0212e 	bgeu	r17,r19,10107230 <__b2d+0xf0>
101071ac:	813ffe17 	ldw	r4,-8(r16)
101071b0:	218cd83a 	srl	r6,r4,r6
101071b4:	10800544 	addi	r2,r2,21
101071b8:	9084983a 	sll	r2,r18,r2
101071bc:	1184b03a 	or	r2,r2,r6
101071c0:	dfc00517 	ldw	ra,20(sp)
101071c4:	dd000417 	ldw	r20,16(sp)
101071c8:	dcc00317 	ldw	r19,12(sp)
101071cc:	dc800217 	ldw	r18,8(sp)
101071d0:	dc400117 	ldw	r17,4(sp)
101071d4:	dc000017 	ldw	r16,0(sp)
101071d8:	dec00604 	addi	sp,sp,24
101071dc:	f800283a 	ret
101071e0:	8cc00f2e 	bgeu	r17,r19,10107220 <__b2d+0xe0>
101071e4:	117ffd44 	addi	r5,r2,-11
101071e8:	80bffe17 	ldw	r2,-8(r16)
101071ec:	28000e26 	beq	r5,zero,10107228 <__b2d+0xe8>
101071f0:	1949c83a 	sub	r4,r3,r5
101071f4:	9164983a 	sll	r18,r18,r5
101071f8:	1106d83a 	srl	r3,r2,r4
101071fc:	81bffe04 	addi	r6,r16,-8
10107200:	948ffc34 	orhi	r18,r18,16368
10107204:	90c6b03a 	or	r3,r18,r3
10107208:	89800e2e 	bgeu	r17,r6,10107244 <__b2d+0x104>
1010720c:	81bffd17 	ldw	r6,-12(r16)
10107210:	1144983a 	sll	r2,r2,r5
10107214:	310ad83a 	srl	r5,r6,r4
10107218:	2884b03a 	or	r2,r5,r2
1010721c:	003fe806 	br	101071c0 <__alt_data_end+0xfffe71c0>
10107220:	10bffd44 	addi	r2,r2,-11
10107224:	1000041e 	bne	r2,zero,10107238 <__b2d+0xf8>
10107228:	90cffc34 	orhi	r3,r18,16368
1010722c:	003fe406 	br	101071c0 <__alt_data_end+0xfffe71c0>
10107230:	000d883a 	mov	r6,zero
10107234:	003fdf06 	br	101071b4 <__alt_data_end+0xfffe71b4>
10107238:	90a4983a 	sll	r18,r18,r2
1010723c:	0005883a 	mov	r2,zero
10107240:	003ff906 	br	10107228 <__alt_data_end+0xfffe7228>
10107244:	1144983a 	sll	r2,r2,r5
10107248:	003fdd06 	br	101071c0 <__alt_data_end+0xfffe71c0>

1010724c <__d2b>:
1010724c:	defff804 	addi	sp,sp,-32
10107250:	dc000215 	stw	r16,8(sp)
10107254:	3021883a 	mov	r16,r6
10107258:	dc400315 	stw	r17,12(sp)
1010725c:	8022907a 	slli	r17,r16,1
10107260:	dd000615 	stw	r20,24(sp)
10107264:	2829883a 	mov	r20,r5
10107268:	01400044 	movi	r5,1
1010726c:	dcc00515 	stw	r19,20(sp)
10107270:	dc800415 	stw	r18,16(sp)
10107274:	dfc00715 	stw	ra,28(sp)
10107278:	3825883a 	mov	r18,r7
1010727c:	8822d57a 	srli	r17,r17,21
10107280:	01065b80 	call	101065b8 <_Balloc>
10107284:	1027883a 	mov	r19,r2
10107288:	00800434 	movhi	r2,16
1010728c:	10bfffc4 	addi	r2,r2,-1
10107290:	808c703a 	and	r6,r16,r2
10107294:	88000126 	beq	r17,zero,1010729c <__d2b+0x50>
10107298:	31800434 	orhi	r6,r6,16
1010729c:	d9800015 	stw	r6,0(sp)
101072a0:	a0002426 	beq	r20,zero,10107334 <__d2b+0xe8>
101072a4:	d9000104 	addi	r4,sp,4
101072a8:	dd000115 	stw	r20,4(sp)
101072ac:	01069140 	call	10106914 <__lo0bits>
101072b0:	d8c00017 	ldw	r3,0(sp)
101072b4:	10002f1e 	bne	r2,zero,10107374 <__d2b+0x128>
101072b8:	d9000117 	ldw	r4,4(sp)
101072bc:	99000515 	stw	r4,20(r19)
101072c0:	1821003a 	cmpeq	r16,r3,zero
101072c4:	01000084 	movi	r4,2
101072c8:	2421c83a 	sub	r16,r4,r16
101072cc:	98c00615 	stw	r3,24(r19)
101072d0:	9c000415 	stw	r16,16(r19)
101072d4:	88001f1e 	bne	r17,zero,10107354 <__d2b+0x108>
101072d8:	10bef384 	addi	r2,r2,-1074
101072dc:	90800015 	stw	r2,0(r18)
101072e0:	00900034 	movhi	r2,16384
101072e4:	10bfffc4 	addi	r2,r2,-1
101072e8:	8085883a 	add	r2,r16,r2
101072ec:	1085883a 	add	r2,r2,r2
101072f0:	1085883a 	add	r2,r2,r2
101072f4:	9885883a 	add	r2,r19,r2
101072f8:	11000517 	ldw	r4,20(r2)
101072fc:	8020917a 	slli	r16,r16,5
10107300:	01068ac0 	call	101068ac <__hi0bits>
10107304:	d8c00817 	ldw	r3,32(sp)
10107308:	8085c83a 	sub	r2,r16,r2
1010730c:	18800015 	stw	r2,0(r3)
10107310:	9805883a 	mov	r2,r19
10107314:	dfc00717 	ldw	ra,28(sp)
10107318:	dd000617 	ldw	r20,24(sp)
1010731c:	dcc00517 	ldw	r19,20(sp)
10107320:	dc800417 	ldw	r18,16(sp)
10107324:	dc400317 	ldw	r17,12(sp)
10107328:	dc000217 	ldw	r16,8(sp)
1010732c:	dec00804 	addi	sp,sp,32
10107330:	f800283a 	ret
10107334:	d809883a 	mov	r4,sp
10107338:	01069140 	call	10106914 <__lo0bits>
1010733c:	d8c00017 	ldw	r3,0(sp)
10107340:	04000044 	movi	r16,1
10107344:	9c000415 	stw	r16,16(r19)
10107348:	98c00515 	stw	r3,20(r19)
1010734c:	10800804 	addi	r2,r2,32
10107350:	883fe126 	beq	r17,zero,101072d8 <__alt_data_end+0xfffe72d8>
10107354:	00c00d44 	movi	r3,53
10107358:	8c7ef344 	addi	r17,r17,-1075
1010735c:	88a3883a 	add	r17,r17,r2
10107360:	1885c83a 	sub	r2,r3,r2
10107364:	d8c00817 	ldw	r3,32(sp)
10107368:	94400015 	stw	r17,0(r18)
1010736c:	18800015 	stw	r2,0(r3)
10107370:	003fe706 	br	10107310 <__alt_data_end+0xfffe7310>
10107374:	01000804 	movi	r4,32
10107378:	2089c83a 	sub	r4,r4,r2
1010737c:	1908983a 	sll	r4,r3,r4
10107380:	d9400117 	ldw	r5,4(sp)
10107384:	1886d83a 	srl	r3,r3,r2
10107388:	2148b03a 	or	r4,r4,r5
1010738c:	99000515 	stw	r4,20(r19)
10107390:	d8c00015 	stw	r3,0(sp)
10107394:	003fca06 	br	101072c0 <__alt_data_end+0xfffe72c0>

10107398 <__ratio>:
10107398:	defff904 	addi	sp,sp,-28
1010739c:	dc400315 	stw	r17,12(sp)
101073a0:	2823883a 	mov	r17,r5
101073a4:	d9400104 	addi	r5,sp,4
101073a8:	dfc00615 	stw	ra,24(sp)
101073ac:	dcc00515 	stw	r19,20(sp)
101073b0:	dc800415 	stw	r18,16(sp)
101073b4:	2027883a 	mov	r19,r4
101073b8:	dc000215 	stw	r16,8(sp)
101073bc:	01071400 	call	10107140 <__b2d>
101073c0:	d80b883a 	mov	r5,sp
101073c4:	8809883a 	mov	r4,r17
101073c8:	1025883a 	mov	r18,r2
101073cc:	1821883a 	mov	r16,r3
101073d0:	01071400 	call	10107140 <__b2d>
101073d4:	8a000417 	ldw	r8,16(r17)
101073d8:	99000417 	ldw	r4,16(r19)
101073dc:	d9400117 	ldw	r5,4(sp)
101073e0:	2209c83a 	sub	r4,r4,r8
101073e4:	2010917a 	slli	r8,r4,5
101073e8:	d9000017 	ldw	r4,0(sp)
101073ec:	2909c83a 	sub	r4,r5,r4
101073f0:	4109883a 	add	r4,r8,r4
101073f4:	01000e0e 	bge	zero,r4,10107430 <__ratio+0x98>
101073f8:	2008953a 	slli	r4,r4,20
101073fc:	2421883a 	add	r16,r4,r16
10107400:	100d883a 	mov	r6,r2
10107404:	180f883a 	mov	r7,r3
10107408:	9009883a 	mov	r4,r18
1010740c:	800b883a 	mov	r5,r16
10107410:	010b2840 	call	1010b284 <__divdf3>
10107414:	dfc00617 	ldw	ra,24(sp)
10107418:	dcc00517 	ldw	r19,20(sp)
1010741c:	dc800417 	ldw	r18,16(sp)
10107420:	dc400317 	ldw	r17,12(sp)
10107424:	dc000217 	ldw	r16,8(sp)
10107428:	dec00704 	addi	sp,sp,28
1010742c:	f800283a 	ret
10107430:	2008953a 	slli	r4,r4,20
10107434:	1907c83a 	sub	r3,r3,r4
10107438:	003ff106 	br	10107400 <__alt_data_end+0xfffe7400>

1010743c <_mprec_log10>:
1010743c:	defffe04 	addi	sp,sp,-8
10107440:	dc000015 	stw	r16,0(sp)
10107444:	dfc00115 	stw	ra,4(sp)
10107448:	008005c4 	movi	r2,23
1010744c:	2021883a 	mov	r16,r4
10107450:	11000d0e 	bge	r2,r4,10107488 <_mprec_log10+0x4c>
10107454:	0005883a 	mov	r2,zero
10107458:	00cffc34 	movhi	r3,16368
1010745c:	843fffc4 	addi	r16,r16,-1
10107460:	000d883a 	mov	r6,zero
10107464:	01d00934 	movhi	r7,16420
10107468:	1009883a 	mov	r4,r2
1010746c:	180b883a 	mov	r5,r3
10107470:	010bdc40 	call	1010bdc4 <__muldf3>
10107474:	803ff91e 	bne	r16,zero,1010745c <__alt_data_end+0xfffe745c>
10107478:	dfc00117 	ldw	ra,4(sp)
1010747c:	dc000017 	ldw	r16,0(sp)
10107480:	dec00204 	addi	sp,sp,8
10107484:	f800283a 	ret
10107488:	202090fa 	slli	r16,r4,3
1010748c:	00840474 	movhi	r2,4113
10107490:	10be4304 	addi	r2,r2,-1780
10107494:	1421883a 	add	r16,r2,r16
10107498:	80800017 	ldw	r2,0(r16)
1010749c:	80c00117 	ldw	r3,4(r16)
101074a0:	dfc00117 	ldw	ra,4(sp)
101074a4:	dc000017 	ldw	r16,0(sp)
101074a8:	dec00204 	addi	sp,sp,8
101074ac:	f800283a 	ret

101074b0 <__copybits>:
101074b0:	297fffc4 	addi	r5,r5,-1
101074b4:	280fd17a 	srai	r7,r5,5
101074b8:	30c00417 	ldw	r3,16(r6)
101074bc:	30800504 	addi	r2,r6,20
101074c0:	39c00044 	addi	r7,r7,1
101074c4:	18c7883a 	add	r3,r3,r3
101074c8:	39cf883a 	add	r7,r7,r7
101074cc:	18c7883a 	add	r3,r3,r3
101074d0:	39cf883a 	add	r7,r7,r7
101074d4:	10c7883a 	add	r3,r2,r3
101074d8:	21cf883a 	add	r7,r4,r7
101074dc:	10c00d2e 	bgeu	r2,r3,10107514 <__copybits+0x64>
101074e0:	200b883a 	mov	r5,r4
101074e4:	12000017 	ldw	r8,0(r2)
101074e8:	29400104 	addi	r5,r5,4
101074ec:	10800104 	addi	r2,r2,4
101074f0:	2a3fff15 	stw	r8,-4(r5)
101074f4:	10fffb36 	bltu	r2,r3,101074e4 <__alt_data_end+0xfffe74e4>
101074f8:	1985c83a 	sub	r2,r3,r6
101074fc:	10bffac4 	addi	r2,r2,-21
10107500:	1004d0ba 	srli	r2,r2,2
10107504:	10800044 	addi	r2,r2,1
10107508:	1085883a 	add	r2,r2,r2
1010750c:	1085883a 	add	r2,r2,r2
10107510:	2089883a 	add	r4,r4,r2
10107514:	21c0032e 	bgeu	r4,r7,10107524 <__copybits+0x74>
10107518:	20000015 	stw	zero,0(r4)
1010751c:	21000104 	addi	r4,r4,4
10107520:	21fffd36 	bltu	r4,r7,10107518 <__alt_data_end+0xfffe7518>
10107524:	f800283a 	ret

10107528 <__any_on>:
10107528:	20c00417 	ldw	r3,16(r4)
1010752c:	2805d17a 	srai	r2,r5,5
10107530:	21000504 	addi	r4,r4,20
10107534:	18800d0e 	bge	r3,r2,1010756c <__any_on+0x44>
10107538:	18c7883a 	add	r3,r3,r3
1010753c:	18c7883a 	add	r3,r3,r3
10107540:	20c7883a 	add	r3,r4,r3
10107544:	20c0192e 	bgeu	r4,r3,101075ac <__any_on+0x84>
10107548:	18bfff17 	ldw	r2,-4(r3)
1010754c:	18ffff04 	addi	r3,r3,-4
10107550:	1000041e 	bne	r2,zero,10107564 <__any_on+0x3c>
10107554:	20c0142e 	bgeu	r4,r3,101075a8 <__any_on+0x80>
10107558:	18ffff04 	addi	r3,r3,-4
1010755c:	19400017 	ldw	r5,0(r3)
10107560:	283ffc26 	beq	r5,zero,10107554 <__alt_data_end+0xfffe7554>
10107564:	00800044 	movi	r2,1
10107568:	f800283a 	ret
1010756c:	10c00a0e 	bge	r2,r3,10107598 <__any_on+0x70>
10107570:	1085883a 	add	r2,r2,r2
10107574:	1085883a 	add	r2,r2,r2
10107578:	294007cc 	andi	r5,r5,31
1010757c:	2087883a 	add	r3,r4,r2
10107580:	283ff026 	beq	r5,zero,10107544 <__alt_data_end+0xfffe7544>
10107584:	19800017 	ldw	r6,0(r3)
10107588:	3144d83a 	srl	r2,r6,r5
1010758c:	114a983a 	sll	r5,r2,r5
10107590:	317ff41e 	bne	r6,r5,10107564 <__alt_data_end+0xfffe7564>
10107594:	003feb06 	br	10107544 <__alt_data_end+0xfffe7544>
10107598:	1085883a 	add	r2,r2,r2
1010759c:	1085883a 	add	r2,r2,r2
101075a0:	2087883a 	add	r3,r4,r2
101075a4:	003fe706 	br	10107544 <__alt_data_end+0xfffe7544>
101075a8:	f800283a 	ret
101075ac:	0005883a 	mov	r2,zero
101075b0:	f800283a 	ret

101075b4 <_realloc_r>:
101075b4:	defff604 	addi	sp,sp,-40
101075b8:	dc400115 	stw	r17,4(sp)
101075bc:	dfc00915 	stw	ra,36(sp)
101075c0:	df000815 	stw	fp,32(sp)
101075c4:	ddc00715 	stw	r23,28(sp)
101075c8:	dd800615 	stw	r22,24(sp)
101075cc:	dd400515 	stw	r21,20(sp)
101075d0:	dd000415 	stw	r20,16(sp)
101075d4:	dcc00315 	stw	r19,12(sp)
101075d8:	dc800215 	stw	r18,8(sp)
101075dc:	dc000015 	stw	r16,0(sp)
101075e0:	3023883a 	mov	r17,r6
101075e4:	2800b626 	beq	r5,zero,101078c0 <_realloc_r+0x30c>
101075e8:	2829883a 	mov	r20,r5
101075ec:	2025883a 	mov	r18,r4
101075f0:	010d60c0 	call	1010d60c <__malloc_lock>
101075f4:	a0ffff17 	ldw	r3,-4(r20)
101075f8:	043fff04 	movi	r16,-4
101075fc:	888002c4 	addi	r2,r17,11
10107600:	01000584 	movi	r4,22
10107604:	a57ffe04 	addi	r21,r20,-8
10107608:	1c20703a 	and	r16,r3,r16
1010760c:	2080332e 	bgeu	r4,r2,101076dc <_realloc_r+0x128>
10107610:	05bffe04 	movi	r22,-8
10107614:	15ac703a 	and	r22,r2,r22
10107618:	b005883a 	mov	r2,r22
1010761c:	b0005716 	blt	r22,zero,1010777c <_realloc_r+0x1c8>
10107620:	b4405636 	bltu	r22,r17,1010777c <_realloc_r+0x1c8>
10107624:	8080300e 	bge	r16,r2,101076e8 <_realloc_r+0x134>
10107628:	07040474 	movhi	fp,4113
1010762c:	e73ff104 	addi	fp,fp,-60
10107630:	e2000217 	ldw	r8,8(fp)
10107634:	ac09883a 	add	r4,r21,r16
10107638:	22006126 	beq	r4,r8,101077c0 <_realloc_r+0x20c>
1010763c:	22400117 	ldw	r9,4(r4)
10107640:	01ffff84 	movi	r7,-2
10107644:	49ce703a 	and	r7,r9,r7
10107648:	21cf883a 	add	r7,r4,r7
1010764c:	39800117 	ldw	r6,4(r7)
10107650:	3180004c 	andi	r6,r6,1
10107654:	30003e26 	beq	r6,zero,10107750 <_realloc_r+0x19c>
10107658:	18c0004c 	andi	r3,r3,1
1010765c:	18008126 	beq	r3,zero,10107864 <_realloc_r+0x2b0>
10107660:	880b883a 	mov	r5,r17
10107664:	9009883a 	mov	r4,r18
10107668:	01058fc0 	call	101058fc <_malloc_r>
1010766c:	1023883a 	mov	r17,r2
10107670:	10011e26 	beq	r2,zero,10107aec <_realloc_r+0x538>
10107674:	a0ffff17 	ldw	r3,-4(r20)
10107678:	113ffe04 	addi	r4,r2,-8
1010767c:	00bfff84 	movi	r2,-2
10107680:	1884703a 	and	r2,r3,r2
10107684:	a885883a 	add	r2,r21,r2
10107688:	2080ee26 	beq	r4,r2,10107a44 <_realloc_r+0x490>
1010768c:	81bfff04 	addi	r6,r16,-4
10107690:	00800904 	movi	r2,36
10107694:	1180b836 	bltu	r2,r6,10107978 <_realloc_r+0x3c4>
10107698:	00c004c4 	movi	r3,19
1010769c:	19809536 	bltu	r3,r6,101078f4 <_realloc_r+0x340>
101076a0:	8805883a 	mov	r2,r17
101076a4:	a007883a 	mov	r3,r20
101076a8:	19000017 	ldw	r4,0(r3)
101076ac:	11000015 	stw	r4,0(r2)
101076b0:	19000117 	ldw	r4,4(r3)
101076b4:	11000115 	stw	r4,4(r2)
101076b8:	18c00217 	ldw	r3,8(r3)
101076bc:	10c00215 	stw	r3,8(r2)
101076c0:	a00b883a 	mov	r5,r20
101076c4:	9009883a 	mov	r4,r18
101076c8:	0104d100 	call	10104d10 <_free_r>
101076cc:	9009883a 	mov	r4,r18
101076d0:	010d6300 	call	1010d630 <__malloc_unlock>
101076d4:	8805883a 	mov	r2,r17
101076d8:	00001106 	br	10107720 <_realloc_r+0x16c>
101076dc:	00800404 	movi	r2,16
101076e0:	102d883a 	mov	r22,r2
101076e4:	003fce06 	br	10107620 <__alt_data_end+0xfffe7620>
101076e8:	a023883a 	mov	r17,r20
101076ec:	858fc83a 	sub	r7,r16,r22
101076f0:	008003c4 	movi	r2,15
101076f4:	18c0004c 	andi	r3,r3,1
101076f8:	11c02436 	bltu	r2,r7,1010778c <_realloc_r+0x1d8>
101076fc:	1c06b03a 	or	r3,r3,r16
10107700:	a8c00115 	stw	r3,4(r21)
10107704:	ac21883a 	add	r16,r21,r16
10107708:	80800117 	ldw	r2,4(r16)
1010770c:	10800054 	ori	r2,r2,1
10107710:	80800115 	stw	r2,4(r16)
10107714:	9009883a 	mov	r4,r18
10107718:	010d6300 	call	1010d630 <__malloc_unlock>
1010771c:	8805883a 	mov	r2,r17
10107720:	dfc00917 	ldw	ra,36(sp)
10107724:	df000817 	ldw	fp,32(sp)
10107728:	ddc00717 	ldw	r23,28(sp)
1010772c:	dd800617 	ldw	r22,24(sp)
10107730:	dd400517 	ldw	r21,20(sp)
10107734:	dd000417 	ldw	r20,16(sp)
10107738:	dcc00317 	ldw	r19,12(sp)
1010773c:	dc800217 	ldw	r18,8(sp)
10107740:	dc400117 	ldw	r17,4(sp)
10107744:	dc000017 	ldw	r16,0(sp)
10107748:	dec00a04 	addi	sp,sp,40
1010774c:	f800283a 	ret
10107750:	017fff04 	movi	r5,-4
10107754:	494a703a 	and	r5,r9,r5
10107758:	814d883a 	add	r6,r16,r5
1010775c:	30801e16 	blt	r6,r2,101077d8 <_realloc_r+0x224>
10107760:	20800317 	ldw	r2,12(r4)
10107764:	21000217 	ldw	r4,8(r4)
10107768:	a023883a 	mov	r17,r20
1010776c:	3021883a 	mov	r16,r6
10107770:	20800315 	stw	r2,12(r4)
10107774:	11000215 	stw	r4,8(r2)
10107778:	003fdc06 	br	101076ec <__alt_data_end+0xfffe76ec>
1010777c:	00800304 	movi	r2,12
10107780:	90800015 	stw	r2,0(r18)
10107784:	0005883a 	mov	r2,zero
10107788:	003fe506 	br	10107720 <__alt_data_end+0xfffe7720>
1010778c:	1d86b03a 	or	r3,r3,r22
10107790:	a8c00115 	stw	r3,4(r21)
10107794:	ad8b883a 	add	r5,r21,r22
10107798:	38c00054 	ori	r3,r7,1
1010779c:	28c00115 	stw	r3,4(r5)
101077a0:	29cf883a 	add	r7,r5,r7
101077a4:	38c00117 	ldw	r3,4(r7)
101077a8:	29400204 	addi	r5,r5,8
101077ac:	9009883a 	mov	r4,r18
101077b0:	18800054 	ori	r2,r3,1
101077b4:	38800115 	stw	r2,4(r7)
101077b8:	0104d100 	call	10104d10 <_free_r>
101077bc:	003fd506 	br	10107714 <__alt_data_end+0xfffe7714>
101077c0:	21c00117 	ldw	r7,4(r4)
101077c4:	017fff04 	movi	r5,-4
101077c8:	b1800404 	addi	r6,r22,16
101077cc:	394a703a 	and	r5,r7,r5
101077d0:	814f883a 	add	r7,r16,r5
101077d4:	39805b0e 	bge	r7,r6,10107944 <_realloc_r+0x390>
101077d8:	18c0004c 	andi	r3,r3,1
101077dc:	183fa01e 	bne	r3,zero,10107660 <__alt_data_end+0xfffe7660>
101077e0:	a4fffe17 	ldw	r19,-8(r20)
101077e4:	00ffff04 	movi	r3,-4
101077e8:	ace7c83a 	sub	r19,r21,r19
101077ec:	99800117 	ldw	r6,4(r19)
101077f0:	30c6703a 	and	r3,r6,r3
101077f4:	20002026 	beq	r4,zero,10107878 <_realloc_r+0x2c4>
101077f8:	80ef883a 	add	r23,r16,r3
101077fc:	b96f883a 	add	r23,r23,r5
10107800:	22006126 	beq	r4,r8,10107988 <_realloc_r+0x3d4>
10107804:	b8801c16 	blt	r23,r2,10107878 <_realloc_r+0x2c4>
10107808:	20800317 	ldw	r2,12(r4)
1010780c:	20c00217 	ldw	r3,8(r4)
10107810:	81bfff04 	addi	r6,r16,-4
10107814:	01000904 	movi	r4,36
10107818:	18800315 	stw	r2,12(r3)
1010781c:	10c00215 	stw	r3,8(r2)
10107820:	98c00217 	ldw	r3,8(r19)
10107824:	98800317 	ldw	r2,12(r19)
10107828:	9c400204 	addi	r17,r19,8
1010782c:	18800315 	stw	r2,12(r3)
10107830:	10c00215 	stw	r3,8(r2)
10107834:	21801b36 	bltu	r4,r6,101078a4 <_realloc_r+0x2f0>
10107838:	008004c4 	movi	r2,19
1010783c:	1180362e 	bgeu	r2,r6,10107918 <_realloc_r+0x364>
10107840:	a0800017 	ldw	r2,0(r20)
10107844:	98800215 	stw	r2,8(r19)
10107848:	a0800117 	ldw	r2,4(r20)
1010784c:	98800315 	stw	r2,12(r19)
10107850:	008006c4 	movi	r2,27
10107854:	11808136 	bltu	r2,r6,10107a5c <_realloc_r+0x4a8>
10107858:	98800404 	addi	r2,r19,16
1010785c:	a5000204 	addi	r20,r20,8
10107860:	00002e06 	br	1010791c <_realloc_r+0x368>
10107864:	a4fffe17 	ldw	r19,-8(r20)
10107868:	00ffff04 	movi	r3,-4
1010786c:	ace7c83a 	sub	r19,r21,r19
10107870:	99000117 	ldw	r4,4(r19)
10107874:	20c6703a 	and	r3,r4,r3
10107878:	983f7926 	beq	r19,zero,10107660 <__alt_data_end+0xfffe7660>
1010787c:	80ef883a 	add	r23,r16,r3
10107880:	b8bf7716 	blt	r23,r2,10107660 <__alt_data_end+0xfffe7660>
10107884:	98800317 	ldw	r2,12(r19)
10107888:	98c00217 	ldw	r3,8(r19)
1010788c:	81bfff04 	addi	r6,r16,-4
10107890:	01000904 	movi	r4,36
10107894:	18800315 	stw	r2,12(r3)
10107898:	10c00215 	stw	r3,8(r2)
1010789c:	9c400204 	addi	r17,r19,8
101078a0:	21bfe52e 	bgeu	r4,r6,10107838 <__alt_data_end+0xfffe7838>
101078a4:	a00b883a 	mov	r5,r20
101078a8:	8809883a 	mov	r4,r17
101078ac:	01063340 	call	10106334 <memmove>
101078b0:	98c00117 	ldw	r3,4(r19)
101078b4:	b821883a 	mov	r16,r23
101078b8:	982b883a 	mov	r21,r19
101078bc:	003f8b06 	br	101076ec <__alt_data_end+0xfffe76ec>
101078c0:	300b883a 	mov	r5,r6
101078c4:	dfc00917 	ldw	ra,36(sp)
101078c8:	df000817 	ldw	fp,32(sp)
101078cc:	ddc00717 	ldw	r23,28(sp)
101078d0:	dd800617 	ldw	r22,24(sp)
101078d4:	dd400517 	ldw	r21,20(sp)
101078d8:	dd000417 	ldw	r20,16(sp)
101078dc:	dcc00317 	ldw	r19,12(sp)
101078e0:	dc800217 	ldw	r18,8(sp)
101078e4:	dc400117 	ldw	r17,4(sp)
101078e8:	dc000017 	ldw	r16,0(sp)
101078ec:	dec00a04 	addi	sp,sp,40
101078f0:	01058fc1 	jmpi	101058fc <_malloc_r>
101078f4:	a0c00017 	ldw	r3,0(r20)
101078f8:	88c00015 	stw	r3,0(r17)
101078fc:	a0c00117 	ldw	r3,4(r20)
10107900:	88c00115 	stw	r3,4(r17)
10107904:	00c006c4 	movi	r3,27
10107908:	19804636 	bltu	r3,r6,10107a24 <_realloc_r+0x470>
1010790c:	88800204 	addi	r2,r17,8
10107910:	a0c00204 	addi	r3,r20,8
10107914:	003f6406 	br	101076a8 <__alt_data_end+0xfffe76a8>
10107918:	8805883a 	mov	r2,r17
1010791c:	a0c00017 	ldw	r3,0(r20)
10107920:	b821883a 	mov	r16,r23
10107924:	982b883a 	mov	r21,r19
10107928:	10c00015 	stw	r3,0(r2)
1010792c:	a0c00117 	ldw	r3,4(r20)
10107930:	10c00115 	stw	r3,4(r2)
10107934:	a0c00217 	ldw	r3,8(r20)
10107938:	10c00215 	stw	r3,8(r2)
1010793c:	98c00117 	ldw	r3,4(r19)
10107940:	003f6a06 	br	101076ec <__alt_data_end+0xfffe76ec>
10107944:	adab883a 	add	r21,r21,r22
10107948:	3d85c83a 	sub	r2,r7,r22
1010794c:	e5400215 	stw	r21,8(fp)
10107950:	10800054 	ori	r2,r2,1
10107954:	a8800115 	stw	r2,4(r21)
10107958:	a0bfff17 	ldw	r2,-4(r20)
1010795c:	9009883a 	mov	r4,r18
10107960:	1080004c 	andi	r2,r2,1
10107964:	1584b03a 	or	r2,r2,r22
10107968:	a0bfff15 	stw	r2,-4(r20)
1010796c:	010d6300 	call	1010d630 <__malloc_unlock>
10107970:	a005883a 	mov	r2,r20
10107974:	003f6a06 	br	10107720 <__alt_data_end+0xfffe7720>
10107978:	a00b883a 	mov	r5,r20
1010797c:	8809883a 	mov	r4,r17
10107980:	01063340 	call	10106334 <memmove>
10107984:	003f4e06 	br	101076c0 <__alt_data_end+0xfffe76c0>
10107988:	b1000404 	addi	r4,r22,16
1010798c:	b93fba16 	blt	r23,r4,10107878 <__alt_data_end+0xfffe7878>
10107990:	98800317 	ldw	r2,12(r19)
10107994:	98c00217 	ldw	r3,8(r19)
10107998:	81bfff04 	addi	r6,r16,-4
1010799c:	01000904 	movi	r4,36
101079a0:	18800315 	stw	r2,12(r3)
101079a4:	10c00215 	stw	r3,8(r2)
101079a8:	9c400204 	addi	r17,r19,8
101079ac:	21804336 	bltu	r4,r6,10107abc <_realloc_r+0x508>
101079b0:	008004c4 	movi	r2,19
101079b4:	11803f2e 	bgeu	r2,r6,10107ab4 <_realloc_r+0x500>
101079b8:	a0800017 	ldw	r2,0(r20)
101079bc:	98800215 	stw	r2,8(r19)
101079c0:	a0800117 	ldw	r2,4(r20)
101079c4:	98800315 	stw	r2,12(r19)
101079c8:	008006c4 	movi	r2,27
101079cc:	11803f36 	bltu	r2,r6,10107acc <_realloc_r+0x518>
101079d0:	98800404 	addi	r2,r19,16
101079d4:	a5000204 	addi	r20,r20,8
101079d8:	a0c00017 	ldw	r3,0(r20)
101079dc:	10c00015 	stw	r3,0(r2)
101079e0:	a0c00117 	ldw	r3,4(r20)
101079e4:	10c00115 	stw	r3,4(r2)
101079e8:	a0c00217 	ldw	r3,8(r20)
101079ec:	10c00215 	stw	r3,8(r2)
101079f0:	9d87883a 	add	r3,r19,r22
101079f4:	bd85c83a 	sub	r2,r23,r22
101079f8:	e0c00215 	stw	r3,8(fp)
101079fc:	10800054 	ori	r2,r2,1
10107a00:	18800115 	stw	r2,4(r3)
10107a04:	98800117 	ldw	r2,4(r19)
10107a08:	9009883a 	mov	r4,r18
10107a0c:	1080004c 	andi	r2,r2,1
10107a10:	1584b03a 	or	r2,r2,r22
10107a14:	98800115 	stw	r2,4(r19)
10107a18:	010d6300 	call	1010d630 <__malloc_unlock>
10107a1c:	8805883a 	mov	r2,r17
10107a20:	003f3f06 	br	10107720 <__alt_data_end+0xfffe7720>
10107a24:	a0c00217 	ldw	r3,8(r20)
10107a28:	88c00215 	stw	r3,8(r17)
10107a2c:	a0c00317 	ldw	r3,12(r20)
10107a30:	88c00315 	stw	r3,12(r17)
10107a34:	30801126 	beq	r6,r2,10107a7c <_realloc_r+0x4c8>
10107a38:	88800404 	addi	r2,r17,16
10107a3c:	a0c00404 	addi	r3,r20,16
10107a40:	003f1906 	br	101076a8 <__alt_data_end+0xfffe76a8>
10107a44:	893fff17 	ldw	r4,-4(r17)
10107a48:	00bfff04 	movi	r2,-4
10107a4c:	a023883a 	mov	r17,r20
10107a50:	2084703a 	and	r2,r4,r2
10107a54:	80a1883a 	add	r16,r16,r2
10107a58:	003f2406 	br	101076ec <__alt_data_end+0xfffe76ec>
10107a5c:	a0800217 	ldw	r2,8(r20)
10107a60:	98800415 	stw	r2,16(r19)
10107a64:	a0800317 	ldw	r2,12(r20)
10107a68:	98800515 	stw	r2,20(r19)
10107a6c:	31000a26 	beq	r6,r4,10107a98 <_realloc_r+0x4e4>
10107a70:	98800604 	addi	r2,r19,24
10107a74:	a5000404 	addi	r20,r20,16
10107a78:	003fa806 	br	1010791c <__alt_data_end+0xfffe791c>
10107a7c:	a1000417 	ldw	r4,16(r20)
10107a80:	88800604 	addi	r2,r17,24
10107a84:	a0c00604 	addi	r3,r20,24
10107a88:	89000415 	stw	r4,16(r17)
10107a8c:	a1000517 	ldw	r4,20(r20)
10107a90:	89000515 	stw	r4,20(r17)
10107a94:	003f0406 	br	101076a8 <__alt_data_end+0xfffe76a8>
10107a98:	a0c00417 	ldw	r3,16(r20)
10107a9c:	a5000604 	addi	r20,r20,24
10107aa0:	98800804 	addi	r2,r19,32
10107aa4:	98c00615 	stw	r3,24(r19)
10107aa8:	a0ffff17 	ldw	r3,-4(r20)
10107aac:	98c00715 	stw	r3,28(r19)
10107ab0:	003f9a06 	br	1010791c <__alt_data_end+0xfffe791c>
10107ab4:	8805883a 	mov	r2,r17
10107ab8:	003fc706 	br	101079d8 <__alt_data_end+0xfffe79d8>
10107abc:	a00b883a 	mov	r5,r20
10107ac0:	8809883a 	mov	r4,r17
10107ac4:	01063340 	call	10106334 <memmove>
10107ac8:	003fc906 	br	101079f0 <__alt_data_end+0xfffe79f0>
10107acc:	a0800217 	ldw	r2,8(r20)
10107ad0:	98800415 	stw	r2,16(r19)
10107ad4:	a0800317 	ldw	r2,12(r20)
10107ad8:	98800515 	stw	r2,20(r19)
10107adc:	31000726 	beq	r6,r4,10107afc <_realloc_r+0x548>
10107ae0:	98800604 	addi	r2,r19,24
10107ae4:	a5000404 	addi	r20,r20,16
10107ae8:	003fbb06 	br	101079d8 <__alt_data_end+0xfffe79d8>
10107aec:	9009883a 	mov	r4,r18
10107af0:	010d6300 	call	1010d630 <__malloc_unlock>
10107af4:	0005883a 	mov	r2,zero
10107af8:	003f0906 	br	10107720 <__alt_data_end+0xfffe7720>
10107afc:	a0c00417 	ldw	r3,16(r20)
10107b00:	a5000604 	addi	r20,r20,24
10107b04:	98800804 	addi	r2,r19,32
10107b08:	98c00615 	stw	r3,24(r19)
10107b0c:	a0ffff17 	ldw	r3,-4(r20)
10107b10:	98c00715 	stw	r3,28(r19)
10107b14:	003fb006 	br	101079d8 <__alt_data_end+0xfffe79d8>

10107b18 <__fpclassifyd>:
10107b18:	00a00034 	movhi	r2,32768
10107b1c:	10bfffc4 	addi	r2,r2,-1
10107b20:	2884703a 	and	r2,r5,r2
10107b24:	10000726 	beq	r2,zero,10107b44 <__fpclassifyd+0x2c>
10107b28:	00fffc34 	movhi	r3,65520
10107b2c:	019ff834 	movhi	r6,32736
10107b30:	28c7883a 	add	r3,r5,r3
10107b34:	31bfffc4 	addi	r6,r6,-1
10107b38:	30c00536 	bltu	r6,r3,10107b50 <__fpclassifyd+0x38>
10107b3c:	00800104 	movi	r2,4
10107b40:	f800283a 	ret
10107b44:	2000021e 	bne	r4,zero,10107b50 <__fpclassifyd+0x38>
10107b48:	00800084 	movi	r2,2
10107b4c:	f800283a 	ret
10107b50:	00dffc34 	movhi	r3,32752
10107b54:	019ff834 	movhi	r6,32736
10107b58:	28cb883a 	add	r5,r5,r3
10107b5c:	31bfffc4 	addi	r6,r6,-1
10107b60:	317ff62e 	bgeu	r6,r5,10107b3c <__alt_data_end+0xfffe7b3c>
10107b64:	01400434 	movhi	r5,16
10107b68:	297fffc4 	addi	r5,r5,-1
10107b6c:	28800236 	bltu	r5,r2,10107b78 <__fpclassifyd+0x60>
10107b70:	008000c4 	movi	r2,3
10107b74:	f800283a 	ret
10107b78:	10c00226 	beq	r2,r3,10107b84 <__fpclassifyd+0x6c>
10107b7c:	0005883a 	mov	r2,zero
10107b80:	f800283a 	ret
10107b84:	2005003a 	cmpeq	r2,r4,zero
10107b88:	f800283a 	ret

10107b8c <_sbrk_r>:
10107b8c:	defffd04 	addi	sp,sp,-12
10107b90:	dc000015 	stw	r16,0(sp)
10107b94:	04040474 	movhi	r16,4113
10107b98:	dc400115 	stw	r17,4(sp)
10107b9c:	840c4604 	addi	r16,r16,12568
10107ba0:	2023883a 	mov	r17,r4
10107ba4:	2809883a 	mov	r4,r5
10107ba8:	dfc00215 	stw	ra,8(sp)
10107bac:	80000015 	stw	zero,0(r16)
10107bb0:	010d8040 	call	1010d804 <sbrk>
10107bb4:	00ffffc4 	movi	r3,-1
10107bb8:	10c00526 	beq	r2,r3,10107bd0 <_sbrk_r+0x44>
10107bbc:	dfc00217 	ldw	ra,8(sp)
10107bc0:	dc400117 	ldw	r17,4(sp)
10107bc4:	dc000017 	ldw	r16,0(sp)
10107bc8:	dec00304 	addi	sp,sp,12
10107bcc:	f800283a 	ret
10107bd0:	80c00017 	ldw	r3,0(r16)
10107bd4:	183ff926 	beq	r3,zero,10107bbc <__alt_data_end+0xfffe7bbc>
10107bd8:	88c00015 	stw	r3,0(r17)
10107bdc:	003ff706 	br	10107bbc <__alt_data_end+0xfffe7bbc>

10107be0 <__sread>:
10107be0:	defffe04 	addi	sp,sp,-8
10107be4:	dc000015 	stw	r16,0(sp)
10107be8:	2821883a 	mov	r16,r5
10107bec:	2940038f 	ldh	r5,14(r5)
10107bf0:	dfc00115 	stw	ra,4(sp)
10107bf4:	01099d40 	call	101099d4 <_read_r>
10107bf8:	10000716 	blt	r2,zero,10107c18 <__sread+0x38>
10107bfc:	80c01417 	ldw	r3,80(r16)
10107c00:	1887883a 	add	r3,r3,r2
10107c04:	80c01415 	stw	r3,80(r16)
10107c08:	dfc00117 	ldw	ra,4(sp)
10107c0c:	dc000017 	ldw	r16,0(sp)
10107c10:	dec00204 	addi	sp,sp,8
10107c14:	f800283a 	ret
10107c18:	80c0030b 	ldhu	r3,12(r16)
10107c1c:	18fbffcc 	andi	r3,r3,61439
10107c20:	80c0030d 	sth	r3,12(r16)
10107c24:	dfc00117 	ldw	ra,4(sp)
10107c28:	dc000017 	ldw	r16,0(sp)
10107c2c:	dec00204 	addi	sp,sp,8
10107c30:	f800283a 	ret

10107c34 <__seofread>:
10107c34:	0005883a 	mov	r2,zero
10107c38:	f800283a 	ret

10107c3c <__swrite>:
10107c3c:	2880030b 	ldhu	r2,12(r5)
10107c40:	defffb04 	addi	sp,sp,-20
10107c44:	dcc00315 	stw	r19,12(sp)
10107c48:	dc800215 	stw	r18,8(sp)
10107c4c:	dc400115 	stw	r17,4(sp)
10107c50:	dc000015 	stw	r16,0(sp)
10107c54:	dfc00415 	stw	ra,16(sp)
10107c58:	10c0400c 	andi	r3,r2,256
10107c5c:	2821883a 	mov	r16,r5
10107c60:	2023883a 	mov	r17,r4
10107c64:	3025883a 	mov	r18,r6
10107c68:	3827883a 	mov	r19,r7
10107c6c:	18000526 	beq	r3,zero,10107c84 <__swrite+0x48>
10107c70:	2940038f 	ldh	r5,14(r5)
10107c74:	01c00084 	movi	r7,2
10107c78:	000d883a 	mov	r6,zero
10107c7c:	01099740 	call	10109974 <_lseek_r>
10107c80:	8080030b 	ldhu	r2,12(r16)
10107c84:	8140038f 	ldh	r5,14(r16)
10107c88:	10bbffcc 	andi	r2,r2,61439
10107c8c:	980f883a 	mov	r7,r19
10107c90:	900d883a 	mov	r6,r18
10107c94:	8809883a 	mov	r4,r17
10107c98:	8080030d 	sth	r2,12(r16)
10107c9c:	dfc00417 	ldw	ra,16(sp)
10107ca0:	dcc00317 	ldw	r19,12(sp)
10107ca4:	dc800217 	ldw	r18,8(sp)
10107ca8:	dc400117 	ldw	r17,4(sp)
10107cac:	dc000017 	ldw	r16,0(sp)
10107cb0:	dec00504 	addi	sp,sp,20
10107cb4:	01094401 	jmpi	10109440 <_write_r>

10107cb8 <__sseek>:
10107cb8:	defffe04 	addi	sp,sp,-8
10107cbc:	dc000015 	stw	r16,0(sp)
10107cc0:	2821883a 	mov	r16,r5
10107cc4:	2940038f 	ldh	r5,14(r5)
10107cc8:	dfc00115 	stw	ra,4(sp)
10107ccc:	01099740 	call	10109974 <_lseek_r>
10107cd0:	00ffffc4 	movi	r3,-1
10107cd4:	10c00826 	beq	r2,r3,10107cf8 <__sseek+0x40>
10107cd8:	80c0030b 	ldhu	r3,12(r16)
10107cdc:	80801415 	stw	r2,80(r16)
10107ce0:	18c40014 	ori	r3,r3,4096
10107ce4:	80c0030d 	sth	r3,12(r16)
10107ce8:	dfc00117 	ldw	ra,4(sp)
10107cec:	dc000017 	ldw	r16,0(sp)
10107cf0:	dec00204 	addi	sp,sp,8
10107cf4:	f800283a 	ret
10107cf8:	80c0030b 	ldhu	r3,12(r16)
10107cfc:	18fbffcc 	andi	r3,r3,61439
10107d00:	80c0030d 	sth	r3,12(r16)
10107d04:	dfc00117 	ldw	ra,4(sp)
10107d08:	dc000017 	ldw	r16,0(sp)
10107d0c:	dec00204 	addi	sp,sp,8
10107d10:	f800283a 	ret

10107d14 <__sclose>:
10107d14:	2940038f 	ldh	r5,14(r5)
10107d18:	01094a01 	jmpi	101094a0 <_close_r>

10107d1c <strcmp>:
10107d1c:	2144b03a 	or	r2,r4,r5
10107d20:	108000cc 	andi	r2,r2,3
10107d24:	1000171e 	bne	r2,zero,10107d84 <strcmp+0x68>
10107d28:	20800017 	ldw	r2,0(r4)
10107d2c:	28c00017 	ldw	r3,0(r5)
10107d30:	10c0141e 	bne	r2,r3,10107d84 <strcmp+0x68>
10107d34:	027fbff4 	movhi	r9,65279
10107d38:	4a7fbfc4 	addi	r9,r9,-257
10107d3c:	0086303a 	nor	r3,zero,r2
10107d40:	02202074 	movhi	r8,32897
10107d44:	1245883a 	add	r2,r2,r9
10107d48:	42202004 	addi	r8,r8,-32640
10107d4c:	10c4703a 	and	r2,r2,r3
10107d50:	1204703a 	and	r2,r2,r8
10107d54:	10000226 	beq	r2,zero,10107d60 <strcmp+0x44>
10107d58:	00002306 	br	10107de8 <strcmp+0xcc>
10107d5c:	1000221e 	bne	r2,zero,10107de8 <strcmp+0xcc>
10107d60:	21000104 	addi	r4,r4,4
10107d64:	20c00017 	ldw	r3,0(r4)
10107d68:	29400104 	addi	r5,r5,4
10107d6c:	29800017 	ldw	r6,0(r5)
10107d70:	1a4f883a 	add	r7,r3,r9
10107d74:	00c4303a 	nor	r2,zero,r3
10107d78:	3884703a 	and	r2,r7,r2
10107d7c:	1204703a 	and	r2,r2,r8
10107d80:	19bff626 	beq	r3,r6,10107d5c <__alt_data_end+0xfffe7d5c>
10107d84:	20800003 	ldbu	r2,0(r4)
10107d88:	10c03fcc 	andi	r3,r2,255
10107d8c:	18c0201c 	xori	r3,r3,128
10107d90:	18ffe004 	addi	r3,r3,-128
10107d94:	18000c26 	beq	r3,zero,10107dc8 <strcmp+0xac>
10107d98:	29800007 	ldb	r6,0(r5)
10107d9c:	19800326 	beq	r3,r6,10107dac <strcmp+0x90>
10107da0:	00001306 	br	10107df0 <strcmp+0xd4>
10107da4:	29800007 	ldb	r6,0(r5)
10107da8:	11800b1e 	bne	r2,r6,10107dd8 <strcmp+0xbc>
10107dac:	21000044 	addi	r4,r4,1
10107db0:	20c00003 	ldbu	r3,0(r4)
10107db4:	29400044 	addi	r5,r5,1
10107db8:	18803fcc 	andi	r2,r3,255
10107dbc:	1080201c 	xori	r2,r2,128
10107dc0:	10bfe004 	addi	r2,r2,-128
10107dc4:	103ff71e 	bne	r2,zero,10107da4 <__alt_data_end+0xfffe7da4>
10107dc8:	0007883a 	mov	r3,zero
10107dcc:	28800003 	ldbu	r2,0(r5)
10107dd0:	1885c83a 	sub	r2,r3,r2
10107dd4:	f800283a 	ret
10107dd8:	28800003 	ldbu	r2,0(r5)
10107ddc:	18c03fcc 	andi	r3,r3,255
10107de0:	1885c83a 	sub	r2,r3,r2
10107de4:	f800283a 	ret
10107de8:	0005883a 	mov	r2,zero
10107dec:	f800283a 	ret
10107df0:	10c03fcc 	andi	r3,r2,255
10107df4:	003ff506 	br	10107dcc <__alt_data_end+0xfffe7dcc>

10107df8 <__sprint_r.part.0>:
10107df8:	28801917 	ldw	r2,100(r5)
10107dfc:	defff604 	addi	sp,sp,-40
10107e00:	dd400515 	stw	r21,20(sp)
10107e04:	dfc00915 	stw	ra,36(sp)
10107e08:	df000815 	stw	fp,32(sp)
10107e0c:	ddc00715 	stw	r23,28(sp)
10107e10:	dd800615 	stw	r22,24(sp)
10107e14:	dd000415 	stw	r20,16(sp)
10107e18:	dcc00315 	stw	r19,12(sp)
10107e1c:	dc800215 	stw	r18,8(sp)
10107e20:	dc400115 	stw	r17,4(sp)
10107e24:	dc000015 	stw	r16,0(sp)
10107e28:	1088000c 	andi	r2,r2,8192
10107e2c:	302b883a 	mov	r21,r6
10107e30:	10002e26 	beq	r2,zero,10107eec <__sprint_r.part.0+0xf4>
10107e34:	30800217 	ldw	r2,8(r6)
10107e38:	35800017 	ldw	r22,0(r6)
10107e3c:	10002926 	beq	r2,zero,10107ee4 <__sprint_r.part.0+0xec>
10107e40:	2827883a 	mov	r19,r5
10107e44:	2029883a 	mov	r20,r4
10107e48:	b5c00104 	addi	r23,r22,4
10107e4c:	04bfffc4 	movi	r18,-1
10107e50:	bc400017 	ldw	r17,0(r23)
10107e54:	b4000017 	ldw	r16,0(r22)
10107e58:	0039883a 	mov	fp,zero
10107e5c:	8822d0ba 	srli	r17,r17,2
10107e60:	8800031e 	bne	r17,zero,10107e70 <__sprint_r.part.0+0x78>
10107e64:	00001806 	br	10107ec8 <__sprint_r.part.0+0xd0>
10107e68:	84000104 	addi	r16,r16,4
10107e6c:	8f001526 	beq	r17,fp,10107ec4 <__sprint_r.part.0+0xcc>
10107e70:	81400017 	ldw	r5,0(r16)
10107e74:	980d883a 	mov	r6,r19
10107e78:	a009883a 	mov	r4,r20
10107e7c:	01098200 	call	10109820 <_fputwc_r>
10107e80:	e7000044 	addi	fp,fp,1
10107e84:	14bff81e 	bne	r2,r18,10107e68 <__alt_data_end+0xfffe7e68>
10107e88:	9005883a 	mov	r2,r18
10107e8c:	a8000215 	stw	zero,8(r21)
10107e90:	a8000115 	stw	zero,4(r21)
10107e94:	dfc00917 	ldw	ra,36(sp)
10107e98:	df000817 	ldw	fp,32(sp)
10107e9c:	ddc00717 	ldw	r23,28(sp)
10107ea0:	dd800617 	ldw	r22,24(sp)
10107ea4:	dd400517 	ldw	r21,20(sp)
10107ea8:	dd000417 	ldw	r20,16(sp)
10107eac:	dcc00317 	ldw	r19,12(sp)
10107eb0:	dc800217 	ldw	r18,8(sp)
10107eb4:	dc400117 	ldw	r17,4(sp)
10107eb8:	dc000017 	ldw	r16,0(sp)
10107ebc:	dec00a04 	addi	sp,sp,40
10107ec0:	f800283a 	ret
10107ec4:	a8800217 	ldw	r2,8(r21)
10107ec8:	8c63883a 	add	r17,r17,r17
10107ecc:	8c63883a 	add	r17,r17,r17
10107ed0:	1445c83a 	sub	r2,r2,r17
10107ed4:	a8800215 	stw	r2,8(r21)
10107ed8:	b5800204 	addi	r22,r22,8
10107edc:	bdc00204 	addi	r23,r23,8
10107ee0:	103fdb1e 	bne	r2,zero,10107e50 <__alt_data_end+0xfffe7e50>
10107ee4:	0005883a 	mov	r2,zero
10107ee8:	003fe806 	br	10107e8c <__alt_data_end+0xfffe7e8c>
10107eec:	01050200 	call	10105020 <__sfvwrite_r>
10107ef0:	003fe606 	br	10107e8c <__alt_data_end+0xfffe7e8c>

10107ef4 <__sprint_r>:
10107ef4:	30c00217 	ldw	r3,8(r6)
10107ef8:	18000126 	beq	r3,zero,10107f00 <__sprint_r+0xc>
10107efc:	0107df81 	jmpi	10107df8 <__sprint_r.part.0>
10107f00:	30000115 	stw	zero,4(r6)
10107f04:	0005883a 	mov	r2,zero
10107f08:	f800283a 	ret

10107f0c <___vfiprintf_internal_r>:
10107f0c:	deffc904 	addi	sp,sp,-220
10107f10:	df003515 	stw	fp,212(sp)
10107f14:	dd003115 	stw	r20,196(sp)
10107f18:	dfc03615 	stw	ra,216(sp)
10107f1c:	ddc03415 	stw	r23,208(sp)
10107f20:	dd803315 	stw	r22,204(sp)
10107f24:	dd403215 	stw	r21,200(sp)
10107f28:	dcc03015 	stw	r19,192(sp)
10107f2c:	dc802f15 	stw	r18,188(sp)
10107f30:	dc402e15 	stw	r17,184(sp)
10107f34:	dc002d15 	stw	r16,180(sp)
10107f38:	d9002015 	stw	r4,128(sp)
10107f3c:	d9c02215 	stw	r7,136(sp)
10107f40:	2829883a 	mov	r20,r5
10107f44:	3039883a 	mov	fp,r6
10107f48:	20000226 	beq	r4,zero,10107f54 <___vfiprintf_internal_r+0x48>
10107f4c:	20800e17 	ldw	r2,56(r4)
10107f50:	1000cf26 	beq	r2,zero,10108290 <___vfiprintf_internal_r+0x384>
10107f54:	a080030b 	ldhu	r2,12(r20)
10107f58:	10c8000c 	andi	r3,r2,8192
10107f5c:	1800061e 	bne	r3,zero,10107f78 <___vfiprintf_internal_r+0x6c>
10107f60:	a1001917 	ldw	r4,100(r20)
10107f64:	00f7ffc4 	movi	r3,-8193
10107f68:	10880014 	ori	r2,r2,8192
10107f6c:	20c6703a 	and	r3,r4,r3
10107f70:	a080030d 	sth	r2,12(r20)
10107f74:	a0c01915 	stw	r3,100(r20)
10107f78:	10c0020c 	andi	r3,r2,8
10107f7c:	1800a926 	beq	r3,zero,10108224 <___vfiprintf_internal_r+0x318>
10107f80:	a0c00417 	ldw	r3,16(r20)
10107f84:	1800a726 	beq	r3,zero,10108224 <___vfiprintf_internal_r+0x318>
10107f88:	1080068c 	andi	r2,r2,26
10107f8c:	00c00284 	movi	r3,10
10107f90:	10c0ac26 	beq	r2,r3,10108244 <___vfiprintf_internal_r+0x338>
10107f94:	da801a04 	addi	r10,sp,104
10107f98:	da801e15 	stw	r10,120(sp)
10107f9c:	d8801e17 	ldw	r2,120(sp)
10107fa0:	da8019c4 	addi	r10,sp,103
10107fa4:	05840474 	movhi	r22,4113
10107fa8:	05c40474 	movhi	r23,4113
10107fac:	da801f15 	stw	r10,124(sp)
10107fb0:	1295c83a 	sub	r10,r2,r10
10107fb4:	b5be7904 	addi	r22,r22,-1564
10107fb8:	bdfe7504 	addi	r23,r23,-1580
10107fbc:	dec01a15 	stw	sp,104(sp)
10107fc0:	d8001c15 	stw	zero,112(sp)
10107fc4:	d8001b15 	stw	zero,108(sp)
10107fc8:	d8002615 	stw	zero,152(sp)
10107fcc:	d8002315 	stw	zero,140(sp)
10107fd0:	da802715 	stw	r10,156(sp)
10107fd4:	d811883a 	mov	r8,sp
10107fd8:	dd002115 	stw	r20,132(sp)
10107fdc:	e021883a 	mov	r16,fp
10107fe0:	80800007 	ldb	r2,0(r16)
10107fe4:	1003ea26 	beq	r2,zero,10108f90 <___vfiprintf_internal_r+0x1084>
10107fe8:	00c00944 	movi	r3,37
10107fec:	8025883a 	mov	r18,r16
10107ff0:	10c0021e 	bne	r2,r3,10107ffc <___vfiprintf_internal_r+0xf0>
10107ff4:	00001606 	br	10108050 <___vfiprintf_internal_r+0x144>
10107ff8:	10c00326 	beq	r2,r3,10108008 <___vfiprintf_internal_r+0xfc>
10107ffc:	94800044 	addi	r18,r18,1
10108000:	90800007 	ldb	r2,0(r18)
10108004:	103ffc1e 	bne	r2,zero,10107ff8 <__alt_data_end+0xfffe7ff8>
10108008:	9423c83a 	sub	r17,r18,r16
1010800c:	88001026 	beq	r17,zero,10108050 <___vfiprintf_internal_r+0x144>
10108010:	d8c01c17 	ldw	r3,112(sp)
10108014:	d8801b17 	ldw	r2,108(sp)
10108018:	44000015 	stw	r16,0(r8)
1010801c:	88c7883a 	add	r3,r17,r3
10108020:	10800044 	addi	r2,r2,1
10108024:	44400115 	stw	r17,4(r8)
10108028:	d8c01c15 	stw	r3,112(sp)
1010802c:	d8801b15 	stw	r2,108(sp)
10108030:	010001c4 	movi	r4,7
10108034:	2080760e 	bge	r4,r2,10108210 <___vfiprintf_internal_r+0x304>
10108038:	1803821e 	bne	r3,zero,10108e44 <___vfiprintf_internal_r+0xf38>
1010803c:	da802317 	ldw	r10,140(sp)
10108040:	d8001b15 	stw	zero,108(sp)
10108044:	d811883a 	mov	r8,sp
10108048:	5455883a 	add	r10,r10,r17
1010804c:	da802315 	stw	r10,140(sp)
10108050:	90800007 	ldb	r2,0(r18)
10108054:	10044626 	beq	r2,zero,10109170 <___vfiprintf_internal_r+0x1264>
10108058:	90c00047 	ldb	r3,1(r18)
1010805c:	94000044 	addi	r16,r18,1
10108060:	d8001d85 	stb	zero,118(sp)
10108064:	0009883a 	mov	r4,zero
10108068:	000f883a 	mov	r7,zero
1010806c:	027fffc4 	movi	r9,-1
10108070:	0023883a 	mov	r17,zero
10108074:	0029883a 	mov	r20,zero
10108078:	01401604 	movi	r5,88
1010807c:	01800244 	movi	r6,9
10108080:	03400a84 	movi	r13,42
10108084:	03001b04 	movi	r12,108
10108088:	84000044 	addi	r16,r16,1
1010808c:	18bff804 	addi	r2,r3,-32
10108090:	28827336 	bltu	r5,r2,10108a60 <___vfiprintf_internal_r+0xb54>
10108094:	100490ba 	slli	r2,r2,2
10108098:	02840474 	movhi	r10,4113
1010809c:	52a02b04 	addi	r10,r10,-32596
101080a0:	1285883a 	add	r2,r2,r10
101080a4:	10800017 	ldw	r2,0(r2)
101080a8:	1000683a 	jmp	r2
101080ac:	10108794 	ori	zero,r2,16926
101080b0:	10108a60 	cmpeqi	zero,r2,16937
101080b4:	10108a60 	cmpeqi	zero,r2,16937
101080b8:	101087b4 	orhi	zero,r2,16926
101080bc:	10108a60 	cmpeqi	zero,r2,16937
101080c0:	10108a60 	cmpeqi	zero,r2,16937
101080c4:	10108a60 	cmpeqi	zero,r2,16937
101080c8:	10108a60 	cmpeqi	zero,r2,16937
101080cc:	10108a60 	cmpeqi	zero,r2,16937
101080d0:	10108a60 	cmpeqi	zero,r2,16937
101080d4:	1010899c 	xori	zero,r2,16934
101080d8:	101089b8 	rdprs	zero,r2,16934
101080dc:	10108a60 	cmpeqi	zero,r2,16937
101080e0:	101082a0 	cmpeqi	zero,r2,16906
101080e4:	101089c8 	cmpgei	zero,r2,16935
101080e8:	10108a60 	cmpeqi	zero,r2,16937
101080ec:	101087c0 	call	1101087c <__alt_data_end+0xef087c>
101080f0:	101087cc 	andi	zero,r2,16927
101080f4:	101087cc 	andi	zero,r2,16927
101080f8:	101087cc 	andi	zero,r2,16927
101080fc:	101087cc 	andi	zero,r2,16927
10108100:	101087cc 	andi	zero,r2,16927
10108104:	101087cc 	andi	zero,r2,16927
10108108:	101087cc 	andi	zero,r2,16927
1010810c:	101087cc 	andi	zero,r2,16927
10108110:	101087cc 	andi	zero,r2,16927
10108114:	10108a60 	cmpeqi	zero,r2,16937
10108118:	10108a60 	cmpeqi	zero,r2,16937
1010811c:	10108a60 	cmpeqi	zero,r2,16937
10108120:	10108a60 	cmpeqi	zero,r2,16937
10108124:	10108a60 	cmpeqi	zero,r2,16937
10108128:	10108a60 	cmpeqi	zero,r2,16937
1010812c:	10108a60 	cmpeqi	zero,r2,16937
10108130:	10108a60 	cmpeqi	zero,r2,16937
10108134:	10108a60 	cmpeqi	zero,r2,16937
10108138:	10108a60 	cmpeqi	zero,r2,16937
1010813c:	101087f8 	rdprs	zero,r2,16927
10108140:	10108a60 	cmpeqi	zero,r2,16937
10108144:	10108a60 	cmpeqi	zero,r2,16937
10108148:	10108a60 	cmpeqi	zero,r2,16937
1010814c:	10108a60 	cmpeqi	zero,r2,16937
10108150:	10108a60 	cmpeqi	zero,r2,16937
10108154:	10108a60 	cmpeqi	zero,r2,16937
10108158:	10108a60 	cmpeqi	zero,r2,16937
1010815c:	10108a60 	cmpeqi	zero,r2,16937
10108160:	10108a60 	cmpeqi	zero,r2,16937
10108164:	10108a60 	cmpeqi	zero,r2,16937
10108168:	10108830 	cmpltui	zero,r2,16928
1010816c:	10108a60 	cmpeqi	zero,r2,16937
10108170:	10108a60 	cmpeqi	zero,r2,16937
10108174:	10108a60 	cmpeqi	zero,r2,16937
10108178:	10108a60 	cmpeqi	zero,r2,16937
1010817c:	10108a60 	cmpeqi	zero,r2,16937
10108180:	10108888 	cmpgei	zero,r2,16930
10108184:	10108a60 	cmpeqi	zero,r2,16937
10108188:	10108a60 	cmpeqi	zero,r2,16937
1010818c:	101088f8 	rdprs	zero,r2,16931
10108190:	10108a60 	cmpeqi	zero,r2,16937
10108194:	10108a60 	cmpeqi	zero,r2,16937
10108198:	10108a60 	cmpeqi	zero,r2,16937
1010819c:	10108a60 	cmpeqi	zero,r2,16937
101081a0:	10108a60 	cmpeqi	zero,r2,16937
101081a4:	10108a60 	cmpeqi	zero,r2,16937
101081a8:	10108a60 	cmpeqi	zero,r2,16937
101081ac:	10108a60 	cmpeqi	zero,r2,16937
101081b0:	10108a60 	cmpeqi	zero,r2,16937
101081b4:	10108a60 	cmpeqi	zero,r2,16937
101081b8:	101086a4 	muli	zero,r2,16922
101081bc:	101086d0 	cmplti	zero,r2,16923
101081c0:	10108a60 	cmpeqi	zero,r2,16937
101081c4:	10108a60 	cmpeqi	zero,r2,16937
101081c8:	10108a60 	cmpeqi	zero,r2,16937
101081cc:	10108a08 	cmpgei	zero,r2,16936
101081d0:	101086d0 	cmplti	zero,r2,16923
101081d4:	10108a60 	cmpeqi	zero,r2,16937
101081d8:	10108a60 	cmpeqi	zero,r2,16937
101081dc:	10108564 	muli	zero,r2,16917
101081e0:	10108a60 	cmpeqi	zero,r2,16937
101081e4:	10108574 	orhi	zero,r2,16917
101081e8:	101085b0 	cmpltui	zero,r2,16918
101081ec:	101082ac 	andhi	zero,r2,16906
101081f0:	10108558 	cmpnei	zero,r2,16917
101081f4:	10108a60 	cmpeqi	zero,r2,16937
101081f8:	10108934 	orhi	zero,r2,16932
101081fc:	10108a60 	cmpeqi	zero,r2,16937
10108200:	1010898c 	andi	zero,r2,16934
10108204:	10108a60 	cmpeqi	zero,r2,16937
10108208:	10108a60 	cmpeqi	zero,r2,16937
1010820c:	10108650 	cmplti	zero,r2,16921
10108210:	42000204 	addi	r8,r8,8
10108214:	da802317 	ldw	r10,140(sp)
10108218:	5455883a 	add	r10,r10,r17
1010821c:	da802315 	stw	r10,140(sp)
10108220:	003f8b06 	br	10108050 <__alt_data_end+0xfffe8050>
10108224:	d9002017 	ldw	r4,128(sp)
10108228:	a00b883a 	mov	r5,r20
1010822c:	0102bc80 	call	10102bc8 <__swsetup_r>
10108230:	1003b11e 	bne	r2,zero,101090f8 <___vfiprintf_internal_r+0x11ec>
10108234:	a080030b 	ldhu	r2,12(r20)
10108238:	00c00284 	movi	r3,10
1010823c:	1080068c 	andi	r2,r2,26
10108240:	10ff541e 	bne	r2,r3,10107f94 <__alt_data_end+0xfffe7f94>
10108244:	a080038f 	ldh	r2,14(r20)
10108248:	103f5216 	blt	r2,zero,10107f94 <__alt_data_end+0xfffe7f94>
1010824c:	d9c02217 	ldw	r7,136(sp)
10108250:	d9002017 	ldw	r4,128(sp)
10108254:	e00d883a 	mov	r6,fp
10108258:	a00b883a 	mov	r5,r20
1010825c:	01093840 	call	10109384 <__sbprintf>
10108260:	dfc03617 	ldw	ra,216(sp)
10108264:	df003517 	ldw	fp,212(sp)
10108268:	ddc03417 	ldw	r23,208(sp)
1010826c:	dd803317 	ldw	r22,204(sp)
10108270:	dd403217 	ldw	r21,200(sp)
10108274:	dd003117 	ldw	r20,196(sp)
10108278:	dcc03017 	ldw	r19,192(sp)
1010827c:	dc802f17 	ldw	r18,188(sp)
10108280:	dc402e17 	ldw	r17,184(sp)
10108284:	dc002d17 	ldw	r16,180(sp)
10108288:	dec03704 	addi	sp,sp,220
1010828c:	f800283a 	ret
10108290:	0104b9c0 	call	10104b9c <__sinit>
10108294:	003f2f06 	br	10107f54 <__alt_data_end+0xfffe7f54>
10108298:	0463c83a 	sub	r17,zero,r17
1010829c:	d8802215 	stw	r2,136(sp)
101082a0:	a5000114 	ori	r20,r20,4
101082a4:	80c00007 	ldb	r3,0(r16)
101082a8:	003f7706 	br	10108088 <__alt_data_end+0xfffe8088>
101082ac:	00800c04 	movi	r2,48
101082b0:	da802217 	ldw	r10,136(sp)
101082b4:	d8801d05 	stb	r2,116(sp)
101082b8:	00801e04 	movi	r2,120
101082bc:	d8801d45 	stb	r2,117(sp)
101082c0:	d8001d85 	stb	zero,118(sp)
101082c4:	50c00104 	addi	r3,r10,4
101082c8:	54800017 	ldw	r18,0(r10)
101082cc:	0027883a 	mov	r19,zero
101082d0:	a0800094 	ori	r2,r20,2
101082d4:	48030b16 	blt	r9,zero,10108f04 <___vfiprintf_internal_r+0xff8>
101082d8:	00bfdfc4 	movi	r2,-129
101082dc:	a096703a 	and	r11,r20,r2
101082e0:	d8c02215 	stw	r3,136(sp)
101082e4:	5d000094 	ori	r20,r11,2
101082e8:	90032b1e 	bne	r18,zero,10108f98 <___vfiprintf_internal_r+0x108c>
101082ec:	00840474 	movhi	r2,4113
101082f0:	10be1404 	addi	r2,r2,-1968
101082f4:	d8802615 	stw	r2,152(sp)
101082f8:	0039883a 	mov	fp,zero
101082fc:	48017b1e 	bne	r9,zero,101088ec <___vfiprintf_internal_r+0x9e0>
10108300:	0013883a 	mov	r9,zero
10108304:	0027883a 	mov	r19,zero
10108308:	dd401a04 	addi	r21,sp,104
1010830c:	4825883a 	mov	r18,r9
10108310:	4cc0010e 	bge	r9,r19,10108318 <___vfiprintf_internal_r+0x40c>
10108314:	9825883a 	mov	r18,r19
10108318:	e7003fcc 	andi	fp,fp,255
1010831c:	e700201c 	xori	fp,fp,128
10108320:	e73fe004 	addi	fp,fp,-128
10108324:	e0000126 	beq	fp,zero,1010832c <___vfiprintf_internal_r+0x420>
10108328:	94800044 	addi	r18,r18,1
1010832c:	a380008c 	andi	r14,r20,2
10108330:	70000126 	beq	r14,zero,10108338 <___vfiprintf_internal_r+0x42c>
10108334:	94800084 	addi	r18,r18,2
10108338:	a700210c 	andi	fp,r20,132
1010833c:	e001df1e 	bne	fp,zero,10108abc <___vfiprintf_internal_r+0xbb0>
10108340:	8c87c83a 	sub	r3,r17,r18
10108344:	00c1dd0e 	bge	zero,r3,10108abc <___vfiprintf_internal_r+0xbb0>
10108348:	01c00404 	movi	r7,16
1010834c:	d8801c17 	ldw	r2,112(sp)
10108350:	38c3ad0e 	bge	r7,r3,10109208 <___vfiprintf_internal_r+0x12fc>
10108354:	02840474 	movhi	r10,4113
10108358:	52be7904 	addi	r10,r10,-1564
1010835c:	dc002915 	stw	r16,164(sp)
10108360:	d9801b17 	ldw	r6,108(sp)
10108364:	da802415 	stw	r10,144(sp)
10108368:	03c001c4 	movi	r15,7
1010836c:	da402515 	stw	r9,148(sp)
10108370:	db802815 	stw	r14,160(sp)
10108374:	1821883a 	mov	r16,r3
10108378:	00000506 	br	10108390 <___vfiprintf_internal_r+0x484>
1010837c:	31400084 	addi	r5,r6,2
10108380:	42000204 	addi	r8,r8,8
10108384:	200d883a 	mov	r6,r4
10108388:	843ffc04 	addi	r16,r16,-16
1010838c:	3c000d0e 	bge	r7,r16,101083c4 <___vfiprintf_internal_r+0x4b8>
10108390:	10800404 	addi	r2,r2,16
10108394:	31000044 	addi	r4,r6,1
10108398:	45800015 	stw	r22,0(r8)
1010839c:	41c00115 	stw	r7,4(r8)
101083a0:	d8801c15 	stw	r2,112(sp)
101083a4:	d9001b15 	stw	r4,108(sp)
101083a8:	793ff40e 	bge	r15,r4,1010837c <__alt_data_end+0xfffe837c>
101083ac:	1001b51e 	bne	r2,zero,10108a84 <___vfiprintf_internal_r+0xb78>
101083b0:	843ffc04 	addi	r16,r16,-16
101083b4:	000d883a 	mov	r6,zero
101083b8:	01400044 	movi	r5,1
101083bc:	d811883a 	mov	r8,sp
101083c0:	3c3ff316 	blt	r7,r16,10108390 <__alt_data_end+0xfffe8390>
101083c4:	8007883a 	mov	r3,r16
101083c8:	da402517 	ldw	r9,148(sp)
101083cc:	db802817 	ldw	r14,160(sp)
101083d0:	dc002917 	ldw	r16,164(sp)
101083d4:	da802417 	ldw	r10,144(sp)
101083d8:	1885883a 	add	r2,r3,r2
101083dc:	40c00115 	stw	r3,4(r8)
101083e0:	42800015 	stw	r10,0(r8)
101083e4:	d8801c15 	stw	r2,112(sp)
101083e8:	d9401b15 	stw	r5,108(sp)
101083ec:	00c001c4 	movi	r3,7
101083f0:	19426016 	blt	r3,r5,10108d74 <___vfiprintf_internal_r+0xe68>
101083f4:	d8c01d87 	ldb	r3,118(sp)
101083f8:	42000204 	addi	r8,r8,8
101083fc:	29000044 	addi	r4,r5,1
10108400:	1801b31e 	bne	r3,zero,10108ad0 <___vfiprintf_internal_r+0xbc4>
10108404:	7001c026 	beq	r14,zero,10108b08 <___vfiprintf_internal_r+0xbfc>
10108408:	d8c01d04 	addi	r3,sp,116
1010840c:	10800084 	addi	r2,r2,2
10108410:	40c00015 	stw	r3,0(r8)
10108414:	00c00084 	movi	r3,2
10108418:	40c00115 	stw	r3,4(r8)
1010841c:	d8801c15 	stw	r2,112(sp)
10108420:	d9001b15 	stw	r4,108(sp)
10108424:	00c001c4 	movi	r3,7
10108428:	1902650e 	bge	r3,r4,10108dc0 <___vfiprintf_internal_r+0xeb4>
1010842c:	10029a1e 	bne	r2,zero,10108e98 <___vfiprintf_internal_r+0xf8c>
10108430:	00c02004 	movi	r3,128
10108434:	01000044 	movi	r4,1
10108438:	000b883a 	mov	r5,zero
1010843c:	d811883a 	mov	r8,sp
10108440:	e0c1b31e 	bne	fp,r3,10108b10 <___vfiprintf_internal_r+0xc04>
10108444:	8cb9c83a 	sub	fp,r17,r18
10108448:	0701b10e 	bge	zero,fp,10108b10 <___vfiprintf_internal_r+0xc04>
1010844c:	01c00404 	movi	r7,16
10108450:	3f03890e 	bge	r7,fp,10109278 <___vfiprintf_internal_r+0x136c>
10108454:	00c40474 	movhi	r3,4113
10108458:	18fe7504 	addi	r3,r3,-1580
1010845c:	d8c02415 	stw	r3,144(sp)
10108460:	8007883a 	mov	r3,r16
10108464:	034001c4 	movi	r13,7
10108468:	e021883a 	mov	r16,fp
1010846c:	da402515 	stw	r9,148(sp)
10108470:	1839883a 	mov	fp,r3
10108474:	00000506 	br	1010848c <___vfiprintf_internal_r+0x580>
10108478:	29800084 	addi	r6,r5,2
1010847c:	42000204 	addi	r8,r8,8
10108480:	180b883a 	mov	r5,r3
10108484:	843ffc04 	addi	r16,r16,-16
10108488:	3c000d0e 	bge	r7,r16,101084c0 <___vfiprintf_internal_r+0x5b4>
1010848c:	10800404 	addi	r2,r2,16
10108490:	28c00044 	addi	r3,r5,1
10108494:	45c00015 	stw	r23,0(r8)
10108498:	41c00115 	stw	r7,4(r8)
1010849c:	d8801c15 	stw	r2,112(sp)
101084a0:	d8c01b15 	stw	r3,108(sp)
101084a4:	68fff40e 	bge	r13,r3,10108478 <__alt_data_end+0xfffe8478>
101084a8:	1002241e 	bne	r2,zero,10108d3c <___vfiprintf_internal_r+0xe30>
101084ac:	843ffc04 	addi	r16,r16,-16
101084b0:	01800044 	movi	r6,1
101084b4:	000b883a 	mov	r5,zero
101084b8:	d811883a 	mov	r8,sp
101084bc:	3c3ff316 	blt	r7,r16,1010848c <__alt_data_end+0xfffe848c>
101084c0:	da402517 	ldw	r9,148(sp)
101084c4:	e007883a 	mov	r3,fp
101084c8:	8039883a 	mov	fp,r16
101084cc:	1821883a 	mov	r16,r3
101084d0:	d8c02417 	ldw	r3,144(sp)
101084d4:	1705883a 	add	r2,r2,fp
101084d8:	47000115 	stw	fp,4(r8)
101084dc:	40c00015 	stw	r3,0(r8)
101084e0:	d8801c15 	stw	r2,112(sp)
101084e4:	d9801b15 	stw	r6,108(sp)
101084e8:	00c001c4 	movi	r3,7
101084ec:	19827616 	blt	r3,r6,10108ec8 <___vfiprintf_internal_r+0xfbc>
101084f0:	4cf9c83a 	sub	fp,r9,r19
101084f4:	42000204 	addi	r8,r8,8
101084f8:	31000044 	addi	r4,r6,1
101084fc:	300b883a 	mov	r5,r6
10108500:	07018516 	blt	zero,fp,10108b18 <___vfiprintf_internal_r+0xc0c>
10108504:	9885883a 	add	r2,r19,r2
10108508:	45400015 	stw	r21,0(r8)
1010850c:	44c00115 	stw	r19,4(r8)
10108510:	d8801c15 	stw	r2,112(sp)
10108514:	d9001b15 	stw	r4,108(sp)
10108518:	00c001c4 	movi	r3,7
1010851c:	1901dd0e 	bge	r3,r4,10108c94 <___vfiprintf_internal_r+0xd88>
10108520:	1002401e 	bne	r2,zero,10108e24 <___vfiprintf_internal_r+0xf18>
10108524:	d8001b15 	stw	zero,108(sp)
10108528:	a2c0010c 	andi	r11,r20,4
1010852c:	58000226 	beq	r11,zero,10108538 <___vfiprintf_internal_r+0x62c>
10108530:	8ca7c83a 	sub	r19,r17,r18
10108534:	04c2f216 	blt	zero,r19,10109100 <___vfiprintf_internal_r+0x11f4>
10108538:	8c80010e 	bge	r17,r18,10108540 <___vfiprintf_internal_r+0x634>
1010853c:	9023883a 	mov	r17,r18
10108540:	da802317 	ldw	r10,140(sp)
10108544:	5455883a 	add	r10,r10,r17
10108548:	da802315 	stw	r10,140(sp)
1010854c:	d8001b15 	stw	zero,108(sp)
10108550:	d811883a 	mov	r8,sp
10108554:	003ea206 	br	10107fe0 <__alt_data_end+0xfffe7fe0>
10108558:	a5000814 	ori	r20,r20,32
1010855c:	80c00007 	ldb	r3,0(r16)
10108560:	003ec906 	br	10108088 <__alt_data_end+0xfffe8088>
10108564:	80c00007 	ldb	r3,0(r16)
10108568:	1b030926 	beq	r3,r12,10109190 <___vfiprintf_internal_r+0x1284>
1010856c:	a5000414 	ori	r20,r20,16
10108570:	003ec506 	br	10108088 <__alt_data_end+0xfffe8088>
10108574:	21003fcc 	andi	r4,r4,255
10108578:	20035e1e 	bne	r4,zero,101092f4 <___vfiprintf_internal_r+0x13e8>
1010857c:	a080080c 	andi	r2,r20,32
10108580:	1002a526 	beq	r2,zero,10109018 <___vfiprintf_internal_r+0x110c>
10108584:	da802217 	ldw	r10,136(sp)
10108588:	50800017 	ldw	r2,0(r10)
1010858c:	da802317 	ldw	r10,140(sp)
10108590:	5007d7fa 	srai	r3,r10,31
10108594:	da802217 	ldw	r10,136(sp)
10108598:	10c00115 	stw	r3,4(r2)
1010859c:	52800104 	addi	r10,r10,4
101085a0:	da802215 	stw	r10,136(sp)
101085a4:	da802317 	ldw	r10,140(sp)
101085a8:	12800015 	stw	r10,0(r2)
101085ac:	003e8c06 	br	10107fe0 <__alt_data_end+0xfffe7fe0>
101085b0:	21003fcc 	andi	r4,r4,255
101085b4:	2003511e 	bne	r4,zero,101092fc <___vfiprintf_internal_r+0x13f0>
101085b8:	a080080c 	andi	r2,r20,32
101085bc:	1000a126 	beq	r2,zero,10108844 <___vfiprintf_internal_r+0x938>
101085c0:	da802217 	ldw	r10,136(sp)
101085c4:	d8001d85 	stb	zero,118(sp)
101085c8:	50800204 	addi	r2,r10,8
101085cc:	54800017 	ldw	r18,0(r10)
101085d0:	54c00117 	ldw	r19,4(r10)
101085d4:	4802b416 	blt	r9,zero,101090a8 <___vfiprintf_internal_r+0x119c>
101085d8:	013fdfc4 	movi	r4,-129
101085dc:	94c6b03a 	or	r3,r18,r19
101085e0:	d8802215 	stw	r2,136(sp)
101085e4:	a128703a 	and	r20,r20,r4
101085e8:	1800a226 	beq	r3,zero,10108874 <___vfiprintf_internal_r+0x968>
101085ec:	0039883a 	mov	fp,zero
101085f0:	dd401a04 	addi	r21,sp,104
101085f4:	9006d0fa 	srli	r3,r18,3
101085f8:	9808977a 	slli	r4,r19,29
101085fc:	9826d0fa 	srli	r19,r19,3
10108600:	948001cc 	andi	r18,r18,7
10108604:	90800c04 	addi	r2,r18,48
10108608:	ad7fffc4 	addi	r21,r21,-1
1010860c:	20e4b03a 	or	r18,r4,r3
10108610:	a8800005 	stb	r2,0(r21)
10108614:	94c6b03a 	or	r3,r18,r19
10108618:	183ff61e 	bne	r3,zero,101085f4 <__alt_data_end+0xfffe85f4>
1010861c:	a0c0004c 	andi	r3,r20,1
10108620:	18005926 	beq	r3,zero,10108788 <___vfiprintf_internal_r+0x87c>
10108624:	10803fcc 	andi	r2,r2,255
10108628:	1080201c 	xori	r2,r2,128
1010862c:	10bfe004 	addi	r2,r2,-128
10108630:	00c00c04 	movi	r3,48
10108634:	10c05426 	beq	r2,r3,10108788 <___vfiprintf_internal_r+0x87c>
10108638:	da801e17 	ldw	r10,120(sp)
1010863c:	a8bfffc4 	addi	r2,r21,-1
10108640:	a8ffffc5 	stb	r3,-1(r21)
10108644:	50a7c83a 	sub	r19,r10,r2
10108648:	102b883a 	mov	r21,r2
1010864c:	003f2f06 	br	1010830c <__alt_data_end+0xfffe830c>
10108650:	21003fcc 	andi	r4,r4,255
10108654:	2003421e 	bne	r4,zero,10109360 <___vfiprintf_internal_r+0x1454>
10108658:	00840474 	movhi	r2,4113
1010865c:	10be1404 	addi	r2,r2,-1968
10108660:	d8802615 	stw	r2,152(sp)
10108664:	a080080c 	andi	r2,r20,32
10108668:	1000aa26 	beq	r2,zero,10108914 <___vfiprintf_internal_r+0xa08>
1010866c:	da802217 	ldw	r10,136(sp)
10108670:	54800017 	ldw	r18,0(r10)
10108674:	54c00117 	ldw	r19,4(r10)
10108678:	52800204 	addi	r10,r10,8
1010867c:	da802215 	stw	r10,136(sp)
10108680:	a080004c 	andi	r2,r20,1
10108684:	1001d226 	beq	r2,zero,10108dd0 <___vfiprintf_internal_r+0xec4>
10108688:	94c4b03a 	or	r2,r18,r19
1010868c:	1002351e 	bne	r2,zero,10108f64 <___vfiprintf_internal_r+0x1058>
10108690:	d8001d85 	stb	zero,118(sp)
10108694:	48022216 	blt	r9,zero,10108f20 <___vfiprintf_internal_r+0x1014>
10108698:	00bfdfc4 	movi	r2,-129
1010869c:	a0a8703a 	and	r20,r20,r2
101086a0:	003f1506 	br	101082f8 <__alt_data_end+0xfffe82f8>
101086a4:	da802217 	ldw	r10,136(sp)
101086a8:	04800044 	movi	r18,1
101086ac:	d8001d85 	stb	zero,118(sp)
101086b0:	50800017 	ldw	r2,0(r10)
101086b4:	52800104 	addi	r10,r10,4
101086b8:	da802215 	stw	r10,136(sp)
101086bc:	d8801005 	stb	r2,64(sp)
101086c0:	9027883a 	mov	r19,r18
101086c4:	dd401004 	addi	r21,sp,64
101086c8:	0013883a 	mov	r9,zero
101086cc:	003f1706 	br	1010832c <__alt_data_end+0xfffe832c>
101086d0:	21003fcc 	andi	r4,r4,255
101086d4:	2003201e 	bne	r4,zero,10109358 <___vfiprintf_internal_r+0x144c>
101086d8:	a080080c 	andi	r2,r20,32
101086dc:	10004b26 	beq	r2,zero,1010880c <___vfiprintf_internal_r+0x900>
101086e0:	da802217 	ldw	r10,136(sp)
101086e4:	50800117 	ldw	r2,4(r10)
101086e8:	54800017 	ldw	r18,0(r10)
101086ec:	52800204 	addi	r10,r10,8
101086f0:	da802215 	stw	r10,136(sp)
101086f4:	1027883a 	mov	r19,r2
101086f8:	10022c16 	blt	r2,zero,10108fac <___vfiprintf_internal_r+0x10a0>
101086fc:	df001d83 	ldbu	fp,118(sp)
10108700:	48007216 	blt	r9,zero,101088cc <___vfiprintf_internal_r+0x9c0>
10108704:	00ffdfc4 	movi	r3,-129
10108708:	94c4b03a 	or	r2,r18,r19
1010870c:	a0e8703a 	and	r20,r20,r3
10108710:	1000cc26 	beq	r2,zero,10108a44 <___vfiprintf_internal_r+0xb38>
10108714:	98021026 	beq	r19,zero,10108f58 <___vfiprintf_internal_r+0x104c>
10108718:	dc402415 	stw	r17,144(sp)
1010871c:	dc002515 	stw	r16,148(sp)
10108720:	9823883a 	mov	r17,r19
10108724:	9021883a 	mov	r16,r18
10108728:	dd401a04 	addi	r21,sp,104
1010872c:	4825883a 	mov	r18,r9
10108730:	4027883a 	mov	r19,r8
10108734:	8009883a 	mov	r4,r16
10108738:	880b883a 	mov	r5,r17
1010873c:	01800284 	movi	r6,10
10108740:	000f883a 	mov	r7,zero
10108744:	010a2ec0 	call	1010a2ec <__umoddi3>
10108748:	10800c04 	addi	r2,r2,48
1010874c:	ad7fffc4 	addi	r21,r21,-1
10108750:	8009883a 	mov	r4,r16
10108754:	880b883a 	mov	r5,r17
10108758:	a8800005 	stb	r2,0(r21)
1010875c:	01800284 	movi	r6,10
10108760:	000f883a 	mov	r7,zero
10108764:	0109d740 	call	10109d74 <__udivdi3>
10108768:	1021883a 	mov	r16,r2
1010876c:	10c4b03a 	or	r2,r2,r3
10108770:	1823883a 	mov	r17,r3
10108774:	103fef1e 	bne	r2,zero,10108734 <__alt_data_end+0xfffe8734>
10108778:	dc402417 	ldw	r17,144(sp)
1010877c:	dc002517 	ldw	r16,148(sp)
10108780:	9013883a 	mov	r9,r18
10108784:	9811883a 	mov	r8,r19
10108788:	da801e17 	ldw	r10,120(sp)
1010878c:	5567c83a 	sub	r19,r10,r21
10108790:	003ede06 	br	1010830c <__alt_data_end+0xfffe830c>
10108794:	38803fcc 	andi	r2,r7,255
10108798:	1080201c 	xori	r2,r2,128
1010879c:	10bfe004 	addi	r2,r2,-128
101087a0:	1002371e 	bne	r2,zero,10109080 <___vfiprintf_internal_r+0x1174>
101087a4:	01000044 	movi	r4,1
101087a8:	01c00804 	movi	r7,32
101087ac:	80c00007 	ldb	r3,0(r16)
101087b0:	003e3506 	br	10108088 <__alt_data_end+0xfffe8088>
101087b4:	a5000054 	ori	r20,r20,1
101087b8:	80c00007 	ldb	r3,0(r16)
101087bc:	003e3206 	br	10108088 <__alt_data_end+0xfffe8088>
101087c0:	a5002014 	ori	r20,r20,128
101087c4:	80c00007 	ldb	r3,0(r16)
101087c8:	003e2f06 	br	10108088 <__alt_data_end+0xfffe8088>
101087cc:	8015883a 	mov	r10,r16
101087d0:	0023883a 	mov	r17,zero
101087d4:	18bff404 	addi	r2,r3,-48
101087d8:	50c00007 	ldb	r3,0(r10)
101087dc:	8c4002a4 	muli	r17,r17,10
101087e0:	84000044 	addi	r16,r16,1
101087e4:	8015883a 	mov	r10,r16
101087e8:	1463883a 	add	r17,r2,r17
101087ec:	18bff404 	addi	r2,r3,-48
101087f0:	30bff92e 	bgeu	r6,r2,101087d8 <__alt_data_end+0xfffe87d8>
101087f4:	003e2506 	br	1010808c <__alt_data_end+0xfffe808c>
101087f8:	21003fcc 	andi	r4,r4,255
101087fc:	2002d41e 	bne	r4,zero,10109350 <___vfiprintf_internal_r+0x1444>
10108800:	a5000414 	ori	r20,r20,16
10108804:	a080080c 	andi	r2,r20,32
10108808:	103fb51e 	bne	r2,zero,101086e0 <__alt_data_end+0xfffe86e0>
1010880c:	a080040c 	andi	r2,r20,16
10108810:	1001f826 	beq	r2,zero,10108ff4 <___vfiprintf_internal_r+0x10e8>
10108814:	da802217 	ldw	r10,136(sp)
10108818:	54800017 	ldw	r18,0(r10)
1010881c:	52800104 	addi	r10,r10,4
10108820:	da802215 	stw	r10,136(sp)
10108824:	9027d7fa 	srai	r19,r18,31
10108828:	9805883a 	mov	r2,r19
1010882c:	003fb206 	br	101086f8 <__alt_data_end+0xfffe86f8>
10108830:	21003fcc 	andi	r4,r4,255
10108834:	2002c41e 	bne	r4,zero,10109348 <___vfiprintf_internal_r+0x143c>
10108838:	a5000414 	ori	r20,r20,16
1010883c:	a080080c 	andi	r2,r20,32
10108840:	103f5f1e 	bne	r2,zero,101085c0 <__alt_data_end+0xfffe85c0>
10108844:	a080040c 	andi	r2,r20,16
10108848:	10020f26 	beq	r2,zero,10109088 <___vfiprintf_internal_r+0x117c>
1010884c:	da802217 	ldw	r10,136(sp)
10108850:	d8001d85 	stb	zero,118(sp)
10108854:	0027883a 	mov	r19,zero
10108858:	50800104 	addi	r2,r10,4
1010885c:	54800017 	ldw	r18,0(r10)
10108860:	48021116 	blt	r9,zero,101090a8 <___vfiprintf_internal_r+0x119c>
10108864:	00ffdfc4 	movi	r3,-129
10108868:	d8802215 	stw	r2,136(sp)
1010886c:	a0e8703a 	and	r20,r20,r3
10108870:	903f5e1e 	bne	r18,zero,101085ec <__alt_data_end+0xfffe85ec>
10108874:	0039883a 	mov	fp,zero
10108878:	4802a626 	beq	r9,zero,10109314 <___vfiprintf_internal_r+0x1408>
1010887c:	0025883a 	mov	r18,zero
10108880:	0027883a 	mov	r19,zero
10108884:	003f5a06 	br	101085f0 <__alt_data_end+0xfffe85f0>
10108888:	21003fcc 	andi	r4,r4,255
1010888c:	20029f1e 	bne	r4,zero,1010930c <___vfiprintf_internal_r+0x1400>
10108890:	a5000414 	ori	r20,r20,16
10108894:	a080080c 	andi	r2,r20,32
10108898:	10005e1e 	bne	r2,zero,10108a14 <___vfiprintf_internal_r+0xb08>
1010889c:	a080040c 	andi	r2,r20,16
101088a0:	1001a21e 	bne	r2,zero,10108f2c <___vfiprintf_internal_r+0x1020>
101088a4:	a080100c 	andi	r2,r20,64
101088a8:	d8001d85 	stb	zero,118(sp)
101088ac:	da802217 	ldw	r10,136(sp)
101088b0:	1002231e 	bne	r2,zero,10109140 <___vfiprintf_internal_r+0x1234>
101088b4:	50800104 	addi	r2,r10,4
101088b8:	54800017 	ldw	r18,0(r10)
101088bc:	0027883a 	mov	r19,zero
101088c0:	4801a00e 	bge	r9,zero,10108f44 <___vfiprintf_internal_r+0x1038>
101088c4:	d8802215 	stw	r2,136(sp)
101088c8:	0039883a 	mov	fp,zero
101088cc:	94c4b03a 	or	r2,r18,r19
101088d0:	103f901e 	bne	r2,zero,10108714 <__alt_data_end+0xfffe8714>
101088d4:	00800044 	movi	r2,1
101088d8:	10803fcc 	andi	r2,r2,255
101088dc:	00c00044 	movi	r3,1
101088e0:	10c05926 	beq	r2,r3,10108a48 <___vfiprintf_internal_r+0xb3c>
101088e4:	00c00084 	movi	r3,2
101088e8:	10ffe41e 	bne	r2,r3,1010887c <__alt_data_end+0xfffe887c>
101088ec:	0025883a 	mov	r18,zero
101088f0:	0027883a 	mov	r19,zero
101088f4:	00013d06 	br	10108dec <___vfiprintf_internal_r+0xee0>
101088f8:	21003fcc 	andi	r4,r4,255
101088fc:	2002811e 	bne	r4,zero,10109304 <___vfiprintf_internal_r+0x13f8>
10108900:	00840474 	movhi	r2,4113
10108904:	10be0f04 	addi	r2,r2,-1988
10108908:	d8802615 	stw	r2,152(sp)
1010890c:	a080080c 	andi	r2,r20,32
10108910:	103f561e 	bne	r2,zero,1010866c <__alt_data_end+0xfffe866c>
10108914:	a080040c 	andi	r2,r20,16
10108918:	1001d126 	beq	r2,zero,10109060 <___vfiprintf_internal_r+0x1154>
1010891c:	da802217 	ldw	r10,136(sp)
10108920:	0027883a 	mov	r19,zero
10108924:	54800017 	ldw	r18,0(r10)
10108928:	52800104 	addi	r10,r10,4
1010892c:	da802215 	stw	r10,136(sp)
10108930:	003f5306 	br	10108680 <__alt_data_end+0xfffe8680>
10108934:	da802217 	ldw	r10,136(sp)
10108938:	d8001d85 	stb	zero,118(sp)
1010893c:	55400017 	ldw	r21,0(r10)
10108940:	50c00104 	addi	r3,r10,4
10108944:	a8024226 	beq	r21,zero,10109250 <___vfiprintf_internal_r+0x1344>
10108948:	48021816 	blt	r9,zero,101091ac <___vfiprintf_internal_r+0x12a0>
1010894c:	480d883a 	mov	r6,r9
10108950:	000b883a 	mov	r5,zero
10108954:	a809883a 	mov	r4,r21
10108958:	d8c02a15 	stw	r3,168(sp)
1010895c:	da002b15 	stw	r8,172(sp)
10108960:	da402c15 	stw	r9,176(sp)
10108964:	01061080 	call	10106108 <memchr>
10108968:	d8c02a17 	ldw	r3,168(sp)
1010896c:	da002b17 	ldw	r8,172(sp)
10108970:	da402c17 	ldw	r9,176(sp)
10108974:	10024826 	beq	r2,zero,10109298 <___vfiprintf_internal_r+0x138c>
10108978:	1567c83a 	sub	r19,r2,r21
1010897c:	df001d83 	ldbu	fp,118(sp)
10108980:	d8c02215 	stw	r3,136(sp)
10108984:	0013883a 	mov	r9,zero
10108988:	003e6006 	br	1010830c <__alt_data_end+0xfffe830c>
1010898c:	21003fcc 	andi	r4,r4,255
10108990:	203fc026 	beq	r4,zero,10108894 <__alt_data_end+0xfffe8894>
10108994:	d9c01d85 	stb	r7,118(sp)
10108998:	003fbe06 	br	10108894 <__alt_data_end+0xfffe8894>
1010899c:	da802217 	ldw	r10,136(sp)
101089a0:	54400017 	ldw	r17,0(r10)
101089a4:	50800104 	addi	r2,r10,4
101089a8:	883e3b16 	blt	r17,zero,10108298 <__alt_data_end+0xfffe8298>
101089ac:	d8802215 	stw	r2,136(sp)
101089b0:	80c00007 	ldb	r3,0(r16)
101089b4:	003db406 	br	10108088 <__alt_data_end+0xfffe8088>
101089b8:	01000044 	movi	r4,1
101089bc:	01c00ac4 	movi	r7,43
101089c0:	80c00007 	ldb	r3,0(r16)
101089c4:	003db006 	br	10108088 <__alt_data_end+0xfffe8088>
101089c8:	80c00007 	ldb	r3,0(r16)
101089cc:	82800044 	addi	r10,r16,1
101089d0:	1b423c26 	beq	r3,r13,101092c4 <___vfiprintf_internal_r+0x13b8>
101089d4:	18bff404 	addi	r2,r3,-48
101089d8:	0013883a 	mov	r9,zero
101089dc:	30822b36 	bltu	r6,r2,1010928c <___vfiprintf_internal_r+0x1380>
101089e0:	50c00007 	ldb	r3,0(r10)
101089e4:	4a4002a4 	muli	r9,r9,10
101089e8:	54000044 	addi	r16,r10,1
101089ec:	8015883a 	mov	r10,r16
101089f0:	4893883a 	add	r9,r9,r2
101089f4:	18bff404 	addi	r2,r3,-48
101089f8:	30bff92e 	bgeu	r6,r2,101089e0 <__alt_data_end+0xfffe89e0>
101089fc:	483da30e 	bge	r9,zero,1010808c <__alt_data_end+0xfffe808c>
10108a00:	027fffc4 	movi	r9,-1
10108a04:	003da106 	br	1010808c <__alt_data_end+0xfffe808c>
10108a08:	a5001014 	ori	r20,r20,64
10108a0c:	80c00007 	ldb	r3,0(r16)
10108a10:	003d9d06 	br	10108088 <__alt_data_end+0xfffe8088>
10108a14:	da802217 	ldw	r10,136(sp)
10108a18:	d8001d85 	stb	zero,118(sp)
10108a1c:	50c00204 	addi	r3,r10,8
10108a20:	54800017 	ldw	r18,0(r10)
10108a24:	54c00117 	ldw	r19,4(r10)
10108a28:	4801ca16 	blt	r9,zero,10109154 <___vfiprintf_internal_r+0x1248>
10108a2c:	013fdfc4 	movi	r4,-129
10108a30:	94c4b03a 	or	r2,r18,r19
10108a34:	d8c02215 	stw	r3,136(sp)
10108a38:	a128703a 	and	r20,r20,r4
10108a3c:	0039883a 	mov	fp,zero
10108a40:	103f341e 	bne	r2,zero,10108714 <__alt_data_end+0xfffe8714>
10108a44:	483e2e26 	beq	r9,zero,10108300 <__alt_data_end+0xfffe8300>
10108a48:	0025883a 	mov	r18,zero
10108a4c:	94800c04 	addi	r18,r18,48
10108a50:	dc8019c5 	stb	r18,103(sp)
10108a54:	dcc02717 	ldw	r19,156(sp)
10108a58:	dd4019c4 	addi	r21,sp,103
10108a5c:	003e2b06 	br	1010830c <__alt_data_end+0xfffe830c>
10108a60:	21003fcc 	andi	r4,r4,255
10108a64:	2002361e 	bne	r4,zero,10109340 <___vfiprintf_internal_r+0x1434>
10108a68:	1801c126 	beq	r3,zero,10109170 <___vfiprintf_internal_r+0x1264>
10108a6c:	04800044 	movi	r18,1
10108a70:	d8c01005 	stb	r3,64(sp)
10108a74:	d8001d85 	stb	zero,118(sp)
10108a78:	9027883a 	mov	r19,r18
10108a7c:	dd401004 	addi	r21,sp,64
10108a80:	003f1106 	br	101086c8 <__alt_data_end+0xfffe86c8>
10108a84:	d9402117 	ldw	r5,132(sp)
10108a88:	d9002017 	ldw	r4,128(sp)
10108a8c:	d9801a04 	addi	r6,sp,104
10108a90:	d9c02b15 	stw	r7,172(sp)
10108a94:	dbc02a15 	stw	r15,168(sp)
10108a98:	0107df80 	call	10107df8 <__sprint_r.part.0>
10108a9c:	d9c02b17 	ldw	r7,172(sp)
10108aa0:	dbc02a17 	ldw	r15,168(sp)
10108aa4:	10006d1e 	bne	r2,zero,10108c5c <___vfiprintf_internal_r+0xd50>
10108aa8:	d9801b17 	ldw	r6,108(sp)
10108aac:	d8801c17 	ldw	r2,112(sp)
10108ab0:	d811883a 	mov	r8,sp
10108ab4:	31400044 	addi	r5,r6,1
10108ab8:	003e3306 	br	10108388 <__alt_data_end+0xfffe8388>
10108abc:	d9401b17 	ldw	r5,108(sp)
10108ac0:	d8801c17 	ldw	r2,112(sp)
10108ac4:	29000044 	addi	r4,r5,1
10108ac8:	d8c01d87 	ldb	r3,118(sp)
10108acc:	183e4d26 	beq	r3,zero,10108404 <__alt_data_end+0xfffe8404>
10108ad0:	00c00044 	movi	r3,1
10108ad4:	d9401d84 	addi	r5,sp,118
10108ad8:	10c5883a 	add	r2,r2,r3
10108adc:	41400015 	stw	r5,0(r8)
10108ae0:	40c00115 	stw	r3,4(r8)
10108ae4:	d8801c15 	stw	r2,112(sp)
10108ae8:	d9001b15 	stw	r4,108(sp)
10108aec:	014001c4 	movi	r5,7
10108af0:	2900a90e 	bge	r5,r4,10108d98 <___vfiprintf_internal_r+0xe8c>
10108af4:	1000da1e 	bne	r2,zero,10108e60 <___vfiprintf_internal_r+0xf54>
10108af8:	7000ab1e 	bne	r14,zero,10108da8 <___vfiprintf_internal_r+0xe9c>
10108afc:	000b883a 	mov	r5,zero
10108b00:	1809883a 	mov	r4,r3
10108b04:	d811883a 	mov	r8,sp
10108b08:	00c02004 	movi	r3,128
10108b0c:	e0fe4d26 	beq	fp,r3,10108444 <__alt_data_end+0xfffe8444>
10108b10:	4cf9c83a 	sub	fp,r9,r19
10108b14:	073e7b0e 	bge	zero,fp,10108504 <__alt_data_end+0xfffe8504>
10108b18:	01c00404 	movi	r7,16
10108b1c:	3f01900e 	bge	r7,fp,10109160 <___vfiprintf_internal_r+0x1254>
10108b20:	00c40474 	movhi	r3,4113
10108b24:	18fe7504 	addi	r3,r3,-1580
10108b28:	d8c02415 	stw	r3,144(sp)
10108b2c:	034001c4 	movi	r13,7
10108b30:	00000506 	br	10108b48 <___vfiprintf_internal_r+0xc3c>
10108b34:	29000084 	addi	r4,r5,2
10108b38:	42000204 	addi	r8,r8,8
10108b3c:	180b883a 	mov	r5,r3
10108b40:	e73ffc04 	addi	fp,fp,-16
10108b44:	3f000d0e 	bge	r7,fp,10108b7c <___vfiprintf_internal_r+0xc70>
10108b48:	10800404 	addi	r2,r2,16
10108b4c:	28c00044 	addi	r3,r5,1
10108b50:	45c00015 	stw	r23,0(r8)
10108b54:	41c00115 	stw	r7,4(r8)
10108b58:	d8801c15 	stw	r2,112(sp)
10108b5c:	d8c01b15 	stw	r3,108(sp)
10108b60:	68fff40e 	bge	r13,r3,10108b34 <__alt_data_end+0xfffe8b34>
10108b64:	1000101e 	bne	r2,zero,10108ba8 <___vfiprintf_internal_r+0xc9c>
10108b68:	e73ffc04 	addi	fp,fp,-16
10108b6c:	01000044 	movi	r4,1
10108b70:	000b883a 	mov	r5,zero
10108b74:	d811883a 	mov	r8,sp
10108b78:	3f3ff316 	blt	r7,fp,10108b48 <__alt_data_end+0xfffe8b48>
10108b7c:	da802417 	ldw	r10,144(sp)
10108b80:	1705883a 	add	r2,r2,fp
10108b84:	47000115 	stw	fp,4(r8)
10108b88:	42800015 	stw	r10,0(r8)
10108b8c:	d8801c15 	stw	r2,112(sp)
10108b90:	d9001b15 	stw	r4,108(sp)
10108b94:	00c001c4 	movi	r3,7
10108b98:	19003616 	blt	r3,r4,10108c74 <___vfiprintf_internal_r+0xd68>
10108b9c:	42000204 	addi	r8,r8,8
10108ba0:	21000044 	addi	r4,r4,1
10108ba4:	003e5706 	br	10108504 <__alt_data_end+0xfffe8504>
10108ba8:	d9402117 	ldw	r5,132(sp)
10108bac:	d9002017 	ldw	r4,128(sp)
10108bb0:	d9801a04 	addi	r6,sp,104
10108bb4:	d9c02b15 	stw	r7,172(sp)
10108bb8:	db402a15 	stw	r13,168(sp)
10108bbc:	0107df80 	call	10107df8 <__sprint_r.part.0>
10108bc0:	d9c02b17 	ldw	r7,172(sp)
10108bc4:	db402a17 	ldw	r13,168(sp)
10108bc8:	1000241e 	bne	r2,zero,10108c5c <___vfiprintf_internal_r+0xd50>
10108bcc:	d9401b17 	ldw	r5,108(sp)
10108bd0:	d8801c17 	ldw	r2,112(sp)
10108bd4:	d811883a 	mov	r8,sp
10108bd8:	29000044 	addi	r4,r5,1
10108bdc:	003fd806 	br	10108b40 <__alt_data_end+0xfffe8b40>
10108be0:	d9401b17 	ldw	r5,108(sp)
10108be4:	00c40474 	movhi	r3,4113
10108be8:	18fe7904 	addi	r3,r3,-1564
10108bec:	d8c02415 	stw	r3,144(sp)
10108bf0:	29400044 	addi	r5,r5,1
10108bf4:	d8c02417 	ldw	r3,144(sp)
10108bf8:	14c5883a 	add	r2,r2,r19
10108bfc:	44c00115 	stw	r19,4(r8)
10108c00:	40c00015 	stw	r3,0(r8)
10108c04:	d8801c15 	stw	r2,112(sp)
10108c08:	d9401b15 	stw	r5,108(sp)
10108c0c:	00c001c4 	movi	r3,7
10108c10:	1940070e 	bge	r3,r5,10108c30 <___vfiprintf_internal_r+0xd24>
10108c14:	103e4826 	beq	r2,zero,10108538 <__alt_data_end+0xfffe8538>
10108c18:	d9402117 	ldw	r5,132(sp)
10108c1c:	d9002017 	ldw	r4,128(sp)
10108c20:	d9801a04 	addi	r6,sp,104
10108c24:	0107df80 	call	10107df8 <__sprint_r.part.0>
10108c28:	10000c1e 	bne	r2,zero,10108c5c <___vfiprintf_internal_r+0xd50>
10108c2c:	d8801c17 	ldw	r2,112(sp)
10108c30:	8c80010e 	bge	r17,r18,10108c38 <___vfiprintf_internal_r+0xd2c>
10108c34:	9023883a 	mov	r17,r18
10108c38:	da802317 	ldw	r10,140(sp)
10108c3c:	5455883a 	add	r10,r10,r17
10108c40:	da802315 	stw	r10,140(sp)
10108c44:	103e4126 	beq	r2,zero,1010854c <__alt_data_end+0xfffe854c>
10108c48:	d9402117 	ldw	r5,132(sp)
10108c4c:	d9002017 	ldw	r4,128(sp)
10108c50:	d9801a04 	addi	r6,sp,104
10108c54:	0107df80 	call	10107df8 <__sprint_r.part.0>
10108c58:	103e3c26 	beq	r2,zero,1010854c <__alt_data_end+0xfffe854c>
10108c5c:	dd002117 	ldw	r20,132(sp)
10108c60:	a080030b 	ldhu	r2,12(r20)
10108c64:	1080100c 	andi	r2,r2,64
10108c68:	1001231e 	bne	r2,zero,101090f8 <___vfiprintf_internal_r+0x11ec>
10108c6c:	d8802317 	ldw	r2,140(sp)
10108c70:	003d7b06 	br	10108260 <__alt_data_end+0xfffe8260>
10108c74:	1000991e 	bne	r2,zero,10108edc <___vfiprintf_internal_r+0xfd0>
10108c78:	00c00044 	movi	r3,1
10108c7c:	9805883a 	mov	r2,r19
10108c80:	dd400015 	stw	r21,0(sp)
10108c84:	dcc00115 	stw	r19,4(sp)
10108c88:	dcc01c15 	stw	r19,112(sp)
10108c8c:	d8c01b15 	stw	r3,108(sp)
10108c90:	d811883a 	mov	r8,sp
10108c94:	42000204 	addi	r8,r8,8
10108c98:	a2c0010c 	andi	r11,r20,4
10108c9c:	583fe426 	beq	r11,zero,10108c30 <__alt_data_end+0xfffe8c30>
10108ca0:	8ca7c83a 	sub	r19,r17,r18
10108ca4:	04ffe20e 	bge	zero,r19,10108c30 <__alt_data_end+0xfffe8c30>
10108ca8:	01c00404 	movi	r7,16
10108cac:	3cffcc0e 	bge	r7,r19,10108be0 <__alt_data_end+0xfffe8be0>
10108cb0:	02840474 	movhi	r10,4113
10108cb4:	52be7904 	addi	r10,r10,-1564
10108cb8:	d9001b17 	ldw	r4,108(sp)
10108cbc:	da802415 	stw	r10,144(sp)
10108cc0:	382b883a 	mov	r21,r7
10108cc4:	050001c4 	movi	r20,7
10108cc8:	df002017 	ldw	fp,128(sp)
10108ccc:	00000506 	br	10108ce4 <___vfiprintf_internal_r+0xdd8>
10108cd0:	21400084 	addi	r5,r4,2
10108cd4:	42000204 	addi	r8,r8,8
10108cd8:	1809883a 	mov	r4,r3
10108cdc:	9cfffc04 	addi	r19,r19,-16
10108ce0:	acffc40e 	bge	r21,r19,10108bf4 <__alt_data_end+0xfffe8bf4>
10108ce4:	10800404 	addi	r2,r2,16
10108ce8:	20c00044 	addi	r3,r4,1
10108cec:	45800015 	stw	r22,0(r8)
10108cf0:	45400115 	stw	r21,4(r8)
10108cf4:	d8801c15 	stw	r2,112(sp)
10108cf8:	d8c01b15 	stw	r3,108(sp)
10108cfc:	a0fff40e 	bge	r20,r3,10108cd0 <__alt_data_end+0xfffe8cd0>
10108d00:	1000041e 	bne	r2,zero,10108d14 <___vfiprintf_internal_r+0xe08>
10108d04:	01400044 	movi	r5,1
10108d08:	0009883a 	mov	r4,zero
10108d0c:	d811883a 	mov	r8,sp
10108d10:	003ff206 	br	10108cdc <__alt_data_end+0xfffe8cdc>
10108d14:	d9402117 	ldw	r5,132(sp)
10108d18:	d9801a04 	addi	r6,sp,104
10108d1c:	e009883a 	mov	r4,fp
10108d20:	0107df80 	call	10107df8 <__sprint_r.part.0>
10108d24:	103fcd1e 	bne	r2,zero,10108c5c <__alt_data_end+0xfffe8c5c>
10108d28:	d9001b17 	ldw	r4,108(sp)
10108d2c:	d8801c17 	ldw	r2,112(sp)
10108d30:	d811883a 	mov	r8,sp
10108d34:	21400044 	addi	r5,r4,1
10108d38:	003fe806 	br	10108cdc <__alt_data_end+0xfffe8cdc>
10108d3c:	d9402117 	ldw	r5,132(sp)
10108d40:	d9002017 	ldw	r4,128(sp)
10108d44:	d9801a04 	addi	r6,sp,104
10108d48:	d9c02b15 	stw	r7,172(sp)
10108d4c:	db402a15 	stw	r13,168(sp)
10108d50:	0107df80 	call	10107df8 <__sprint_r.part.0>
10108d54:	d9c02b17 	ldw	r7,172(sp)
10108d58:	db402a17 	ldw	r13,168(sp)
10108d5c:	103fbf1e 	bne	r2,zero,10108c5c <__alt_data_end+0xfffe8c5c>
10108d60:	d9401b17 	ldw	r5,108(sp)
10108d64:	d8801c17 	ldw	r2,112(sp)
10108d68:	d811883a 	mov	r8,sp
10108d6c:	29800044 	addi	r6,r5,1
10108d70:	003dc406 	br	10108484 <__alt_data_end+0xfffe8484>
10108d74:	1000d21e 	bne	r2,zero,101090c0 <___vfiprintf_internal_r+0x11b4>
10108d78:	d8c01d87 	ldb	r3,118(sp)
10108d7c:	18009526 	beq	r3,zero,10108fd4 <___vfiprintf_internal_r+0x10c8>
10108d80:	00800044 	movi	r2,1
10108d84:	d8c01d84 	addi	r3,sp,118
10108d88:	1009883a 	mov	r4,r2
10108d8c:	d8c00015 	stw	r3,0(sp)
10108d90:	d8800115 	stw	r2,4(sp)
10108d94:	d811883a 	mov	r8,sp
10108d98:	200b883a 	mov	r5,r4
10108d9c:	42000204 	addi	r8,r8,8
10108da0:	21000044 	addi	r4,r4,1
10108da4:	003d9706 	br	10108404 <__alt_data_end+0xfffe8404>
10108da8:	d9001d04 	addi	r4,sp,116
10108dac:	00800084 	movi	r2,2
10108db0:	d9000015 	stw	r4,0(sp)
10108db4:	d8800115 	stw	r2,4(sp)
10108db8:	1809883a 	mov	r4,r3
10108dbc:	d811883a 	mov	r8,sp
10108dc0:	200b883a 	mov	r5,r4
10108dc4:	42000204 	addi	r8,r8,8
10108dc8:	21000044 	addi	r4,r4,1
10108dcc:	003f4e06 	br	10108b08 <__alt_data_end+0xfffe8b08>
10108dd0:	d8001d85 	stb	zero,118(sp)
10108dd4:	48005016 	blt	r9,zero,10108f18 <___vfiprintf_internal_r+0x100c>
10108dd8:	00ffdfc4 	movi	r3,-129
10108ddc:	94c4b03a 	or	r2,r18,r19
10108de0:	a0e8703a 	and	r20,r20,r3
10108de4:	103d4426 	beq	r2,zero,101082f8 <__alt_data_end+0xfffe82f8>
10108de8:	0039883a 	mov	fp,zero
10108dec:	d9002617 	ldw	r4,152(sp)
10108df0:	dd401a04 	addi	r21,sp,104
10108df4:	908003cc 	andi	r2,r18,15
10108df8:	9806973a 	slli	r3,r19,28
10108dfc:	2085883a 	add	r2,r4,r2
10108e00:	9024d13a 	srli	r18,r18,4
10108e04:	10800003 	ldbu	r2,0(r2)
10108e08:	9826d13a 	srli	r19,r19,4
10108e0c:	ad7fffc4 	addi	r21,r21,-1
10108e10:	1ca4b03a 	or	r18,r3,r18
10108e14:	a8800005 	stb	r2,0(r21)
10108e18:	94c4b03a 	or	r2,r18,r19
10108e1c:	103ff51e 	bne	r2,zero,10108df4 <__alt_data_end+0xfffe8df4>
10108e20:	003e5906 	br	10108788 <__alt_data_end+0xfffe8788>
10108e24:	d9402117 	ldw	r5,132(sp)
10108e28:	d9002017 	ldw	r4,128(sp)
10108e2c:	d9801a04 	addi	r6,sp,104
10108e30:	0107df80 	call	10107df8 <__sprint_r.part.0>
10108e34:	103f891e 	bne	r2,zero,10108c5c <__alt_data_end+0xfffe8c5c>
10108e38:	d8801c17 	ldw	r2,112(sp)
10108e3c:	d811883a 	mov	r8,sp
10108e40:	003f9506 	br	10108c98 <__alt_data_end+0xfffe8c98>
10108e44:	d9402117 	ldw	r5,132(sp)
10108e48:	d9002017 	ldw	r4,128(sp)
10108e4c:	d9801a04 	addi	r6,sp,104
10108e50:	0107df80 	call	10107df8 <__sprint_r.part.0>
10108e54:	103f811e 	bne	r2,zero,10108c5c <__alt_data_end+0xfffe8c5c>
10108e58:	d811883a 	mov	r8,sp
10108e5c:	003ced06 	br	10108214 <__alt_data_end+0xfffe8214>
10108e60:	d9402117 	ldw	r5,132(sp)
10108e64:	d9002017 	ldw	r4,128(sp)
10108e68:	d9801a04 	addi	r6,sp,104
10108e6c:	da402c15 	stw	r9,176(sp)
10108e70:	db802a15 	stw	r14,168(sp)
10108e74:	0107df80 	call	10107df8 <__sprint_r.part.0>
10108e78:	da402c17 	ldw	r9,176(sp)
10108e7c:	db802a17 	ldw	r14,168(sp)
10108e80:	103f761e 	bne	r2,zero,10108c5c <__alt_data_end+0xfffe8c5c>
10108e84:	d9401b17 	ldw	r5,108(sp)
10108e88:	d8801c17 	ldw	r2,112(sp)
10108e8c:	d811883a 	mov	r8,sp
10108e90:	29000044 	addi	r4,r5,1
10108e94:	003d5b06 	br	10108404 <__alt_data_end+0xfffe8404>
10108e98:	d9402117 	ldw	r5,132(sp)
10108e9c:	d9002017 	ldw	r4,128(sp)
10108ea0:	d9801a04 	addi	r6,sp,104
10108ea4:	da402c15 	stw	r9,176(sp)
10108ea8:	0107df80 	call	10107df8 <__sprint_r.part.0>
10108eac:	da402c17 	ldw	r9,176(sp)
10108eb0:	103f6a1e 	bne	r2,zero,10108c5c <__alt_data_end+0xfffe8c5c>
10108eb4:	d9401b17 	ldw	r5,108(sp)
10108eb8:	d8801c17 	ldw	r2,112(sp)
10108ebc:	d811883a 	mov	r8,sp
10108ec0:	29000044 	addi	r4,r5,1
10108ec4:	003f1006 	br	10108b08 <__alt_data_end+0xfffe8b08>
10108ec8:	1000c31e 	bne	r2,zero,101091d8 <___vfiprintf_internal_r+0x12cc>
10108ecc:	01000044 	movi	r4,1
10108ed0:	000b883a 	mov	r5,zero
10108ed4:	d811883a 	mov	r8,sp
10108ed8:	003f0d06 	br	10108b10 <__alt_data_end+0xfffe8b10>
10108edc:	d9402117 	ldw	r5,132(sp)
10108ee0:	d9002017 	ldw	r4,128(sp)
10108ee4:	d9801a04 	addi	r6,sp,104
10108ee8:	0107df80 	call	10107df8 <__sprint_r.part.0>
10108eec:	103f5b1e 	bne	r2,zero,10108c5c <__alt_data_end+0xfffe8c5c>
10108ef0:	d9001b17 	ldw	r4,108(sp)
10108ef4:	d8801c17 	ldw	r2,112(sp)
10108ef8:	d811883a 	mov	r8,sp
10108efc:	21000044 	addi	r4,r4,1
10108f00:	003d8006 	br	10108504 <__alt_data_end+0xfffe8504>
10108f04:	01040474 	movhi	r4,4113
10108f08:	213e1404 	addi	r4,r4,-1968
10108f0c:	d9002615 	stw	r4,152(sp)
10108f10:	d8c02215 	stw	r3,136(sp)
10108f14:	1029883a 	mov	r20,r2
10108f18:	94c4b03a 	or	r2,r18,r19
10108f1c:	103fb21e 	bne	r2,zero,10108de8 <__alt_data_end+0xfffe8de8>
10108f20:	0039883a 	mov	fp,zero
10108f24:	00800084 	movi	r2,2
10108f28:	003e6b06 	br	101088d8 <__alt_data_end+0xfffe88d8>
10108f2c:	da802217 	ldw	r10,136(sp)
10108f30:	d8001d85 	stb	zero,118(sp)
10108f34:	0027883a 	mov	r19,zero
10108f38:	50800104 	addi	r2,r10,4
10108f3c:	54800017 	ldw	r18,0(r10)
10108f40:	483e6016 	blt	r9,zero,101088c4 <__alt_data_end+0xfffe88c4>
10108f44:	00ffdfc4 	movi	r3,-129
10108f48:	d8802215 	stw	r2,136(sp)
10108f4c:	a0e8703a 	and	r20,r20,r3
10108f50:	0039883a 	mov	fp,zero
10108f54:	903ebb26 	beq	r18,zero,10108a44 <__alt_data_end+0xfffe8a44>
10108f58:	00800244 	movi	r2,9
10108f5c:	14bdee36 	bltu	r2,r18,10108718 <__alt_data_end+0xfffe8718>
10108f60:	003eba06 	br	10108a4c <__alt_data_end+0xfffe8a4c>
10108f64:	00800c04 	movi	r2,48
10108f68:	d8c01d45 	stb	r3,117(sp)
10108f6c:	d8801d05 	stb	r2,116(sp)
10108f70:	d8001d85 	stb	zero,118(sp)
10108f74:	a0c00094 	ori	r3,r20,2
10108f78:	4800a916 	blt	r9,zero,10109220 <___vfiprintf_internal_r+0x1314>
10108f7c:	00bfdfc4 	movi	r2,-129
10108f80:	a096703a 	and	r11,r20,r2
10108f84:	5d000094 	ori	r20,r11,2
10108f88:	0039883a 	mov	fp,zero
10108f8c:	003f9706 	br	10108dec <__alt_data_end+0xfffe8dec>
10108f90:	8025883a 	mov	r18,r16
10108f94:	003c2e06 	br	10108050 <__alt_data_end+0xfffe8050>
10108f98:	00840474 	movhi	r2,4113
10108f9c:	10be1404 	addi	r2,r2,-1968
10108fa0:	0039883a 	mov	fp,zero
10108fa4:	d8802615 	stw	r2,152(sp)
10108fa8:	003f9006 	br	10108dec <__alt_data_end+0xfffe8dec>
10108fac:	04a5c83a 	sub	r18,zero,r18
10108fb0:	07000b44 	movi	fp,45
10108fb4:	9004c03a 	cmpne	r2,r18,zero
10108fb8:	04e7c83a 	sub	r19,zero,r19
10108fbc:	df001d85 	stb	fp,118(sp)
10108fc0:	98a7c83a 	sub	r19,r19,r2
10108fc4:	48009f16 	blt	r9,zero,10109244 <___vfiprintf_internal_r+0x1338>
10108fc8:	00bfdfc4 	movi	r2,-129
10108fcc:	a0a8703a 	and	r20,r20,r2
10108fd0:	003dd006 	br	10108714 <__alt_data_end+0xfffe8714>
10108fd4:	70004c26 	beq	r14,zero,10109108 <___vfiprintf_internal_r+0x11fc>
10108fd8:	00800084 	movi	r2,2
10108fdc:	d8c01d04 	addi	r3,sp,116
10108fe0:	d8c00015 	stw	r3,0(sp)
10108fe4:	d8800115 	stw	r2,4(sp)
10108fe8:	01000044 	movi	r4,1
10108fec:	d811883a 	mov	r8,sp
10108ff0:	003f7306 	br	10108dc0 <__alt_data_end+0xfffe8dc0>
10108ff4:	a080100c 	andi	r2,r20,64
10108ff8:	da802217 	ldw	r10,136(sp)
10108ffc:	103e0626 	beq	r2,zero,10108818 <__alt_data_end+0xfffe8818>
10109000:	5480000f 	ldh	r18,0(r10)
10109004:	52800104 	addi	r10,r10,4
10109008:	da802215 	stw	r10,136(sp)
1010900c:	9027d7fa 	srai	r19,r18,31
10109010:	9805883a 	mov	r2,r19
10109014:	003db806 	br	101086f8 <__alt_data_end+0xfffe86f8>
10109018:	a080040c 	andi	r2,r20,16
1010901c:	1000091e 	bne	r2,zero,10109044 <___vfiprintf_internal_r+0x1138>
10109020:	a2c0100c 	andi	r11,r20,64
10109024:	58000726 	beq	r11,zero,10109044 <___vfiprintf_internal_r+0x1138>
10109028:	da802217 	ldw	r10,136(sp)
1010902c:	50800017 	ldw	r2,0(r10)
10109030:	52800104 	addi	r10,r10,4
10109034:	da802215 	stw	r10,136(sp)
10109038:	da802317 	ldw	r10,140(sp)
1010903c:	1280000d 	sth	r10,0(r2)
10109040:	003be706 	br	10107fe0 <__alt_data_end+0xfffe7fe0>
10109044:	da802217 	ldw	r10,136(sp)
10109048:	50800017 	ldw	r2,0(r10)
1010904c:	52800104 	addi	r10,r10,4
10109050:	da802215 	stw	r10,136(sp)
10109054:	da802317 	ldw	r10,140(sp)
10109058:	12800015 	stw	r10,0(r2)
1010905c:	003be006 	br	10107fe0 <__alt_data_end+0xfffe7fe0>
10109060:	a080100c 	andi	r2,r20,64
10109064:	da802217 	ldw	r10,136(sp)
10109068:	10003026 	beq	r2,zero,1010912c <___vfiprintf_internal_r+0x1220>
1010906c:	5480000b 	ldhu	r18,0(r10)
10109070:	52800104 	addi	r10,r10,4
10109074:	0027883a 	mov	r19,zero
10109078:	da802215 	stw	r10,136(sp)
1010907c:	003d8006 	br	10108680 <__alt_data_end+0xfffe8680>
10109080:	80c00007 	ldb	r3,0(r16)
10109084:	003c0006 	br	10108088 <__alt_data_end+0xfffe8088>
10109088:	a080100c 	andi	r2,r20,64
1010908c:	d8001d85 	stb	zero,118(sp)
10109090:	da802217 	ldw	r10,136(sp)
10109094:	1000201e 	bne	r2,zero,10109118 <___vfiprintf_internal_r+0x120c>
10109098:	50800104 	addi	r2,r10,4
1010909c:	54800017 	ldw	r18,0(r10)
101090a0:	0027883a 	mov	r19,zero
101090a4:	483def0e 	bge	r9,zero,10108864 <__alt_data_end+0xfffe8864>
101090a8:	94c6b03a 	or	r3,r18,r19
101090ac:	d8802215 	stw	r2,136(sp)
101090b0:	183d4e1e 	bne	r3,zero,101085ec <__alt_data_end+0xfffe85ec>
101090b4:	0039883a 	mov	fp,zero
101090b8:	0005883a 	mov	r2,zero
101090bc:	003e0606 	br	101088d8 <__alt_data_end+0xfffe88d8>
101090c0:	d9402117 	ldw	r5,132(sp)
101090c4:	d9002017 	ldw	r4,128(sp)
101090c8:	d9801a04 	addi	r6,sp,104
101090cc:	da402c15 	stw	r9,176(sp)
101090d0:	db802a15 	stw	r14,168(sp)
101090d4:	0107df80 	call	10107df8 <__sprint_r.part.0>
101090d8:	da402c17 	ldw	r9,176(sp)
101090dc:	db802a17 	ldw	r14,168(sp)
101090e0:	103ede1e 	bne	r2,zero,10108c5c <__alt_data_end+0xfffe8c5c>
101090e4:	d9401b17 	ldw	r5,108(sp)
101090e8:	d8801c17 	ldw	r2,112(sp)
101090ec:	d811883a 	mov	r8,sp
101090f0:	29000044 	addi	r4,r5,1
101090f4:	003e7406 	br	10108ac8 <__alt_data_end+0xfffe8ac8>
101090f8:	00bfffc4 	movi	r2,-1
101090fc:	003c5806 	br	10108260 <__alt_data_end+0xfffe8260>
10109100:	d811883a 	mov	r8,sp
10109104:	003ee806 	br	10108ca8 <__alt_data_end+0xfffe8ca8>
10109108:	000b883a 	mov	r5,zero
1010910c:	01000044 	movi	r4,1
10109110:	d811883a 	mov	r8,sp
10109114:	003e7c06 	br	10108b08 <__alt_data_end+0xfffe8b08>
10109118:	50800104 	addi	r2,r10,4
1010911c:	5480000b 	ldhu	r18,0(r10)
10109120:	0027883a 	mov	r19,zero
10109124:	483dcf0e 	bge	r9,zero,10108864 <__alt_data_end+0xfffe8864>
10109128:	003fdf06 	br	101090a8 <__alt_data_end+0xfffe90a8>
1010912c:	54800017 	ldw	r18,0(r10)
10109130:	52800104 	addi	r10,r10,4
10109134:	0027883a 	mov	r19,zero
10109138:	da802215 	stw	r10,136(sp)
1010913c:	003d5006 	br	10108680 <__alt_data_end+0xfffe8680>
10109140:	50800104 	addi	r2,r10,4
10109144:	5480000b 	ldhu	r18,0(r10)
10109148:	0027883a 	mov	r19,zero
1010914c:	483f7d0e 	bge	r9,zero,10108f44 <__alt_data_end+0xfffe8f44>
10109150:	003ddc06 	br	101088c4 <__alt_data_end+0xfffe88c4>
10109154:	d8c02215 	stw	r3,136(sp)
10109158:	0039883a 	mov	fp,zero
1010915c:	003ddb06 	br	101088cc <__alt_data_end+0xfffe88cc>
10109160:	02840474 	movhi	r10,4113
10109164:	52be7504 	addi	r10,r10,-1580
10109168:	da802415 	stw	r10,144(sp)
1010916c:	003e8306 	br	10108b7c <__alt_data_end+0xfffe8b7c>
10109170:	d8801c17 	ldw	r2,112(sp)
10109174:	dd002117 	ldw	r20,132(sp)
10109178:	103eb926 	beq	r2,zero,10108c60 <__alt_data_end+0xfffe8c60>
1010917c:	d9002017 	ldw	r4,128(sp)
10109180:	d9801a04 	addi	r6,sp,104
10109184:	a00b883a 	mov	r5,r20
10109188:	0107df80 	call	10107df8 <__sprint_r.part.0>
1010918c:	003eb406 	br	10108c60 <__alt_data_end+0xfffe8c60>
10109190:	80c00043 	ldbu	r3,1(r16)
10109194:	a5000814 	ori	r20,r20,32
10109198:	84000044 	addi	r16,r16,1
1010919c:	18c03fcc 	andi	r3,r3,255
101091a0:	18c0201c 	xori	r3,r3,128
101091a4:	18ffe004 	addi	r3,r3,-128
101091a8:	003bb706 	br	10108088 <__alt_data_end+0xfffe8088>
101091ac:	a809883a 	mov	r4,r21
101091b0:	d8c02a15 	stw	r3,168(sp)
101091b4:	da002b15 	stw	r8,172(sp)
101091b8:	01008600 	call	10100860 <strlen>
101091bc:	d8c02a17 	ldw	r3,168(sp)
101091c0:	1027883a 	mov	r19,r2
101091c4:	df001d83 	ldbu	fp,118(sp)
101091c8:	d8c02215 	stw	r3,136(sp)
101091cc:	0013883a 	mov	r9,zero
101091d0:	da002b17 	ldw	r8,172(sp)
101091d4:	003c4d06 	br	1010830c <__alt_data_end+0xfffe830c>
101091d8:	d9402117 	ldw	r5,132(sp)
101091dc:	d9002017 	ldw	r4,128(sp)
101091e0:	d9801a04 	addi	r6,sp,104
101091e4:	da402c15 	stw	r9,176(sp)
101091e8:	0107df80 	call	10107df8 <__sprint_r.part.0>
101091ec:	da402c17 	ldw	r9,176(sp)
101091f0:	103e9a1e 	bne	r2,zero,10108c5c <__alt_data_end+0xfffe8c5c>
101091f4:	d9401b17 	ldw	r5,108(sp)
101091f8:	d8801c17 	ldw	r2,112(sp)
101091fc:	d811883a 	mov	r8,sp
10109200:	29000044 	addi	r4,r5,1
10109204:	003e4206 	br	10108b10 <__alt_data_end+0xfffe8b10>
10109208:	d9401b17 	ldw	r5,108(sp)
1010920c:	01040474 	movhi	r4,4113
10109210:	213e7904 	addi	r4,r4,-1564
10109214:	d9002415 	stw	r4,144(sp)
10109218:	29400044 	addi	r5,r5,1
1010921c:	003c6d06 	br	101083d4 <__alt_data_end+0xfffe83d4>
10109220:	0039883a 	mov	fp,zero
10109224:	00800084 	movi	r2,2
10109228:	10803fcc 	andi	r2,r2,255
1010922c:	01000044 	movi	r4,1
10109230:	11001e26 	beq	r2,r4,101092ac <___vfiprintf_internal_r+0x13a0>
10109234:	01000084 	movi	r4,2
10109238:	11001e1e 	bne	r2,r4,101092b4 <___vfiprintf_internal_r+0x13a8>
1010923c:	1829883a 	mov	r20,r3
10109240:	003eea06 	br	10108dec <__alt_data_end+0xfffe8dec>
10109244:	a007883a 	mov	r3,r20
10109248:	00800044 	movi	r2,1
1010924c:	003ff606 	br	10109228 <__alt_data_end+0xfffe9228>
10109250:	00800184 	movi	r2,6
10109254:	1240012e 	bgeu	r2,r9,1010925c <___vfiprintf_internal_r+0x1350>
10109258:	1013883a 	mov	r9,r2
1010925c:	4827883a 	mov	r19,r9
10109260:	4825883a 	mov	r18,r9
10109264:	48001516 	blt	r9,zero,101092bc <___vfiprintf_internal_r+0x13b0>
10109268:	05440474 	movhi	r21,4113
1010926c:	d8c02215 	stw	r3,136(sp)
10109270:	ad7e1904 	addi	r21,r21,-1948
10109274:	003d1406 	br	101086c8 <__alt_data_end+0xfffe86c8>
10109278:	02840474 	movhi	r10,4113
1010927c:	52be7504 	addi	r10,r10,-1580
10109280:	da802415 	stw	r10,144(sp)
10109284:	200d883a 	mov	r6,r4
10109288:	003c9106 	br	101084d0 <__alt_data_end+0xfffe84d0>
1010928c:	5021883a 	mov	r16,r10
10109290:	0013883a 	mov	r9,zero
10109294:	003b7d06 	br	1010808c <__alt_data_end+0xfffe808c>
10109298:	4827883a 	mov	r19,r9
1010929c:	df001d83 	ldbu	fp,118(sp)
101092a0:	d8c02215 	stw	r3,136(sp)
101092a4:	0013883a 	mov	r9,zero
101092a8:	003c1806 	br	1010830c <__alt_data_end+0xfffe830c>
101092ac:	1829883a 	mov	r20,r3
101092b0:	003d1806 	br	10108714 <__alt_data_end+0xfffe8714>
101092b4:	1829883a 	mov	r20,r3
101092b8:	003ccd06 	br	101085f0 <__alt_data_end+0xfffe85f0>
101092bc:	0025883a 	mov	r18,zero
101092c0:	003fe906 	br	10109268 <__alt_data_end+0xfffe9268>
101092c4:	d8802217 	ldw	r2,136(sp)
101092c8:	80c00043 	ldbu	r3,1(r16)
101092cc:	5021883a 	mov	r16,r10
101092d0:	12400017 	ldw	r9,0(r2)
101092d4:	10800104 	addi	r2,r2,4
101092d8:	d8802215 	stw	r2,136(sp)
101092dc:	483faf0e 	bge	r9,zero,1010919c <__alt_data_end+0xfffe919c>
101092e0:	18c03fcc 	andi	r3,r3,255
101092e4:	18c0201c 	xori	r3,r3,128
101092e8:	027fffc4 	movi	r9,-1
101092ec:	18ffe004 	addi	r3,r3,-128
101092f0:	003b6506 	br	10108088 <__alt_data_end+0xfffe8088>
101092f4:	d9c01d85 	stb	r7,118(sp)
101092f8:	003ca006 	br	1010857c <__alt_data_end+0xfffe857c>
101092fc:	d9c01d85 	stb	r7,118(sp)
10109300:	003cad06 	br	101085b8 <__alt_data_end+0xfffe85b8>
10109304:	d9c01d85 	stb	r7,118(sp)
10109308:	003d7d06 	br	10108900 <__alt_data_end+0xfffe8900>
1010930c:	d9c01d85 	stb	r7,118(sp)
10109310:	003d5f06 	br	10108890 <__alt_data_end+0xfffe8890>
10109314:	a080004c 	andi	r2,r20,1
10109318:	0039883a 	mov	fp,zero
1010931c:	10000526 	beq	r2,zero,10109334 <___vfiprintf_internal_r+0x1428>
10109320:	00800c04 	movi	r2,48
10109324:	d88019c5 	stb	r2,103(sp)
10109328:	dcc02717 	ldw	r19,156(sp)
1010932c:	dd4019c4 	addi	r21,sp,103
10109330:	003bf606 	br	1010830c <__alt_data_end+0xfffe830c>
10109334:	0027883a 	mov	r19,zero
10109338:	dd401a04 	addi	r21,sp,104
1010933c:	003bf306 	br	1010830c <__alt_data_end+0xfffe830c>
10109340:	d9c01d85 	stb	r7,118(sp)
10109344:	003dc806 	br	10108a68 <__alt_data_end+0xfffe8a68>
10109348:	d9c01d85 	stb	r7,118(sp)
1010934c:	003d3a06 	br	10108838 <__alt_data_end+0xfffe8838>
10109350:	d9c01d85 	stb	r7,118(sp)
10109354:	003d2a06 	br	10108800 <__alt_data_end+0xfffe8800>
10109358:	d9c01d85 	stb	r7,118(sp)
1010935c:	003cde06 	br	101086d8 <__alt_data_end+0xfffe86d8>
10109360:	d9c01d85 	stb	r7,118(sp)
10109364:	003cbc06 	br	10108658 <__alt_data_end+0xfffe8658>

10109368 <__vfiprintf_internal>:
10109368:	00840474 	movhi	r2,4113
1010936c:	10857604 	addi	r2,r2,5592
10109370:	300f883a 	mov	r7,r6
10109374:	280d883a 	mov	r6,r5
10109378:	200b883a 	mov	r5,r4
1010937c:	11000017 	ldw	r4,0(r2)
10109380:	0107f0c1 	jmpi	10107f0c <___vfiprintf_internal_r>

10109384 <__sbprintf>:
10109384:	2880030b 	ldhu	r2,12(r5)
10109388:	2ac01917 	ldw	r11,100(r5)
1010938c:	2a80038b 	ldhu	r10,14(r5)
10109390:	2a400717 	ldw	r9,28(r5)
10109394:	2a000917 	ldw	r8,36(r5)
10109398:	defee204 	addi	sp,sp,-1144
1010939c:	00c10004 	movi	r3,1024
101093a0:	dc011a15 	stw	r16,1128(sp)
101093a4:	10bfff4c 	andi	r2,r2,65533
101093a8:	2821883a 	mov	r16,r5
101093ac:	d8cb883a 	add	r5,sp,r3
101093b0:	dc811c15 	stw	r18,1136(sp)
101093b4:	dc411b15 	stw	r17,1132(sp)
101093b8:	dfc11d15 	stw	ra,1140(sp)
101093bc:	2025883a 	mov	r18,r4
101093c0:	d881030d 	sth	r2,1036(sp)
101093c4:	dac11915 	stw	r11,1124(sp)
101093c8:	da81038d 	sth	r10,1038(sp)
101093cc:	da410715 	stw	r9,1052(sp)
101093d0:	da010915 	stw	r8,1060(sp)
101093d4:	dec10015 	stw	sp,1024(sp)
101093d8:	dec10415 	stw	sp,1040(sp)
101093dc:	d8c10215 	stw	r3,1032(sp)
101093e0:	d8c10515 	stw	r3,1044(sp)
101093e4:	d8010615 	stw	zero,1048(sp)
101093e8:	0107f0c0 	call	10107f0c <___vfiprintf_internal_r>
101093ec:	1023883a 	mov	r17,r2
101093f0:	10000416 	blt	r2,zero,10109404 <__sbprintf+0x80>
101093f4:	d9410004 	addi	r5,sp,1024
101093f8:	9009883a 	mov	r4,r18
101093fc:	01047c00 	call	101047c0 <_fflush_r>
10109400:	10000d1e 	bne	r2,zero,10109438 <__sbprintf+0xb4>
10109404:	d881030b 	ldhu	r2,1036(sp)
10109408:	1080100c 	andi	r2,r2,64
1010940c:	10000326 	beq	r2,zero,1010941c <__sbprintf+0x98>
10109410:	8080030b 	ldhu	r2,12(r16)
10109414:	10801014 	ori	r2,r2,64
10109418:	8080030d 	sth	r2,12(r16)
1010941c:	8805883a 	mov	r2,r17
10109420:	dfc11d17 	ldw	ra,1140(sp)
10109424:	dc811c17 	ldw	r18,1136(sp)
10109428:	dc411b17 	ldw	r17,1132(sp)
1010942c:	dc011a17 	ldw	r16,1128(sp)
10109430:	dec11e04 	addi	sp,sp,1144
10109434:	f800283a 	ret
10109438:	047fffc4 	movi	r17,-1
1010943c:	003ff106 	br	10109404 <__alt_data_end+0xfffe9404>

10109440 <_write_r>:
10109440:	defffd04 	addi	sp,sp,-12
10109444:	2805883a 	mov	r2,r5
10109448:	dc000015 	stw	r16,0(sp)
1010944c:	04040474 	movhi	r16,4113
10109450:	dc400115 	stw	r17,4(sp)
10109454:	300b883a 	mov	r5,r6
10109458:	840c4604 	addi	r16,r16,12568
1010945c:	2023883a 	mov	r17,r4
10109460:	380d883a 	mov	r6,r7
10109464:	1009883a 	mov	r4,r2
10109468:	dfc00215 	stw	ra,8(sp)
1010946c:	80000015 	stw	zero,0(r16)
10109470:	010d9040 	call	1010d904 <write>
10109474:	00ffffc4 	movi	r3,-1
10109478:	10c00526 	beq	r2,r3,10109490 <_write_r+0x50>
1010947c:	dfc00217 	ldw	ra,8(sp)
10109480:	dc400117 	ldw	r17,4(sp)
10109484:	dc000017 	ldw	r16,0(sp)
10109488:	dec00304 	addi	sp,sp,12
1010948c:	f800283a 	ret
10109490:	80c00017 	ldw	r3,0(r16)
10109494:	183ff926 	beq	r3,zero,1010947c <__alt_data_end+0xfffe947c>
10109498:	88c00015 	stw	r3,0(r17)
1010949c:	003ff706 	br	1010947c <__alt_data_end+0xfffe947c>

101094a0 <_close_r>:
101094a0:	defffd04 	addi	sp,sp,-12
101094a4:	dc000015 	stw	r16,0(sp)
101094a8:	04040474 	movhi	r16,4113
101094ac:	dc400115 	stw	r17,4(sp)
101094b0:	840c4604 	addi	r16,r16,12568
101094b4:	2023883a 	mov	r17,r4
101094b8:	2809883a 	mov	r4,r5
101094bc:	dfc00215 	stw	ra,8(sp)
101094c0:	80000015 	stw	zero,0(r16)
101094c4:	010d0900 	call	1010d090 <close>
101094c8:	00ffffc4 	movi	r3,-1
101094cc:	10c00526 	beq	r2,r3,101094e4 <_close_r+0x44>
101094d0:	dfc00217 	ldw	ra,8(sp)
101094d4:	dc400117 	ldw	r17,4(sp)
101094d8:	dc000017 	ldw	r16,0(sp)
101094dc:	dec00304 	addi	sp,sp,12
101094e0:	f800283a 	ret
101094e4:	80c00017 	ldw	r3,0(r16)
101094e8:	183ff926 	beq	r3,zero,101094d0 <__alt_data_end+0xfffe94d0>
101094ec:	88c00015 	stw	r3,0(r17)
101094f0:	003ff706 	br	101094d0 <__alt_data_end+0xfffe94d0>

101094f4 <_calloc_r>:
101094f4:	298b383a 	mul	r5,r5,r6
101094f8:	defffe04 	addi	sp,sp,-8
101094fc:	dfc00115 	stw	ra,4(sp)
10109500:	dc000015 	stw	r16,0(sp)
10109504:	01058fc0 	call	101058fc <_malloc_r>
10109508:	10002926 	beq	r2,zero,101095b0 <_calloc_r+0xbc>
1010950c:	11bfff17 	ldw	r6,-4(r2)
10109510:	1021883a 	mov	r16,r2
10109514:	00bfff04 	movi	r2,-4
10109518:	308c703a 	and	r6,r6,r2
1010951c:	00c00904 	movi	r3,36
10109520:	308d883a 	add	r6,r6,r2
10109524:	19801636 	bltu	r3,r6,10109580 <_calloc_r+0x8c>
10109528:	008004c4 	movi	r2,19
1010952c:	11800b2e 	bgeu	r2,r6,1010955c <_calloc_r+0x68>
10109530:	80000015 	stw	zero,0(r16)
10109534:	80000115 	stw	zero,4(r16)
10109538:	008006c4 	movi	r2,27
1010953c:	11801a2e 	bgeu	r2,r6,101095a8 <_calloc_r+0xb4>
10109540:	80000215 	stw	zero,8(r16)
10109544:	80000315 	stw	zero,12(r16)
10109548:	30c0151e 	bne	r6,r3,101095a0 <_calloc_r+0xac>
1010954c:	80000415 	stw	zero,16(r16)
10109550:	80800604 	addi	r2,r16,24
10109554:	80000515 	stw	zero,20(r16)
10109558:	00000106 	br	10109560 <_calloc_r+0x6c>
1010955c:	8005883a 	mov	r2,r16
10109560:	10000015 	stw	zero,0(r2)
10109564:	10000115 	stw	zero,4(r2)
10109568:	10000215 	stw	zero,8(r2)
1010956c:	8005883a 	mov	r2,r16
10109570:	dfc00117 	ldw	ra,4(sp)
10109574:	dc000017 	ldw	r16,0(sp)
10109578:	dec00204 	addi	sp,sp,8
1010957c:	f800283a 	ret
10109580:	000b883a 	mov	r5,zero
10109584:	8009883a 	mov	r4,r16
10109588:	01064900 	call	10106490 <memset>
1010958c:	8005883a 	mov	r2,r16
10109590:	dfc00117 	ldw	ra,4(sp)
10109594:	dc000017 	ldw	r16,0(sp)
10109598:	dec00204 	addi	sp,sp,8
1010959c:	f800283a 	ret
101095a0:	80800404 	addi	r2,r16,16
101095a4:	003fee06 	br	10109560 <__alt_data_end+0xfffe9560>
101095a8:	80800204 	addi	r2,r16,8
101095ac:	003fec06 	br	10109560 <__alt_data_end+0xfffe9560>
101095b0:	0005883a 	mov	r2,zero
101095b4:	003fee06 	br	10109570 <__alt_data_end+0xfffe9570>

101095b8 <_fclose_r>:
101095b8:	28003926 	beq	r5,zero,101096a0 <_fclose_r+0xe8>
101095bc:	defffc04 	addi	sp,sp,-16
101095c0:	dc400115 	stw	r17,4(sp)
101095c4:	dc000015 	stw	r16,0(sp)
101095c8:	dfc00315 	stw	ra,12(sp)
101095cc:	dc800215 	stw	r18,8(sp)
101095d0:	2023883a 	mov	r17,r4
101095d4:	2821883a 	mov	r16,r5
101095d8:	20000226 	beq	r4,zero,101095e4 <_fclose_r+0x2c>
101095dc:	20800e17 	ldw	r2,56(r4)
101095e0:	10002726 	beq	r2,zero,10109680 <_fclose_r+0xc8>
101095e4:	8080030f 	ldh	r2,12(r16)
101095e8:	1000071e 	bne	r2,zero,10109608 <_fclose_r+0x50>
101095ec:	0005883a 	mov	r2,zero
101095f0:	dfc00317 	ldw	ra,12(sp)
101095f4:	dc800217 	ldw	r18,8(sp)
101095f8:	dc400117 	ldw	r17,4(sp)
101095fc:	dc000017 	ldw	r16,0(sp)
10109600:	dec00404 	addi	sp,sp,16
10109604:	f800283a 	ret
10109608:	800b883a 	mov	r5,r16
1010960c:	8809883a 	mov	r4,r17
10109610:	01045a40 	call	101045a4 <__sflush_r>
10109614:	1025883a 	mov	r18,r2
10109618:	80800b17 	ldw	r2,44(r16)
1010961c:	10000426 	beq	r2,zero,10109630 <_fclose_r+0x78>
10109620:	81400717 	ldw	r5,28(r16)
10109624:	8809883a 	mov	r4,r17
10109628:	103ee83a 	callr	r2
1010962c:	10001616 	blt	r2,zero,10109688 <_fclose_r+0xd0>
10109630:	8080030b 	ldhu	r2,12(r16)
10109634:	1080200c 	andi	r2,r2,128
10109638:	1000151e 	bne	r2,zero,10109690 <_fclose_r+0xd8>
1010963c:	81400c17 	ldw	r5,48(r16)
10109640:	28000526 	beq	r5,zero,10109658 <_fclose_r+0xa0>
10109644:	80801004 	addi	r2,r16,64
10109648:	28800226 	beq	r5,r2,10109654 <_fclose_r+0x9c>
1010964c:	8809883a 	mov	r4,r17
10109650:	0104d100 	call	10104d10 <_free_r>
10109654:	80000c15 	stw	zero,48(r16)
10109658:	81401117 	ldw	r5,68(r16)
1010965c:	28000326 	beq	r5,zero,1010966c <_fclose_r+0xb4>
10109660:	8809883a 	mov	r4,r17
10109664:	0104d100 	call	10104d10 <_free_r>
10109668:	80001115 	stw	zero,68(r16)
1010966c:	0104bac0 	call	10104bac <__sfp_lock_acquire>
10109670:	8000030d 	sth	zero,12(r16)
10109674:	0104bb00 	call	10104bb0 <__sfp_lock_release>
10109678:	9005883a 	mov	r2,r18
1010967c:	003fdc06 	br	101095f0 <__alt_data_end+0xfffe95f0>
10109680:	0104b9c0 	call	10104b9c <__sinit>
10109684:	003fd706 	br	101095e4 <__alt_data_end+0xfffe95e4>
10109688:	04bfffc4 	movi	r18,-1
1010968c:	003fe806 	br	10109630 <__alt_data_end+0xfffe9630>
10109690:	81400417 	ldw	r5,16(r16)
10109694:	8809883a 	mov	r4,r17
10109698:	0104d100 	call	10104d10 <_free_r>
1010969c:	003fe706 	br	1010963c <__alt_data_end+0xfffe963c>
101096a0:	0005883a 	mov	r2,zero
101096a4:	f800283a 	ret

101096a8 <fclose>:
101096a8:	00840474 	movhi	r2,4113
101096ac:	10857604 	addi	r2,r2,5592
101096b0:	200b883a 	mov	r5,r4
101096b4:	11000017 	ldw	r4,0(r2)
101096b8:	01095b81 	jmpi	101095b8 <_fclose_r>

101096bc <__fputwc>:
101096bc:	defff804 	addi	sp,sp,-32
101096c0:	dcc00415 	stw	r19,16(sp)
101096c4:	dc800315 	stw	r18,12(sp)
101096c8:	dc000115 	stw	r16,4(sp)
101096cc:	dfc00715 	stw	ra,28(sp)
101096d0:	dd400615 	stw	r21,24(sp)
101096d4:	dd000515 	stw	r20,20(sp)
101096d8:	dc400215 	stw	r17,8(sp)
101096dc:	2027883a 	mov	r19,r4
101096e0:	2825883a 	mov	r18,r5
101096e4:	3021883a 	mov	r16,r6
101096e8:	01056ec0 	call	101056ec <__locale_mb_cur_max>
101096ec:	00c00044 	movi	r3,1
101096f0:	10c03e26 	beq	r2,r3,101097ec <__fputwc+0x130>
101096f4:	81c01704 	addi	r7,r16,92
101096f8:	900d883a 	mov	r6,r18
101096fc:	d80b883a 	mov	r5,sp
10109700:	9809883a 	mov	r4,r19
10109704:	0109b8c0 	call	10109b8c <_wcrtomb_r>
10109708:	1029883a 	mov	r20,r2
1010970c:	00bfffc4 	movi	r2,-1
10109710:	a0802026 	beq	r20,r2,10109794 <__fputwc+0xd8>
10109714:	d9400003 	ldbu	r5,0(sp)
10109718:	a0001c26 	beq	r20,zero,1010978c <__fputwc+0xd0>
1010971c:	0023883a 	mov	r17,zero
10109720:	05400284 	movi	r21,10
10109724:	00000906 	br	1010974c <__fputwc+0x90>
10109728:	80800017 	ldw	r2,0(r16)
1010972c:	11400005 	stb	r5,0(r2)
10109730:	80c00017 	ldw	r3,0(r16)
10109734:	18c00044 	addi	r3,r3,1
10109738:	80c00015 	stw	r3,0(r16)
1010973c:	8c400044 	addi	r17,r17,1
10109740:	dc45883a 	add	r2,sp,r17
10109744:	8d00112e 	bgeu	r17,r20,1010978c <__fputwc+0xd0>
10109748:	11400003 	ldbu	r5,0(r2)
1010974c:	80c00217 	ldw	r3,8(r16)
10109750:	18ffffc4 	addi	r3,r3,-1
10109754:	80c00215 	stw	r3,8(r16)
10109758:	183ff30e 	bge	r3,zero,10109728 <__alt_data_end+0xfffe9728>
1010975c:	80800617 	ldw	r2,24(r16)
10109760:	18801916 	blt	r3,r2,101097c8 <__fputwc+0x10c>
10109764:	80800017 	ldw	r2,0(r16)
10109768:	11400005 	stb	r5,0(r2)
1010976c:	80800017 	ldw	r2,0(r16)
10109770:	10c00003 	ldbu	r3,0(r2)
10109774:	10800044 	addi	r2,r2,1
10109778:	1d402326 	beq	r3,r21,10109808 <__fputwc+0x14c>
1010977c:	80800015 	stw	r2,0(r16)
10109780:	8c400044 	addi	r17,r17,1
10109784:	dc45883a 	add	r2,sp,r17
10109788:	8d3fef36 	bltu	r17,r20,10109748 <__alt_data_end+0xfffe9748>
1010978c:	9005883a 	mov	r2,r18
10109790:	00000406 	br	101097a4 <__fputwc+0xe8>
10109794:	80c0030b 	ldhu	r3,12(r16)
10109798:	a005883a 	mov	r2,r20
1010979c:	18c01014 	ori	r3,r3,64
101097a0:	80c0030d 	sth	r3,12(r16)
101097a4:	dfc00717 	ldw	ra,28(sp)
101097a8:	dd400617 	ldw	r21,24(sp)
101097ac:	dd000517 	ldw	r20,20(sp)
101097b0:	dcc00417 	ldw	r19,16(sp)
101097b4:	dc800317 	ldw	r18,12(sp)
101097b8:	dc400217 	ldw	r17,8(sp)
101097bc:	dc000117 	ldw	r16,4(sp)
101097c0:	dec00804 	addi	sp,sp,32
101097c4:	f800283a 	ret
101097c8:	800d883a 	mov	r6,r16
101097cc:	29403fcc 	andi	r5,r5,255
101097d0:	9809883a 	mov	r4,r19
101097d4:	0109a340 	call	10109a34 <__swbuf_r>
101097d8:	10bfffe0 	cmpeqi	r2,r2,-1
101097dc:	10803fcc 	andi	r2,r2,255
101097e0:	103fd626 	beq	r2,zero,1010973c <__alt_data_end+0xfffe973c>
101097e4:	00bfffc4 	movi	r2,-1
101097e8:	003fee06 	br	101097a4 <__alt_data_end+0xfffe97a4>
101097ec:	90ffffc4 	addi	r3,r18,-1
101097f0:	01003f84 	movi	r4,254
101097f4:	20ffbf36 	bltu	r4,r3,101096f4 <__alt_data_end+0xfffe96f4>
101097f8:	900b883a 	mov	r5,r18
101097fc:	dc800005 	stb	r18,0(sp)
10109800:	1029883a 	mov	r20,r2
10109804:	003fc506 	br	1010971c <__alt_data_end+0xfffe971c>
10109808:	800d883a 	mov	r6,r16
1010980c:	a80b883a 	mov	r5,r21
10109810:	9809883a 	mov	r4,r19
10109814:	0109a340 	call	10109a34 <__swbuf_r>
10109818:	10bfffe0 	cmpeqi	r2,r2,-1
1010981c:	003fef06 	br	101097dc <__alt_data_end+0xfffe97dc>

10109820 <_fputwc_r>:
10109820:	3080030b 	ldhu	r2,12(r6)
10109824:	10c8000c 	andi	r3,r2,8192
10109828:	1800051e 	bne	r3,zero,10109840 <_fputwc_r+0x20>
1010982c:	30c01917 	ldw	r3,100(r6)
10109830:	10880014 	ori	r2,r2,8192
10109834:	3080030d 	sth	r2,12(r6)
10109838:	18880014 	ori	r2,r3,8192
1010983c:	30801915 	stw	r2,100(r6)
10109840:	01096bc1 	jmpi	101096bc <__fputwc>

10109844 <fputwc>:
10109844:	00840474 	movhi	r2,4113
10109848:	defffc04 	addi	sp,sp,-16
1010984c:	10857604 	addi	r2,r2,5592
10109850:	dc000115 	stw	r16,4(sp)
10109854:	14000017 	ldw	r16,0(r2)
10109858:	dc400215 	stw	r17,8(sp)
1010985c:	dfc00315 	stw	ra,12(sp)
10109860:	2023883a 	mov	r17,r4
10109864:	80000226 	beq	r16,zero,10109870 <fputwc+0x2c>
10109868:	80800e17 	ldw	r2,56(r16)
1010986c:	10001026 	beq	r2,zero,101098b0 <fputwc+0x6c>
10109870:	2880030b 	ldhu	r2,12(r5)
10109874:	10c8000c 	andi	r3,r2,8192
10109878:	1800051e 	bne	r3,zero,10109890 <fputwc+0x4c>
1010987c:	28c01917 	ldw	r3,100(r5)
10109880:	10880014 	ori	r2,r2,8192
10109884:	2880030d 	sth	r2,12(r5)
10109888:	18880014 	ori	r2,r3,8192
1010988c:	28801915 	stw	r2,100(r5)
10109890:	280d883a 	mov	r6,r5
10109894:	8009883a 	mov	r4,r16
10109898:	880b883a 	mov	r5,r17
1010989c:	dfc00317 	ldw	ra,12(sp)
101098a0:	dc400217 	ldw	r17,8(sp)
101098a4:	dc000117 	ldw	r16,4(sp)
101098a8:	dec00404 	addi	sp,sp,16
101098ac:	01096bc1 	jmpi	101096bc <__fputwc>
101098b0:	8009883a 	mov	r4,r16
101098b4:	d9400015 	stw	r5,0(sp)
101098b8:	0104b9c0 	call	10104b9c <__sinit>
101098bc:	d9400017 	ldw	r5,0(sp)
101098c0:	003feb06 	br	10109870 <__alt_data_end+0xfffe9870>

101098c4 <_fstat_r>:
101098c4:	defffd04 	addi	sp,sp,-12
101098c8:	2805883a 	mov	r2,r5
101098cc:	dc000015 	stw	r16,0(sp)
101098d0:	04040474 	movhi	r16,4113
101098d4:	dc400115 	stw	r17,4(sp)
101098d8:	840c4604 	addi	r16,r16,12568
101098dc:	2023883a 	mov	r17,r4
101098e0:	300b883a 	mov	r5,r6
101098e4:	1009883a 	mov	r4,r2
101098e8:	dfc00215 	stw	ra,8(sp)
101098ec:	80000015 	stw	zero,0(r16)
101098f0:	010d1dc0 	call	1010d1dc <fstat>
101098f4:	00ffffc4 	movi	r3,-1
101098f8:	10c00526 	beq	r2,r3,10109910 <_fstat_r+0x4c>
101098fc:	dfc00217 	ldw	ra,8(sp)
10109900:	dc400117 	ldw	r17,4(sp)
10109904:	dc000017 	ldw	r16,0(sp)
10109908:	dec00304 	addi	sp,sp,12
1010990c:	f800283a 	ret
10109910:	80c00017 	ldw	r3,0(r16)
10109914:	183ff926 	beq	r3,zero,101098fc <__alt_data_end+0xfffe98fc>
10109918:	88c00015 	stw	r3,0(r17)
1010991c:	003ff706 	br	101098fc <__alt_data_end+0xfffe98fc>

10109920 <_isatty_r>:
10109920:	defffd04 	addi	sp,sp,-12
10109924:	dc000015 	stw	r16,0(sp)
10109928:	04040474 	movhi	r16,4113
1010992c:	dc400115 	stw	r17,4(sp)
10109930:	840c4604 	addi	r16,r16,12568
10109934:	2023883a 	mov	r17,r4
10109938:	2809883a 	mov	r4,r5
1010993c:	dfc00215 	stw	ra,8(sp)
10109940:	80000015 	stw	zero,0(r16)
10109944:	010d2dc0 	call	1010d2dc <isatty>
10109948:	00ffffc4 	movi	r3,-1
1010994c:	10c00526 	beq	r2,r3,10109964 <_isatty_r+0x44>
10109950:	dfc00217 	ldw	ra,8(sp)
10109954:	dc400117 	ldw	r17,4(sp)
10109958:	dc000017 	ldw	r16,0(sp)
1010995c:	dec00304 	addi	sp,sp,12
10109960:	f800283a 	ret
10109964:	80c00017 	ldw	r3,0(r16)
10109968:	183ff926 	beq	r3,zero,10109950 <__alt_data_end+0xfffe9950>
1010996c:	88c00015 	stw	r3,0(r17)
10109970:	003ff706 	br	10109950 <__alt_data_end+0xfffe9950>

10109974 <_lseek_r>:
10109974:	defffd04 	addi	sp,sp,-12
10109978:	2805883a 	mov	r2,r5
1010997c:	dc000015 	stw	r16,0(sp)
10109980:	04040474 	movhi	r16,4113
10109984:	dc400115 	stw	r17,4(sp)
10109988:	300b883a 	mov	r5,r6
1010998c:	840c4604 	addi	r16,r16,12568
10109990:	2023883a 	mov	r17,r4
10109994:	380d883a 	mov	r6,r7
10109998:	1009883a 	mov	r4,r2
1010999c:	dfc00215 	stw	ra,8(sp)
101099a0:	80000015 	stw	zero,0(r16)
101099a4:	010d4bc0 	call	1010d4bc <lseek>
101099a8:	00ffffc4 	movi	r3,-1
101099ac:	10c00526 	beq	r2,r3,101099c4 <_lseek_r+0x50>
101099b0:	dfc00217 	ldw	ra,8(sp)
101099b4:	dc400117 	ldw	r17,4(sp)
101099b8:	dc000017 	ldw	r16,0(sp)
101099bc:	dec00304 	addi	sp,sp,12
101099c0:	f800283a 	ret
101099c4:	80c00017 	ldw	r3,0(r16)
101099c8:	183ff926 	beq	r3,zero,101099b0 <__alt_data_end+0xfffe99b0>
101099cc:	88c00015 	stw	r3,0(r17)
101099d0:	003ff706 	br	101099b0 <__alt_data_end+0xfffe99b0>

101099d4 <_read_r>:
101099d4:	defffd04 	addi	sp,sp,-12
101099d8:	2805883a 	mov	r2,r5
101099dc:	dc000015 	stw	r16,0(sp)
101099e0:	04040474 	movhi	r16,4113
101099e4:	dc400115 	stw	r17,4(sp)
101099e8:	300b883a 	mov	r5,r6
101099ec:	840c4604 	addi	r16,r16,12568
101099f0:	2023883a 	mov	r17,r4
101099f4:	380d883a 	mov	r6,r7
101099f8:	1009883a 	mov	r4,r2
101099fc:	dfc00215 	stw	ra,8(sp)
10109a00:	80000015 	stw	zero,0(r16)
10109a04:	010d6a40 	call	1010d6a4 <read>
10109a08:	00ffffc4 	movi	r3,-1
10109a0c:	10c00526 	beq	r2,r3,10109a24 <_read_r+0x50>
10109a10:	dfc00217 	ldw	ra,8(sp)
10109a14:	dc400117 	ldw	r17,4(sp)
10109a18:	dc000017 	ldw	r16,0(sp)
10109a1c:	dec00304 	addi	sp,sp,12
10109a20:	f800283a 	ret
10109a24:	80c00017 	ldw	r3,0(r16)
10109a28:	183ff926 	beq	r3,zero,10109a10 <__alt_data_end+0xfffe9a10>
10109a2c:	88c00015 	stw	r3,0(r17)
10109a30:	003ff706 	br	10109a10 <__alt_data_end+0xfffe9a10>

10109a34 <__swbuf_r>:
10109a34:	defffb04 	addi	sp,sp,-20
10109a38:	dcc00315 	stw	r19,12(sp)
10109a3c:	dc800215 	stw	r18,8(sp)
10109a40:	dc000015 	stw	r16,0(sp)
10109a44:	dfc00415 	stw	ra,16(sp)
10109a48:	dc400115 	stw	r17,4(sp)
10109a4c:	2025883a 	mov	r18,r4
10109a50:	2827883a 	mov	r19,r5
10109a54:	3021883a 	mov	r16,r6
10109a58:	20000226 	beq	r4,zero,10109a64 <__swbuf_r+0x30>
10109a5c:	20800e17 	ldw	r2,56(r4)
10109a60:	10004226 	beq	r2,zero,10109b6c <__swbuf_r+0x138>
10109a64:	80800617 	ldw	r2,24(r16)
10109a68:	8100030b 	ldhu	r4,12(r16)
10109a6c:	80800215 	stw	r2,8(r16)
10109a70:	2080020c 	andi	r2,r4,8
10109a74:	10003626 	beq	r2,zero,10109b50 <__swbuf_r+0x11c>
10109a78:	80c00417 	ldw	r3,16(r16)
10109a7c:	18003426 	beq	r3,zero,10109b50 <__swbuf_r+0x11c>
10109a80:	2088000c 	andi	r2,r4,8192
10109a84:	9c403fcc 	andi	r17,r19,255
10109a88:	10001a26 	beq	r2,zero,10109af4 <__swbuf_r+0xc0>
10109a8c:	80800017 	ldw	r2,0(r16)
10109a90:	81000517 	ldw	r4,20(r16)
10109a94:	10c7c83a 	sub	r3,r2,r3
10109a98:	1900200e 	bge	r3,r4,10109b1c <__swbuf_r+0xe8>
10109a9c:	18c00044 	addi	r3,r3,1
10109aa0:	81000217 	ldw	r4,8(r16)
10109aa4:	11400044 	addi	r5,r2,1
10109aa8:	81400015 	stw	r5,0(r16)
10109aac:	213fffc4 	addi	r4,r4,-1
10109ab0:	81000215 	stw	r4,8(r16)
10109ab4:	14c00005 	stb	r19,0(r2)
10109ab8:	80800517 	ldw	r2,20(r16)
10109abc:	10c01e26 	beq	r2,r3,10109b38 <__swbuf_r+0x104>
10109ac0:	8080030b 	ldhu	r2,12(r16)
10109ac4:	1080004c 	andi	r2,r2,1
10109ac8:	10000226 	beq	r2,zero,10109ad4 <__swbuf_r+0xa0>
10109acc:	00800284 	movi	r2,10
10109ad0:	88801926 	beq	r17,r2,10109b38 <__swbuf_r+0x104>
10109ad4:	8805883a 	mov	r2,r17
10109ad8:	dfc00417 	ldw	ra,16(sp)
10109adc:	dcc00317 	ldw	r19,12(sp)
10109ae0:	dc800217 	ldw	r18,8(sp)
10109ae4:	dc400117 	ldw	r17,4(sp)
10109ae8:	dc000017 	ldw	r16,0(sp)
10109aec:	dec00504 	addi	sp,sp,20
10109af0:	f800283a 	ret
10109af4:	81401917 	ldw	r5,100(r16)
10109af8:	00b7ffc4 	movi	r2,-8193
10109afc:	21080014 	ori	r4,r4,8192
10109b00:	2884703a 	and	r2,r5,r2
10109b04:	80801915 	stw	r2,100(r16)
10109b08:	80800017 	ldw	r2,0(r16)
10109b0c:	8100030d 	sth	r4,12(r16)
10109b10:	81000517 	ldw	r4,20(r16)
10109b14:	10c7c83a 	sub	r3,r2,r3
10109b18:	193fe016 	blt	r3,r4,10109a9c <__alt_data_end+0xfffe9a9c>
10109b1c:	800b883a 	mov	r5,r16
10109b20:	9009883a 	mov	r4,r18
10109b24:	01047c00 	call	101047c0 <_fflush_r>
10109b28:	1000071e 	bne	r2,zero,10109b48 <__swbuf_r+0x114>
10109b2c:	80800017 	ldw	r2,0(r16)
10109b30:	00c00044 	movi	r3,1
10109b34:	003fda06 	br	10109aa0 <__alt_data_end+0xfffe9aa0>
10109b38:	800b883a 	mov	r5,r16
10109b3c:	9009883a 	mov	r4,r18
10109b40:	01047c00 	call	101047c0 <_fflush_r>
10109b44:	103fe326 	beq	r2,zero,10109ad4 <__alt_data_end+0xfffe9ad4>
10109b48:	00bfffc4 	movi	r2,-1
10109b4c:	003fe206 	br	10109ad8 <__alt_data_end+0xfffe9ad8>
10109b50:	800b883a 	mov	r5,r16
10109b54:	9009883a 	mov	r4,r18
10109b58:	0102bc80 	call	10102bc8 <__swsetup_r>
10109b5c:	103ffa1e 	bne	r2,zero,10109b48 <__alt_data_end+0xfffe9b48>
10109b60:	8100030b 	ldhu	r4,12(r16)
10109b64:	80c00417 	ldw	r3,16(r16)
10109b68:	003fc506 	br	10109a80 <__alt_data_end+0xfffe9a80>
10109b6c:	0104b9c0 	call	10104b9c <__sinit>
10109b70:	003fbc06 	br	10109a64 <__alt_data_end+0xfffe9a64>

10109b74 <__swbuf>:
10109b74:	00840474 	movhi	r2,4113
10109b78:	10857604 	addi	r2,r2,5592
10109b7c:	280d883a 	mov	r6,r5
10109b80:	200b883a 	mov	r5,r4
10109b84:	11000017 	ldw	r4,0(r2)
10109b88:	0109a341 	jmpi	10109a34 <__swbuf_r>

10109b8c <_wcrtomb_r>:
10109b8c:	defff604 	addi	sp,sp,-40
10109b90:	00840474 	movhi	r2,4113
10109b94:	dc800815 	stw	r18,32(sp)
10109b98:	dc400715 	stw	r17,28(sp)
10109b9c:	dc000615 	stw	r16,24(sp)
10109ba0:	10857a04 	addi	r2,r2,5608
10109ba4:	dfc00915 	stw	ra,36(sp)
10109ba8:	2021883a 	mov	r16,r4
10109bac:	3823883a 	mov	r17,r7
10109bb0:	14800017 	ldw	r18,0(r2)
10109bb4:	28001426 	beq	r5,zero,10109c08 <_wcrtomb_r+0x7c>
10109bb8:	d9400415 	stw	r5,16(sp)
10109bbc:	d9800515 	stw	r6,20(sp)
10109bc0:	01056e00 	call	101056e0 <__locale_charset>
10109bc4:	d9800517 	ldw	r6,20(sp)
10109bc8:	d9400417 	ldw	r5,16(sp)
10109bcc:	100f883a 	mov	r7,r2
10109bd0:	dc400015 	stw	r17,0(sp)
10109bd4:	8009883a 	mov	r4,r16
10109bd8:	903ee83a 	callr	r18
10109bdc:	00ffffc4 	movi	r3,-1
10109be0:	10c0031e 	bne	r2,r3,10109bf0 <_wcrtomb_r+0x64>
10109be4:	88000015 	stw	zero,0(r17)
10109be8:	00c02284 	movi	r3,138
10109bec:	80c00015 	stw	r3,0(r16)
10109bf0:	dfc00917 	ldw	ra,36(sp)
10109bf4:	dc800817 	ldw	r18,32(sp)
10109bf8:	dc400717 	ldw	r17,28(sp)
10109bfc:	dc000617 	ldw	r16,24(sp)
10109c00:	dec00a04 	addi	sp,sp,40
10109c04:	f800283a 	ret
10109c08:	01056e00 	call	101056e0 <__locale_charset>
10109c0c:	100f883a 	mov	r7,r2
10109c10:	dc400015 	stw	r17,0(sp)
10109c14:	000d883a 	mov	r6,zero
10109c18:	d9400104 	addi	r5,sp,4
10109c1c:	8009883a 	mov	r4,r16
10109c20:	903ee83a 	callr	r18
10109c24:	003fed06 	br	10109bdc <__alt_data_end+0xfffe9bdc>

10109c28 <wcrtomb>:
10109c28:	defff604 	addi	sp,sp,-40
10109c2c:	00840474 	movhi	r2,4113
10109c30:	dc800615 	stw	r18,24(sp)
10109c34:	dc400515 	stw	r17,20(sp)
10109c38:	10857604 	addi	r2,r2,5592
10109c3c:	dfc00915 	stw	ra,36(sp)
10109c40:	dd000815 	stw	r20,32(sp)
10109c44:	dcc00715 	stw	r19,28(sp)
10109c48:	dc000415 	stw	r16,16(sp)
10109c4c:	3025883a 	mov	r18,r6
10109c50:	14400017 	ldw	r17,0(r2)
10109c54:	20001926 	beq	r4,zero,10109cbc <wcrtomb+0x94>
10109c58:	00840474 	movhi	r2,4113
10109c5c:	10857a04 	addi	r2,r2,5608
10109c60:	15000017 	ldw	r20,0(r2)
10109c64:	2021883a 	mov	r16,r4
10109c68:	2827883a 	mov	r19,r5
10109c6c:	01056e00 	call	101056e0 <__locale_charset>
10109c70:	100f883a 	mov	r7,r2
10109c74:	dc800015 	stw	r18,0(sp)
10109c78:	980d883a 	mov	r6,r19
10109c7c:	800b883a 	mov	r5,r16
10109c80:	8809883a 	mov	r4,r17
10109c84:	a03ee83a 	callr	r20
10109c88:	00ffffc4 	movi	r3,-1
10109c8c:	10c0031e 	bne	r2,r3,10109c9c <wcrtomb+0x74>
10109c90:	90000015 	stw	zero,0(r18)
10109c94:	00c02284 	movi	r3,138
10109c98:	88c00015 	stw	r3,0(r17)
10109c9c:	dfc00917 	ldw	ra,36(sp)
10109ca0:	dd000817 	ldw	r20,32(sp)
10109ca4:	dcc00717 	ldw	r19,28(sp)
10109ca8:	dc800617 	ldw	r18,24(sp)
10109cac:	dc400517 	ldw	r17,20(sp)
10109cb0:	dc000417 	ldw	r16,16(sp)
10109cb4:	dec00a04 	addi	sp,sp,40
10109cb8:	f800283a 	ret
10109cbc:	00840474 	movhi	r2,4113
10109cc0:	10857a04 	addi	r2,r2,5608
10109cc4:	14000017 	ldw	r16,0(r2)
10109cc8:	01056e00 	call	101056e0 <__locale_charset>
10109ccc:	100f883a 	mov	r7,r2
10109cd0:	dc800015 	stw	r18,0(sp)
10109cd4:	000d883a 	mov	r6,zero
10109cd8:	d9400104 	addi	r5,sp,4
10109cdc:	8809883a 	mov	r4,r17
10109ce0:	803ee83a 	callr	r16
10109ce4:	003fe806 	br	10109c88 <__alt_data_end+0xfffe9c88>

10109ce8 <__ascii_wctomb>:
10109ce8:	28000526 	beq	r5,zero,10109d00 <__ascii_wctomb+0x18>
10109cec:	00803fc4 	movi	r2,255
10109cf0:	11800536 	bltu	r2,r6,10109d08 <__ascii_wctomb+0x20>
10109cf4:	29800005 	stb	r6,0(r5)
10109cf8:	00800044 	movi	r2,1
10109cfc:	f800283a 	ret
10109d00:	0005883a 	mov	r2,zero
10109d04:	f800283a 	ret
10109d08:	00802284 	movi	r2,138
10109d0c:	20800015 	stw	r2,0(r4)
10109d10:	00bfffc4 	movi	r2,-1
10109d14:	f800283a 	ret

10109d18 <_wctomb_r>:
10109d18:	00840474 	movhi	r2,4113
10109d1c:	defff904 	addi	sp,sp,-28
10109d20:	10857a04 	addi	r2,r2,5608
10109d24:	dfc00615 	stw	ra,24(sp)
10109d28:	dc400515 	stw	r17,20(sp)
10109d2c:	dc000415 	stw	r16,16(sp)
10109d30:	3823883a 	mov	r17,r7
10109d34:	14000017 	ldw	r16,0(r2)
10109d38:	d9000115 	stw	r4,4(sp)
10109d3c:	d9400215 	stw	r5,8(sp)
10109d40:	d9800315 	stw	r6,12(sp)
10109d44:	01056e00 	call	101056e0 <__locale_charset>
10109d48:	d9800317 	ldw	r6,12(sp)
10109d4c:	d9400217 	ldw	r5,8(sp)
10109d50:	d9000117 	ldw	r4,4(sp)
10109d54:	100f883a 	mov	r7,r2
10109d58:	dc400015 	stw	r17,0(sp)
10109d5c:	803ee83a 	callr	r16
10109d60:	dfc00617 	ldw	ra,24(sp)
10109d64:	dc400517 	ldw	r17,20(sp)
10109d68:	dc000417 	ldw	r16,16(sp)
10109d6c:	dec00704 	addi	sp,sp,28
10109d70:	f800283a 	ret

10109d74 <__udivdi3>:
10109d74:	defff504 	addi	sp,sp,-44
10109d78:	dcc00415 	stw	r19,16(sp)
10109d7c:	dc000115 	stw	r16,4(sp)
10109d80:	dfc00a15 	stw	ra,40(sp)
10109d84:	df000915 	stw	fp,36(sp)
10109d88:	ddc00815 	stw	r23,32(sp)
10109d8c:	dd800715 	stw	r22,28(sp)
10109d90:	dd400615 	stw	r21,24(sp)
10109d94:	dd000515 	stw	r20,20(sp)
10109d98:	dc800315 	stw	r18,12(sp)
10109d9c:	dc400215 	stw	r17,8(sp)
10109da0:	2027883a 	mov	r19,r4
10109da4:	2821883a 	mov	r16,r5
10109da8:	3800411e 	bne	r7,zero,10109eb0 <__udivdi3+0x13c>
10109dac:	3023883a 	mov	r17,r6
10109db0:	2025883a 	mov	r18,r4
10109db4:	2980522e 	bgeu	r5,r6,10109f00 <__udivdi3+0x18c>
10109db8:	00bfffd4 	movui	r2,65535
10109dbc:	282d883a 	mov	r22,r5
10109dc0:	1180a836 	bltu	r2,r6,1010a064 <__udivdi3+0x2f0>
10109dc4:	00803fc4 	movi	r2,255
10109dc8:	1185803a 	cmpltu	r2,r2,r6
10109dcc:	100490fa 	slli	r2,r2,3
10109dd0:	3086d83a 	srl	r3,r6,r2
10109dd4:	01040474 	movhi	r4,4113
10109dd8:	213e7d04 	addi	r4,r4,-1548
10109ddc:	20c7883a 	add	r3,r4,r3
10109de0:	18c00003 	ldbu	r3,0(r3)
10109de4:	1885883a 	add	r2,r3,r2
10109de8:	00c00804 	movi	r3,32
10109dec:	1887c83a 	sub	r3,r3,r2
10109df0:	18000526 	beq	r3,zero,10109e08 <__udivdi3+0x94>
10109df4:	80e0983a 	sll	r16,r16,r3
10109df8:	9884d83a 	srl	r2,r19,r2
10109dfc:	30e2983a 	sll	r17,r6,r3
10109e00:	98e4983a 	sll	r18,r19,r3
10109e04:	142cb03a 	or	r22,r2,r16
10109e08:	882ad43a 	srli	r21,r17,16
10109e0c:	b009883a 	mov	r4,r22
10109e10:	8d3fffcc 	andi	r20,r17,65535
10109e14:	a80b883a 	mov	r5,r21
10109e18:	010a9800 	call	1010a980 <__umodsi3>
10109e1c:	b009883a 	mov	r4,r22
10109e20:	a80b883a 	mov	r5,r21
10109e24:	1027883a 	mov	r19,r2
10109e28:	010a91c0 	call	1010a91c <__udivsi3>
10109e2c:	102d883a 	mov	r22,r2
10109e30:	9826943a 	slli	r19,r19,16
10109e34:	9004d43a 	srli	r2,r18,16
10109e38:	a5a1383a 	mul	r16,r20,r22
10109e3c:	14c4b03a 	or	r2,r2,r19
10109e40:	1400052e 	bgeu	r2,r16,10109e58 <__udivdi3+0xe4>
10109e44:	1445883a 	add	r2,r2,r17
10109e48:	b0ffffc4 	addi	r3,r22,-1
10109e4c:	14400136 	bltu	r2,r17,10109e54 <__udivdi3+0xe0>
10109e50:	14012336 	bltu	r2,r16,1010a2e0 <__udivdi3+0x56c>
10109e54:	182d883a 	mov	r22,r3
10109e58:	1421c83a 	sub	r16,r2,r16
10109e5c:	a80b883a 	mov	r5,r21
10109e60:	8009883a 	mov	r4,r16
10109e64:	010a9800 	call	1010a980 <__umodsi3>
10109e68:	1027883a 	mov	r19,r2
10109e6c:	a80b883a 	mov	r5,r21
10109e70:	8009883a 	mov	r4,r16
10109e74:	010a91c0 	call	1010a91c <__udivsi3>
10109e78:	9826943a 	slli	r19,r19,16
10109e7c:	a0a9383a 	mul	r20,r20,r2
10109e80:	94bfffcc 	andi	r18,r18,65535
10109e84:	94e4b03a 	or	r18,r18,r19
10109e88:	9500052e 	bgeu	r18,r20,10109ea0 <__udivdi3+0x12c>
10109e8c:	8ca5883a 	add	r18,r17,r18
10109e90:	10ffffc4 	addi	r3,r2,-1
10109e94:	9440f136 	bltu	r18,r17,1010a25c <__udivdi3+0x4e8>
10109e98:	9500f02e 	bgeu	r18,r20,1010a25c <__udivdi3+0x4e8>
10109e9c:	10bfff84 	addi	r2,r2,-2
10109ea0:	b00c943a 	slli	r6,r22,16
10109ea4:	0007883a 	mov	r3,zero
10109ea8:	3084b03a 	or	r2,r6,r2
10109eac:	00005906 	br	1010a014 <__udivdi3+0x2a0>
10109eb0:	29c05636 	bltu	r5,r7,1010a00c <__udivdi3+0x298>
10109eb4:	00bfffd4 	movui	r2,65535
10109eb8:	11c0622e 	bgeu	r2,r7,1010a044 <__udivdi3+0x2d0>
10109ebc:	00804034 	movhi	r2,256
10109ec0:	10bfffc4 	addi	r2,r2,-1
10109ec4:	11c0ee36 	bltu	r2,r7,1010a280 <__udivdi3+0x50c>
10109ec8:	00800404 	movi	r2,16
10109ecc:	3886d83a 	srl	r3,r7,r2
10109ed0:	01040474 	movhi	r4,4113
10109ed4:	213e7d04 	addi	r4,r4,-1548
10109ed8:	20c7883a 	add	r3,r4,r3
10109edc:	18c00003 	ldbu	r3,0(r3)
10109ee0:	05400804 	movi	r21,32
10109ee4:	1885883a 	add	r2,r3,r2
10109ee8:	a8abc83a 	sub	r21,r21,r2
10109eec:	a800621e 	bne	r21,zero,1010a078 <__udivdi3+0x304>
10109ef0:	3c00e936 	bltu	r7,r16,1010a298 <__udivdi3+0x524>
10109ef4:	9985403a 	cmpgeu	r2,r19,r6
10109ef8:	0007883a 	mov	r3,zero
10109efc:	00004506 	br	1010a014 <__udivdi3+0x2a0>
10109f00:	3000041e 	bne	r6,zero,10109f14 <__udivdi3+0x1a0>
10109f04:	000b883a 	mov	r5,zero
10109f08:	01000044 	movi	r4,1
10109f0c:	010a91c0 	call	1010a91c <__udivsi3>
10109f10:	1023883a 	mov	r17,r2
10109f14:	00bfffd4 	movui	r2,65535
10109f18:	14404e2e 	bgeu	r2,r17,1010a054 <__udivdi3+0x2e0>
10109f1c:	00804034 	movhi	r2,256
10109f20:	10bfffc4 	addi	r2,r2,-1
10109f24:	1440d836 	bltu	r2,r17,1010a288 <__udivdi3+0x514>
10109f28:	00800404 	movi	r2,16
10109f2c:	8886d83a 	srl	r3,r17,r2
10109f30:	01040474 	movhi	r4,4113
10109f34:	213e7d04 	addi	r4,r4,-1548
10109f38:	20c7883a 	add	r3,r4,r3
10109f3c:	18c00003 	ldbu	r3,0(r3)
10109f40:	1885883a 	add	r2,r3,r2
10109f44:	00c00804 	movi	r3,32
10109f48:	1887c83a 	sub	r3,r3,r2
10109f4c:	18008f1e 	bne	r3,zero,1010a18c <__udivdi3+0x418>
10109f50:	882ad43a 	srli	r21,r17,16
10109f54:	8461c83a 	sub	r16,r16,r17
10109f58:	8d3fffcc 	andi	r20,r17,65535
10109f5c:	00c00044 	movi	r3,1
10109f60:	8009883a 	mov	r4,r16
10109f64:	a80b883a 	mov	r5,r21
10109f68:	d8c00015 	stw	r3,0(sp)
10109f6c:	010a9800 	call	1010a980 <__umodsi3>
10109f70:	8009883a 	mov	r4,r16
10109f74:	a80b883a 	mov	r5,r21
10109f78:	1027883a 	mov	r19,r2
10109f7c:	010a91c0 	call	1010a91c <__udivsi3>
10109f80:	9826943a 	slli	r19,r19,16
10109f84:	9008d43a 	srli	r4,r18,16
10109f88:	1521383a 	mul	r16,r2,r20
10109f8c:	102d883a 	mov	r22,r2
10109f90:	24c8b03a 	or	r4,r4,r19
10109f94:	d8c00017 	ldw	r3,0(sp)
10109f98:	2400052e 	bgeu	r4,r16,10109fb0 <__udivdi3+0x23c>
10109f9c:	2449883a 	add	r4,r4,r17
10109fa0:	b0bfffc4 	addi	r2,r22,-1
10109fa4:	24400136 	bltu	r4,r17,10109fac <__udivdi3+0x238>
10109fa8:	2400ca36 	bltu	r4,r16,1010a2d4 <__udivdi3+0x560>
10109fac:	102d883a 	mov	r22,r2
10109fb0:	2421c83a 	sub	r16,r4,r16
10109fb4:	a80b883a 	mov	r5,r21
10109fb8:	8009883a 	mov	r4,r16
10109fbc:	d8c00015 	stw	r3,0(sp)
10109fc0:	010a9800 	call	1010a980 <__umodsi3>
10109fc4:	1027883a 	mov	r19,r2
10109fc8:	a80b883a 	mov	r5,r21
10109fcc:	8009883a 	mov	r4,r16
10109fd0:	010a91c0 	call	1010a91c <__udivsi3>
10109fd4:	9826943a 	slli	r19,r19,16
10109fd8:	1529383a 	mul	r20,r2,r20
10109fdc:	94bfffcc 	andi	r18,r18,65535
10109fe0:	94e4b03a 	or	r18,r18,r19
10109fe4:	d8c00017 	ldw	r3,0(sp)
10109fe8:	9500052e 	bgeu	r18,r20,1010a000 <__udivdi3+0x28c>
10109fec:	8ca5883a 	add	r18,r17,r18
10109ff0:	113fffc4 	addi	r4,r2,-1
10109ff4:	94409736 	bltu	r18,r17,1010a254 <__udivdi3+0x4e0>
10109ff8:	9500962e 	bgeu	r18,r20,1010a254 <__udivdi3+0x4e0>
10109ffc:	10bfff84 	addi	r2,r2,-2
1010a000:	b00c943a 	slli	r6,r22,16
1010a004:	3084b03a 	or	r2,r6,r2
1010a008:	00000206 	br	1010a014 <__udivdi3+0x2a0>
1010a00c:	0007883a 	mov	r3,zero
1010a010:	0005883a 	mov	r2,zero
1010a014:	dfc00a17 	ldw	ra,40(sp)
1010a018:	df000917 	ldw	fp,36(sp)
1010a01c:	ddc00817 	ldw	r23,32(sp)
1010a020:	dd800717 	ldw	r22,28(sp)
1010a024:	dd400617 	ldw	r21,24(sp)
1010a028:	dd000517 	ldw	r20,20(sp)
1010a02c:	dcc00417 	ldw	r19,16(sp)
1010a030:	dc800317 	ldw	r18,12(sp)
1010a034:	dc400217 	ldw	r17,8(sp)
1010a038:	dc000117 	ldw	r16,4(sp)
1010a03c:	dec00b04 	addi	sp,sp,44
1010a040:	f800283a 	ret
1010a044:	00803fc4 	movi	r2,255
1010a048:	11c5803a 	cmpltu	r2,r2,r7
1010a04c:	100490fa 	slli	r2,r2,3
1010a050:	003f9e06 	br	10109ecc <__alt_data_end+0xfffe9ecc>
1010a054:	00803fc4 	movi	r2,255
1010a058:	1445803a 	cmpltu	r2,r2,r17
1010a05c:	100490fa 	slli	r2,r2,3
1010a060:	003fb206 	br	10109f2c <__alt_data_end+0xfffe9f2c>
1010a064:	00804034 	movhi	r2,256
1010a068:	10bfffc4 	addi	r2,r2,-1
1010a06c:	11808836 	bltu	r2,r6,1010a290 <__udivdi3+0x51c>
1010a070:	00800404 	movi	r2,16
1010a074:	003f5606 	br	10109dd0 <__alt_data_end+0xfffe9dd0>
1010a078:	30aed83a 	srl	r23,r6,r2
1010a07c:	3d4e983a 	sll	r7,r7,r21
1010a080:	80acd83a 	srl	r22,r16,r2
1010a084:	9884d83a 	srl	r2,r19,r2
1010a088:	3deeb03a 	or	r23,r7,r23
1010a08c:	b824d43a 	srli	r18,r23,16
1010a090:	8560983a 	sll	r16,r16,r21
1010a094:	b009883a 	mov	r4,r22
1010a098:	900b883a 	mov	r5,r18
1010a09c:	3568983a 	sll	r20,r6,r21
1010a0a0:	1420b03a 	or	r16,r2,r16
1010a0a4:	010a9800 	call	1010a980 <__umodsi3>
1010a0a8:	b009883a 	mov	r4,r22
1010a0ac:	900b883a 	mov	r5,r18
1010a0b0:	1023883a 	mov	r17,r2
1010a0b4:	010a91c0 	call	1010a91c <__udivsi3>
1010a0b8:	8808943a 	slli	r4,r17,16
1010a0bc:	bf3fffcc 	andi	fp,r23,65535
1010a0c0:	8006d43a 	srli	r3,r16,16
1010a0c4:	e0a3383a 	mul	r17,fp,r2
1010a0c8:	100d883a 	mov	r6,r2
1010a0cc:	1906b03a 	or	r3,r3,r4
1010a0d0:	1c40042e 	bgeu	r3,r17,1010a0e4 <__udivdi3+0x370>
1010a0d4:	1dc7883a 	add	r3,r3,r23
1010a0d8:	10bfffc4 	addi	r2,r2,-1
1010a0dc:	1dc0752e 	bgeu	r3,r23,1010a2b4 <__udivdi3+0x540>
1010a0e0:	100d883a 	mov	r6,r2
1010a0e4:	1c63c83a 	sub	r17,r3,r17
1010a0e8:	900b883a 	mov	r5,r18
1010a0ec:	8809883a 	mov	r4,r17
1010a0f0:	d9800015 	stw	r6,0(sp)
1010a0f4:	010a9800 	call	1010a980 <__umodsi3>
1010a0f8:	102d883a 	mov	r22,r2
1010a0fc:	8809883a 	mov	r4,r17
1010a100:	900b883a 	mov	r5,r18
1010a104:	010a91c0 	call	1010a91c <__udivsi3>
1010a108:	b02c943a 	slli	r22,r22,16
1010a10c:	e089383a 	mul	r4,fp,r2
1010a110:	843fffcc 	andi	r16,r16,65535
1010a114:	85a0b03a 	or	r16,r16,r22
1010a118:	d9800017 	ldw	r6,0(sp)
1010a11c:	8100042e 	bgeu	r16,r4,1010a130 <__udivdi3+0x3bc>
1010a120:	85e1883a 	add	r16,r16,r23
1010a124:	10ffffc4 	addi	r3,r2,-1
1010a128:	85c05e2e 	bgeu	r16,r23,1010a2a4 <__udivdi3+0x530>
1010a12c:	1805883a 	mov	r2,r3
1010a130:	300c943a 	slli	r6,r6,16
1010a134:	a17fffcc 	andi	r5,r20,65535
1010a138:	a028d43a 	srli	r20,r20,16
1010a13c:	3084b03a 	or	r2,r6,r2
1010a140:	10ffffcc 	andi	r3,r2,65535
1010a144:	100cd43a 	srli	r6,r2,16
1010a148:	194f383a 	mul	r7,r3,r5
1010a14c:	1d07383a 	mul	r3,r3,r20
1010a150:	314b383a 	mul	r5,r6,r5
1010a154:	3810d43a 	srli	r8,r7,16
1010a158:	8121c83a 	sub	r16,r16,r4
1010a15c:	1947883a 	add	r3,r3,r5
1010a160:	40c7883a 	add	r3,r8,r3
1010a164:	350d383a 	mul	r6,r6,r20
1010a168:	1940022e 	bgeu	r3,r5,1010a174 <__udivdi3+0x400>
1010a16c:	01000074 	movhi	r4,1
1010a170:	310d883a 	add	r6,r6,r4
1010a174:	1828d43a 	srli	r20,r3,16
1010a178:	a18d883a 	add	r6,r20,r6
1010a17c:	81803e36 	bltu	r16,r6,1010a278 <__udivdi3+0x504>
1010a180:	81803826 	beq	r16,r6,1010a264 <__udivdi3+0x4f0>
1010a184:	0007883a 	mov	r3,zero
1010a188:	003fa206 	br	1010a014 <__alt_data_end+0xfffea014>
1010a18c:	88e2983a 	sll	r17,r17,r3
1010a190:	80a8d83a 	srl	r20,r16,r2
1010a194:	80e0983a 	sll	r16,r16,r3
1010a198:	882ad43a 	srli	r21,r17,16
1010a19c:	9884d83a 	srl	r2,r19,r2
1010a1a0:	a009883a 	mov	r4,r20
1010a1a4:	a80b883a 	mov	r5,r21
1010a1a8:	142eb03a 	or	r23,r2,r16
1010a1ac:	98e4983a 	sll	r18,r19,r3
1010a1b0:	010a9800 	call	1010a980 <__umodsi3>
1010a1b4:	a009883a 	mov	r4,r20
1010a1b8:	a80b883a 	mov	r5,r21
1010a1bc:	1021883a 	mov	r16,r2
1010a1c0:	010a91c0 	call	1010a91c <__udivsi3>
1010a1c4:	1039883a 	mov	fp,r2
1010a1c8:	8d3fffcc 	andi	r20,r17,65535
1010a1cc:	8020943a 	slli	r16,r16,16
1010a1d0:	b804d43a 	srli	r2,r23,16
1010a1d4:	a72d383a 	mul	r22,r20,fp
1010a1d8:	1404b03a 	or	r2,r2,r16
1010a1dc:	1580062e 	bgeu	r2,r22,1010a1f8 <__udivdi3+0x484>
1010a1e0:	1445883a 	add	r2,r2,r17
1010a1e4:	e0ffffc4 	addi	r3,fp,-1
1010a1e8:	14403836 	bltu	r2,r17,1010a2cc <__udivdi3+0x558>
1010a1ec:	1580372e 	bgeu	r2,r22,1010a2cc <__udivdi3+0x558>
1010a1f0:	e73fff84 	addi	fp,fp,-2
1010a1f4:	1445883a 	add	r2,r2,r17
1010a1f8:	15adc83a 	sub	r22,r2,r22
1010a1fc:	a80b883a 	mov	r5,r21
1010a200:	b009883a 	mov	r4,r22
1010a204:	010a9800 	call	1010a980 <__umodsi3>
1010a208:	1027883a 	mov	r19,r2
1010a20c:	b009883a 	mov	r4,r22
1010a210:	a80b883a 	mov	r5,r21
1010a214:	010a91c0 	call	1010a91c <__udivsi3>
1010a218:	9826943a 	slli	r19,r19,16
1010a21c:	a0a1383a 	mul	r16,r20,r2
1010a220:	b93fffcc 	andi	r4,r23,65535
1010a224:	24c8b03a 	or	r4,r4,r19
1010a228:	2400062e 	bgeu	r4,r16,1010a244 <__udivdi3+0x4d0>
1010a22c:	2449883a 	add	r4,r4,r17
1010a230:	10ffffc4 	addi	r3,r2,-1
1010a234:	24402336 	bltu	r4,r17,1010a2c4 <__udivdi3+0x550>
1010a238:	2400222e 	bgeu	r4,r16,1010a2c4 <__udivdi3+0x550>
1010a23c:	10bfff84 	addi	r2,r2,-2
1010a240:	2449883a 	add	r4,r4,r17
1010a244:	e038943a 	slli	fp,fp,16
1010a248:	2421c83a 	sub	r16,r4,r16
1010a24c:	e086b03a 	or	r3,fp,r2
1010a250:	003f4306 	br	10109f60 <__alt_data_end+0xfffe9f60>
1010a254:	2005883a 	mov	r2,r4
1010a258:	003f6906 	br	1010a000 <__alt_data_end+0xfffea000>
1010a25c:	1805883a 	mov	r2,r3
1010a260:	003f0f06 	br	10109ea0 <__alt_data_end+0xfffe9ea0>
1010a264:	1806943a 	slli	r3,r3,16
1010a268:	9d66983a 	sll	r19,r19,r21
1010a26c:	39ffffcc 	andi	r7,r7,65535
1010a270:	19c7883a 	add	r3,r3,r7
1010a274:	98ffc32e 	bgeu	r19,r3,1010a184 <__alt_data_end+0xfffea184>
1010a278:	10bfffc4 	addi	r2,r2,-1
1010a27c:	003fc106 	br	1010a184 <__alt_data_end+0xfffea184>
1010a280:	00800604 	movi	r2,24
1010a284:	003f1106 	br	10109ecc <__alt_data_end+0xfffe9ecc>
1010a288:	00800604 	movi	r2,24
1010a28c:	003f2706 	br	10109f2c <__alt_data_end+0xfffe9f2c>
1010a290:	00800604 	movi	r2,24
1010a294:	003ece06 	br	10109dd0 <__alt_data_end+0xfffe9dd0>
1010a298:	0007883a 	mov	r3,zero
1010a29c:	00800044 	movi	r2,1
1010a2a0:	003f5c06 	br	1010a014 <__alt_data_end+0xfffea014>
1010a2a4:	813fa12e 	bgeu	r16,r4,1010a12c <__alt_data_end+0xfffea12c>
1010a2a8:	10bfff84 	addi	r2,r2,-2
1010a2ac:	85e1883a 	add	r16,r16,r23
1010a2b0:	003f9f06 	br	1010a130 <__alt_data_end+0xfffea130>
1010a2b4:	1c7f8a2e 	bgeu	r3,r17,1010a0e0 <__alt_data_end+0xfffea0e0>
1010a2b8:	31bfff84 	addi	r6,r6,-2
1010a2bc:	1dc7883a 	add	r3,r3,r23
1010a2c0:	003f8806 	br	1010a0e4 <__alt_data_end+0xfffea0e4>
1010a2c4:	1805883a 	mov	r2,r3
1010a2c8:	003fde06 	br	1010a244 <__alt_data_end+0xfffea244>
1010a2cc:	1839883a 	mov	fp,r3
1010a2d0:	003fc906 	br	1010a1f8 <__alt_data_end+0xfffea1f8>
1010a2d4:	b5bfff84 	addi	r22,r22,-2
1010a2d8:	2449883a 	add	r4,r4,r17
1010a2dc:	003f3406 	br	10109fb0 <__alt_data_end+0xfffe9fb0>
1010a2e0:	b5bfff84 	addi	r22,r22,-2
1010a2e4:	1445883a 	add	r2,r2,r17
1010a2e8:	003edb06 	br	10109e58 <__alt_data_end+0xfffe9e58>

1010a2ec <__umoddi3>:
1010a2ec:	defff404 	addi	sp,sp,-48
1010a2f0:	df000a15 	stw	fp,40(sp)
1010a2f4:	dc400315 	stw	r17,12(sp)
1010a2f8:	dc000215 	stw	r16,8(sp)
1010a2fc:	dfc00b15 	stw	ra,44(sp)
1010a300:	ddc00915 	stw	r23,36(sp)
1010a304:	dd800815 	stw	r22,32(sp)
1010a308:	dd400715 	stw	r21,28(sp)
1010a30c:	dd000615 	stw	r20,24(sp)
1010a310:	dcc00515 	stw	r19,20(sp)
1010a314:	dc800415 	stw	r18,16(sp)
1010a318:	2021883a 	mov	r16,r4
1010a31c:	2823883a 	mov	r17,r5
1010a320:	2839883a 	mov	fp,r5
1010a324:	38003c1e 	bne	r7,zero,1010a418 <__umoddi3+0x12c>
1010a328:	3027883a 	mov	r19,r6
1010a32c:	2029883a 	mov	r20,r4
1010a330:	2980512e 	bgeu	r5,r6,1010a478 <__umoddi3+0x18c>
1010a334:	00bfffd4 	movui	r2,65535
1010a338:	11809a36 	bltu	r2,r6,1010a5a4 <__umoddi3+0x2b8>
1010a33c:	01003fc4 	movi	r4,255
1010a340:	2189803a 	cmpltu	r4,r4,r6
1010a344:	200890fa 	slli	r4,r4,3
1010a348:	3104d83a 	srl	r2,r6,r4
1010a34c:	00c40474 	movhi	r3,4113
1010a350:	18fe7d04 	addi	r3,r3,-1548
1010a354:	1885883a 	add	r2,r3,r2
1010a358:	10c00003 	ldbu	r3,0(r2)
1010a35c:	00800804 	movi	r2,32
1010a360:	1909883a 	add	r4,r3,r4
1010a364:	1125c83a 	sub	r18,r2,r4
1010a368:	90000526 	beq	r18,zero,1010a380 <__umoddi3+0x94>
1010a36c:	8ca2983a 	sll	r17,r17,r18
1010a370:	8108d83a 	srl	r4,r16,r4
1010a374:	34a6983a 	sll	r19,r6,r18
1010a378:	84a8983a 	sll	r20,r16,r18
1010a37c:	2478b03a 	or	fp,r4,r17
1010a380:	982ed43a 	srli	r23,r19,16
1010a384:	e009883a 	mov	r4,fp
1010a388:	9dbfffcc 	andi	r22,r19,65535
1010a38c:	b80b883a 	mov	r5,r23
1010a390:	010a9800 	call	1010a980 <__umodsi3>
1010a394:	e009883a 	mov	r4,fp
1010a398:	b80b883a 	mov	r5,r23
1010a39c:	102b883a 	mov	r21,r2
1010a3a0:	010a91c0 	call	1010a91c <__udivsi3>
1010a3a4:	a806943a 	slli	r3,r21,16
1010a3a8:	a008d43a 	srli	r4,r20,16
1010a3ac:	b085383a 	mul	r2,r22,r2
1010a3b0:	20c8b03a 	or	r4,r4,r3
1010a3b4:	2080032e 	bgeu	r4,r2,1010a3c4 <__umoddi3+0xd8>
1010a3b8:	24c9883a 	add	r4,r4,r19
1010a3bc:	24c00136 	bltu	r4,r19,1010a3c4 <__umoddi3+0xd8>
1010a3c0:	20811036 	bltu	r4,r2,1010a804 <__umoddi3+0x518>
1010a3c4:	20abc83a 	sub	r21,r4,r2
1010a3c8:	b80b883a 	mov	r5,r23
1010a3cc:	a809883a 	mov	r4,r21
1010a3d0:	010a9800 	call	1010a980 <__umodsi3>
1010a3d4:	1023883a 	mov	r17,r2
1010a3d8:	b80b883a 	mov	r5,r23
1010a3dc:	a809883a 	mov	r4,r21
1010a3e0:	010a91c0 	call	1010a91c <__udivsi3>
1010a3e4:	8822943a 	slli	r17,r17,16
1010a3e8:	b085383a 	mul	r2,r22,r2
1010a3ec:	a0ffffcc 	andi	r3,r20,65535
1010a3f0:	1c46b03a 	or	r3,r3,r17
1010a3f4:	1880042e 	bgeu	r3,r2,1010a408 <__umoddi3+0x11c>
1010a3f8:	1cc7883a 	add	r3,r3,r19
1010a3fc:	1cc00236 	bltu	r3,r19,1010a408 <__umoddi3+0x11c>
1010a400:	1880012e 	bgeu	r3,r2,1010a408 <__umoddi3+0x11c>
1010a404:	1cc7883a 	add	r3,r3,r19
1010a408:	1885c83a 	sub	r2,r3,r2
1010a40c:	1484d83a 	srl	r2,r2,r18
1010a410:	0007883a 	mov	r3,zero
1010a414:	00004f06 	br	1010a554 <__umoddi3+0x268>
1010a418:	29c04c36 	bltu	r5,r7,1010a54c <__umoddi3+0x260>
1010a41c:	00bfffd4 	movui	r2,65535
1010a420:	11c0582e 	bgeu	r2,r7,1010a584 <__umoddi3+0x298>
1010a424:	00804034 	movhi	r2,256
1010a428:	10bfffc4 	addi	r2,r2,-1
1010a42c:	11c0e736 	bltu	r2,r7,1010a7cc <__umoddi3+0x4e0>
1010a430:	01000404 	movi	r4,16
1010a434:	3904d83a 	srl	r2,r7,r4
1010a438:	00c40474 	movhi	r3,4113
1010a43c:	18fe7d04 	addi	r3,r3,-1548
1010a440:	1885883a 	add	r2,r3,r2
1010a444:	14c00003 	ldbu	r19,0(r2)
1010a448:	00c00804 	movi	r3,32
1010a44c:	9927883a 	add	r19,r19,r4
1010a450:	1ce9c83a 	sub	r20,r3,r19
1010a454:	a000581e 	bne	r20,zero,1010a5b8 <__umoddi3+0x2cc>
1010a458:	3c400136 	bltu	r7,r17,1010a460 <__umoddi3+0x174>
1010a45c:	8180eb36 	bltu	r16,r6,1010a80c <__umoddi3+0x520>
1010a460:	8185c83a 	sub	r2,r16,r6
1010a464:	89e3c83a 	sub	r17,r17,r7
1010a468:	8089803a 	cmpltu	r4,r16,r2
1010a46c:	8939c83a 	sub	fp,r17,r4
1010a470:	e007883a 	mov	r3,fp
1010a474:	00003706 	br	1010a554 <__umoddi3+0x268>
1010a478:	3000041e 	bne	r6,zero,1010a48c <__umoddi3+0x1a0>
1010a47c:	000b883a 	mov	r5,zero
1010a480:	01000044 	movi	r4,1
1010a484:	010a91c0 	call	1010a91c <__udivsi3>
1010a488:	1027883a 	mov	r19,r2
1010a48c:	00bfffd4 	movui	r2,65535
1010a490:	14c0402e 	bgeu	r2,r19,1010a594 <__umoddi3+0x2a8>
1010a494:	00804034 	movhi	r2,256
1010a498:	10bfffc4 	addi	r2,r2,-1
1010a49c:	14c0cd36 	bltu	r2,r19,1010a7d4 <__umoddi3+0x4e8>
1010a4a0:	00800404 	movi	r2,16
1010a4a4:	9886d83a 	srl	r3,r19,r2
1010a4a8:	01040474 	movhi	r4,4113
1010a4ac:	213e7d04 	addi	r4,r4,-1548
1010a4b0:	20c7883a 	add	r3,r4,r3
1010a4b4:	18c00003 	ldbu	r3,0(r3)
1010a4b8:	1887883a 	add	r3,r3,r2
1010a4bc:	00800804 	movi	r2,32
1010a4c0:	10e5c83a 	sub	r18,r2,r3
1010a4c4:	9000901e 	bne	r18,zero,1010a708 <__umoddi3+0x41c>
1010a4c8:	982cd43a 	srli	r22,r19,16
1010a4cc:	8ce3c83a 	sub	r17,r17,r19
1010a4d0:	9d7fffcc 	andi	r21,r19,65535
1010a4d4:	b00b883a 	mov	r5,r22
1010a4d8:	8809883a 	mov	r4,r17
1010a4dc:	010a9800 	call	1010a980 <__umodsi3>
1010a4e0:	8809883a 	mov	r4,r17
1010a4e4:	b00b883a 	mov	r5,r22
1010a4e8:	1021883a 	mov	r16,r2
1010a4ec:	010a91c0 	call	1010a91c <__udivsi3>
1010a4f0:	8006943a 	slli	r3,r16,16
1010a4f4:	a008d43a 	srli	r4,r20,16
1010a4f8:	1545383a 	mul	r2,r2,r21
1010a4fc:	20c8b03a 	or	r4,r4,r3
1010a500:	2080042e 	bgeu	r4,r2,1010a514 <__umoddi3+0x228>
1010a504:	24c9883a 	add	r4,r4,r19
1010a508:	24c00236 	bltu	r4,r19,1010a514 <__umoddi3+0x228>
1010a50c:	2080012e 	bgeu	r4,r2,1010a514 <__umoddi3+0x228>
1010a510:	24c9883a 	add	r4,r4,r19
1010a514:	20a1c83a 	sub	r16,r4,r2
1010a518:	b00b883a 	mov	r5,r22
1010a51c:	8009883a 	mov	r4,r16
1010a520:	010a9800 	call	1010a980 <__umodsi3>
1010a524:	1023883a 	mov	r17,r2
1010a528:	b00b883a 	mov	r5,r22
1010a52c:	8009883a 	mov	r4,r16
1010a530:	010a91c0 	call	1010a91c <__udivsi3>
1010a534:	8822943a 	slli	r17,r17,16
1010a538:	1545383a 	mul	r2,r2,r21
1010a53c:	a53fffcc 	andi	r20,r20,65535
1010a540:	a446b03a 	or	r3,r20,r17
1010a544:	18bfb02e 	bgeu	r3,r2,1010a408 <__alt_data_end+0xfffea408>
1010a548:	003fab06 	br	1010a3f8 <__alt_data_end+0xfffea3f8>
1010a54c:	2005883a 	mov	r2,r4
1010a550:	2807883a 	mov	r3,r5
1010a554:	dfc00b17 	ldw	ra,44(sp)
1010a558:	df000a17 	ldw	fp,40(sp)
1010a55c:	ddc00917 	ldw	r23,36(sp)
1010a560:	dd800817 	ldw	r22,32(sp)
1010a564:	dd400717 	ldw	r21,28(sp)
1010a568:	dd000617 	ldw	r20,24(sp)
1010a56c:	dcc00517 	ldw	r19,20(sp)
1010a570:	dc800417 	ldw	r18,16(sp)
1010a574:	dc400317 	ldw	r17,12(sp)
1010a578:	dc000217 	ldw	r16,8(sp)
1010a57c:	dec00c04 	addi	sp,sp,48
1010a580:	f800283a 	ret
1010a584:	04c03fc4 	movi	r19,255
1010a588:	99c9803a 	cmpltu	r4,r19,r7
1010a58c:	200890fa 	slli	r4,r4,3
1010a590:	003fa806 	br	1010a434 <__alt_data_end+0xfffea434>
1010a594:	00803fc4 	movi	r2,255
1010a598:	14c5803a 	cmpltu	r2,r2,r19
1010a59c:	100490fa 	slli	r2,r2,3
1010a5a0:	003fc006 	br	1010a4a4 <__alt_data_end+0xfffea4a4>
1010a5a4:	00804034 	movhi	r2,256
1010a5a8:	10bfffc4 	addi	r2,r2,-1
1010a5ac:	11808b36 	bltu	r2,r6,1010a7dc <__umoddi3+0x4f0>
1010a5b0:	01000404 	movi	r4,16
1010a5b4:	003f6406 	br	1010a348 <__alt_data_end+0xfffea348>
1010a5b8:	34c4d83a 	srl	r2,r6,r19
1010a5bc:	3d0e983a 	sll	r7,r7,r20
1010a5c0:	8cf8d83a 	srl	fp,r17,r19
1010a5c4:	8d10983a 	sll	r8,r17,r20
1010a5c8:	38aab03a 	or	r21,r7,r2
1010a5cc:	a82cd43a 	srli	r22,r21,16
1010a5d0:	84e2d83a 	srl	r17,r16,r19
1010a5d4:	e009883a 	mov	r4,fp
1010a5d8:	b00b883a 	mov	r5,r22
1010a5dc:	8a22b03a 	or	r17,r17,r8
1010a5e0:	3524983a 	sll	r18,r6,r20
1010a5e4:	010a9800 	call	1010a980 <__umodsi3>
1010a5e8:	e009883a 	mov	r4,fp
1010a5ec:	b00b883a 	mov	r5,r22
1010a5f0:	102f883a 	mov	r23,r2
1010a5f4:	010a91c0 	call	1010a91c <__udivsi3>
1010a5f8:	100d883a 	mov	r6,r2
1010a5fc:	b808943a 	slli	r4,r23,16
1010a600:	aa3fffcc 	andi	r8,r21,65535
1010a604:	8804d43a 	srli	r2,r17,16
1010a608:	41af383a 	mul	r23,r8,r6
1010a60c:	8520983a 	sll	r16,r16,r20
1010a610:	1104b03a 	or	r2,r2,r4
1010a614:	15c0042e 	bgeu	r2,r23,1010a628 <__umoddi3+0x33c>
1010a618:	1545883a 	add	r2,r2,r21
1010a61c:	30ffffc4 	addi	r3,r6,-1
1010a620:	1540742e 	bgeu	r2,r21,1010a7f4 <__umoddi3+0x508>
1010a624:	180d883a 	mov	r6,r3
1010a628:	15efc83a 	sub	r23,r2,r23
1010a62c:	b00b883a 	mov	r5,r22
1010a630:	b809883a 	mov	r4,r23
1010a634:	d9800115 	stw	r6,4(sp)
1010a638:	da000015 	stw	r8,0(sp)
1010a63c:	010a9800 	call	1010a980 <__umodsi3>
1010a640:	b00b883a 	mov	r5,r22
1010a644:	b809883a 	mov	r4,r23
1010a648:	1039883a 	mov	fp,r2
1010a64c:	010a91c0 	call	1010a91c <__udivsi3>
1010a650:	da000017 	ldw	r8,0(sp)
1010a654:	e038943a 	slli	fp,fp,16
1010a658:	100b883a 	mov	r5,r2
1010a65c:	4089383a 	mul	r4,r8,r2
1010a660:	8a3fffcc 	andi	r8,r17,65535
1010a664:	4710b03a 	or	r8,r8,fp
1010a668:	d9800117 	ldw	r6,4(sp)
1010a66c:	4100042e 	bgeu	r8,r4,1010a680 <__umoddi3+0x394>
1010a670:	4551883a 	add	r8,r8,r21
1010a674:	10bfffc4 	addi	r2,r2,-1
1010a678:	45405a2e 	bgeu	r8,r21,1010a7e4 <__umoddi3+0x4f8>
1010a67c:	100b883a 	mov	r5,r2
1010a680:	300c943a 	slli	r6,r6,16
1010a684:	91ffffcc 	andi	r7,r18,65535
1010a688:	9004d43a 	srli	r2,r18,16
1010a68c:	314cb03a 	or	r6,r6,r5
1010a690:	317fffcc 	andi	r5,r6,65535
1010a694:	300cd43a 	srli	r6,r6,16
1010a698:	29d3383a 	mul	r9,r5,r7
1010a69c:	288b383a 	mul	r5,r5,r2
1010a6a0:	31cf383a 	mul	r7,r6,r7
1010a6a4:	4806d43a 	srli	r3,r9,16
1010a6a8:	4111c83a 	sub	r8,r8,r4
1010a6ac:	29cb883a 	add	r5,r5,r7
1010a6b0:	194b883a 	add	r5,r3,r5
1010a6b4:	3085383a 	mul	r2,r6,r2
1010a6b8:	29c0022e 	bgeu	r5,r7,1010a6c4 <__umoddi3+0x3d8>
1010a6bc:	00c00074 	movhi	r3,1
1010a6c0:	10c5883a 	add	r2,r2,r3
1010a6c4:	2808d43a 	srli	r4,r5,16
1010a6c8:	280a943a 	slli	r5,r5,16
1010a6cc:	4a7fffcc 	andi	r9,r9,65535
1010a6d0:	2085883a 	add	r2,r4,r2
1010a6d4:	2a4b883a 	add	r5,r5,r9
1010a6d8:	40803636 	bltu	r8,r2,1010a7b4 <__umoddi3+0x4c8>
1010a6dc:	40804d26 	beq	r8,r2,1010a814 <__umoddi3+0x528>
1010a6e0:	4089c83a 	sub	r4,r8,r2
1010a6e4:	280f883a 	mov	r7,r5
1010a6e8:	81cfc83a 	sub	r7,r16,r7
1010a6ec:	81c7803a 	cmpltu	r3,r16,r7
1010a6f0:	20c7c83a 	sub	r3,r4,r3
1010a6f4:	1cc4983a 	sll	r2,r3,r19
1010a6f8:	3d0ed83a 	srl	r7,r7,r20
1010a6fc:	1d06d83a 	srl	r3,r3,r20
1010a700:	11c4b03a 	or	r2,r2,r7
1010a704:	003f9306 	br	1010a554 <__alt_data_end+0xfffea554>
1010a708:	9ca6983a 	sll	r19,r19,r18
1010a70c:	88e8d83a 	srl	r20,r17,r3
1010a710:	80c4d83a 	srl	r2,r16,r3
1010a714:	982cd43a 	srli	r22,r19,16
1010a718:	8ca2983a 	sll	r17,r17,r18
1010a71c:	a009883a 	mov	r4,r20
1010a720:	b00b883a 	mov	r5,r22
1010a724:	1478b03a 	or	fp,r2,r17
1010a728:	010a9800 	call	1010a980 <__umodsi3>
1010a72c:	a009883a 	mov	r4,r20
1010a730:	b00b883a 	mov	r5,r22
1010a734:	1023883a 	mov	r17,r2
1010a738:	010a91c0 	call	1010a91c <__udivsi3>
1010a73c:	9d7fffcc 	andi	r21,r19,65535
1010a740:	880a943a 	slli	r5,r17,16
1010a744:	e008d43a 	srli	r4,fp,16
1010a748:	a885383a 	mul	r2,r21,r2
1010a74c:	84a8983a 	sll	r20,r16,r18
1010a750:	2148b03a 	or	r4,r4,r5
1010a754:	2080042e 	bgeu	r4,r2,1010a768 <__umoddi3+0x47c>
1010a758:	24c9883a 	add	r4,r4,r19
1010a75c:	24c00236 	bltu	r4,r19,1010a768 <__umoddi3+0x47c>
1010a760:	2080012e 	bgeu	r4,r2,1010a768 <__umoddi3+0x47c>
1010a764:	24c9883a 	add	r4,r4,r19
1010a768:	20a3c83a 	sub	r17,r4,r2
1010a76c:	b00b883a 	mov	r5,r22
1010a770:	8809883a 	mov	r4,r17
1010a774:	010a9800 	call	1010a980 <__umodsi3>
1010a778:	102f883a 	mov	r23,r2
1010a77c:	8809883a 	mov	r4,r17
1010a780:	b00b883a 	mov	r5,r22
1010a784:	010a91c0 	call	1010a91c <__udivsi3>
1010a788:	b82e943a 	slli	r23,r23,16
1010a78c:	a885383a 	mul	r2,r21,r2
1010a790:	e13fffcc 	andi	r4,fp,65535
1010a794:	25c8b03a 	or	r4,r4,r23
1010a798:	2080042e 	bgeu	r4,r2,1010a7ac <__umoddi3+0x4c0>
1010a79c:	24c9883a 	add	r4,r4,r19
1010a7a0:	24c00236 	bltu	r4,r19,1010a7ac <__umoddi3+0x4c0>
1010a7a4:	2080012e 	bgeu	r4,r2,1010a7ac <__umoddi3+0x4c0>
1010a7a8:	24c9883a 	add	r4,r4,r19
1010a7ac:	20a3c83a 	sub	r17,r4,r2
1010a7b0:	003f4806 	br	1010a4d4 <__alt_data_end+0xfffea4d4>
1010a7b4:	2c8fc83a 	sub	r7,r5,r18
1010a7b8:	1545c83a 	sub	r2,r2,r21
1010a7bc:	29cb803a 	cmpltu	r5,r5,r7
1010a7c0:	1145c83a 	sub	r2,r2,r5
1010a7c4:	4089c83a 	sub	r4,r8,r2
1010a7c8:	003fc706 	br	1010a6e8 <__alt_data_end+0xfffea6e8>
1010a7cc:	01000604 	movi	r4,24
1010a7d0:	003f1806 	br	1010a434 <__alt_data_end+0xfffea434>
1010a7d4:	00800604 	movi	r2,24
1010a7d8:	003f3206 	br	1010a4a4 <__alt_data_end+0xfffea4a4>
1010a7dc:	01000604 	movi	r4,24
1010a7e0:	003ed906 	br	1010a348 <__alt_data_end+0xfffea348>
1010a7e4:	413fa52e 	bgeu	r8,r4,1010a67c <__alt_data_end+0xfffea67c>
1010a7e8:	297fff84 	addi	r5,r5,-2
1010a7ec:	4551883a 	add	r8,r8,r21
1010a7f0:	003fa306 	br	1010a680 <__alt_data_end+0xfffea680>
1010a7f4:	15ff8b2e 	bgeu	r2,r23,1010a624 <__alt_data_end+0xfffea624>
1010a7f8:	31bfff84 	addi	r6,r6,-2
1010a7fc:	1545883a 	add	r2,r2,r21
1010a800:	003f8906 	br	1010a628 <__alt_data_end+0xfffea628>
1010a804:	24c9883a 	add	r4,r4,r19
1010a808:	003eee06 	br	1010a3c4 <__alt_data_end+0xfffea3c4>
1010a80c:	8005883a 	mov	r2,r16
1010a810:	003f1706 	br	1010a470 <__alt_data_end+0xfffea470>
1010a814:	817fe736 	bltu	r16,r5,1010a7b4 <__alt_data_end+0xfffea7b4>
1010a818:	280f883a 	mov	r7,r5
1010a81c:	0009883a 	mov	r4,zero
1010a820:	003fb106 	br	1010a6e8 <__alt_data_end+0xfffea6e8>

1010a824 <__divsi3>:
1010a824:	20001b16 	blt	r4,zero,1010a894 <__divsi3+0x70>
1010a828:	000f883a 	mov	r7,zero
1010a82c:	28001616 	blt	r5,zero,1010a888 <__divsi3+0x64>
1010a830:	200d883a 	mov	r6,r4
1010a834:	29001a2e 	bgeu	r5,r4,1010a8a0 <__divsi3+0x7c>
1010a838:	00800804 	movi	r2,32
1010a83c:	00c00044 	movi	r3,1
1010a840:	00000106 	br	1010a848 <__divsi3+0x24>
1010a844:	10000d26 	beq	r2,zero,1010a87c <__divsi3+0x58>
1010a848:	294b883a 	add	r5,r5,r5
1010a84c:	10bfffc4 	addi	r2,r2,-1
1010a850:	18c7883a 	add	r3,r3,r3
1010a854:	293ffb36 	bltu	r5,r4,1010a844 <__alt_data_end+0xfffea844>
1010a858:	0005883a 	mov	r2,zero
1010a85c:	18000726 	beq	r3,zero,1010a87c <__divsi3+0x58>
1010a860:	0005883a 	mov	r2,zero
1010a864:	31400236 	bltu	r6,r5,1010a870 <__divsi3+0x4c>
1010a868:	314dc83a 	sub	r6,r6,r5
1010a86c:	10c4b03a 	or	r2,r2,r3
1010a870:	1806d07a 	srli	r3,r3,1
1010a874:	280ad07a 	srli	r5,r5,1
1010a878:	183ffa1e 	bne	r3,zero,1010a864 <__alt_data_end+0xfffea864>
1010a87c:	38000126 	beq	r7,zero,1010a884 <__divsi3+0x60>
1010a880:	0085c83a 	sub	r2,zero,r2
1010a884:	f800283a 	ret
1010a888:	014bc83a 	sub	r5,zero,r5
1010a88c:	39c0005c 	xori	r7,r7,1
1010a890:	003fe706 	br	1010a830 <__alt_data_end+0xfffea830>
1010a894:	0109c83a 	sub	r4,zero,r4
1010a898:	01c00044 	movi	r7,1
1010a89c:	003fe306 	br	1010a82c <__alt_data_end+0xfffea82c>
1010a8a0:	00c00044 	movi	r3,1
1010a8a4:	003fee06 	br	1010a860 <__alt_data_end+0xfffea860>

1010a8a8 <__modsi3>:
1010a8a8:	20001716 	blt	r4,zero,1010a908 <__modsi3+0x60>
1010a8ac:	000f883a 	mov	r7,zero
1010a8b0:	2005883a 	mov	r2,r4
1010a8b4:	28001216 	blt	r5,zero,1010a900 <__modsi3+0x58>
1010a8b8:	2900162e 	bgeu	r5,r4,1010a914 <__modsi3+0x6c>
1010a8bc:	01800804 	movi	r6,32
1010a8c0:	00c00044 	movi	r3,1
1010a8c4:	00000106 	br	1010a8cc <__modsi3+0x24>
1010a8c8:	30000a26 	beq	r6,zero,1010a8f4 <__modsi3+0x4c>
1010a8cc:	294b883a 	add	r5,r5,r5
1010a8d0:	31bfffc4 	addi	r6,r6,-1
1010a8d4:	18c7883a 	add	r3,r3,r3
1010a8d8:	293ffb36 	bltu	r5,r4,1010a8c8 <__alt_data_end+0xfffea8c8>
1010a8dc:	18000526 	beq	r3,zero,1010a8f4 <__modsi3+0x4c>
1010a8e0:	1806d07a 	srli	r3,r3,1
1010a8e4:	11400136 	bltu	r2,r5,1010a8ec <__modsi3+0x44>
1010a8e8:	1145c83a 	sub	r2,r2,r5
1010a8ec:	280ad07a 	srli	r5,r5,1
1010a8f0:	183ffb1e 	bne	r3,zero,1010a8e0 <__alt_data_end+0xfffea8e0>
1010a8f4:	38000126 	beq	r7,zero,1010a8fc <__modsi3+0x54>
1010a8f8:	0085c83a 	sub	r2,zero,r2
1010a8fc:	f800283a 	ret
1010a900:	014bc83a 	sub	r5,zero,r5
1010a904:	003fec06 	br	1010a8b8 <__alt_data_end+0xfffea8b8>
1010a908:	0109c83a 	sub	r4,zero,r4
1010a90c:	01c00044 	movi	r7,1
1010a910:	003fe706 	br	1010a8b0 <__alt_data_end+0xfffea8b0>
1010a914:	00c00044 	movi	r3,1
1010a918:	003ff106 	br	1010a8e0 <__alt_data_end+0xfffea8e0>

1010a91c <__udivsi3>:
1010a91c:	200d883a 	mov	r6,r4
1010a920:	2900152e 	bgeu	r5,r4,1010a978 <__udivsi3+0x5c>
1010a924:	28001416 	blt	r5,zero,1010a978 <__udivsi3+0x5c>
1010a928:	00800804 	movi	r2,32
1010a92c:	00c00044 	movi	r3,1
1010a930:	00000206 	br	1010a93c <__udivsi3+0x20>
1010a934:	10000e26 	beq	r2,zero,1010a970 <__udivsi3+0x54>
1010a938:	28000516 	blt	r5,zero,1010a950 <__udivsi3+0x34>
1010a93c:	294b883a 	add	r5,r5,r5
1010a940:	10bfffc4 	addi	r2,r2,-1
1010a944:	18c7883a 	add	r3,r3,r3
1010a948:	293ffa36 	bltu	r5,r4,1010a934 <__alt_data_end+0xfffea934>
1010a94c:	18000826 	beq	r3,zero,1010a970 <__udivsi3+0x54>
1010a950:	0005883a 	mov	r2,zero
1010a954:	31400236 	bltu	r6,r5,1010a960 <__udivsi3+0x44>
1010a958:	314dc83a 	sub	r6,r6,r5
1010a95c:	10c4b03a 	or	r2,r2,r3
1010a960:	1806d07a 	srli	r3,r3,1
1010a964:	280ad07a 	srli	r5,r5,1
1010a968:	183ffa1e 	bne	r3,zero,1010a954 <__alt_data_end+0xfffea954>
1010a96c:	f800283a 	ret
1010a970:	0005883a 	mov	r2,zero
1010a974:	f800283a 	ret
1010a978:	00c00044 	movi	r3,1
1010a97c:	003ff406 	br	1010a950 <__alt_data_end+0xfffea950>

1010a980 <__umodsi3>:
1010a980:	2005883a 	mov	r2,r4
1010a984:	2900122e 	bgeu	r5,r4,1010a9d0 <__umodsi3+0x50>
1010a988:	28001116 	blt	r5,zero,1010a9d0 <__umodsi3+0x50>
1010a98c:	01800804 	movi	r6,32
1010a990:	00c00044 	movi	r3,1
1010a994:	00000206 	br	1010a9a0 <__umodsi3+0x20>
1010a998:	30000c26 	beq	r6,zero,1010a9cc <__umodsi3+0x4c>
1010a99c:	28000516 	blt	r5,zero,1010a9b4 <__umodsi3+0x34>
1010a9a0:	294b883a 	add	r5,r5,r5
1010a9a4:	31bfffc4 	addi	r6,r6,-1
1010a9a8:	18c7883a 	add	r3,r3,r3
1010a9ac:	293ffa36 	bltu	r5,r4,1010a998 <__alt_data_end+0xfffea998>
1010a9b0:	18000626 	beq	r3,zero,1010a9cc <__umodsi3+0x4c>
1010a9b4:	1806d07a 	srli	r3,r3,1
1010a9b8:	11400136 	bltu	r2,r5,1010a9c0 <__umodsi3+0x40>
1010a9bc:	1145c83a 	sub	r2,r2,r5
1010a9c0:	280ad07a 	srli	r5,r5,1
1010a9c4:	183ffb1e 	bne	r3,zero,1010a9b4 <__alt_data_end+0xfffea9b4>
1010a9c8:	f800283a 	ret
1010a9cc:	f800283a 	ret
1010a9d0:	00c00044 	movi	r3,1
1010a9d4:	003ff706 	br	1010a9b4 <__alt_data_end+0xfffea9b4>

1010a9d8 <__adddf3>:
1010a9d8:	02c00434 	movhi	r11,16
1010a9dc:	5affffc4 	addi	r11,r11,-1
1010a9e0:	2806d7fa 	srli	r3,r5,31
1010a9e4:	2ad4703a 	and	r10,r5,r11
1010a9e8:	3ad2703a 	and	r9,r7,r11
1010a9ec:	3804d53a 	srli	r2,r7,20
1010a9f0:	3018d77a 	srli	r12,r6,29
1010a9f4:	280ad53a 	srli	r5,r5,20
1010a9f8:	501490fa 	slli	r10,r10,3
1010a9fc:	2010d77a 	srli	r8,r4,29
1010aa00:	481290fa 	slli	r9,r9,3
1010aa04:	380ed7fa 	srli	r7,r7,31
1010aa08:	defffb04 	addi	sp,sp,-20
1010aa0c:	dc800215 	stw	r18,8(sp)
1010aa10:	dc400115 	stw	r17,4(sp)
1010aa14:	dc000015 	stw	r16,0(sp)
1010aa18:	dfc00415 	stw	ra,16(sp)
1010aa1c:	dcc00315 	stw	r19,12(sp)
1010aa20:	1c803fcc 	andi	r18,r3,255
1010aa24:	2c01ffcc 	andi	r16,r5,2047
1010aa28:	5210b03a 	or	r8,r10,r8
1010aa2c:	202290fa 	slli	r17,r4,3
1010aa30:	1081ffcc 	andi	r2,r2,2047
1010aa34:	4b12b03a 	or	r9,r9,r12
1010aa38:	300c90fa 	slli	r6,r6,3
1010aa3c:	91c07526 	beq	r18,r7,1010ac14 <__adddf3+0x23c>
1010aa40:	8087c83a 	sub	r3,r16,r2
1010aa44:	00c0ab0e 	bge	zero,r3,1010acf4 <__adddf3+0x31c>
1010aa48:	10002a1e 	bne	r2,zero,1010aaf4 <__adddf3+0x11c>
1010aa4c:	4984b03a 	or	r2,r9,r6
1010aa50:	1000961e 	bne	r2,zero,1010acac <__adddf3+0x2d4>
1010aa54:	888001cc 	andi	r2,r17,7
1010aa58:	10000726 	beq	r2,zero,1010aa78 <__adddf3+0xa0>
1010aa5c:	888003cc 	andi	r2,r17,15
1010aa60:	00c00104 	movi	r3,4
1010aa64:	10c00426 	beq	r2,r3,1010aa78 <__adddf3+0xa0>
1010aa68:	88c7883a 	add	r3,r17,r3
1010aa6c:	1c63803a 	cmpltu	r17,r3,r17
1010aa70:	4451883a 	add	r8,r8,r17
1010aa74:	1823883a 	mov	r17,r3
1010aa78:	4080202c 	andhi	r2,r8,128
1010aa7c:	10005926 	beq	r2,zero,1010abe4 <__adddf3+0x20c>
1010aa80:	84000044 	addi	r16,r16,1
1010aa84:	0081ffc4 	movi	r2,2047
1010aa88:	8080ba26 	beq	r16,r2,1010ad74 <__adddf3+0x39c>
1010aa8c:	00bfe034 	movhi	r2,65408
1010aa90:	10bfffc4 	addi	r2,r2,-1
1010aa94:	4090703a 	and	r8,r8,r2
1010aa98:	4004977a 	slli	r2,r8,29
1010aa9c:	4010927a 	slli	r8,r8,9
1010aaa0:	8822d0fa 	srli	r17,r17,3
1010aaa4:	8401ffcc 	andi	r16,r16,2047
1010aaa8:	4010d33a 	srli	r8,r8,12
1010aaac:	9007883a 	mov	r3,r18
1010aab0:	1444b03a 	or	r2,r2,r17
1010aab4:	8401ffcc 	andi	r16,r16,2047
1010aab8:	8020953a 	slli	r16,r16,20
1010aabc:	18c03fcc 	andi	r3,r3,255
1010aac0:	01000434 	movhi	r4,16
1010aac4:	213fffc4 	addi	r4,r4,-1
1010aac8:	180697fa 	slli	r3,r3,31
1010aacc:	4110703a 	and	r8,r8,r4
1010aad0:	4410b03a 	or	r8,r8,r16
1010aad4:	40c6b03a 	or	r3,r8,r3
1010aad8:	dfc00417 	ldw	ra,16(sp)
1010aadc:	dcc00317 	ldw	r19,12(sp)
1010aae0:	dc800217 	ldw	r18,8(sp)
1010aae4:	dc400117 	ldw	r17,4(sp)
1010aae8:	dc000017 	ldw	r16,0(sp)
1010aaec:	dec00504 	addi	sp,sp,20
1010aaf0:	f800283a 	ret
1010aaf4:	0081ffc4 	movi	r2,2047
1010aaf8:	80bfd626 	beq	r16,r2,1010aa54 <__alt_data_end+0xfffeaa54>
1010aafc:	4a402034 	orhi	r9,r9,128
1010ab00:	00800e04 	movi	r2,56
1010ab04:	10c09f16 	blt	r2,r3,1010ad84 <__adddf3+0x3ac>
1010ab08:	008007c4 	movi	r2,31
1010ab0c:	10c0c216 	blt	r2,r3,1010ae18 <__adddf3+0x440>
1010ab10:	00800804 	movi	r2,32
1010ab14:	10c5c83a 	sub	r2,r2,r3
1010ab18:	488a983a 	sll	r5,r9,r2
1010ab1c:	30c8d83a 	srl	r4,r6,r3
1010ab20:	3084983a 	sll	r2,r6,r2
1010ab24:	48c6d83a 	srl	r3,r9,r3
1010ab28:	290cb03a 	or	r6,r5,r4
1010ab2c:	1004c03a 	cmpne	r2,r2,zero
1010ab30:	308cb03a 	or	r6,r6,r2
1010ab34:	898dc83a 	sub	r6,r17,r6
1010ab38:	89a3803a 	cmpltu	r17,r17,r6
1010ab3c:	40d1c83a 	sub	r8,r8,r3
1010ab40:	4451c83a 	sub	r8,r8,r17
1010ab44:	3023883a 	mov	r17,r6
1010ab48:	4080202c 	andhi	r2,r8,128
1010ab4c:	10002326 	beq	r2,zero,1010abdc <__adddf3+0x204>
1010ab50:	04c02034 	movhi	r19,128
1010ab54:	9cffffc4 	addi	r19,r19,-1
1010ab58:	44e6703a 	and	r19,r8,r19
1010ab5c:	98007626 	beq	r19,zero,1010ad38 <__adddf3+0x360>
1010ab60:	9809883a 	mov	r4,r19
1010ab64:	010cfdc0 	call	1010cfdc <__clzsi2>
1010ab68:	10fffe04 	addi	r3,r2,-8
1010ab6c:	010007c4 	movi	r4,31
1010ab70:	20c07716 	blt	r4,r3,1010ad50 <__adddf3+0x378>
1010ab74:	00800804 	movi	r2,32
1010ab78:	10c5c83a 	sub	r2,r2,r3
1010ab7c:	8884d83a 	srl	r2,r17,r2
1010ab80:	98d0983a 	sll	r8,r19,r3
1010ab84:	88e2983a 	sll	r17,r17,r3
1010ab88:	1204b03a 	or	r2,r2,r8
1010ab8c:	1c007416 	blt	r3,r16,1010ad60 <__adddf3+0x388>
1010ab90:	1c21c83a 	sub	r16,r3,r16
1010ab94:	82000044 	addi	r8,r16,1
1010ab98:	00c007c4 	movi	r3,31
1010ab9c:	1a009116 	blt	r3,r8,1010ade4 <__adddf3+0x40c>
1010aba0:	00c00804 	movi	r3,32
1010aba4:	1a07c83a 	sub	r3,r3,r8
1010aba8:	8a08d83a 	srl	r4,r17,r8
1010abac:	88e2983a 	sll	r17,r17,r3
1010abb0:	10c6983a 	sll	r3,r2,r3
1010abb4:	1210d83a 	srl	r8,r2,r8
1010abb8:	8804c03a 	cmpne	r2,r17,zero
1010abbc:	1906b03a 	or	r3,r3,r4
1010abc0:	18a2b03a 	or	r17,r3,r2
1010abc4:	0021883a 	mov	r16,zero
1010abc8:	003fa206 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010abcc:	1890b03a 	or	r8,r3,r2
1010abd0:	40017d26 	beq	r8,zero,1010b1c8 <__adddf3+0x7f0>
1010abd4:	1011883a 	mov	r8,r2
1010abd8:	1823883a 	mov	r17,r3
1010abdc:	888001cc 	andi	r2,r17,7
1010abe0:	103f9e1e 	bne	r2,zero,1010aa5c <__alt_data_end+0xfffeaa5c>
1010abe4:	4004977a 	slli	r2,r8,29
1010abe8:	8822d0fa 	srli	r17,r17,3
1010abec:	4010d0fa 	srli	r8,r8,3
1010abf0:	9007883a 	mov	r3,r18
1010abf4:	1444b03a 	or	r2,r2,r17
1010abf8:	0101ffc4 	movi	r4,2047
1010abfc:	81002426 	beq	r16,r4,1010ac90 <__adddf3+0x2b8>
1010ac00:	8120703a 	and	r16,r16,r4
1010ac04:	01000434 	movhi	r4,16
1010ac08:	213fffc4 	addi	r4,r4,-1
1010ac0c:	4110703a 	and	r8,r8,r4
1010ac10:	003fa806 	br	1010aab4 <__alt_data_end+0xfffeaab4>
1010ac14:	8089c83a 	sub	r4,r16,r2
1010ac18:	01005e0e 	bge	zero,r4,1010ad94 <__adddf3+0x3bc>
1010ac1c:	10002b26 	beq	r2,zero,1010accc <__adddf3+0x2f4>
1010ac20:	0081ffc4 	movi	r2,2047
1010ac24:	80bf8b26 	beq	r16,r2,1010aa54 <__alt_data_end+0xfffeaa54>
1010ac28:	4a402034 	orhi	r9,r9,128
1010ac2c:	00800e04 	movi	r2,56
1010ac30:	1100a40e 	bge	r2,r4,1010aec4 <__adddf3+0x4ec>
1010ac34:	498cb03a 	or	r6,r9,r6
1010ac38:	300ac03a 	cmpne	r5,r6,zero
1010ac3c:	0013883a 	mov	r9,zero
1010ac40:	2c4b883a 	add	r5,r5,r17
1010ac44:	2c63803a 	cmpltu	r17,r5,r17
1010ac48:	4a11883a 	add	r8,r9,r8
1010ac4c:	8a11883a 	add	r8,r17,r8
1010ac50:	2823883a 	mov	r17,r5
1010ac54:	4080202c 	andhi	r2,r8,128
1010ac58:	103fe026 	beq	r2,zero,1010abdc <__alt_data_end+0xfffeabdc>
1010ac5c:	84000044 	addi	r16,r16,1
1010ac60:	0081ffc4 	movi	r2,2047
1010ac64:	8080d226 	beq	r16,r2,1010afb0 <__adddf3+0x5d8>
1010ac68:	00bfe034 	movhi	r2,65408
1010ac6c:	10bfffc4 	addi	r2,r2,-1
1010ac70:	4090703a 	and	r8,r8,r2
1010ac74:	880ad07a 	srli	r5,r17,1
1010ac78:	400897fa 	slli	r4,r8,31
1010ac7c:	88c0004c 	andi	r3,r17,1
1010ac80:	28e2b03a 	or	r17,r5,r3
1010ac84:	4010d07a 	srli	r8,r8,1
1010ac88:	2462b03a 	or	r17,r4,r17
1010ac8c:	003f7106 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010ac90:	4088b03a 	or	r4,r8,r2
1010ac94:	20014526 	beq	r4,zero,1010b1ac <__adddf3+0x7d4>
1010ac98:	01000434 	movhi	r4,16
1010ac9c:	42000234 	orhi	r8,r8,8
1010aca0:	213fffc4 	addi	r4,r4,-1
1010aca4:	4110703a 	and	r8,r8,r4
1010aca8:	003f8206 	br	1010aab4 <__alt_data_end+0xfffeaab4>
1010acac:	18ffffc4 	addi	r3,r3,-1
1010acb0:	1800491e 	bne	r3,zero,1010add8 <__adddf3+0x400>
1010acb4:	898bc83a 	sub	r5,r17,r6
1010acb8:	8963803a 	cmpltu	r17,r17,r5
1010acbc:	4251c83a 	sub	r8,r8,r9
1010acc0:	4451c83a 	sub	r8,r8,r17
1010acc4:	2823883a 	mov	r17,r5
1010acc8:	003f9f06 	br	1010ab48 <__alt_data_end+0xfffeab48>
1010accc:	4984b03a 	or	r2,r9,r6
1010acd0:	103f6026 	beq	r2,zero,1010aa54 <__alt_data_end+0xfffeaa54>
1010acd4:	213fffc4 	addi	r4,r4,-1
1010acd8:	2000931e 	bne	r4,zero,1010af28 <__adddf3+0x550>
1010acdc:	898d883a 	add	r6,r17,r6
1010ace0:	3463803a 	cmpltu	r17,r6,r17
1010ace4:	4251883a 	add	r8,r8,r9
1010ace8:	8a11883a 	add	r8,r17,r8
1010acec:	3023883a 	mov	r17,r6
1010acf0:	003fd806 	br	1010ac54 <__alt_data_end+0xfffeac54>
1010acf4:	1800541e 	bne	r3,zero,1010ae48 <__adddf3+0x470>
1010acf8:	80800044 	addi	r2,r16,1
1010acfc:	1081ffcc 	andi	r2,r2,2047
1010ad00:	00c00044 	movi	r3,1
1010ad04:	1880a00e 	bge	r3,r2,1010af88 <__adddf3+0x5b0>
1010ad08:	8989c83a 	sub	r4,r17,r6
1010ad0c:	8905803a 	cmpltu	r2,r17,r4
1010ad10:	4267c83a 	sub	r19,r8,r9
1010ad14:	98a7c83a 	sub	r19,r19,r2
1010ad18:	9880202c 	andhi	r2,r19,128
1010ad1c:	10006326 	beq	r2,zero,1010aeac <__adddf3+0x4d4>
1010ad20:	3463c83a 	sub	r17,r6,r17
1010ad24:	4a07c83a 	sub	r3,r9,r8
1010ad28:	344d803a 	cmpltu	r6,r6,r17
1010ad2c:	19a7c83a 	sub	r19,r3,r6
1010ad30:	3825883a 	mov	r18,r7
1010ad34:	983f8a1e 	bne	r19,zero,1010ab60 <__alt_data_end+0xfffeab60>
1010ad38:	8809883a 	mov	r4,r17
1010ad3c:	010cfdc0 	call	1010cfdc <__clzsi2>
1010ad40:	10800804 	addi	r2,r2,32
1010ad44:	10fffe04 	addi	r3,r2,-8
1010ad48:	010007c4 	movi	r4,31
1010ad4c:	20ff890e 	bge	r4,r3,1010ab74 <__alt_data_end+0xfffeab74>
1010ad50:	10bff604 	addi	r2,r2,-40
1010ad54:	8884983a 	sll	r2,r17,r2
1010ad58:	0023883a 	mov	r17,zero
1010ad5c:	1c3f8c0e 	bge	r3,r16,1010ab90 <__alt_data_end+0xfffeab90>
1010ad60:	023fe034 	movhi	r8,65408
1010ad64:	423fffc4 	addi	r8,r8,-1
1010ad68:	80e1c83a 	sub	r16,r16,r3
1010ad6c:	1210703a 	and	r8,r2,r8
1010ad70:	003f3806 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010ad74:	9007883a 	mov	r3,r18
1010ad78:	0011883a 	mov	r8,zero
1010ad7c:	0005883a 	mov	r2,zero
1010ad80:	003f4c06 	br	1010aab4 <__alt_data_end+0xfffeaab4>
1010ad84:	498cb03a 	or	r6,r9,r6
1010ad88:	300cc03a 	cmpne	r6,r6,zero
1010ad8c:	0007883a 	mov	r3,zero
1010ad90:	003f6806 	br	1010ab34 <__alt_data_end+0xfffeab34>
1010ad94:	20009c1e 	bne	r4,zero,1010b008 <__adddf3+0x630>
1010ad98:	80800044 	addi	r2,r16,1
1010ad9c:	1141ffcc 	andi	r5,r2,2047
1010ada0:	01000044 	movi	r4,1
1010ada4:	2140670e 	bge	r4,r5,1010af44 <__adddf3+0x56c>
1010ada8:	0101ffc4 	movi	r4,2047
1010adac:	11007f26 	beq	r2,r4,1010afac <__adddf3+0x5d4>
1010adb0:	898d883a 	add	r6,r17,r6
1010adb4:	4247883a 	add	r3,r8,r9
1010adb8:	3451803a 	cmpltu	r8,r6,r17
1010adbc:	40d1883a 	add	r8,r8,r3
1010adc0:	402297fa 	slli	r17,r8,31
1010adc4:	300cd07a 	srli	r6,r6,1
1010adc8:	4010d07a 	srli	r8,r8,1
1010adcc:	1021883a 	mov	r16,r2
1010add0:	89a2b03a 	or	r17,r17,r6
1010add4:	003f1f06 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010add8:	0081ffc4 	movi	r2,2047
1010addc:	80bf481e 	bne	r16,r2,1010ab00 <__alt_data_end+0xfffeab00>
1010ade0:	003f1c06 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010ade4:	843ff844 	addi	r16,r16,-31
1010ade8:	01000804 	movi	r4,32
1010adec:	1406d83a 	srl	r3,r2,r16
1010adf0:	41005026 	beq	r8,r4,1010af34 <__adddf3+0x55c>
1010adf4:	01001004 	movi	r4,64
1010adf8:	2211c83a 	sub	r8,r4,r8
1010adfc:	1204983a 	sll	r2,r2,r8
1010ae00:	88a2b03a 	or	r17,r17,r2
1010ae04:	8822c03a 	cmpne	r17,r17,zero
1010ae08:	1c62b03a 	or	r17,r3,r17
1010ae0c:	0011883a 	mov	r8,zero
1010ae10:	0021883a 	mov	r16,zero
1010ae14:	003f7106 	br	1010abdc <__alt_data_end+0xfffeabdc>
1010ae18:	193ff804 	addi	r4,r3,-32
1010ae1c:	00800804 	movi	r2,32
1010ae20:	4908d83a 	srl	r4,r9,r4
1010ae24:	18804526 	beq	r3,r2,1010af3c <__adddf3+0x564>
1010ae28:	00801004 	movi	r2,64
1010ae2c:	10c5c83a 	sub	r2,r2,r3
1010ae30:	4886983a 	sll	r3,r9,r2
1010ae34:	198cb03a 	or	r6,r3,r6
1010ae38:	300cc03a 	cmpne	r6,r6,zero
1010ae3c:	218cb03a 	or	r6,r4,r6
1010ae40:	0007883a 	mov	r3,zero
1010ae44:	003f3b06 	br	1010ab34 <__alt_data_end+0xfffeab34>
1010ae48:	80002a26 	beq	r16,zero,1010aef4 <__adddf3+0x51c>
1010ae4c:	0101ffc4 	movi	r4,2047
1010ae50:	11006826 	beq	r2,r4,1010aff4 <__adddf3+0x61c>
1010ae54:	00c7c83a 	sub	r3,zero,r3
1010ae58:	42002034 	orhi	r8,r8,128
1010ae5c:	01000e04 	movi	r4,56
1010ae60:	20c07c16 	blt	r4,r3,1010b054 <__adddf3+0x67c>
1010ae64:	010007c4 	movi	r4,31
1010ae68:	20c0da16 	blt	r4,r3,1010b1d4 <__adddf3+0x7fc>
1010ae6c:	01000804 	movi	r4,32
1010ae70:	20c9c83a 	sub	r4,r4,r3
1010ae74:	4114983a 	sll	r10,r8,r4
1010ae78:	88cad83a 	srl	r5,r17,r3
1010ae7c:	8908983a 	sll	r4,r17,r4
1010ae80:	40c6d83a 	srl	r3,r8,r3
1010ae84:	5162b03a 	or	r17,r10,r5
1010ae88:	2008c03a 	cmpne	r4,r4,zero
1010ae8c:	8922b03a 	or	r17,r17,r4
1010ae90:	3463c83a 	sub	r17,r6,r17
1010ae94:	48c7c83a 	sub	r3,r9,r3
1010ae98:	344d803a 	cmpltu	r6,r6,r17
1010ae9c:	1991c83a 	sub	r8,r3,r6
1010aea0:	1021883a 	mov	r16,r2
1010aea4:	3825883a 	mov	r18,r7
1010aea8:	003f2706 	br	1010ab48 <__alt_data_end+0xfffeab48>
1010aeac:	24d0b03a 	or	r8,r4,r19
1010aeb0:	40001b1e 	bne	r8,zero,1010af20 <__adddf3+0x548>
1010aeb4:	0005883a 	mov	r2,zero
1010aeb8:	0007883a 	mov	r3,zero
1010aebc:	0021883a 	mov	r16,zero
1010aec0:	003f4d06 	br	1010abf8 <__alt_data_end+0xfffeabf8>
1010aec4:	008007c4 	movi	r2,31
1010aec8:	11003c16 	blt	r2,r4,1010afbc <__adddf3+0x5e4>
1010aecc:	00800804 	movi	r2,32
1010aed0:	1105c83a 	sub	r2,r2,r4
1010aed4:	488e983a 	sll	r7,r9,r2
1010aed8:	310ad83a 	srl	r5,r6,r4
1010aedc:	3084983a 	sll	r2,r6,r2
1010aee0:	4912d83a 	srl	r9,r9,r4
1010aee4:	394ab03a 	or	r5,r7,r5
1010aee8:	1004c03a 	cmpne	r2,r2,zero
1010aeec:	288ab03a 	or	r5,r5,r2
1010aef0:	003f5306 	br	1010ac40 <__alt_data_end+0xfffeac40>
1010aef4:	4448b03a 	or	r4,r8,r17
1010aef8:	20003e26 	beq	r4,zero,1010aff4 <__adddf3+0x61c>
1010aefc:	00c6303a 	nor	r3,zero,r3
1010af00:	18003a1e 	bne	r3,zero,1010afec <__adddf3+0x614>
1010af04:	3463c83a 	sub	r17,r6,r17
1010af08:	4a07c83a 	sub	r3,r9,r8
1010af0c:	344d803a 	cmpltu	r6,r6,r17
1010af10:	1991c83a 	sub	r8,r3,r6
1010af14:	1021883a 	mov	r16,r2
1010af18:	3825883a 	mov	r18,r7
1010af1c:	003f0a06 	br	1010ab48 <__alt_data_end+0xfffeab48>
1010af20:	2023883a 	mov	r17,r4
1010af24:	003f0d06 	br	1010ab5c <__alt_data_end+0xfffeab5c>
1010af28:	0081ffc4 	movi	r2,2047
1010af2c:	80bf3f1e 	bne	r16,r2,1010ac2c <__alt_data_end+0xfffeac2c>
1010af30:	003ec806 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010af34:	0005883a 	mov	r2,zero
1010af38:	003fb106 	br	1010ae00 <__alt_data_end+0xfffeae00>
1010af3c:	0007883a 	mov	r3,zero
1010af40:	003fbc06 	br	1010ae34 <__alt_data_end+0xfffeae34>
1010af44:	4444b03a 	or	r2,r8,r17
1010af48:	8000871e 	bne	r16,zero,1010b168 <__adddf3+0x790>
1010af4c:	1000ba26 	beq	r2,zero,1010b238 <__adddf3+0x860>
1010af50:	4984b03a 	or	r2,r9,r6
1010af54:	103ebf26 	beq	r2,zero,1010aa54 <__alt_data_end+0xfffeaa54>
1010af58:	8985883a 	add	r2,r17,r6
1010af5c:	4247883a 	add	r3,r8,r9
1010af60:	1451803a 	cmpltu	r8,r2,r17
1010af64:	40d1883a 	add	r8,r8,r3
1010af68:	40c0202c 	andhi	r3,r8,128
1010af6c:	1023883a 	mov	r17,r2
1010af70:	183f1a26 	beq	r3,zero,1010abdc <__alt_data_end+0xfffeabdc>
1010af74:	00bfe034 	movhi	r2,65408
1010af78:	10bfffc4 	addi	r2,r2,-1
1010af7c:	2021883a 	mov	r16,r4
1010af80:	4090703a 	and	r8,r8,r2
1010af84:	003eb306 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010af88:	4444b03a 	or	r2,r8,r17
1010af8c:	8000291e 	bne	r16,zero,1010b034 <__adddf3+0x65c>
1010af90:	10004b1e 	bne	r2,zero,1010b0c0 <__adddf3+0x6e8>
1010af94:	4990b03a 	or	r8,r9,r6
1010af98:	40008b26 	beq	r8,zero,1010b1c8 <__adddf3+0x7f0>
1010af9c:	4811883a 	mov	r8,r9
1010afa0:	3023883a 	mov	r17,r6
1010afa4:	3825883a 	mov	r18,r7
1010afa8:	003eaa06 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010afac:	1021883a 	mov	r16,r2
1010afb0:	0011883a 	mov	r8,zero
1010afb4:	0005883a 	mov	r2,zero
1010afb8:	003f0f06 	br	1010abf8 <__alt_data_end+0xfffeabf8>
1010afbc:	217ff804 	addi	r5,r4,-32
1010afc0:	00800804 	movi	r2,32
1010afc4:	494ad83a 	srl	r5,r9,r5
1010afc8:	20807d26 	beq	r4,r2,1010b1c0 <__adddf3+0x7e8>
1010afcc:	00801004 	movi	r2,64
1010afd0:	1109c83a 	sub	r4,r2,r4
1010afd4:	4912983a 	sll	r9,r9,r4
1010afd8:	498cb03a 	or	r6,r9,r6
1010afdc:	300cc03a 	cmpne	r6,r6,zero
1010afe0:	298ab03a 	or	r5,r5,r6
1010afe4:	0013883a 	mov	r9,zero
1010afe8:	003f1506 	br	1010ac40 <__alt_data_end+0xfffeac40>
1010afec:	0101ffc4 	movi	r4,2047
1010aff0:	113f9a1e 	bne	r2,r4,1010ae5c <__alt_data_end+0xfffeae5c>
1010aff4:	4811883a 	mov	r8,r9
1010aff8:	3023883a 	mov	r17,r6
1010affc:	1021883a 	mov	r16,r2
1010b000:	3825883a 	mov	r18,r7
1010b004:	003e9306 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010b008:	8000161e 	bne	r16,zero,1010b064 <__adddf3+0x68c>
1010b00c:	444ab03a 	or	r5,r8,r17
1010b010:	28005126 	beq	r5,zero,1010b158 <__adddf3+0x780>
1010b014:	0108303a 	nor	r4,zero,r4
1010b018:	20004d1e 	bne	r4,zero,1010b150 <__adddf3+0x778>
1010b01c:	89a3883a 	add	r17,r17,r6
1010b020:	4253883a 	add	r9,r8,r9
1010b024:	898d803a 	cmpltu	r6,r17,r6
1010b028:	3251883a 	add	r8,r6,r9
1010b02c:	1021883a 	mov	r16,r2
1010b030:	003f0806 	br	1010ac54 <__alt_data_end+0xfffeac54>
1010b034:	1000301e 	bne	r2,zero,1010b0f8 <__adddf3+0x720>
1010b038:	4984b03a 	or	r2,r9,r6
1010b03c:	10007126 	beq	r2,zero,1010b204 <__adddf3+0x82c>
1010b040:	4811883a 	mov	r8,r9
1010b044:	3023883a 	mov	r17,r6
1010b048:	3825883a 	mov	r18,r7
1010b04c:	0401ffc4 	movi	r16,2047
1010b050:	003e8006 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010b054:	4462b03a 	or	r17,r8,r17
1010b058:	8822c03a 	cmpne	r17,r17,zero
1010b05c:	0007883a 	mov	r3,zero
1010b060:	003f8b06 	br	1010ae90 <__alt_data_end+0xfffeae90>
1010b064:	0141ffc4 	movi	r5,2047
1010b068:	11403b26 	beq	r2,r5,1010b158 <__adddf3+0x780>
1010b06c:	0109c83a 	sub	r4,zero,r4
1010b070:	42002034 	orhi	r8,r8,128
1010b074:	01400e04 	movi	r5,56
1010b078:	29006716 	blt	r5,r4,1010b218 <__adddf3+0x840>
1010b07c:	014007c4 	movi	r5,31
1010b080:	29007016 	blt	r5,r4,1010b244 <__adddf3+0x86c>
1010b084:	01400804 	movi	r5,32
1010b088:	290bc83a 	sub	r5,r5,r4
1010b08c:	4154983a 	sll	r10,r8,r5
1010b090:	890ed83a 	srl	r7,r17,r4
1010b094:	894a983a 	sll	r5,r17,r5
1010b098:	4108d83a 	srl	r4,r8,r4
1010b09c:	51e2b03a 	or	r17,r10,r7
1010b0a0:	280ac03a 	cmpne	r5,r5,zero
1010b0a4:	8962b03a 	or	r17,r17,r5
1010b0a8:	89a3883a 	add	r17,r17,r6
1010b0ac:	2253883a 	add	r9,r4,r9
1010b0b0:	898d803a 	cmpltu	r6,r17,r6
1010b0b4:	3251883a 	add	r8,r6,r9
1010b0b8:	1021883a 	mov	r16,r2
1010b0bc:	003ee506 	br	1010ac54 <__alt_data_end+0xfffeac54>
1010b0c0:	4984b03a 	or	r2,r9,r6
1010b0c4:	103e6326 	beq	r2,zero,1010aa54 <__alt_data_end+0xfffeaa54>
1010b0c8:	8987c83a 	sub	r3,r17,r6
1010b0cc:	88c9803a 	cmpltu	r4,r17,r3
1010b0d0:	4245c83a 	sub	r2,r8,r9
1010b0d4:	1105c83a 	sub	r2,r2,r4
1010b0d8:	1100202c 	andhi	r4,r2,128
1010b0dc:	203ebb26 	beq	r4,zero,1010abcc <__alt_data_end+0xfffeabcc>
1010b0e0:	3463c83a 	sub	r17,r6,r17
1010b0e4:	4a07c83a 	sub	r3,r9,r8
1010b0e8:	344d803a 	cmpltu	r6,r6,r17
1010b0ec:	1991c83a 	sub	r8,r3,r6
1010b0f0:	3825883a 	mov	r18,r7
1010b0f4:	003e5706 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010b0f8:	4984b03a 	or	r2,r9,r6
1010b0fc:	10002e26 	beq	r2,zero,1010b1b8 <__adddf3+0x7e0>
1010b100:	4004d0fa 	srli	r2,r8,3
1010b104:	8822d0fa 	srli	r17,r17,3
1010b108:	4010977a 	slli	r8,r8,29
1010b10c:	10c0022c 	andhi	r3,r2,8
1010b110:	4462b03a 	or	r17,r8,r17
1010b114:	18000826 	beq	r3,zero,1010b138 <__adddf3+0x760>
1010b118:	4808d0fa 	srli	r4,r9,3
1010b11c:	20c0022c 	andhi	r3,r4,8
1010b120:	1800051e 	bne	r3,zero,1010b138 <__adddf3+0x760>
1010b124:	300cd0fa 	srli	r6,r6,3
1010b128:	4806977a 	slli	r3,r9,29
1010b12c:	2005883a 	mov	r2,r4
1010b130:	3825883a 	mov	r18,r7
1010b134:	19a2b03a 	or	r17,r3,r6
1010b138:	8810d77a 	srli	r8,r17,29
1010b13c:	100490fa 	slli	r2,r2,3
1010b140:	882290fa 	slli	r17,r17,3
1010b144:	0401ffc4 	movi	r16,2047
1010b148:	4090b03a 	or	r8,r8,r2
1010b14c:	003e4106 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010b150:	0141ffc4 	movi	r5,2047
1010b154:	117fc71e 	bne	r2,r5,1010b074 <__alt_data_end+0xfffeb074>
1010b158:	4811883a 	mov	r8,r9
1010b15c:	3023883a 	mov	r17,r6
1010b160:	1021883a 	mov	r16,r2
1010b164:	003e3b06 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010b168:	10002f26 	beq	r2,zero,1010b228 <__adddf3+0x850>
1010b16c:	4984b03a 	or	r2,r9,r6
1010b170:	10001126 	beq	r2,zero,1010b1b8 <__adddf3+0x7e0>
1010b174:	4004d0fa 	srli	r2,r8,3
1010b178:	8822d0fa 	srli	r17,r17,3
1010b17c:	4010977a 	slli	r8,r8,29
1010b180:	10c0022c 	andhi	r3,r2,8
1010b184:	4462b03a 	or	r17,r8,r17
1010b188:	183feb26 	beq	r3,zero,1010b138 <__alt_data_end+0xfffeb138>
1010b18c:	4808d0fa 	srli	r4,r9,3
1010b190:	20c0022c 	andhi	r3,r4,8
1010b194:	183fe81e 	bne	r3,zero,1010b138 <__alt_data_end+0xfffeb138>
1010b198:	300cd0fa 	srli	r6,r6,3
1010b19c:	4806977a 	slli	r3,r9,29
1010b1a0:	2005883a 	mov	r2,r4
1010b1a4:	19a2b03a 	or	r17,r3,r6
1010b1a8:	003fe306 	br	1010b138 <__alt_data_end+0xfffeb138>
1010b1ac:	0011883a 	mov	r8,zero
1010b1b0:	0005883a 	mov	r2,zero
1010b1b4:	003e3f06 	br	1010aab4 <__alt_data_end+0xfffeaab4>
1010b1b8:	0401ffc4 	movi	r16,2047
1010b1bc:	003e2506 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010b1c0:	0013883a 	mov	r9,zero
1010b1c4:	003f8406 	br	1010afd8 <__alt_data_end+0xfffeafd8>
1010b1c8:	0005883a 	mov	r2,zero
1010b1cc:	0007883a 	mov	r3,zero
1010b1d0:	003e8906 	br	1010abf8 <__alt_data_end+0xfffeabf8>
1010b1d4:	197ff804 	addi	r5,r3,-32
1010b1d8:	01000804 	movi	r4,32
1010b1dc:	414ad83a 	srl	r5,r8,r5
1010b1e0:	19002426 	beq	r3,r4,1010b274 <__adddf3+0x89c>
1010b1e4:	01001004 	movi	r4,64
1010b1e8:	20c7c83a 	sub	r3,r4,r3
1010b1ec:	40c6983a 	sll	r3,r8,r3
1010b1f0:	1c46b03a 	or	r3,r3,r17
1010b1f4:	1806c03a 	cmpne	r3,r3,zero
1010b1f8:	28e2b03a 	or	r17,r5,r3
1010b1fc:	0007883a 	mov	r3,zero
1010b200:	003f2306 	br	1010ae90 <__alt_data_end+0xfffeae90>
1010b204:	0007883a 	mov	r3,zero
1010b208:	5811883a 	mov	r8,r11
1010b20c:	00bfffc4 	movi	r2,-1
1010b210:	0401ffc4 	movi	r16,2047
1010b214:	003e7806 	br	1010abf8 <__alt_data_end+0xfffeabf8>
1010b218:	4462b03a 	or	r17,r8,r17
1010b21c:	8822c03a 	cmpne	r17,r17,zero
1010b220:	0009883a 	mov	r4,zero
1010b224:	003fa006 	br	1010b0a8 <__alt_data_end+0xfffeb0a8>
1010b228:	4811883a 	mov	r8,r9
1010b22c:	3023883a 	mov	r17,r6
1010b230:	0401ffc4 	movi	r16,2047
1010b234:	003e0706 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010b238:	4811883a 	mov	r8,r9
1010b23c:	3023883a 	mov	r17,r6
1010b240:	003e0406 	br	1010aa54 <__alt_data_end+0xfffeaa54>
1010b244:	21fff804 	addi	r7,r4,-32
1010b248:	01400804 	movi	r5,32
1010b24c:	41ced83a 	srl	r7,r8,r7
1010b250:	21400a26 	beq	r4,r5,1010b27c <__adddf3+0x8a4>
1010b254:	01401004 	movi	r5,64
1010b258:	2909c83a 	sub	r4,r5,r4
1010b25c:	4108983a 	sll	r4,r8,r4
1010b260:	2448b03a 	or	r4,r4,r17
1010b264:	2008c03a 	cmpne	r4,r4,zero
1010b268:	3922b03a 	or	r17,r7,r4
1010b26c:	0009883a 	mov	r4,zero
1010b270:	003f8d06 	br	1010b0a8 <__alt_data_end+0xfffeb0a8>
1010b274:	0007883a 	mov	r3,zero
1010b278:	003fdd06 	br	1010b1f0 <__alt_data_end+0xfffeb1f0>
1010b27c:	0009883a 	mov	r4,zero
1010b280:	003ff706 	br	1010b260 <__alt_data_end+0xfffeb260>

1010b284 <__divdf3>:
1010b284:	defff204 	addi	sp,sp,-56
1010b288:	dd400915 	stw	r21,36(sp)
1010b28c:	282ad53a 	srli	r21,r5,20
1010b290:	dd000815 	stw	r20,32(sp)
1010b294:	2828d7fa 	srli	r20,r5,31
1010b298:	dc000415 	stw	r16,16(sp)
1010b29c:	04000434 	movhi	r16,16
1010b2a0:	df000c15 	stw	fp,48(sp)
1010b2a4:	843fffc4 	addi	r16,r16,-1
1010b2a8:	dfc00d15 	stw	ra,52(sp)
1010b2ac:	ddc00b15 	stw	r23,44(sp)
1010b2b0:	dd800a15 	stw	r22,40(sp)
1010b2b4:	dcc00715 	stw	r19,28(sp)
1010b2b8:	dc800615 	stw	r18,24(sp)
1010b2bc:	dc400515 	stw	r17,20(sp)
1010b2c0:	ad41ffcc 	andi	r21,r21,2047
1010b2c4:	2c20703a 	and	r16,r5,r16
1010b2c8:	a7003fcc 	andi	fp,r20,255
1010b2cc:	a8006126 	beq	r21,zero,1010b454 <__divdf3+0x1d0>
1010b2d0:	0081ffc4 	movi	r2,2047
1010b2d4:	2025883a 	mov	r18,r4
1010b2d8:	a8803726 	beq	r21,r2,1010b3b8 <__divdf3+0x134>
1010b2dc:	80c00434 	orhi	r3,r16,16
1010b2e0:	180690fa 	slli	r3,r3,3
1010b2e4:	2020d77a 	srli	r16,r4,29
1010b2e8:	202490fa 	slli	r18,r4,3
1010b2ec:	ad7f0044 	addi	r21,r21,-1023
1010b2f0:	80e0b03a 	or	r16,r16,r3
1010b2f4:	0027883a 	mov	r19,zero
1010b2f8:	0013883a 	mov	r9,zero
1010b2fc:	3808d53a 	srli	r4,r7,20
1010b300:	382cd7fa 	srli	r22,r7,31
1010b304:	04400434 	movhi	r17,16
1010b308:	8c7fffc4 	addi	r17,r17,-1
1010b30c:	2101ffcc 	andi	r4,r4,2047
1010b310:	3011883a 	mov	r8,r6
1010b314:	3c62703a 	and	r17,r7,r17
1010b318:	b5c03fcc 	andi	r23,r22,255
1010b31c:	20006c26 	beq	r4,zero,1010b4d0 <__divdf3+0x24c>
1010b320:	0081ffc4 	movi	r2,2047
1010b324:	20806426 	beq	r4,r2,1010b4b8 <__divdf3+0x234>
1010b328:	88c00434 	orhi	r3,r17,16
1010b32c:	180690fa 	slli	r3,r3,3
1010b330:	3022d77a 	srli	r17,r6,29
1010b334:	301090fa 	slli	r8,r6,3
1010b338:	213f0044 	addi	r4,r4,-1023
1010b33c:	88e2b03a 	or	r17,r17,r3
1010b340:	000d883a 	mov	r6,zero
1010b344:	a584f03a 	xor	r2,r20,r22
1010b348:	34cab03a 	or	r5,r6,r19
1010b34c:	1007883a 	mov	r3,r2
1010b350:	14c03fcc 	andi	r19,r2,255
1010b354:	008003c4 	movi	r2,15
1010b358:	a92bc83a 	sub	r21,r21,r4
1010b35c:	11409036 	bltu	r2,r5,1010b5a0 <__divdf3+0x31c>
1010b360:	280a90ba 	slli	r5,r5,2
1010b364:	00840474 	movhi	r2,4113
1010b368:	10acde04 	addi	r2,r2,-19592
1010b36c:	288b883a 	add	r5,r5,r2
1010b370:	28800017 	ldw	r2,0(r5)
1010b374:	1000683a 	jmp	r2
1010b378:	1010b5a0 	cmpeqi	zero,r2,17110
1010b37c:	1010b3f0 	cmpltui	zero,r2,17103
1010b380:	1010b590 	cmplti	zero,r2,17110
1010b384:	1010b3e4 	muli	zero,r2,17103
1010b388:	1010b590 	cmplti	zero,r2,17110
1010b38c:	1010b564 	muli	zero,r2,17109
1010b390:	1010b590 	cmplti	zero,r2,17110
1010b394:	1010b3e4 	muli	zero,r2,17103
1010b398:	1010b3f0 	cmpltui	zero,r2,17103
1010b39c:	1010b3f0 	cmpltui	zero,r2,17103
1010b3a0:	1010b564 	muli	zero,r2,17109
1010b3a4:	1010b3e4 	muli	zero,r2,17103
1010b3a8:	1010b3d4 	ori	zero,r2,17103
1010b3ac:	1010b3d4 	ori	zero,r2,17103
1010b3b0:	1010b3d4 	ori	zero,r2,17103
1010b3b4:	1010b884 	addi	zero,r2,17122
1010b3b8:	2404b03a 	or	r2,r4,r16
1010b3bc:	1000661e 	bne	r2,zero,1010b558 <__divdf3+0x2d4>
1010b3c0:	04c00204 	movi	r19,8
1010b3c4:	0021883a 	mov	r16,zero
1010b3c8:	0025883a 	mov	r18,zero
1010b3cc:	02400084 	movi	r9,2
1010b3d0:	003fca06 	br	1010b2fc <__alt_data_end+0xfffeb2fc>
1010b3d4:	8023883a 	mov	r17,r16
1010b3d8:	9011883a 	mov	r8,r18
1010b3dc:	e02f883a 	mov	r23,fp
1010b3e0:	480d883a 	mov	r6,r9
1010b3e4:	00800084 	movi	r2,2
1010b3e8:	3081311e 	bne	r6,r2,1010b8b0 <__divdf3+0x62c>
1010b3ec:	b827883a 	mov	r19,r23
1010b3f0:	98c0004c 	andi	r3,r19,1
1010b3f4:	0081ffc4 	movi	r2,2047
1010b3f8:	000b883a 	mov	r5,zero
1010b3fc:	0025883a 	mov	r18,zero
1010b400:	1004953a 	slli	r2,r2,20
1010b404:	18c03fcc 	andi	r3,r3,255
1010b408:	04400434 	movhi	r17,16
1010b40c:	8c7fffc4 	addi	r17,r17,-1
1010b410:	180697fa 	slli	r3,r3,31
1010b414:	2c4a703a 	and	r5,r5,r17
1010b418:	288ab03a 	or	r5,r5,r2
1010b41c:	28c6b03a 	or	r3,r5,r3
1010b420:	9005883a 	mov	r2,r18
1010b424:	dfc00d17 	ldw	ra,52(sp)
1010b428:	df000c17 	ldw	fp,48(sp)
1010b42c:	ddc00b17 	ldw	r23,44(sp)
1010b430:	dd800a17 	ldw	r22,40(sp)
1010b434:	dd400917 	ldw	r21,36(sp)
1010b438:	dd000817 	ldw	r20,32(sp)
1010b43c:	dcc00717 	ldw	r19,28(sp)
1010b440:	dc800617 	ldw	r18,24(sp)
1010b444:	dc400517 	ldw	r17,20(sp)
1010b448:	dc000417 	ldw	r16,16(sp)
1010b44c:	dec00e04 	addi	sp,sp,56
1010b450:	f800283a 	ret
1010b454:	2404b03a 	or	r2,r4,r16
1010b458:	2027883a 	mov	r19,r4
1010b45c:	10003926 	beq	r2,zero,1010b544 <__divdf3+0x2c0>
1010b460:	80012e26 	beq	r16,zero,1010b91c <__divdf3+0x698>
1010b464:	8009883a 	mov	r4,r16
1010b468:	d9800315 	stw	r6,12(sp)
1010b46c:	d9c00215 	stw	r7,8(sp)
1010b470:	010cfdc0 	call	1010cfdc <__clzsi2>
1010b474:	d9800317 	ldw	r6,12(sp)
1010b478:	d9c00217 	ldw	r7,8(sp)
1010b47c:	10fffd44 	addi	r3,r2,-11
1010b480:	01000704 	movi	r4,28
1010b484:	20c12116 	blt	r4,r3,1010b90c <__divdf3+0x688>
1010b488:	01000744 	movi	r4,29
1010b48c:	147ffe04 	addi	r17,r2,-8
1010b490:	20c9c83a 	sub	r4,r4,r3
1010b494:	8460983a 	sll	r16,r16,r17
1010b498:	9908d83a 	srl	r4,r19,r4
1010b49c:	9c64983a 	sll	r18,r19,r17
1010b4a0:	2420b03a 	or	r16,r4,r16
1010b4a4:	057f0084 	movi	r21,-1022
1010b4a8:	a8ebc83a 	sub	r21,r21,r3
1010b4ac:	0027883a 	mov	r19,zero
1010b4b0:	0013883a 	mov	r9,zero
1010b4b4:	003f9106 	br	1010b2fc <__alt_data_end+0xfffeb2fc>
1010b4b8:	3444b03a 	or	r2,r6,r17
1010b4bc:	10001f1e 	bne	r2,zero,1010b53c <__divdf3+0x2b8>
1010b4c0:	0023883a 	mov	r17,zero
1010b4c4:	0011883a 	mov	r8,zero
1010b4c8:	01800084 	movi	r6,2
1010b4cc:	003f9d06 	br	1010b344 <__alt_data_end+0xfffeb344>
1010b4d0:	3444b03a 	or	r2,r6,r17
1010b4d4:	10001526 	beq	r2,zero,1010b52c <__divdf3+0x2a8>
1010b4d8:	88011b26 	beq	r17,zero,1010b948 <__divdf3+0x6c4>
1010b4dc:	8809883a 	mov	r4,r17
1010b4e0:	d9800315 	stw	r6,12(sp)
1010b4e4:	da400115 	stw	r9,4(sp)
1010b4e8:	010cfdc0 	call	1010cfdc <__clzsi2>
1010b4ec:	d9800317 	ldw	r6,12(sp)
1010b4f0:	da400117 	ldw	r9,4(sp)
1010b4f4:	10fffd44 	addi	r3,r2,-11
1010b4f8:	01000704 	movi	r4,28
1010b4fc:	20c10e16 	blt	r4,r3,1010b938 <__divdf3+0x6b4>
1010b500:	01000744 	movi	r4,29
1010b504:	123ffe04 	addi	r8,r2,-8
1010b508:	20c9c83a 	sub	r4,r4,r3
1010b50c:	8a22983a 	sll	r17,r17,r8
1010b510:	3108d83a 	srl	r4,r6,r4
1010b514:	3210983a 	sll	r8,r6,r8
1010b518:	2462b03a 	or	r17,r4,r17
1010b51c:	013f0084 	movi	r4,-1022
1010b520:	20c9c83a 	sub	r4,r4,r3
1010b524:	000d883a 	mov	r6,zero
1010b528:	003f8606 	br	1010b344 <__alt_data_end+0xfffeb344>
1010b52c:	0023883a 	mov	r17,zero
1010b530:	0011883a 	mov	r8,zero
1010b534:	01800044 	movi	r6,1
1010b538:	003f8206 	br	1010b344 <__alt_data_end+0xfffeb344>
1010b53c:	018000c4 	movi	r6,3
1010b540:	003f8006 	br	1010b344 <__alt_data_end+0xfffeb344>
1010b544:	04c00104 	movi	r19,4
1010b548:	0021883a 	mov	r16,zero
1010b54c:	0025883a 	mov	r18,zero
1010b550:	02400044 	movi	r9,1
1010b554:	003f6906 	br	1010b2fc <__alt_data_end+0xfffeb2fc>
1010b558:	04c00304 	movi	r19,12
1010b55c:	024000c4 	movi	r9,3
1010b560:	003f6606 	br	1010b2fc <__alt_data_end+0xfffeb2fc>
1010b564:	01400434 	movhi	r5,16
1010b568:	0007883a 	mov	r3,zero
1010b56c:	297fffc4 	addi	r5,r5,-1
1010b570:	04bfffc4 	movi	r18,-1
1010b574:	0081ffc4 	movi	r2,2047
1010b578:	003fa106 	br	1010b400 <__alt_data_end+0xfffeb400>
1010b57c:	00c00044 	movi	r3,1
1010b580:	1887c83a 	sub	r3,r3,r2
1010b584:	01000e04 	movi	r4,56
1010b588:	20c1210e 	bge	r4,r3,1010ba10 <__divdf3+0x78c>
1010b58c:	98c0004c 	andi	r3,r19,1
1010b590:	0005883a 	mov	r2,zero
1010b594:	000b883a 	mov	r5,zero
1010b598:	0025883a 	mov	r18,zero
1010b59c:	003f9806 	br	1010b400 <__alt_data_end+0xfffeb400>
1010b5a0:	8c00fd36 	bltu	r17,r16,1010b998 <__divdf3+0x714>
1010b5a4:	8440fb26 	beq	r16,r17,1010b994 <__divdf3+0x710>
1010b5a8:	8007883a 	mov	r3,r16
1010b5ac:	ad7fffc4 	addi	r21,r21,-1
1010b5b0:	0021883a 	mov	r16,zero
1010b5b4:	400ad63a 	srli	r5,r8,24
1010b5b8:	8822923a 	slli	r17,r17,8
1010b5bc:	1809883a 	mov	r4,r3
1010b5c0:	402c923a 	slli	r22,r8,8
1010b5c4:	8978b03a 	or	fp,r17,r5
1010b5c8:	e028d43a 	srli	r20,fp,16
1010b5cc:	d8c00015 	stw	r3,0(sp)
1010b5d0:	e5ffffcc 	andi	r23,fp,65535
1010b5d4:	a00b883a 	mov	r5,r20
1010b5d8:	010a91c0 	call	1010a91c <__udivsi3>
1010b5dc:	d8c00017 	ldw	r3,0(sp)
1010b5e0:	a00b883a 	mov	r5,r20
1010b5e4:	d8800315 	stw	r2,12(sp)
1010b5e8:	1809883a 	mov	r4,r3
1010b5ec:	010a9800 	call	1010a980 <__umodsi3>
1010b5f0:	d9800317 	ldw	r6,12(sp)
1010b5f4:	1006943a 	slli	r3,r2,16
1010b5f8:	9004d43a 	srli	r2,r18,16
1010b5fc:	b9a3383a 	mul	r17,r23,r6
1010b600:	10c4b03a 	or	r2,r2,r3
1010b604:	1440062e 	bgeu	r2,r17,1010b620 <__divdf3+0x39c>
1010b608:	1705883a 	add	r2,r2,fp
1010b60c:	30ffffc4 	addi	r3,r6,-1
1010b610:	1700ee36 	bltu	r2,fp,1010b9cc <__divdf3+0x748>
1010b614:	1440ed2e 	bgeu	r2,r17,1010b9cc <__divdf3+0x748>
1010b618:	31bfff84 	addi	r6,r6,-2
1010b61c:	1705883a 	add	r2,r2,fp
1010b620:	1463c83a 	sub	r17,r2,r17
1010b624:	a00b883a 	mov	r5,r20
1010b628:	8809883a 	mov	r4,r17
1010b62c:	d9800315 	stw	r6,12(sp)
1010b630:	010a91c0 	call	1010a91c <__udivsi3>
1010b634:	a00b883a 	mov	r5,r20
1010b638:	8809883a 	mov	r4,r17
1010b63c:	d8800215 	stw	r2,8(sp)
1010b640:	010a9800 	call	1010a980 <__umodsi3>
1010b644:	d9c00217 	ldw	r7,8(sp)
1010b648:	1004943a 	slli	r2,r2,16
1010b64c:	94bfffcc 	andi	r18,r18,65535
1010b650:	b9d1383a 	mul	r8,r23,r7
1010b654:	90a4b03a 	or	r18,r18,r2
1010b658:	d9800317 	ldw	r6,12(sp)
1010b65c:	9200062e 	bgeu	r18,r8,1010b678 <__divdf3+0x3f4>
1010b660:	9725883a 	add	r18,r18,fp
1010b664:	38bfffc4 	addi	r2,r7,-1
1010b668:	9700d636 	bltu	r18,fp,1010b9c4 <__divdf3+0x740>
1010b66c:	9200d52e 	bgeu	r18,r8,1010b9c4 <__divdf3+0x740>
1010b670:	39ffff84 	addi	r7,r7,-2
1010b674:	9725883a 	add	r18,r18,fp
1010b678:	3004943a 	slli	r2,r6,16
1010b67c:	b012d43a 	srli	r9,r22,16
1010b680:	b1bfffcc 	andi	r6,r22,65535
1010b684:	11e2b03a 	or	r17,r2,r7
1010b688:	8806d43a 	srli	r3,r17,16
1010b68c:	893fffcc 	andi	r4,r17,65535
1010b690:	218b383a 	mul	r5,r4,r6
1010b694:	30c5383a 	mul	r2,r6,r3
1010b698:	2249383a 	mul	r4,r4,r9
1010b69c:	280ed43a 	srli	r7,r5,16
1010b6a0:	9225c83a 	sub	r18,r18,r8
1010b6a4:	2089883a 	add	r4,r4,r2
1010b6a8:	3909883a 	add	r4,r7,r4
1010b6ac:	1a47383a 	mul	r3,r3,r9
1010b6b0:	2080022e 	bgeu	r4,r2,1010b6bc <__divdf3+0x438>
1010b6b4:	00800074 	movhi	r2,1
1010b6b8:	1887883a 	add	r3,r3,r2
1010b6bc:	2004d43a 	srli	r2,r4,16
1010b6c0:	2008943a 	slli	r4,r4,16
1010b6c4:	297fffcc 	andi	r5,r5,65535
1010b6c8:	10c7883a 	add	r3,r2,r3
1010b6cc:	2149883a 	add	r4,r4,r5
1010b6d0:	90c0a536 	bltu	r18,r3,1010b968 <__divdf3+0x6e4>
1010b6d4:	90c0bf26 	beq	r18,r3,1010b9d4 <__divdf3+0x750>
1010b6d8:	90c7c83a 	sub	r3,r18,r3
1010b6dc:	810fc83a 	sub	r7,r16,r4
1010b6e0:	81e5803a 	cmpltu	r18,r16,r7
1010b6e4:	1ca5c83a 	sub	r18,r3,r18
1010b6e8:	e480c126 	beq	fp,r18,1010b9f0 <__divdf3+0x76c>
1010b6ec:	a00b883a 	mov	r5,r20
1010b6f0:	9009883a 	mov	r4,r18
1010b6f4:	d9800315 	stw	r6,12(sp)
1010b6f8:	d9c00215 	stw	r7,8(sp)
1010b6fc:	da400115 	stw	r9,4(sp)
1010b700:	010a91c0 	call	1010a91c <__udivsi3>
1010b704:	a00b883a 	mov	r5,r20
1010b708:	9009883a 	mov	r4,r18
1010b70c:	d8800015 	stw	r2,0(sp)
1010b710:	010a9800 	call	1010a980 <__umodsi3>
1010b714:	d9c00217 	ldw	r7,8(sp)
1010b718:	da000017 	ldw	r8,0(sp)
1010b71c:	1006943a 	slli	r3,r2,16
1010b720:	3804d43a 	srli	r2,r7,16
1010b724:	ba21383a 	mul	r16,r23,r8
1010b728:	d9800317 	ldw	r6,12(sp)
1010b72c:	10c4b03a 	or	r2,r2,r3
1010b730:	da400117 	ldw	r9,4(sp)
1010b734:	1400062e 	bgeu	r2,r16,1010b750 <__divdf3+0x4cc>
1010b738:	1705883a 	add	r2,r2,fp
1010b73c:	40ffffc4 	addi	r3,r8,-1
1010b740:	1700ad36 	bltu	r2,fp,1010b9f8 <__divdf3+0x774>
1010b744:	1400ac2e 	bgeu	r2,r16,1010b9f8 <__divdf3+0x774>
1010b748:	423fff84 	addi	r8,r8,-2
1010b74c:	1705883a 	add	r2,r2,fp
1010b750:	1421c83a 	sub	r16,r2,r16
1010b754:	a00b883a 	mov	r5,r20
1010b758:	8009883a 	mov	r4,r16
1010b75c:	d9800315 	stw	r6,12(sp)
1010b760:	d9c00215 	stw	r7,8(sp)
1010b764:	da000015 	stw	r8,0(sp)
1010b768:	da400115 	stw	r9,4(sp)
1010b76c:	010a91c0 	call	1010a91c <__udivsi3>
1010b770:	8009883a 	mov	r4,r16
1010b774:	a00b883a 	mov	r5,r20
1010b778:	1025883a 	mov	r18,r2
1010b77c:	010a9800 	call	1010a980 <__umodsi3>
1010b780:	d9c00217 	ldw	r7,8(sp)
1010b784:	1004943a 	slli	r2,r2,16
1010b788:	bcaf383a 	mul	r23,r23,r18
1010b78c:	393fffcc 	andi	r4,r7,65535
1010b790:	2088b03a 	or	r4,r4,r2
1010b794:	d9800317 	ldw	r6,12(sp)
1010b798:	da000017 	ldw	r8,0(sp)
1010b79c:	da400117 	ldw	r9,4(sp)
1010b7a0:	25c0062e 	bgeu	r4,r23,1010b7bc <__divdf3+0x538>
1010b7a4:	2709883a 	add	r4,r4,fp
1010b7a8:	90bfffc4 	addi	r2,r18,-1
1010b7ac:	27009436 	bltu	r4,fp,1010ba00 <__divdf3+0x77c>
1010b7b0:	25c0932e 	bgeu	r4,r23,1010ba00 <__divdf3+0x77c>
1010b7b4:	94bfff84 	addi	r18,r18,-2
1010b7b8:	2709883a 	add	r4,r4,fp
1010b7bc:	4004943a 	slli	r2,r8,16
1010b7c0:	25efc83a 	sub	r23,r4,r23
1010b7c4:	1490b03a 	or	r8,r2,r18
1010b7c8:	4008d43a 	srli	r4,r8,16
1010b7cc:	40ffffcc 	andi	r3,r8,65535
1010b7d0:	30c5383a 	mul	r2,r6,r3
1010b7d4:	1a47383a 	mul	r3,r3,r9
1010b7d8:	310d383a 	mul	r6,r6,r4
1010b7dc:	100ad43a 	srli	r5,r2,16
1010b7e0:	4913383a 	mul	r9,r9,r4
1010b7e4:	1987883a 	add	r3,r3,r6
1010b7e8:	28c7883a 	add	r3,r5,r3
1010b7ec:	1980022e 	bgeu	r3,r6,1010b7f8 <__divdf3+0x574>
1010b7f0:	01000074 	movhi	r4,1
1010b7f4:	4913883a 	add	r9,r9,r4
1010b7f8:	1808d43a 	srli	r4,r3,16
1010b7fc:	1806943a 	slli	r3,r3,16
1010b800:	10bfffcc 	andi	r2,r2,65535
1010b804:	2253883a 	add	r9,r4,r9
1010b808:	1887883a 	add	r3,r3,r2
1010b80c:	ba403836 	bltu	r23,r9,1010b8f0 <__divdf3+0x66c>
1010b810:	ba403626 	beq	r23,r9,1010b8ec <__divdf3+0x668>
1010b814:	42000054 	ori	r8,r8,1
1010b818:	a880ffc4 	addi	r2,r21,1023
1010b81c:	00bf570e 	bge	zero,r2,1010b57c <__alt_data_end+0xfffeb57c>
1010b820:	40c001cc 	andi	r3,r8,7
1010b824:	18000726 	beq	r3,zero,1010b844 <__divdf3+0x5c0>
1010b828:	40c003cc 	andi	r3,r8,15
1010b82c:	01000104 	movi	r4,4
1010b830:	19000426 	beq	r3,r4,1010b844 <__divdf3+0x5c0>
1010b834:	4107883a 	add	r3,r8,r4
1010b838:	1a11803a 	cmpltu	r8,r3,r8
1010b83c:	8a23883a 	add	r17,r17,r8
1010b840:	1811883a 	mov	r8,r3
1010b844:	88c0402c 	andhi	r3,r17,256
1010b848:	18000426 	beq	r3,zero,1010b85c <__divdf3+0x5d8>
1010b84c:	00ffc034 	movhi	r3,65280
1010b850:	18ffffc4 	addi	r3,r3,-1
1010b854:	a8810004 	addi	r2,r21,1024
1010b858:	88e2703a 	and	r17,r17,r3
1010b85c:	00c1ff84 	movi	r3,2046
1010b860:	18bee316 	blt	r3,r2,1010b3f0 <__alt_data_end+0xfffeb3f0>
1010b864:	8824977a 	slli	r18,r17,29
1010b868:	4010d0fa 	srli	r8,r8,3
1010b86c:	8822927a 	slli	r17,r17,9
1010b870:	1081ffcc 	andi	r2,r2,2047
1010b874:	9224b03a 	or	r18,r18,r8
1010b878:	880ad33a 	srli	r5,r17,12
1010b87c:	98c0004c 	andi	r3,r19,1
1010b880:	003edf06 	br	1010b400 <__alt_data_end+0xfffeb400>
1010b884:	8080022c 	andhi	r2,r16,8
1010b888:	10001226 	beq	r2,zero,1010b8d4 <__divdf3+0x650>
1010b88c:	8880022c 	andhi	r2,r17,8
1010b890:	1000101e 	bne	r2,zero,1010b8d4 <__divdf3+0x650>
1010b894:	00800434 	movhi	r2,16
1010b898:	89400234 	orhi	r5,r17,8
1010b89c:	10bfffc4 	addi	r2,r2,-1
1010b8a0:	b007883a 	mov	r3,r22
1010b8a4:	288a703a 	and	r5,r5,r2
1010b8a8:	4025883a 	mov	r18,r8
1010b8ac:	003f3106 	br	1010b574 <__alt_data_end+0xfffeb574>
1010b8b0:	008000c4 	movi	r2,3
1010b8b4:	3080a626 	beq	r6,r2,1010bb50 <__divdf3+0x8cc>
1010b8b8:	00800044 	movi	r2,1
1010b8bc:	3080521e 	bne	r6,r2,1010ba08 <__divdf3+0x784>
1010b8c0:	b807883a 	mov	r3,r23
1010b8c4:	0005883a 	mov	r2,zero
1010b8c8:	000b883a 	mov	r5,zero
1010b8cc:	0025883a 	mov	r18,zero
1010b8d0:	003ecb06 	br	1010b400 <__alt_data_end+0xfffeb400>
1010b8d4:	00800434 	movhi	r2,16
1010b8d8:	81400234 	orhi	r5,r16,8
1010b8dc:	10bfffc4 	addi	r2,r2,-1
1010b8e0:	a007883a 	mov	r3,r20
1010b8e4:	288a703a 	and	r5,r5,r2
1010b8e8:	003f2206 	br	1010b574 <__alt_data_end+0xfffeb574>
1010b8ec:	183fca26 	beq	r3,zero,1010b818 <__alt_data_end+0xfffeb818>
1010b8f0:	e5ef883a 	add	r23,fp,r23
1010b8f4:	40bfffc4 	addi	r2,r8,-1
1010b8f8:	bf00392e 	bgeu	r23,fp,1010b9e0 <__divdf3+0x75c>
1010b8fc:	1011883a 	mov	r8,r2
1010b900:	ba7fc41e 	bne	r23,r9,1010b814 <__alt_data_end+0xfffeb814>
1010b904:	b0ffc31e 	bne	r22,r3,1010b814 <__alt_data_end+0xfffeb814>
1010b908:	003fc306 	br	1010b818 <__alt_data_end+0xfffeb818>
1010b90c:	10bff604 	addi	r2,r2,-40
1010b910:	98a0983a 	sll	r16,r19,r2
1010b914:	0025883a 	mov	r18,zero
1010b918:	003ee206 	br	1010b4a4 <__alt_data_end+0xfffeb4a4>
1010b91c:	d9800315 	stw	r6,12(sp)
1010b920:	d9c00215 	stw	r7,8(sp)
1010b924:	010cfdc0 	call	1010cfdc <__clzsi2>
1010b928:	10800804 	addi	r2,r2,32
1010b92c:	d9c00217 	ldw	r7,8(sp)
1010b930:	d9800317 	ldw	r6,12(sp)
1010b934:	003ed106 	br	1010b47c <__alt_data_end+0xfffeb47c>
1010b938:	10bff604 	addi	r2,r2,-40
1010b93c:	30a2983a 	sll	r17,r6,r2
1010b940:	0011883a 	mov	r8,zero
1010b944:	003ef506 	br	1010b51c <__alt_data_end+0xfffeb51c>
1010b948:	3009883a 	mov	r4,r6
1010b94c:	d9800315 	stw	r6,12(sp)
1010b950:	da400115 	stw	r9,4(sp)
1010b954:	010cfdc0 	call	1010cfdc <__clzsi2>
1010b958:	10800804 	addi	r2,r2,32
1010b95c:	da400117 	ldw	r9,4(sp)
1010b960:	d9800317 	ldw	r6,12(sp)
1010b964:	003ee306 	br	1010b4f4 <__alt_data_end+0xfffeb4f4>
1010b968:	85a1883a 	add	r16,r16,r22
1010b96c:	8585803a 	cmpltu	r2,r16,r22
1010b970:	1705883a 	add	r2,r2,fp
1010b974:	14a5883a 	add	r18,r2,r18
1010b978:	88bfffc4 	addi	r2,r17,-1
1010b97c:	e4800c2e 	bgeu	fp,r18,1010b9b0 <__divdf3+0x72c>
1010b980:	90c03e36 	bltu	r18,r3,1010ba7c <__divdf3+0x7f8>
1010b984:	1c806926 	beq	r3,r18,1010bb2c <__divdf3+0x8a8>
1010b988:	90c7c83a 	sub	r3,r18,r3
1010b98c:	1023883a 	mov	r17,r2
1010b990:	003f5206 	br	1010b6dc <__alt_data_end+0xfffeb6dc>
1010b994:	923f0436 	bltu	r18,r8,1010b5a8 <__alt_data_end+0xfffeb5a8>
1010b998:	800897fa 	slli	r4,r16,31
1010b99c:	9004d07a 	srli	r2,r18,1
1010b9a0:	8006d07a 	srli	r3,r16,1
1010b9a4:	902097fa 	slli	r16,r18,31
1010b9a8:	20a4b03a 	or	r18,r4,r2
1010b9ac:	003f0106 	br	1010b5b4 <__alt_data_end+0xfffeb5b4>
1010b9b0:	e4bff51e 	bne	fp,r18,1010b988 <__alt_data_end+0xfffeb988>
1010b9b4:	85bff22e 	bgeu	r16,r22,1010b980 <__alt_data_end+0xfffeb980>
1010b9b8:	e0c7c83a 	sub	r3,fp,r3
1010b9bc:	1023883a 	mov	r17,r2
1010b9c0:	003f4606 	br	1010b6dc <__alt_data_end+0xfffeb6dc>
1010b9c4:	100f883a 	mov	r7,r2
1010b9c8:	003f2b06 	br	1010b678 <__alt_data_end+0xfffeb678>
1010b9cc:	180d883a 	mov	r6,r3
1010b9d0:	003f1306 	br	1010b620 <__alt_data_end+0xfffeb620>
1010b9d4:	813fe436 	bltu	r16,r4,1010b968 <__alt_data_end+0xfffeb968>
1010b9d8:	0007883a 	mov	r3,zero
1010b9dc:	003f3f06 	br	1010b6dc <__alt_data_end+0xfffeb6dc>
1010b9e0:	ba402c36 	bltu	r23,r9,1010ba94 <__divdf3+0x810>
1010b9e4:	4dc05426 	beq	r9,r23,1010bb38 <__divdf3+0x8b4>
1010b9e8:	1011883a 	mov	r8,r2
1010b9ec:	003f8906 	br	1010b814 <__alt_data_end+0xfffeb814>
1010b9f0:	023fffc4 	movi	r8,-1
1010b9f4:	003f8806 	br	1010b818 <__alt_data_end+0xfffeb818>
1010b9f8:	1811883a 	mov	r8,r3
1010b9fc:	003f5406 	br	1010b750 <__alt_data_end+0xfffeb750>
1010ba00:	1025883a 	mov	r18,r2
1010ba04:	003f6d06 	br	1010b7bc <__alt_data_end+0xfffeb7bc>
1010ba08:	b827883a 	mov	r19,r23
1010ba0c:	003f8206 	br	1010b818 <__alt_data_end+0xfffeb818>
1010ba10:	010007c4 	movi	r4,31
1010ba14:	20c02616 	blt	r4,r3,1010bab0 <__divdf3+0x82c>
1010ba18:	00800804 	movi	r2,32
1010ba1c:	10c5c83a 	sub	r2,r2,r3
1010ba20:	888a983a 	sll	r5,r17,r2
1010ba24:	40c8d83a 	srl	r4,r8,r3
1010ba28:	4084983a 	sll	r2,r8,r2
1010ba2c:	88e2d83a 	srl	r17,r17,r3
1010ba30:	2906b03a 	or	r3,r5,r4
1010ba34:	1004c03a 	cmpne	r2,r2,zero
1010ba38:	1886b03a 	or	r3,r3,r2
1010ba3c:	188001cc 	andi	r2,r3,7
1010ba40:	10000726 	beq	r2,zero,1010ba60 <__divdf3+0x7dc>
1010ba44:	188003cc 	andi	r2,r3,15
1010ba48:	01000104 	movi	r4,4
1010ba4c:	11000426 	beq	r2,r4,1010ba60 <__divdf3+0x7dc>
1010ba50:	1805883a 	mov	r2,r3
1010ba54:	10c00104 	addi	r3,r2,4
1010ba58:	1885803a 	cmpltu	r2,r3,r2
1010ba5c:	88a3883a 	add	r17,r17,r2
1010ba60:	8880202c 	andhi	r2,r17,128
1010ba64:	10002726 	beq	r2,zero,1010bb04 <__divdf3+0x880>
1010ba68:	98c0004c 	andi	r3,r19,1
1010ba6c:	00800044 	movi	r2,1
1010ba70:	000b883a 	mov	r5,zero
1010ba74:	0025883a 	mov	r18,zero
1010ba78:	003e6106 	br	1010b400 <__alt_data_end+0xfffeb400>
1010ba7c:	85a1883a 	add	r16,r16,r22
1010ba80:	8585803a 	cmpltu	r2,r16,r22
1010ba84:	1705883a 	add	r2,r2,fp
1010ba88:	14a5883a 	add	r18,r2,r18
1010ba8c:	8c7fff84 	addi	r17,r17,-2
1010ba90:	003f1106 	br	1010b6d8 <__alt_data_end+0xfffeb6d8>
1010ba94:	b589883a 	add	r4,r22,r22
1010ba98:	25ad803a 	cmpltu	r22,r4,r22
1010ba9c:	b739883a 	add	fp,r22,fp
1010baa0:	40bfff84 	addi	r2,r8,-2
1010baa4:	bf2f883a 	add	r23,r23,fp
1010baa8:	202d883a 	mov	r22,r4
1010baac:	003f9306 	br	1010b8fc <__alt_data_end+0xfffeb8fc>
1010bab0:	013ff844 	movi	r4,-31
1010bab4:	2085c83a 	sub	r2,r4,r2
1010bab8:	8888d83a 	srl	r4,r17,r2
1010babc:	00800804 	movi	r2,32
1010bac0:	18802126 	beq	r3,r2,1010bb48 <__divdf3+0x8c4>
1010bac4:	00801004 	movi	r2,64
1010bac8:	10c5c83a 	sub	r2,r2,r3
1010bacc:	8884983a 	sll	r2,r17,r2
1010bad0:	1204b03a 	or	r2,r2,r8
1010bad4:	1004c03a 	cmpne	r2,r2,zero
1010bad8:	2084b03a 	or	r2,r4,r2
1010badc:	144001cc 	andi	r17,r2,7
1010bae0:	88000d1e 	bne	r17,zero,1010bb18 <__divdf3+0x894>
1010bae4:	000b883a 	mov	r5,zero
1010bae8:	1024d0fa 	srli	r18,r2,3
1010baec:	98c0004c 	andi	r3,r19,1
1010baf0:	0005883a 	mov	r2,zero
1010baf4:	9464b03a 	or	r18,r18,r17
1010baf8:	003e4106 	br	1010b400 <__alt_data_end+0xfffeb400>
1010bafc:	1007883a 	mov	r3,r2
1010bb00:	0023883a 	mov	r17,zero
1010bb04:	880a927a 	slli	r5,r17,9
1010bb08:	1805883a 	mov	r2,r3
1010bb0c:	8822977a 	slli	r17,r17,29
1010bb10:	280ad33a 	srli	r5,r5,12
1010bb14:	003ff406 	br	1010bae8 <__alt_data_end+0xfffebae8>
1010bb18:	10c003cc 	andi	r3,r2,15
1010bb1c:	01000104 	movi	r4,4
1010bb20:	193ff626 	beq	r3,r4,1010bafc <__alt_data_end+0xfffebafc>
1010bb24:	0023883a 	mov	r17,zero
1010bb28:	003fca06 	br	1010ba54 <__alt_data_end+0xfffeba54>
1010bb2c:	813fd336 	bltu	r16,r4,1010ba7c <__alt_data_end+0xfffeba7c>
1010bb30:	1023883a 	mov	r17,r2
1010bb34:	003fa806 	br	1010b9d8 <__alt_data_end+0xfffeb9d8>
1010bb38:	b0ffd636 	bltu	r22,r3,1010ba94 <__alt_data_end+0xfffeba94>
1010bb3c:	1011883a 	mov	r8,r2
1010bb40:	b0ff341e 	bne	r22,r3,1010b814 <__alt_data_end+0xfffeb814>
1010bb44:	003f3406 	br	1010b818 <__alt_data_end+0xfffeb818>
1010bb48:	0005883a 	mov	r2,zero
1010bb4c:	003fe006 	br	1010bad0 <__alt_data_end+0xfffebad0>
1010bb50:	00800434 	movhi	r2,16
1010bb54:	89400234 	orhi	r5,r17,8
1010bb58:	10bfffc4 	addi	r2,r2,-1
1010bb5c:	b807883a 	mov	r3,r23
1010bb60:	288a703a 	and	r5,r5,r2
1010bb64:	4025883a 	mov	r18,r8
1010bb68:	003e8206 	br	1010b574 <__alt_data_end+0xfffeb574>

1010bb6c <__eqdf2>:
1010bb6c:	2804d53a 	srli	r2,r5,20
1010bb70:	3806d53a 	srli	r3,r7,20
1010bb74:	02000434 	movhi	r8,16
1010bb78:	423fffc4 	addi	r8,r8,-1
1010bb7c:	1081ffcc 	andi	r2,r2,2047
1010bb80:	0281ffc4 	movi	r10,2047
1010bb84:	2a12703a 	and	r9,r5,r8
1010bb88:	18c1ffcc 	andi	r3,r3,2047
1010bb8c:	3a10703a 	and	r8,r7,r8
1010bb90:	280ad7fa 	srli	r5,r5,31
1010bb94:	380ed7fa 	srli	r7,r7,31
1010bb98:	12801026 	beq	r2,r10,1010bbdc <__eqdf2+0x70>
1010bb9c:	0281ffc4 	movi	r10,2047
1010bba0:	1a800a26 	beq	r3,r10,1010bbcc <__eqdf2+0x60>
1010bba4:	10c00226 	beq	r2,r3,1010bbb0 <__eqdf2+0x44>
1010bba8:	00800044 	movi	r2,1
1010bbac:	f800283a 	ret
1010bbb0:	4a3ffd1e 	bne	r9,r8,1010bba8 <__alt_data_end+0xfffebba8>
1010bbb4:	21bffc1e 	bne	r4,r6,1010bba8 <__alt_data_end+0xfffebba8>
1010bbb8:	29c00c26 	beq	r5,r7,1010bbec <__eqdf2+0x80>
1010bbbc:	103ffa1e 	bne	r2,zero,1010bba8 <__alt_data_end+0xfffebba8>
1010bbc0:	2244b03a 	or	r2,r4,r9
1010bbc4:	1004c03a 	cmpne	r2,r2,zero
1010bbc8:	f800283a 	ret
1010bbcc:	3214b03a 	or	r10,r6,r8
1010bbd0:	503ff426 	beq	r10,zero,1010bba4 <__alt_data_end+0xfffebba4>
1010bbd4:	00800044 	movi	r2,1
1010bbd8:	f800283a 	ret
1010bbdc:	2254b03a 	or	r10,r4,r9
1010bbe0:	503fee26 	beq	r10,zero,1010bb9c <__alt_data_end+0xfffebb9c>
1010bbe4:	00800044 	movi	r2,1
1010bbe8:	f800283a 	ret
1010bbec:	0005883a 	mov	r2,zero
1010bbf0:	f800283a 	ret

1010bbf4 <__gedf2>:
1010bbf4:	2804d53a 	srli	r2,r5,20
1010bbf8:	3806d53a 	srli	r3,r7,20
1010bbfc:	02000434 	movhi	r8,16
1010bc00:	423fffc4 	addi	r8,r8,-1
1010bc04:	1081ffcc 	andi	r2,r2,2047
1010bc08:	0241ffc4 	movi	r9,2047
1010bc0c:	2a14703a 	and	r10,r5,r8
1010bc10:	18c1ffcc 	andi	r3,r3,2047
1010bc14:	3a10703a 	and	r8,r7,r8
1010bc18:	280ad7fa 	srli	r5,r5,31
1010bc1c:	380ed7fa 	srli	r7,r7,31
1010bc20:	12401d26 	beq	r2,r9,1010bc98 <__gedf2+0xa4>
1010bc24:	0241ffc4 	movi	r9,2047
1010bc28:	1a401226 	beq	r3,r9,1010bc74 <__gedf2+0x80>
1010bc2c:	1000081e 	bne	r2,zero,1010bc50 <__gedf2+0x5c>
1010bc30:	2296b03a 	or	r11,r4,r10
1010bc34:	5813003a 	cmpeq	r9,r11,zero
1010bc38:	1800091e 	bne	r3,zero,1010bc60 <__gedf2+0x6c>
1010bc3c:	3218b03a 	or	r12,r6,r8
1010bc40:	6000071e 	bne	r12,zero,1010bc60 <__gedf2+0x6c>
1010bc44:	0005883a 	mov	r2,zero
1010bc48:	5800101e 	bne	r11,zero,1010bc8c <__gedf2+0x98>
1010bc4c:	f800283a 	ret
1010bc50:	18000c1e 	bne	r3,zero,1010bc84 <__gedf2+0x90>
1010bc54:	3212b03a 	or	r9,r6,r8
1010bc58:	48000c26 	beq	r9,zero,1010bc8c <__gedf2+0x98>
1010bc5c:	0013883a 	mov	r9,zero
1010bc60:	39c03fcc 	andi	r7,r7,255
1010bc64:	48000826 	beq	r9,zero,1010bc88 <__gedf2+0x94>
1010bc68:	38000926 	beq	r7,zero,1010bc90 <__gedf2+0x9c>
1010bc6c:	00800044 	movi	r2,1
1010bc70:	f800283a 	ret
1010bc74:	3212b03a 	or	r9,r6,r8
1010bc78:	483fec26 	beq	r9,zero,1010bc2c <__alt_data_end+0xfffebc2c>
1010bc7c:	00bfff84 	movi	r2,-2
1010bc80:	f800283a 	ret
1010bc84:	39c03fcc 	andi	r7,r7,255
1010bc88:	29c00626 	beq	r5,r7,1010bca4 <__gedf2+0xb0>
1010bc8c:	283ff726 	beq	r5,zero,1010bc6c <__alt_data_end+0xfffebc6c>
1010bc90:	00bfffc4 	movi	r2,-1
1010bc94:	f800283a 	ret
1010bc98:	2292b03a 	or	r9,r4,r10
1010bc9c:	483fe126 	beq	r9,zero,1010bc24 <__alt_data_end+0xfffebc24>
1010bca0:	003ff606 	br	1010bc7c <__alt_data_end+0xfffebc7c>
1010bca4:	18bff916 	blt	r3,r2,1010bc8c <__alt_data_end+0xfffebc8c>
1010bca8:	10c00316 	blt	r2,r3,1010bcb8 <__gedf2+0xc4>
1010bcac:	42bff736 	bltu	r8,r10,1010bc8c <__alt_data_end+0xfffebc8c>
1010bcb0:	52000326 	beq	r10,r8,1010bcc0 <__gedf2+0xcc>
1010bcb4:	5200042e 	bgeu	r10,r8,1010bcc8 <__gedf2+0xd4>
1010bcb8:	283fec1e 	bne	r5,zero,1010bc6c <__alt_data_end+0xfffebc6c>
1010bcbc:	003ff406 	br	1010bc90 <__alt_data_end+0xfffebc90>
1010bcc0:	313ff236 	bltu	r6,r4,1010bc8c <__alt_data_end+0xfffebc8c>
1010bcc4:	21bffc36 	bltu	r4,r6,1010bcb8 <__alt_data_end+0xfffebcb8>
1010bcc8:	0005883a 	mov	r2,zero
1010bccc:	f800283a 	ret

1010bcd0 <__ledf2>:
1010bcd0:	2804d53a 	srli	r2,r5,20
1010bcd4:	3810d53a 	srli	r8,r7,20
1010bcd8:	00c00434 	movhi	r3,16
1010bcdc:	18ffffc4 	addi	r3,r3,-1
1010bce0:	1081ffcc 	andi	r2,r2,2047
1010bce4:	0241ffc4 	movi	r9,2047
1010bce8:	28d4703a 	and	r10,r5,r3
1010bcec:	4201ffcc 	andi	r8,r8,2047
1010bcf0:	38c6703a 	and	r3,r7,r3
1010bcf4:	280ad7fa 	srli	r5,r5,31
1010bcf8:	380ed7fa 	srli	r7,r7,31
1010bcfc:	12401f26 	beq	r2,r9,1010bd7c <__ledf2+0xac>
1010bd00:	0241ffc4 	movi	r9,2047
1010bd04:	42401426 	beq	r8,r9,1010bd58 <__ledf2+0x88>
1010bd08:	1000091e 	bne	r2,zero,1010bd30 <__ledf2+0x60>
1010bd0c:	2296b03a 	or	r11,r4,r10
1010bd10:	5813003a 	cmpeq	r9,r11,zero
1010bd14:	29403fcc 	andi	r5,r5,255
1010bd18:	40000a1e 	bne	r8,zero,1010bd44 <__ledf2+0x74>
1010bd1c:	30d8b03a 	or	r12,r6,r3
1010bd20:	6000081e 	bne	r12,zero,1010bd44 <__ledf2+0x74>
1010bd24:	0005883a 	mov	r2,zero
1010bd28:	5800111e 	bne	r11,zero,1010bd70 <__ledf2+0xa0>
1010bd2c:	f800283a 	ret
1010bd30:	29403fcc 	andi	r5,r5,255
1010bd34:	40000c1e 	bne	r8,zero,1010bd68 <__ledf2+0x98>
1010bd38:	30d2b03a 	or	r9,r6,r3
1010bd3c:	48000c26 	beq	r9,zero,1010bd70 <__ledf2+0xa0>
1010bd40:	0013883a 	mov	r9,zero
1010bd44:	39c03fcc 	andi	r7,r7,255
1010bd48:	48000826 	beq	r9,zero,1010bd6c <__ledf2+0x9c>
1010bd4c:	38001126 	beq	r7,zero,1010bd94 <__ledf2+0xc4>
1010bd50:	00800044 	movi	r2,1
1010bd54:	f800283a 	ret
1010bd58:	30d2b03a 	or	r9,r6,r3
1010bd5c:	483fea26 	beq	r9,zero,1010bd08 <__alt_data_end+0xfffebd08>
1010bd60:	00800084 	movi	r2,2
1010bd64:	f800283a 	ret
1010bd68:	39c03fcc 	andi	r7,r7,255
1010bd6c:	39400726 	beq	r7,r5,1010bd8c <__ledf2+0xbc>
1010bd70:	2800081e 	bne	r5,zero,1010bd94 <__ledf2+0xc4>
1010bd74:	00800044 	movi	r2,1
1010bd78:	f800283a 	ret
1010bd7c:	2292b03a 	or	r9,r4,r10
1010bd80:	483fdf26 	beq	r9,zero,1010bd00 <__alt_data_end+0xfffebd00>
1010bd84:	00800084 	movi	r2,2
1010bd88:	f800283a 	ret
1010bd8c:	4080030e 	bge	r8,r2,1010bd9c <__ledf2+0xcc>
1010bd90:	383fef26 	beq	r7,zero,1010bd50 <__alt_data_end+0xfffebd50>
1010bd94:	00bfffc4 	movi	r2,-1
1010bd98:	f800283a 	ret
1010bd9c:	123feb16 	blt	r2,r8,1010bd4c <__alt_data_end+0xfffebd4c>
1010bda0:	1abff336 	bltu	r3,r10,1010bd70 <__alt_data_end+0xfffebd70>
1010bda4:	50c00326 	beq	r10,r3,1010bdb4 <__ledf2+0xe4>
1010bda8:	50c0042e 	bgeu	r10,r3,1010bdbc <__ledf2+0xec>
1010bdac:	283fe81e 	bne	r5,zero,1010bd50 <__alt_data_end+0xfffebd50>
1010bdb0:	003ff806 	br	1010bd94 <__alt_data_end+0xfffebd94>
1010bdb4:	313fee36 	bltu	r6,r4,1010bd70 <__alt_data_end+0xfffebd70>
1010bdb8:	21bffc36 	bltu	r4,r6,1010bdac <__alt_data_end+0xfffebdac>
1010bdbc:	0005883a 	mov	r2,zero
1010bdc0:	f800283a 	ret

1010bdc4 <__muldf3>:
1010bdc4:	defff304 	addi	sp,sp,-52
1010bdc8:	dd400815 	stw	r21,32(sp)
1010bdcc:	282ad53a 	srli	r21,r5,20
1010bdd0:	dd800915 	stw	r22,36(sp)
1010bdd4:	282cd7fa 	srli	r22,r5,31
1010bdd8:	dc000315 	stw	r16,12(sp)
1010bddc:	04000434 	movhi	r16,16
1010bde0:	dd000715 	stw	r20,28(sp)
1010bde4:	843fffc4 	addi	r16,r16,-1
1010bde8:	dfc00c15 	stw	ra,48(sp)
1010bdec:	df000b15 	stw	fp,44(sp)
1010bdf0:	ddc00a15 	stw	r23,40(sp)
1010bdf4:	dcc00615 	stw	r19,24(sp)
1010bdf8:	dc800515 	stw	r18,20(sp)
1010bdfc:	dc400415 	stw	r17,16(sp)
1010be00:	ad41ffcc 	andi	r21,r21,2047
1010be04:	2c20703a 	and	r16,r5,r16
1010be08:	b029883a 	mov	r20,r22
1010be0c:	b2403fcc 	andi	r9,r22,255
1010be10:	a8006026 	beq	r21,zero,1010bf94 <__muldf3+0x1d0>
1010be14:	0081ffc4 	movi	r2,2047
1010be18:	2027883a 	mov	r19,r4
1010be1c:	a8803626 	beq	r21,r2,1010bef8 <__muldf3+0x134>
1010be20:	80c00434 	orhi	r3,r16,16
1010be24:	180690fa 	slli	r3,r3,3
1010be28:	2020d77a 	srli	r16,r4,29
1010be2c:	202690fa 	slli	r19,r4,3
1010be30:	ad7f0044 	addi	r21,r21,-1023
1010be34:	80e0b03a 	or	r16,r16,r3
1010be38:	0025883a 	mov	r18,zero
1010be3c:	0039883a 	mov	fp,zero
1010be40:	3808d53a 	srli	r4,r7,20
1010be44:	382ed7fa 	srli	r23,r7,31
1010be48:	04400434 	movhi	r17,16
1010be4c:	8c7fffc4 	addi	r17,r17,-1
1010be50:	2101ffcc 	andi	r4,r4,2047
1010be54:	3011883a 	mov	r8,r6
1010be58:	3c62703a 	and	r17,r7,r17
1010be5c:	ba803fcc 	andi	r10,r23,255
1010be60:	20006d26 	beq	r4,zero,1010c018 <__muldf3+0x254>
1010be64:	0081ffc4 	movi	r2,2047
1010be68:	20806526 	beq	r4,r2,1010c000 <__muldf3+0x23c>
1010be6c:	88c00434 	orhi	r3,r17,16
1010be70:	180690fa 	slli	r3,r3,3
1010be74:	3022d77a 	srli	r17,r6,29
1010be78:	301090fa 	slli	r8,r6,3
1010be7c:	213f0044 	addi	r4,r4,-1023
1010be80:	88e2b03a 	or	r17,r17,r3
1010be84:	000b883a 	mov	r5,zero
1010be88:	a909883a 	add	r4,r21,r4
1010be8c:	2c84b03a 	or	r2,r5,r18
1010be90:	00c003c4 	movi	r3,15
1010be94:	bdacf03a 	xor	r22,r23,r22
1010be98:	22c00044 	addi	r11,r4,1
1010be9c:	18809936 	bltu	r3,r2,1010c104 <__muldf3+0x340>
1010bea0:	100490ba 	slli	r2,r2,2
1010bea4:	00c40474 	movhi	r3,4113
1010bea8:	18efae04 	addi	r3,r3,-16712
1010beac:	10c5883a 	add	r2,r2,r3
1010beb0:	10800017 	ldw	r2,0(r2)
1010beb4:	1000683a 	jmp	r2
1010beb8:	1010c104 	addi	zero,r2,17156
1010bebc:	1010bf18 	cmpnei	zero,r2,17148
1010bec0:	1010bf18 	cmpnei	zero,r2,17148
1010bec4:	1010bf14 	ori	zero,r2,17148
1010bec8:	1010c0e0 	cmpeqi	zero,r2,17155
1010becc:	1010c0e0 	cmpeqi	zero,r2,17155
1010bed0:	1010c0c8 	cmpgei	zero,r2,17155
1010bed4:	1010bf14 	ori	zero,r2,17148
1010bed8:	1010c0e0 	cmpeqi	zero,r2,17155
1010bedc:	1010c0c8 	cmpgei	zero,r2,17155
1010bee0:	1010c0e0 	cmpeqi	zero,r2,17155
1010bee4:	1010bf14 	ori	zero,r2,17148
1010bee8:	1010c0f0 	cmpltui	zero,r2,17155
1010beec:	1010c0f0 	cmpltui	zero,r2,17155
1010bef0:	1010c0f0 	cmpltui	zero,r2,17155
1010bef4:	1010c30c 	andi	zero,r2,17164
1010bef8:	2404b03a 	or	r2,r4,r16
1010befc:	10006f1e 	bne	r2,zero,1010c0bc <__muldf3+0x2f8>
1010bf00:	04800204 	movi	r18,8
1010bf04:	0021883a 	mov	r16,zero
1010bf08:	0027883a 	mov	r19,zero
1010bf0c:	07000084 	movi	fp,2
1010bf10:	003fcb06 	br	1010be40 <__alt_data_end+0xfffebe40>
1010bf14:	502d883a 	mov	r22,r10
1010bf18:	00800084 	movi	r2,2
1010bf1c:	28805726 	beq	r5,r2,1010c07c <__muldf3+0x2b8>
1010bf20:	008000c4 	movi	r2,3
1010bf24:	28816626 	beq	r5,r2,1010c4c0 <__muldf3+0x6fc>
1010bf28:	00800044 	movi	r2,1
1010bf2c:	2881411e 	bne	r5,r2,1010c434 <__muldf3+0x670>
1010bf30:	b029883a 	mov	r20,r22
1010bf34:	0005883a 	mov	r2,zero
1010bf38:	000b883a 	mov	r5,zero
1010bf3c:	0027883a 	mov	r19,zero
1010bf40:	1004953a 	slli	r2,r2,20
1010bf44:	a0c03fcc 	andi	r3,r20,255
1010bf48:	04400434 	movhi	r17,16
1010bf4c:	8c7fffc4 	addi	r17,r17,-1
1010bf50:	180697fa 	slli	r3,r3,31
1010bf54:	2c4a703a 	and	r5,r5,r17
1010bf58:	288ab03a 	or	r5,r5,r2
1010bf5c:	28c6b03a 	or	r3,r5,r3
1010bf60:	9805883a 	mov	r2,r19
1010bf64:	dfc00c17 	ldw	ra,48(sp)
1010bf68:	df000b17 	ldw	fp,44(sp)
1010bf6c:	ddc00a17 	ldw	r23,40(sp)
1010bf70:	dd800917 	ldw	r22,36(sp)
1010bf74:	dd400817 	ldw	r21,32(sp)
1010bf78:	dd000717 	ldw	r20,28(sp)
1010bf7c:	dcc00617 	ldw	r19,24(sp)
1010bf80:	dc800517 	ldw	r18,20(sp)
1010bf84:	dc400417 	ldw	r17,16(sp)
1010bf88:	dc000317 	ldw	r16,12(sp)
1010bf8c:	dec00d04 	addi	sp,sp,52
1010bf90:	f800283a 	ret
1010bf94:	2404b03a 	or	r2,r4,r16
1010bf98:	2025883a 	mov	r18,r4
1010bf9c:	10004226 	beq	r2,zero,1010c0a8 <__muldf3+0x2e4>
1010bfa0:	8000fc26 	beq	r16,zero,1010c394 <__muldf3+0x5d0>
1010bfa4:	8009883a 	mov	r4,r16
1010bfa8:	d9800215 	stw	r6,8(sp)
1010bfac:	d9c00015 	stw	r7,0(sp)
1010bfb0:	da400115 	stw	r9,4(sp)
1010bfb4:	010cfdc0 	call	1010cfdc <__clzsi2>
1010bfb8:	d9800217 	ldw	r6,8(sp)
1010bfbc:	d9c00017 	ldw	r7,0(sp)
1010bfc0:	da400117 	ldw	r9,4(sp)
1010bfc4:	10fffd44 	addi	r3,r2,-11
1010bfc8:	01000704 	movi	r4,28
1010bfcc:	20c0ed16 	blt	r4,r3,1010c384 <__muldf3+0x5c0>
1010bfd0:	01000744 	movi	r4,29
1010bfd4:	147ffe04 	addi	r17,r2,-8
1010bfd8:	20c9c83a 	sub	r4,r4,r3
1010bfdc:	8460983a 	sll	r16,r16,r17
1010bfe0:	9108d83a 	srl	r4,r18,r4
1010bfe4:	9466983a 	sll	r19,r18,r17
1010bfe8:	2420b03a 	or	r16,r4,r16
1010bfec:	013f0084 	movi	r4,-1022
1010bff0:	20ebc83a 	sub	r21,r4,r3
1010bff4:	0025883a 	mov	r18,zero
1010bff8:	0039883a 	mov	fp,zero
1010bffc:	003f9006 	br	1010be40 <__alt_data_end+0xfffebe40>
1010c000:	3444b03a 	or	r2,r6,r17
1010c004:	1000261e 	bne	r2,zero,1010c0a0 <__muldf3+0x2dc>
1010c008:	0023883a 	mov	r17,zero
1010c00c:	0011883a 	mov	r8,zero
1010c010:	01400084 	movi	r5,2
1010c014:	003f9c06 	br	1010be88 <__alt_data_end+0xfffebe88>
1010c018:	3444b03a 	or	r2,r6,r17
1010c01c:	10001c26 	beq	r2,zero,1010c090 <__muldf3+0x2cc>
1010c020:	8800ce26 	beq	r17,zero,1010c35c <__muldf3+0x598>
1010c024:	8809883a 	mov	r4,r17
1010c028:	d9800215 	stw	r6,8(sp)
1010c02c:	da400115 	stw	r9,4(sp)
1010c030:	da800015 	stw	r10,0(sp)
1010c034:	010cfdc0 	call	1010cfdc <__clzsi2>
1010c038:	d9800217 	ldw	r6,8(sp)
1010c03c:	da400117 	ldw	r9,4(sp)
1010c040:	da800017 	ldw	r10,0(sp)
1010c044:	113ffd44 	addi	r4,r2,-11
1010c048:	00c00704 	movi	r3,28
1010c04c:	1900bf16 	blt	r3,r4,1010c34c <__muldf3+0x588>
1010c050:	00c00744 	movi	r3,29
1010c054:	123ffe04 	addi	r8,r2,-8
1010c058:	1907c83a 	sub	r3,r3,r4
1010c05c:	8a22983a 	sll	r17,r17,r8
1010c060:	30c6d83a 	srl	r3,r6,r3
1010c064:	3210983a 	sll	r8,r6,r8
1010c068:	1c62b03a 	or	r17,r3,r17
1010c06c:	017f0084 	movi	r5,-1022
1010c070:	2909c83a 	sub	r4,r5,r4
1010c074:	000b883a 	mov	r5,zero
1010c078:	003f8306 	br	1010be88 <__alt_data_end+0xfffebe88>
1010c07c:	b029883a 	mov	r20,r22
1010c080:	0081ffc4 	movi	r2,2047
1010c084:	000b883a 	mov	r5,zero
1010c088:	0027883a 	mov	r19,zero
1010c08c:	003fac06 	br	1010bf40 <__alt_data_end+0xfffebf40>
1010c090:	0023883a 	mov	r17,zero
1010c094:	0011883a 	mov	r8,zero
1010c098:	01400044 	movi	r5,1
1010c09c:	003f7a06 	br	1010be88 <__alt_data_end+0xfffebe88>
1010c0a0:	014000c4 	movi	r5,3
1010c0a4:	003f7806 	br	1010be88 <__alt_data_end+0xfffebe88>
1010c0a8:	04800104 	movi	r18,4
1010c0ac:	0021883a 	mov	r16,zero
1010c0b0:	0027883a 	mov	r19,zero
1010c0b4:	07000044 	movi	fp,1
1010c0b8:	003f6106 	br	1010be40 <__alt_data_end+0xfffebe40>
1010c0bc:	04800304 	movi	r18,12
1010c0c0:	070000c4 	movi	fp,3
1010c0c4:	003f5e06 	br	1010be40 <__alt_data_end+0xfffebe40>
1010c0c8:	01400434 	movhi	r5,16
1010c0cc:	0029883a 	mov	r20,zero
1010c0d0:	297fffc4 	addi	r5,r5,-1
1010c0d4:	04ffffc4 	movi	r19,-1
1010c0d8:	0081ffc4 	movi	r2,2047
1010c0dc:	003f9806 	br	1010bf40 <__alt_data_end+0xfffebf40>
1010c0e0:	8023883a 	mov	r17,r16
1010c0e4:	9811883a 	mov	r8,r19
1010c0e8:	e00b883a 	mov	r5,fp
1010c0ec:	003f8a06 	br	1010bf18 <__alt_data_end+0xfffebf18>
1010c0f0:	8023883a 	mov	r17,r16
1010c0f4:	9811883a 	mov	r8,r19
1010c0f8:	482d883a 	mov	r22,r9
1010c0fc:	e00b883a 	mov	r5,fp
1010c100:	003f8506 	br	1010bf18 <__alt_data_end+0xfffebf18>
1010c104:	980ad43a 	srli	r5,r19,16
1010c108:	401ad43a 	srli	r13,r8,16
1010c10c:	9cffffcc 	andi	r19,r19,65535
1010c110:	423fffcc 	andi	r8,r8,65535
1010c114:	44d9383a 	mul	r12,r8,r19
1010c118:	4145383a 	mul	r2,r8,r5
1010c11c:	6ccd383a 	mul	r6,r13,r19
1010c120:	6006d43a 	srli	r3,r12,16
1010c124:	2b5d383a 	mul	r14,r5,r13
1010c128:	308d883a 	add	r6,r6,r2
1010c12c:	198d883a 	add	r6,r3,r6
1010c130:	3080022e 	bgeu	r6,r2,1010c13c <__muldf3+0x378>
1010c134:	00800074 	movhi	r2,1
1010c138:	709d883a 	add	r14,r14,r2
1010c13c:	8828d43a 	srli	r20,r17,16
1010c140:	8bffffcc 	andi	r15,r17,65535
1010c144:	7ce3383a 	mul	r17,r15,r19
1010c148:	7945383a 	mul	r2,r15,r5
1010c14c:	a4e7383a 	mul	r19,r20,r19
1010c150:	8814d43a 	srli	r10,r17,16
1010c154:	3012943a 	slli	r9,r6,16
1010c158:	98a7883a 	add	r19,r19,r2
1010c15c:	633fffcc 	andi	r12,r12,65535
1010c160:	54d5883a 	add	r10,r10,r19
1010c164:	3006d43a 	srli	r3,r6,16
1010c168:	4b13883a 	add	r9,r9,r12
1010c16c:	2d0b383a 	mul	r5,r5,r20
1010c170:	5080022e 	bgeu	r10,r2,1010c17c <__muldf3+0x3b8>
1010c174:	00800074 	movhi	r2,1
1010c178:	288b883a 	add	r5,r5,r2
1010c17c:	802ad43a 	srli	r21,r16,16
1010c180:	843fffcc 	andi	r16,r16,65535
1010c184:	440d383a 	mul	r6,r8,r16
1010c188:	4565383a 	mul	r18,r8,r21
1010c18c:	8359383a 	mul	r12,r16,r13
1010c190:	500e943a 	slli	r7,r10,16
1010c194:	3010d43a 	srli	r8,r6,16
1010c198:	5026d43a 	srli	r19,r10,16
1010c19c:	6499883a 	add	r12,r12,r18
1010c1a0:	8abfffcc 	andi	r10,r17,65535
1010c1a4:	3a95883a 	add	r10,r7,r10
1010c1a8:	4319883a 	add	r12,r8,r12
1010c1ac:	9967883a 	add	r19,r19,r5
1010c1b0:	1a87883a 	add	r3,r3,r10
1010c1b4:	6d5b383a 	mul	r13,r13,r21
1010c1b8:	6480022e 	bgeu	r12,r18,1010c1c4 <__muldf3+0x400>
1010c1bc:	00800074 	movhi	r2,1
1010c1c0:	689b883a 	add	r13,r13,r2
1010c1c4:	7c25383a 	mul	r18,r15,r16
1010c1c8:	7d4b383a 	mul	r5,r15,r21
1010c1cc:	850f383a 	mul	r7,r16,r20
1010c1d0:	901ed43a 	srli	r15,r18,16
1010c1d4:	6004d43a 	srli	r2,r12,16
1010c1d8:	6010943a 	slli	r8,r12,16
1010c1dc:	394f883a 	add	r7,r7,r5
1010c1e0:	333fffcc 	andi	r12,r6,65535
1010c1e4:	79df883a 	add	r15,r15,r7
1010c1e8:	135b883a 	add	r13,r2,r13
1010c1ec:	a563383a 	mul	r17,r20,r21
1010c1f0:	4305883a 	add	r2,r8,r12
1010c1f4:	7940022e 	bgeu	r15,r5,1010c200 <__muldf3+0x43c>
1010c1f8:	01400074 	movhi	r5,1
1010c1fc:	8963883a 	add	r17,r17,r5
1010c200:	780a943a 	slli	r5,r15,16
1010c204:	91bfffcc 	andi	r6,r18,65535
1010c208:	70c7883a 	add	r3,r14,r3
1010c20c:	298d883a 	add	r6,r5,r6
1010c210:	1a8f803a 	cmpltu	r7,r3,r10
1010c214:	34cb883a 	add	r5,r6,r19
1010c218:	10c7883a 	add	r3,r2,r3
1010c21c:	3955883a 	add	r10,r7,r5
1010c220:	1885803a 	cmpltu	r2,r3,r2
1010c224:	6a91883a 	add	r8,r13,r10
1010c228:	780cd43a 	srli	r6,r15,16
1010c22c:	1219883a 	add	r12,r2,r8
1010c230:	2ccb803a 	cmpltu	r5,r5,r19
1010c234:	51cf803a 	cmpltu	r7,r10,r7
1010c238:	29ceb03a 	or	r7,r5,r7
1010c23c:	4351803a 	cmpltu	r8,r8,r13
1010c240:	608b803a 	cmpltu	r5,r12,r2
1010c244:	4144b03a 	or	r2,r8,r5
1010c248:	398f883a 	add	r7,r7,r6
1010c24c:	3885883a 	add	r2,r7,r2
1010c250:	1810927a 	slli	r8,r3,9
1010c254:	1445883a 	add	r2,r2,r17
1010c258:	1004927a 	slli	r2,r2,9
1010c25c:	6022d5fa 	srli	r17,r12,23
1010c260:	1806d5fa 	srli	r3,r3,23
1010c264:	4252b03a 	or	r9,r8,r9
1010c268:	600a927a 	slli	r5,r12,9
1010c26c:	4810c03a 	cmpne	r8,r9,zero
1010c270:	1462b03a 	or	r17,r2,r17
1010c274:	40c6b03a 	or	r3,r8,r3
1010c278:	8880402c 	andhi	r2,r17,256
1010c27c:	1950b03a 	or	r8,r3,r5
1010c280:	10000726 	beq	r2,zero,1010c2a0 <__muldf3+0x4dc>
1010c284:	4006d07a 	srli	r3,r8,1
1010c288:	880497fa 	slli	r2,r17,31
1010c28c:	4200004c 	andi	r8,r8,1
1010c290:	8822d07a 	srli	r17,r17,1
1010c294:	1a10b03a 	or	r8,r3,r8
1010c298:	1210b03a 	or	r8,r2,r8
1010c29c:	5809883a 	mov	r4,r11
1010c2a0:	2080ffc4 	addi	r2,r4,1023
1010c2a4:	0080440e 	bge	zero,r2,1010c3b8 <__muldf3+0x5f4>
1010c2a8:	40c001cc 	andi	r3,r8,7
1010c2ac:	18000726 	beq	r3,zero,1010c2cc <__muldf3+0x508>
1010c2b0:	40c003cc 	andi	r3,r8,15
1010c2b4:	01400104 	movi	r5,4
1010c2b8:	19400426 	beq	r3,r5,1010c2cc <__muldf3+0x508>
1010c2bc:	4147883a 	add	r3,r8,r5
1010c2c0:	1a11803a 	cmpltu	r8,r3,r8
1010c2c4:	8a23883a 	add	r17,r17,r8
1010c2c8:	1811883a 	mov	r8,r3
1010c2cc:	88c0402c 	andhi	r3,r17,256
1010c2d0:	18000426 	beq	r3,zero,1010c2e4 <__muldf3+0x520>
1010c2d4:	00ffc034 	movhi	r3,65280
1010c2d8:	18ffffc4 	addi	r3,r3,-1
1010c2dc:	20810004 	addi	r2,r4,1024
1010c2e0:	88e2703a 	and	r17,r17,r3
1010c2e4:	00c1ff84 	movi	r3,2046
1010c2e8:	18bf6416 	blt	r3,r2,1010c07c <__alt_data_end+0xfffec07c>
1010c2ec:	8826977a 	slli	r19,r17,29
1010c2f0:	4010d0fa 	srli	r8,r8,3
1010c2f4:	8822927a 	slli	r17,r17,9
1010c2f8:	1081ffcc 	andi	r2,r2,2047
1010c2fc:	9a26b03a 	or	r19,r19,r8
1010c300:	880ad33a 	srli	r5,r17,12
1010c304:	b029883a 	mov	r20,r22
1010c308:	003f0d06 	br	1010bf40 <__alt_data_end+0xfffebf40>
1010c30c:	8080022c 	andhi	r2,r16,8
1010c310:	10000926 	beq	r2,zero,1010c338 <__muldf3+0x574>
1010c314:	8880022c 	andhi	r2,r17,8
1010c318:	1000071e 	bne	r2,zero,1010c338 <__muldf3+0x574>
1010c31c:	00800434 	movhi	r2,16
1010c320:	89400234 	orhi	r5,r17,8
1010c324:	10bfffc4 	addi	r2,r2,-1
1010c328:	b829883a 	mov	r20,r23
1010c32c:	288a703a 	and	r5,r5,r2
1010c330:	4027883a 	mov	r19,r8
1010c334:	003f6806 	br	1010c0d8 <__alt_data_end+0xfffec0d8>
1010c338:	00800434 	movhi	r2,16
1010c33c:	81400234 	orhi	r5,r16,8
1010c340:	10bfffc4 	addi	r2,r2,-1
1010c344:	288a703a 	and	r5,r5,r2
1010c348:	003f6306 	br	1010c0d8 <__alt_data_end+0xfffec0d8>
1010c34c:	10bff604 	addi	r2,r2,-40
1010c350:	30a2983a 	sll	r17,r6,r2
1010c354:	0011883a 	mov	r8,zero
1010c358:	003f4406 	br	1010c06c <__alt_data_end+0xfffec06c>
1010c35c:	3009883a 	mov	r4,r6
1010c360:	d9800215 	stw	r6,8(sp)
1010c364:	da400115 	stw	r9,4(sp)
1010c368:	da800015 	stw	r10,0(sp)
1010c36c:	010cfdc0 	call	1010cfdc <__clzsi2>
1010c370:	10800804 	addi	r2,r2,32
1010c374:	da800017 	ldw	r10,0(sp)
1010c378:	da400117 	ldw	r9,4(sp)
1010c37c:	d9800217 	ldw	r6,8(sp)
1010c380:	003f3006 	br	1010c044 <__alt_data_end+0xfffec044>
1010c384:	10bff604 	addi	r2,r2,-40
1010c388:	90a0983a 	sll	r16,r18,r2
1010c38c:	0027883a 	mov	r19,zero
1010c390:	003f1606 	br	1010bfec <__alt_data_end+0xfffebfec>
1010c394:	d9800215 	stw	r6,8(sp)
1010c398:	d9c00015 	stw	r7,0(sp)
1010c39c:	da400115 	stw	r9,4(sp)
1010c3a0:	010cfdc0 	call	1010cfdc <__clzsi2>
1010c3a4:	10800804 	addi	r2,r2,32
1010c3a8:	da400117 	ldw	r9,4(sp)
1010c3ac:	d9c00017 	ldw	r7,0(sp)
1010c3b0:	d9800217 	ldw	r6,8(sp)
1010c3b4:	003f0306 	br	1010bfc4 <__alt_data_end+0xfffebfc4>
1010c3b8:	00c00044 	movi	r3,1
1010c3bc:	1887c83a 	sub	r3,r3,r2
1010c3c0:	01000e04 	movi	r4,56
1010c3c4:	20feda16 	blt	r4,r3,1010bf30 <__alt_data_end+0xfffebf30>
1010c3c8:	010007c4 	movi	r4,31
1010c3cc:	20c01b16 	blt	r4,r3,1010c43c <__muldf3+0x678>
1010c3d0:	00800804 	movi	r2,32
1010c3d4:	10c5c83a 	sub	r2,r2,r3
1010c3d8:	888a983a 	sll	r5,r17,r2
1010c3dc:	40c8d83a 	srl	r4,r8,r3
1010c3e0:	4084983a 	sll	r2,r8,r2
1010c3e4:	88e2d83a 	srl	r17,r17,r3
1010c3e8:	2906b03a 	or	r3,r5,r4
1010c3ec:	1004c03a 	cmpne	r2,r2,zero
1010c3f0:	1886b03a 	or	r3,r3,r2
1010c3f4:	188001cc 	andi	r2,r3,7
1010c3f8:	10000726 	beq	r2,zero,1010c418 <__muldf3+0x654>
1010c3fc:	188003cc 	andi	r2,r3,15
1010c400:	01000104 	movi	r4,4
1010c404:	11000426 	beq	r2,r4,1010c418 <__muldf3+0x654>
1010c408:	1805883a 	mov	r2,r3
1010c40c:	10c00104 	addi	r3,r2,4
1010c410:	1885803a 	cmpltu	r2,r3,r2
1010c414:	88a3883a 	add	r17,r17,r2
1010c418:	8880202c 	andhi	r2,r17,128
1010c41c:	10001c26 	beq	r2,zero,1010c490 <__muldf3+0x6cc>
1010c420:	b029883a 	mov	r20,r22
1010c424:	00800044 	movi	r2,1
1010c428:	000b883a 	mov	r5,zero
1010c42c:	0027883a 	mov	r19,zero
1010c430:	003ec306 	br	1010bf40 <__alt_data_end+0xfffebf40>
1010c434:	5809883a 	mov	r4,r11
1010c438:	003f9906 	br	1010c2a0 <__alt_data_end+0xfffec2a0>
1010c43c:	013ff844 	movi	r4,-31
1010c440:	2085c83a 	sub	r2,r4,r2
1010c444:	8888d83a 	srl	r4,r17,r2
1010c448:	00800804 	movi	r2,32
1010c44c:	18801a26 	beq	r3,r2,1010c4b8 <__muldf3+0x6f4>
1010c450:	00801004 	movi	r2,64
1010c454:	10c5c83a 	sub	r2,r2,r3
1010c458:	8884983a 	sll	r2,r17,r2
1010c45c:	1204b03a 	or	r2,r2,r8
1010c460:	1004c03a 	cmpne	r2,r2,zero
1010c464:	2084b03a 	or	r2,r4,r2
1010c468:	144001cc 	andi	r17,r2,7
1010c46c:	88000d1e 	bne	r17,zero,1010c4a4 <__muldf3+0x6e0>
1010c470:	000b883a 	mov	r5,zero
1010c474:	1026d0fa 	srli	r19,r2,3
1010c478:	b029883a 	mov	r20,r22
1010c47c:	0005883a 	mov	r2,zero
1010c480:	9c66b03a 	or	r19,r19,r17
1010c484:	003eae06 	br	1010bf40 <__alt_data_end+0xfffebf40>
1010c488:	1007883a 	mov	r3,r2
1010c48c:	0023883a 	mov	r17,zero
1010c490:	880a927a 	slli	r5,r17,9
1010c494:	1805883a 	mov	r2,r3
1010c498:	8822977a 	slli	r17,r17,29
1010c49c:	280ad33a 	srli	r5,r5,12
1010c4a0:	003ff406 	br	1010c474 <__alt_data_end+0xfffec474>
1010c4a4:	10c003cc 	andi	r3,r2,15
1010c4a8:	01000104 	movi	r4,4
1010c4ac:	193ff626 	beq	r3,r4,1010c488 <__alt_data_end+0xfffec488>
1010c4b0:	0023883a 	mov	r17,zero
1010c4b4:	003fd506 	br	1010c40c <__alt_data_end+0xfffec40c>
1010c4b8:	0005883a 	mov	r2,zero
1010c4bc:	003fe706 	br	1010c45c <__alt_data_end+0xfffec45c>
1010c4c0:	00800434 	movhi	r2,16
1010c4c4:	89400234 	orhi	r5,r17,8
1010c4c8:	10bfffc4 	addi	r2,r2,-1
1010c4cc:	b029883a 	mov	r20,r22
1010c4d0:	288a703a 	and	r5,r5,r2
1010c4d4:	4027883a 	mov	r19,r8
1010c4d8:	003eff06 	br	1010c0d8 <__alt_data_end+0xfffec0d8>

1010c4dc <__subdf3>:
1010c4dc:	02000434 	movhi	r8,16
1010c4e0:	423fffc4 	addi	r8,r8,-1
1010c4e4:	defffb04 	addi	sp,sp,-20
1010c4e8:	2a14703a 	and	r10,r5,r8
1010c4ec:	3812d53a 	srli	r9,r7,20
1010c4f0:	3a10703a 	and	r8,r7,r8
1010c4f4:	2006d77a 	srli	r3,r4,29
1010c4f8:	3004d77a 	srli	r2,r6,29
1010c4fc:	dc000015 	stw	r16,0(sp)
1010c500:	501490fa 	slli	r10,r10,3
1010c504:	2820d53a 	srli	r16,r5,20
1010c508:	401090fa 	slli	r8,r8,3
1010c50c:	dc800215 	stw	r18,8(sp)
1010c510:	dc400115 	stw	r17,4(sp)
1010c514:	dfc00415 	stw	ra,16(sp)
1010c518:	202290fa 	slli	r17,r4,3
1010c51c:	dcc00315 	stw	r19,12(sp)
1010c520:	4a41ffcc 	andi	r9,r9,2047
1010c524:	0101ffc4 	movi	r4,2047
1010c528:	2824d7fa 	srli	r18,r5,31
1010c52c:	8401ffcc 	andi	r16,r16,2047
1010c530:	50c6b03a 	or	r3,r10,r3
1010c534:	380ed7fa 	srli	r7,r7,31
1010c538:	408ab03a 	or	r5,r8,r2
1010c53c:	300c90fa 	slli	r6,r6,3
1010c540:	49009626 	beq	r9,r4,1010c79c <__subdf3+0x2c0>
1010c544:	39c0005c 	xori	r7,r7,1
1010c548:	8245c83a 	sub	r2,r16,r9
1010c54c:	3c807426 	beq	r7,r18,1010c720 <__subdf3+0x244>
1010c550:	0080af0e 	bge	zero,r2,1010c810 <__subdf3+0x334>
1010c554:	48002a1e 	bne	r9,zero,1010c600 <__subdf3+0x124>
1010c558:	2988b03a 	or	r4,r5,r6
1010c55c:	20009a1e 	bne	r4,zero,1010c7c8 <__subdf3+0x2ec>
1010c560:	888001cc 	andi	r2,r17,7
1010c564:	10000726 	beq	r2,zero,1010c584 <__subdf3+0xa8>
1010c568:	888003cc 	andi	r2,r17,15
1010c56c:	01000104 	movi	r4,4
1010c570:	11000426 	beq	r2,r4,1010c584 <__subdf3+0xa8>
1010c574:	890b883a 	add	r5,r17,r4
1010c578:	2c63803a 	cmpltu	r17,r5,r17
1010c57c:	1c47883a 	add	r3,r3,r17
1010c580:	2823883a 	mov	r17,r5
1010c584:	1880202c 	andhi	r2,r3,128
1010c588:	10005926 	beq	r2,zero,1010c6f0 <__subdf3+0x214>
1010c58c:	84000044 	addi	r16,r16,1
1010c590:	0081ffc4 	movi	r2,2047
1010c594:	8080be26 	beq	r16,r2,1010c890 <__subdf3+0x3b4>
1010c598:	017fe034 	movhi	r5,65408
1010c59c:	297fffc4 	addi	r5,r5,-1
1010c5a0:	1946703a 	and	r3,r3,r5
1010c5a4:	1804977a 	slli	r2,r3,29
1010c5a8:	1806927a 	slli	r3,r3,9
1010c5ac:	8822d0fa 	srli	r17,r17,3
1010c5b0:	8401ffcc 	andi	r16,r16,2047
1010c5b4:	180ad33a 	srli	r5,r3,12
1010c5b8:	9100004c 	andi	r4,r18,1
1010c5bc:	1444b03a 	or	r2,r2,r17
1010c5c0:	80c1ffcc 	andi	r3,r16,2047
1010c5c4:	1820953a 	slli	r16,r3,20
1010c5c8:	20c03fcc 	andi	r3,r4,255
1010c5cc:	180897fa 	slli	r4,r3,31
1010c5d0:	00c00434 	movhi	r3,16
1010c5d4:	18ffffc4 	addi	r3,r3,-1
1010c5d8:	28c6703a 	and	r3,r5,r3
1010c5dc:	1c06b03a 	or	r3,r3,r16
1010c5e0:	1906b03a 	or	r3,r3,r4
1010c5e4:	dfc00417 	ldw	ra,16(sp)
1010c5e8:	dcc00317 	ldw	r19,12(sp)
1010c5ec:	dc800217 	ldw	r18,8(sp)
1010c5f0:	dc400117 	ldw	r17,4(sp)
1010c5f4:	dc000017 	ldw	r16,0(sp)
1010c5f8:	dec00504 	addi	sp,sp,20
1010c5fc:	f800283a 	ret
1010c600:	0101ffc4 	movi	r4,2047
1010c604:	813fd626 	beq	r16,r4,1010c560 <__alt_data_end+0xfffec560>
1010c608:	29402034 	orhi	r5,r5,128
1010c60c:	01000e04 	movi	r4,56
1010c610:	2080a316 	blt	r4,r2,1010c8a0 <__subdf3+0x3c4>
1010c614:	010007c4 	movi	r4,31
1010c618:	2080c616 	blt	r4,r2,1010c934 <__subdf3+0x458>
1010c61c:	01000804 	movi	r4,32
1010c620:	2089c83a 	sub	r4,r4,r2
1010c624:	2910983a 	sll	r8,r5,r4
1010c628:	308ed83a 	srl	r7,r6,r2
1010c62c:	3108983a 	sll	r4,r6,r4
1010c630:	2884d83a 	srl	r2,r5,r2
1010c634:	41ccb03a 	or	r6,r8,r7
1010c638:	2008c03a 	cmpne	r4,r4,zero
1010c63c:	310cb03a 	or	r6,r6,r4
1010c640:	898dc83a 	sub	r6,r17,r6
1010c644:	89a3803a 	cmpltu	r17,r17,r6
1010c648:	1887c83a 	sub	r3,r3,r2
1010c64c:	1c47c83a 	sub	r3,r3,r17
1010c650:	3023883a 	mov	r17,r6
1010c654:	1880202c 	andhi	r2,r3,128
1010c658:	10002326 	beq	r2,zero,1010c6e8 <__subdf3+0x20c>
1010c65c:	04c02034 	movhi	r19,128
1010c660:	9cffffc4 	addi	r19,r19,-1
1010c664:	1ce6703a 	and	r19,r3,r19
1010c668:	98007a26 	beq	r19,zero,1010c854 <__subdf3+0x378>
1010c66c:	9809883a 	mov	r4,r19
1010c670:	010cfdc0 	call	1010cfdc <__clzsi2>
1010c674:	113ffe04 	addi	r4,r2,-8
1010c678:	00c007c4 	movi	r3,31
1010c67c:	19007b16 	blt	r3,r4,1010c86c <__subdf3+0x390>
1010c680:	00800804 	movi	r2,32
1010c684:	1105c83a 	sub	r2,r2,r4
1010c688:	8884d83a 	srl	r2,r17,r2
1010c68c:	9906983a 	sll	r3,r19,r4
1010c690:	8922983a 	sll	r17,r17,r4
1010c694:	10c4b03a 	or	r2,r2,r3
1010c698:	24007816 	blt	r4,r16,1010c87c <__subdf3+0x3a0>
1010c69c:	2421c83a 	sub	r16,r4,r16
1010c6a0:	80c00044 	addi	r3,r16,1
1010c6a4:	010007c4 	movi	r4,31
1010c6a8:	20c09516 	blt	r4,r3,1010c900 <__subdf3+0x424>
1010c6ac:	01400804 	movi	r5,32
1010c6b0:	28cbc83a 	sub	r5,r5,r3
1010c6b4:	88c8d83a 	srl	r4,r17,r3
1010c6b8:	8962983a 	sll	r17,r17,r5
1010c6bc:	114a983a 	sll	r5,r2,r5
1010c6c0:	10c6d83a 	srl	r3,r2,r3
1010c6c4:	8804c03a 	cmpne	r2,r17,zero
1010c6c8:	290ab03a 	or	r5,r5,r4
1010c6cc:	28a2b03a 	or	r17,r5,r2
1010c6d0:	0021883a 	mov	r16,zero
1010c6d4:	003fa206 	br	1010c560 <__alt_data_end+0xfffec560>
1010c6d8:	2090b03a 	or	r8,r4,r2
1010c6dc:	40018e26 	beq	r8,zero,1010cd18 <__subdf3+0x83c>
1010c6e0:	1007883a 	mov	r3,r2
1010c6e4:	2023883a 	mov	r17,r4
1010c6e8:	888001cc 	andi	r2,r17,7
1010c6ec:	103f9e1e 	bne	r2,zero,1010c568 <__alt_data_end+0xfffec568>
1010c6f0:	1804977a 	slli	r2,r3,29
1010c6f4:	8822d0fa 	srli	r17,r17,3
1010c6f8:	1810d0fa 	srli	r8,r3,3
1010c6fc:	9100004c 	andi	r4,r18,1
1010c700:	1444b03a 	or	r2,r2,r17
1010c704:	00c1ffc4 	movi	r3,2047
1010c708:	80c02826 	beq	r16,r3,1010c7ac <__subdf3+0x2d0>
1010c70c:	01400434 	movhi	r5,16
1010c710:	297fffc4 	addi	r5,r5,-1
1010c714:	80e0703a 	and	r16,r16,r3
1010c718:	414a703a 	and	r5,r8,r5
1010c71c:	003fa806 	br	1010c5c0 <__alt_data_end+0xfffec5c0>
1010c720:	0080630e 	bge	zero,r2,1010c8b0 <__subdf3+0x3d4>
1010c724:	48003026 	beq	r9,zero,1010c7e8 <__subdf3+0x30c>
1010c728:	0101ffc4 	movi	r4,2047
1010c72c:	813f8c26 	beq	r16,r4,1010c560 <__alt_data_end+0xfffec560>
1010c730:	29402034 	orhi	r5,r5,128
1010c734:	01000e04 	movi	r4,56
1010c738:	2080a90e 	bge	r4,r2,1010c9e0 <__subdf3+0x504>
1010c73c:	298cb03a 	or	r6,r5,r6
1010c740:	3012c03a 	cmpne	r9,r6,zero
1010c744:	0005883a 	mov	r2,zero
1010c748:	4c53883a 	add	r9,r9,r17
1010c74c:	4c63803a 	cmpltu	r17,r9,r17
1010c750:	10c7883a 	add	r3,r2,r3
1010c754:	88c7883a 	add	r3,r17,r3
1010c758:	4823883a 	mov	r17,r9
1010c75c:	1880202c 	andhi	r2,r3,128
1010c760:	1000d026 	beq	r2,zero,1010caa4 <__subdf3+0x5c8>
1010c764:	84000044 	addi	r16,r16,1
1010c768:	0081ffc4 	movi	r2,2047
1010c76c:	8080fe26 	beq	r16,r2,1010cb68 <__subdf3+0x68c>
1010c770:	00bfe034 	movhi	r2,65408
1010c774:	10bfffc4 	addi	r2,r2,-1
1010c778:	1886703a 	and	r3,r3,r2
1010c77c:	880ad07a 	srli	r5,r17,1
1010c780:	180497fa 	slli	r2,r3,31
1010c784:	8900004c 	andi	r4,r17,1
1010c788:	2922b03a 	or	r17,r5,r4
1010c78c:	1806d07a 	srli	r3,r3,1
1010c790:	1462b03a 	or	r17,r2,r17
1010c794:	3825883a 	mov	r18,r7
1010c798:	003f7106 	br	1010c560 <__alt_data_end+0xfffec560>
1010c79c:	2984b03a 	or	r2,r5,r6
1010c7a0:	103f6826 	beq	r2,zero,1010c544 <__alt_data_end+0xfffec544>
1010c7a4:	39c03fcc 	andi	r7,r7,255
1010c7a8:	003f6706 	br	1010c548 <__alt_data_end+0xfffec548>
1010c7ac:	4086b03a 	or	r3,r8,r2
1010c7b0:	18015226 	beq	r3,zero,1010ccfc <__subdf3+0x820>
1010c7b4:	00c00434 	movhi	r3,16
1010c7b8:	41400234 	orhi	r5,r8,8
1010c7bc:	18ffffc4 	addi	r3,r3,-1
1010c7c0:	28ca703a 	and	r5,r5,r3
1010c7c4:	003f7e06 	br	1010c5c0 <__alt_data_end+0xfffec5c0>
1010c7c8:	10bfffc4 	addi	r2,r2,-1
1010c7cc:	1000491e 	bne	r2,zero,1010c8f4 <__subdf3+0x418>
1010c7d0:	898fc83a 	sub	r7,r17,r6
1010c7d4:	89e3803a 	cmpltu	r17,r17,r7
1010c7d8:	1947c83a 	sub	r3,r3,r5
1010c7dc:	1c47c83a 	sub	r3,r3,r17
1010c7e0:	3823883a 	mov	r17,r7
1010c7e4:	003f9b06 	br	1010c654 <__alt_data_end+0xfffec654>
1010c7e8:	2988b03a 	or	r4,r5,r6
1010c7ec:	203f5c26 	beq	r4,zero,1010c560 <__alt_data_end+0xfffec560>
1010c7f0:	10bfffc4 	addi	r2,r2,-1
1010c7f4:	1000931e 	bne	r2,zero,1010ca44 <__subdf3+0x568>
1010c7f8:	898d883a 	add	r6,r17,r6
1010c7fc:	3463803a 	cmpltu	r17,r6,r17
1010c800:	1947883a 	add	r3,r3,r5
1010c804:	88c7883a 	add	r3,r17,r3
1010c808:	3023883a 	mov	r17,r6
1010c80c:	003fd306 	br	1010c75c <__alt_data_end+0xfffec75c>
1010c810:	1000541e 	bne	r2,zero,1010c964 <__subdf3+0x488>
1010c814:	80800044 	addi	r2,r16,1
1010c818:	1081ffcc 	andi	r2,r2,2047
1010c81c:	01000044 	movi	r4,1
1010c820:	2080a20e 	bge	r4,r2,1010caac <__subdf3+0x5d0>
1010c824:	8989c83a 	sub	r4,r17,r6
1010c828:	8905803a 	cmpltu	r2,r17,r4
1010c82c:	1967c83a 	sub	r19,r3,r5
1010c830:	98a7c83a 	sub	r19,r19,r2
1010c834:	9880202c 	andhi	r2,r19,128
1010c838:	10006326 	beq	r2,zero,1010c9c8 <__subdf3+0x4ec>
1010c83c:	3463c83a 	sub	r17,r6,r17
1010c840:	28c7c83a 	sub	r3,r5,r3
1010c844:	344d803a 	cmpltu	r6,r6,r17
1010c848:	19a7c83a 	sub	r19,r3,r6
1010c84c:	3825883a 	mov	r18,r7
1010c850:	983f861e 	bne	r19,zero,1010c66c <__alt_data_end+0xfffec66c>
1010c854:	8809883a 	mov	r4,r17
1010c858:	010cfdc0 	call	1010cfdc <__clzsi2>
1010c85c:	10800804 	addi	r2,r2,32
1010c860:	113ffe04 	addi	r4,r2,-8
1010c864:	00c007c4 	movi	r3,31
1010c868:	193f850e 	bge	r3,r4,1010c680 <__alt_data_end+0xfffec680>
1010c86c:	10bff604 	addi	r2,r2,-40
1010c870:	8884983a 	sll	r2,r17,r2
1010c874:	0023883a 	mov	r17,zero
1010c878:	243f880e 	bge	r4,r16,1010c69c <__alt_data_end+0xfffec69c>
1010c87c:	00ffe034 	movhi	r3,65408
1010c880:	18ffffc4 	addi	r3,r3,-1
1010c884:	8121c83a 	sub	r16,r16,r4
1010c888:	10c6703a 	and	r3,r2,r3
1010c88c:	003f3406 	br	1010c560 <__alt_data_end+0xfffec560>
1010c890:	9100004c 	andi	r4,r18,1
1010c894:	000b883a 	mov	r5,zero
1010c898:	0005883a 	mov	r2,zero
1010c89c:	003f4806 	br	1010c5c0 <__alt_data_end+0xfffec5c0>
1010c8a0:	298cb03a 	or	r6,r5,r6
1010c8a4:	300cc03a 	cmpne	r6,r6,zero
1010c8a8:	0005883a 	mov	r2,zero
1010c8ac:	003f6406 	br	1010c640 <__alt_data_end+0xfffec640>
1010c8b0:	10009a1e 	bne	r2,zero,1010cb1c <__subdf3+0x640>
1010c8b4:	82400044 	addi	r9,r16,1
1010c8b8:	4881ffcc 	andi	r2,r9,2047
1010c8bc:	02800044 	movi	r10,1
1010c8c0:	5080670e 	bge	r10,r2,1010ca60 <__subdf3+0x584>
1010c8c4:	0081ffc4 	movi	r2,2047
1010c8c8:	4880af26 	beq	r9,r2,1010cb88 <__subdf3+0x6ac>
1010c8cc:	898d883a 	add	r6,r17,r6
1010c8d0:	1945883a 	add	r2,r3,r5
1010c8d4:	3447803a 	cmpltu	r3,r6,r17
1010c8d8:	1887883a 	add	r3,r3,r2
1010c8dc:	182297fa 	slli	r17,r3,31
1010c8e0:	300cd07a 	srli	r6,r6,1
1010c8e4:	1806d07a 	srli	r3,r3,1
1010c8e8:	4821883a 	mov	r16,r9
1010c8ec:	89a2b03a 	or	r17,r17,r6
1010c8f0:	003f1b06 	br	1010c560 <__alt_data_end+0xfffec560>
1010c8f4:	0101ffc4 	movi	r4,2047
1010c8f8:	813f441e 	bne	r16,r4,1010c60c <__alt_data_end+0xfffec60c>
1010c8fc:	003f1806 	br	1010c560 <__alt_data_end+0xfffec560>
1010c900:	843ff844 	addi	r16,r16,-31
1010c904:	01400804 	movi	r5,32
1010c908:	1408d83a 	srl	r4,r2,r16
1010c90c:	19405026 	beq	r3,r5,1010ca50 <__subdf3+0x574>
1010c910:	01401004 	movi	r5,64
1010c914:	28c7c83a 	sub	r3,r5,r3
1010c918:	10c4983a 	sll	r2,r2,r3
1010c91c:	88a2b03a 	or	r17,r17,r2
1010c920:	8822c03a 	cmpne	r17,r17,zero
1010c924:	2462b03a 	or	r17,r4,r17
1010c928:	0007883a 	mov	r3,zero
1010c92c:	0021883a 	mov	r16,zero
1010c930:	003f6d06 	br	1010c6e8 <__alt_data_end+0xfffec6e8>
1010c934:	11fff804 	addi	r7,r2,-32
1010c938:	01000804 	movi	r4,32
1010c93c:	29ced83a 	srl	r7,r5,r7
1010c940:	11004526 	beq	r2,r4,1010ca58 <__subdf3+0x57c>
1010c944:	01001004 	movi	r4,64
1010c948:	2089c83a 	sub	r4,r4,r2
1010c94c:	2904983a 	sll	r2,r5,r4
1010c950:	118cb03a 	or	r6,r2,r6
1010c954:	300cc03a 	cmpne	r6,r6,zero
1010c958:	398cb03a 	or	r6,r7,r6
1010c95c:	0005883a 	mov	r2,zero
1010c960:	003f3706 	br	1010c640 <__alt_data_end+0xfffec640>
1010c964:	80002a26 	beq	r16,zero,1010ca10 <__subdf3+0x534>
1010c968:	0101ffc4 	movi	r4,2047
1010c96c:	49006626 	beq	r9,r4,1010cb08 <__subdf3+0x62c>
1010c970:	0085c83a 	sub	r2,zero,r2
1010c974:	18c02034 	orhi	r3,r3,128
1010c978:	01000e04 	movi	r4,56
1010c97c:	20807e16 	blt	r4,r2,1010cb78 <__subdf3+0x69c>
1010c980:	010007c4 	movi	r4,31
1010c984:	2080e716 	blt	r4,r2,1010cd24 <__subdf3+0x848>
1010c988:	01000804 	movi	r4,32
1010c98c:	2089c83a 	sub	r4,r4,r2
1010c990:	1914983a 	sll	r10,r3,r4
1010c994:	8890d83a 	srl	r8,r17,r2
1010c998:	8908983a 	sll	r4,r17,r4
1010c99c:	1884d83a 	srl	r2,r3,r2
1010c9a0:	5222b03a 	or	r17,r10,r8
1010c9a4:	2006c03a 	cmpne	r3,r4,zero
1010c9a8:	88e2b03a 	or	r17,r17,r3
1010c9ac:	3463c83a 	sub	r17,r6,r17
1010c9b0:	2885c83a 	sub	r2,r5,r2
1010c9b4:	344d803a 	cmpltu	r6,r6,r17
1010c9b8:	1187c83a 	sub	r3,r2,r6
1010c9bc:	4821883a 	mov	r16,r9
1010c9c0:	3825883a 	mov	r18,r7
1010c9c4:	003f2306 	br	1010c654 <__alt_data_end+0xfffec654>
1010c9c8:	24d0b03a 	or	r8,r4,r19
1010c9cc:	40001b1e 	bne	r8,zero,1010ca3c <__subdf3+0x560>
1010c9d0:	0005883a 	mov	r2,zero
1010c9d4:	0009883a 	mov	r4,zero
1010c9d8:	0021883a 	mov	r16,zero
1010c9dc:	003f4906 	br	1010c704 <__alt_data_end+0xfffec704>
1010c9e0:	010007c4 	movi	r4,31
1010c9e4:	20803a16 	blt	r4,r2,1010cad0 <__subdf3+0x5f4>
1010c9e8:	01000804 	movi	r4,32
1010c9ec:	2089c83a 	sub	r4,r4,r2
1010c9f0:	2912983a 	sll	r9,r5,r4
1010c9f4:	3090d83a 	srl	r8,r6,r2
1010c9f8:	3108983a 	sll	r4,r6,r4
1010c9fc:	2884d83a 	srl	r2,r5,r2
1010ca00:	4a12b03a 	or	r9,r9,r8
1010ca04:	2008c03a 	cmpne	r4,r4,zero
1010ca08:	4912b03a 	or	r9,r9,r4
1010ca0c:	003f4e06 	br	1010c748 <__alt_data_end+0xfffec748>
1010ca10:	1c48b03a 	or	r4,r3,r17
1010ca14:	20003c26 	beq	r4,zero,1010cb08 <__subdf3+0x62c>
1010ca18:	0084303a 	nor	r2,zero,r2
1010ca1c:	1000381e 	bne	r2,zero,1010cb00 <__subdf3+0x624>
1010ca20:	3463c83a 	sub	r17,r6,r17
1010ca24:	28c5c83a 	sub	r2,r5,r3
1010ca28:	344d803a 	cmpltu	r6,r6,r17
1010ca2c:	1187c83a 	sub	r3,r2,r6
1010ca30:	4821883a 	mov	r16,r9
1010ca34:	3825883a 	mov	r18,r7
1010ca38:	003f0606 	br	1010c654 <__alt_data_end+0xfffec654>
1010ca3c:	2023883a 	mov	r17,r4
1010ca40:	003f0906 	br	1010c668 <__alt_data_end+0xfffec668>
1010ca44:	0101ffc4 	movi	r4,2047
1010ca48:	813f3a1e 	bne	r16,r4,1010c734 <__alt_data_end+0xfffec734>
1010ca4c:	003ec406 	br	1010c560 <__alt_data_end+0xfffec560>
1010ca50:	0005883a 	mov	r2,zero
1010ca54:	003fb106 	br	1010c91c <__alt_data_end+0xfffec91c>
1010ca58:	0005883a 	mov	r2,zero
1010ca5c:	003fbc06 	br	1010c950 <__alt_data_end+0xfffec950>
1010ca60:	1c44b03a 	or	r2,r3,r17
1010ca64:	80008e1e 	bne	r16,zero,1010cca0 <__subdf3+0x7c4>
1010ca68:	1000c826 	beq	r2,zero,1010cd8c <__subdf3+0x8b0>
1010ca6c:	2984b03a 	or	r2,r5,r6
1010ca70:	103ebb26 	beq	r2,zero,1010c560 <__alt_data_end+0xfffec560>
1010ca74:	8989883a 	add	r4,r17,r6
1010ca78:	1945883a 	add	r2,r3,r5
1010ca7c:	2447803a 	cmpltu	r3,r4,r17
1010ca80:	1887883a 	add	r3,r3,r2
1010ca84:	1880202c 	andhi	r2,r3,128
1010ca88:	2023883a 	mov	r17,r4
1010ca8c:	103f1626 	beq	r2,zero,1010c6e8 <__alt_data_end+0xfffec6e8>
1010ca90:	00bfe034 	movhi	r2,65408
1010ca94:	10bfffc4 	addi	r2,r2,-1
1010ca98:	5021883a 	mov	r16,r10
1010ca9c:	1886703a 	and	r3,r3,r2
1010caa0:	003eaf06 	br	1010c560 <__alt_data_end+0xfffec560>
1010caa4:	3825883a 	mov	r18,r7
1010caa8:	003f0f06 	br	1010c6e8 <__alt_data_end+0xfffec6e8>
1010caac:	1c44b03a 	or	r2,r3,r17
1010cab0:	8000251e 	bne	r16,zero,1010cb48 <__subdf3+0x66c>
1010cab4:	1000661e 	bne	r2,zero,1010cc50 <__subdf3+0x774>
1010cab8:	2990b03a 	or	r8,r5,r6
1010cabc:	40009626 	beq	r8,zero,1010cd18 <__subdf3+0x83c>
1010cac0:	2807883a 	mov	r3,r5
1010cac4:	3023883a 	mov	r17,r6
1010cac8:	3825883a 	mov	r18,r7
1010cacc:	003ea406 	br	1010c560 <__alt_data_end+0xfffec560>
1010cad0:	127ff804 	addi	r9,r2,-32
1010cad4:	01000804 	movi	r4,32
1010cad8:	2a52d83a 	srl	r9,r5,r9
1010cadc:	11008c26 	beq	r2,r4,1010cd10 <__subdf3+0x834>
1010cae0:	01001004 	movi	r4,64
1010cae4:	2085c83a 	sub	r2,r4,r2
1010cae8:	2884983a 	sll	r2,r5,r2
1010caec:	118cb03a 	or	r6,r2,r6
1010caf0:	300cc03a 	cmpne	r6,r6,zero
1010caf4:	4992b03a 	or	r9,r9,r6
1010caf8:	0005883a 	mov	r2,zero
1010cafc:	003f1206 	br	1010c748 <__alt_data_end+0xfffec748>
1010cb00:	0101ffc4 	movi	r4,2047
1010cb04:	493f9c1e 	bne	r9,r4,1010c978 <__alt_data_end+0xfffec978>
1010cb08:	2807883a 	mov	r3,r5
1010cb0c:	3023883a 	mov	r17,r6
1010cb10:	4821883a 	mov	r16,r9
1010cb14:	3825883a 	mov	r18,r7
1010cb18:	003e9106 	br	1010c560 <__alt_data_end+0xfffec560>
1010cb1c:	80001f1e 	bne	r16,zero,1010cb9c <__subdf3+0x6c0>
1010cb20:	1c48b03a 	or	r4,r3,r17
1010cb24:	20005a26 	beq	r4,zero,1010cc90 <__subdf3+0x7b4>
1010cb28:	0084303a 	nor	r2,zero,r2
1010cb2c:	1000561e 	bne	r2,zero,1010cc88 <__subdf3+0x7ac>
1010cb30:	89a3883a 	add	r17,r17,r6
1010cb34:	1945883a 	add	r2,r3,r5
1010cb38:	898d803a 	cmpltu	r6,r17,r6
1010cb3c:	3087883a 	add	r3,r6,r2
1010cb40:	4821883a 	mov	r16,r9
1010cb44:	003f0506 	br	1010c75c <__alt_data_end+0xfffec75c>
1010cb48:	10002b1e 	bne	r2,zero,1010cbf8 <__subdf3+0x71c>
1010cb4c:	2984b03a 	or	r2,r5,r6
1010cb50:	10008026 	beq	r2,zero,1010cd54 <__subdf3+0x878>
1010cb54:	2807883a 	mov	r3,r5
1010cb58:	3023883a 	mov	r17,r6
1010cb5c:	3825883a 	mov	r18,r7
1010cb60:	0401ffc4 	movi	r16,2047
1010cb64:	003e7e06 	br	1010c560 <__alt_data_end+0xfffec560>
1010cb68:	3809883a 	mov	r4,r7
1010cb6c:	0011883a 	mov	r8,zero
1010cb70:	0005883a 	mov	r2,zero
1010cb74:	003ee306 	br	1010c704 <__alt_data_end+0xfffec704>
1010cb78:	1c62b03a 	or	r17,r3,r17
1010cb7c:	8822c03a 	cmpne	r17,r17,zero
1010cb80:	0005883a 	mov	r2,zero
1010cb84:	003f8906 	br	1010c9ac <__alt_data_end+0xfffec9ac>
1010cb88:	3809883a 	mov	r4,r7
1010cb8c:	4821883a 	mov	r16,r9
1010cb90:	0011883a 	mov	r8,zero
1010cb94:	0005883a 	mov	r2,zero
1010cb98:	003eda06 	br	1010c704 <__alt_data_end+0xfffec704>
1010cb9c:	0101ffc4 	movi	r4,2047
1010cba0:	49003b26 	beq	r9,r4,1010cc90 <__subdf3+0x7b4>
1010cba4:	0085c83a 	sub	r2,zero,r2
1010cba8:	18c02034 	orhi	r3,r3,128
1010cbac:	01000e04 	movi	r4,56
1010cbb0:	20806e16 	blt	r4,r2,1010cd6c <__subdf3+0x890>
1010cbb4:	010007c4 	movi	r4,31
1010cbb8:	20807716 	blt	r4,r2,1010cd98 <__subdf3+0x8bc>
1010cbbc:	01000804 	movi	r4,32
1010cbc0:	2089c83a 	sub	r4,r4,r2
1010cbc4:	1914983a 	sll	r10,r3,r4
1010cbc8:	8890d83a 	srl	r8,r17,r2
1010cbcc:	8908983a 	sll	r4,r17,r4
1010cbd0:	1884d83a 	srl	r2,r3,r2
1010cbd4:	5222b03a 	or	r17,r10,r8
1010cbd8:	2006c03a 	cmpne	r3,r4,zero
1010cbdc:	88e2b03a 	or	r17,r17,r3
1010cbe0:	89a3883a 	add	r17,r17,r6
1010cbe4:	1145883a 	add	r2,r2,r5
1010cbe8:	898d803a 	cmpltu	r6,r17,r6
1010cbec:	3087883a 	add	r3,r6,r2
1010cbf0:	4821883a 	mov	r16,r9
1010cbf4:	003ed906 	br	1010c75c <__alt_data_end+0xfffec75c>
1010cbf8:	2984b03a 	or	r2,r5,r6
1010cbfc:	10004226 	beq	r2,zero,1010cd08 <__subdf3+0x82c>
1010cc00:	1808d0fa 	srli	r4,r3,3
1010cc04:	8822d0fa 	srli	r17,r17,3
1010cc08:	1806977a 	slli	r3,r3,29
1010cc0c:	2080022c 	andhi	r2,r4,8
1010cc10:	1c62b03a 	or	r17,r3,r17
1010cc14:	10000826 	beq	r2,zero,1010cc38 <__subdf3+0x75c>
1010cc18:	2812d0fa 	srli	r9,r5,3
1010cc1c:	4880022c 	andhi	r2,r9,8
1010cc20:	1000051e 	bne	r2,zero,1010cc38 <__subdf3+0x75c>
1010cc24:	300cd0fa 	srli	r6,r6,3
1010cc28:	2804977a 	slli	r2,r5,29
1010cc2c:	4809883a 	mov	r4,r9
1010cc30:	3825883a 	mov	r18,r7
1010cc34:	11a2b03a 	or	r17,r2,r6
1010cc38:	8806d77a 	srli	r3,r17,29
1010cc3c:	200890fa 	slli	r4,r4,3
1010cc40:	882290fa 	slli	r17,r17,3
1010cc44:	0401ffc4 	movi	r16,2047
1010cc48:	1906b03a 	or	r3,r3,r4
1010cc4c:	003e4406 	br	1010c560 <__alt_data_end+0xfffec560>
1010cc50:	2984b03a 	or	r2,r5,r6
1010cc54:	103e4226 	beq	r2,zero,1010c560 <__alt_data_end+0xfffec560>
1010cc58:	8989c83a 	sub	r4,r17,r6
1010cc5c:	8911803a 	cmpltu	r8,r17,r4
1010cc60:	1945c83a 	sub	r2,r3,r5
1010cc64:	1205c83a 	sub	r2,r2,r8
1010cc68:	1200202c 	andhi	r8,r2,128
1010cc6c:	403e9a26 	beq	r8,zero,1010c6d8 <__alt_data_end+0xfffec6d8>
1010cc70:	3463c83a 	sub	r17,r6,r17
1010cc74:	28c5c83a 	sub	r2,r5,r3
1010cc78:	344d803a 	cmpltu	r6,r6,r17
1010cc7c:	1187c83a 	sub	r3,r2,r6
1010cc80:	3825883a 	mov	r18,r7
1010cc84:	003e3606 	br	1010c560 <__alt_data_end+0xfffec560>
1010cc88:	0101ffc4 	movi	r4,2047
1010cc8c:	493fc71e 	bne	r9,r4,1010cbac <__alt_data_end+0xfffecbac>
1010cc90:	2807883a 	mov	r3,r5
1010cc94:	3023883a 	mov	r17,r6
1010cc98:	4821883a 	mov	r16,r9
1010cc9c:	003e3006 	br	1010c560 <__alt_data_end+0xfffec560>
1010cca0:	10003626 	beq	r2,zero,1010cd7c <__subdf3+0x8a0>
1010cca4:	2984b03a 	or	r2,r5,r6
1010cca8:	10001726 	beq	r2,zero,1010cd08 <__subdf3+0x82c>
1010ccac:	1808d0fa 	srli	r4,r3,3
1010ccb0:	8822d0fa 	srli	r17,r17,3
1010ccb4:	1806977a 	slli	r3,r3,29
1010ccb8:	2080022c 	andhi	r2,r4,8
1010ccbc:	1c62b03a 	or	r17,r3,r17
1010ccc0:	10000726 	beq	r2,zero,1010cce0 <__subdf3+0x804>
1010ccc4:	2812d0fa 	srli	r9,r5,3
1010ccc8:	4880022c 	andhi	r2,r9,8
1010cccc:	1000041e 	bne	r2,zero,1010cce0 <__subdf3+0x804>
1010ccd0:	300cd0fa 	srli	r6,r6,3
1010ccd4:	2804977a 	slli	r2,r5,29
1010ccd8:	4809883a 	mov	r4,r9
1010ccdc:	11a2b03a 	or	r17,r2,r6
1010cce0:	8806d77a 	srli	r3,r17,29
1010cce4:	200890fa 	slli	r4,r4,3
1010cce8:	882290fa 	slli	r17,r17,3
1010ccec:	3825883a 	mov	r18,r7
1010ccf0:	1906b03a 	or	r3,r3,r4
1010ccf4:	0401ffc4 	movi	r16,2047
1010ccf8:	003e1906 	br	1010c560 <__alt_data_end+0xfffec560>
1010ccfc:	000b883a 	mov	r5,zero
1010cd00:	0005883a 	mov	r2,zero
1010cd04:	003e2e06 	br	1010c5c0 <__alt_data_end+0xfffec5c0>
1010cd08:	0401ffc4 	movi	r16,2047
1010cd0c:	003e1406 	br	1010c560 <__alt_data_end+0xfffec560>
1010cd10:	0005883a 	mov	r2,zero
1010cd14:	003f7506 	br	1010caec <__alt_data_end+0xfffecaec>
1010cd18:	0005883a 	mov	r2,zero
1010cd1c:	0009883a 	mov	r4,zero
1010cd20:	003e7806 	br	1010c704 <__alt_data_end+0xfffec704>
1010cd24:	123ff804 	addi	r8,r2,-32
1010cd28:	01000804 	movi	r4,32
1010cd2c:	1a10d83a 	srl	r8,r3,r8
1010cd30:	11002526 	beq	r2,r4,1010cdc8 <__subdf3+0x8ec>
1010cd34:	01001004 	movi	r4,64
1010cd38:	2085c83a 	sub	r2,r4,r2
1010cd3c:	1884983a 	sll	r2,r3,r2
1010cd40:	1444b03a 	or	r2,r2,r17
1010cd44:	1004c03a 	cmpne	r2,r2,zero
1010cd48:	40a2b03a 	or	r17,r8,r2
1010cd4c:	0005883a 	mov	r2,zero
1010cd50:	003f1606 	br	1010c9ac <__alt_data_end+0xfffec9ac>
1010cd54:	02000434 	movhi	r8,16
1010cd58:	0009883a 	mov	r4,zero
1010cd5c:	423fffc4 	addi	r8,r8,-1
1010cd60:	00bfffc4 	movi	r2,-1
1010cd64:	0401ffc4 	movi	r16,2047
1010cd68:	003e6606 	br	1010c704 <__alt_data_end+0xfffec704>
1010cd6c:	1c62b03a 	or	r17,r3,r17
1010cd70:	8822c03a 	cmpne	r17,r17,zero
1010cd74:	0005883a 	mov	r2,zero
1010cd78:	003f9906 	br	1010cbe0 <__alt_data_end+0xfffecbe0>
1010cd7c:	2807883a 	mov	r3,r5
1010cd80:	3023883a 	mov	r17,r6
1010cd84:	0401ffc4 	movi	r16,2047
1010cd88:	003df506 	br	1010c560 <__alt_data_end+0xfffec560>
1010cd8c:	2807883a 	mov	r3,r5
1010cd90:	3023883a 	mov	r17,r6
1010cd94:	003df206 	br	1010c560 <__alt_data_end+0xfffec560>
1010cd98:	123ff804 	addi	r8,r2,-32
1010cd9c:	01000804 	movi	r4,32
1010cda0:	1a10d83a 	srl	r8,r3,r8
1010cda4:	11000a26 	beq	r2,r4,1010cdd0 <__subdf3+0x8f4>
1010cda8:	01001004 	movi	r4,64
1010cdac:	2085c83a 	sub	r2,r4,r2
1010cdb0:	1884983a 	sll	r2,r3,r2
1010cdb4:	1444b03a 	or	r2,r2,r17
1010cdb8:	1004c03a 	cmpne	r2,r2,zero
1010cdbc:	40a2b03a 	or	r17,r8,r2
1010cdc0:	0005883a 	mov	r2,zero
1010cdc4:	003f8606 	br	1010cbe0 <__alt_data_end+0xfffecbe0>
1010cdc8:	0005883a 	mov	r2,zero
1010cdcc:	003fdc06 	br	1010cd40 <__alt_data_end+0xfffecd40>
1010cdd0:	0005883a 	mov	r2,zero
1010cdd4:	003ff706 	br	1010cdb4 <__alt_data_end+0xfffecdb4>

1010cdd8 <__fixdfsi>:
1010cdd8:	280cd53a 	srli	r6,r5,20
1010cddc:	00c00434 	movhi	r3,16
1010cde0:	18ffffc4 	addi	r3,r3,-1
1010cde4:	3181ffcc 	andi	r6,r6,2047
1010cde8:	01c0ff84 	movi	r7,1022
1010cdec:	28c6703a 	and	r3,r5,r3
1010cdf0:	280ad7fa 	srli	r5,r5,31
1010cdf4:	3980120e 	bge	r7,r6,1010ce40 <__fixdfsi+0x68>
1010cdf8:	00810744 	movi	r2,1053
1010cdfc:	11800c16 	blt	r2,r6,1010ce30 <__fixdfsi+0x58>
1010ce00:	00810cc4 	movi	r2,1075
1010ce04:	1185c83a 	sub	r2,r2,r6
1010ce08:	01c007c4 	movi	r7,31
1010ce0c:	18c00434 	orhi	r3,r3,16
1010ce10:	38800d16 	blt	r7,r2,1010ce48 <__fixdfsi+0x70>
1010ce14:	31befb44 	addi	r6,r6,-1043
1010ce18:	2084d83a 	srl	r2,r4,r2
1010ce1c:	1986983a 	sll	r3,r3,r6
1010ce20:	1884b03a 	or	r2,r3,r2
1010ce24:	28000726 	beq	r5,zero,1010ce44 <__fixdfsi+0x6c>
1010ce28:	0085c83a 	sub	r2,zero,r2
1010ce2c:	f800283a 	ret
1010ce30:	00a00034 	movhi	r2,32768
1010ce34:	10bfffc4 	addi	r2,r2,-1
1010ce38:	2885883a 	add	r2,r5,r2
1010ce3c:	f800283a 	ret
1010ce40:	0005883a 	mov	r2,zero
1010ce44:	f800283a 	ret
1010ce48:	008104c4 	movi	r2,1043
1010ce4c:	1185c83a 	sub	r2,r2,r6
1010ce50:	1884d83a 	srl	r2,r3,r2
1010ce54:	003ff306 	br	1010ce24 <__alt_data_end+0xfffece24>

1010ce58 <__floatsidf>:
1010ce58:	defffd04 	addi	sp,sp,-12
1010ce5c:	dfc00215 	stw	ra,8(sp)
1010ce60:	dc400115 	stw	r17,4(sp)
1010ce64:	dc000015 	stw	r16,0(sp)
1010ce68:	20002b26 	beq	r4,zero,1010cf18 <__floatsidf+0xc0>
1010ce6c:	2023883a 	mov	r17,r4
1010ce70:	2020d7fa 	srli	r16,r4,31
1010ce74:	20002d16 	blt	r4,zero,1010cf2c <__floatsidf+0xd4>
1010ce78:	8809883a 	mov	r4,r17
1010ce7c:	010cfdc0 	call	1010cfdc <__clzsi2>
1010ce80:	01410784 	movi	r5,1054
1010ce84:	288bc83a 	sub	r5,r5,r2
1010ce88:	01010cc4 	movi	r4,1075
1010ce8c:	2149c83a 	sub	r4,r4,r5
1010ce90:	00c007c4 	movi	r3,31
1010ce94:	1900160e 	bge	r3,r4,1010cef0 <__floatsidf+0x98>
1010ce98:	00c104c4 	movi	r3,1043
1010ce9c:	1947c83a 	sub	r3,r3,r5
1010cea0:	88c6983a 	sll	r3,r17,r3
1010cea4:	00800434 	movhi	r2,16
1010cea8:	10bfffc4 	addi	r2,r2,-1
1010ceac:	1886703a 	and	r3,r3,r2
1010ceb0:	2941ffcc 	andi	r5,r5,2047
1010ceb4:	800d883a 	mov	r6,r16
1010ceb8:	0005883a 	mov	r2,zero
1010cebc:	280a953a 	slli	r5,r5,20
1010cec0:	31803fcc 	andi	r6,r6,255
1010cec4:	01000434 	movhi	r4,16
1010cec8:	300c97fa 	slli	r6,r6,31
1010cecc:	213fffc4 	addi	r4,r4,-1
1010ced0:	1906703a 	and	r3,r3,r4
1010ced4:	1946b03a 	or	r3,r3,r5
1010ced8:	1986b03a 	or	r3,r3,r6
1010cedc:	dfc00217 	ldw	ra,8(sp)
1010cee0:	dc400117 	ldw	r17,4(sp)
1010cee4:	dc000017 	ldw	r16,0(sp)
1010cee8:	dec00304 	addi	sp,sp,12
1010ceec:	f800283a 	ret
1010cef0:	00c002c4 	movi	r3,11
1010cef4:	1887c83a 	sub	r3,r3,r2
1010cef8:	88c6d83a 	srl	r3,r17,r3
1010cefc:	8904983a 	sll	r2,r17,r4
1010cf00:	01000434 	movhi	r4,16
1010cf04:	213fffc4 	addi	r4,r4,-1
1010cf08:	2941ffcc 	andi	r5,r5,2047
1010cf0c:	1906703a 	and	r3,r3,r4
1010cf10:	800d883a 	mov	r6,r16
1010cf14:	003fe906 	br	1010cebc <__alt_data_end+0xfffecebc>
1010cf18:	000d883a 	mov	r6,zero
1010cf1c:	000b883a 	mov	r5,zero
1010cf20:	0007883a 	mov	r3,zero
1010cf24:	0005883a 	mov	r2,zero
1010cf28:	003fe406 	br	1010cebc <__alt_data_end+0xfffecebc>
1010cf2c:	0123c83a 	sub	r17,zero,r4
1010cf30:	003fd106 	br	1010ce78 <__alt_data_end+0xfffece78>

1010cf34 <__floatunsidf>:
1010cf34:	defffe04 	addi	sp,sp,-8
1010cf38:	dc000015 	stw	r16,0(sp)
1010cf3c:	dfc00115 	stw	ra,4(sp)
1010cf40:	2021883a 	mov	r16,r4
1010cf44:	20002226 	beq	r4,zero,1010cfd0 <__floatunsidf+0x9c>
1010cf48:	010cfdc0 	call	1010cfdc <__clzsi2>
1010cf4c:	01010784 	movi	r4,1054
1010cf50:	2089c83a 	sub	r4,r4,r2
1010cf54:	01810cc4 	movi	r6,1075
1010cf58:	310dc83a 	sub	r6,r6,r4
1010cf5c:	00c007c4 	movi	r3,31
1010cf60:	1980120e 	bge	r3,r6,1010cfac <__floatunsidf+0x78>
1010cf64:	00c104c4 	movi	r3,1043
1010cf68:	1907c83a 	sub	r3,r3,r4
1010cf6c:	80ca983a 	sll	r5,r16,r3
1010cf70:	00800434 	movhi	r2,16
1010cf74:	10bfffc4 	addi	r2,r2,-1
1010cf78:	2101ffcc 	andi	r4,r4,2047
1010cf7c:	0021883a 	mov	r16,zero
1010cf80:	288a703a 	and	r5,r5,r2
1010cf84:	2008953a 	slli	r4,r4,20
1010cf88:	00c00434 	movhi	r3,16
1010cf8c:	18ffffc4 	addi	r3,r3,-1
1010cf90:	28c6703a 	and	r3,r5,r3
1010cf94:	8005883a 	mov	r2,r16
1010cf98:	1906b03a 	or	r3,r3,r4
1010cf9c:	dfc00117 	ldw	ra,4(sp)
1010cfa0:	dc000017 	ldw	r16,0(sp)
1010cfa4:	dec00204 	addi	sp,sp,8
1010cfa8:	f800283a 	ret
1010cfac:	00c002c4 	movi	r3,11
1010cfb0:	188bc83a 	sub	r5,r3,r2
1010cfb4:	814ad83a 	srl	r5,r16,r5
1010cfb8:	00c00434 	movhi	r3,16
1010cfbc:	18ffffc4 	addi	r3,r3,-1
1010cfc0:	81a0983a 	sll	r16,r16,r6
1010cfc4:	2101ffcc 	andi	r4,r4,2047
1010cfc8:	28ca703a 	and	r5,r5,r3
1010cfcc:	003fed06 	br	1010cf84 <__alt_data_end+0xfffecf84>
1010cfd0:	0009883a 	mov	r4,zero
1010cfd4:	000b883a 	mov	r5,zero
1010cfd8:	003fea06 	br	1010cf84 <__alt_data_end+0xfffecf84>

1010cfdc <__clzsi2>:
1010cfdc:	00bfffd4 	movui	r2,65535
1010cfe0:	11000536 	bltu	r2,r4,1010cff8 <__clzsi2+0x1c>
1010cfe4:	00803fc4 	movi	r2,255
1010cfe8:	11000f36 	bltu	r2,r4,1010d028 <__clzsi2+0x4c>
1010cfec:	00800804 	movi	r2,32
1010cff0:	0007883a 	mov	r3,zero
1010cff4:	00000506 	br	1010d00c <__clzsi2+0x30>
1010cff8:	00804034 	movhi	r2,256
1010cffc:	10bfffc4 	addi	r2,r2,-1
1010d000:	11000c2e 	bgeu	r2,r4,1010d034 <__clzsi2+0x58>
1010d004:	00800204 	movi	r2,8
1010d008:	00c00604 	movi	r3,24
1010d00c:	20c8d83a 	srl	r4,r4,r3
1010d010:	00c40474 	movhi	r3,4113
1010d014:	18fe7d04 	addi	r3,r3,-1548
1010d018:	1909883a 	add	r4,r3,r4
1010d01c:	20c00003 	ldbu	r3,0(r4)
1010d020:	10c5c83a 	sub	r2,r2,r3
1010d024:	f800283a 	ret
1010d028:	00800604 	movi	r2,24
1010d02c:	00c00204 	movi	r3,8
1010d030:	003ff606 	br	1010d00c <__alt_data_end+0xfffed00c>
1010d034:	00800404 	movi	r2,16
1010d038:	1007883a 	mov	r3,r2
1010d03c:	003ff306 	br	1010d00c <__alt_data_end+0xfffed00c>

1010d040 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d040:	defffe04 	addi	sp,sp,-8
1010d044:	dfc00115 	stw	ra,4(sp)
1010d048:	df000015 	stw	fp,0(sp)
1010d04c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d050:	00840474 	movhi	r2,4113
1010d054:	10858004 	addi	r2,r2,5632
1010d058:	10800017 	ldw	r2,0(r2)
1010d05c:	10000526 	beq	r2,zero,1010d074 <alt_get_errno+0x34>
1010d060:	00840474 	movhi	r2,4113
1010d064:	10858004 	addi	r2,r2,5632
1010d068:	10800017 	ldw	r2,0(r2)
1010d06c:	103ee83a 	callr	r2
1010d070:	00000206 	br	1010d07c <alt_get_errno+0x3c>
1010d074:	00840474 	movhi	r2,4113
1010d078:	108c4604 	addi	r2,r2,12568
}
1010d07c:	e037883a 	mov	sp,fp
1010d080:	dfc00117 	ldw	ra,4(sp)
1010d084:	df000017 	ldw	fp,0(sp)
1010d088:	dec00204 	addi	sp,sp,8
1010d08c:	f800283a 	ret

1010d090 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1010d090:	defffb04 	addi	sp,sp,-20
1010d094:	dfc00415 	stw	ra,16(sp)
1010d098:	df000315 	stw	fp,12(sp)
1010d09c:	df000304 	addi	fp,sp,12
1010d0a0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1010d0a4:	e0bfff17 	ldw	r2,-4(fp)
1010d0a8:	10000616 	blt	r2,zero,1010d0c4 <close+0x34>
1010d0ac:	e0bfff17 	ldw	r2,-4(fp)
1010d0b0:	10c00324 	muli	r3,r2,12
1010d0b4:	00840474 	movhi	r2,4113
1010d0b8:	1080fd04 	addi	r2,r2,1012
1010d0bc:	1885883a 	add	r2,r3,r2
1010d0c0:	00000106 	br	1010d0c8 <close+0x38>
1010d0c4:	0005883a 	mov	r2,zero
1010d0c8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1010d0cc:	e0bffd17 	ldw	r2,-12(fp)
1010d0d0:	10001926 	beq	r2,zero,1010d138 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1010d0d4:	e0bffd17 	ldw	r2,-12(fp)
1010d0d8:	10800017 	ldw	r2,0(r2)
1010d0dc:	10800417 	ldw	r2,16(r2)
1010d0e0:	10000626 	beq	r2,zero,1010d0fc <close+0x6c>
1010d0e4:	e0bffd17 	ldw	r2,-12(fp)
1010d0e8:	10800017 	ldw	r2,0(r2)
1010d0ec:	10800417 	ldw	r2,16(r2)
1010d0f0:	e13ffd17 	ldw	r4,-12(fp)
1010d0f4:	103ee83a 	callr	r2
1010d0f8:	00000106 	br	1010d100 <close+0x70>
1010d0fc:	0005883a 	mov	r2,zero
1010d100:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1010d104:	e13fff17 	ldw	r4,-4(fp)
1010d108:	010d7a00 	call	1010d7a0 <alt_release_fd>
    if (rval < 0)
1010d10c:	e0bffe17 	ldw	r2,-8(fp)
1010d110:	1000070e 	bge	r2,zero,1010d130 <close+0xa0>
    {
      ALT_ERRNO = -rval;
1010d114:	010d0400 	call	1010d040 <alt_get_errno>
1010d118:	1007883a 	mov	r3,r2
1010d11c:	e0bffe17 	ldw	r2,-8(fp)
1010d120:	0085c83a 	sub	r2,zero,r2
1010d124:	18800015 	stw	r2,0(r3)
      return -1;
1010d128:	00bfffc4 	movi	r2,-1
1010d12c:	00000706 	br	1010d14c <close+0xbc>
    }
    return 0;
1010d130:	0005883a 	mov	r2,zero
1010d134:	00000506 	br	1010d14c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d138:	010d0400 	call	1010d040 <alt_get_errno>
1010d13c:	1007883a 	mov	r3,r2
1010d140:	00801444 	movi	r2,81
1010d144:	18800015 	stw	r2,0(r3)
    return -1;
1010d148:	00bfffc4 	movi	r2,-1
  }
}
1010d14c:	e037883a 	mov	sp,fp
1010d150:	dfc00117 	ldw	ra,4(sp)
1010d154:	df000017 	ldw	fp,0(sp)
1010d158:	dec00204 	addi	sp,sp,8
1010d15c:	f800283a 	ret

1010d160 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1010d160:	defffc04 	addi	sp,sp,-16
1010d164:	df000315 	stw	fp,12(sp)
1010d168:	df000304 	addi	fp,sp,12
1010d16c:	e13ffd15 	stw	r4,-12(fp)
1010d170:	e17ffe15 	stw	r5,-8(fp)
1010d174:	e1bfff15 	stw	r6,-4(fp)
  return len;
1010d178:	e0bfff17 	ldw	r2,-4(fp)
}
1010d17c:	e037883a 	mov	sp,fp
1010d180:	df000017 	ldw	fp,0(sp)
1010d184:	dec00104 	addi	sp,sp,4
1010d188:	f800283a 	ret

1010d18c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d18c:	defffe04 	addi	sp,sp,-8
1010d190:	dfc00115 	stw	ra,4(sp)
1010d194:	df000015 	stw	fp,0(sp)
1010d198:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d19c:	00840474 	movhi	r2,4113
1010d1a0:	10858004 	addi	r2,r2,5632
1010d1a4:	10800017 	ldw	r2,0(r2)
1010d1a8:	10000526 	beq	r2,zero,1010d1c0 <alt_get_errno+0x34>
1010d1ac:	00840474 	movhi	r2,4113
1010d1b0:	10858004 	addi	r2,r2,5632
1010d1b4:	10800017 	ldw	r2,0(r2)
1010d1b8:	103ee83a 	callr	r2
1010d1bc:	00000206 	br	1010d1c8 <alt_get_errno+0x3c>
1010d1c0:	00840474 	movhi	r2,4113
1010d1c4:	108c4604 	addi	r2,r2,12568
}
1010d1c8:	e037883a 	mov	sp,fp
1010d1cc:	dfc00117 	ldw	ra,4(sp)
1010d1d0:	df000017 	ldw	fp,0(sp)
1010d1d4:	dec00204 	addi	sp,sp,8
1010d1d8:	f800283a 	ret

1010d1dc <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
1010d1dc:	defffb04 	addi	sp,sp,-20
1010d1e0:	dfc00415 	stw	ra,16(sp)
1010d1e4:	df000315 	stw	fp,12(sp)
1010d1e8:	df000304 	addi	fp,sp,12
1010d1ec:	e13ffe15 	stw	r4,-8(fp)
1010d1f0:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d1f4:	e0bffe17 	ldw	r2,-8(fp)
1010d1f8:	10000616 	blt	r2,zero,1010d214 <fstat+0x38>
1010d1fc:	e0bffe17 	ldw	r2,-8(fp)
1010d200:	10c00324 	muli	r3,r2,12
1010d204:	00840474 	movhi	r2,4113
1010d208:	1080fd04 	addi	r2,r2,1012
1010d20c:	1885883a 	add	r2,r3,r2
1010d210:	00000106 	br	1010d218 <fstat+0x3c>
1010d214:	0005883a 	mov	r2,zero
1010d218:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
1010d21c:	e0bffd17 	ldw	r2,-12(fp)
1010d220:	10001026 	beq	r2,zero,1010d264 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
1010d224:	e0bffd17 	ldw	r2,-12(fp)
1010d228:	10800017 	ldw	r2,0(r2)
1010d22c:	10800817 	ldw	r2,32(r2)
1010d230:	10000726 	beq	r2,zero,1010d250 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
1010d234:	e0bffd17 	ldw	r2,-12(fp)
1010d238:	10800017 	ldw	r2,0(r2)
1010d23c:	10800817 	ldw	r2,32(r2)
1010d240:	e17fff17 	ldw	r5,-4(fp)
1010d244:	e13ffd17 	ldw	r4,-12(fp)
1010d248:	103ee83a 	callr	r2
1010d24c:	00000a06 	br	1010d278 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1010d250:	e0bfff17 	ldw	r2,-4(fp)
1010d254:	00c80004 	movi	r3,8192
1010d258:	10c00115 	stw	r3,4(r2)
      return 0;
1010d25c:	0005883a 	mov	r2,zero
1010d260:	00000506 	br	1010d278 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d264:	010d18c0 	call	1010d18c <alt_get_errno>
1010d268:	1007883a 	mov	r3,r2
1010d26c:	00801444 	movi	r2,81
1010d270:	18800015 	stw	r2,0(r3)
    return -1;
1010d274:	00bfffc4 	movi	r2,-1
  }
}
1010d278:	e037883a 	mov	sp,fp
1010d27c:	dfc00117 	ldw	ra,4(sp)
1010d280:	df000017 	ldw	fp,0(sp)
1010d284:	dec00204 	addi	sp,sp,8
1010d288:	f800283a 	ret

1010d28c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d28c:	defffe04 	addi	sp,sp,-8
1010d290:	dfc00115 	stw	ra,4(sp)
1010d294:	df000015 	stw	fp,0(sp)
1010d298:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d29c:	00840474 	movhi	r2,4113
1010d2a0:	10858004 	addi	r2,r2,5632
1010d2a4:	10800017 	ldw	r2,0(r2)
1010d2a8:	10000526 	beq	r2,zero,1010d2c0 <alt_get_errno+0x34>
1010d2ac:	00840474 	movhi	r2,4113
1010d2b0:	10858004 	addi	r2,r2,5632
1010d2b4:	10800017 	ldw	r2,0(r2)
1010d2b8:	103ee83a 	callr	r2
1010d2bc:	00000206 	br	1010d2c8 <alt_get_errno+0x3c>
1010d2c0:	00840474 	movhi	r2,4113
1010d2c4:	108c4604 	addi	r2,r2,12568
}
1010d2c8:	e037883a 	mov	sp,fp
1010d2cc:	dfc00117 	ldw	ra,4(sp)
1010d2d0:	df000017 	ldw	fp,0(sp)
1010d2d4:	dec00204 	addi	sp,sp,8
1010d2d8:	f800283a 	ret

1010d2dc <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
1010d2dc:	deffed04 	addi	sp,sp,-76
1010d2e0:	dfc01215 	stw	ra,72(sp)
1010d2e4:	df001115 	stw	fp,68(sp)
1010d2e8:	df001104 	addi	fp,sp,68
1010d2ec:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d2f0:	e0bfff17 	ldw	r2,-4(fp)
1010d2f4:	10000616 	blt	r2,zero,1010d310 <isatty+0x34>
1010d2f8:	e0bfff17 	ldw	r2,-4(fp)
1010d2fc:	10c00324 	muli	r3,r2,12
1010d300:	00840474 	movhi	r2,4113
1010d304:	1080fd04 	addi	r2,r2,1012
1010d308:	1885883a 	add	r2,r3,r2
1010d30c:	00000106 	br	1010d314 <isatty+0x38>
1010d310:	0005883a 	mov	r2,zero
1010d314:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
1010d318:	e0bfef17 	ldw	r2,-68(fp)
1010d31c:	10000e26 	beq	r2,zero,1010d358 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
1010d320:	e0bfef17 	ldw	r2,-68(fp)
1010d324:	10800017 	ldw	r2,0(r2)
1010d328:	10800817 	ldw	r2,32(r2)
1010d32c:	1000021e 	bne	r2,zero,1010d338 <isatty+0x5c>
    {
      return 1;
1010d330:	00800044 	movi	r2,1
1010d334:	00000d06 	br	1010d36c <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
1010d338:	e0bff004 	addi	r2,fp,-64
1010d33c:	100b883a 	mov	r5,r2
1010d340:	e13fff17 	ldw	r4,-4(fp)
1010d344:	010d1dc0 	call	1010d1dc <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
1010d348:	e0bff117 	ldw	r2,-60(fp)
1010d34c:	10880020 	cmpeqi	r2,r2,8192
1010d350:	10803fcc 	andi	r2,r2,255
1010d354:	00000506 	br	1010d36c <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d358:	010d28c0 	call	1010d28c <alt_get_errno>
1010d35c:	1007883a 	mov	r3,r2
1010d360:	00801444 	movi	r2,81
1010d364:	18800015 	stw	r2,0(r3)
    return 0;
1010d368:	0005883a 	mov	r2,zero
  }
}
1010d36c:	e037883a 	mov	sp,fp
1010d370:	dfc00117 	ldw	ra,4(sp)
1010d374:	df000017 	ldw	fp,0(sp)
1010d378:	dec00204 	addi	sp,sp,8
1010d37c:	f800283a 	ret

1010d380 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
1010d380:	defffc04 	addi	sp,sp,-16
1010d384:	df000315 	stw	fp,12(sp)
1010d388:	df000304 	addi	fp,sp,12
1010d38c:	e13ffd15 	stw	r4,-12(fp)
1010d390:	e17ffe15 	stw	r5,-8(fp)
1010d394:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
1010d398:	e0fffe17 	ldw	r3,-8(fp)
1010d39c:	e0bffd17 	ldw	r2,-12(fp)
1010d3a0:	18800c26 	beq	r3,r2,1010d3d4 <alt_load_section+0x54>
  {
    while( to != end )
1010d3a4:	00000806 	br	1010d3c8 <alt_load_section+0x48>
    {
      *to++ = *from++;
1010d3a8:	e0bffe17 	ldw	r2,-8(fp)
1010d3ac:	10c00104 	addi	r3,r2,4
1010d3b0:	e0fffe15 	stw	r3,-8(fp)
1010d3b4:	e0fffd17 	ldw	r3,-12(fp)
1010d3b8:	19000104 	addi	r4,r3,4
1010d3bc:	e13ffd15 	stw	r4,-12(fp)
1010d3c0:	18c00017 	ldw	r3,0(r3)
1010d3c4:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
1010d3c8:	e0fffe17 	ldw	r3,-8(fp)
1010d3cc:	e0bfff17 	ldw	r2,-4(fp)
1010d3d0:	18bff51e 	bne	r3,r2,1010d3a8 <__alt_data_end+0xfffed3a8>
    {
      *to++ = *from++;
    }
  }
}
1010d3d4:	0001883a 	nop
1010d3d8:	e037883a 	mov	sp,fp
1010d3dc:	df000017 	ldw	fp,0(sp)
1010d3e0:	dec00104 	addi	sp,sp,4
1010d3e4:	f800283a 	ret

1010d3e8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
1010d3e8:	defffe04 	addi	sp,sp,-8
1010d3ec:	dfc00115 	stw	ra,4(sp)
1010d3f0:	df000015 	stw	fp,0(sp)
1010d3f4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
1010d3f8:	01840474 	movhi	r6,4113
1010d3fc:	31858504 	addi	r6,r6,5652
1010d400:	01440474 	movhi	r5,4113
1010d404:	297eca04 	addi	r5,r5,-1240
1010d408:	01040474 	movhi	r4,4113
1010d40c:	21058504 	addi	r4,r4,5652
1010d410:	010d3800 	call	1010d380 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
1010d414:	01840434 	movhi	r6,4112
1010d418:	31809104 	addi	r6,r6,580
1010d41c:	01440434 	movhi	r5,4112
1010d420:	29400804 	addi	r5,r5,32
1010d424:	01040434 	movhi	r4,4112
1010d428:	21000804 	addi	r4,r4,32
1010d42c:	010d3800 	call	1010d380 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
1010d430:	01840474 	movhi	r6,4113
1010d434:	31beca04 	addi	r6,r6,-1240
1010d438:	01440474 	movhi	r5,4113
1010d43c:	297e0004 	addi	r5,r5,-2048
1010d440:	01040474 	movhi	r4,4113
1010d444:	213e0004 	addi	r4,r4,-2048
1010d448:	010d3800 	call	1010d380 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
1010d44c:	010e66c0 	call	1010e66c <alt_dcache_flush_all>
  alt_icache_flush_all();
1010d450:	010e8680 	call	1010e868 <alt_icache_flush_all>
}
1010d454:	0001883a 	nop
1010d458:	e037883a 	mov	sp,fp
1010d45c:	dfc00117 	ldw	ra,4(sp)
1010d460:	df000017 	ldw	fp,0(sp)
1010d464:	dec00204 	addi	sp,sp,8
1010d468:	f800283a 	ret

1010d46c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d46c:	defffe04 	addi	sp,sp,-8
1010d470:	dfc00115 	stw	ra,4(sp)
1010d474:	df000015 	stw	fp,0(sp)
1010d478:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d47c:	00840474 	movhi	r2,4113
1010d480:	10858004 	addi	r2,r2,5632
1010d484:	10800017 	ldw	r2,0(r2)
1010d488:	10000526 	beq	r2,zero,1010d4a0 <alt_get_errno+0x34>
1010d48c:	00840474 	movhi	r2,4113
1010d490:	10858004 	addi	r2,r2,5632
1010d494:	10800017 	ldw	r2,0(r2)
1010d498:	103ee83a 	callr	r2
1010d49c:	00000206 	br	1010d4a8 <alt_get_errno+0x3c>
1010d4a0:	00840474 	movhi	r2,4113
1010d4a4:	108c4604 	addi	r2,r2,12568
}
1010d4a8:	e037883a 	mov	sp,fp
1010d4ac:	dfc00117 	ldw	ra,4(sp)
1010d4b0:	df000017 	ldw	fp,0(sp)
1010d4b4:	dec00204 	addi	sp,sp,8
1010d4b8:	f800283a 	ret

1010d4bc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
1010d4bc:	defff904 	addi	sp,sp,-28
1010d4c0:	dfc00615 	stw	ra,24(sp)
1010d4c4:	df000515 	stw	fp,20(sp)
1010d4c8:	df000504 	addi	fp,sp,20
1010d4cc:	e13ffd15 	stw	r4,-12(fp)
1010d4d0:	e17ffe15 	stw	r5,-8(fp)
1010d4d4:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
1010d4d8:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d4dc:	e0bffd17 	ldw	r2,-12(fp)
1010d4e0:	10000616 	blt	r2,zero,1010d4fc <lseek+0x40>
1010d4e4:	e0bffd17 	ldw	r2,-12(fp)
1010d4e8:	10c00324 	muli	r3,r2,12
1010d4ec:	00840474 	movhi	r2,4113
1010d4f0:	1080fd04 	addi	r2,r2,1012
1010d4f4:	1885883a 	add	r2,r3,r2
1010d4f8:	00000106 	br	1010d500 <lseek+0x44>
1010d4fc:	0005883a 	mov	r2,zero
1010d500:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
1010d504:	e0bffc17 	ldw	r2,-16(fp)
1010d508:	10001026 	beq	r2,zero,1010d54c <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
1010d50c:	e0bffc17 	ldw	r2,-16(fp)
1010d510:	10800017 	ldw	r2,0(r2)
1010d514:	10800717 	ldw	r2,28(r2)
1010d518:	10000926 	beq	r2,zero,1010d540 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
1010d51c:	e0bffc17 	ldw	r2,-16(fp)
1010d520:	10800017 	ldw	r2,0(r2)
1010d524:	10800717 	ldw	r2,28(r2)
1010d528:	e1bfff17 	ldw	r6,-4(fp)
1010d52c:	e17ffe17 	ldw	r5,-8(fp)
1010d530:	e13ffc17 	ldw	r4,-16(fp)
1010d534:	103ee83a 	callr	r2
1010d538:	e0bffb15 	stw	r2,-20(fp)
1010d53c:	00000506 	br	1010d554 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
1010d540:	00bfde84 	movi	r2,-134
1010d544:	e0bffb15 	stw	r2,-20(fp)
1010d548:	00000206 	br	1010d554 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
1010d54c:	00bfebc4 	movi	r2,-81
1010d550:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
1010d554:	e0bffb17 	ldw	r2,-20(fp)
1010d558:	1000070e 	bge	r2,zero,1010d578 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
1010d55c:	010d46c0 	call	1010d46c <alt_get_errno>
1010d560:	1007883a 	mov	r3,r2
1010d564:	e0bffb17 	ldw	r2,-20(fp)
1010d568:	0085c83a 	sub	r2,zero,r2
1010d56c:	18800015 	stw	r2,0(r3)
    rc = -1;
1010d570:	00bfffc4 	movi	r2,-1
1010d574:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
1010d578:	e0bffb17 	ldw	r2,-20(fp)
}
1010d57c:	e037883a 	mov	sp,fp
1010d580:	dfc00117 	ldw	ra,4(sp)
1010d584:	df000017 	ldw	fp,0(sp)
1010d588:	dec00204 	addi	sp,sp,8
1010d58c:	f800283a 	ret

1010d590 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
1010d590:	defffd04 	addi	sp,sp,-12
1010d594:	dfc00215 	stw	ra,8(sp)
1010d598:	df000115 	stw	fp,4(sp)
1010d59c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
1010d5a0:	0009883a 	mov	r4,zero
1010d5a4:	010da340 	call	1010da34 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1010d5a8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
1010d5ac:	010da6c0 	call	1010da6c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
1010d5b0:	01840474 	movhi	r6,4113
1010d5b4:	31bec004 	addi	r6,r6,-1280
1010d5b8:	01440474 	movhi	r5,4113
1010d5bc:	297ec004 	addi	r5,r5,-1280
1010d5c0:	01040474 	movhi	r4,4113
1010d5c4:	213ec004 	addi	r4,r4,-1280
1010d5c8:	010ec300 	call	1010ec30 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
1010d5cc:	010e7a80 	call	1010e7a8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
1010d5d0:	01040474 	movhi	r4,4113
1010d5d4:	213a0204 	addi	r4,r4,-6136
1010d5d8:	010f46c0 	call	1010f46c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
1010d5dc:	d0a6d217 	ldw	r2,-25784(gp)
1010d5e0:	d0e6d317 	ldw	r3,-25780(gp)
1010d5e4:	d126d417 	ldw	r4,-25776(gp)
1010d5e8:	200d883a 	mov	r6,r4
1010d5ec:	180b883a 	mov	r5,r3
1010d5f0:	1009883a 	mov	r4,r2
1010d5f4:	01006680 	call	10100668 <main>
1010d5f8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
1010d5fc:	01000044 	movi	r4,1
1010d600:	010d0900 	call	1010d090 <close>
  exit (result);
1010d604:	e13fff17 	ldw	r4,-4(fp)
1010d608:	010f4800 	call	1010f480 <exit>

1010d60c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
1010d60c:	defffe04 	addi	sp,sp,-8
1010d610:	df000115 	stw	fp,4(sp)
1010d614:	df000104 	addi	fp,sp,4
1010d618:	e13fff15 	stw	r4,-4(fp)
}
1010d61c:	0001883a 	nop
1010d620:	e037883a 	mov	sp,fp
1010d624:	df000017 	ldw	fp,0(sp)
1010d628:	dec00104 	addi	sp,sp,4
1010d62c:	f800283a 	ret

1010d630 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
1010d630:	defffe04 	addi	sp,sp,-8
1010d634:	df000115 	stw	fp,4(sp)
1010d638:	df000104 	addi	fp,sp,4
1010d63c:	e13fff15 	stw	r4,-4(fp)
}
1010d640:	0001883a 	nop
1010d644:	e037883a 	mov	sp,fp
1010d648:	df000017 	ldw	fp,0(sp)
1010d64c:	dec00104 	addi	sp,sp,4
1010d650:	f800283a 	ret

1010d654 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d654:	defffe04 	addi	sp,sp,-8
1010d658:	dfc00115 	stw	ra,4(sp)
1010d65c:	df000015 	stw	fp,0(sp)
1010d660:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d664:	00840474 	movhi	r2,4113
1010d668:	10858004 	addi	r2,r2,5632
1010d66c:	10800017 	ldw	r2,0(r2)
1010d670:	10000526 	beq	r2,zero,1010d688 <alt_get_errno+0x34>
1010d674:	00840474 	movhi	r2,4113
1010d678:	10858004 	addi	r2,r2,5632
1010d67c:	10800017 	ldw	r2,0(r2)
1010d680:	103ee83a 	callr	r2
1010d684:	00000206 	br	1010d690 <alt_get_errno+0x3c>
1010d688:	00840474 	movhi	r2,4113
1010d68c:	108c4604 	addi	r2,r2,12568
}
1010d690:	e037883a 	mov	sp,fp
1010d694:	dfc00117 	ldw	ra,4(sp)
1010d698:	df000017 	ldw	fp,0(sp)
1010d69c:	dec00204 	addi	sp,sp,8
1010d6a0:	f800283a 	ret

1010d6a4 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
1010d6a4:	defff904 	addi	sp,sp,-28
1010d6a8:	dfc00615 	stw	ra,24(sp)
1010d6ac:	df000515 	stw	fp,20(sp)
1010d6b0:	df000504 	addi	fp,sp,20
1010d6b4:	e13ffd15 	stw	r4,-12(fp)
1010d6b8:	e17ffe15 	stw	r5,-8(fp)
1010d6bc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d6c0:	e0bffd17 	ldw	r2,-12(fp)
1010d6c4:	10000616 	blt	r2,zero,1010d6e0 <read+0x3c>
1010d6c8:	e0bffd17 	ldw	r2,-12(fp)
1010d6cc:	10c00324 	muli	r3,r2,12
1010d6d0:	00840474 	movhi	r2,4113
1010d6d4:	1080fd04 	addi	r2,r2,1012
1010d6d8:	1885883a 	add	r2,r3,r2
1010d6dc:	00000106 	br	1010d6e4 <read+0x40>
1010d6e0:	0005883a 	mov	r2,zero
1010d6e4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010d6e8:	e0bffb17 	ldw	r2,-20(fp)
1010d6ec:	10002226 	beq	r2,zero,1010d778 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010d6f0:	e0bffb17 	ldw	r2,-20(fp)
1010d6f4:	10800217 	ldw	r2,8(r2)
1010d6f8:	108000cc 	andi	r2,r2,3
1010d6fc:	10800060 	cmpeqi	r2,r2,1
1010d700:	1000181e 	bne	r2,zero,1010d764 <read+0xc0>
        (fd->dev->read))
1010d704:	e0bffb17 	ldw	r2,-20(fp)
1010d708:	10800017 	ldw	r2,0(r2)
1010d70c:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010d710:	10001426 	beq	r2,zero,1010d764 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
1010d714:	e0bffb17 	ldw	r2,-20(fp)
1010d718:	10800017 	ldw	r2,0(r2)
1010d71c:	10800517 	ldw	r2,20(r2)
1010d720:	e0ffff17 	ldw	r3,-4(fp)
1010d724:	180d883a 	mov	r6,r3
1010d728:	e17ffe17 	ldw	r5,-8(fp)
1010d72c:	e13ffb17 	ldw	r4,-20(fp)
1010d730:	103ee83a 	callr	r2
1010d734:	e0bffc15 	stw	r2,-16(fp)
1010d738:	e0bffc17 	ldw	r2,-16(fp)
1010d73c:	1000070e 	bge	r2,zero,1010d75c <read+0xb8>
        {
          ALT_ERRNO = -rval;
1010d740:	010d6540 	call	1010d654 <alt_get_errno>
1010d744:	1007883a 	mov	r3,r2
1010d748:	e0bffc17 	ldw	r2,-16(fp)
1010d74c:	0085c83a 	sub	r2,zero,r2
1010d750:	18800015 	stw	r2,0(r3)
          return -1;
1010d754:	00bfffc4 	movi	r2,-1
1010d758:	00000c06 	br	1010d78c <read+0xe8>
        }
        return rval;
1010d75c:	e0bffc17 	ldw	r2,-16(fp)
1010d760:	00000a06 	br	1010d78c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
1010d764:	010d6540 	call	1010d654 <alt_get_errno>
1010d768:	1007883a 	mov	r3,r2
1010d76c:	00800344 	movi	r2,13
1010d770:	18800015 	stw	r2,0(r3)
1010d774:	00000406 	br	1010d788 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
1010d778:	010d6540 	call	1010d654 <alt_get_errno>
1010d77c:	1007883a 	mov	r3,r2
1010d780:	00801444 	movi	r2,81
1010d784:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010d788:	00bfffc4 	movi	r2,-1
}
1010d78c:	e037883a 	mov	sp,fp
1010d790:	dfc00117 	ldw	ra,4(sp)
1010d794:	df000017 	ldw	fp,0(sp)
1010d798:	dec00204 	addi	sp,sp,8
1010d79c:	f800283a 	ret

1010d7a0 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
1010d7a0:	defffe04 	addi	sp,sp,-8
1010d7a4:	df000115 	stw	fp,4(sp)
1010d7a8:	df000104 	addi	fp,sp,4
1010d7ac:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
1010d7b0:	e0bfff17 	ldw	r2,-4(fp)
1010d7b4:	108000d0 	cmplti	r2,r2,3
1010d7b8:	10000d1e 	bne	r2,zero,1010d7f0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
1010d7bc:	00840474 	movhi	r2,4113
1010d7c0:	1080fd04 	addi	r2,r2,1012
1010d7c4:	e0ffff17 	ldw	r3,-4(fp)
1010d7c8:	18c00324 	muli	r3,r3,12
1010d7cc:	10c5883a 	add	r2,r2,r3
1010d7d0:	10800204 	addi	r2,r2,8
1010d7d4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
1010d7d8:	00840474 	movhi	r2,4113
1010d7dc:	1080fd04 	addi	r2,r2,1012
1010d7e0:	e0ffff17 	ldw	r3,-4(fp)
1010d7e4:	18c00324 	muli	r3,r3,12
1010d7e8:	10c5883a 	add	r2,r2,r3
1010d7ec:	10000015 	stw	zero,0(r2)
  }
}
1010d7f0:	0001883a 	nop
1010d7f4:	e037883a 	mov	sp,fp
1010d7f8:	df000017 	ldw	fp,0(sp)
1010d7fc:	dec00104 	addi	sp,sp,4
1010d800:	f800283a 	ret

1010d804 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
1010d804:	defff904 	addi	sp,sp,-28
1010d808:	df000615 	stw	fp,24(sp)
1010d80c:	df000604 	addi	fp,sp,24
1010d810:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010d814:	0005303a 	rdctl	r2,status
1010d818:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010d81c:	e0fffe17 	ldw	r3,-8(fp)
1010d820:	00bfff84 	movi	r2,-2
1010d824:	1884703a 	and	r2,r3,r2
1010d828:	1001703a 	wrctl	status,r2
  
  return context;
1010d82c:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
1010d830:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
1010d834:	d0a00c17 	ldw	r2,-32720(gp)
1010d838:	10c000c4 	addi	r3,r2,3
1010d83c:	00bfff04 	movi	r2,-4
1010d840:	1884703a 	and	r2,r3,r2
1010d844:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
1010d848:	d0e00c17 	ldw	r3,-32720(gp)
1010d84c:	e0bfff17 	ldw	r2,-4(fp)
1010d850:	1887883a 	add	r3,r3,r2
1010d854:	008404b4 	movhi	r2,4114
1010d858:	10800004 	addi	r2,r2,0
1010d85c:	10c0062e 	bgeu	r2,r3,1010d878 <sbrk+0x74>
1010d860:	e0bffb17 	ldw	r2,-20(fp)
1010d864:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010d868:	e0bffa17 	ldw	r2,-24(fp)
1010d86c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
1010d870:	00bfffc4 	movi	r2,-1
1010d874:	00000b06 	br	1010d8a4 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1010d878:	d0a00c17 	ldw	r2,-32720(gp)
1010d87c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
1010d880:	d0e00c17 	ldw	r3,-32720(gp)
1010d884:	e0bfff17 	ldw	r2,-4(fp)
1010d888:	1885883a 	add	r2,r3,r2
1010d88c:	d0a00c15 	stw	r2,-32720(gp)
1010d890:	e0bffb17 	ldw	r2,-20(fp)
1010d894:	e0bffc15 	stw	r2,-16(fp)
1010d898:	e0bffc17 	ldw	r2,-16(fp)
1010d89c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
1010d8a0:	e0bffd17 	ldw	r2,-12(fp)
} 
1010d8a4:	e037883a 	mov	sp,fp
1010d8a8:	df000017 	ldw	fp,0(sp)
1010d8ac:	dec00104 	addi	sp,sp,4
1010d8b0:	f800283a 	ret

1010d8b4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d8b4:	defffe04 	addi	sp,sp,-8
1010d8b8:	dfc00115 	stw	ra,4(sp)
1010d8bc:	df000015 	stw	fp,0(sp)
1010d8c0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d8c4:	00840474 	movhi	r2,4113
1010d8c8:	10858004 	addi	r2,r2,5632
1010d8cc:	10800017 	ldw	r2,0(r2)
1010d8d0:	10000526 	beq	r2,zero,1010d8e8 <alt_get_errno+0x34>
1010d8d4:	00840474 	movhi	r2,4113
1010d8d8:	10858004 	addi	r2,r2,5632
1010d8dc:	10800017 	ldw	r2,0(r2)
1010d8e0:	103ee83a 	callr	r2
1010d8e4:	00000206 	br	1010d8f0 <alt_get_errno+0x3c>
1010d8e8:	00840474 	movhi	r2,4113
1010d8ec:	108c4604 	addi	r2,r2,12568
}
1010d8f0:	e037883a 	mov	sp,fp
1010d8f4:	dfc00117 	ldw	ra,4(sp)
1010d8f8:	df000017 	ldw	fp,0(sp)
1010d8fc:	dec00204 	addi	sp,sp,8
1010d900:	f800283a 	ret

1010d904 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
1010d904:	defff904 	addi	sp,sp,-28
1010d908:	dfc00615 	stw	ra,24(sp)
1010d90c:	df000515 	stw	fp,20(sp)
1010d910:	df000504 	addi	fp,sp,20
1010d914:	e13ffd15 	stw	r4,-12(fp)
1010d918:	e17ffe15 	stw	r5,-8(fp)
1010d91c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d920:	e0bffd17 	ldw	r2,-12(fp)
1010d924:	10000616 	blt	r2,zero,1010d940 <write+0x3c>
1010d928:	e0bffd17 	ldw	r2,-12(fp)
1010d92c:	10c00324 	muli	r3,r2,12
1010d930:	00840474 	movhi	r2,4113
1010d934:	1080fd04 	addi	r2,r2,1012
1010d938:	1885883a 	add	r2,r3,r2
1010d93c:	00000106 	br	1010d944 <write+0x40>
1010d940:	0005883a 	mov	r2,zero
1010d944:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010d948:	e0bffb17 	ldw	r2,-20(fp)
1010d94c:	10002126 	beq	r2,zero,1010d9d4 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
1010d950:	e0bffb17 	ldw	r2,-20(fp)
1010d954:	10800217 	ldw	r2,8(r2)
1010d958:	108000cc 	andi	r2,r2,3
1010d95c:	10001826 	beq	r2,zero,1010d9c0 <write+0xbc>
1010d960:	e0bffb17 	ldw	r2,-20(fp)
1010d964:	10800017 	ldw	r2,0(r2)
1010d968:	10800617 	ldw	r2,24(r2)
1010d96c:	10001426 	beq	r2,zero,1010d9c0 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
1010d970:	e0bffb17 	ldw	r2,-20(fp)
1010d974:	10800017 	ldw	r2,0(r2)
1010d978:	10800617 	ldw	r2,24(r2)
1010d97c:	e0ffff17 	ldw	r3,-4(fp)
1010d980:	180d883a 	mov	r6,r3
1010d984:	e17ffe17 	ldw	r5,-8(fp)
1010d988:	e13ffb17 	ldw	r4,-20(fp)
1010d98c:	103ee83a 	callr	r2
1010d990:	e0bffc15 	stw	r2,-16(fp)
1010d994:	e0bffc17 	ldw	r2,-16(fp)
1010d998:	1000070e 	bge	r2,zero,1010d9b8 <write+0xb4>
      {
        ALT_ERRNO = -rval;
1010d99c:	010d8b40 	call	1010d8b4 <alt_get_errno>
1010d9a0:	1007883a 	mov	r3,r2
1010d9a4:	e0bffc17 	ldw	r2,-16(fp)
1010d9a8:	0085c83a 	sub	r2,zero,r2
1010d9ac:	18800015 	stw	r2,0(r3)
        return -1;
1010d9b0:	00bfffc4 	movi	r2,-1
1010d9b4:	00000c06 	br	1010d9e8 <write+0xe4>
      }
      return rval;
1010d9b8:	e0bffc17 	ldw	r2,-16(fp)
1010d9bc:	00000a06 	br	1010d9e8 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
1010d9c0:	010d8b40 	call	1010d8b4 <alt_get_errno>
1010d9c4:	1007883a 	mov	r3,r2
1010d9c8:	00800344 	movi	r2,13
1010d9cc:	18800015 	stw	r2,0(r3)
1010d9d0:	00000406 	br	1010d9e4 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
1010d9d4:	010d8b40 	call	1010d8b4 <alt_get_errno>
1010d9d8:	1007883a 	mov	r3,r2
1010d9dc:	00801444 	movi	r2,81
1010d9e0:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010d9e4:	00bfffc4 	movi	r2,-1
}
1010d9e8:	e037883a 	mov	sp,fp
1010d9ec:	dfc00117 	ldw	ra,4(sp)
1010d9f0:	df000017 	ldw	fp,0(sp)
1010d9f4:	dec00204 	addi	sp,sp,8
1010d9f8:	f800283a 	ret

1010d9fc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
1010d9fc:	defffd04 	addi	sp,sp,-12
1010da00:	dfc00215 	stw	ra,8(sp)
1010da04:	df000115 	stw	fp,4(sp)
1010da08:	df000104 	addi	fp,sp,4
1010da0c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
1010da10:	01440474 	movhi	r5,4113
1010da14:	29457d04 	addi	r5,r5,5620
1010da18:	e13fff17 	ldw	r4,-4(fp)
1010da1c:	010e7040 	call	1010e704 <alt_dev_llist_insert>
}
1010da20:	e037883a 	mov	sp,fp
1010da24:	dfc00117 	ldw	ra,4(sp)
1010da28:	df000017 	ldw	fp,0(sp)
1010da2c:	dec00204 	addi	sp,sp,8
1010da30:	f800283a 	ret

1010da34 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
1010da34:	defffd04 	addi	sp,sp,-12
1010da38:	dfc00215 	stw	ra,8(sp)
1010da3c:	df000115 	stw	fp,4(sp)
1010da40:	df000104 	addi	fp,sp,4
1010da44:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
1010da48:	010f0c40 	call	1010f0c4 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
1010da4c:	00800044 	movi	r2,1
1010da50:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
1010da54:	0001883a 	nop
1010da58:	e037883a 	mov	sp,fp
1010da5c:	dfc00117 	ldw	ra,4(sp)
1010da60:	df000017 	ldw	fp,0(sp)
1010da64:	dec00204 	addi	sp,sp,8
1010da68:	f800283a 	ret

1010da6c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
1010da6c:	defffe04 	addi	sp,sp,-8
1010da70:	dfc00115 	stw	ra,4(sp)
1010da74:	df000015 	stw	fp,0(sp)
1010da78:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1010da7c:	000d883a 	mov	r6,zero
1010da80:	000b883a 	mov	r5,zero
1010da84:	01040474 	movhi	r4,4113
1010da88:	21016704 	addi	r4,r4,1436
1010da8c:	010dc180 	call	1010dc18 <altera_avalon_jtag_uart_init>
1010da90:	01040474 	movhi	r4,4113
1010da94:	21015d04 	addi	r4,r4,1396
1010da98:	010d9fc0 	call	1010d9fc <alt_dev_reg>
}
1010da9c:	0001883a 	nop
1010daa0:	e037883a 	mov	sp,fp
1010daa4:	dfc00117 	ldw	ra,4(sp)
1010daa8:	df000017 	ldw	fp,0(sp)
1010daac:	dec00204 	addi	sp,sp,8
1010dab0:	f800283a 	ret

1010dab4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
1010dab4:	defffa04 	addi	sp,sp,-24
1010dab8:	dfc00515 	stw	ra,20(sp)
1010dabc:	df000415 	stw	fp,16(sp)
1010dac0:	df000404 	addi	fp,sp,16
1010dac4:	e13ffd15 	stw	r4,-12(fp)
1010dac8:	e17ffe15 	stw	r5,-8(fp)
1010dacc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010dad0:	e0bffd17 	ldw	r2,-12(fp)
1010dad4:	10800017 	ldw	r2,0(r2)
1010dad8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
1010dadc:	e0bffc17 	ldw	r2,-16(fp)
1010dae0:	10c00a04 	addi	r3,r2,40
1010dae4:	e0bffd17 	ldw	r2,-12(fp)
1010dae8:	10800217 	ldw	r2,8(r2)
1010daec:	100f883a 	mov	r7,r2
1010daf0:	e1bfff17 	ldw	r6,-4(fp)
1010daf4:	e17ffe17 	ldw	r5,-8(fp)
1010daf8:	1809883a 	mov	r4,r3
1010dafc:	010e0ec0 	call	1010e0ec <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1010db00:	e037883a 	mov	sp,fp
1010db04:	dfc00117 	ldw	ra,4(sp)
1010db08:	df000017 	ldw	fp,0(sp)
1010db0c:	dec00204 	addi	sp,sp,8
1010db10:	f800283a 	ret

1010db14 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
1010db14:	defffa04 	addi	sp,sp,-24
1010db18:	dfc00515 	stw	ra,20(sp)
1010db1c:	df000415 	stw	fp,16(sp)
1010db20:	df000404 	addi	fp,sp,16
1010db24:	e13ffd15 	stw	r4,-12(fp)
1010db28:	e17ffe15 	stw	r5,-8(fp)
1010db2c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010db30:	e0bffd17 	ldw	r2,-12(fp)
1010db34:	10800017 	ldw	r2,0(r2)
1010db38:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
1010db3c:	e0bffc17 	ldw	r2,-16(fp)
1010db40:	10c00a04 	addi	r3,r2,40
1010db44:	e0bffd17 	ldw	r2,-12(fp)
1010db48:	10800217 	ldw	r2,8(r2)
1010db4c:	100f883a 	mov	r7,r2
1010db50:	e1bfff17 	ldw	r6,-4(fp)
1010db54:	e17ffe17 	ldw	r5,-8(fp)
1010db58:	1809883a 	mov	r4,r3
1010db5c:	010e3080 	call	1010e308 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1010db60:	e037883a 	mov	sp,fp
1010db64:	dfc00117 	ldw	ra,4(sp)
1010db68:	df000017 	ldw	fp,0(sp)
1010db6c:	dec00204 	addi	sp,sp,8
1010db70:	f800283a 	ret

1010db74 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
1010db74:	defffc04 	addi	sp,sp,-16
1010db78:	dfc00315 	stw	ra,12(sp)
1010db7c:	df000215 	stw	fp,8(sp)
1010db80:	df000204 	addi	fp,sp,8
1010db84:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010db88:	e0bfff17 	ldw	r2,-4(fp)
1010db8c:	10800017 	ldw	r2,0(r2)
1010db90:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
1010db94:	e0bffe17 	ldw	r2,-8(fp)
1010db98:	10c00a04 	addi	r3,r2,40
1010db9c:	e0bfff17 	ldw	r2,-4(fp)
1010dba0:	10800217 	ldw	r2,8(r2)
1010dba4:	100b883a 	mov	r5,r2
1010dba8:	1809883a 	mov	r4,r3
1010dbac:	010df940 	call	1010df94 <altera_avalon_jtag_uart_close>
}
1010dbb0:	e037883a 	mov	sp,fp
1010dbb4:	dfc00117 	ldw	ra,4(sp)
1010dbb8:	df000017 	ldw	fp,0(sp)
1010dbbc:	dec00204 	addi	sp,sp,8
1010dbc0:	f800283a 	ret

1010dbc4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
1010dbc4:	defffa04 	addi	sp,sp,-24
1010dbc8:	dfc00515 	stw	ra,20(sp)
1010dbcc:	df000415 	stw	fp,16(sp)
1010dbd0:	df000404 	addi	fp,sp,16
1010dbd4:	e13ffd15 	stw	r4,-12(fp)
1010dbd8:	e17ffe15 	stw	r5,-8(fp)
1010dbdc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1010dbe0:	e0bffd17 	ldw	r2,-12(fp)
1010dbe4:	10800017 	ldw	r2,0(r2)
1010dbe8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
1010dbec:	e0bffc17 	ldw	r2,-16(fp)
1010dbf0:	10800a04 	addi	r2,r2,40
1010dbf4:	e1bfff17 	ldw	r6,-4(fp)
1010dbf8:	e17ffe17 	ldw	r5,-8(fp)
1010dbfc:	1009883a 	mov	r4,r2
1010dc00:	010dffc0 	call	1010dffc <altera_avalon_jtag_uart_ioctl>
}
1010dc04:	e037883a 	mov	sp,fp
1010dc08:	dfc00117 	ldw	ra,4(sp)
1010dc0c:	df000017 	ldw	fp,0(sp)
1010dc10:	dec00204 	addi	sp,sp,8
1010dc14:	f800283a 	ret

1010dc18 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
1010dc18:	defffa04 	addi	sp,sp,-24
1010dc1c:	dfc00515 	stw	ra,20(sp)
1010dc20:	df000415 	stw	fp,16(sp)
1010dc24:	df000404 	addi	fp,sp,16
1010dc28:	e13ffd15 	stw	r4,-12(fp)
1010dc2c:	e17ffe15 	stw	r5,-8(fp)
1010dc30:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010dc34:	e0bffd17 	ldw	r2,-12(fp)
1010dc38:	00c00044 	movi	r3,1
1010dc3c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1010dc40:	e0bffd17 	ldw	r2,-12(fp)
1010dc44:	10800017 	ldw	r2,0(r2)
1010dc48:	10800104 	addi	r2,r2,4
1010dc4c:	1007883a 	mov	r3,r2
1010dc50:	e0bffd17 	ldw	r2,-12(fp)
1010dc54:	10800817 	ldw	r2,32(r2)
1010dc58:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
1010dc5c:	e0bffe17 	ldw	r2,-8(fp)
1010dc60:	e0ffff17 	ldw	r3,-4(fp)
1010dc64:	d8000015 	stw	zero,0(sp)
1010dc68:	e1fffd17 	ldw	r7,-12(fp)
1010dc6c:	01840474 	movhi	r6,4113
1010dc70:	31b73804 	addi	r6,r6,-8992
1010dc74:	180b883a 	mov	r5,r3
1010dc78:	1009883a 	mov	r4,r2
1010dc7c:	010e89c0 	call	1010e89c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1010dc80:	e0bffd17 	ldw	r2,-12(fp)
1010dc84:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
1010dc88:	e0bffd17 	ldw	r2,-12(fp)
1010dc8c:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1010dc90:	00840474 	movhi	r2,4113
1010dc94:	108c4b04 	addi	r2,r2,12588
1010dc98:	10800017 	ldw	r2,0(r2)
1010dc9c:	e1fffd17 	ldw	r7,-12(fp)
1010dca0:	01840474 	movhi	r6,4113
1010dca4:	31b7bb04 	addi	r6,r6,-8468
1010dca8:	100b883a 	mov	r5,r2
1010dcac:	1809883a 	mov	r4,r3
1010dcb0:	010e52c0 	call	1010e52c <alt_alarm_start>
1010dcb4:	1000040e 	bge	r2,zero,1010dcc8 <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
1010dcb8:	e0fffd17 	ldw	r3,-12(fp)
1010dcbc:	00a00034 	movhi	r2,32768
1010dcc0:	10bfffc4 	addi	r2,r2,-1
1010dcc4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
1010dcc8:	0001883a 	nop
1010dccc:	e037883a 	mov	sp,fp
1010dcd0:	dfc00117 	ldw	ra,4(sp)
1010dcd4:	df000017 	ldw	fp,0(sp)
1010dcd8:	dec00204 	addi	sp,sp,8
1010dcdc:	f800283a 	ret

1010dce0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
1010dce0:	defff804 	addi	sp,sp,-32
1010dce4:	df000715 	stw	fp,28(sp)
1010dce8:	df000704 	addi	fp,sp,28
1010dcec:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
1010dcf0:	e0bfff17 	ldw	r2,-4(fp)
1010dcf4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
1010dcf8:	e0bffb17 	ldw	r2,-20(fp)
1010dcfc:	10800017 	ldw	r2,0(r2)
1010dd00:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010dd04:	e0bffc17 	ldw	r2,-16(fp)
1010dd08:	10800104 	addi	r2,r2,4
1010dd0c:	10800037 	ldwio	r2,0(r2)
1010dd10:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
1010dd14:	e0bffd17 	ldw	r2,-12(fp)
1010dd18:	1080c00c 	andi	r2,r2,768
1010dd1c:	10006d26 	beq	r2,zero,1010ded4 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
1010dd20:	e0bffd17 	ldw	r2,-12(fp)
1010dd24:	1080400c 	andi	r2,r2,256
1010dd28:	10003526 	beq	r2,zero,1010de00 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
1010dd2c:	00800074 	movhi	r2,1
1010dd30:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010dd34:	e0bffb17 	ldw	r2,-20(fp)
1010dd38:	10800a17 	ldw	r2,40(r2)
1010dd3c:	10800044 	addi	r2,r2,1
1010dd40:	1081ffcc 	andi	r2,r2,2047
1010dd44:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
1010dd48:	e0bffb17 	ldw	r2,-20(fp)
1010dd4c:	10c00b17 	ldw	r3,44(r2)
1010dd50:	e0bffe17 	ldw	r2,-8(fp)
1010dd54:	18801526 	beq	r3,r2,1010ddac <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
1010dd58:	e0bffc17 	ldw	r2,-16(fp)
1010dd5c:	10800037 	ldwio	r2,0(r2)
1010dd60:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
1010dd64:	e0bff917 	ldw	r2,-28(fp)
1010dd68:	10a0000c 	andi	r2,r2,32768
1010dd6c:	10001126 	beq	r2,zero,1010ddb4 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
1010dd70:	e0bffb17 	ldw	r2,-20(fp)
1010dd74:	10800a17 	ldw	r2,40(r2)
1010dd78:	e0fff917 	ldw	r3,-28(fp)
1010dd7c:	1809883a 	mov	r4,r3
1010dd80:	e0fffb17 	ldw	r3,-20(fp)
1010dd84:	1885883a 	add	r2,r3,r2
1010dd88:	10800e04 	addi	r2,r2,56
1010dd8c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010dd90:	e0bffb17 	ldw	r2,-20(fp)
1010dd94:	10800a17 	ldw	r2,40(r2)
1010dd98:	10800044 	addi	r2,r2,1
1010dd9c:	10c1ffcc 	andi	r3,r2,2047
1010dda0:	e0bffb17 	ldw	r2,-20(fp)
1010dda4:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
1010dda8:	003fe206 	br	1010dd34 <__alt_data_end+0xfffedd34>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
1010ddac:	0001883a 	nop
1010ddb0:	00000106 	br	1010ddb8 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
1010ddb4:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1010ddb8:	e0bff917 	ldw	r2,-28(fp)
1010ddbc:	10bfffec 	andhi	r2,r2,65535
1010ddc0:	10000f26 	beq	r2,zero,1010de00 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010ddc4:	e0bffb17 	ldw	r2,-20(fp)
1010ddc8:	10c00817 	ldw	r3,32(r2)
1010ddcc:	00bfff84 	movi	r2,-2
1010ddd0:	1886703a 	and	r3,r3,r2
1010ddd4:	e0bffb17 	ldw	r2,-20(fp)
1010ddd8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
1010dddc:	e0bffc17 	ldw	r2,-16(fp)
1010dde0:	10800104 	addi	r2,r2,4
1010dde4:	1007883a 	mov	r3,r2
1010dde8:	e0bffb17 	ldw	r2,-20(fp)
1010ddec:	10800817 	ldw	r2,32(r2)
1010ddf0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010ddf4:	e0bffc17 	ldw	r2,-16(fp)
1010ddf8:	10800104 	addi	r2,r2,4
1010ddfc:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
1010de00:	e0bffd17 	ldw	r2,-12(fp)
1010de04:	1080800c 	andi	r2,r2,512
1010de08:	103fbe26 	beq	r2,zero,1010dd04 <__alt_data_end+0xfffedd04>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
1010de0c:	e0bffd17 	ldw	r2,-12(fp)
1010de10:	1004d43a 	srli	r2,r2,16
1010de14:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
1010de18:	00001406 	br	1010de6c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
1010de1c:	e0bffc17 	ldw	r2,-16(fp)
1010de20:	e0fffb17 	ldw	r3,-20(fp)
1010de24:	18c00d17 	ldw	r3,52(r3)
1010de28:	e13ffb17 	ldw	r4,-20(fp)
1010de2c:	20c7883a 	add	r3,r4,r3
1010de30:	18c20e04 	addi	r3,r3,2104
1010de34:	18c00003 	ldbu	r3,0(r3)
1010de38:	18c03fcc 	andi	r3,r3,255
1010de3c:	18c0201c 	xori	r3,r3,128
1010de40:	18ffe004 	addi	r3,r3,-128
1010de44:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010de48:	e0bffb17 	ldw	r2,-20(fp)
1010de4c:	10800d17 	ldw	r2,52(r2)
1010de50:	10800044 	addi	r2,r2,1
1010de54:	10c1ffcc 	andi	r3,r2,2047
1010de58:	e0bffb17 	ldw	r2,-20(fp)
1010de5c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
1010de60:	e0bffa17 	ldw	r2,-24(fp)
1010de64:	10bfffc4 	addi	r2,r2,-1
1010de68:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
1010de6c:	e0bffa17 	ldw	r2,-24(fp)
1010de70:	10000526 	beq	r2,zero,1010de88 <altera_avalon_jtag_uart_irq+0x1a8>
1010de74:	e0bffb17 	ldw	r2,-20(fp)
1010de78:	10c00d17 	ldw	r3,52(r2)
1010de7c:	e0bffb17 	ldw	r2,-20(fp)
1010de80:	10800c17 	ldw	r2,48(r2)
1010de84:	18bfe51e 	bne	r3,r2,1010de1c <__alt_data_end+0xfffede1c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1010de88:	e0bffa17 	ldw	r2,-24(fp)
1010de8c:	103f9d26 	beq	r2,zero,1010dd04 <__alt_data_end+0xfffedd04>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010de90:	e0bffb17 	ldw	r2,-20(fp)
1010de94:	10c00817 	ldw	r3,32(r2)
1010de98:	00bfff44 	movi	r2,-3
1010de9c:	1886703a 	and	r3,r3,r2
1010dea0:	e0bffb17 	ldw	r2,-20(fp)
1010dea4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010dea8:	e0bffb17 	ldw	r2,-20(fp)
1010deac:	10800017 	ldw	r2,0(r2)
1010deb0:	10800104 	addi	r2,r2,4
1010deb4:	1007883a 	mov	r3,r2
1010deb8:	e0bffb17 	ldw	r2,-20(fp)
1010debc:	10800817 	ldw	r2,32(r2)
1010dec0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010dec4:	e0bffc17 	ldw	r2,-16(fp)
1010dec8:	10800104 	addi	r2,r2,4
1010decc:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
1010ded0:	003f8c06 	br	1010dd04 <__alt_data_end+0xfffedd04>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
1010ded4:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
1010ded8:	0001883a 	nop
1010dedc:	e037883a 	mov	sp,fp
1010dee0:	df000017 	ldw	fp,0(sp)
1010dee4:	dec00104 	addi	sp,sp,4
1010dee8:	f800283a 	ret

1010deec <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
1010deec:	defff804 	addi	sp,sp,-32
1010def0:	df000715 	stw	fp,28(sp)
1010def4:	df000704 	addi	fp,sp,28
1010def8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
1010defc:	e0bffb17 	ldw	r2,-20(fp)
1010df00:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
1010df04:	e0bff917 	ldw	r2,-28(fp)
1010df08:	10800017 	ldw	r2,0(r2)
1010df0c:	10800104 	addi	r2,r2,4
1010df10:	10800037 	ldwio	r2,0(r2)
1010df14:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
1010df18:	e0bffa17 	ldw	r2,-24(fp)
1010df1c:	1081000c 	andi	r2,r2,1024
1010df20:	10000b26 	beq	r2,zero,1010df50 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
1010df24:	e0bff917 	ldw	r2,-28(fp)
1010df28:	10800017 	ldw	r2,0(r2)
1010df2c:	10800104 	addi	r2,r2,4
1010df30:	1007883a 	mov	r3,r2
1010df34:	e0bff917 	ldw	r2,-28(fp)
1010df38:	10800817 	ldw	r2,32(r2)
1010df3c:	10810014 	ori	r2,r2,1024
1010df40:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
1010df44:	e0bff917 	ldw	r2,-28(fp)
1010df48:	10000915 	stw	zero,36(r2)
1010df4c:	00000a06 	br	1010df78 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
1010df50:	e0bff917 	ldw	r2,-28(fp)
1010df54:	10c00917 	ldw	r3,36(r2)
1010df58:	00a00034 	movhi	r2,32768
1010df5c:	10bfff04 	addi	r2,r2,-4
1010df60:	10c00536 	bltu	r2,r3,1010df78 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
1010df64:	e0bff917 	ldw	r2,-28(fp)
1010df68:	10800917 	ldw	r2,36(r2)
1010df6c:	10c00044 	addi	r3,r2,1
1010df70:	e0bff917 	ldw	r2,-28(fp)
1010df74:	10c00915 	stw	r3,36(r2)
1010df78:	00840474 	movhi	r2,4113
1010df7c:	108c4b04 	addi	r2,r2,12588
1010df80:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
1010df84:	e037883a 	mov	sp,fp
1010df88:	df000017 	ldw	fp,0(sp)
1010df8c:	dec00104 	addi	sp,sp,4
1010df90:	f800283a 	ret

1010df94 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
1010df94:	defffd04 	addi	sp,sp,-12
1010df98:	df000215 	stw	fp,8(sp)
1010df9c:	df000204 	addi	fp,sp,8
1010dfa0:	e13ffe15 	stw	r4,-8(fp)
1010dfa4:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010dfa8:	00000506 	br	1010dfc0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
1010dfac:	e0bfff17 	ldw	r2,-4(fp)
1010dfb0:	1090000c 	andi	r2,r2,16384
1010dfb4:	10000226 	beq	r2,zero,1010dfc0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1010dfb8:	00bffd44 	movi	r2,-11
1010dfbc:	00000b06 	br	1010dfec <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010dfc0:	e0bffe17 	ldw	r2,-8(fp)
1010dfc4:	10c00d17 	ldw	r3,52(r2)
1010dfc8:	e0bffe17 	ldw	r2,-8(fp)
1010dfcc:	10800c17 	ldw	r2,48(r2)
1010dfd0:	18800526 	beq	r3,r2,1010dfe8 <altera_avalon_jtag_uart_close+0x54>
1010dfd4:	e0bffe17 	ldw	r2,-8(fp)
1010dfd8:	10c00917 	ldw	r3,36(r2)
1010dfdc:	e0bffe17 	ldw	r2,-8(fp)
1010dfe0:	10800117 	ldw	r2,4(r2)
1010dfe4:	18bff136 	bltu	r3,r2,1010dfac <__alt_data_end+0xfffedfac>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
1010dfe8:	0005883a 	mov	r2,zero
}
1010dfec:	e037883a 	mov	sp,fp
1010dff0:	df000017 	ldw	fp,0(sp)
1010dff4:	dec00104 	addi	sp,sp,4
1010dff8:	f800283a 	ret

1010dffc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
1010dffc:	defffa04 	addi	sp,sp,-24
1010e000:	df000515 	stw	fp,20(sp)
1010e004:	df000504 	addi	fp,sp,20
1010e008:	e13ffd15 	stw	r4,-12(fp)
1010e00c:	e17ffe15 	stw	r5,-8(fp)
1010e010:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
1010e014:	00bff9c4 	movi	r2,-25
1010e018:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
1010e01c:	e0bffe17 	ldw	r2,-8(fp)
1010e020:	10da8060 	cmpeqi	r3,r2,27137
1010e024:	1800031e 	bne	r3,zero,1010e034 <altera_avalon_jtag_uart_ioctl+0x38>
1010e028:	109a80a0 	cmpeqi	r2,r2,27138
1010e02c:	1000181e 	bne	r2,zero,1010e090 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
1010e030:	00002906 	br	1010e0d8 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
1010e034:	e0bffd17 	ldw	r2,-12(fp)
1010e038:	10c00117 	ldw	r3,4(r2)
1010e03c:	00a00034 	movhi	r2,32768
1010e040:	10bfffc4 	addi	r2,r2,-1
1010e044:	18802126 	beq	r3,r2,1010e0cc <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
1010e048:	e0bfff17 	ldw	r2,-4(fp)
1010e04c:	10800017 	ldw	r2,0(r2)
1010e050:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
1010e054:	e0bffc17 	ldw	r2,-16(fp)
1010e058:	10800090 	cmplti	r2,r2,2
1010e05c:	1000061e 	bne	r2,zero,1010e078 <altera_avalon_jtag_uart_ioctl+0x7c>
1010e060:	e0fffc17 	ldw	r3,-16(fp)
1010e064:	00a00034 	movhi	r2,32768
1010e068:	10bfffc4 	addi	r2,r2,-1
1010e06c:	18800226 	beq	r3,r2,1010e078 <altera_avalon_jtag_uart_ioctl+0x7c>
1010e070:	e0bffc17 	ldw	r2,-16(fp)
1010e074:	00000206 	br	1010e080 <altera_avalon_jtag_uart_ioctl+0x84>
1010e078:	00a00034 	movhi	r2,32768
1010e07c:	10bfff84 	addi	r2,r2,-2
1010e080:	e0fffd17 	ldw	r3,-12(fp)
1010e084:	18800115 	stw	r2,4(r3)
      rc = 0;
1010e088:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010e08c:	00000f06 	br	1010e0cc <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1010e090:	e0bffd17 	ldw	r2,-12(fp)
1010e094:	10c00117 	ldw	r3,4(r2)
1010e098:	00a00034 	movhi	r2,32768
1010e09c:	10bfffc4 	addi	r2,r2,-1
1010e0a0:	18800c26 	beq	r3,r2,1010e0d4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
1010e0a4:	e0bffd17 	ldw	r2,-12(fp)
1010e0a8:	10c00917 	ldw	r3,36(r2)
1010e0ac:	e0bffd17 	ldw	r2,-12(fp)
1010e0b0:	10800117 	ldw	r2,4(r2)
1010e0b4:	1885803a 	cmpltu	r2,r3,r2
1010e0b8:	10c03fcc 	andi	r3,r2,255
1010e0bc:	e0bfff17 	ldw	r2,-4(fp)
1010e0c0:	10c00015 	stw	r3,0(r2)
      rc = 0;
1010e0c4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010e0c8:	00000206 	br	1010e0d4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
1010e0cc:	0001883a 	nop
1010e0d0:	00000106 	br	1010e0d8 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
1010e0d4:	0001883a 	nop

  default:
    break;
  }

  return rc;
1010e0d8:	e0bffb17 	ldw	r2,-20(fp)
}
1010e0dc:	e037883a 	mov	sp,fp
1010e0e0:	df000017 	ldw	fp,0(sp)
1010e0e4:	dec00104 	addi	sp,sp,4
1010e0e8:	f800283a 	ret

1010e0ec <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
1010e0ec:	defff304 	addi	sp,sp,-52
1010e0f0:	dfc00c15 	stw	ra,48(sp)
1010e0f4:	df000b15 	stw	fp,44(sp)
1010e0f8:	df000b04 	addi	fp,sp,44
1010e0fc:	e13ffc15 	stw	r4,-16(fp)
1010e100:	e17ffd15 	stw	r5,-12(fp)
1010e104:	e1bffe15 	stw	r6,-8(fp)
1010e108:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
1010e10c:	e0bffd17 	ldw	r2,-12(fp)
1010e110:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010e114:	00004706 	br	1010e234 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
1010e118:	e0bffc17 	ldw	r2,-16(fp)
1010e11c:	10800a17 	ldw	r2,40(r2)
1010e120:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
1010e124:	e0bffc17 	ldw	r2,-16(fp)
1010e128:	10800b17 	ldw	r2,44(r2)
1010e12c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
1010e130:	e0fff717 	ldw	r3,-36(fp)
1010e134:	e0bff817 	ldw	r2,-32(fp)
1010e138:	18800536 	bltu	r3,r2,1010e150 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
1010e13c:	e0fff717 	ldw	r3,-36(fp)
1010e140:	e0bff817 	ldw	r2,-32(fp)
1010e144:	1885c83a 	sub	r2,r3,r2
1010e148:	e0bff615 	stw	r2,-40(fp)
1010e14c:	00000406 	br	1010e160 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
1010e150:	00c20004 	movi	r3,2048
1010e154:	e0bff817 	ldw	r2,-32(fp)
1010e158:	1885c83a 	sub	r2,r3,r2
1010e15c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010e160:	e0bff617 	ldw	r2,-40(fp)
1010e164:	10001e26 	beq	r2,zero,1010e1e0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
1010e168:	e0fffe17 	ldw	r3,-8(fp)
1010e16c:	e0bff617 	ldw	r2,-40(fp)
1010e170:	1880022e 	bgeu	r3,r2,1010e17c <altera_avalon_jtag_uart_read+0x90>
        n = space;
1010e174:	e0bffe17 	ldw	r2,-8(fp)
1010e178:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
1010e17c:	e0bffc17 	ldw	r2,-16(fp)
1010e180:	10c00e04 	addi	r3,r2,56
1010e184:	e0bff817 	ldw	r2,-32(fp)
1010e188:	1885883a 	add	r2,r3,r2
1010e18c:	e1bff617 	ldw	r6,-40(fp)
1010e190:	100b883a 	mov	r5,r2
1010e194:	e13ff517 	ldw	r4,-44(fp)
1010e198:	01061ec0 	call	101061ec <memcpy>
      ptr   += n;
1010e19c:	e0fff517 	ldw	r3,-44(fp)
1010e1a0:	e0bff617 	ldw	r2,-40(fp)
1010e1a4:	1885883a 	add	r2,r3,r2
1010e1a8:	e0bff515 	stw	r2,-44(fp)
      space -= n;
1010e1ac:	e0fffe17 	ldw	r3,-8(fp)
1010e1b0:	e0bff617 	ldw	r2,-40(fp)
1010e1b4:	1885c83a 	sub	r2,r3,r2
1010e1b8:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e1bc:	e0fff817 	ldw	r3,-32(fp)
1010e1c0:	e0bff617 	ldw	r2,-40(fp)
1010e1c4:	1885883a 	add	r2,r3,r2
1010e1c8:	10c1ffcc 	andi	r3,r2,2047
1010e1cc:	e0bffc17 	ldw	r2,-16(fp)
1010e1d0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
1010e1d4:	e0bffe17 	ldw	r2,-8(fp)
1010e1d8:	00bfcf16 	blt	zero,r2,1010e118 <__alt_data_end+0xfffee118>
1010e1dc:	00000106 	br	1010e1e4 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
1010e1e0:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
1010e1e4:	e0fff517 	ldw	r3,-44(fp)
1010e1e8:	e0bffd17 	ldw	r2,-12(fp)
1010e1ec:	1880141e 	bne	r3,r2,1010e240 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
1010e1f0:	e0bfff17 	ldw	r2,-4(fp)
1010e1f4:	1090000c 	andi	r2,r2,16384
1010e1f8:	1000131e 	bne	r2,zero,1010e248 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
1010e1fc:	0001883a 	nop
1010e200:	e0bffc17 	ldw	r2,-16(fp)
1010e204:	10c00a17 	ldw	r3,40(r2)
1010e208:	e0bff717 	ldw	r2,-36(fp)
1010e20c:	1880051e 	bne	r3,r2,1010e224 <altera_avalon_jtag_uart_read+0x138>
1010e210:	e0bffc17 	ldw	r2,-16(fp)
1010e214:	10c00917 	ldw	r3,36(r2)
1010e218:	e0bffc17 	ldw	r2,-16(fp)
1010e21c:	10800117 	ldw	r2,4(r2)
1010e220:	18bff736 	bltu	r3,r2,1010e200 <__alt_data_end+0xfffee200>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
1010e224:	e0bffc17 	ldw	r2,-16(fp)
1010e228:	10c00a17 	ldw	r3,40(r2)
1010e22c:	e0bff717 	ldw	r2,-36(fp)
1010e230:	18800726 	beq	r3,r2,1010e250 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010e234:	e0bffe17 	ldw	r2,-8(fp)
1010e238:	00bfb716 	blt	zero,r2,1010e118 <__alt_data_end+0xfffee118>
1010e23c:	00000506 	br	1010e254 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
1010e240:	0001883a 	nop
1010e244:	00000306 	br	1010e254 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
1010e248:	0001883a 	nop
1010e24c:	00000106 	br	1010e254 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
1010e250:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
1010e254:	e0fff517 	ldw	r3,-44(fp)
1010e258:	e0bffd17 	ldw	r2,-12(fp)
1010e25c:	18801826 	beq	r3,r2,1010e2c0 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e260:	0005303a 	rdctl	r2,status
1010e264:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e268:	e0fffb17 	ldw	r3,-20(fp)
1010e26c:	00bfff84 	movi	r2,-2
1010e270:	1884703a 	and	r2,r3,r2
1010e274:	1001703a 	wrctl	status,r2
  
  return context;
1010e278:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
1010e27c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e280:	e0bffc17 	ldw	r2,-16(fp)
1010e284:	10800817 	ldw	r2,32(r2)
1010e288:	10c00054 	ori	r3,r2,1
1010e28c:	e0bffc17 	ldw	r2,-16(fp)
1010e290:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010e294:	e0bffc17 	ldw	r2,-16(fp)
1010e298:	10800017 	ldw	r2,0(r2)
1010e29c:	10800104 	addi	r2,r2,4
1010e2a0:	1007883a 	mov	r3,r2
1010e2a4:	e0bffc17 	ldw	r2,-16(fp)
1010e2a8:	10800817 	ldw	r2,32(r2)
1010e2ac:	18800035 	stwio	r2,0(r3)
1010e2b0:	e0bffa17 	ldw	r2,-24(fp)
1010e2b4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e2b8:	e0bff917 	ldw	r2,-28(fp)
1010e2bc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
1010e2c0:	e0fff517 	ldw	r3,-44(fp)
1010e2c4:	e0bffd17 	ldw	r2,-12(fp)
1010e2c8:	18800426 	beq	r3,r2,1010e2dc <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
1010e2cc:	e0fff517 	ldw	r3,-44(fp)
1010e2d0:	e0bffd17 	ldw	r2,-12(fp)
1010e2d4:	1885c83a 	sub	r2,r3,r2
1010e2d8:	00000606 	br	1010e2f4 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
1010e2dc:	e0bfff17 	ldw	r2,-4(fp)
1010e2e0:	1090000c 	andi	r2,r2,16384
1010e2e4:	10000226 	beq	r2,zero,1010e2f0 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
1010e2e8:	00bffd44 	movi	r2,-11
1010e2ec:	00000106 	br	1010e2f4 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
1010e2f0:	00bffec4 	movi	r2,-5
}
1010e2f4:	e037883a 	mov	sp,fp
1010e2f8:	dfc00117 	ldw	ra,4(sp)
1010e2fc:	df000017 	ldw	fp,0(sp)
1010e300:	dec00204 	addi	sp,sp,8
1010e304:	f800283a 	ret

1010e308 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
1010e308:	defff304 	addi	sp,sp,-52
1010e30c:	dfc00c15 	stw	ra,48(sp)
1010e310:	df000b15 	stw	fp,44(sp)
1010e314:	df000b04 	addi	fp,sp,44
1010e318:	e13ffc15 	stw	r4,-16(fp)
1010e31c:	e17ffd15 	stw	r5,-12(fp)
1010e320:	e1bffe15 	stw	r6,-8(fp)
1010e324:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
1010e328:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
1010e32c:	e0bffd17 	ldw	r2,-12(fp)
1010e330:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010e334:	00003706 	br	1010e414 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
1010e338:	e0bffc17 	ldw	r2,-16(fp)
1010e33c:	10800c17 	ldw	r2,48(r2)
1010e340:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
1010e344:	e0bffc17 	ldw	r2,-16(fp)
1010e348:	10800d17 	ldw	r2,52(r2)
1010e34c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
1010e350:	e0fff917 	ldw	r3,-28(fp)
1010e354:	e0bff517 	ldw	r2,-44(fp)
1010e358:	1880062e 	bgeu	r3,r2,1010e374 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
1010e35c:	e0fff517 	ldw	r3,-44(fp)
1010e360:	e0bff917 	ldw	r2,-28(fp)
1010e364:	1885c83a 	sub	r2,r3,r2
1010e368:	10bfffc4 	addi	r2,r2,-1
1010e36c:	e0bff615 	stw	r2,-40(fp)
1010e370:	00000b06 	br	1010e3a0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1010e374:	e0bff517 	ldw	r2,-44(fp)
1010e378:	10000526 	beq	r2,zero,1010e390 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
1010e37c:	00c20004 	movi	r3,2048
1010e380:	e0bff917 	ldw	r2,-28(fp)
1010e384:	1885c83a 	sub	r2,r3,r2
1010e388:	e0bff615 	stw	r2,-40(fp)
1010e38c:	00000406 	br	1010e3a0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
1010e390:	00c1ffc4 	movi	r3,2047
1010e394:	e0bff917 	ldw	r2,-28(fp)
1010e398:	1885c83a 	sub	r2,r3,r2
1010e39c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010e3a0:	e0bff617 	ldw	r2,-40(fp)
1010e3a4:	10001e26 	beq	r2,zero,1010e420 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
1010e3a8:	e0fffe17 	ldw	r3,-8(fp)
1010e3ac:	e0bff617 	ldw	r2,-40(fp)
1010e3b0:	1880022e 	bgeu	r3,r2,1010e3bc <altera_avalon_jtag_uart_write+0xb4>
        n = count;
1010e3b4:	e0bffe17 	ldw	r2,-8(fp)
1010e3b8:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
1010e3bc:	e0bffc17 	ldw	r2,-16(fp)
1010e3c0:	10c20e04 	addi	r3,r2,2104
1010e3c4:	e0bff917 	ldw	r2,-28(fp)
1010e3c8:	1885883a 	add	r2,r3,r2
1010e3cc:	e1bff617 	ldw	r6,-40(fp)
1010e3d0:	e17ffd17 	ldw	r5,-12(fp)
1010e3d4:	1009883a 	mov	r4,r2
1010e3d8:	01061ec0 	call	101061ec <memcpy>
      ptr   += n;
1010e3dc:	e0fffd17 	ldw	r3,-12(fp)
1010e3e0:	e0bff617 	ldw	r2,-40(fp)
1010e3e4:	1885883a 	add	r2,r3,r2
1010e3e8:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
1010e3ec:	e0fffe17 	ldw	r3,-8(fp)
1010e3f0:	e0bff617 	ldw	r2,-40(fp)
1010e3f4:	1885c83a 	sub	r2,r3,r2
1010e3f8:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e3fc:	e0fff917 	ldw	r3,-28(fp)
1010e400:	e0bff617 	ldw	r2,-40(fp)
1010e404:	1885883a 	add	r2,r3,r2
1010e408:	10c1ffcc 	andi	r3,r2,2047
1010e40c:	e0bffc17 	ldw	r2,-16(fp)
1010e410:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010e414:	e0bffe17 	ldw	r2,-8(fp)
1010e418:	00bfc716 	blt	zero,r2,1010e338 <__alt_data_end+0xfffee338>
1010e41c:	00000106 	br	1010e424 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
1010e420:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e424:	0005303a 	rdctl	r2,status
1010e428:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e42c:	e0fffb17 	ldw	r3,-20(fp)
1010e430:	00bfff84 	movi	r2,-2
1010e434:	1884703a 	and	r2,r3,r2
1010e438:	1001703a 	wrctl	status,r2
  
  return context;
1010e43c:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
1010e440:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010e444:	e0bffc17 	ldw	r2,-16(fp)
1010e448:	10800817 	ldw	r2,32(r2)
1010e44c:	10c00094 	ori	r3,r2,2
1010e450:	e0bffc17 	ldw	r2,-16(fp)
1010e454:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010e458:	e0bffc17 	ldw	r2,-16(fp)
1010e45c:	10800017 	ldw	r2,0(r2)
1010e460:	10800104 	addi	r2,r2,4
1010e464:	1007883a 	mov	r3,r2
1010e468:	e0bffc17 	ldw	r2,-16(fp)
1010e46c:	10800817 	ldw	r2,32(r2)
1010e470:	18800035 	stwio	r2,0(r3)
1010e474:	e0bffa17 	ldw	r2,-24(fp)
1010e478:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e47c:	e0bff817 	ldw	r2,-32(fp)
1010e480:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
1010e484:	e0bffe17 	ldw	r2,-8(fp)
1010e488:	0080100e 	bge	zero,r2,1010e4cc <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
1010e48c:	e0bfff17 	ldw	r2,-4(fp)
1010e490:	1090000c 	andi	r2,r2,16384
1010e494:	1000101e 	bne	r2,zero,1010e4d8 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
1010e498:	0001883a 	nop
1010e49c:	e0bffc17 	ldw	r2,-16(fp)
1010e4a0:	10c00d17 	ldw	r3,52(r2)
1010e4a4:	e0bff517 	ldw	r2,-44(fp)
1010e4a8:	1880051e 	bne	r3,r2,1010e4c0 <altera_avalon_jtag_uart_write+0x1b8>
1010e4ac:	e0bffc17 	ldw	r2,-16(fp)
1010e4b0:	10c00917 	ldw	r3,36(r2)
1010e4b4:	e0bffc17 	ldw	r2,-16(fp)
1010e4b8:	10800117 	ldw	r2,4(r2)
1010e4bc:	18bff736 	bltu	r3,r2,1010e49c <__alt_data_end+0xfffee49c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
1010e4c0:	e0bffc17 	ldw	r2,-16(fp)
1010e4c4:	10800917 	ldw	r2,36(r2)
1010e4c8:	1000051e 	bne	r2,zero,1010e4e0 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
1010e4cc:	e0bffe17 	ldw	r2,-8(fp)
1010e4d0:	00bfd016 	blt	zero,r2,1010e414 <__alt_data_end+0xfffee414>
1010e4d4:	00000306 	br	1010e4e4 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
1010e4d8:	0001883a 	nop
1010e4dc:	00000106 	br	1010e4e4 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
1010e4e0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
1010e4e4:	e0fffd17 	ldw	r3,-12(fp)
1010e4e8:	e0bff717 	ldw	r2,-36(fp)
1010e4ec:	18800426 	beq	r3,r2,1010e500 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
1010e4f0:	e0fffd17 	ldw	r3,-12(fp)
1010e4f4:	e0bff717 	ldw	r2,-36(fp)
1010e4f8:	1885c83a 	sub	r2,r3,r2
1010e4fc:	00000606 	br	1010e518 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
1010e500:	e0bfff17 	ldw	r2,-4(fp)
1010e504:	1090000c 	andi	r2,r2,16384
1010e508:	10000226 	beq	r2,zero,1010e514 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
1010e50c:	00bffd44 	movi	r2,-11
1010e510:	00000106 	br	1010e518 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
1010e514:	00bffec4 	movi	r2,-5
}
1010e518:	e037883a 	mov	sp,fp
1010e51c:	dfc00117 	ldw	ra,4(sp)
1010e520:	df000017 	ldw	fp,0(sp)
1010e524:	dec00204 	addi	sp,sp,8
1010e528:	f800283a 	ret

1010e52c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
1010e52c:	defff504 	addi	sp,sp,-44
1010e530:	df000a15 	stw	fp,40(sp)
1010e534:	df000a04 	addi	fp,sp,40
1010e538:	e13ffc15 	stw	r4,-16(fp)
1010e53c:	e17ffd15 	stw	r5,-12(fp)
1010e540:	e1bffe15 	stw	r6,-8(fp)
1010e544:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
1010e548:	e03ff615 	stw	zero,-40(fp)
1010e54c:	00840474 	movhi	r2,4113
1010e550:	108c4b04 	addi	r2,r2,12588
1010e554:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
1010e558:	10003f26 	beq	r2,zero,1010e658 <alt_alarm_start+0x12c>
  {
    if (alarm)
1010e55c:	e0bffc17 	ldw	r2,-16(fp)
1010e560:	10003b26 	beq	r2,zero,1010e650 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
1010e564:	e0bffc17 	ldw	r2,-16(fp)
1010e568:	e0fffe17 	ldw	r3,-8(fp)
1010e56c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
1010e570:	e0bffc17 	ldw	r2,-16(fp)
1010e574:	e0ffff17 	ldw	r3,-4(fp)
1010e578:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e57c:	0005303a 	rdctl	r2,status
1010e580:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e584:	e0fff917 	ldw	r3,-28(fp)
1010e588:	00bfff84 	movi	r2,-2
1010e58c:	1884703a 	and	r2,r3,r2
1010e590:	1001703a 	wrctl	status,r2
  
  return context;
1010e594:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
1010e598:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1010e59c:	00840474 	movhi	r2,4113
1010e5a0:	108c4c04 	addi	r2,r2,12592
1010e5a4:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
1010e5a8:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
1010e5ac:	e0fffd17 	ldw	r3,-12(fp)
1010e5b0:	e0bff617 	ldw	r2,-40(fp)
1010e5b4:	1885883a 	add	r2,r3,r2
1010e5b8:	10c00044 	addi	r3,r2,1
1010e5bc:	e0bffc17 	ldw	r2,-16(fp)
1010e5c0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
1010e5c4:	e0bffc17 	ldw	r2,-16(fp)
1010e5c8:	10c00217 	ldw	r3,8(r2)
1010e5cc:	e0bff617 	ldw	r2,-40(fp)
1010e5d0:	1880042e 	bgeu	r3,r2,1010e5e4 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
1010e5d4:	e0bffc17 	ldw	r2,-16(fp)
1010e5d8:	00c00044 	movi	r3,1
1010e5dc:	10c00405 	stb	r3,16(r2)
1010e5e0:	00000206 	br	1010e5ec <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
1010e5e4:	e0bffc17 	ldw	r2,-16(fp)
1010e5e8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
1010e5ec:	e0fffc17 	ldw	r3,-16(fp)
1010e5f0:	00840474 	movhi	r2,4113
1010e5f4:	10858304 	addi	r2,r2,5644
1010e5f8:	e0bffa15 	stw	r2,-24(fp)
1010e5fc:	e0fffb15 	stw	r3,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010e600:	e0bffb17 	ldw	r2,-20(fp)
1010e604:	e0fffa17 	ldw	r3,-24(fp)
1010e608:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010e60c:	e0bffa17 	ldw	r2,-24(fp)
1010e610:	10c00017 	ldw	r3,0(r2)
1010e614:	e0bffb17 	ldw	r2,-20(fp)
1010e618:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010e61c:	e0bffa17 	ldw	r2,-24(fp)
1010e620:	10800017 	ldw	r2,0(r2)
1010e624:	e0fffb17 	ldw	r3,-20(fp)
1010e628:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010e62c:	e0bffa17 	ldw	r2,-24(fp)
1010e630:	e0fffb17 	ldw	r3,-20(fp)
1010e634:	10c00015 	stw	r3,0(r2)
1010e638:	e0bff817 	ldw	r2,-32(fp)
1010e63c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e640:	e0bff717 	ldw	r2,-36(fp)
1010e644:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1010e648:	0005883a 	mov	r2,zero
1010e64c:	00000306 	br	1010e65c <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
1010e650:	00bffa84 	movi	r2,-22
1010e654:	00000106 	br	1010e65c <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
1010e658:	00bfde84 	movi	r2,-134
  }
}
1010e65c:	e037883a 	mov	sp,fp
1010e660:	df000017 	ldw	fp,0(sp)
1010e664:	dec00104 	addi	sp,sp,4
1010e668:	f800283a 	ret

1010e66c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1010e66c:	defffe04 	addi	sp,sp,-8
1010e670:	df000115 	stw	fp,4(sp)
1010e674:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
1010e678:	e03fff15 	stw	zero,-4(fp)
1010e67c:	00000506 	br	1010e694 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
1010e680:	e0bfff17 	ldw	r2,-4(fp)
1010e684:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
1010e688:	e0bfff17 	ldw	r2,-4(fp)
1010e68c:	10800804 	addi	r2,r2,32
1010e690:	e0bfff15 	stw	r2,-4(fp)
1010e694:	e0bfff17 	ldw	r2,-4(fp)
1010e698:	10820030 	cmpltui	r2,r2,2048
1010e69c:	103ff81e 	bne	r2,zero,1010e680 <__alt_data_end+0xfffee680>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1010e6a0:	0001883a 	nop
1010e6a4:	e037883a 	mov	sp,fp
1010e6a8:	df000017 	ldw	fp,0(sp)
1010e6ac:	dec00104 	addi	sp,sp,4
1010e6b0:	f800283a 	ret

1010e6b4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010e6b4:	defffe04 	addi	sp,sp,-8
1010e6b8:	dfc00115 	stw	ra,4(sp)
1010e6bc:	df000015 	stw	fp,0(sp)
1010e6c0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010e6c4:	00840474 	movhi	r2,4113
1010e6c8:	10858004 	addi	r2,r2,5632
1010e6cc:	10800017 	ldw	r2,0(r2)
1010e6d0:	10000526 	beq	r2,zero,1010e6e8 <alt_get_errno+0x34>
1010e6d4:	00840474 	movhi	r2,4113
1010e6d8:	10858004 	addi	r2,r2,5632
1010e6dc:	10800017 	ldw	r2,0(r2)
1010e6e0:	103ee83a 	callr	r2
1010e6e4:	00000206 	br	1010e6f0 <alt_get_errno+0x3c>
1010e6e8:	00840474 	movhi	r2,4113
1010e6ec:	108c4604 	addi	r2,r2,12568
}
1010e6f0:	e037883a 	mov	sp,fp
1010e6f4:	dfc00117 	ldw	ra,4(sp)
1010e6f8:	df000017 	ldw	fp,0(sp)
1010e6fc:	dec00204 	addi	sp,sp,8
1010e700:	f800283a 	ret

1010e704 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
1010e704:	defffa04 	addi	sp,sp,-24
1010e708:	dfc00515 	stw	ra,20(sp)
1010e70c:	df000415 	stw	fp,16(sp)
1010e710:	df000404 	addi	fp,sp,16
1010e714:	e13ffe15 	stw	r4,-8(fp)
1010e718:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
1010e71c:	e0bffe17 	ldw	r2,-8(fp)
1010e720:	10000326 	beq	r2,zero,1010e730 <alt_dev_llist_insert+0x2c>
1010e724:	e0bffe17 	ldw	r2,-8(fp)
1010e728:	10800217 	ldw	r2,8(r2)
1010e72c:	1000061e 	bne	r2,zero,1010e748 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
1010e730:	010e6b40 	call	1010e6b4 <alt_get_errno>
1010e734:	1007883a 	mov	r3,r2
1010e738:	00800584 	movi	r2,22
1010e73c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
1010e740:	00bffa84 	movi	r2,-22
1010e744:	00001306 	br	1010e794 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
1010e748:	e0bffe17 	ldw	r2,-8(fp)
1010e74c:	e0ffff17 	ldw	r3,-4(fp)
1010e750:	e0fffc15 	stw	r3,-16(fp)
1010e754:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010e758:	e0bffd17 	ldw	r2,-12(fp)
1010e75c:	e0fffc17 	ldw	r3,-16(fp)
1010e760:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010e764:	e0bffc17 	ldw	r2,-16(fp)
1010e768:	10c00017 	ldw	r3,0(r2)
1010e76c:	e0bffd17 	ldw	r2,-12(fp)
1010e770:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010e774:	e0bffc17 	ldw	r2,-16(fp)
1010e778:	10800017 	ldw	r2,0(r2)
1010e77c:	e0fffd17 	ldw	r3,-12(fp)
1010e780:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010e784:	e0bffc17 	ldw	r2,-16(fp)
1010e788:	e0fffd17 	ldw	r3,-12(fp)
1010e78c:	10c00015 	stw	r3,0(r2)

  return 0;  
1010e790:	0005883a 	mov	r2,zero
}
1010e794:	e037883a 	mov	sp,fp
1010e798:	dfc00117 	ldw	ra,4(sp)
1010e79c:	df000017 	ldw	fp,0(sp)
1010e7a0:	dec00204 	addi	sp,sp,8
1010e7a4:	f800283a 	ret

1010e7a8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1010e7a8:	defffd04 	addi	sp,sp,-12
1010e7ac:	dfc00215 	stw	ra,8(sp)
1010e7b0:	df000115 	stw	fp,4(sp)
1010e7b4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010e7b8:	00840474 	movhi	r2,4113
1010e7bc:	10bdff04 	addi	r2,r2,-2052
1010e7c0:	e0bfff15 	stw	r2,-4(fp)
1010e7c4:	00000606 	br	1010e7e0 <_do_ctors+0x38>
        (*ctor) (); 
1010e7c8:	e0bfff17 	ldw	r2,-4(fp)
1010e7cc:	10800017 	ldw	r2,0(r2)
1010e7d0:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010e7d4:	e0bfff17 	ldw	r2,-4(fp)
1010e7d8:	10bfff04 	addi	r2,r2,-4
1010e7dc:	e0bfff15 	stw	r2,-4(fp)
1010e7e0:	e0ffff17 	ldw	r3,-4(fp)
1010e7e4:	00840474 	movhi	r2,4113
1010e7e8:	10be0004 	addi	r2,r2,-2048
1010e7ec:	18bff62e 	bgeu	r3,r2,1010e7c8 <__alt_data_end+0xfffee7c8>
        (*ctor) (); 
}
1010e7f0:	0001883a 	nop
1010e7f4:	e037883a 	mov	sp,fp
1010e7f8:	dfc00117 	ldw	ra,4(sp)
1010e7fc:	df000017 	ldw	fp,0(sp)
1010e800:	dec00204 	addi	sp,sp,8
1010e804:	f800283a 	ret

1010e808 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1010e808:	defffd04 	addi	sp,sp,-12
1010e80c:	dfc00215 	stw	ra,8(sp)
1010e810:	df000115 	stw	fp,4(sp)
1010e814:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010e818:	00840474 	movhi	r2,4113
1010e81c:	10bdff04 	addi	r2,r2,-2052
1010e820:	e0bfff15 	stw	r2,-4(fp)
1010e824:	00000606 	br	1010e840 <_do_dtors+0x38>
        (*dtor) (); 
1010e828:	e0bfff17 	ldw	r2,-4(fp)
1010e82c:	10800017 	ldw	r2,0(r2)
1010e830:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010e834:	e0bfff17 	ldw	r2,-4(fp)
1010e838:	10bfff04 	addi	r2,r2,-4
1010e83c:	e0bfff15 	stw	r2,-4(fp)
1010e840:	e0ffff17 	ldw	r3,-4(fp)
1010e844:	00840474 	movhi	r2,4113
1010e848:	10be0004 	addi	r2,r2,-2048
1010e84c:	18bff62e 	bgeu	r3,r2,1010e828 <__alt_data_end+0xfffee828>
        (*dtor) (); 
}
1010e850:	0001883a 	nop
1010e854:	e037883a 	mov	sp,fp
1010e858:	dfc00117 	ldw	ra,4(sp)
1010e85c:	df000017 	ldw	fp,0(sp)
1010e860:	dec00204 	addi	sp,sp,8
1010e864:	f800283a 	ret

1010e868 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1010e868:	defffe04 	addi	sp,sp,-8
1010e86c:	dfc00115 	stw	ra,4(sp)
1010e870:	df000015 	stw	fp,0(sp)
1010e874:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
1010e878:	01440004 	movi	r5,4096
1010e87c:	0009883a 	mov	r4,zero
1010e880:	010f3400 	call	1010f340 <alt_icache_flush>
#endif
}
1010e884:	0001883a 	nop
1010e888:	e037883a 	mov	sp,fp
1010e88c:	dfc00117 	ldw	ra,4(sp)
1010e890:	df000017 	ldw	fp,0(sp)
1010e894:	dec00204 	addi	sp,sp,8
1010e898:	f800283a 	ret

1010e89c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010e89c:	defff904 	addi	sp,sp,-28
1010e8a0:	dfc00615 	stw	ra,24(sp)
1010e8a4:	df000515 	stw	fp,20(sp)
1010e8a8:	df000504 	addi	fp,sp,20
1010e8ac:	e13ffc15 	stw	r4,-16(fp)
1010e8b0:	e17ffd15 	stw	r5,-12(fp)
1010e8b4:	e1bffe15 	stw	r6,-8(fp)
1010e8b8:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
1010e8bc:	e0800217 	ldw	r2,8(fp)
1010e8c0:	d8800015 	stw	r2,0(sp)
1010e8c4:	e1ffff17 	ldw	r7,-4(fp)
1010e8c8:	e1bffe17 	ldw	r6,-8(fp)
1010e8cc:	e17ffd17 	ldw	r5,-12(fp)
1010e8d0:	e13ffc17 	ldw	r4,-16(fp)
1010e8d4:	010ea7c0 	call	1010ea7c <alt_iic_isr_register>
}  
1010e8d8:	e037883a 	mov	sp,fp
1010e8dc:	dfc00117 	ldw	ra,4(sp)
1010e8e0:	df000017 	ldw	fp,0(sp)
1010e8e4:	dec00204 	addi	sp,sp,8
1010e8e8:	f800283a 	ret

1010e8ec <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
1010e8ec:	defff904 	addi	sp,sp,-28
1010e8f0:	df000615 	stw	fp,24(sp)
1010e8f4:	df000604 	addi	fp,sp,24
1010e8f8:	e13ffe15 	stw	r4,-8(fp)
1010e8fc:	e17fff15 	stw	r5,-4(fp)
1010e900:	e0bfff17 	ldw	r2,-4(fp)
1010e904:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e908:	0005303a 	rdctl	r2,status
1010e90c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e910:	e0fffb17 	ldw	r3,-20(fp)
1010e914:	00bfff84 	movi	r2,-2
1010e918:	1884703a 	and	r2,r3,r2
1010e91c:	1001703a 	wrctl	status,r2
  
  return context;
1010e920:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010e924:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
1010e928:	00c00044 	movi	r3,1
1010e92c:	e0bffa17 	ldw	r2,-24(fp)
1010e930:	1884983a 	sll	r2,r3,r2
1010e934:	1007883a 	mov	r3,r2
1010e938:	00840474 	movhi	r2,4113
1010e93c:	108c4a04 	addi	r2,r2,12584
1010e940:	10800017 	ldw	r2,0(r2)
1010e944:	1886b03a 	or	r3,r3,r2
1010e948:	00840474 	movhi	r2,4113
1010e94c:	108c4a04 	addi	r2,r2,12584
1010e950:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010e954:	00840474 	movhi	r2,4113
1010e958:	108c4a04 	addi	r2,r2,12584
1010e95c:	10800017 	ldw	r2,0(r2)
1010e960:	100170fa 	wrctl	ienable,r2
1010e964:	e0bffc17 	ldw	r2,-16(fp)
1010e968:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e96c:	e0bffd17 	ldw	r2,-12(fp)
1010e970:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010e974:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
1010e978:	0001883a 	nop
}
1010e97c:	e037883a 	mov	sp,fp
1010e980:	df000017 	ldw	fp,0(sp)
1010e984:	dec00104 	addi	sp,sp,4
1010e988:	f800283a 	ret

1010e98c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
1010e98c:	defff904 	addi	sp,sp,-28
1010e990:	df000615 	stw	fp,24(sp)
1010e994:	df000604 	addi	fp,sp,24
1010e998:	e13ffe15 	stw	r4,-8(fp)
1010e99c:	e17fff15 	stw	r5,-4(fp)
1010e9a0:	e0bfff17 	ldw	r2,-4(fp)
1010e9a4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e9a8:	0005303a 	rdctl	r2,status
1010e9ac:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e9b0:	e0fffb17 	ldw	r3,-20(fp)
1010e9b4:	00bfff84 	movi	r2,-2
1010e9b8:	1884703a 	and	r2,r3,r2
1010e9bc:	1001703a 	wrctl	status,r2
  
  return context;
1010e9c0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010e9c4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
1010e9c8:	00c00044 	movi	r3,1
1010e9cc:	e0bffa17 	ldw	r2,-24(fp)
1010e9d0:	1884983a 	sll	r2,r3,r2
1010e9d4:	0084303a 	nor	r2,zero,r2
1010e9d8:	1007883a 	mov	r3,r2
1010e9dc:	00840474 	movhi	r2,4113
1010e9e0:	108c4a04 	addi	r2,r2,12584
1010e9e4:	10800017 	ldw	r2,0(r2)
1010e9e8:	1886703a 	and	r3,r3,r2
1010e9ec:	00840474 	movhi	r2,4113
1010e9f0:	108c4a04 	addi	r2,r2,12584
1010e9f4:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010e9f8:	00840474 	movhi	r2,4113
1010e9fc:	108c4a04 	addi	r2,r2,12584
1010ea00:	10800017 	ldw	r2,0(r2)
1010ea04:	100170fa 	wrctl	ienable,r2
1010ea08:	e0bffc17 	ldw	r2,-16(fp)
1010ea0c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010ea10:	e0bffd17 	ldw	r2,-12(fp)
1010ea14:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010ea18:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
1010ea1c:	0001883a 	nop
}
1010ea20:	e037883a 	mov	sp,fp
1010ea24:	df000017 	ldw	fp,0(sp)
1010ea28:	dec00104 	addi	sp,sp,4
1010ea2c:	f800283a 	ret

1010ea30 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
1010ea30:	defffc04 	addi	sp,sp,-16
1010ea34:	df000315 	stw	fp,12(sp)
1010ea38:	df000304 	addi	fp,sp,12
1010ea3c:	e13ffe15 	stw	r4,-8(fp)
1010ea40:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
1010ea44:	000530fa 	rdctl	r2,ienable
1010ea48:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1010ea4c:	00c00044 	movi	r3,1
1010ea50:	e0bfff17 	ldw	r2,-4(fp)
1010ea54:	1884983a 	sll	r2,r3,r2
1010ea58:	1007883a 	mov	r3,r2
1010ea5c:	e0bffd17 	ldw	r2,-12(fp)
1010ea60:	1884703a 	and	r2,r3,r2
1010ea64:	1004c03a 	cmpne	r2,r2,zero
1010ea68:	10803fcc 	andi	r2,r2,255
}
1010ea6c:	e037883a 	mov	sp,fp
1010ea70:	df000017 	ldw	fp,0(sp)
1010ea74:	dec00104 	addi	sp,sp,4
1010ea78:	f800283a 	ret

1010ea7c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010ea7c:	defff504 	addi	sp,sp,-44
1010ea80:	dfc00a15 	stw	ra,40(sp)
1010ea84:	df000915 	stw	fp,36(sp)
1010ea88:	df000904 	addi	fp,sp,36
1010ea8c:	e13ffc15 	stw	r4,-16(fp)
1010ea90:	e17ffd15 	stw	r5,-12(fp)
1010ea94:	e1bffe15 	stw	r6,-8(fp)
1010ea98:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
1010ea9c:	00bffa84 	movi	r2,-22
1010eaa0:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
1010eaa4:	e0bffd17 	ldw	r2,-12(fp)
1010eaa8:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
1010eaac:	e0bff817 	ldw	r2,-32(fp)
1010eab0:	10800808 	cmpgei	r2,r2,32
1010eab4:	1000271e 	bne	r2,zero,1010eb54 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010eab8:	0005303a 	rdctl	r2,status
1010eabc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010eac0:	e0fffb17 	ldw	r3,-20(fp)
1010eac4:	00bfff84 	movi	r2,-2
1010eac8:	1884703a 	and	r2,r3,r2
1010eacc:	1001703a 	wrctl	status,r2
  
  return context;
1010ead0:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
1010ead4:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
1010ead8:	00840474 	movhi	r2,4113
1010eadc:	108c5804 	addi	r2,r2,12640
1010eae0:	e0fff817 	ldw	r3,-32(fp)
1010eae4:	180690fa 	slli	r3,r3,3
1010eae8:	10c5883a 	add	r2,r2,r3
1010eaec:	e0fffe17 	ldw	r3,-8(fp)
1010eaf0:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
1010eaf4:	00840474 	movhi	r2,4113
1010eaf8:	108c5804 	addi	r2,r2,12640
1010eafc:	e0fff817 	ldw	r3,-32(fp)
1010eb00:	180690fa 	slli	r3,r3,3
1010eb04:	10c5883a 	add	r2,r2,r3
1010eb08:	10800104 	addi	r2,r2,4
1010eb0c:	e0ffff17 	ldw	r3,-4(fp)
1010eb10:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
1010eb14:	e0bffe17 	ldw	r2,-8(fp)
1010eb18:	10000526 	beq	r2,zero,1010eb30 <alt_iic_isr_register+0xb4>
1010eb1c:	e0bff817 	ldw	r2,-32(fp)
1010eb20:	100b883a 	mov	r5,r2
1010eb24:	e13ffc17 	ldw	r4,-16(fp)
1010eb28:	010e8ec0 	call	1010e8ec <alt_ic_irq_enable>
1010eb2c:	00000406 	br	1010eb40 <alt_iic_isr_register+0xc4>
1010eb30:	e0bff817 	ldw	r2,-32(fp)
1010eb34:	100b883a 	mov	r5,r2
1010eb38:	e13ffc17 	ldw	r4,-16(fp)
1010eb3c:	010e98c0 	call	1010e98c <alt_ic_irq_disable>
1010eb40:	e0bff715 	stw	r2,-36(fp)
1010eb44:	e0bffa17 	ldw	r2,-24(fp)
1010eb48:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010eb4c:	e0bff917 	ldw	r2,-28(fp)
1010eb50:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1010eb54:	e0bff717 	ldw	r2,-36(fp)
}
1010eb58:	e037883a 	mov	sp,fp
1010eb5c:	dfc00117 	ldw	ra,4(sp)
1010eb60:	df000017 	ldw	fp,0(sp)
1010eb64:	dec00204 	addi	sp,sp,8
1010eb68:	f800283a 	ret

1010eb6c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
1010eb6c:	defff904 	addi	sp,sp,-28
1010eb70:	dfc00615 	stw	ra,24(sp)
1010eb74:	df000515 	stw	fp,20(sp)
1010eb78:	df000504 	addi	fp,sp,20
1010eb7c:	e13ffc15 	stw	r4,-16(fp)
1010eb80:	e17ffd15 	stw	r5,-12(fp)
1010eb84:	e1bffe15 	stw	r6,-8(fp)
1010eb88:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
1010eb8c:	e1bfff17 	ldw	r6,-4(fp)
1010eb90:	e17ffe17 	ldw	r5,-8(fp)
1010eb94:	e13ffd17 	ldw	r4,-12(fp)
1010eb98:	010edc80 	call	1010edc8 <open>
1010eb9c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
1010eba0:	e0bffb17 	ldw	r2,-20(fp)
1010eba4:	10001c16 	blt	r2,zero,1010ec18 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
1010eba8:	00840474 	movhi	r2,4113
1010ebac:	1080fd04 	addi	r2,r2,1012
1010ebb0:	e0fffb17 	ldw	r3,-20(fp)
1010ebb4:	18c00324 	muli	r3,r3,12
1010ebb8:	10c5883a 	add	r2,r2,r3
1010ebbc:	10c00017 	ldw	r3,0(r2)
1010ebc0:	e0bffc17 	ldw	r2,-16(fp)
1010ebc4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1010ebc8:	00840474 	movhi	r2,4113
1010ebcc:	1080fd04 	addi	r2,r2,1012
1010ebd0:	e0fffb17 	ldw	r3,-20(fp)
1010ebd4:	18c00324 	muli	r3,r3,12
1010ebd8:	10c5883a 	add	r2,r2,r3
1010ebdc:	10800104 	addi	r2,r2,4
1010ebe0:	10c00017 	ldw	r3,0(r2)
1010ebe4:	e0bffc17 	ldw	r2,-16(fp)
1010ebe8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
1010ebec:	00840474 	movhi	r2,4113
1010ebf0:	1080fd04 	addi	r2,r2,1012
1010ebf4:	e0fffb17 	ldw	r3,-20(fp)
1010ebf8:	18c00324 	muli	r3,r3,12
1010ebfc:	10c5883a 	add	r2,r2,r3
1010ec00:	10800204 	addi	r2,r2,8
1010ec04:	10c00017 	ldw	r3,0(r2)
1010ec08:	e0bffc17 	ldw	r2,-16(fp)
1010ec0c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
1010ec10:	e13ffb17 	ldw	r4,-20(fp)
1010ec14:	010d7a00 	call	1010d7a0 <alt_release_fd>
  }
} 
1010ec18:	0001883a 	nop
1010ec1c:	e037883a 	mov	sp,fp
1010ec20:	dfc00117 	ldw	ra,4(sp)
1010ec24:	df000017 	ldw	fp,0(sp)
1010ec28:	dec00204 	addi	sp,sp,8
1010ec2c:	f800283a 	ret

1010ec30 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
1010ec30:	defffb04 	addi	sp,sp,-20
1010ec34:	dfc00415 	stw	ra,16(sp)
1010ec38:	df000315 	stw	fp,12(sp)
1010ec3c:	df000304 	addi	fp,sp,12
1010ec40:	e13ffd15 	stw	r4,-12(fp)
1010ec44:	e17ffe15 	stw	r5,-8(fp)
1010ec48:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
1010ec4c:	01c07fc4 	movi	r7,511
1010ec50:	01800044 	movi	r6,1
1010ec54:	e17ffd17 	ldw	r5,-12(fp)
1010ec58:	01040474 	movhi	r4,4113
1010ec5c:	21010004 	addi	r4,r4,1024
1010ec60:	010eb6c0 	call	1010eb6c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1010ec64:	01c07fc4 	movi	r7,511
1010ec68:	000d883a 	mov	r6,zero
1010ec6c:	e17ffe17 	ldw	r5,-8(fp)
1010ec70:	01040474 	movhi	r4,4113
1010ec74:	2100fd04 	addi	r4,r4,1012
1010ec78:	010eb6c0 	call	1010eb6c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
1010ec7c:	01c07fc4 	movi	r7,511
1010ec80:	01800044 	movi	r6,1
1010ec84:	e17fff17 	ldw	r5,-4(fp)
1010ec88:	01040474 	movhi	r4,4113
1010ec8c:	21010304 	addi	r4,r4,1036
1010ec90:	010eb6c0 	call	1010eb6c <alt_open_fd>
}  
1010ec94:	0001883a 	nop
1010ec98:	e037883a 	mov	sp,fp
1010ec9c:	dfc00117 	ldw	ra,4(sp)
1010eca0:	df000017 	ldw	fp,0(sp)
1010eca4:	dec00204 	addi	sp,sp,8
1010eca8:	f800283a 	ret

1010ecac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010ecac:	defffe04 	addi	sp,sp,-8
1010ecb0:	dfc00115 	stw	ra,4(sp)
1010ecb4:	df000015 	stw	fp,0(sp)
1010ecb8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010ecbc:	00840474 	movhi	r2,4113
1010ecc0:	10858004 	addi	r2,r2,5632
1010ecc4:	10800017 	ldw	r2,0(r2)
1010ecc8:	10000526 	beq	r2,zero,1010ece0 <alt_get_errno+0x34>
1010eccc:	00840474 	movhi	r2,4113
1010ecd0:	10858004 	addi	r2,r2,5632
1010ecd4:	10800017 	ldw	r2,0(r2)
1010ecd8:	103ee83a 	callr	r2
1010ecdc:	00000206 	br	1010ece8 <alt_get_errno+0x3c>
1010ece0:	00840474 	movhi	r2,4113
1010ece4:	108c4604 	addi	r2,r2,12568
}
1010ece8:	e037883a 	mov	sp,fp
1010ecec:	dfc00117 	ldw	ra,4(sp)
1010ecf0:	df000017 	ldw	fp,0(sp)
1010ecf4:	dec00204 	addi	sp,sp,8
1010ecf8:	f800283a 	ret

1010ecfc <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
1010ecfc:	defffd04 	addi	sp,sp,-12
1010ed00:	df000215 	stw	fp,8(sp)
1010ed04:	df000204 	addi	fp,sp,8
1010ed08:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
1010ed0c:	e0bfff17 	ldw	r2,-4(fp)
1010ed10:	10800217 	ldw	r2,8(r2)
1010ed14:	10d00034 	orhi	r3,r2,16384
1010ed18:	e0bfff17 	ldw	r2,-4(fp)
1010ed1c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010ed20:	e03ffe15 	stw	zero,-8(fp)
1010ed24:	00001d06 	br	1010ed9c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010ed28:	00840474 	movhi	r2,4113
1010ed2c:	1080fd04 	addi	r2,r2,1012
1010ed30:	e0fffe17 	ldw	r3,-8(fp)
1010ed34:	18c00324 	muli	r3,r3,12
1010ed38:	10c5883a 	add	r2,r2,r3
1010ed3c:	10c00017 	ldw	r3,0(r2)
1010ed40:	e0bfff17 	ldw	r2,-4(fp)
1010ed44:	10800017 	ldw	r2,0(r2)
1010ed48:	1880111e 	bne	r3,r2,1010ed90 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010ed4c:	00840474 	movhi	r2,4113
1010ed50:	1080fd04 	addi	r2,r2,1012
1010ed54:	e0fffe17 	ldw	r3,-8(fp)
1010ed58:	18c00324 	muli	r3,r3,12
1010ed5c:	10c5883a 	add	r2,r2,r3
1010ed60:	10800204 	addi	r2,r2,8
1010ed64:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010ed68:	1000090e 	bge	r2,zero,1010ed90 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
1010ed6c:	e0bffe17 	ldw	r2,-8(fp)
1010ed70:	10c00324 	muli	r3,r2,12
1010ed74:	00840474 	movhi	r2,4113
1010ed78:	1080fd04 	addi	r2,r2,1012
1010ed7c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010ed80:	e0bfff17 	ldw	r2,-4(fp)
1010ed84:	18800226 	beq	r3,r2,1010ed90 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
1010ed88:	00bffcc4 	movi	r2,-13
1010ed8c:	00000a06 	br	1010edb8 <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010ed90:	e0bffe17 	ldw	r2,-8(fp)
1010ed94:	10800044 	addi	r2,r2,1
1010ed98:	e0bffe15 	stw	r2,-8(fp)
1010ed9c:	00840474 	movhi	r2,4113
1010eda0:	10857f04 	addi	r2,r2,5628
1010eda4:	10800017 	ldw	r2,0(r2)
1010eda8:	1007883a 	mov	r3,r2
1010edac:	e0bffe17 	ldw	r2,-8(fp)
1010edb0:	18bfdd2e 	bgeu	r3,r2,1010ed28 <__alt_data_end+0xfffeed28>
    }
  }
  
  /* The device is not locked */
 
  return 0;
1010edb4:	0005883a 	mov	r2,zero
}
1010edb8:	e037883a 	mov	sp,fp
1010edbc:	df000017 	ldw	fp,0(sp)
1010edc0:	dec00104 	addi	sp,sp,4
1010edc4:	f800283a 	ret

1010edc8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
1010edc8:	defff604 	addi	sp,sp,-40
1010edcc:	dfc00915 	stw	ra,36(sp)
1010edd0:	df000815 	stw	fp,32(sp)
1010edd4:	df000804 	addi	fp,sp,32
1010edd8:	e13ffd15 	stw	r4,-12(fp)
1010eddc:	e17ffe15 	stw	r5,-8(fp)
1010ede0:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
1010ede4:	00bfffc4 	movi	r2,-1
1010ede8:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
1010edec:	00bffb44 	movi	r2,-19
1010edf0:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
1010edf4:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
1010edf8:	01440474 	movhi	r5,4113
1010edfc:	29457d04 	addi	r5,r5,5620
1010ee00:	e13ffd17 	ldw	r4,-12(fp)
1010ee04:	010f0e80 	call	1010f0e8 <alt_find_dev>
1010ee08:	e0bff815 	stw	r2,-32(fp)
1010ee0c:	e0bff817 	ldw	r2,-32(fp)
1010ee10:	1000051e 	bne	r2,zero,1010ee28 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1010ee14:	e13ffd17 	ldw	r4,-12(fp)
1010ee18:	010f1780 	call	1010f178 <alt_find_file>
1010ee1c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
1010ee20:	00800044 	movi	r2,1
1010ee24:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
1010ee28:	e0bff817 	ldw	r2,-32(fp)
1010ee2c:	10002926 	beq	r2,zero,1010eed4 <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
1010ee30:	e13ff817 	ldw	r4,-32(fp)
1010ee34:	010f28c0 	call	1010f28c <alt_get_fd>
1010ee38:	e0bff915 	stw	r2,-28(fp)
1010ee3c:	e0bff917 	ldw	r2,-28(fp)
1010ee40:	1000030e 	bge	r2,zero,1010ee50 <open+0x88>
    {
      status = index;
1010ee44:	e0bff917 	ldw	r2,-28(fp)
1010ee48:	e0bffa15 	stw	r2,-24(fp)
1010ee4c:	00002306 	br	1010eedc <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
1010ee50:	e0bff917 	ldw	r2,-28(fp)
1010ee54:	10c00324 	muli	r3,r2,12
1010ee58:	00840474 	movhi	r2,4113
1010ee5c:	1080fd04 	addi	r2,r2,1012
1010ee60:	1885883a 	add	r2,r3,r2
1010ee64:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
1010ee68:	e0fffe17 	ldw	r3,-8(fp)
1010ee6c:	00900034 	movhi	r2,16384
1010ee70:	10bfffc4 	addi	r2,r2,-1
1010ee74:	1886703a 	and	r3,r3,r2
1010ee78:	e0bffc17 	ldw	r2,-16(fp)
1010ee7c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
1010ee80:	e0bffb17 	ldw	r2,-20(fp)
1010ee84:	1000051e 	bne	r2,zero,1010ee9c <open+0xd4>
1010ee88:	e13ffc17 	ldw	r4,-16(fp)
1010ee8c:	010ecfc0 	call	1010ecfc <alt_file_locked>
1010ee90:	e0bffa15 	stw	r2,-24(fp)
1010ee94:	e0bffa17 	ldw	r2,-24(fp)
1010ee98:	10001016 	blt	r2,zero,1010eedc <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1010ee9c:	e0bff817 	ldw	r2,-32(fp)
1010eea0:	10800317 	ldw	r2,12(r2)
1010eea4:	10000826 	beq	r2,zero,1010eec8 <open+0x100>
1010eea8:	e0bff817 	ldw	r2,-32(fp)
1010eeac:	10800317 	ldw	r2,12(r2)
1010eeb0:	e1ffff17 	ldw	r7,-4(fp)
1010eeb4:	e1bffe17 	ldw	r6,-8(fp)
1010eeb8:	e17ffd17 	ldw	r5,-12(fp)
1010eebc:	e13ffc17 	ldw	r4,-16(fp)
1010eec0:	103ee83a 	callr	r2
1010eec4:	00000106 	br	1010eecc <open+0x104>
1010eec8:	0005883a 	mov	r2,zero
1010eecc:	e0bffa15 	stw	r2,-24(fp)
1010eed0:	00000206 	br	1010eedc <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
1010eed4:	00bffb44 	movi	r2,-19
1010eed8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
1010eedc:	e0bffa17 	ldw	r2,-24(fp)
1010eee0:	1000090e 	bge	r2,zero,1010ef08 <open+0x140>
  {
    alt_release_fd (index);  
1010eee4:	e13ff917 	ldw	r4,-28(fp)
1010eee8:	010d7a00 	call	1010d7a0 <alt_release_fd>
    ALT_ERRNO = -status;
1010eeec:	010ecac0 	call	1010ecac <alt_get_errno>
1010eef0:	1007883a 	mov	r3,r2
1010eef4:	e0bffa17 	ldw	r2,-24(fp)
1010eef8:	0085c83a 	sub	r2,zero,r2
1010eefc:	18800015 	stw	r2,0(r3)
    return -1;
1010ef00:	00bfffc4 	movi	r2,-1
1010ef04:	00000106 	br	1010ef0c <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
1010ef08:	e0bff917 	ldw	r2,-28(fp)
}
1010ef0c:	e037883a 	mov	sp,fp
1010ef10:	dfc00117 	ldw	ra,4(sp)
1010ef14:	df000017 	ldw	fp,0(sp)
1010ef18:	dec00204 	addi	sp,sp,8
1010ef1c:	f800283a 	ret

1010ef20 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
1010ef20:	defffa04 	addi	sp,sp,-24
1010ef24:	df000515 	stw	fp,20(sp)
1010ef28:	df000504 	addi	fp,sp,20
1010ef2c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010ef30:	0005303a 	rdctl	r2,status
1010ef34:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010ef38:	e0fffc17 	ldw	r3,-16(fp)
1010ef3c:	00bfff84 	movi	r2,-2
1010ef40:	1884703a 	and	r2,r3,r2
1010ef44:	1001703a 	wrctl	status,r2
  
  return context;
1010ef48:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1010ef4c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
1010ef50:	e0bfff17 	ldw	r2,-4(fp)
1010ef54:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
1010ef58:	e0bffd17 	ldw	r2,-12(fp)
1010ef5c:	10800017 	ldw	r2,0(r2)
1010ef60:	e0fffd17 	ldw	r3,-12(fp)
1010ef64:	18c00117 	ldw	r3,4(r3)
1010ef68:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1010ef6c:	e0bffd17 	ldw	r2,-12(fp)
1010ef70:	10800117 	ldw	r2,4(r2)
1010ef74:	e0fffd17 	ldw	r3,-12(fp)
1010ef78:	18c00017 	ldw	r3,0(r3)
1010ef7c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
1010ef80:	e0bffd17 	ldw	r2,-12(fp)
1010ef84:	e0fffd17 	ldw	r3,-12(fp)
1010ef88:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1010ef8c:	e0bffd17 	ldw	r2,-12(fp)
1010ef90:	e0fffd17 	ldw	r3,-12(fp)
1010ef94:	10c00015 	stw	r3,0(r2)
1010ef98:	e0bffb17 	ldw	r2,-20(fp)
1010ef9c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010efa0:	e0bffe17 	ldw	r2,-8(fp)
1010efa4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
1010efa8:	0001883a 	nop
1010efac:	e037883a 	mov	sp,fp
1010efb0:	df000017 	ldw	fp,0(sp)
1010efb4:	dec00104 	addi	sp,sp,4
1010efb8:	f800283a 	ret

1010efbc <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1010efbc:	defffb04 	addi	sp,sp,-20
1010efc0:	dfc00415 	stw	ra,16(sp)
1010efc4:	df000315 	stw	fp,12(sp)
1010efc8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1010efcc:	d0a00e17 	ldw	r2,-32712(gp)
1010efd0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1010efd4:	d0a6d717 	ldw	r2,-25764(gp)
1010efd8:	10800044 	addi	r2,r2,1
1010efdc:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010efe0:	00002e06 	br	1010f09c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1010efe4:	e0bffd17 	ldw	r2,-12(fp)
1010efe8:	10800017 	ldw	r2,0(r2)
1010efec:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
1010eff0:	e0bffd17 	ldw	r2,-12(fp)
1010eff4:	10800403 	ldbu	r2,16(r2)
1010eff8:	10803fcc 	andi	r2,r2,255
1010effc:	10000426 	beq	r2,zero,1010f010 <alt_tick+0x54>
1010f000:	d0a6d717 	ldw	r2,-25764(gp)
1010f004:	1000021e 	bne	r2,zero,1010f010 <alt_tick+0x54>
    {
      alarm->rollover = 0;
1010f008:	e0bffd17 	ldw	r2,-12(fp)
1010f00c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
1010f010:	e0bffd17 	ldw	r2,-12(fp)
1010f014:	10800217 	ldw	r2,8(r2)
1010f018:	d0e6d717 	ldw	r3,-25764(gp)
1010f01c:	18801d36 	bltu	r3,r2,1010f094 <alt_tick+0xd8>
1010f020:	e0bffd17 	ldw	r2,-12(fp)
1010f024:	10800403 	ldbu	r2,16(r2)
1010f028:	10803fcc 	andi	r2,r2,255
1010f02c:	1000191e 	bne	r2,zero,1010f094 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
1010f030:	e0bffd17 	ldw	r2,-12(fp)
1010f034:	10800317 	ldw	r2,12(r2)
1010f038:	e0fffd17 	ldw	r3,-12(fp)
1010f03c:	18c00517 	ldw	r3,20(r3)
1010f040:	1809883a 	mov	r4,r3
1010f044:	103ee83a 	callr	r2
1010f048:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1010f04c:	e0bfff17 	ldw	r2,-4(fp)
1010f050:	1000031e 	bne	r2,zero,1010f060 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
1010f054:	e13ffd17 	ldw	r4,-12(fp)
1010f058:	010ef200 	call	1010ef20 <alt_alarm_stop>
1010f05c:	00000d06 	br	1010f094 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
1010f060:	e0bffd17 	ldw	r2,-12(fp)
1010f064:	10c00217 	ldw	r3,8(r2)
1010f068:	e0bfff17 	ldw	r2,-4(fp)
1010f06c:	1887883a 	add	r3,r3,r2
1010f070:	e0bffd17 	ldw	r2,-12(fp)
1010f074:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
1010f078:	e0bffd17 	ldw	r2,-12(fp)
1010f07c:	10c00217 	ldw	r3,8(r2)
1010f080:	d0a6d717 	ldw	r2,-25764(gp)
1010f084:	1880032e 	bgeu	r3,r2,1010f094 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
1010f088:	e0bffd17 	ldw	r2,-12(fp)
1010f08c:	00c00044 	movi	r3,1
1010f090:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1010f094:	e0bffe17 	ldw	r2,-8(fp)
1010f098:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010f09c:	e0fffd17 	ldw	r3,-12(fp)
1010f0a0:	d0a00e04 	addi	r2,gp,-32712
1010f0a4:	18bfcf1e 	bne	r3,r2,1010efe4 <__alt_data_end+0xfffeefe4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
1010f0a8:	0001883a 	nop
}
1010f0ac:	0001883a 	nop
1010f0b0:	e037883a 	mov	sp,fp
1010f0b4:	dfc00117 	ldw	ra,4(sp)
1010f0b8:	df000017 	ldw	fp,0(sp)
1010f0bc:	dec00204 	addi	sp,sp,8
1010f0c0:	f800283a 	ret

1010f0c4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1010f0c4:	deffff04 	addi	sp,sp,-4
1010f0c8:	df000015 	stw	fp,0(sp)
1010f0cc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
1010f0d0:	000170fa 	wrctl	ienable,zero
}
1010f0d4:	0001883a 	nop
1010f0d8:	e037883a 	mov	sp,fp
1010f0dc:	df000017 	ldw	fp,0(sp)
1010f0e0:	dec00104 	addi	sp,sp,4
1010f0e4:	f800283a 	ret

1010f0e8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
1010f0e8:	defffa04 	addi	sp,sp,-24
1010f0ec:	dfc00515 	stw	ra,20(sp)
1010f0f0:	df000415 	stw	fp,16(sp)
1010f0f4:	df000404 	addi	fp,sp,16
1010f0f8:	e13ffe15 	stw	r4,-8(fp)
1010f0fc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
1010f100:	e0bfff17 	ldw	r2,-4(fp)
1010f104:	10800017 	ldw	r2,0(r2)
1010f108:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
1010f10c:	e13ffe17 	ldw	r4,-8(fp)
1010f110:	01008600 	call	10100860 <strlen>
1010f114:	10800044 	addi	r2,r2,1
1010f118:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010f11c:	00000d06 	br	1010f154 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
1010f120:	e0bffc17 	ldw	r2,-16(fp)
1010f124:	10800217 	ldw	r2,8(r2)
1010f128:	e0fffd17 	ldw	r3,-12(fp)
1010f12c:	180d883a 	mov	r6,r3
1010f130:	e17ffe17 	ldw	r5,-8(fp)
1010f134:	1009883a 	mov	r4,r2
1010f138:	010f4b80 	call	1010f4b8 <memcmp>
1010f13c:	1000021e 	bne	r2,zero,1010f148 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
1010f140:	e0bffc17 	ldw	r2,-16(fp)
1010f144:	00000706 	br	1010f164 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
1010f148:	e0bffc17 	ldw	r2,-16(fp)
1010f14c:	10800017 	ldw	r2,0(r2)
1010f150:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010f154:	e0fffc17 	ldw	r3,-16(fp)
1010f158:	e0bfff17 	ldw	r2,-4(fp)
1010f15c:	18bff01e 	bne	r3,r2,1010f120 <__alt_data_end+0xfffef120>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
1010f160:	0005883a 	mov	r2,zero
}
1010f164:	e037883a 	mov	sp,fp
1010f168:	dfc00117 	ldw	ra,4(sp)
1010f16c:	df000017 	ldw	fp,0(sp)
1010f170:	dec00204 	addi	sp,sp,8
1010f174:	f800283a 	ret

1010f178 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
1010f178:	defffb04 	addi	sp,sp,-20
1010f17c:	dfc00415 	stw	ra,16(sp)
1010f180:	df000315 	stw	fp,12(sp)
1010f184:	df000304 	addi	fp,sp,12
1010f188:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
1010f18c:	00840474 	movhi	r2,4113
1010f190:	10857b04 	addi	r2,r2,5612
1010f194:	10800017 	ldw	r2,0(r2)
1010f198:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010f19c:	00003106 	br	1010f264 <alt_find_file+0xec>
  {
    len = strlen(next->name);
1010f1a0:	e0bffd17 	ldw	r2,-12(fp)
1010f1a4:	10800217 	ldw	r2,8(r2)
1010f1a8:	1009883a 	mov	r4,r2
1010f1ac:	01008600 	call	10100860 <strlen>
1010f1b0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
1010f1b4:	e0bffd17 	ldw	r2,-12(fp)
1010f1b8:	10c00217 	ldw	r3,8(r2)
1010f1bc:	e0bffe17 	ldw	r2,-8(fp)
1010f1c0:	10bfffc4 	addi	r2,r2,-1
1010f1c4:	1885883a 	add	r2,r3,r2
1010f1c8:	10800003 	ldbu	r2,0(r2)
1010f1cc:	10803fcc 	andi	r2,r2,255
1010f1d0:	1080201c 	xori	r2,r2,128
1010f1d4:	10bfe004 	addi	r2,r2,-128
1010f1d8:	10800bd8 	cmpnei	r2,r2,47
1010f1dc:	1000031e 	bne	r2,zero,1010f1ec <alt_find_file+0x74>
    {
      len -= 1;
1010f1e0:	e0bffe17 	ldw	r2,-8(fp)
1010f1e4:	10bfffc4 	addi	r2,r2,-1
1010f1e8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1010f1ec:	e0bffe17 	ldw	r2,-8(fp)
1010f1f0:	e0ffff17 	ldw	r3,-4(fp)
1010f1f4:	1885883a 	add	r2,r3,r2
1010f1f8:	10800003 	ldbu	r2,0(r2)
1010f1fc:	10803fcc 	andi	r2,r2,255
1010f200:	1080201c 	xori	r2,r2,128
1010f204:	10bfe004 	addi	r2,r2,-128
1010f208:	10800be0 	cmpeqi	r2,r2,47
1010f20c:	1000081e 	bne	r2,zero,1010f230 <alt_find_file+0xb8>
1010f210:	e0bffe17 	ldw	r2,-8(fp)
1010f214:	e0ffff17 	ldw	r3,-4(fp)
1010f218:	1885883a 	add	r2,r3,r2
1010f21c:	10800003 	ldbu	r2,0(r2)
1010f220:	10803fcc 	andi	r2,r2,255
1010f224:	1080201c 	xori	r2,r2,128
1010f228:	10bfe004 	addi	r2,r2,-128
1010f22c:	10000a1e 	bne	r2,zero,1010f258 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
1010f230:	e0bffd17 	ldw	r2,-12(fp)
1010f234:	10800217 	ldw	r2,8(r2)
1010f238:	e0fffe17 	ldw	r3,-8(fp)
1010f23c:	180d883a 	mov	r6,r3
1010f240:	e17fff17 	ldw	r5,-4(fp)
1010f244:	1009883a 	mov	r4,r2
1010f248:	010f4b80 	call	1010f4b8 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1010f24c:	1000021e 	bne	r2,zero,1010f258 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
1010f250:	e0bffd17 	ldw	r2,-12(fp)
1010f254:	00000806 	br	1010f278 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
1010f258:	e0bffd17 	ldw	r2,-12(fp)
1010f25c:	10800017 	ldw	r2,0(r2)
1010f260:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010f264:	e0fffd17 	ldw	r3,-12(fp)
1010f268:	00840474 	movhi	r2,4113
1010f26c:	10857b04 	addi	r2,r2,5612
1010f270:	18bfcb1e 	bne	r3,r2,1010f1a0 <__alt_data_end+0xfffef1a0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
1010f274:	0005883a 	mov	r2,zero
}
1010f278:	e037883a 	mov	sp,fp
1010f27c:	dfc00117 	ldw	ra,4(sp)
1010f280:	df000017 	ldw	fp,0(sp)
1010f284:	dec00204 	addi	sp,sp,8
1010f288:	f800283a 	ret

1010f28c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
1010f28c:	defffc04 	addi	sp,sp,-16
1010f290:	df000315 	stw	fp,12(sp)
1010f294:	df000304 	addi	fp,sp,12
1010f298:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
1010f29c:	00bffa04 	movi	r2,-24
1010f2a0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1010f2a4:	e03ffd15 	stw	zero,-12(fp)
1010f2a8:	00001d06 	br	1010f320 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
1010f2ac:	00840474 	movhi	r2,4113
1010f2b0:	1080fd04 	addi	r2,r2,1012
1010f2b4:	e0fffd17 	ldw	r3,-12(fp)
1010f2b8:	18c00324 	muli	r3,r3,12
1010f2bc:	10c5883a 	add	r2,r2,r3
1010f2c0:	10800017 	ldw	r2,0(r2)
1010f2c4:	1000131e 	bne	r2,zero,1010f314 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
1010f2c8:	00840474 	movhi	r2,4113
1010f2cc:	1080fd04 	addi	r2,r2,1012
1010f2d0:	e0fffd17 	ldw	r3,-12(fp)
1010f2d4:	18c00324 	muli	r3,r3,12
1010f2d8:	10c5883a 	add	r2,r2,r3
1010f2dc:	e0ffff17 	ldw	r3,-4(fp)
1010f2e0:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
1010f2e4:	00840474 	movhi	r2,4113
1010f2e8:	10857f04 	addi	r2,r2,5628
1010f2ec:	10c00017 	ldw	r3,0(r2)
1010f2f0:	e0bffd17 	ldw	r2,-12(fp)
1010f2f4:	1880040e 	bge	r3,r2,1010f308 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
1010f2f8:	00840474 	movhi	r2,4113
1010f2fc:	10857f04 	addi	r2,r2,5628
1010f300:	e0fffd17 	ldw	r3,-12(fp)
1010f304:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
1010f308:	e0bffd17 	ldw	r2,-12(fp)
1010f30c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
1010f310:	00000606 	br	1010f32c <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1010f314:	e0bffd17 	ldw	r2,-12(fp)
1010f318:	10800044 	addi	r2,r2,1
1010f31c:	e0bffd15 	stw	r2,-12(fp)
1010f320:	e0bffd17 	ldw	r2,-12(fp)
1010f324:	10800810 	cmplti	r2,r2,32
1010f328:	103fe01e 	bne	r2,zero,1010f2ac <__alt_data_end+0xfffef2ac>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
1010f32c:	e0bffe17 	ldw	r2,-8(fp)
}
1010f330:	e037883a 	mov	sp,fp
1010f334:	df000017 	ldw	fp,0(sp)
1010f338:	dec00104 	addi	sp,sp,4
1010f33c:	f800283a 	ret

1010f340 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
1010f340:	defffb04 	addi	sp,sp,-20
1010f344:	df000415 	stw	fp,16(sp)
1010f348:	df000404 	addi	fp,sp,16
1010f34c:	e13ffe15 	stw	r4,-8(fp)
1010f350:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
1010f354:	e0bfff17 	ldw	r2,-4(fp)
1010f358:	10840070 	cmpltui	r2,r2,4097
1010f35c:	1000021e 	bne	r2,zero,1010f368 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
1010f360:	00840004 	movi	r2,4096
1010f364:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
1010f368:	e0fffe17 	ldw	r3,-8(fp)
1010f36c:	e0bfff17 	ldw	r2,-4(fp)
1010f370:	1885883a 	add	r2,r3,r2
1010f374:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
1010f378:	e0bffe17 	ldw	r2,-8(fp)
1010f37c:	e0bffc15 	stw	r2,-16(fp)
1010f380:	00000506 	br	1010f398 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
1010f384:	e0bffc17 	ldw	r2,-16(fp)
1010f388:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
1010f38c:	e0bffc17 	ldw	r2,-16(fp)
1010f390:	10800804 	addi	r2,r2,32
1010f394:	e0bffc15 	stw	r2,-16(fp)
1010f398:	e0fffc17 	ldw	r3,-16(fp)
1010f39c:	e0bffd17 	ldw	r2,-12(fp)
1010f3a0:	18bff836 	bltu	r3,r2,1010f384 <__alt_data_end+0xfffef384>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
1010f3a4:	e0bffe17 	ldw	r2,-8(fp)
1010f3a8:	108007cc 	andi	r2,r2,31
1010f3ac:	10000226 	beq	r2,zero,1010f3b8 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
1010f3b0:	e0bffc17 	ldw	r2,-16(fp)
1010f3b4:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
1010f3b8:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
1010f3bc:	0001883a 	nop
1010f3c0:	e037883a 	mov	sp,fp
1010f3c4:	df000017 	ldw	fp,0(sp)
1010f3c8:	dec00104 	addi	sp,sp,4
1010f3cc:	f800283a 	ret

1010f3d0 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
1010f3d0:	defffe04 	addi	sp,sp,-8
1010f3d4:	df000115 	stw	fp,4(sp)
1010f3d8:	df000104 	addi	fp,sp,4
1010f3dc:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
1010f3e0:	e0bfff17 	ldw	r2,-4(fp)
1010f3e4:	10bffe84 	addi	r2,r2,-6
1010f3e8:	10c00428 	cmpgeui	r3,r2,16
1010f3ec:	18001a1e 	bne	r3,zero,1010f458 <alt_exception_cause_generated_bad_addr+0x88>
1010f3f0:	100690ba 	slli	r3,r2,2
1010f3f4:	00840474 	movhi	r2,4113
1010f3f8:	10bd0204 	addi	r2,r2,-3064
1010f3fc:	1885883a 	add	r2,r3,r2
1010f400:	10800017 	ldw	r2,0(r2)
1010f404:	1000683a 	jmp	r2
1010f408:	1010f448 	cmpgei	zero,r2,17361
1010f40c:	1010f448 	cmpgei	zero,r2,17361
1010f410:	1010f458 	cmpnei	zero,r2,17361
1010f414:	1010f458 	cmpnei	zero,r2,17361
1010f418:	1010f458 	cmpnei	zero,r2,17361
1010f41c:	1010f448 	cmpgei	zero,r2,17361
1010f420:	1010f450 	cmplti	zero,r2,17361
1010f424:	1010f458 	cmpnei	zero,r2,17361
1010f428:	1010f448 	cmpgei	zero,r2,17361
1010f42c:	1010f448 	cmpgei	zero,r2,17361
1010f430:	1010f458 	cmpnei	zero,r2,17361
1010f434:	1010f448 	cmpgei	zero,r2,17361
1010f438:	1010f450 	cmplti	zero,r2,17361
1010f43c:	1010f458 	cmpnei	zero,r2,17361
1010f440:	1010f458 	cmpnei	zero,r2,17361
1010f444:	1010f448 	cmpgei	zero,r2,17361
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
1010f448:	00800044 	movi	r2,1
1010f44c:	00000306 	br	1010f45c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
1010f450:	0005883a 	mov	r2,zero
1010f454:	00000106 	br	1010f45c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
1010f458:	0005883a 	mov	r2,zero
  }
}
1010f45c:	e037883a 	mov	sp,fp
1010f460:	df000017 	ldw	fp,0(sp)
1010f464:	dec00104 	addi	sp,sp,4
1010f468:	f800283a 	ret

1010f46c <atexit>:
1010f46c:	200b883a 	mov	r5,r4
1010f470:	000f883a 	mov	r7,zero
1010f474:	000d883a 	mov	r6,zero
1010f478:	0009883a 	mov	r4,zero
1010f47c:	010f5341 	jmpi	1010f534 <__register_exitproc>

1010f480 <exit>:
1010f480:	defffe04 	addi	sp,sp,-8
1010f484:	000b883a 	mov	r5,zero
1010f488:	dc000015 	stw	r16,0(sp)
1010f48c:	dfc00115 	stw	ra,4(sp)
1010f490:	2021883a 	mov	r16,r4
1010f494:	010f64c0 	call	1010f64c <__call_exitprocs>
1010f498:	00840474 	movhi	r2,4113
1010f49c:	10857504 	addi	r2,r2,5588
1010f4a0:	11000017 	ldw	r4,0(r2)
1010f4a4:	20800f17 	ldw	r2,60(r4)
1010f4a8:	10000126 	beq	r2,zero,1010f4b0 <exit+0x30>
1010f4ac:	103ee83a 	callr	r2
1010f4b0:	8009883a 	mov	r4,r16
1010f4b4:	010f7cc0 	call	1010f7cc <_exit>

1010f4b8 <memcmp>:
1010f4b8:	01c000c4 	movi	r7,3
1010f4bc:	3980192e 	bgeu	r7,r6,1010f524 <memcmp+0x6c>
1010f4c0:	2144b03a 	or	r2,r4,r5
1010f4c4:	11c4703a 	and	r2,r2,r7
1010f4c8:	10000f26 	beq	r2,zero,1010f508 <memcmp+0x50>
1010f4cc:	20800003 	ldbu	r2,0(r4)
1010f4d0:	28c00003 	ldbu	r3,0(r5)
1010f4d4:	10c0151e 	bne	r2,r3,1010f52c <memcmp+0x74>
1010f4d8:	31bfff84 	addi	r6,r6,-2
1010f4dc:	01ffffc4 	movi	r7,-1
1010f4e0:	00000406 	br	1010f4f4 <memcmp+0x3c>
1010f4e4:	20800003 	ldbu	r2,0(r4)
1010f4e8:	28c00003 	ldbu	r3,0(r5)
1010f4ec:	31bfffc4 	addi	r6,r6,-1
1010f4f0:	10c00e1e 	bne	r2,r3,1010f52c <memcmp+0x74>
1010f4f4:	21000044 	addi	r4,r4,1
1010f4f8:	29400044 	addi	r5,r5,1
1010f4fc:	31fff91e 	bne	r6,r7,1010f4e4 <__alt_data_end+0xfffef4e4>
1010f500:	0005883a 	mov	r2,zero
1010f504:	f800283a 	ret
1010f508:	20c00017 	ldw	r3,0(r4)
1010f50c:	28800017 	ldw	r2,0(r5)
1010f510:	18bfee1e 	bne	r3,r2,1010f4cc <__alt_data_end+0xfffef4cc>
1010f514:	31bfff04 	addi	r6,r6,-4
1010f518:	21000104 	addi	r4,r4,4
1010f51c:	29400104 	addi	r5,r5,4
1010f520:	39bff936 	bltu	r7,r6,1010f508 <__alt_data_end+0xfffef508>
1010f524:	303fe91e 	bne	r6,zero,1010f4cc <__alt_data_end+0xfffef4cc>
1010f528:	003ff506 	br	1010f500 <__alt_data_end+0xfffef500>
1010f52c:	10c5c83a 	sub	r2,r2,r3
1010f530:	f800283a 	ret

1010f534 <__register_exitproc>:
1010f534:	defffa04 	addi	sp,sp,-24
1010f538:	dc000315 	stw	r16,12(sp)
1010f53c:	04040474 	movhi	r16,4113
1010f540:	84057504 	addi	r16,r16,5588
1010f544:	80c00017 	ldw	r3,0(r16)
1010f548:	dc400415 	stw	r17,16(sp)
1010f54c:	dfc00515 	stw	ra,20(sp)
1010f550:	18805217 	ldw	r2,328(r3)
1010f554:	2023883a 	mov	r17,r4
1010f558:	10003726 	beq	r2,zero,1010f638 <__register_exitproc+0x104>
1010f55c:	10c00117 	ldw	r3,4(r2)
1010f560:	010007c4 	movi	r4,31
1010f564:	20c00e16 	blt	r4,r3,1010f5a0 <__register_exitproc+0x6c>
1010f568:	1a000044 	addi	r8,r3,1
1010f56c:	8800221e 	bne	r17,zero,1010f5f8 <__register_exitproc+0xc4>
1010f570:	18c00084 	addi	r3,r3,2
1010f574:	18c7883a 	add	r3,r3,r3
1010f578:	18c7883a 	add	r3,r3,r3
1010f57c:	12000115 	stw	r8,4(r2)
1010f580:	10c7883a 	add	r3,r2,r3
1010f584:	19400015 	stw	r5,0(r3)
1010f588:	0005883a 	mov	r2,zero
1010f58c:	dfc00517 	ldw	ra,20(sp)
1010f590:	dc400417 	ldw	r17,16(sp)
1010f594:	dc000317 	ldw	r16,12(sp)
1010f598:	dec00604 	addi	sp,sp,24
1010f59c:	f800283a 	ret
1010f5a0:	00800034 	movhi	r2,0
1010f5a4:	10800004 	addi	r2,r2,0
1010f5a8:	10002626 	beq	r2,zero,1010f644 <__register_exitproc+0x110>
1010f5ac:	01006404 	movi	r4,400
1010f5b0:	d9400015 	stw	r5,0(sp)
1010f5b4:	d9800115 	stw	r6,4(sp)
1010f5b8:	d9c00215 	stw	r7,8(sp)
1010f5bc:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>
1010f5c0:	d9400017 	ldw	r5,0(sp)
1010f5c4:	d9800117 	ldw	r6,4(sp)
1010f5c8:	d9c00217 	ldw	r7,8(sp)
1010f5cc:	10001d26 	beq	r2,zero,1010f644 <__register_exitproc+0x110>
1010f5d0:	81000017 	ldw	r4,0(r16)
1010f5d4:	10000115 	stw	zero,4(r2)
1010f5d8:	02000044 	movi	r8,1
1010f5dc:	22405217 	ldw	r9,328(r4)
1010f5e0:	0007883a 	mov	r3,zero
1010f5e4:	12400015 	stw	r9,0(r2)
1010f5e8:	20805215 	stw	r2,328(r4)
1010f5ec:	10006215 	stw	zero,392(r2)
1010f5f0:	10006315 	stw	zero,396(r2)
1010f5f4:	883fde26 	beq	r17,zero,1010f570 <__alt_data_end+0xfffef570>
1010f5f8:	18c9883a 	add	r4,r3,r3
1010f5fc:	2109883a 	add	r4,r4,r4
1010f600:	1109883a 	add	r4,r2,r4
1010f604:	21802215 	stw	r6,136(r4)
1010f608:	01800044 	movi	r6,1
1010f60c:	12406217 	ldw	r9,392(r2)
1010f610:	30cc983a 	sll	r6,r6,r3
1010f614:	4992b03a 	or	r9,r9,r6
1010f618:	12406215 	stw	r9,392(r2)
1010f61c:	21c04215 	stw	r7,264(r4)
1010f620:	01000084 	movi	r4,2
1010f624:	893fd21e 	bne	r17,r4,1010f570 <__alt_data_end+0xfffef570>
1010f628:	11006317 	ldw	r4,396(r2)
1010f62c:	218cb03a 	or	r6,r4,r6
1010f630:	11806315 	stw	r6,396(r2)
1010f634:	003fce06 	br	1010f570 <__alt_data_end+0xfffef570>
1010f638:	18805304 	addi	r2,r3,332
1010f63c:	18805215 	stw	r2,328(r3)
1010f640:	003fc606 	br	1010f55c <__alt_data_end+0xfffef55c>
1010f644:	00bfffc4 	movi	r2,-1
1010f648:	003fd006 	br	1010f58c <__alt_data_end+0xfffef58c>

1010f64c <__call_exitprocs>:
1010f64c:	defff504 	addi	sp,sp,-44
1010f650:	df000915 	stw	fp,36(sp)
1010f654:	dd400615 	stw	r21,24(sp)
1010f658:	dc800315 	stw	r18,12(sp)
1010f65c:	dfc00a15 	stw	ra,40(sp)
1010f660:	ddc00815 	stw	r23,32(sp)
1010f664:	dd800715 	stw	r22,28(sp)
1010f668:	dd000515 	stw	r20,20(sp)
1010f66c:	dcc00415 	stw	r19,16(sp)
1010f670:	dc400215 	stw	r17,8(sp)
1010f674:	dc000115 	stw	r16,4(sp)
1010f678:	d9000015 	stw	r4,0(sp)
1010f67c:	2839883a 	mov	fp,r5
1010f680:	04800044 	movi	r18,1
1010f684:	057fffc4 	movi	r21,-1
1010f688:	00840474 	movhi	r2,4113
1010f68c:	10857504 	addi	r2,r2,5588
1010f690:	12000017 	ldw	r8,0(r2)
1010f694:	45005217 	ldw	r20,328(r8)
1010f698:	44c05204 	addi	r19,r8,328
1010f69c:	a0001c26 	beq	r20,zero,1010f710 <__call_exitprocs+0xc4>
1010f6a0:	a0800117 	ldw	r2,4(r20)
1010f6a4:	15ffffc4 	addi	r23,r2,-1
1010f6a8:	b8000d16 	blt	r23,zero,1010f6e0 <__call_exitprocs+0x94>
1010f6ac:	14000044 	addi	r16,r2,1
1010f6b0:	8421883a 	add	r16,r16,r16
1010f6b4:	8421883a 	add	r16,r16,r16
1010f6b8:	84402004 	addi	r17,r16,128
1010f6bc:	a463883a 	add	r17,r20,r17
1010f6c0:	a421883a 	add	r16,r20,r16
1010f6c4:	e0001e26 	beq	fp,zero,1010f740 <__call_exitprocs+0xf4>
1010f6c8:	80804017 	ldw	r2,256(r16)
1010f6cc:	e0801c26 	beq	fp,r2,1010f740 <__call_exitprocs+0xf4>
1010f6d0:	bdffffc4 	addi	r23,r23,-1
1010f6d4:	843fff04 	addi	r16,r16,-4
1010f6d8:	8c7fff04 	addi	r17,r17,-4
1010f6dc:	bd7ff91e 	bne	r23,r21,1010f6c4 <__alt_data_end+0xfffef6c4>
1010f6e0:	00800034 	movhi	r2,0
1010f6e4:	10800004 	addi	r2,r2,0
1010f6e8:	10000926 	beq	r2,zero,1010f710 <__call_exitprocs+0xc4>
1010f6ec:	a0800117 	ldw	r2,4(r20)
1010f6f0:	1000301e 	bne	r2,zero,1010f7b4 <__call_exitprocs+0x168>
1010f6f4:	a0800017 	ldw	r2,0(r20)
1010f6f8:	10003226 	beq	r2,zero,1010f7c4 <__call_exitprocs+0x178>
1010f6fc:	a009883a 	mov	r4,r20
1010f700:	98800015 	stw	r2,0(r19)
1010f704:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>
1010f708:	9d000017 	ldw	r20,0(r19)
1010f70c:	a03fe41e 	bne	r20,zero,1010f6a0 <__alt_data_end+0xfffef6a0>
1010f710:	dfc00a17 	ldw	ra,40(sp)
1010f714:	df000917 	ldw	fp,36(sp)
1010f718:	ddc00817 	ldw	r23,32(sp)
1010f71c:	dd800717 	ldw	r22,28(sp)
1010f720:	dd400617 	ldw	r21,24(sp)
1010f724:	dd000517 	ldw	r20,20(sp)
1010f728:	dcc00417 	ldw	r19,16(sp)
1010f72c:	dc800317 	ldw	r18,12(sp)
1010f730:	dc400217 	ldw	r17,8(sp)
1010f734:	dc000117 	ldw	r16,4(sp)
1010f738:	dec00b04 	addi	sp,sp,44
1010f73c:	f800283a 	ret
1010f740:	a0800117 	ldw	r2,4(r20)
1010f744:	80c00017 	ldw	r3,0(r16)
1010f748:	10bfffc4 	addi	r2,r2,-1
1010f74c:	15c01426 	beq	r2,r23,1010f7a0 <__call_exitprocs+0x154>
1010f750:	80000015 	stw	zero,0(r16)
1010f754:	183fde26 	beq	r3,zero,1010f6d0 <__alt_data_end+0xfffef6d0>
1010f758:	95c8983a 	sll	r4,r18,r23
1010f75c:	a0806217 	ldw	r2,392(r20)
1010f760:	a5800117 	ldw	r22,4(r20)
1010f764:	2084703a 	and	r2,r4,r2
1010f768:	10000b26 	beq	r2,zero,1010f798 <__call_exitprocs+0x14c>
1010f76c:	a0806317 	ldw	r2,396(r20)
1010f770:	2088703a 	and	r4,r4,r2
1010f774:	20000c1e 	bne	r4,zero,1010f7a8 <__call_exitprocs+0x15c>
1010f778:	89400017 	ldw	r5,0(r17)
1010f77c:	d9000017 	ldw	r4,0(sp)
1010f780:	183ee83a 	callr	r3
1010f784:	a0800117 	ldw	r2,4(r20)
1010f788:	15bfbf1e 	bne	r2,r22,1010f688 <__alt_data_end+0xfffef688>
1010f78c:	98800017 	ldw	r2,0(r19)
1010f790:	153fcf26 	beq	r2,r20,1010f6d0 <__alt_data_end+0xfffef6d0>
1010f794:	003fbc06 	br	1010f688 <__alt_data_end+0xfffef688>
1010f798:	183ee83a 	callr	r3
1010f79c:	003ff906 	br	1010f784 <__alt_data_end+0xfffef784>
1010f7a0:	a5c00115 	stw	r23,4(r20)
1010f7a4:	003feb06 	br	1010f754 <__alt_data_end+0xfffef754>
1010f7a8:	89000017 	ldw	r4,0(r17)
1010f7ac:	183ee83a 	callr	r3
1010f7b0:	003ff406 	br	1010f784 <__alt_data_end+0xfffef784>
1010f7b4:	a0800017 	ldw	r2,0(r20)
1010f7b8:	a027883a 	mov	r19,r20
1010f7bc:	1029883a 	mov	r20,r2
1010f7c0:	003fb606 	br	1010f69c <__alt_data_end+0xfffef69c>
1010f7c4:	0005883a 	mov	r2,zero
1010f7c8:	003ffb06 	br	1010f7b8 <__alt_data_end+0xfffef7b8>

1010f7cc <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
1010f7cc:	defffd04 	addi	sp,sp,-12
1010f7d0:	df000215 	stw	fp,8(sp)
1010f7d4:	df000204 	addi	fp,sp,8
1010f7d8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
1010f7dc:	0001883a 	nop
1010f7e0:	e0bfff17 	ldw	r2,-4(fp)
1010f7e4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
1010f7e8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
1010f7ec:	10000226 	beq	r2,zero,1010f7f8 <_exit+0x2c>
    ALT_SIM_FAIL();
1010f7f0:	002af070 	cmpltui	zero,zero,43969
1010f7f4:	00000106 	br	1010f7fc <_exit+0x30>
  } else {
    ALT_SIM_PASS();
1010f7f8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
1010f7fc:	003fff06 	br	1010f7fc <__alt_data_end+0xfffef7fc>
