
LCD_LT24.elf:     file format elf32-littlenios2
LCD_LT24.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10100244

Program Header:
    LOAD off    0x00001000 vaddr 0x10100000 paddr 0x10100000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10100020 paddr 0x10100020 align 2**12
         filesz 0x0000f9dc memsz 0x0000f9dc flags r-x
    LOAD off    0x000109fc vaddr 0x1010f9fc paddr 0x101114e8 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00012fd4 vaddr 0x10112fd4 paddr 0x10112fd4 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10100000  10100000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  10100020  10100020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f4ac  10100244  10100244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000030c  1010f6f0  1010f6f0  000106f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  1010f9fc  101114e8  000109fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  10112fd4  10112fd4  00012fd4  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  10113134  10113134  000124e8  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000124e8  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e70  00000000  00000000  00012510  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00022824  00000000  00000000  00013380  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008ca9  00000000  00000000  00035ba4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b13d  00000000  00000000  0003e84d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002054  00000000  00000000  0004998c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003711  00000000  00000000  0004b9e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017a2f  00000000  00000000  0004f0f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00066b20  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001890  00000000  00000000  00066b50  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006b3fa  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006b3fd  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006b409  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006b40a  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006b40b  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006b416  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006b421  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000a  00000000  00000000  0006b42c  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000031  00000000  00000000  0006b436  2**0
                  CONTENTS, READONLY
 26 .jdi          000049d7  00000000  00000000  0006b467  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0027a97b  00000000  00000000  0006fe3e  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10100000 l    d  .entry	00000000 .entry
10100020 l    d  .exceptions	00000000 .exceptions
10100244 l    d  .text	00000000 .text
1010f6f0 l    d  .rodata	00000000 .rodata
1010f9fc l    d  .rwdata	00000000 .rwdata
10112fd4 l    d  .bss	00000000 .bss
10113134 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 D:/Skydrive/Documenten/Univ/ES/GIT/LCD/sw/nios/LCD_LT24_bsp//obj/HAL/src/crt0.o
1010028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
1010f742 l     O .rodata	00000010 zeroes.4404
10102964 l     F .text	000000bc __sbprintf
1010f752 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
10102b74 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
101046a4 l     F .text	00000008 __fp_unlock
101046b8 l     F .text	0000019c __sinit.part.1
10104854 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
1010f9fc l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
1010fe40 l     O .rwdata	00000020 lc_ctype_charset
1010fe20 l     O .rwdata	00000020 lc_message_charset
1010fe60 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
1010f784 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
1010716c l     F .text	000000fc __sprint_r.part.0
1010f8b8 l     O .rodata	00000010 blanks.4348
1010f8a8 l     O .rodata	00000010 zeroes.4349
101086f8 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
1010cf30 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
1010d050 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1010d07c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
1010d17c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
1010d270 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
1010d35c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
1010d544 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
101114d8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
1010d7a4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
1010d8ec l     F .text	00000038 alt_dev_reg
10110448 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
1010dbd0 l     F .text	0000020c altera_avalon_jtag_uart_irq
1010dddc l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
1010e5a4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
1010ea5c l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
1010eb9c l     F .text	00000050 alt_get_errno
1010ebec l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
10113008 g     O .bss	00000004 alt_instruction_exception_handler
10106c7c g     F .text	00000074 _mprec_log10
10106d68 g     F .text	0000008c __any_on
10109150 g     F .text	00000054 _isatty_r
1010f790 g     O .rodata	00000028 __mprec_tinytens
1010d480 g     F .text	0000007c alt_main
10113034 g     O .bss	00000100 alt_irq
101091a4 g     F .text	00000060 _lseek_r
101114e8 g       *ABS*	00000000 __flash_rwdata_start
1010ba5c g     F .text	00000088 .hidden __eqdf2
10113134 g       *ABS*	00000000 __alt_heap_start
10100714 g     F .text	0000003c printf
10109a7c g     F .text	0000009c _wcrtomb_r
10106f94 g     F .text	0000005c __sseek
101049f4 g     F .text	00000010 __sinit
10109924 g     F .text	00000140 __swbuf_r
10105000 g     F .text	0000007c _setlocale_r
1010485c g     F .text	00000068 __sfmoreglue
1010d520 g     F .text	00000024 __malloc_unlock
10109204 g     F .text	0000015c memmove
101049dc g     F .text	00000018 _cleanup
10105df8 g     F .text	000000a8 _Balloc
1010bae4 g     F .text	000000dc .hidden __gtdf2
1010efb4 g     F .text	00000024 altera_nios2_gen2_irq_init
10100000 g     F .entry	0000001c __reset
10100020 g       *ABS*	00000000 __flash_exceptions_start
10108c38 g     F .text	0000005c _fstat_r
10112fec g     O .bss	00000004 errno
10106f10 g     F .text	00000008 __seofread
10100290 g     F .text	00000034 LCD_WR_REG
10112ff4 g     O .bss	00000004 alt_argv
101194a8 g       *ABS*	00000000 _gp
101102c8 g     O .rwdata	00000180 alt_fd_list
1010efd8 g     F .text	00000090 alt_find_dev
10105b88 g     F .text	00000148 memcpy
101046ac g     F .text	0000000c _cleanup_r
1010cd48 g     F .text	000000dc .hidden __floatsidf
1010eb20 g     F .text	0000007c alt_io_redirect
1010bbc0 g     F .text	000000f4 .hidden __ltdf2
1010f6f0 g       *ABS*	00000000 __DTOR_END__
1010f2c0 g     F .text	0000009c alt_exception_cause_generated_bad_addr
10106df4 g     F .text	00000074 __fpclassifyd
10106bd8 g     F .text	000000a4 __ratio
101086dc g     F .text	0000001c __vfiprintf_internal
1010dfdc g     F .text	0000021c altera_avalon_jtag_uart_read
101006e4 g     F .text	00000030 _printf_r
10100000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
1010a80c g     F .text	00000064 .hidden __udivsi3
1010d1cc g     F .text	000000a4 isatty
1010f7e0 g     O .rodata	000000c8 __mprec_tens
1010507c g     F .text	0000000c __locale_charset
1010f230 g     F .text	00000090 alt_icache_flush
10112fe8 g     O .bss	00000004 __malloc_top_pad
101114b0 g     O .rwdata	00000004 __mb_cur_max
101050ac g     F .text	0000000c _localeconv_r
101002f8 g     F .text	00000034 LCD_RST
10108c94 g     F .text	000004bc __sfvwrite_r
10106204 g     F .text	0000003c __i2b
10106e68 g     F .text	00000054 _sbrk_r
10109360 g     F .text	00000060 _read_r
101114d0 g     O .rwdata	00000004 alt_max_fd
1010892c g     F .text	000000f0 _fclose_r
10104674 g     F .text	00000030 fflush
10112fe4 g     O .bss	00000004 __malloc_max_sbrked_mem
1010a8c8 g     F .text	000008ac .hidden __adddf3
10106980 g     F .text	0000010c __b2d
1010a1dc g     F .text	00000538 .hidden __umoddi3
1010d3ac g     F .text	000000d4 lseek
101114a8 g     O .rwdata	00000004 _global_impure_ptr
101093c0 g     F .text	00000564 _realloc_r
10113134 g       *ABS*	00000000 __bss_end
1010e96c g     F .text	000000f0 alt_iic_isr_register
1010eeac g     F .text	00000108 alt_tick
10109c64 g     F .text	00000578 .hidden __udivdi3
10108b94 g     F .text	00000024 _fputwc_r
1010f7b8 g     O .rodata	00000028 __mprec_bigtens
10105fe8 g     F .text	00000104 __s2b
1010ce24 g     F .text	000000a8 .hidden __floatunsidf
101066c0 g     F .text	00000060 __mcmp
10104a14 g     F .text	00000018 __fp_lock_all
1010e920 g     F .text	0000004c alt_ic_irq_enabled
1010ee10 g     F .text	0000009c alt_alarm_stop
10112ffc g     O .bss	00000004 alt_irq_active
101000fc g     F .exceptions	000000d4 alt_irq_handler
101102a0 g     O .rwdata	00000028 alt_dev_null
1010e55c g     F .text	00000048 alt_dcache_flush_all
101060ec g     F .text	00000068 __hi0bits
1010ccc8 g     F .text	00000080 .hidden __fixdfsi
101114e8 g       *ABS*	00000000 __ram_rwdata_end
101002c4 g     F .text	00000034 LCD_WR_DATA
101114c8 g     O .rwdata	00000008 alt_dev_list
1010d7f4 g     F .text	000000f8 write
1010f9fc g       *ABS*	00000000 __ram_rodata_end
1010d0cc g     F .text	000000b0 fstat
1010bbc0 g     F .text	000000f4 .hidden __ledf2
10106438 g     F .text	00000140 __pow5mult
10107280 g     F .text	0000145c ___vfiprintf_internal_r
10112fdc g     O .bss	00000004 __nlocale_changed
1010a870 g     F .text	00000058 .hidden __umodsi3
10113134 g       *ABS*	00000000 end
1010db08 g     F .text	000000c8 altera_avalon_jtag_uart_init
101001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
1010f6f0 g       *ABS*	00000000 __CTOR_LIST__
10120000 g       *ABS*	00000000 __alt_stack_pointer
1010cecc g     F .text	00000064 .hidden __clzsi2
1010e1f8 g     F .text	00000224 altera_avalon_jtag_uart_write
10104a04 g     F .text	00000004 __sfp_lock_acquire
10105aa4 g     F .text	000000e4 memchr
10100750 g     F .text	000021f8 ___vfprintf_internal_r
10104b68 g     F .text	00000310 _free_r
10105088 g     F .text	00000010 __locale_mb_cur_max
1010f53c g     F .text	00000180 __call_exitprocs
10112fd8 g     O .bss	00000004 __mlocale_changed
101114b4 g     O .rwdata	00000004 __malloc_sbrk_base
10100244 g     F .text	0000004c _start
10113000 g     O .bss	00000004 _alt_tick_rate
10106578 g     F .text	00000148 __lshift
10113004 g     O .bss	00000004 _alt_nticks
1010d594 g     F .text	000000fc read
1010d95c g     F .text	00000048 alt_sys_init
1010f424 g     F .text	00000118 __register_exitproc
10106240 g     F .text	000001f8 __multiply
1010de84 g     F .text	00000068 altera_avalon_jtag_uart_close
1010f9fc g       *ABS*	00000000 __ram_rwdata_start
1010f6f0 g       *ABS*	00000000 __ram_rodata_start
1011300c g     O .bss	00000028 __malloc_current_mallinfo
10106a8c g     F .text	0000014c __d2b
1010d9a4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
1010f17c g     F .text	000000b4 alt_get_fd
10108814 g     F .text	00000054 _close_r
1010f3a8 g     F .text	0000007c memcmp
1010da64 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
10113134 g       *ABS*	00000000 __alt_stack_base
1010dab4 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10102a20 g     F .text	00000154 __swsetup_r
1010b174 g     F .text	000008e8 .hidden __divdf3
101048c4 g     F .text	00000118 __sfp
10106cf0 g     F .text	00000078 __copybits
1010fe98 g     O .rwdata	00000408 __malloc_av_
10104a10 g     F .text	00000004 __sinit_lock_release
1010bcb4 g     F .text	00000718 .hidden __muldf3
10106ebc g     F .text	00000054 __sread
1010f068 g     F .text	00000114 alt_find_file
1010e5f4 g     F .text	000000a4 alt_dev_llist_insert
1010d4fc g     F .text	00000024 __malloc_lock
1010d6f4 g     F .text	000000b0 sbrk
10104618 g     F .text	0000005c _fflush_r
10108868 g     F .text	000000c4 _calloc_r
10112fd4 g       *ABS*	00000000 __bss_start
1010032c g     F .text	0000033c LCD_Init
10105cd0 g     F .text	00000128 memset
10100668 g     F .text	0000007c main
10112ff8 g     O .bss	00000004 alt_envp
10112fe0 g     O .bss	00000004 __malloc_max_total_mem
1010da04 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
10109a64 g     F .text	00000018 __swbuf
10106ff0 g     F .text	00000008 __sclose
10120000 g       *ABS*	00000000 __alt_heap_limit
10108a1c g     F .text	00000014 fclose
10102d74 g     F .text	00001688 _dtoa_r
10105298 g     F .text	0000080c _malloc_r
10109bd8 g     F .text	00000030 __ascii_wctomb
101114d4 g     O .rwdata	00000004 alt_errno
10104e78 g     F .text	000000c4 _fwalk
1010a714 g     F .text	00000084 .hidden __divsi3
10104a44 g     F .text	00000124 _malloc_trim_r
1010f6f0 g       *ABS*	00000000 __CTOR_END__
10106ff8 g     F .text	000000dc strcmp
1010f6f0 g       *ABS*	00000000 __flash_rodata_start
1010f6f0 g       *ABS*	00000000 __DTOR_LIST__
1010ba5c g     F .text	00000088 .hidden __nedf2
1010d924 g     F .text	00000038 alt_irq_init
1010d690 g     F .text	00000064 alt_release_fd
1010f8c8 g     O .rodata	00000100 .hidden __clz_tab
10112fd4 g     O .bss	00000004 _PathLocale
1010f35c g     F .text	00000014 atexit
101087b4 g     F .text	00000060 _write_r
101050b8 g     F .text	00000018 setlocale
101114ac g     O .rwdata	00000004 _impure_ptr
10112ff0 g     O .bss	00000004 alt_argc
101043fc g     F .text	0000021c __sflush_r
1010e6f8 g     F .text	00000060 _do_dtors
101050a4 g     F .text	00000008 __locale_cjk_lang
10100020 g       .exceptions	00000000 alt_irq_entry
1010691c g     F .text	00000064 __ulp
10104a2c g     F .text	00000018 __fp_unlock_all
101114c0 g     O .rwdata	00000008 alt_fs_list
10100020 g       *ABS*	00000000 __ram_exceptions_start
101050d0 g     F .text	0000000c localeconv
1010e78c g     F .text	00000050 alt_ic_isr_register
101114e8 g       *ABS*	00000000 _edata
10113134 g       *ABS*	00000000 _end
10108a30 g     F .text	00000164 __fputwc
10100244 g       *ABS*	00000000 __ram_exceptions_end
1010deec g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
1010e87c g     F .text	000000a4 alt_ic_irq_disable
10106f18 g     F .text	0000007c __swrite
101114b8 g     O .rwdata	00000004 __malloc_trim_threshold
10105098 g     F .text	0000000c __locale_msgcharset
1010f370 g     F .text	00000038 exit
10104f3c g     F .text	000000c4 _fwalk_reent
10106720 g     F .text	000001fc __mdiff
1010a798 g     F .text	00000074 .hidden __modsi3
10120000 g       *ABS*	00000000 __alt_data_end
10100020 g     F .exceptions	00000000 alt_exception
10104a08 g     F .text	00000004 __sfp_lock_release
1010f6bc g     F .text	00000034 _exit
1010e41c g     F .text	00000140 alt_alarm_start
101050dc g     F .text	000001bc __smakebuf_r
101070d4 g     F .text	00000098 strlen
1010ecb8 g     F .text	00000158 open
1010bae4 g     F .text	000000dc .hidden __gedf2
101114bc g     O .rwdata	00000004 __wctomb
10107268 g     F .text	00000018 __sprint_r
1010e758 g     F .text	00000034 alt_icache_flush_all
101114dc g     O .rwdata	00000004 alt_priority_mask
1010e7dc g     F .text	000000a0 alt_ic_irq_enable
10102948 g     F .text	0000001c __vfprintf_internal
10109c08 g     F .text	0000005c _wctomb_r
1010c3cc g     F .text	000008fc .hidden __subdf3
10106154 g     F .text	000000b0 __lo0bits
101114e0 g     O .rwdata	00000008 alt_alarm_list
1010e698 g     F .text	00000060 _do_ctors
10109b18 g     F .text	000000c0 wcrtomb
1010cf80 g     F .text	000000d0 close
1010d2d8 g     F .text	00000084 alt_load
10108bb8 g     F .text	00000080 fputwc
10104a0c g     F .text	00000004 __sinit_lock_acquire
10105ec8 g     F .text	00000120 __multadd
10105ea0 g     F .text	00000028 _Bfree



Disassembly of section .entry:

10100000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
10100000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
10100004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
10100008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
1010000c:	00bffd16 	blt	zero,r2,10100004 <__alt_data_end+0xfffe0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10100010:	00440434 	movhi	at,4112
    ori r1, r1, %lo(_start)
10100014:	08409114 	ori	at,at,580
    jmp r1
10100018:	0800683a 	jmp	at
1010001c:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>

Disassembly of section .exceptions:

10100020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10100020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10100024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10100028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1010002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10100030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10100034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10100038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1010003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10100040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10100044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10100048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1010004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10100050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10100054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10100058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1010005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10100060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10100064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10100068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1010006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10100070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10100074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10100078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1010007c:	10000326 	beq	r2,zero,1010008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10100080:	20000226 	beq	r4,zero,1010008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10100084:	01000fc0 	call	101000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10100088:	00000706 	br	101000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1010008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10100090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10100094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10100098:	01001d00 	call	101001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1010009c:	1000021e 	bne	r2,zero,101000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
101000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
101000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
101000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
101000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
101000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
101000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
101000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
101000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
101000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
101000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
101000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
101000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
101000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
101000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
101000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
101000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
101000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
101000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
101000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
101000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
101000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
101000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
101000f8:	ef80083a 	eret

101000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
101000fc:	defff904 	addi	sp,sp,-28
10100100:	dfc00615 	stw	ra,24(sp)
10100104:	df000515 	stw	fp,20(sp)
10100108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1010010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10100110:	0005313a 	rdctl	r2,ipending
10100114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10100118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1010011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10100120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10100124:	00800044 	movi	r2,1
10100128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1010012c:	e0fffb17 	ldw	r3,-20(fp)
10100130:	e0bffc17 	ldw	r2,-16(fp)
10100134:	1884703a 	and	r2,r3,r2
10100138:	10001426 	beq	r2,zero,1010018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1010013c:	00840474 	movhi	r2,4113
10100140:	108c0d04 	addi	r2,r2,12340
10100144:	e0fffd17 	ldw	r3,-12(fp)
10100148:	180690fa 	slli	r3,r3,3
1010014c:	10c5883a 	add	r2,r2,r3
10100150:	10c00017 	ldw	r3,0(r2)
10100154:	00840474 	movhi	r2,4113
10100158:	108c0d04 	addi	r2,r2,12340
1010015c:	e13ffd17 	ldw	r4,-12(fp)
10100160:	200890fa 	slli	r4,r4,3
10100164:	1105883a 	add	r2,r2,r4
10100168:	10800104 	addi	r2,r2,4
1010016c:	10800017 	ldw	r2,0(r2)
10100170:	1009883a 	mov	r4,r2
10100174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10100178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1010017c:	0005313a 	rdctl	r2,ipending
10100180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10100184:	e0bfff17 	ldw	r2,-4(fp)
10100188:	00000706 	br	101001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1010018c:	e0bffc17 	ldw	r2,-16(fp)
10100190:	1085883a 	add	r2,r2,r2
10100194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10100198:	e0bffd17 	ldw	r2,-12(fp)
1010019c:	10800044 	addi	r2,r2,1
101001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
101001a4:	003fe106 	br	1010012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
101001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
101001ac:	e0bffb17 	ldw	r2,-20(fp)
101001b0:	103fdb1e 	bne	r2,zero,10100120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
101001b4:	0001883a 	nop
}
101001b8:	0001883a 	nop
101001bc:	e037883a 	mov	sp,fp
101001c0:	dfc00117 	ldw	ra,4(sp)
101001c4:	df000017 	ldw	fp,0(sp)
101001c8:	dec00204 	addi	sp,sp,8
101001cc:	f800283a 	ret

101001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
101001d0:	defffb04 	addi	sp,sp,-20
101001d4:	dfc00415 	stw	ra,16(sp)
101001d8:	df000315 	stw	fp,12(sp)
101001dc:	df000304 	addi	fp,sp,12
101001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
101001e4:	000531fa 	rdctl	r2,exception
101001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
101001ec:	e0bffd17 	ldw	r2,-12(fp)
101001f0:	10801f0c 	andi	r2,r2,124
101001f4:	1004d0ba 	srli	r2,r2,2
101001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
101001fc:	0005333a 	rdctl	r2,badaddr
10100200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
10100204:	d0a6d817 	ldw	r2,-25760(gp)
10100208:	10000726 	beq	r2,zero,10100228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
1010020c:	d0a6d817 	ldw	r2,-25760(gp)
10100210:	e0fffd17 	ldw	r3,-12(fp)
10100214:	e1bffe17 	ldw	r6,-8(fp)
10100218:	e17fff17 	ldw	r5,-4(fp)
1010021c:	1809883a 	mov	r4,r3
10100220:	103ee83a 	callr	r2
10100224:	00000206 	br	10100230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10100228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
1010022c:	0005883a 	mov	r2,zero
}
10100230:	e037883a 	mov	sp,fp
10100234:	dfc00117 	ldw	ra,4(sp)
10100238:	df000017 	ldw	fp,0(sp)
1010023c:	dec00204 	addi	sp,sp,8
10100240:	f800283a 	ret

Disassembly of section .text:

10100244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
10100244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
10100248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
1010024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
10100250:	00bffd16 	blt	zero,r2,10100248 <__alt_data_end+0xfffe0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10100254:	06c404b4 	movhi	sp,4114
    ori sp, sp, %lo(__alt_stack_pointer)
10100258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
1010025c:	06840474 	movhi	gp,4113
    ori gp, gp, %lo(_gp)
10100260:	d6a52a14 	ori	gp,gp,38056
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10100264:	00840474 	movhi	r2,4113
    ori r2, r2, %lo(__bss_start)
10100268:	108bf514 	ori	r2,r2,12244

    movhi r3, %hi(__bss_end)
1010026c:	00c40474 	movhi	r3,4113
    ori r3, r3, %lo(__bss_end)
10100270:	18cc4d14 	ori	r3,r3,12596

    beq r2, r3, 1f
10100274:	10c00326 	beq	r2,r3,10100284 <_start+0x40>

0:
    stw zero, (r2)
10100278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
1010027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
10100280:	10fffd36 	bltu	r2,r3,10100278 <__alt_data_end+0xfffe0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10100284:	010d2d80 	call	1010d2d8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10100288:	010d4800 	call	1010d480 <alt_main>

1010028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
1010028c:	003fff06 	br	1010028c <__alt_data_end+0xfffe028c>

10100290 <LCD_WR_REG>:
//#include "altera_avalon_pio_regs.h"
#include "io.h"
#include "system.h"


void LCD_WR_REG(int cmd) {
10100290:	defffe04 	addi	sp,sp,-8
10100294:	df000115 	stw	fp,4(sp)
10100298:	df000104 	addi	fp,sp,4
1010029c:	e13fff15 	stw	r4,-4(fp)

	IOWR_32DIRECT(LT24_0_BASE, 0, cmd);
101002a0:	00840034 	movhi	r2,4096
101002a4:	10820404 	addi	r2,r2,2064
101002a8:	e0ffff17 	ldw	r3,-4(fp)
101002ac:	10c00035 	stwio	r3,0(r2)

}
101002b0:	0001883a 	nop
101002b4:	e037883a 	mov	sp,fp
101002b8:	df000017 	ldw	fp,0(sp)
101002bc:	dec00104 	addi	sp,sp,4
101002c0:	f800283a 	ret

101002c4 <LCD_WR_DATA>:

void LCD_WR_DATA(int data) {
101002c4:	defffe04 	addi	sp,sp,-8
101002c8:	df000115 	stw	fp,4(sp)
101002cc:	df000104 	addi	fp,sp,4
101002d0:	e13fff15 	stw	r4,-4(fp)
	IOWR_32DIRECT(LT24_0_BASE, 1, data);
101002d4:	00840034 	movhi	r2,4096
101002d8:	10820444 	addi	r2,r2,2065
101002dc:	e0ffff17 	ldw	r3,-4(fp)
101002e0:	10c00035 	stwio	r3,0(r2)
}
101002e4:	0001883a 	nop
101002e8:	e037883a 	mov	sp,fp
101002ec:	df000017 	ldw	fp,0(sp)
101002f0:	dec00104 	addi	sp,sp,4
101002f4:	f800283a 	ret

101002f8 <LCD_RST>:

void LCD_RST(){
101002f8:	deffff04 	addi	sp,sp,-4
101002fc:	df000015 	stw	fp,0(sp)
10100300:	d839883a 	mov	fp,sp
	IOWR_32DIRECT(LT24_0_BASE, 2, '0x0080');
10100304:	00cc0c34 	movhi	r3,12336
10100308:	18ce0c04 	addi	r3,r3,14384
1010030c:	00840034 	movhi	r2,4096
10100310:	10820484 	addi	r2,r2,2066
10100314:	10c00035 	stwio	r3,0(r2)
}
10100318:	0001883a 	nop
1010031c:	e037883a 	mov	sp,fp
10100320:	df000017 	ldw	fp,0(sp)
10100324:	dec00104 	addi	sp,sp,4
10100328:	f800283a 	ret

1010032c <LCD_Init>:



void LCD_Init()
{
1010032c:	defffe04 	addi	sp,sp,-8
10100330:	dfc00115 	stw	ra,4(sp)
10100334:	df000015 	stw	fp,0(sp)
10100338:	d839883a 	mov	fp,sp

	LCD_RST();
1010033c:	01002f80 	call	101002f8 <LCD_RST>
	//Delay_Ms(120);       // Delay 120 ms
//	Clr_LCD_CS;



	LCD_WR_REG(0x0011); //Exit Sleep
10100340:	01000444 	movi	r4,17
10100344:	01002900 	call	10100290 <LCD_WR_REG>
	LCD_WR_REG(0x00CF);
10100348:	010033c4 	movi	r4,207
1010034c:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0000);
10100350:	0009883a 	mov	r4,zero
10100354:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0081);
10100358:	01002044 	movi	r4,129
1010035c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0X00c0);
10100360:	01003004 	movi	r4,192
10100364:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00ED);
10100368:	01003b44 	movi	r4,237
1010036c:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0064);
10100370:	01001904 	movi	r4,100
10100374:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0003);
10100378:	010000c4 	movi	r4,3
1010037c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0X0012);
10100380:	01000484 	movi	r4,18
10100384:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0X0081);
10100388:	01002044 	movi	r4,129
1010038c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00E8);
10100390:	01003a04 	movi	r4,232
10100394:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0085);
10100398:	01002144 	movi	r4,133
1010039c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0001);
101003a0:	01000044 	movi	r4,1
101003a4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x00798);
101003a8:	0101e604 	movi	r4,1944
101003ac:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00CB);
101003b0:	010032c4 	movi	r4,203
101003b4:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0039);
101003b8:	01000e44 	movi	r4,57
101003bc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x002C);
101003c0:	01000b04 	movi	r4,44
101003c4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0000);
101003c8:	0009883a 	mov	r4,zero
101003cc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0034);
101003d0:	01000d04 	movi	r4,52
101003d4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0002);
101003d8:	01000084 	movi	r4,2
101003dc:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00F7);
101003e0:	01003dc4 	movi	r4,247
101003e4:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0020);
101003e8:	01000804 	movi	r4,32
101003ec:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00EA);
101003f0:	01003a84 	movi	r4,234
101003f4:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0000);
101003f8:	0009883a 	mov	r4,zero
101003fc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0000);
10100400:	0009883a 	mov	r4,zero
10100404:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00B1);
10100408:	01002c44 	movi	r4,177
1010040c:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0000);
10100410:	0009883a 	mov	r4,zero
10100414:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x001b);
10100418:	010006c4 	movi	r4,27
1010041c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00B6);
10100420:	01002d84 	movi	r4,182
10100424:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x000A);
10100428:	01000284 	movi	r4,10
1010042c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x00A2);
10100430:	01002884 	movi	r4,162
10100434:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00C0);    //Power control
10100438:	01003004 	movi	r4,192
1010043c:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0005);   //VRH[5:0]
10100440:	01000144 	movi	r4,5
10100444:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00C1);    //Power control
10100448:	01003044 	movi	r4,193
1010044c:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0011);   //SAP[2:0];BT[3:0]
10100450:	01000444 	movi	r4,17
10100454:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00C5);    //VCM control
10100458:	01003144 	movi	r4,197
1010045c:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0045);       //3F
10100460:	01001144 	movi	r4,69
10100464:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0045);       //3C
10100468:	01001144 	movi	r4,69
1010046c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	 LCD_WR_REG(0x00C7);    //VCM control2
10100470:	010031c4 	movi	r4,199
10100474:	01002900 	call	10100290 <LCD_WR_REG>
		 LCD_WR_DATA(0X00a2);
10100478:	01002884 	movi	r4,162
1010047c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	 LCD_WR_REG(0x0036);    // Memory Access Control will be overwritten below
10100480:	01000d84 	movi	r4,54
10100484:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0008);//48
10100488:	01000204 	movi	r4,8
1010048c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00F2);    // 3Gamma Function Disable
10100490:	01003c84 	movi	r4,242
10100494:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0000);
10100498:	0009883a 	mov	r4,zero
1010049c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x0026);    //Gamma curve selected
101004a0:	01000984 	movi	r4,38
101004a4:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0001);
101004a8:	01000044 	movi	r4,1
101004ac:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00E0);    //Set Gamma
101004b0:	01003804 	movi	r4,224
101004b4:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x000F);
101004b8:	010003c4 	movi	r4,15
101004bc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0026);
101004c0:	01000984 	movi	r4,38
101004c4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0024);
101004c8:	01000904 	movi	r4,36
101004cc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x000b);
101004d0:	010002c4 	movi	r4,11
101004d4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x000E);
101004d8:	01000384 	movi	r4,14
101004dc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0008);
101004e0:	01000204 	movi	r4,8
101004e4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x004b);
101004e8:	010012c4 	movi	r4,75
101004ec:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0X00a8);
101004f0:	01002a04 	movi	r4,168
101004f4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x003b);
101004f8:	01000ec4 	movi	r4,59
101004fc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x000a);
10100500:	01000284 	movi	r4,10
10100504:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0014);
10100508:	01000504 	movi	r4,20
1010050c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0006);
10100510:	01000184 	movi	r4,6
10100514:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0010);
10100518:	01000404 	movi	r4,16
1010051c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0009);
10100520:	01000244 	movi	r4,9
10100524:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0000);
10100528:	0009883a 	mov	r4,zero
1010052c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0X00E1);    //Set Gamma
10100530:	01003844 	movi	r4,225
10100534:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0000);
10100538:	0009883a 	mov	r4,zero
1010053c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x001c);
10100540:	01000704 	movi	r4,28
10100544:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0020);
10100548:	01000804 	movi	r4,32
1010054c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0004);
10100550:	01000104 	movi	r4,4
10100554:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0010);
10100558:	01000404 	movi	r4,16
1010055c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0008);
10100560:	01000204 	movi	r4,8
10100564:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0034);
10100568:	01000d04 	movi	r4,52
1010056c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0047);
10100570:	010011c4 	movi	r4,71
10100574:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0044);
10100578:	01001104 	movi	r4,68
1010057c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0005);
10100580:	01000144 	movi	r4,5
10100584:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x000b);
10100588:	010002c4 	movi	r4,11
1010058c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0009);
10100590:	01000244 	movi	r4,9
10100594:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x002f);
10100598:	01000bc4 	movi	r4,47
1010059c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0036);
101005a0:	01000d84 	movi	r4,54
101005a4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x000f);
101005a8:	010003c4 	movi	r4,15
101005ac:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x002A);
101005b0:	01000a84 	movi	r4,42
101005b4:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0000);
101005b8:	0009883a 	mov	r4,zero
101005bc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0000);
101005c0:	0009883a 	mov	r4,zero
101005c4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0000);
101005c8:	0009883a 	mov	r4,zero
101005cc:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x00ef);
101005d0:	01003bc4 	movi	r4,239
101005d4:	01002c40 	call	101002c4 <LCD_WR_DATA>

	 LCD_WR_REG(0x002B);
101005d8:	01000ac4 	movi	r4,43
101005dc:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0000);
101005e0:	0009883a 	mov	r4,zero
101005e4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0000);
101005e8:	0009883a 	mov	r4,zero
101005ec:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0001);
101005f0:	01000044 	movi	r4,1
101005f4:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x003f);
101005f8:	01000fc4 	movi	r4,63
101005fc:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x003A);
10100600:	01000e84 	movi	r4,58
10100604:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0055);
10100608:	01001544 	movi	r4,85
1010060c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x00f6);
10100610:	01003d84 	movi	r4,246
10100614:	01002900 	call	10100290 <LCD_WR_REG>
		LCD_WR_DATA(0x0001);
10100618:	01000044 	movi	r4,1
1010061c:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0030);
10100620:	01000c04 	movi	r4,48
10100624:	01002c40 	call	101002c4 <LCD_WR_DATA>
		LCD_WR_DATA(0x0000);
10100628:	0009883a 	mov	r4,zero
1010062c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	// Change MADCTL
    // Set LCD in reverse mode (row/column) exchange:  MADCTL B5='1'
    // BGR: MADCTL B3='1'
	LCD_WR_REG(0x0036);    // Memory Access Control will be overwritten below
10100630:	01000d84 	movi	r4,54
10100634:	01002900 	call	10100290 <LCD_WR_REG>
	LCD_WR_DATA(0x0028);
10100638:	01000a04 	movi	r4,40
1010063c:	01002c40 	call	101002c4 <LCD_WR_DATA>

	LCD_WR_REG(0x0029); //display on
10100640:	01000a44 	movi	r4,41
10100644:	01002900 	call	10100290 <LCD_WR_REG>

	LCD_WR_REG(0x002c);    // 0x2C
10100648:	01000b04 	movi	r4,44
1010064c:	01002900 	call	10100290 <LCD_WR_REG>



}
10100650:	0001883a 	nop
10100654:	e037883a 	mov	sp,fp
10100658:	dfc00117 	ldw	ra,4(sp)
1010065c:	df000017 	ldw	fp,0(sp)
10100660:	dec00204 	addi	sp,sp,8
10100664:	f800283a 	ret

10100668 <main>:

int main()
{
10100668:	defffd04 	addi	sp,sp,-12
1010066c:	dfc00215 	stw	ra,8(sp)
10100670:	df000115 	stw	fp,4(sp)
10100674:	df000104 	addi	fp,sp,4

printf("HERE");
10100678:	01040474 	movhi	r4,4113
1010067c:	213dbc04 	addi	r4,r4,-2320
10100680:	01007140 	call	10100714 <printf>

  while(1){
	  //printf("floopooop");
	//  IOWR_32DIRECT(LT24_0_BASE, 3*4, 0x0000);

	  IOWR_32DIRECT(LT24_0_BASE, 1*4, 0x5678);
10100684:	00d59e04 	movi	r3,22136
10100688:	00840034 	movhi	r2,4096
1010068c:	10820504 	addi	r2,r2,2068
10100690:	10c00035 	stwio	r3,0(r2)
	  printf("send");
10100694:	01040474 	movhi	r4,4113
10100698:	213dbe04 	addi	r4,r4,-2312
1010069c:	01007140 	call	10100714 <printf>
	  int delay = 0;
101006a0:	e03fff15 	stw	zero,-4(fp)
	 // printf("looping");
	  while(delay < 10000){
101006a4:	00000306 	br	101006b4 <main+0x4c>
		//  printf("looping");
		  delay++;
101006a8:	e0bfff17 	ldw	r2,-4(fp)
101006ac:	10800044 	addi	r2,r2,1
101006b0:	e0bfff15 	stw	r2,-4(fp)

	  IOWR_32DIRECT(LT24_0_BASE, 1*4, 0x5678);
	  printf("send");
	  int delay = 0;
	 // printf("looping");
	  while(delay < 10000){
101006b4:	e0bfff17 	ldw	r2,-4(fp)
101006b8:	1089c410 	cmplti	r2,r2,10000
101006bc:	103ffa1e 	bne	r2,zero,101006a8 <__alt_data_end+0xfffe06a8>

	 // printf("test");
	  //int test = IORD_32DIRECT(LT24_0_BASE,3*4)+1;
	 // printf("received \n");

	   delay = 0;
101006c0:	e03fff15 	stw	zero,-4(fp)
	  while(delay < 100){
101006c4:	00000306 	br	101006d4 <main+0x6c>
	  		//  printf("looping");
	  		  delay++;
101006c8:	e0bfff17 	ldw	r2,-4(fp)
101006cc:	10800044 	addi	r2,r2,1
101006d0:	e0bfff15 	stw	r2,-4(fp)
	 // printf("test");
	  //int test = IORD_32DIRECT(LT24_0_BASE,3*4)+1;
	 // printf("received \n");

	   delay = 0;
	  while(delay < 100){
101006d4:	e0bfff17 	ldw	r2,-4(fp)
101006d8:	10801910 	cmplti	r2,r2,100
101006dc:	103ffa1e 	bne	r2,zero,101006c8 <__alt_data_end+0xfffe06c8>
	  		//  printf("looping");
	  		  delay++;
	  	  }
	 // printf("%d", test);

  }
101006e0:	003fe806 	br	10100684 <__alt_data_end+0xfffe0684>

101006e4 <_printf_r>:
101006e4:	defffd04 	addi	sp,sp,-12
101006e8:	2805883a 	mov	r2,r5
101006ec:	dfc00015 	stw	ra,0(sp)
101006f0:	d9800115 	stw	r6,4(sp)
101006f4:	d9c00215 	stw	r7,8(sp)
101006f8:	21400217 	ldw	r5,8(r4)
101006fc:	d9c00104 	addi	r7,sp,4
10100700:	100d883a 	mov	r6,r2
10100704:	01007500 	call	10100750 <___vfprintf_internal_r>
10100708:	dfc00017 	ldw	ra,0(sp)
1010070c:	dec00304 	addi	sp,sp,12
10100710:	f800283a 	ret

10100714 <printf>:
10100714:	defffc04 	addi	sp,sp,-16
10100718:	dfc00015 	stw	ra,0(sp)
1010071c:	d9400115 	stw	r5,4(sp)
10100720:	d9800215 	stw	r6,8(sp)
10100724:	d9c00315 	stw	r7,12(sp)
10100728:	00840474 	movhi	r2,4113
1010072c:	10852b04 	addi	r2,r2,5292
10100730:	10800017 	ldw	r2,0(r2)
10100734:	200b883a 	mov	r5,r4
10100738:	d9800104 	addi	r6,sp,4
1010073c:	11000217 	ldw	r4,8(r2)
10100740:	01029480 	call	10102948 <__vfprintf_internal>
10100744:	dfc00017 	ldw	ra,0(sp)
10100748:	dec00404 	addi	sp,sp,16
1010074c:	f800283a 	ret

10100750 <___vfprintf_internal_r>:
10100750:	deffb804 	addi	sp,sp,-288
10100754:	dfc04715 	stw	ra,284(sp)
10100758:	ddc04515 	stw	r23,276(sp)
1010075c:	dd404315 	stw	r21,268(sp)
10100760:	d9002c15 	stw	r4,176(sp)
10100764:	282f883a 	mov	r23,r5
10100768:	302b883a 	mov	r21,r6
1010076c:	d9c02d15 	stw	r7,180(sp)
10100770:	df004615 	stw	fp,280(sp)
10100774:	dd804415 	stw	r22,272(sp)
10100778:	dd004215 	stw	r20,264(sp)
1010077c:	dcc04115 	stw	r19,260(sp)
10100780:	dc804015 	stw	r18,256(sp)
10100784:	dc403f15 	stw	r17,252(sp)
10100788:	dc003e15 	stw	r16,248(sp)
1010078c:	01050ac0 	call	101050ac <_localeconv_r>
10100790:	10800017 	ldw	r2,0(r2)
10100794:	1009883a 	mov	r4,r2
10100798:	d8803415 	stw	r2,208(sp)
1010079c:	01070d40 	call	101070d4 <strlen>
101007a0:	d8803715 	stw	r2,220(sp)
101007a4:	d8802c17 	ldw	r2,176(sp)
101007a8:	10000226 	beq	r2,zero,101007b4 <___vfprintf_internal_r+0x64>
101007ac:	10800e17 	ldw	r2,56(r2)
101007b0:	1000f926 	beq	r2,zero,10100b98 <___vfprintf_internal_r+0x448>
101007b4:	b880030b 	ldhu	r2,12(r23)
101007b8:	10c8000c 	andi	r3,r2,8192
101007bc:	1800061e 	bne	r3,zero,101007d8 <___vfprintf_internal_r+0x88>
101007c0:	b9001917 	ldw	r4,100(r23)
101007c4:	00f7ffc4 	movi	r3,-8193
101007c8:	10880014 	ori	r2,r2,8192
101007cc:	20c6703a 	and	r3,r4,r3
101007d0:	b880030d 	sth	r2,12(r23)
101007d4:	b8c01915 	stw	r3,100(r23)
101007d8:	10c0020c 	andi	r3,r2,8
101007dc:	1800c126 	beq	r3,zero,10100ae4 <___vfprintf_internal_r+0x394>
101007e0:	b8c00417 	ldw	r3,16(r23)
101007e4:	1800bf26 	beq	r3,zero,10100ae4 <___vfprintf_internal_r+0x394>
101007e8:	1080068c 	andi	r2,r2,26
101007ec:	00c00284 	movi	r3,10
101007f0:	10c0c426 	beq	r2,r3,10100b04 <___vfprintf_internal_r+0x3b4>
101007f4:	d8c00404 	addi	r3,sp,16
101007f8:	05040474 	movhi	r20,4113
101007fc:	d9001e04 	addi	r4,sp,120
10100800:	a53dd084 	addi	r20,r20,-2238
10100804:	d8c01e15 	stw	r3,120(sp)
10100808:	d8002015 	stw	zero,128(sp)
1010080c:	d8001f15 	stw	zero,124(sp)
10100810:	d8003315 	stw	zero,204(sp)
10100814:	d8003615 	stw	zero,216(sp)
10100818:	d8003815 	stw	zero,224(sp)
1010081c:	1811883a 	mov	r8,r3
10100820:	d8003915 	stw	zero,228(sp)
10100824:	d8003a15 	stw	zero,232(sp)
10100828:	d8002f15 	stw	zero,188(sp)
1010082c:	d9002815 	stw	r4,160(sp)
10100830:	a8800007 	ldb	r2,0(r21)
10100834:	10027b26 	beq	r2,zero,10101224 <___vfprintf_internal_r+0xad4>
10100838:	00c00944 	movi	r3,37
1010083c:	a821883a 	mov	r16,r21
10100840:	10c0021e 	bne	r2,r3,1010084c <___vfprintf_internal_r+0xfc>
10100844:	00001406 	br	10100898 <___vfprintf_internal_r+0x148>
10100848:	10c00326 	beq	r2,r3,10100858 <___vfprintf_internal_r+0x108>
1010084c:	84000044 	addi	r16,r16,1
10100850:	80800007 	ldb	r2,0(r16)
10100854:	103ffc1e 	bne	r2,zero,10100848 <__alt_data_end+0xfffe0848>
10100858:	8563c83a 	sub	r17,r16,r21
1010085c:	88000e26 	beq	r17,zero,10100898 <___vfprintf_internal_r+0x148>
10100860:	d8c02017 	ldw	r3,128(sp)
10100864:	d8801f17 	ldw	r2,124(sp)
10100868:	45400015 	stw	r21,0(r8)
1010086c:	1c47883a 	add	r3,r3,r17
10100870:	10800044 	addi	r2,r2,1
10100874:	d8c02015 	stw	r3,128(sp)
10100878:	44400115 	stw	r17,4(r8)
1010087c:	d8801f15 	stw	r2,124(sp)
10100880:	00c001c4 	movi	r3,7
10100884:	1880a716 	blt	r3,r2,10100b24 <___vfprintf_internal_r+0x3d4>
10100888:	42000204 	addi	r8,r8,8
1010088c:	d9402f17 	ldw	r5,188(sp)
10100890:	2c4b883a 	add	r5,r5,r17
10100894:	d9402f15 	stw	r5,188(sp)
10100898:	80800007 	ldb	r2,0(r16)
1010089c:	1000a826 	beq	r2,zero,10100b40 <___vfprintf_internal_r+0x3f0>
101008a0:	84400047 	ldb	r17,1(r16)
101008a4:	00bfffc4 	movi	r2,-1
101008a8:	85400044 	addi	r21,r16,1
101008ac:	d8002785 	stb	zero,158(sp)
101008b0:	0007883a 	mov	r3,zero
101008b4:	000f883a 	mov	r7,zero
101008b8:	d8802915 	stw	r2,164(sp)
101008bc:	d8003115 	stw	zero,196(sp)
101008c0:	0025883a 	mov	r18,zero
101008c4:	01401604 	movi	r5,88
101008c8:	01800244 	movi	r6,9
101008cc:	02800a84 	movi	r10,42
101008d0:	02401b04 	movi	r9,108
101008d4:	ad400044 	addi	r21,r21,1
101008d8:	88bff804 	addi	r2,r17,-32
101008dc:	28830436 	bltu	r5,r2,101014f0 <___vfprintf_internal_r+0xda0>
101008e0:	100490ba 	slli	r2,r2,2
101008e4:	01040434 	movhi	r4,4112
101008e8:	21023e04 	addi	r4,r4,2296
101008ec:	1105883a 	add	r2,r2,r4
101008f0:	10800017 	ldw	r2,0(r2)
101008f4:	1000683a 	jmp	r2
101008f8:	10101410 	cmplti	zero,r2,16464
101008fc:	101014f0 	cmpltui	zero,r2,16467
10100900:	101014f0 	cmpltui	zero,r2,16467
10100904:	10101430 	cmpltui	zero,r2,16464
10100908:	101014f0 	cmpltui	zero,r2,16467
1010090c:	101014f0 	cmpltui	zero,r2,16467
10100910:	101014f0 	cmpltui	zero,r2,16467
10100914:	101014f0 	cmpltui	zero,r2,16467
10100918:	101014f0 	cmpltui	zero,r2,16467
1010091c:	101014f0 	cmpltui	zero,r2,16467
10100920:	10100ba4 	muli	zero,r2,16430
10100924:	1010134c 	andi	zero,r2,16461
10100928:	101014f0 	cmpltui	zero,r2,16467
1010092c:	10100a6c 	andhi	zero,r2,16425
10100930:	10100bcc 	andi	zero,r2,16431
10100934:	101014f0 	cmpltui	zero,r2,16467
10100938:	10100c0c 	andi	zero,r2,16432
1010093c:	10100c18 	cmpnei	zero,r2,16432
10100940:	10100c18 	cmpnei	zero,r2,16432
10100944:	10100c18 	cmpnei	zero,r2,16432
10100948:	10100c18 	cmpnei	zero,r2,16432
1010094c:	10100c18 	cmpnei	zero,r2,16432
10100950:	10100c18 	cmpnei	zero,r2,16432
10100954:	10100c18 	cmpnei	zero,r2,16432
10100958:	10100c18 	cmpnei	zero,r2,16432
1010095c:	10100c18 	cmpnei	zero,r2,16432
10100960:	101014f0 	cmpltui	zero,r2,16467
10100964:	101014f0 	cmpltui	zero,r2,16467
10100968:	101014f0 	cmpltui	zero,r2,16467
1010096c:	101014f0 	cmpltui	zero,r2,16467
10100970:	101014f0 	cmpltui	zero,r2,16467
10100974:	101014f0 	cmpltui	zero,r2,16467
10100978:	101014f0 	cmpltui	zero,r2,16467
1010097c:	101014f0 	cmpltui	zero,r2,16467
10100980:	101014f0 	cmpltui	zero,r2,16467
10100984:	101014f0 	cmpltui	zero,r2,16467
10100988:	10100c4c 	andi	zero,r2,16433
1010098c:	10100d08 	cmpgei	zero,r2,16436
10100990:	101014f0 	cmpltui	zero,r2,16467
10100994:	10100d08 	cmpgei	zero,r2,16436
10100998:	101014f0 	cmpltui	zero,r2,16467
1010099c:	101014f0 	cmpltui	zero,r2,16467
101009a0:	101014f0 	cmpltui	zero,r2,16467
101009a4:	101014f0 	cmpltui	zero,r2,16467
101009a8:	10100da8 	cmpgeui	zero,r2,16438
101009ac:	101014f0 	cmpltui	zero,r2,16467
101009b0:	101014f0 	cmpltui	zero,r2,16467
101009b4:	10100db4 	orhi	zero,r2,16438
101009b8:	101014f0 	cmpltui	zero,r2,16467
101009bc:	101014f0 	cmpltui	zero,r2,16467
101009c0:	101014f0 	cmpltui	zero,r2,16467
101009c4:	101014f0 	cmpltui	zero,r2,16467
101009c8:	101014f0 	cmpltui	zero,r2,16467
101009cc:	1010122c 	andhi	zero,r2,16456
101009d0:	101014f0 	cmpltui	zero,r2,16467
101009d4:	101014f0 	cmpltui	zero,r2,16467
101009d8:	1010128c 	andi	zero,r2,16458
101009dc:	101014f0 	cmpltui	zero,r2,16467
101009e0:	101014f0 	cmpltui	zero,r2,16467
101009e4:	101014f0 	cmpltui	zero,r2,16467
101009e8:	101014f0 	cmpltui	zero,r2,16467
101009ec:	101014f0 	cmpltui	zero,r2,16467
101009f0:	101014f0 	cmpltui	zero,r2,16467
101009f4:	101014f0 	cmpltui	zero,r2,16467
101009f8:	101014f0 	cmpltui	zero,r2,16467
101009fc:	101014f0 	cmpltui	zero,r2,16467
10100a00:	101014f0 	cmpltui	zero,r2,16467
10100a04:	1010149c 	xori	zero,r2,16466
10100a08:	1010143c 	xorhi	zero,r2,16464
10100a0c:	10100d08 	cmpgei	zero,r2,16436
10100a10:	10100d08 	cmpgei	zero,r2,16436
10100a14:	10100d08 	cmpgei	zero,r2,16436
10100a18:	1010144c 	andi	zero,r2,16465
10100a1c:	1010143c 	xorhi	zero,r2,16464
10100a20:	101014f0 	cmpltui	zero,r2,16467
10100a24:	101014f0 	cmpltui	zero,r2,16467
10100a28:	10101458 	cmpnei	zero,r2,16465
10100a2c:	101014f0 	cmpltui	zero,r2,16467
10100a30:	10101468 	cmpgeui	zero,r2,16465
10100a34:	1010133c 	xorhi	zero,r2,16460
10100a38:	10100a78 	rdprs	zero,r2,16425
10100a3c:	1010135c 	xori	zero,r2,16461
10100a40:	101014f0 	cmpltui	zero,r2,16467
10100a44:	10101368 	cmpgeui	zero,r2,16461
10100a48:	101014f0 	cmpltui	zero,r2,16467
10100a4c:	101013c4 	addi	zero,r2,16463
10100a50:	101014f0 	cmpltui	zero,r2,16467
10100a54:	101014f0 	cmpltui	zero,r2,16467
10100a58:	101013d4 	ori	zero,r2,16463
10100a5c:	d9003117 	ldw	r4,196(sp)
10100a60:	d8802d15 	stw	r2,180(sp)
10100a64:	0109c83a 	sub	r4,zero,r4
10100a68:	d9003115 	stw	r4,196(sp)
10100a6c:	94800114 	ori	r18,r18,4
10100a70:	ac400007 	ldb	r17,0(r21)
10100a74:	003f9706 	br	101008d4 <__alt_data_end+0xfffe08d4>
10100a78:	00800c04 	movi	r2,48
10100a7c:	d9002d17 	ldw	r4,180(sp)
10100a80:	d9402917 	ldw	r5,164(sp)
10100a84:	d8802705 	stb	r2,156(sp)
10100a88:	00801e04 	movi	r2,120
10100a8c:	d8802745 	stb	r2,157(sp)
10100a90:	d8002785 	stb	zero,158(sp)
10100a94:	20c00104 	addi	r3,r4,4
10100a98:	24c00017 	ldw	r19,0(r4)
10100a9c:	002d883a 	mov	r22,zero
10100aa0:	90800094 	ori	r2,r18,2
10100aa4:	28029a16 	blt	r5,zero,10101510 <___vfprintf_internal_r+0xdc0>
10100aa8:	00bfdfc4 	movi	r2,-129
10100aac:	90a4703a 	and	r18,r18,r2
10100ab0:	d8c02d15 	stw	r3,180(sp)
10100ab4:	94800094 	ori	r18,r18,2
10100ab8:	9802871e 	bne	r19,zero,101014d8 <___vfprintf_internal_r+0xd88>
10100abc:	00840474 	movhi	r2,4113
10100ac0:	10bdc904 	addi	r2,r2,-2268
10100ac4:	d8803915 	stw	r2,228(sp)
10100ac8:	04401e04 	movi	r17,120
10100acc:	d8802917 	ldw	r2,164(sp)
10100ad0:	0039883a 	mov	fp,zero
10100ad4:	1001e926 	beq	r2,zero,1010127c <___vfprintf_internal_r+0xb2c>
10100ad8:	0027883a 	mov	r19,zero
10100adc:	002d883a 	mov	r22,zero
10100ae0:	00020506 	br	101012f8 <___vfprintf_internal_r+0xba8>
10100ae4:	d9002c17 	ldw	r4,176(sp)
10100ae8:	b80b883a 	mov	r5,r23
10100aec:	0102a200 	call	10102a20 <__swsetup_r>
10100af0:	1005ac1e 	bne	r2,zero,101021a4 <___vfprintf_internal_r+0x1a54>
10100af4:	b880030b 	ldhu	r2,12(r23)
10100af8:	00c00284 	movi	r3,10
10100afc:	1080068c 	andi	r2,r2,26
10100b00:	10ff3c1e 	bne	r2,r3,101007f4 <__alt_data_end+0xfffe07f4>
10100b04:	b880038f 	ldh	r2,14(r23)
10100b08:	103f3a16 	blt	r2,zero,101007f4 <__alt_data_end+0xfffe07f4>
10100b0c:	d9c02d17 	ldw	r7,180(sp)
10100b10:	d9002c17 	ldw	r4,176(sp)
10100b14:	a80d883a 	mov	r6,r21
10100b18:	b80b883a 	mov	r5,r23
10100b1c:	01029640 	call	10102964 <__sbprintf>
10100b20:	00001106 	br	10100b68 <___vfprintf_internal_r+0x418>
10100b24:	d9002c17 	ldw	r4,176(sp)
10100b28:	d9801e04 	addi	r6,sp,120
10100b2c:	b80b883a 	mov	r5,r23
10100b30:	01072680 	call	10107268 <__sprint_r>
10100b34:	1000081e 	bne	r2,zero,10100b58 <___vfprintf_internal_r+0x408>
10100b38:	da000404 	addi	r8,sp,16
10100b3c:	003f5306 	br	1010088c <__alt_data_end+0xfffe088c>
10100b40:	d8802017 	ldw	r2,128(sp)
10100b44:	10000426 	beq	r2,zero,10100b58 <___vfprintf_internal_r+0x408>
10100b48:	d9002c17 	ldw	r4,176(sp)
10100b4c:	d9801e04 	addi	r6,sp,120
10100b50:	b80b883a 	mov	r5,r23
10100b54:	01072680 	call	10107268 <__sprint_r>
10100b58:	b880030b 	ldhu	r2,12(r23)
10100b5c:	1080100c 	andi	r2,r2,64
10100b60:	1005901e 	bne	r2,zero,101021a4 <___vfprintf_internal_r+0x1a54>
10100b64:	d8802f17 	ldw	r2,188(sp)
10100b68:	dfc04717 	ldw	ra,284(sp)
10100b6c:	df004617 	ldw	fp,280(sp)
10100b70:	ddc04517 	ldw	r23,276(sp)
10100b74:	dd804417 	ldw	r22,272(sp)
10100b78:	dd404317 	ldw	r21,268(sp)
10100b7c:	dd004217 	ldw	r20,264(sp)
10100b80:	dcc04117 	ldw	r19,260(sp)
10100b84:	dc804017 	ldw	r18,256(sp)
10100b88:	dc403f17 	ldw	r17,252(sp)
10100b8c:	dc003e17 	ldw	r16,248(sp)
10100b90:	dec04804 	addi	sp,sp,288
10100b94:	f800283a 	ret
10100b98:	d9002c17 	ldw	r4,176(sp)
10100b9c:	01049f40 	call	101049f4 <__sinit>
10100ba0:	003f0406 	br	101007b4 <__alt_data_end+0xfffe07b4>
10100ba4:	d8802d17 	ldw	r2,180(sp)
10100ba8:	d9002d17 	ldw	r4,180(sp)
10100bac:	10800017 	ldw	r2,0(r2)
10100bb0:	d8803115 	stw	r2,196(sp)
10100bb4:	20800104 	addi	r2,r4,4
10100bb8:	d9003117 	ldw	r4,196(sp)
10100bbc:	203fa716 	blt	r4,zero,10100a5c <__alt_data_end+0xfffe0a5c>
10100bc0:	d8802d15 	stw	r2,180(sp)
10100bc4:	ac400007 	ldb	r17,0(r21)
10100bc8:	003f4206 	br	101008d4 <__alt_data_end+0xfffe08d4>
10100bcc:	ac400007 	ldb	r17,0(r21)
10100bd0:	aac00044 	addi	r11,r21,1
10100bd4:	8a872826 	beq	r17,r10,10102878 <___vfprintf_internal_r+0x2128>
10100bd8:	88bff404 	addi	r2,r17,-48
10100bdc:	0009883a 	mov	r4,zero
10100be0:	30867d36 	bltu	r6,r2,101025d8 <___vfprintf_internal_r+0x1e88>
10100be4:	5c400007 	ldb	r17,0(r11)
10100be8:	210002a4 	muli	r4,r4,10
10100bec:	5d400044 	addi	r21,r11,1
10100bf0:	a817883a 	mov	r11,r21
10100bf4:	2089883a 	add	r4,r4,r2
10100bf8:	88bff404 	addi	r2,r17,-48
10100bfc:	30bff92e 	bgeu	r6,r2,10100be4 <__alt_data_end+0xfffe0be4>
10100c00:	2005c916 	blt	r4,zero,10102328 <___vfprintf_internal_r+0x1bd8>
10100c04:	d9002915 	stw	r4,164(sp)
10100c08:	003f3306 	br	101008d8 <__alt_data_end+0xfffe08d8>
10100c0c:	94802014 	ori	r18,r18,128
10100c10:	ac400007 	ldb	r17,0(r21)
10100c14:	003f2f06 	br	101008d4 <__alt_data_end+0xfffe08d4>
10100c18:	a809883a 	mov	r4,r21
10100c1c:	d8003115 	stw	zero,196(sp)
10100c20:	88bff404 	addi	r2,r17,-48
10100c24:	0017883a 	mov	r11,zero
10100c28:	24400007 	ldb	r17,0(r4)
10100c2c:	5ac002a4 	muli	r11,r11,10
10100c30:	ad400044 	addi	r21,r21,1
10100c34:	a809883a 	mov	r4,r21
10100c38:	12d7883a 	add	r11,r2,r11
10100c3c:	88bff404 	addi	r2,r17,-48
10100c40:	30bff92e 	bgeu	r6,r2,10100c28 <__alt_data_end+0xfffe0c28>
10100c44:	dac03115 	stw	r11,196(sp)
10100c48:	003f2306 	br	101008d8 <__alt_data_end+0xfffe08d8>
10100c4c:	18c03fcc 	andi	r3,r3,255
10100c50:	18072b1e 	bne	r3,zero,10102900 <___vfprintf_internal_r+0x21b0>
10100c54:	94800414 	ori	r18,r18,16
10100c58:	9080080c 	andi	r2,r18,32
10100c5c:	10037b26 	beq	r2,zero,10101a4c <___vfprintf_internal_r+0x12fc>
10100c60:	d9402d17 	ldw	r5,180(sp)
10100c64:	28800117 	ldw	r2,4(r5)
10100c68:	2cc00017 	ldw	r19,0(r5)
10100c6c:	29400204 	addi	r5,r5,8
10100c70:	d9402d15 	stw	r5,180(sp)
10100c74:	102d883a 	mov	r22,r2
10100c78:	10044b16 	blt	r2,zero,10101da8 <___vfprintf_internal_r+0x1658>
10100c7c:	d9402917 	ldw	r5,164(sp)
10100c80:	df002783 	ldbu	fp,158(sp)
10100c84:	2803bc16 	blt	r5,zero,10101b78 <___vfprintf_internal_r+0x1428>
10100c88:	00ffdfc4 	movi	r3,-129
10100c8c:	9d84b03a 	or	r2,r19,r22
10100c90:	90e4703a 	and	r18,r18,r3
10100c94:	10017726 	beq	r2,zero,10101274 <___vfprintf_internal_r+0xb24>
10100c98:	b0038326 	beq	r22,zero,10101aa8 <___vfprintf_internal_r+0x1358>
10100c9c:	dc402a15 	stw	r17,168(sp)
10100ca0:	dc001e04 	addi	r16,sp,120
10100ca4:	b023883a 	mov	r17,r22
10100ca8:	402d883a 	mov	r22,r8
10100cac:	9809883a 	mov	r4,r19
10100cb0:	880b883a 	mov	r5,r17
10100cb4:	01800284 	movi	r6,10
10100cb8:	000f883a 	mov	r7,zero
10100cbc:	010a1dc0 	call	1010a1dc <__umoddi3>
10100cc0:	10800c04 	addi	r2,r2,48
10100cc4:	843fffc4 	addi	r16,r16,-1
10100cc8:	9809883a 	mov	r4,r19
10100ccc:	880b883a 	mov	r5,r17
10100cd0:	80800005 	stb	r2,0(r16)
10100cd4:	01800284 	movi	r6,10
10100cd8:	000f883a 	mov	r7,zero
10100cdc:	0109c640 	call	10109c64 <__udivdi3>
10100ce0:	1027883a 	mov	r19,r2
10100ce4:	10c4b03a 	or	r2,r2,r3
10100ce8:	1823883a 	mov	r17,r3
10100cec:	103fef1e 	bne	r2,zero,10100cac <__alt_data_end+0xfffe0cac>
10100cf0:	d8c02817 	ldw	r3,160(sp)
10100cf4:	dc402a17 	ldw	r17,168(sp)
10100cf8:	b011883a 	mov	r8,r22
10100cfc:	1c07c83a 	sub	r3,r3,r16
10100d00:	d8c02e15 	stw	r3,184(sp)
10100d04:	00005906 	br	10100e6c <___vfprintf_internal_r+0x71c>
10100d08:	18c03fcc 	andi	r3,r3,255
10100d0c:	1806fa1e 	bne	r3,zero,101028f8 <___vfprintf_internal_r+0x21a8>
10100d10:	9080020c 	andi	r2,r18,8
10100d14:	10048a26 	beq	r2,zero,10101f40 <___vfprintf_internal_r+0x17f0>
10100d18:	d8c02d17 	ldw	r3,180(sp)
10100d1c:	d9002d17 	ldw	r4,180(sp)
10100d20:	d9402d17 	ldw	r5,180(sp)
10100d24:	18c00017 	ldw	r3,0(r3)
10100d28:	21000117 	ldw	r4,4(r4)
10100d2c:	29400204 	addi	r5,r5,8
10100d30:	d8c03615 	stw	r3,216(sp)
10100d34:	d9003815 	stw	r4,224(sp)
10100d38:	d9402d15 	stw	r5,180(sp)
10100d3c:	d9003617 	ldw	r4,216(sp)
10100d40:	d9403817 	ldw	r5,224(sp)
10100d44:	da003d15 	stw	r8,244(sp)
10100d48:	04000044 	movi	r16,1
10100d4c:	0106df40 	call	10106df4 <__fpclassifyd>
10100d50:	da003d17 	ldw	r8,244(sp)
10100d54:	14041f1e 	bne	r2,r16,10101dd4 <___vfprintf_internal_r+0x1684>
10100d58:	d9003617 	ldw	r4,216(sp)
10100d5c:	d9403817 	ldw	r5,224(sp)
10100d60:	000d883a 	mov	r6,zero
10100d64:	000f883a 	mov	r7,zero
10100d68:	010bbc00 	call	1010bbc0 <__ledf2>
10100d6c:	da003d17 	ldw	r8,244(sp)
10100d70:	1005be16 	blt	r2,zero,1010246c <___vfprintf_internal_r+0x1d1c>
10100d74:	df002783 	ldbu	fp,158(sp)
10100d78:	008011c4 	movi	r2,71
10100d7c:	1445330e 	bge	r2,r17,1010224c <___vfprintf_internal_r+0x1afc>
10100d80:	04040474 	movhi	r16,4113
10100d84:	843dc104 	addi	r16,r16,-2300
10100d88:	00c000c4 	movi	r3,3
10100d8c:	00bfdfc4 	movi	r2,-129
10100d90:	d8c02a15 	stw	r3,168(sp)
10100d94:	90a4703a 	and	r18,r18,r2
10100d98:	d8c02e15 	stw	r3,184(sp)
10100d9c:	d8002915 	stw	zero,164(sp)
10100da0:	d8003215 	stw	zero,200(sp)
10100da4:	00003706 	br	10100e84 <___vfprintf_internal_r+0x734>
10100da8:	94800214 	ori	r18,r18,8
10100dac:	ac400007 	ldb	r17,0(r21)
10100db0:	003ec806 	br	101008d4 <__alt_data_end+0xfffe08d4>
10100db4:	18c03fcc 	andi	r3,r3,255
10100db8:	1806db1e 	bne	r3,zero,10102928 <___vfprintf_internal_r+0x21d8>
10100dbc:	94800414 	ori	r18,r18,16
10100dc0:	9080080c 	andi	r2,r18,32
10100dc4:	1002d826 	beq	r2,zero,10101928 <___vfprintf_internal_r+0x11d8>
10100dc8:	d9402d17 	ldw	r5,180(sp)
10100dcc:	d8c02917 	ldw	r3,164(sp)
10100dd0:	d8002785 	stb	zero,158(sp)
10100dd4:	28800204 	addi	r2,r5,8
10100dd8:	2cc00017 	ldw	r19,0(r5)
10100ddc:	2d800117 	ldw	r22,4(r5)
10100de0:	18048f16 	blt	r3,zero,10102020 <___vfprintf_internal_r+0x18d0>
10100de4:	013fdfc4 	movi	r4,-129
10100de8:	9d86b03a 	or	r3,r19,r22
10100dec:	d8802d15 	stw	r2,180(sp)
10100df0:	9124703a 	and	r18,r18,r4
10100df4:	1802d91e 	bne	r3,zero,1010195c <___vfprintf_internal_r+0x120c>
10100df8:	d8c02917 	ldw	r3,164(sp)
10100dfc:	0039883a 	mov	fp,zero
10100e00:	1805c326 	beq	r3,zero,10102510 <___vfprintf_internal_r+0x1dc0>
10100e04:	0027883a 	mov	r19,zero
10100e08:	002d883a 	mov	r22,zero
10100e0c:	dc001e04 	addi	r16,sp,120
10100e10:	9806d0fa 	srli	r3,r19,3
10100e14:	b008977a 	slli	r4,r22,29
10100e18:	b02cd0fa 	srli	r22,r22,3
10100e1c:	9cc001cc 	andi	r19,r19,7
10100e20:	98800c04 	addi	r2,r19,48
10100e24:	843fffc4 	addi	r16,r16,-1
10100e28:	20e6b03a 	or	r19,r4,r3
10100e2c:	80800005 	stb	r2,0(r16)
10100e30:	9d86b03a 	or	r3,r19,r22
10100e34:	183ff61e 	bne	r3,zero,10100e10 <__alt_data_end+0xfffe0e10>
10100e38:	90c0004c 	andi	r3,r18,1
10100e3c:	18013b26 	beq	r3,zero,1010132c <___vfprintf_internal_r+0xbdc>
10100e40:	10803fcc 	andi	r2,r2,255
10100e44:	1080201c 	xori	r2,r2,128
10100e48:	10bfe004 	addi	r2,r2,-128
10100e4c:	00c00c04 	movi	r3,48
10100e50:	10c13626 	beq	r2,r3,1010132c <___vfprintf_internal_r+0xbdc>
10100e54:	80ffffc5 	stb	r3,-1(r16)
10100e58:	d8c02817 	ldw	r3,160(sp)
10100e5c:	80bfffc4 	addi	r2,r16,-1
10100e60:	1021883a 	mov	r16,r2
10100e64:	1887c83a 	sub	r3,r3,r2
10100e68:	d8c02e15 	stw	r3,184(sp)
10100e6c:	d8802e17 	ldw	r2,184(sp)
10100e70:	d9002917 	ldw	r4,164(sp)
10100e74:	1100010e 	bge	r2,r4,10100e7c <___vfprintf_internal_r+0x72c>
10100e78:	2005883a 	mov	r2,r4
10100e7c:	d8802a15 	stw	r2,168(sp)
10100e80:	d8003215 	stw	zero,200(sp)
10100e84:	e7003fcc 	andi	fp,fp,255
10100e88:	e700201c 	xori	fp,fp,128
10100e8c:	e73fe004 	addi	fp,fp,-128
10100e90:	e0000326 	beq	fp,zero,10100ea0 <___vfprintf_internal_r+0x750>
10100e94:	d8c02a17 	ldw	r3,168(sp)
10100e98:	18c00044 	addi	r3,r3,1
10100e9c:	d8c02a15 	stw	r3,168(sp)
10100ea0:	90c0008c 	andi	r3,r18,2
10100ea4:	d8c02b15 	stw	r3,172(sp)
10100ea8:	18000326 	beq	r3,zero,10100eb8 <___vfprintf_internal_r+0x768>
10100eac:	d8c02a17 	ldw	r3,168(sp)
10100eb0:	18c00084 	addi	r3,r3,2
10100eb4:	d8c02a15 	stw	r3,168(sp)
10100eb8:	90c0210c 	andi	r3,r18,132
10100ebc:	d8c03015 	stw	r3,192(sp)
10100ec0:	1801a31e 	bne	r3,zero,10101550 <___vfprintf_internal_r+0xe00>
10100ec4:	d9003117 	ldw	r4,196(sp)
10100ec8:	d8c02a17 	ldw	r3,168(sp)
10100ecc:	20e7c83a 	sub	r19,r4,r3
10100ed0:	04c19f0e 	bge	zero,r19,10101550 <___vfprintf_internal_r+0xe00>
10100ed4:	02400404 	movi	r9,16
10100ed8:	d8c02017 	ldw	r3,128(sp)
10100edc:	d8801f17 	ldw	r2,124(sp)
10100ee0:	4cc50d0e 	bge	r9,r19,10102318 <___vfprintf_internal_r+0x1bc8>
10100ee4:	01440474 	movhi	r5,4113
10100ee8:	297dd484 	addi	r5,r5,-2222
10100eec:	dc403b15 	stw	r17,236(sp)
10100ef0:	d9403515 	stw	r5,212(sp)
10100ef4:	9823883a 	mov	r17,r19
10100ef8:	482d883a 	mov	r22,r9
10100efc:	9027883a 	mov	r19,r18
10100f00:	070001c4 	movi	fp,7
10100f04:	8025883a 	mov	r18,r16
10100f08:	dc002c17 	ldw	r16,176(sp)
10100f0c:	00000306 	br	10100f1c <___vfprintf_internal_r+0x7cc>
10100f10:	8c7ffc04 	addi	r17,r17,-16
10100f14:	42000204 	addi	r8,r8,8
10100f18:	b440130e 	bge	r22,r17,10100f68 <___vfprintf_internal_r+0x818>
10100f1c:	01040474 	movhi	r4,4113
10100f20:	18c00404 	addi	r3,r3,16
10100f24:	10800044 	addi	r2,r2,1
10100f28:	213dd484 	addi	r4,r4,-2222
10100f2c:	41000015 	stw	r4,0(r8)
10100f30:	45800115 	stw	r22,4(r8)
10100f34:	d8c02015 	stw	r3,128(sp)
10100f38:	d8801f15 	stw	r2,124(sp)
10100f3c:	e0bff40e 	bge	fp,r2,10100f10 <__alt_data_end+0xfffe0f10>
10100f40:	d9801e04 	addi	r6,sp,120
10100f44:	b80b883a 	mov	r5,r23
10100f48:	8009883a 	mov	r4,r16
10100f4c:	01072680 	call	10107268 <__sprint_r>
10100f50:	103f011e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10100f54:	8c7ffc04 	addi	r17,r17,-16
10100f58:	d8c02017 	ldw	r3,128(sp)
10100f5c:	d8801f17 	ldw	r2,124(sp)
10100f60:	da000404 	addi	r8,sp,16
10100f64:	b47fed16 	blt	r22,r17,10100f1c <__alt_data_end+0xfffe0f1c>
10100f68:	9021883a 	mov	r16,r18
10100f6c:	9825883a 	mov	r18,r19
10100f70:	8827883a 	mov	r19,r17
10100f74:	dc403b17 	ldw	r17,236(sp)
10100f78:	d9403517 	ldw	r5,212(sp)
10100f7c:	98c7883a 	add	r3,r19,r3
10100f80:	10800044 	addi	r2,r2,1
10100f84:	41400015 	stw	r5,0(r8)
10100f88:	44c00115 	stw	r19,4(r8)
10100f8c:	d8c02015 	stw	r3,128(sp)
10100f90:	d8801f15 	stw	r2,124(sp)
10100f94:	010001c4 	movi	r4,7
10100f98:	2082a316 	blt	r4,r2,10101a28 <___vfprintf_internal_r+0x12d8>
10100f9c:	df002787 	ldb	fp,158(sp)
10100fa0:	42000204 	addi	r8,r8,8
10100fa4:	e0000c26 	beq	fp,zero,10100fd8 <___vfprintf_internal_r+0x888>
10100fa8:	d8801f17 	ldw	r2,124(sp)
10100fac:	d9002784 	addi	r4,sp,158
10100fb0:	18c00044 	addi	r3,r3,1
10100fb4:	10800044 	addi	r2,r2,1
10100fb8:	41000015 	stw	r4,0(r8)
10100fbc:	01000044 	movi	r4,1
10100fc0:	41000115 	stw	r4,4(r8)
10100fc4:	d8c02015 	stw	r3,128(sp)
10100fc8:	d8801f15 	stw	r2,124(sp)
10100fcc:	010001c4 	movi	r4,7
10100fd0:	20823c16 	blt	r4,r2,101018c4 <___vfprintf_internal_r+0x1174>
10100fd4:	42000204 	addi	r8,r8,8
10100fd8:	d8802b17 	ldw	r2,172(sp)
10100fdc:	10000c26 	beq	r2,zero,10101010 <___vfprintf_internal_r+0x8c0>
10100fe0:	d8801f17 	ldw	r2,124(sp)
10100fe4:	d9002704 	addi	r4,sp,156
10100fe8:	18c00084 	addi	r3,r3,2
10100fec:	10800044 	addi	r2,r2,1
10100ff0:	41000015 	stw	r4,0(r8)
10100ff4:	01000084 	movi	r4,2
10100ff8:	41000115 	stw	r4,4(r8)
10100ffc:	d8c02015 	stw	r3,128(sp)
10101000:	d8801f15 	stw	r2,124(sp)
10101004:	010001c4 	movi	r4,7
10101008:	20823616 	blt	r4,r2,101018e4 <___vfprintf_internal_r+0x1194>
1010100c:	42000204 	addi	r8,r8,8
10101010:	d9003017 	ldw	r4,192(sp)
10101014:	00802004 	movi	r2,128
10101018:	20819926 	beq	r4,r2,10101680 <___vfprintf_internal_r+0xf30>
1010101c:	d9402917 	ldw	r5,164(sp)
10101020:	d8802e17 	ldw	r2,184(sp)
10101024:	28adc83a 	sub	r22,r5,r2
10101028:	0580310e 	bge	zero,r22,101010f0 <___vfprintf_internal_r+0x9a0>
1010102c:	07000404 	movi	fp,16
10101030:	d8801f17 	ldw	r2,124(sp)
10101034:	e584140e 	bge	fp,r22,10102088 <___vfprintf_internal_r+0x1938>
10101038:	01440474 	movhi	r5,4113
1010103c:	297dd084 	addi	r5,r5,-2238
10101040:	dc402915 	stw	r17,164(sp)
10101044:	d9402b15 	stw	r5,172(sp)
10101048:	b023883a 	mov	r17,r22
1010104c:	04c001c4 	movi	r19,7
10101050:	a82d883a 	mov	r22,r21
10101054:	902b883a 	mov	r21,r18
10101058:	8025883a 	mov	r18,r16
1010105c:	dc002c17 	ldw	r16,176(sp)
10101060:	00000306 	br	10101070 <___vfprintf_internal_r+0x920>
10101064:	8c7ffc04 	addi	r17,r17,-16
10101068:	42000204 	addi	r8,r8,8
1010106c:	e440110e 	bge	fp,r17,101010b4 <___vfprintf_internal_r+0x964>
10101070:	18c00404 	addi	r3,r3,16
10101074:	10800044 	addi	r2,r2,1
10101078:	45000015 	stw	r20,0(r8)
1010107c:	47000115 	stw	fp,4(r8)
10101080:	d8c02015 	stw	r3,128(sp)
10101084:	d8801f15 	stw	r2,124(sp)
10101088:	98bff60e 	bge	r19,r2,10101064 <__alt_data_end+0xfffe1064>
1010108c:	d9801e04 	addi	r6,sp,120
10101090:	b80b883a 	mov	r5,r23
10101094:	8009883a 	mov	r4,r16
10101098:	01072680 	call	10107268 <__sprint_r>
1010109c:	103eae1e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
101010a0:	8c7ffc04 	addi	r17,r17,-16
101010a4:	d8c02017 	ldw	r3,128(sp)
101010a8:	d8801f17 	ldw	r2,124(sp)
101010ac:	da000404 	addi	r8,sp,16
101010b0:	e47fef16 	blt	fp,r17,10101070 <__alt_data_end+0xfffe1070>
101010b4:	9021883a 	mov	r16,r18
101010b8:	a825883a 	mov	r18,r21
101010bc:	b02b883a 	mov	r21,r22
101010c0:	882d883a 	mov	r22,r17
101010c4:	dc402917 	ldw	r17,164(sp)
101010c8:	d9002b17 	ldw	r4,172(sp)
101010cc:	1d87883a 	add	r3,r3,r22
101010d0:	10800044 	addi	r2,r2,1
101010d4:	41000015 	stw	r4,0(r8)
101010d8:	45800115 	stw	r22,4(r8)
101010dc:	d8c02015 	stw	r3,128(sp)
101010e0:	d8801f15 	stw	r2,124(sp)
101010e4:	010001c4 	movi	r4,7
101010e8:	2081ee16 	blt	r4,r2,101018a4 <___vfprintf_internal_r+0x1154>
101010ec:	42000204 	addi	r8,r8,8
101010f0:	9080400c 	andi	r2,r18,256
101010f4:	1001181e 	bne	r2,zero,10101558 <___vfprintf_internal_r+0xe08>
101010f8:	d9402e17 	ldw	r5,184(sp)
101010fc:	d8801f17 	ldw	r2,124(sp)
10101100:	44000015 	stw	r16,0(r8)
10101104:	1947883a 	add	r3,r3,r5
10101108:	10800044 	addi	r2,r2,1
1010110c:	41400115 	stw	r5,4(r8)
10101110:	d8c02015 	stw	r3,128(sp)
10101114:	d8801f15 	stw	r2,124(sp)
10101118:	010001c4 	movi	r4,7
1010111c:	2081d316 	blt	r4,r2,1010186c <___vfprintf_internal_r+0x111c>
10101120:	42000204 	addi	r8,r8,8
10101124:	9480010c 	andi	r18,r18,4
10101128:	90003226 	beq	r18,zero,101011f4 <___vfprintf_internal_r+0xaa4>
1010112c:	d9403117 	ldw	r5,196(sp)
10101130:	d8802a17 	ldw	r2,168(sp)
10101134:	28a1c83a 	sub	r16,r5,r2
10101138:	04002e0e 	bge	zero,r16,101011f4 <___vfprintf_internal_r+0xaa4>
1010113c:	04400404 	movi	r17,16
10101140:	d8801f17 	ldw	r2,124(sp)
10101144:	8c04a20e 	bge	r17,r16,101023d0 <___vfprintf_internal_r+0x1c80>
10101148:	01440474 	movhi	r5,4113
1010114c:	297dd484 	addi	r5,r5,-2222
10101150:	d9403515 	stw	r5,212(sp)
10101154:	048001c4 	movi	r18,7
10101158:	dcc02c17 	ldw	r19,176(sp)
1010115c:	00000306 	br	1010116c <___vfprintf_internal_r+0xa1c>
10101160:	843ffc04 	addi	r16,r16,-16
10101164:	42000204 	addi	r8,r8,8
10101168:	8c00130e 	bge	r17,r16,101011b8 <___vfprintf_internal_r+0xa68>
1010116c:	01040474 	movhi	r4,4113
10101170:	18c00404 	addi	r3,r3,16
10101174:	10800044 	addi	r2,r2,1
10101178:	213dd484 	addi	r4,r4,-2222
1010117c:	41000015 	stw	r4,0(r8)
10101180:	44400115 	stw	r17,4(r8)
10101184:	d8c02015 	stw	r3,128(sp)
10101188:	d8801f15 	stw	r2,124(sp)
1010118c:	90bff40e 	bge	r18,r2,10101160 <__alt_data_end+0xfffe1160>
10101190:	d9801e04 	addi	r6,sp,120
10101194:	b80b883a 	mov	r5,r23
10101198:	9809883a 	mov	r4,r19
1010119c:	01072680 	call	10107268 <__sprint_r>
101011a0:	103e6d1e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
101011a4:	843ffc04 	addi	r16,r16,-16
101011a8:	d8c02017 	ldw	r3,128(sp)
101011ac:	d8801f17 	ldw	r2,124(sp)
101011b0:	da000404 	addi	r8,sp,16
101011b4:	8c3fed16 	blt	r17,r16,1010116c <__alt_data_end+0xfffe116c>
101011b8:	d9403517 	ldw	r5,212(sp)
101011bc:	1c07883a 	add	r3,r3,r16
101011c0:	10800044 	addi	r2,r2,1
101011c4:	41400015 	stw	r5,0(r8)
101011c8:	44000115 	stw	r16,4(r8)
101011cc:	d8c02015 	stw	r3,128(sp)
101011d0:	d8801f15 	stw	r2,124(sp)
101011d4:	010001c4 	movi	r4,7
101011d8:	2080060e 	bge	r4,r2,101011f4 <___vfprintf_internal_r+0xaa4>
101011dc:	d9002c17 	ldw	r4,176(sp)
101011e0:	d9801e04 	addi	r6,sp,120
101011e4:	b80b883a 	mov	r5,r23
101011e8:	01072680 	call	10107268 <__sprint_r>
101011ec:	103e5a1e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
101011f0:	d8c02017 	ldw	r3,128(sp)
101011f4:	d8803117 	ldw	r2,196(sp)
101011f8:	d9002a17 	ldw	r4,168(sp)
101011fc:	1100010e 	bge	r2,r4,10101204 <___vfprintf_internal_r+0xab4>
10101200:	2005883a 	mov	r2,r4
10101204:	d9402f17 	ldw	r5,188(sp)
10101208:	288b883a 	add	r5,r5,r2
1010120c:	d9402f15 	stw	r5,188(sp)
10101210:	18019e1e 	bne	r3,zero,1010188c <___vfprintf_internal_r+0x113c>
10101214:	a8800007 	ldb	r2,0(r21)
10101218:	d8001f15 	stw	zero,124(sp)
1010121c:	da000404 	addi	r8,sp,16
10101220:	103d851e 	bne	r2,zero,10100838 <__alt_data_end+0xfffe0838>
10101224:	a821883a 	mov	r16,r21
10101228:	003d9b06 	br	10100898 <__alt_data_end+0xfffe0898>
1010122c:	18c03fcc 	andi	r3,r3,255
10101230:	1805c11e 	bne	r3,zero,10102938 <___vfprintf_internal_r+0x21e8>
10101234:	94800414 	ori	r18,r18,16
10101238:	9080080c 	andi	r2,r18,32
1010123c:	10020c26 	beq	r2,zero,10101a70 <___vfprintf_internal_r+0x1320>
10101240:	d8802d17 	ldw	r2,180(sp)
10101244:	d9002917 	ldw	r4,164(sp)
10101248:	d8002785 	stb	zero,158(sp)
1010124c:	10c00204 	addi	r3,r2,8
10101250:	14c00017 	ldw	r19,0(r2)
10101254:	15800117 	ldw	r22,4(r2)
10101258:	20040f16 	blt	r4,zero,10102298 <___vfprintf_internal_r+0x1b48>
1010125c:	013fdfc4 	movi	r4,-129
10101260:	9d84b03a 	or	r2,r19,r22
10101264:	d8c02d15 	stw	r3,180(sp)
10101268:	9124703a 	and	r18,r18,r4
1010126c:	0039883a 	mov	fp,zero
10101270:	103e891e 	bne	r2,zero,10100c98 <__alt_data_end+0xfffe0c98>
10101274:	d9002917 	ldw	r4,164(sp)
10101278:	2002c11e 	bne	r4,zero,10101d80 <___vfprintf_internal_r+0x1630>
1010127c:	d8002915 	stw	zero,164(sp)
10101280:	d8002e15 	stw	zero,184(sp)
10101284:	dc001e04 	addi	r16,sp,120
10101288:	003ef806 	br	10100e6c <__alt_data_end+0xfffe0e6c>
1010128c:	18c03fcc 	andi	r3,r3,255
10101290:	18059d1e 	bne	r3,zero,10102908 <___vfprintf_internal_r+0x21b8>
10101294:	01440474 	movhi	r5,4113
10101298:	297dc404 	addi	r5,r5,-2288
1010129c:	d9403915 	stw	r5,228(sp)
101012a0:	9080080c 	andi	r2,r18,32
101012a4:	10005226 	beq	r2,zero,101013f0 <___vfprintf_internal_r+0xca0>
101012a8:	d8802d17 	ldw	r2,180(sp)
101012ac:	14c00017 	ldw	r19,0(r2)
101012b0:	15800117 	ldw	r22,4(r2)
101012b4:	10800204 	addi	r2,r2,8
101012b8:	d8802d15 	stw	r2,180(sp)
101012bc:	9080004c 	andi	r2,r18,1
101012c0:	10019026 	beq	r2,zero,10101904 <___vfprintf_internal_r+0x11b4>
101012c4:	9d84b03a 	or	r2,r19,r22
101012c8:	10036926 	beq	r2,zero,10102070 <___vfprintf_internal_r+0x1920>
101012cc:	d8c02917 	ldw	r3,164(sp)
101012d0:	00800c04 	movi	r2,48
101012d4:	d8802705 	stb	r2,156(sp)
101012d8:	dc402745 	stb	r17,157(sp)
101012dc:	d8002785 	stb	zero,158(sp)
101012e0:	90800094 	ori	r2,r18,2
101012e4:	18045d16 	blt	r3,zero,1010245c <___vfprintf_internal_r+0x1d0c>
101012e8:	00bfdfc4 	movi	r2,-129
101012ec:	90a4703a 	and	r18,r18,r2
101012f0:	94800094 	ori	r18,r18,2
101012f4:	0039883a 	mov	fp,zero
101012f8:	d9003917 	ldw	r4,228(sp)
101012fc:	dc001e04 	addi	r16,sp,120
10101300:	988003cc 	andi	r2,r19,15
10101304:	b006973a 	slli	r3,r22,28
10101308:	2085883a 	add	r2,r4,r2
1010130c:	9826d13a 	srli	r19,r19,4
10101310:	10800003 	ldbu	r2,0(r2)
10101314:	b02cd13a 	srli	r22,r22,4
10101318:	843fffc4 	addi	r16,r16,-1
1010131c:	1ce6b03a 	or	r19,r3,r19
10101320:	80800005 	stb	r2,0(r16)
10101324:	9d84b03a 	or	r2,r19,r22
10101328:	103ff51e 	bne	r2,zero,10101300 <__alt_data_end+0xfffe1300>
1010132c:	d8c02817 	ldw	r3,160(sp)
10101330:	1c07c83a 	sub	r3,r3,r16
10101334:	d8c02e15 	stw	r3,184(sp)
10101338:	003ecc06 	br	10100e6c <__alt_data_end+0xfffe0e6c>
1010133c:	18c03fcc 	andi	r3,r3,255
10101340:	183e9f26 	beq	r3,zero,10100dc0 <__alt_data_end+0xfffe0dc0>
10101344:	d9c02785 	stb	r7,158(sp)
10101348:	003e9d06 	br	10100dc0 <__alt_data_end+0xfffe0dc0>
1010134c:	00c00044 	movi	r3,1
10101350:	01c00ac4 	movi	r7,43
10101354:	ac400007 	ldb	r17,0(r21)
10101358:	003d5e06 	br	101008d4 <__alt_data_end+0xfffe08d4>
1010135c:	94800814 	ori	r18,r18,32
10101360:	ac400007 	ldb	r17,0(r21)
10101364:	003d5b06 	br	101008d4 <__alt_data_end+0xfffe08d4>
10101368:	d8c02d17 	ldw	r3,180(sp)
1010136c:	d8002785 	stb	zero,158(sp)
10101370:	1c000017 	ldw	r16,0(r3)
10101374:	1cc00104 	addi	r19,r3,4
10101378:	80041926 	beq	r16,zero,101023e0 <___vfprintf_internal_r+0x1c90>
1010137c:	d9002917 	ldw	r4,164(sp)
10101380:	2003d016 	blt	r4,zero,101022c4 <___vfprintf_internal_r+0x1b74>
10101384:	200d883a 	mov	r6,r4
10101388:	000b883a 	mov	r5,zero
1010138c:	8009883a 	mov	r4,r16
10101390:	da003d15 	stw	r8,244(sp)
10101394:	0105aa40 	call	10105aa4 <memchr>
10101398:	da003d17 	ldw	r8,244(sp)
1010139c:	10045426 	beq	r2,zero,101024f0 <___vfprintf_internal_r+0x1da0>
101013a0:	1405c83a 	sub	r2,r2,r16
101013a4:	d8802e15 	stw	r2,184(sp)
101013a8:	1003cc16 	blt	r2,zero,101022dc <___vfprintf_internal_r+0x1b8c>
101013ac:	df002783 	ldbu	fp,158(sp)
101013b0:	d8802a15 	stw	r2,168(sp)
101013b4:	dcc02d15 	stw	r19,180(sp)
101013b8:	d8002915 	stw	zero,164(sp)
101013bc:	d8003215 	stw	zero,200(sp)
101013c0:	003eb006 	br	10100e84 <__alt_data_end+0xfffe0e84>
101013c4:	18c03fcc 	andi	r3,r3,255
101013c8:	183f9b26 	beq	r3,zero,10101238 <__alt_data_end+0xfffe1238>
101013cc:	d9c02785 	stb	r7,158(sp)
101013d0:	003f9906 	br	10101238 <__alt_data_end+0xfffe1238>
101013d4:	18c03fcc 	andi	r3,r3,255
101013d8:	1805551e 	bne	r3,zero,10102930 <___vfprintf_internal_r+0x21e0>
101013dc:	01440474 	movhi	r5,4113
101013e0:	297dc904 	addi	r5,r5,-2268
101013e4:	d9403915 	stw	r5,228(sp)
101013e8:	9080080c 	andi	r2,r18,32
101013ec:	103fae1e 	bne	r2,zero,101012a8 <__alt_data_end+0xfffe12a8>
101013f0:	9080040c 	andi	r2,r18,16
101013f4:	1002de26 	beq	r2,zero,10101f70 <___vfprintf_internal_r+0x1820>
101013f8:	d8c02d17 	ldw	r3,180(sp)
101013fc:	002d883a 	mov	r22,zero
10101400:	1cc00017 	ldw	r19,0(r3)
10101404:	18c00104 	addi	r3,r3,4
10101408:	d8c02d15 	stw	r3,180(sp)
1010140c:	003fab06 	br	101012bc <__alt_data_end+0xfffe12bc>
10101410:	38803fcc 	andi	r2,r7,255
10101414:	1080201c 	xori	r2,r2,128
10101418:	10bfe004 	addi	r2,r2,-128
1010141c:	1002d21e 	bne	r2,zero,10101f68 <___vfprintf_internal_r+0x1818>
10101420:	00c00044 	movi	r3,1
10101424:	01c00804 	movi	r7,32
10101428:	ac400007 	ldb	r17,0(r21)
1010142c:	003d2906 	br	101008d4 <__alt_data_end+0xfffe08d4>
10101430:	94800054 	ori	r18,r18,1
10101434:	ac400007 	ldb	r17,0(r21)
10101438:	003d2606 	br	101008d4 <__alt_data_end+0xfffe08d4>
1010143c:	18c03fcc 	andi	r3,r3,255
10101440:	183e0526 	beq	r3,zero,10100c58 <__alt_data_end+0xfffe0c58>
10101444:	d9c02785 	stb	r7,158(sp)
10101448:	003e0306 	br	10100c58 <__alt_data_end+0xfffe0c58>
1010144c:	94801014 	ori	r18,r18,64
10101450:	ac400007 	ldb	r17,0(r21)
10101454:	003d1f06 	br	101008d4 <__alt_data_end+0xfffe08d4>
10101458:	ac400007 	ldb	r17,0(r21)
1010145c:	8a438726 	beq	r17,r9,1010227c <___vfprintf_internal_r+0x1b2c>
10101460:	94800414 	ori	r18,r18,16
10101464:	003d1b06 	br	101008d4 <__alt_data_end+0xfffe08d4>
10101468:	18c03fcc 	andi	r3,r3,255
1010146c:	1805341e 	bne	r3,zero,10102940 <___vfprintf_internal_r+0x21f0>
10101470:	9080080c 	andi	r2,r18,32
10101474:	1002cd26 	beq	r2,zero,10101fac <___vfprintf_internal_r+0x185c>
10101478:	d9402d17 	ldw	r5,180(sp)
1010147c:	d9002f17 	ldw	r4,188(sp)
10101480:	28800017 	ldw	r2,0(r5)
10101484:	2007d7fa 	srai	r3,r4,31
10101488:	29400104 	addi	r5,r5,4
1010148c:	d9402d15 	stw	r5,180(sp)
10101490:	11000015 	stw	r4,0(r2)
10101494:	10c00115 	stw	r3,4(r2)
10101498:	003ce506 	br	10100830 <__alt_data_end+0xfffe0830>
1010149c:	d8c02d17 	ldw	r3,180(sp)
101014a0:	d9002d17 	ldw	r4,180(sp)
101014a4:	d8002785 	stb	zero,158(sp)
101014a8:	18800017 	ldw	r2,0(r3)
101014ac:	21000104 	addi	r4,r4,4
101014b0:	00c00044 	movi	r3,1
101014b4:	d8c02a15 	stw	r3,168(sp)
101014b8:	d8801405 	stb	r2,80(sp)
101014bc:	d9002d15 	stw	r4,180(sp)
101014c0:	d8c02e15 	stw	r3,184(sp)
101014c4:	d8002915 	stw	zero,164(sp)
101014c8:	d8003215 	stw	zero,200(sp)
101014cc:	dc001404 	addi	r16,sp,80
101014d0:	0039883a 	mov	fp,zero
101014d4:	003e7206 	br	10100ea0 <__alt_data_end+0xfffe0ea0>
101014d8:	01040474 	movhi	r4,4113
101014dc:	213dc904 	addi	r4,r4,-2268
101014e0:	0039883a 	mov	fp,zero
101014e4:	d9003915 	stw	r4,228(sp)
101014e8:	04401e04 	movi	r17,120
101014ec:	003f8206 	br	101012f8 <__alt_data_end+0xfffe12f8>
101014f0:	18c03fcc 	andi	r3,r3,255
101014f4:	1805061e 	bne	r3,zero,10102910 <___vfprintf_internal_r+0x21c0>
101014f8:	883d9126 	beq	r17,zero,10100b40 <__alt_data_end+0xfffe0b40>
101014fc:	00c00044 	movi	r3,1
10101500:	d8c02a15 	stw	r3,168(sp)
10101504:	dc401405 	stb	r17,80(sp)
10101508:	d8002785 	stb	zero,158(sp)
1010150c:	003fec06 	br	101014c0 <__alt_data_end+0xfffe14c0>
10101510:	01440474 	movhi	r5,4113
10101514:	297dc904 	addi	r5,r5,-2268
10101518:	d9403915 	stw	r5,228(sp)
1010151c:	d8c02d15 	stw	r3,180(sp)
10101520:	1025883a 	mov	r18,r2
10101524:	04401e04 	movi	r17,120
10101528:	9d84b03a 	or	r2,r19,r22
1010152c:	1000fc1e 	bne	r2,zero,10101920 <___vfprintf_internal_r+0x11d0>
10101530:	0039883a 	mov	fp,zero
10101534:	00800084 	movi	r2,2
10101538:	10803fcc 	andi	r2,r2,255
1010153c:	00c00044 	movi	r3,1
10101540:	10c20f26 	beq	r2,r3,10101d80 <___vfprintf_internal_r+0x1630>
10101544:	00c00084 	movi	r3,2
10101548:	10fd6326 	beq	r2,r3,10100ad8 <__alt_data_end+0xfffe0ad8>
1010154c:	003e2d06 	br	10100e04 <__alt_data_end+0xfffe0e04>
10101550:	d8c02017 	ldw	r3,128(sp)
10101554:	003e9306 	br	10100fa4 <__alt_data_end+0xfffe0fa4>
10101558:	00801944 	movi	r2,101
1010155c:	14407e0e 	bge	r2,r17,10101758 <___vfprintf_internal_r+0x1008>
10101560:	d9003617 	ldw	r4,216(sp)
10101564:	d9403817 	ldw	r5,224(sp)
10101568:	000d883a 	mov	r6,zero
1010156c:	000f883a 	mov	r7,zero
10101570:	d8c03c15 	stw	r3,240(sp)
10101574:	da003d15 	stw	r8,244(sp)
10101578:	010ba5c0 	call	1010ba5c <__eqdf2>
1010157c:	d8c03c17 	ldw	r3,240(sp)
10101580:	da003d17 	ldw	r8,244(sp)
10101584:	1000f71e 	bne	r2,zero,10101964 <___vfprintf_internal_r+0x1214>
10101588:	d8801f17 	ldw	r2,124(sp)
1010158c:	01040474 	movhi	r4,4113
10101590:	213dd004 	addi	r4,r4,-2240
10101594:	18c00044 	addi	r3,r3,1
10101598:	10800044 	addi	r2,r2,1
1010159c:	41000015 	stw	r4,0(r8)
101015a0:	01000044 	movi	r4,1
101015a4:	41000115 	stw	r4,4(r8)
101015a8:	d8c02015 	stw	r3,128(sp)
101015ac:	d8801f15 	stw	r2,124(sp)
101015b0:	010001c4 	movi	r4,7
101015b4:	2082b816 	blt	r4,r2,10102098 <___vfprintf_internal_r+0x1948>
101015b8:	42000204 	addi	r8,r8,8
101015bc:	d8802617 	ldw	r2,152(sp)
101015c0:	d9403317 	ldw	r5,204(sp)
101015c4:	11400216 	blt	r2,r5,101015d0 <___vfprintf_internal_r+0xe80>
101015c8:	9080004c 	andi	r2,r18,1
101015cc:	103ed526 	beq	r2,zero,10101124 <__alt_data_end+0xfffe1124>
101015d0:	d8803717 	ldw	r2,220(sp)
101015d4:	d9003417 	ldw	r4,208(sp)
101015d8:	d9403717 	ldw	r5,220(sp)
101015dc:	1887883a 	add	r3,r3,r2
101015e0:	d8801f17 	ldw	r2,124(sp)
101015e4:	41000015 	stw	r4,0(r8)
101015e8:	41400115 	stw	r5,4(r8)
101015ec:	10800044 	addi	r2,r2,1
101015f0:	d8c02015 	stw	r3,128(sp)
101015f4:	d8801f15 	stw	r2,124(sp)
101015f8:	010001c4 	movi	r4,7
101015fc:	20832916 	blt	r4,r2,101022a4 <___vfprintf_internal_r+0x1b54>
10101600:	42000204 	addi	r8,r8,8
10101604:	d8803317 	ldw	r2,204(sp)
10101608:	143fffc4 	addi	r16,r2,-1
1010160c:	043ec50e 	bge	zero,r16,10101124 <__alt_data_end+0xfffe1124>
10101610:	04400404 	movi	r17,16
10101614:	d8801f17 	ldw	r2,124(sp)
10101618:	8c00880e 	bge	r17,r16,1010183c <___vfprintf_internal_r+0x10ec>
1010161c:	01440474 	movhi	r5,4113
10101620:	297dd084 	addi	r5,r5,-2238
10101624:	d9402b15 	stw	r5,172(sp)
10101628:	058001c4 	movi	r22,7
1010162c:	dcc02c17 	ldw	r19,176(sp)
10101630:	00000306 	br	10101640 <___vfprintf_internal_r+0xef0>
10101634:	42000204 	addi	r8,r8,8
10101638:	843ffc04 	addi	r16,r16,-16
1010163c:	8c00820e 	bge	r17,r16,10101848 <___vfprintf_internal_r+0x10f8>
10101640:	18c00404 	addi	r3,r3,16
10101644:	10800044 	addi	r2,r2,1
10101648:	45000015 	stw	r20,0(r8)
1010164c:	44400115 	stw	r17,4(r8)
10101650:	d8c02015 	stw	r3,128(sp)
10101654:	d8801f15 	stw	r2,124(sp)
10101658:	b0bff60e 	bge	r22,r2,10101634 <__alt_data_end+0xfffe1634>
1010165c:	d9801e04 	addi	r6,sp,120
10101660:	b80b883a 	mov	r5,r23
10101664:	9809883a 	mov	r4,r19
10101668:	01072680 	call	10107268 <__sprint_r>
1010166c:	103d3a1e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10101670:	d8c02017 	ldw	r3,128(sp)
10101674:	d8801f17 	ldw	r2,124(sp)
10101678:	da000404 	addi	r8,sp,16
1010167c:	003fee06 	br	10101638 <__alt_data_end+0xfffe1638>
10101680:	d9403117 	ldw	r5,196(sp)
10101684:	d8802a17 	ldw	r2,168(sp)
10101688:	28adc83a 	sub	r22,r5,r2
1010168c:	05be630e 	bge	zero,r22,1010101c <__alt_data_end+0xfffe101c>
10101690:	07000404 	movi	fp,16
10101694:	d8801f17 	ldw	r2,124(sp)
10101698:	e5838f0e 	bge	fp,r22,101024d8 <___vfprintf_internal_r+0x1d88>
1010169c:	01440474 	movhi	r5,4113
101016a0:	297dd084 	addi	r5,r5,-2238
101016a4:	dc403015 	stw	r17,192(sp)
101016a8:	d9402b15 	stw	r5,172(sp)
101016ac:	b023883a 	mov	r17,r22
101016b0:	04c001c4 	movi	r19,7
101016b4:	a82d883a 	mov	r22,r21
101016b8:	902b883a 	mov	r21,r18
101016bc:	8025883a 	mov	r18,r16
101016c0:	dc002c17 	ldw	r16,176(sp)
101016c4:	00000306 	br	101016d4 <___vfprintf_internal_r+0xf84>
101016c8:	8c7ffc04 	addi	r17,r17,-16
101016cc:	42000204 	addi	r8,r8,8
101016d0:	e440110e 	bge	fp,r17,10101718 <___vfprintf_internal_r+0xfc8>
101016d4:	18c00404 	addi	r3,r3,16
101016d8:	10800044 	addi	r2,r2,1
101016dc:	45000015 	stw	r20,0(r8)
101016e0:	47000115 	stw	fp,4(r8)
101016e4:	d8c02015 	stw	r3,128(sp)
101016e8:	d8801f15 	stw	r2,124(sp)
101016ec:	98bff60e 	bge	r19,r2,101016c8 <__alt_data_end+0xfffe16c8>
101016f0:	d9801e04 	addi	r6,sp,120
101016f4:	b80b883a 	mov	r5,r23
101016f8:	8009883a 	mov	r4,r16
101016fc:	01072680 	call	10107268 <__sprint_r>
10101700:	103d151e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10101704:	8c7ffc04 	addi	r17,r17,-16
10101708:	d8c02017 	ldw	r3,128(sp)
1010170c:	d8801f17 	ldw	r2,124(sp)
10101710:	da000404 	addi	r8,sp,16
10101714:	e47fef16 	blt	fp,r17,101016d4 <__alt_data_end+0xfffe16d4>
10101718:	9021883a 	mov	r16,r18
1010171c:	a825883a 	mov	r18,r21
10101720:	b02b883a 	mov	r21,r22
10101724:	882d883a 	mov	r22,r17
10101728:	dc403017 	ldw	r17,192(sp)
1010172c:	d9002b17 	ldw	r4,172(sp)
10101730:	1d87883a 	add	r3,r3,r22
10101734:	10800044 	addi	r2,r2,1
10101738:	41000015 	stw	r4,0(r8)
1010173c:	45800115 	stw	r22,4(r8)
10101740:	d8c02015 	stw	r3,128(sp)
10101744:	d8801f15 	stw	r2,124(sp)
10101748:	010001c4 	movi	r4,7
1010174c:	20818e16 	blt	r4,r2,10101d88 <___vfprintf_internal_r+0x1638>
10101750:	42000204 	addi	r8,r8,8
10101754:	003e3106 	br	1010101c <__alt_data_end+0xfffe101c>
10101758:	d9403317 	ldw	r5,204(sp)
1010175c:	00800044 	movi	r2,1
10101760:	18c00044 	addi	r3,r3,1
10101764:	1141530e 	bge	r2,r5,10101cb4 <___vfprintf_internal_r+0x1564>
10101768:	dc401f17 	ldw	r17,124(sp)
1010176c:	00800044 	movi	r2,1
10101770:	40800115 	stw	r2,4(r8)
10101774:	8c400044 	addi	r17,r17,1
10101778:	44000015 	stw	r16,0(r8)
1010177c:	d8c02015 	stw	r3,128(sp)
10101780:	dc401f15 	stw	r17,124(sp)
10101784:	008001c4 	movi	r2,7
10101788:	14416b16 	blt	r2,r17,10101d38 <___vfprintf_internal_r+0x15e8>
1010178c:	42000204 	addi	r8,r8,8
10101790:	d8803717 	ldw	r2,220(sp)
10101794:	d9003417 	ldw	r4,208(sp)
10101798:	8c400044 	addi	r17,r17,1
1010179c:	10c7883a 	add	r3,r2,r3
101017a0:	40800115 	stw	r2,4(r8)
101017a4:	41000015 	stw	r4,0(r8)
101017a8:	d8c02015 	stw	r3,128(sp)
101017ac:	dc401f15 	stw	r17,124(sp)
101017b0:	008001c4 	movi	r2,7
101017b4:	14416916 	blt	r2,r17,10101d5c <___vfprintf_internal_r+0x160c>
101017b8:	45800204 	addi	r22,r8,8
101017bc:	d9003617 	ldw	r4,216(sp)
101017c0:	d9403817 	ldw	r5,224(sp)
101017c4:	000d883a 	mov	r6,zero
101017c8:	000f883a 	mov	r7,zero
101017cc:	d8c03c15 	stw	r3,240(sp)
101017d0:	010ba5c0 	call	1010ba5c <__eqdf2>
101017d4:	d8c03c17 	ldw	r3,240(sp)
101017d8:	1000bc26 	beq	r2,zero,10101acc <___vfprintf_internal_r+0x137c>
101017dc:	d9403317 	ldw	r5,204(sp)
101017e0:	84000044 	addi	r16,r16,1
101017e4:	8c400044 	addi	r17,r17,1
101017e8:	28bfffc4 	addi	r2,r5,-1
101017ec:	1887883a 	add	r3,r3,r2
101017f0:	b0800115 	stw	r2,4(r22)
101017f4:	b4000015 	stw	r16,0(r22)
101017f8:	d8c02015 	stw	r3,128(sp)
101017fc:	dc401f15 	stw	r17,124(sp)
10101800:	008001c4 	movi	r2,7
10101804:	14414316 	blt	r2,r17,10101d14 <___vfprintf_internal_r+0x15c4>
10101808:	b5800204 	addi	r22,r22,8
1010180c:	d9003a17 	ldw	r4,232(sp)
10101810:	df0022c4 	addi	fp,sp,139
10101814:	8c400044 	addi	r17,r17,1
10101818:	20c7883a 	add	r3,r4,r3
1010181c:	b7000015 	stw	fp,0(r22)
10101820:	b1000115 	stw	r4,4(r22)
10101824:	d8c02015 	stw	r3,128(sp)
10101828:	dc401f15 	stw	r17,124(sp)
1010182c:	008001c4 	movi	r2,7
10101830:	14400e16 	blt	r2,r17,1010186c <___vfprintf_internal_r+0x111c>
10101834:	b2000204 	addi	r8,r22,8
10101838:	003e3a06 	br	10101124 <__alt_data_end+0xfffe1124>
1010183c:	01040474 	movhi	r4,4113
10101840:	213dd084 	addi	r4,r4,-2238
10101844:	d9002b15 	stw	r4,172(sp)
10101848:	d9002b17 	ldw	r4,172(sp)
1010184c:	1c07883a 	add	r3,r3,r16
10101850:	44000115 	stw	r16,4(r8)
10101854:	41000015 	stw	r4,0(r8)
10101858:	10800044 	addi	r2,r2,1
1010185c:	d8c02015 	stw	r3,128(sp)
10101860:	d8801f15 	stw	r2,124(sp)
10101864:	010001c4 	movi	r4,7
10101868:	20be2d0e 	bge	r4,r2,10101120 <__alt_data_end+0xfffe1120>
1010186c:	d9002c17 	ldw	r4,176(sp)
10101870:	d9801e04 	addi	r6,sp,120
10101874:	b80b883a 	mov	r5,r23
10101878:	01072680 	call	10107268 <__sprint_r>
1010187c:	103cb61e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10101880:	d8c02017 	ldw	r3,128(sp)
10101884:	da000404 	addi	r8,sp,16
10101888:	003e2606 	br	10101124 <__alt_data_end+0xfffe1124>
1010188c:	d9002c17 	ldw	r4,176(sp)
10101890:	d9801e04 	addi	r6,sp,120
10101894:	b80b883a 	mov	r5,r23
10101898:	01072680 	call	10107268 <__sprint_r>
1010189c:	103e5d26 	beq	r2,zero,10101214 <__alt_data_end+0xfffe1214>
101018a0:	003cad06 	br	10100b58 <__alt_data_end+0xfffe0b58>
101018a4:	d9002c17 	ldw	r4,176(sp)
101018a8:	d9801e04 	addi	r6,sp,120
101018ac:	b80b883a 	mov	r5,r23
101018b0:	01072680 	call	10107268 <__sprint_r>
101018b4:	103ca81e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
101018b8:	d8c02017 	ldw	r3,128(sp)
101018bc:	da000404 	addi	r8,sp,16
101018c0:	003e0b06 	br	101010f0 <__alt_data_end+0xfffe10f0>
101018c4:	d9002c17 	ldw	r4,176(sp)
101018c8:	d9801e04 	addi	r6,sp,120
101018cc:	b80b883a 	mov	r5,r23
101018d0:	01072680 	call	10107268 <__sprint_r>
101018d4:	103ca01e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
101018d8:	d8c02017 	ldw	r3,128(sp)
101018dc:	da000404 	addi	r8,sp,16
101018e0:	003dbd06 	br	10100fd8 <__alt_data_end+0xfffe0fd8>
101018e4:	d9002c17 	ldw	r4,176(sp)
101018e8:	d9801e04 	addi	r6,sp,120
101018ec:	b80b883a 	mov	r5,r23
101018f0:	01072680 	call	10107268 <__sprint_r>
101018f4:	103c981e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
101018f8:	d8c02017 	ldw	r3,128(sp)
101018fc:	da000404 	addi	r8,sp,16
10101900:	003dc306 	br	10101010 <__alt_data_end+0xfffe1010>
10101904:	d8802917 	ldw	r2,164(sp)
10101908:	d8002785 	stb	zero,158(sp)
1010190c:	103f0616 	blt	r2,zero,10101528 <__alt_data_end+0xfffe1528>
10101910:	00ffdfc4 	movi	r3,-129
10101914:	9d84b03a 	or	r2,r19,r22
10101918:	90e4703a 	and	r18,r18,r3
1010191c:	103c6b26 	beq	r2,zero,10100acc <__alt_data_end+0xfffe0acc>
10101920:	0039883a 	mov	fp,zero
10101924:	003e7406 	br	101012f8 <__alt_data_end+0xfffe12f8>
10101928:	9080040c 	andi	r2,r18,16
1010192c:	1001b326 	beq	r2,zero,10101ffc <___vfprintf_internal_r+0x18ac>
10101930:	d9002d17 	ldw	r4,180(sp)
10101934:	d9402917 	ldw	r5,164(sp)
10101938:	d8002785 	stb	zero,158(sp)
1010193c:	20800104 	addi	r2,r4,4
10101940:	24c00017 	ldw	r19,0(r4)
10101944:	002d883a 	mov	r22,zero
10101948:	2801b516 	blt	r5,zero,10102020 <___vfprintf_internal_r+0x18d0>
1010194c:	00ffdfc4 	movi	r3,-129
10101950:	d8802d15 	stw	r2,180(sp)
10101954:	90e4703a 	and	r18,r18,r3
10101958:	983d2726 	beq	r19,zero,10100df8 <__alt_data_end+0xfffe0df8>
1010195c:	0039883a 	mov	fp,zero
10101960:	003d2a06 	br	10100e0c <__alt_data_end+0xfffe0e0c>
10101964:	dc402617 	ldw	r17,152(sp)
10101968:	0441d30e 	bge	zero,r17,101020b8 <___vfprintf_internal_r+0x1968>
1010196c:	dc403217 	ldw	r17,200(sp)
10101970:	d8803317 	ldw	r2,204(sp)
10101974:	1440010e 	bge	r2,r17,1010197c <___vfprintf_internal_r+0x122c>
10101978:	1023883a 	mov	r17,r2
1010197c:	04400a0e 	bge	zero,r17,101019a8 <___vfprintf_internal_r+0x1258>
10101980:	d8801f17 	ldw	r2,124(sp)
10101984:	1c47883a 	add	r3,r3,r17
10101988:	44000015 	stw	r16,0(r8)
1010198c:	10800044 	addi	r2,r2,1
10101990:	44400115 	stw	r17,4(r8)
10101994:	d8c02015 	stw	r3,128(sp)
10101998:	d8801f15 	stw	r2,124(sp)
1010199c:	010001c4 	movi	r4,7
101019a0:	20826516 	blt	r4,r2,10102338 <___vfprintf_internal_r+0x1be8>
101019a4:	42000204 	addi	r8,r8,8
101019a8:	88026116 	blt	r17,zero,10102330 <___vfprintf_internal_r+0x1be0>
101019ac:	d9003217 	ldw	r4,200(sp)
101019b0:	2463c83a 	sub	r17,r4,r17
101019b4:	04407b0e 	bge	zero,r17,10101ba4 <___vfprintf_internal_r+0x1454>
101019b8:	05800404 	movi	r22,16
101019bc:	d8801f17 	ldw	r2,124(sp)
101019c0:	b4419d0e 	bge	r22,r17,10102038 <___vfprintf_internal_r+0x18e8>
101019c4:	01040474 	movhi	r4,4113
101019c8:	213dd084 	addi	r4,r4,-2238
101019cc:	d9002b15 	stw	r4,172(sp)
101019d0:	070001c4 	movi	fp,7
101019d4:	dcc02c17 	ldw	r19,176(sp)
101019d8:	00000306 	br	101019e8 <___vfprintf_internal_r+0x1298>
101019dc:	42000204 	addi	r8,r8,8
101019e0:	8c7ffc04 	addi	r17,r17,-16
101019e4:	b441970e 	bge	r22,r17,10102044 <___vfprintf_internal_r+0x18f4>
101019e8:	18c00404 	addi	r3,r3,16
101019ec:	10800044 	addi	r2,r2,1
101019f0:	45000015 	stw	r20,0(r8)
101019f4:	45800115 	stw	r22,4(r8)
101019f8:	d8c02015 	stw	r3,128(sp)
101019fc:	d8801f15 	stw	r2,124(sp)
10101a00:	e0bff60e 	bge	fp,r2,101019dc <__alt_data_end+0xfffe19dc>
10101a04:	d9801e04 	addi	r6,sp,120
10101a08:	b80b883a 	mov	r5,r23
10101a0c:	9809883a 	mov	r4,r19
10101a10:	01072680 	call	10107268 <__sprint_r>
10101a14:	103c501e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10101a18:	d8c02017 	ldw	r3,128(sp)
10101a1c:	d8801f17 	ldw	r2,124(sp)
10101a20:	da000404 	addi	r8,sp,16
10101a24:	003fee06 	br	101019e0 <__alt_data_end+0xfffe19e0>
10101a28:	d9002c17 	ldw	r4,176(sp)
10101a2c:	d9801e04 	addi	r6,sp,120
10101a30:	b80b883a 	mov	r5,r23
10101a34:	01072680 	call	10107268 <__sprint_r>
10101a38:	103c471e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10101a3c:	d8c02017 	ldw	r3,128(sp)
10101a40:	df002787 	ldb	fp,158(sp)
10101a44:	da000404 	addi	r8,sp,16
10101a48:	003d5606 	br	10100fa4 <__alt_data_end+0xfffe0fa4>
10101a4c:	9080040c 	andi	r2,r18,16
10101a50:	10016126 	beq	r2,zero,10101fd8 <___vfprintf_internal_r+0x1888>
10101a54:	d8802d17 	ldw	r2,180(sp)
10101a58:	14c00017 	ldw	r19,0(r2)
10101a5c:	10800104 	addi	r2,r2,4
10101a60:	d8802d15 	stw	r2,180(sp)
10101a64:	982dd7fa 	srai	r22,r19,31
10101a68:	b005883a 	mov	r2,r22
10101a6c:	003c8206 	br	10100c78 <__alt_data_end+0xfffe0c78>
10101a70:	9080040c 	andi	r2,r18,16
10101a74:	10003526 	beq	r2,zero,10101b4c <___vfprintf_internal_r+0x13fc>
10101a78:	d9402d17 	ldw	r5,180(sp)
10101a7c:	d8c02917 	ldw	r3,164(sp)
10101a80:	d8002785 	stb	zero,158(sp)
10101a84:	28800104 	addi	r2,r5,4
10101a88:	2cc00017 	ldw	r19,0(r5)
10101a8c:	002d883a 	mov	r22,zero
10101a90:	18003716 	blt	r3,zero,10101b70 <___vfprintf_internal_r+0x1420>
10101a94:	00ffdfc4 	movi	r3,-129
10101a98:	d8802d15 	stw	r2,180(sp)
10101a9c:	90e4703a 	and	r18,r18,r3
10101aa0:	0039883a 	mov	fp,zero
10101aa4:	983df326 	beq	r19,zero,10101274 <__alt_data_end+0xfffe1274>
10101aa8:	00800244 	movi	r2,9
10101aac:	14fc7b36 	bltu	r2,r19,10100c9c <__alt_data_end+0xfffe0c9c>
10101ab0:	d8c02817 	ldw	r3,160(sp)
10101ab4:	dc001dc4 	addi	r16,sp,119
10101ab8:	9cc00c04 	addi	r19,r19,48
10101abc:	1c07c83a 	sub	r3,r3,r16
10101ac0:	dcc01dc5 	stb	r19,119(sp)
10101ac4:	d8c02e15 	stw	r3,184(sp)
10101ac8:	003ce806 	br	10100e6c <__alt_data_end+0xfffe0e6c>
10101acc:	d8803317 	ldw	r2,204(sp)
10101ad0:	143fffc4 	addi	r16,r2,-1
10101ad4:	043f4d0e 	bge	zero,r16,1010180c <__alt_data_end+0xfffe180c>
10101ad8:	07000404 	movi	fp,16
10101adc:	e400810e 	bge	fp,r16,10101ce4 <___vfprintf_internal_r+0x1594>
10101ae0:	01440474 	movhi	r5,4113
10101ae4:	297dd084 	addi	r5,r5,-2238
10101ae8:	d9402b15 	stw	r5,172(sp)
10101aec:	01c001c4 	movi	r7,7
10101af0:	dcc02c17 	ldw	r19,176(sp)
10101af4:	00000306 	br	10101b04 <___vfprintf_internal_r+0x13b4>
10101af8:	b5800204 	addi	r22,r22,8
10101afc:	843ffc04 	addi	r16,r16,-16
10101b00:	e4007b0e 	bge	fp,r16,10101cf0 <___vfprintf_internal_r+0x15a0>
10101b04:	18c00404 	addi	r3,r3,16
10101b08:	8c400044 	addi	r17,r17,1
10101b0c:	b5000015 	stw	r20,0(r22)
10101b10:	b7000115 	stw	fp,4(r22)
10101b14:	d8c02015 	stw	r3,128(sp)
10101b18:	dc401f15 	stw	r17,124(sp)
10101b1c:	3c7ff60e 	bge	r7,r17,10101af8 <__alt_data_end+0xfffe1af8>
10101b20:	d9801e04 	addi	r6,sp,120
10101b24:	b80b883a 	mov	r5,r23
10101b28:	9809883a 	mov	r4,r19
10101b2c:	d9c03c15 	stw	r7,240(sp)
10101b30:	01072680 	call	10107268 <__sprint_r>
10101b34:	d9c03c17 	ldw	r7,240(sp)
10101b38:	103c071e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10101b3c:	d8c02017 	ldw	r3,128(sp)
10101b40:	dc401f17 	ldw	r17,124(sp)
10101b44:	dd800404 	addi	r22,sp,16
10101b48:	003fec06 	br	10101afc <__alt_data_end+0xfffe1afc>
10101b4c:	9080100c 	andi	r2,r18,64
10101b50:	d8002785 	stb	zero,158(sp)
10101b54:	10010e26 	beq	r2,zero,10101f90 <___vfprintf_internal_r+0x1840>
10101b58:	d9002d17 	ldw	r4,180(sp)
10101b5c:	d9402917 	ldw	r5,164(sp)
10101b60:	002d883a 	mov	r22,zero
10101b64:	20800104 	addi	r2,r4,4
10101b68:	24c0000b 	ldhu	r19,0(r4)
10101b6c:	283fc90e 	bge	r5,zero,10101a94 <__alt_data_end+0xfffe1a94>
10101b70:	d8802d15 	stw	r2,180(sp)
10101b74:	0039883a 	mov	fp,zero
10101b78:	9d84b03a 	or	r2,r19,r22
10101b7c:	103c461e 	bne	r2,zero,10100c98 <__alt_data_end+0xfffe0c98>
10101b80:	00800044 	movi	r2,1
10101b84:	003e6c06 	br	10101538 <__alt_data_end+0xfffe1538>
10101b88:	d9002c17 	ldw	r4,176(sp)
10101b8c:	d9801e04 	addi	r6,sp,120
10101b90:	b80b883a 	mov	r5,r23
10101b94:	01072680 	call	10107268 <__sprint_r>
10101b98:	103bef1e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10101b9c:	d8c02017 	ldw	r3,128(sp)
10101ba0:	da000404 	addi	r8,sp,16
10101ba4:	d9003217 	ldw	r4,200(sp)
10101ba8:	d8802617 	ldw	r2,152(sp)
10101bac:	d9403317 	ldw	r5,204(sp)
10101bb0:	8123883a 	add	r17,r16,r4
10101bb4:	11400216 	blt	r2,r5,10101bc0 <___vfprintf_internal_r+0x1470>
10101bb8:	9100004c 	andi	r4,r18,1
10101bbc:	20000d26 	beq	r4,zero,10101bf4 <___vfprintf_internal_r+0x14a4>
10101bc0:	d9003717 	ldw	r4,220(sp)
10101bc4:	d9403417 	ldw	r5,208(sp)
10101bc8:	1907883a 	add	r3,r3,r4
10101bcc:	d9001f17 	ldw	r4,124(sp)
10101bd0:	41400015 	stw	r5,0(r8)
10101bd4:	d9403717 	ldw	r5,220(sp)
10101bd8:	21000044 	addi	r4,r4,1
10101bdc:	d8c02015 	stw	r3,128(sp)
10101be0:	41400115 	stw	r5,4(r8)
10101be4:	d9001f15 	stw	r4,124(sp)
10101be8:	014001c4 	movi	r5,7
10101bec:	2901e816 	blt	r5,r4,10102390 <___vfprintf_internal_r+0x1c40>
10101bf0:	42000204 	addi	r8,r8,8
10101bf4:	d9003317 	ldw	r4,204(sp)
10101bf8:	8121883a 	add	r16,r16,r4
10101bfc:	2085c83a 	sub	r2,r4,r2
10101c00:	8461c83a 	sub	r16,r16,r17
10101c04:	1400010e 	bge	r2,r16,10101c0c <___vfprintf_internal_r+0x14bc>
10101c08:	1021883a 	mov	r16,r2
10101c0c:	04000a0e 	bge	zero,r16,10101c38 <___vfprintf_internal_r+0x14e8>
10101c10:	d9001f17 	ldw	r4,124(sp)
10101c14:	1c07883a 	add	r3,r3,r16
10101c18:	44400015 	stw	r17,0(r8)
10101c1c:	21000044 	addi	r4,r4,1
10101c20:	44000115 	stw	r16,4(r8)
10101c24:	d8c02015 	stw	r3,128(sp)
10101c28:	d9001f15 	stw	r4,124(sp)
10101c2c:	014001c4 	movi	r5,7
10101c30:	2901fb16 	blt	r5,r4,10102420 <___vfprintf_internal_r+0x1cd0>
10101c34:	42000204 	addi	r8,r8,8
10101c38:	8001f716 	blt	r16,zero,10102418 <___vfprintf_internal_r+0x1cc8>
10101c3c:	1421c83a 	sub	r16,r2,r16
10101c40:	043d380e 	bge	zero,r16,10101124 <__alt_data_end+0xfffe1124>
10101c44:	04400404 	movi	r17,16
10101c48:	d8801f17 	ldw	r2,124(sp)
10101c4c:	8c3efb0e 	bge	r17,r16,1010183c <__alt_data_end+0xfffe183c>
10101c50:	01440474 	movhi	r5,4113
10101c54:	297dd084 	addi	r5,r5,-2238
10101c58:	d9402b15 	stw	r5,172(sp)
10101c5c:	058001c4 	movi	r22,7
10101c60:	dcc02c17 	ldw	r19,176(sp)
10101c64:	00000306 	br	10101c74 <___vfprintf_internal_r+0x1524>
10101c68:	42000204 	addi	r8,r8,8
10101c6c:	843ffc04 	addi	r16,r16,-16
10101c70:	8c3ef50e 	bge	r17,r16,10101848 <__alt_data_end+0xfffe1848>
10101c74:	18c00404 	addi	r3,r3,16
10101c78:	10800044 	addi	r2,r2,1
10101c7c:	45000015 	stw	r20,0(r8)
10101c80:	44400115 	stw	r17,4(r8)
10101c84:	d8c02015 	stw	r3,128(sp)
10101c88:	d8801f15 	stw	r2,124(sp)
10101c8c:	b0bff60e 	bge	r22,r2,10101c68 <__alt_data_end+0xfffe1c68>
10101c90:	d9801e04 	addi	r6,sp,120
10101c94:	b80b883a 	mov	r5,r23
10101c98:	9809883a 	mov	r4,r19
10101c9c:	01072680 	call	10107268 <__sprint_r>
10101ca0:	103bad1e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10101ca4:	d8c02017 	ldw	r3,128(sp)
10101ca8:	d8801f17 	ldw	r2,124(sp)
10101cac:	da000404 	addi	r8,sp,16
10101cb0:	003fee06 	br	10101c6c <__alt_data_end+0xfffe1c6c>
10101cb4:	9088703a 	and	r4,r18,r2
10101cb8:	203eab1e 	bne	r4,zero,10101768 <__alt_data_end+0xfffe1768>
10101cbc:	dc401f17 	ldw	r17,124(sp)
10101cc0:	40800115 	stw	r2,4(r8)
10101cc4:	44000015 	stw	r16,0(r8)
10101cc8:	8c400044 	addi	r17,r17,1
10101ccc:	d8c02015 	stw	r3,128(sp)
10101cd0:	dc401f15 	stw	r17,124(sp)
10101cd4:	008001c4 	movi	r2,7
10101cd8:	14400e16 	blt	r2,r17,10101d14 <___vfprintf_internal_r+0x15c4>
10101cdc:	45800204 	addi	r22,r8,8
10101ce0:	003eca06 	br	1010180c <__alt_data_end+0xfffe180c>
10101ce4:	01040474 	movhi	r4,4113
10101ce8:	213dd084 	addi	r4,r4,-2238
10101cec:	d9002b15 	stw	r4,172(sp)
10101cf0:	d8802b17 	ldw	r2,172(sp)
10101cf4:	1c07883a 	add	r3,r3,r16
10101cf8:	8c400044 	addi	r17,r17,1
10101cfc:	b0800015 	stw	r2,0(r22)
10101d00:	b4000115 	stw	r16,4(r22)
10101d04:	d8c02015 	stw	r3,128(sp)
10101d08:	dc401f15 	stw	r17,124(sp)
10101d0c:	008001c4 	movi	r2,7
10101d10:	147ebd0e 	bge	r2,r17,10101808 <__alt_data_end+0xfffe1808>
10101d14:	d9002c17 	ldw	r4,176(sp)
10101d18:	d9801e04 	addi	r6,sp,120
10101d1c:	b80b883a 	mov	r5,r23
10101d20:	01072680 	call	10107268 <__sprint_r>
10101d24:	103b8c1e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10101d28:	d8c02017 	ldw	r3,128(sp)
10101d2c:	dc401f17 	ldw	r17,124(sp)
10101d30:	dd800404 	addi	r22,sp,16
10101d34:	003eb506 	br	1010180c <__alt_data_end+0xfffe180c>
10101d38:	d9002c17 	ldw	r4,176(sp)
10101d3c:	d9801e04 	addi	r6,sp,120
10101d40:	b80b883a 	mov	r5,r23
10101d44:	01072680 	call	10107268 <__sprint_r>
10101d48:	103b831e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10101d4c:	d8c02017 	ldw	r3,128(sp)
10101d50:	dc401f17 	ldw	r17,124(sp)
10101d54:	da000404 	addi	r8,sp,16
10101d58:	003e8d06 	br	10101790 <__alt_data_end+0xfffe1790>
10101d5c:	d9002c17 	ldw	r4,176(sp)
10101d60:	d9801e04 	addi	r6,sp,120
10101d64:	b80b883a 	mov	r5,r23
10101d68:	01072680 	call	10107268 <__sprint_r>
10101d6c:	103b7a1e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10101d70:	d8c02017 	ldw	r3,128(sp)
10101d74:	dc401f17 	ldw	r17,124(sp)
10101d78:	dd800404 	addi	r22,sp,16
10101d7c:	003e8f06 	br	101017bc <__alt_data_end+0xfffe17bc>
10101d80:	0027883a 	mov	r19,zero
10101d84:	003f4a06 	br	10101ab0 <__alt_data_end+0xfffe1ab0>
10101d88:	d9002c17 	ldw	r4,176(sp)
10101d8c:	d9801e04 	addi	r6,sp,120
10101d90:	b80b883a 	mov	r5,r23
10101d94:	01072680 	call	10107268 <__sprint_r>
10101d98:	103b6f1e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10101d9c:	d8c02017 	ldw	r3,128(sp)
10101da0:	da000404 	addi	r8,sp,16
10101da4:	003c9d06 	br	1010101c <__alt_data_end+0xfffe101c>
10101da8:	04e7c83a 	sub	r19,zero,r19
10101dac:	9804c03a 	cmpne	r2,r19,zero
10101db0:	05adc83a 	sub	r22,zero,r22
10101db4:	b0adc83a 	sub	r22,r22,r2
10101db8:	d8802917 	ldw	r2,164(sp)
10101dbc:	07000b44 	movi	fp,45
10101dc0:	df002785 	stb	fp,158(sp)
10101dc4:	10017b16 	blt	r2,zero,101023b4 <___vfprintf_internal_r+0x1c64>
10101dc8:	00bfdfc4 	movi	r2,-129
10101dcc:	90a4703a 	and	r18,r18,r2
10101dd0:	003bb106 	br	10100c98 <__alt_data_end+0xfffe0c98>
10101dd4:	d9003617 	ldw	r4,216(sp)
10101dd8:	d9403817 	ldw	r5,224(sp)
10101ddc:	da003d15 	stw	r8,244(sp)
10101de0:	0106df40 	call	10106df4 <__fpclassifyd>
10101de4:	da003d17 	ldw	r8,244(sp)
10101de8:	1000f026 	beq	r2,zero,101021ac <___vfprintf_internal_r+0x1a5c>
10101dec:	d9002917 	ldw	r4,164(sp)
10101df0:	05bff7c4 	movi	r22,-33
10101df4:	00bfffc4 	movi	r2,-1
10101df8:	8dac703a 	and	r22,r17,r22
10101dfc:	20820026 	beq	r4,r2,10102600 <___vfprintf_internal_r+0x1eb0>
10101e00:	008011c4 	movi	r2,71
10101e04:	b081f726 	beq	r22,r2,101025e4 <___vfprintf_internal_r+0x1e94>
10101e08:	d9003817 	ldw	r4,224(sp)
10101e0c:	90c04014 	ori	r3,r18,256
10101e10:	d8c02b15 	stw	r3,172(sp)
10101e14:	20021516 	blt	r4,zero,1010266c <___vfprintf_internal_r+0x1f1c>
10101e18:	dcc03817 	ldw	r19,224(sp)
10101e1c:	d8002a05 	stb	zero,168(sp)
10101e20:	00801984 	movi	r2,102
10101e24:	8881f926 	beq	r17,r2,1010260c <___vfprintf_internal_r+0x1ebc>
10101e28:	00801184 	movi	r2,70
10101e2c:	88821c26 	beq	r17,r2,101026a0 <___vfprintf_internal_r+0x1f50>
10101e30:	00801144 	movi	r2,69
10101e34:	b081ef26 	beq	r22,r2,101025f4 <___vfprintf_internal_r+0x1ea4>
10101e38:	d8c02917 	ldw	r3,164(sp)
10101e3c:	d8802104 	addi	r2,sp,132
10101e40:	d8800315 	stw	r2,12(sp)
10101e44:	d9403617 	ldw	r5,216(sp)
10101e48:	d8802504 	addi	r2,sp,148
10101e4c:	d9002c17 	ldw	r4,176(sp)
10101e50:	d8800215 	stw	r2,8(sp)
10101e54:	d8802604 	addi	r2,sp,152
10101e58:	d8c00015 	stw	r3,0(sp)
10101e5c:	d8800115 	stw	r2,4(sp)
10101e60:	01c00084 	movi	r7,2
10101e64:	980d883a 	mov	r6,r19
10101e68:	d8c03c15 	stw	r3,240(sp)
10101e6c:	da003d15 	stw	r8,244(sp)
10101e70:	0102d740 	call	10102d74 <_dtoa_r>
10101e74:	1021883a 	mov	r16,r2
10101e78:	008019c4 	movi	r2,103
10101e7c:	d8c03c17 	ldw	r3,240(sp)
10101e80:	da003d17 	ldw	r8,244(sp)
10101e84:	88817126 	beq	r17,r2,1010244c <___vfprintf_internal_r+0x1cfc>
10101e88:	008011c4 	movi	r2,71
10101e8c:	88829226 	beq	r17,r2,101028d8 <___vfprintf_internal_r+0x2188>
10101e90:	80f9883a 	add	fp,r16,r3
10101e94:	d9003617 	ldw	r4,216(sp)
10101e98:	000d883a 	mov	r6,zero
10101e9c:	000f883a 	mov	r7,zero
10101ea0:	980b883a 	mov	r5,r19
10101ea4:	da003d15 	stw	r8,244(sp)
10101ea8:	010ba5c0 	call	1010ba5c <__eqdf2>
10101eac:	da003d17 	ldw	r8,244(sp)
10101eb0:	10018d26 	beq	r2,zero,101024e8 <___vfprintf_internal_r+0x1d98>
10101eb4:	d8802117 	ldw	r2,132(sp)
10101eb8:	1700062e 	bgeu	r2,fp,10101ed4 <___vfprintf_internal_r+0x1784>
10101ebc:	01000c04 	movi	r4,48
10101ec0:	10c00044 	addi	r3,r2,1
10101ec4:	d8c02115 	stw	r3,132(sp)
10101ec8:	11000005 	stb	r4,0(r2)
10101ecc:	d8802117 	ldw	r2,132(sp)
10101ed0:	173ffb36 	bltu	r2,fp,10101ec0 <__alt_data_end+0xfffe1ec0>
10101ed4:	1405c83a 	sub	r2,r2,r16
10101ed8:	d8803315 	stw	r2,204(sp)
10101edc:	008011c4 	movi	r2,71
10101ee0:	b0817626 	beq	r22,r2,101024bc <___vfprintf_internal_r+0x1d6c>
10101ee4:	00801944 	movi	r2,101
10101ee8:	1442810e 	bge	r2,r17,101028f0 <___vfprintf_internal_r+0x21a0>
10101eec:	d8c02617 	ldw	r3,152(sp)
10101ef0:	00801984 	movi	r2,102
10101ef4:	d8c03215 	stw	r3,200(sp)
10101ef8:	8881fe26 	beq	r17,r2,101026f4 <___vfprintf_internal_r+0x1fa4>
10101efc:	d8c03217 	ldw	r3,200(sp)
10101f00:	d9003317 	ldw	r4,204(sp)
10101f04:	1901dd16 	blt	r3,r4,1010267c <___vfprintf_internal_r+0x1f2c>
10101f08:	9480004c 	andi	r18,r18,1
10101f0c:	90022b1e 	bne	r18,zero,101027bc <___vfprintf_internal_r+0x206c>
10101f10:	1805883a 	mov	r2,r3
10101f14:	18028016 	blt	r3,zero,10102918 <___vfprintf_internal_r+0x21c8>
10101f18:	d8c03217 	ldw	r3,200(sp)
10101f1c:	044019c4 	movi	r17,103
10101f20:	d8c02e15 	stw	r3,184(sp)
10101f24:	df002a07 	ldb	fp,168(sp)
10101f28:	e001531e 	bne	fp,zero,10102478 <___vfprintf_internal_r+0x1d28>
10101f2c:	df002783 	ldbu	fp,158(sp)
10101f30:	d8802a15 	stw	r2,168(sp)
10101f34:	dc802b17 	ldw	r18,172(sp)
10101f38:	d8002915 	stw	zero,164(sp)
10101f3c:	003bd106 	br	10100e84 <__alt_data_end+0xfffe0e84>
10101f40:	d8802d17 	ldw	r2,180(sp)
10101f44:	d8c02d17 	ldw	r3,180(sp)
10101f48:	d9002d17 	ldw	r4,180(sp)
10101f4c:	10800017 	ldw	r2,0(r2)
10101f50:	18c00117 	ldw	r3,4(r3)
10101f54:	21000204 	addi	r4,r4,8
10101f58:	d8803615 	stw	r2,216(sp)
10101f5c:	d8c03815 	stw	r3,224(sp)
10101f60:	d9002d15 	stw	r4,180(sp)
10101f64:	003b7506 	br	10100d3c <__alt_data_end+0xfffe0d3c>
10101f68:	ac400007 	ldb	r17,0(r21)
10101f6c:	003a5906 	br	101008d4 <__alt_data_end+0xfffe08d4>
10101f70:	9080100c 	andi	r2,r18,64
10101f74:	1000a826 	beq	r2,zero,10102218 <___vfprintf_internal_r+0x1ac8>
10101f78:	d9002d17 	ldw	r4,180(sp)
10101f7c:	002d883a 	mov	r22,zero
10101f80:	24c0000b 	ldhu	r19,0(r4)
10101f84:	21000104 	addi	r4,r4,4
10101f88:	d9002d15 	stw	r4,180(sp)
10101f8c:	003ccb06 	br	101012bc <__alt_data_end+0xfffe12bc>
10101f90:	d8c02d17 	ldw	r3,180(sp)
10101f94:	d9002917 	ldw	r4,164(sp)
10101f98:	002d883a 	mov	r22,zero
10101f9c:	18800104 	addi	r2,r3,4
10101fa0:	1cc00017 	ldw	r19,0(r3)
10101fa4:	203ebb0e 	bge	r4,zero,10101a94 <__alt_data_end+0xfffe1a94>
10101fa8:	003ef106 	br	10101b70 <__alt_data_end+0xfffe1b70>
10101fac:	9080040c 	andi	r2,r18,16
10101fb0:	1000921e 	bne	r2,zero,101021fc <___vfprintf_internal_r+0x1aac>
10101fb4:	9480100c 	andi	r18,r18,64
10101fb8:	90013926 	beq	r18,zero,101024a0 <___vfprintf_internal_r+0x1d50>
10101fbc:	d9002d17 	ldw	r4,180(sp)
10101fc0:	d9402f17 	ldw	r5,188(sp)
10101fc4:	20800017 	ldw	r2,0(r4)
10101fc8:	21000104 	addi	r4,r4,4
10101fcc:	d9002d15 	stw	r4,180(sp)
10101fd0:	1140000d 	sth	r5,0(r2)
10101fd4:	003a1606 	br	10100830 <__alt_data_end+0xfffe0830>
10101fd8:	9080100c 	andi	r2,r18,64
10101fdc:	10008026 	beq	r2,zero,101021e0 <___vfprintf_internal_r+0x1a90>
10101fe0:	d8c02d17 	ldw	r3,180(sp)
10101fe4:	1cc0000f 	ldh	r19,0(r3)
10101fe8:	18c00104 	addi	r3,r3,4
10101fec:	d8c02d15 	stw	r3,180(sp)
10101ff0:	982dd7fa 	srai	r22,r19,31
10101ff4:	b005883a 	mov	r2,r22
10101ff8:	003b1f06 	br	10100c78 <__alt_data_end+0xfffe0c78>
10101ffc:	9080100c 	andi	r2,r18,64
10102000:	d8002785 	stb	zero,158(sp)
10102004:	10008a1e 	bne	r2,zero,10102230 <___vfprintf_internal_r+0x1ae0>
10102008:	d9402d17 	ldw	r5,180(sp)
1010200c:	d8c02917 	ldw	r3,164(sp)
10102010:	002d883a 	mov	r22,zero
10102014:	28800104 	addi	r2,r5,4
10102018:	2cc00017 	ldw	r19,0(r5)
1010201c:	183e4b0e 	bge	r3,zero,1010194c <__alt_data_end+0xfffe194c>
10102020:	9d86b03a 	or	r3,r19,r22
10102024:	d8802d15 	stw	r2,180(sp)
10102028:	183e4c1e 	bne	r3,zero,1010195c <__alt_data_end+0xfffe195c>
1010202c:	0039883a 	mov	fp,zero
10102030:	0005883a 	mov	r2,zero
10102034:	003d4006 	br	10101538 <__alt_data_end+0xfffe1538>
10102038:	01440474 	movhi	r5,4113
1010203c:	297dd084 	addi	r5,r5,-2238
10102040:	d9402b15 	stw	r5,172(sp)
10102044:	d9402b17 	ldw	r5,172(sp)
10102048:	1c47883a 	add	r3,r3,r17
1010204c:	10800044 	addi	r2,r2,1
10102050:	41400015 	stw	r5,0(r8)
10102054:	44400115 	stw	r17,4(r8)
10102058:	d8c02015 	stw	r3,128(sp)
1010205c:	d8801f15 	stw	r2,124(sp)
10102060:	010001c4 	movi	r4,7
10102064:	20bec816 	blt	r4,r2,10101b88 <__alt_data_end+0xfffe1b88>
10102068:	42000204 	addi	r8,r8,8
1010206c:	003ecd06 	br	10101ba4 <__alt_data_end+0xfffe1ba4>
10102070:	d9002917 	ldw	r4,164(sp)
10102074:	d8002785 	stb	zero,158(sp)
10102078:	203d2d16 	blt	r4,zero,10101530 <__alt_data_end+0xfffe1530>
1010207c:	00bfdfc4 	movi	r2,-129
10102080:	90a4703a 	and	r18,r18,r2
10102084:	003a9106 	br	10100acc <__alt_data_end+0xfffe0acc>
10102088:	01040474 	movhi	r4,4113
1010208c:	213dd084 	addi	r4,r4,-2238
10102090:	d9002b15 	stw	r4,172(sp)
10102094:	003c0c06 	br	101010c8 <__alt_data_end+0xfffe10c8>
10102098:	d9002c17 	ldw	r4,176(sp)
1010209c:	d9801e04 	addi	r6,sp,120
101020a0:	b80b883a 	mov	r5,r23
101020a4:	01072680 	call	10107268 <__sprint_r>
101020a8:	103aab1e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
101020ac:	d8c02017 	ldw	r3,128(sp)
101020b0:	da000404 	addi	r8,sp,16
101020b4:	003d4106 	br	101015bc <__alt_data_end+0xfffe15bc>
101020b8:	d8801f17 	ldw	r2,124(sp)
101020bc:	01440474 	movhi	r5,4113
101020c0:	01000044 	movi	r4,1
101020c4:	18c00044 	addi	r3,r3,1
101020c8:	10800044 	addi	r2,r2,1
101020cc:	297dd004 	addi	r5,r5,-2240
101020d0:	41000115 	stw	r4,4(r8)
101020d4:	41400015 	stw	r5,0(r8)
101020d8:	d8c02015 	stw	r3,128(sp)
101020dc:	d8801f15 	stw	r2,124(sp)
101020e0:	010001c4 	movi	r4,7
101020e4:	20805c16 	blt	r4,r2,10102258 <___vfprintf_internal_r+0x1b08>
101020e8:	42000204 	addi	r8,r8,8
101020ec:	8800041e 	bne	r17,zero,10102100 <___vfprintf_internal_r+0x19b0>
101020f0:	d8803317 	ldw	r2,204(sp)
101020f4:	1000021e 	bne	r2,zero,10102100 <___vfprintf_internal_r+0x19b0>
101020f8:	9080004c 	andi	r2,r18,1
101020fc:	103c0926 	beq	r2,zero,10101124 <__alt_data_end+0xfffe1124>
10102100:	d9003717 	ldw	r4,220(sp)
10102104:	d8801f17 	ldw	r2,124(sp)
10102108:	d9403417 	ldw	r5,208(sp)
1010210c:	20c7883a 	add	r3,r4,r3
10102110:	10800044 	addi	r2,r2,1
10102114:	41000115 	stw	r4,4(r8)
10102118:	41400015 	stw	r5,0(r8)
1010211c:	d8c02015 	stw	r3,128(sp)
10102120:	d8801f15 	stw	r2,124(sp)
10102124:	010001c4 	movi	r4,7
10102128:	20812116 	blt	r4,r2,101025b0 <___vfprintf_internal_r+0x1e60>
1010212c:	42000204 	addi	r8,r8,8
10102130:	0463c83a 	sub	r17,zero,r17
10102134:	0440730e 	bge	zero,r17,10102304 <___vfprintf_internal_r+0x1bb4>
10102138:	05800404 	movi	r22,16
1010213c:	b440860e 	bge	r22,r17,10102358 <___vfprintf_internal_r+0x1c08>
10102140:	01440474 	movhi	r5,4113
10102144:	297dd084 	addi	r5,r5,-2238
10102148:	d9402b15 	stw	r5,172(sp)
1010214c:	070001c4 	movi	fp,7
10102150:	dcc02c17 	ldw	r19,176(sp)
10102154:	00000306 	br	10102164 <___vfprintf_internal_r+0x1a14>
10102158:	42000204 	addi	r8,r8,8
1010215c:	8c7ffc04 	addi	r17,r17,-16
10102160:	b440800e 	bge	r22,r17,10102364 <___vfprintf_internal_r+0x1c14>
10102164:	18c00404 	addi	r3,r3,16
10102168:	10800044 	addi	r2,r2,1
1010216c:	45000015 	stw	r20,0(r8)
10102170:	45800115 	stw	r22,4(r8)
10102174:	d8c02015 	stw	r3,128(sp)
10102178:	d8801f15 	stw	r2,124(sp)
1010217c:	e0bff60e 	bge	fp,r2,10102158 <__alt_data_end+0xfffe2158>
10102180:	d9801e04 	addi	r6,sp,120
10102184:	b80b883a 	mov	r5,r23
10102188:	9809883a 	mov	r4,r19
1010218c:	01072680 	call	10107268 <__sprint_r>
10102190:	103a711e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10102194:	d8c02017 	ldw	r3,128(sp)
10102198:	d8801f17 	ldw	r2,124(sp)
1010219c:	da000404 	addi	r8,sp,16
101021a0:	003fee06 	br	1010215c <__alt_data_end+0xfffe215c>
101021a4:	00bfffc4 	movi	r2,-1
101021a8:	003a6f06 	br	10100b68 <__alt_data_end+0xfffe0b68>
101021ac:	008011c4 	movi	r2,71
101021b0:	1440b816 	blt	r2,r17,10102494 <___vfprintf_internal_r+0x1d44>
101021b4:	04040474 	movhi	r16,4113
101021b8:	843dc204 	addi	r16,r16,-2296
101021bc:	00c000c4 	movi	r3,3
101021c0:	00bfdfc4 	movi	r2,-129
101021c4:	d8c02a15 	stw	r3,168(sp)
101021c8:	90a4703a 	and	r18,r18,r2
101021cc:	df002783 	ldbu	fp,158(sp)
101021d0:	d8c02e15 	stw	r3,184(sp)
101021d4:	d8002915 	stw	zero,164(sp)
101021d8:	d8003215 	stw	zero,200(sp)
101021dc:	003b2906 	br	10100e84 <__alt_data_end+0xfffe0e84>
101021e0:	d9002d17 	ldw	r4,180(sp)
101021e4:	24c00017 	ldw	r19,0(r4)
101021e8:	21000104 	addi	r4,r4,4
101021ec:	d9002d15 	stw	r4,180(sp)
101021f0:	982dd7fa 	srai	r22,r19,31
101021f4:	b005883a 	mov	r2,r22
101021f8:	003a9f06 	br	10100c78 <__alt_data_end+0xfffe0c78>
101021fc:	d9402d17 	ldw	r5,180(sp)
10102200:	d8c02f17 	ldw	r3,188(sp)
10102204:	28800017 	ldw	r2,0(r5)
10102208:	29400104 	addi	r5,r5,4
1010220c:	d9402d15 	stw	r5,180(sp)
10102210:	10c00015 	stw	r3,0(r2)
10102214:	00398606 	br	10100830 <__alt_data_end+0xfffe0830>
10102218:	d9402d17 	ldw	r5,180(sp)
1010221c:	002d883a 	mov	r22,zero
10102220:	2cc00017 	ldw	r19,0(r5)
10102224:	29400104 	addi	r5,r5,4
10102228:	d9402d15 	stw	r5,180(sp)
1010222c:	003c2306 	br	101012bc <__alt_data_end+0xfffe12bc>
10102230:	d8c02d17 	ldw	r3,180(sp)
10102234:	d9002917 	ldw	r4,164(sp)
10102238:	002d883a 	mov	r22,zero
1010223c:	18800104 	addi	r2,r3,4
10102240:	1cc0000b 	ldhu	r19,0(r3)
10102244:	203dc10e 	bge	r4,zero,1010194c <__alt_data_end+0xfffe194c>
10102248:	003f7506 	br	10102020 <__alt_data_end+0xfffe2020>
1010224c:	04040474 	movhi	r16,4113
10102250:	843dc004 	addi	r16,r16,-2304
10102254:	003acc06 	br	10100d88 <__alt_data_end+0xfffe0d88>
10102258:	d9002c17 	ldw	r4,176(sp)
1010225c:	d9801e04 	addi	r6,sp,120
10102260:	b80b883a 	mov	r5,r23
10102264:	01072680 	call	10107268 <__sprint_r>
10102268:	103a3b1e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
1010226c:	dc402617 	ldw	r17,152(sp)
10102270:	d8c02017 	ldw	r3,128(sp)
10102274:	da000404 	addi	r8,sp,16
10102278:	003f9c06 	br	101020ec <__alt_data_end+0xfffe20ec>
1010227c:	ac400043 	ldbu	r17,1(r21)
10102280:	94800814 	ori	r18,r18,32
10102284:	ad400044 	addi	r21,r21,1
10102288:	8c403fcc 	andi	r17,r17,255
1010228c:	8c40201c 	xori	r17,r17,128
10102290:	8c7fe004 	addi	r17,r17,-128
10102294:	00398f06 	br	101008d4 <__alt_data_end+0xfffe08d4>
10102298:	d8c02d15 	stw	r3,180(sp)
1010229c:	0039883a 	mov	fp,zero
101022a0:	003e3506 	br	10101b78 <__alt_data_end+0xfffe1b78>
101022a4:	d9002c17 	ldw	r4,176(sp)
101022a8:	d9801e04 	addi	r6,sp,120
101022ac:	b80b883a 	mov	r5,r23
101022b0:	01072680 	call	10107268 <__sprint_r>
101022b4:	103a281e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
101022b8:	d8c02017 	ldw	r3,128(sp)
101022bc:	da000404 	addi	r8,sp,16
101022c0:	003cd006 	br	10101604 <__alt_data_end+0xfffe1604>
101022c4:	8009883a 	mov	r4,r16
101022c8:	da003d15 	stw	r8,244(sp)
101022cc:	01070d40 	call	101070d4 <strlen>
101022d0:	d8802e15 	stw	r2,184(sp)
101022d4:	da003d17 	ldw	r8,244(sp)
101022d8:	103c340e 	bge	r2,zero,101013ac <__alt_data_end+0xfffe13ac>
101022dc:	0005883a 	mov	r2,zero
101022e0:	003c3206 	br	101013ac <__alt_data_end+0xfffe13ac>
101022e4:	d9002c17 	ldw	r4,176(sp)
101022e8:	d9801e04 	addi	r6,sp,120
101022ec:	b80b883a 	mov	r5,r23
101022f0:	01072680 	call	10107268 <__sprint_r>
101022f4:	103a181e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
101022f8:	d8c02017 	ldw	r3,128(sp)
101022fc:	d8801f17 	ldw	r2,124(sp)
10102300:	da000404 	addi	r8,sp,16
10102304:	d9403317 	ldw	r5,204(sp)
10102308:	10800044 	addi	r2,r2,1
1010230c:	44000015 	stw	r16,0(r8)
10102310:	28c7883a 	add	r3,r5,r3
10102314:	003b7d06 	br	1010110c <__alt_data_end+0xfffe110c>
10102318:	01040474 	movhi	r4,4113
1010231c:	213dd484 	addi	r4,r4,-2222
10102320:	d9003515 	stw	r4,212(sp)
10102324:	003b1406 	br	10100f78 <__alt_data_end+0xfffe0f78>
10102328:	013fffc4 	movi	r4,-1
1010232c:	003a3506 	br	10100c04 <__alt_data_end+0xfffe0c04>
10102330:	0023883a 	mov	r17,zero
10102334:	003d9d06 	br	101019ac <__alt_data_end+0xfffe19ac>
10102338:	d9002c17 	ldw	r4,176(sp)
1010233c:	d9801e04 	addi	r6,sp,120
10102340:	b80b883a 	mov	r5,r23
10102344:	01072680 	call	10107268 <__sprint_r>
10102348:	103a031e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
1010234c:	d8c02017 	ldw	r3,128(sp)
10102350:	da000404 	addi	r8,sp,16
10102354:	003d9406 	br	101019a8 <__alt_data_end+0xfffe19a8>
10102358:	01040474 	movhi	r4,4113
1010235c:	213dd084 	addi	r4,r4,-2238
10102360:	d9002b15 	stw	r4,172(sp)
10102364:	d9002b17 	ldw	r4,172(sp)
10102368:	1c47883a 	add	r3,r3,r17
1010236c:	10800044 	addi	r2,r2,1
10102370:	41000015 	stw	r4,0(r8)
10102374:	44400115 	stw	r17,4(r8)
10102378:	d8c02015 	stw	r3,128(sp)
1010237c:	d8801f15 	stw	r2,124(sp)
10102380:	010001c4 	movi	r4,7
10102384:	20bfd716 	blt	r4,r2,101022e4 <__alt_data_end+0xfffe22e4>
10102388:	42000204 	addi	r8,r8,8
1010238c:	003fdd06 	br	10102304 <__alt_data_end+0xfffe2304>
10102390:	d9002c17 	ldw	r4,176(sp)
10102394:	d9801e04 	addi	r6,sp,120
10102398:	b80b883a 	mov	r5,r23
1010239c:	01072680 	call	10107268 <__sprint_r>
101023a0:	1039ed1e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
101023a4:	d8802617 	ldw	r2,152(sp)
101023a8:	d8c02017 	ldw	r3,128(sp)
101023ac:	da000404 	addi	r8,sp,16
101023b0:	003e1006 	br	10101bf4 <__alt_data_end+0xfffe1bf4>
101023b4:	00800044 	movi	r2,1
101023b8:	10803fcc 	andi	r2,r2,255
101023bc:	00c00044 	movi	r3,1
101023c0:	10fa3526 	beq	r2,r3,10100c98 <__alt_data_end+0xfffe0c98>
101023c4:	00c00084 	movi	r3,2
101023c8:	10fbcb26 	beq	r2,r3,101012f8 <__alt_data_end+0xfffe12f8>
101023cc:	003a8f06 	br	10100e0c <__alt_data_end+0xfffe0e0c>
101023d0:	01040474 	movhi	r4,4113
101023d4:	213dd484 	addi	r4,r4,-2222
101023d8:	d9003515 	stw	r4,212(sp)
101023dc:	003b7606 	br	101011b8 <__alt_data_end+0xfffe11b8>
101023e0:	d8802917 	ldw	r2,164(sp)
101023e4:	00c00184 	movi	r3,6
101023e8:	1880012e 	bgeu	r3,r2,101023f0 <___vfprintf_internal_r+0x1ca0>
101023ec:	1805883a 	mov	r2,r3
101023f0:	d8802e15 	stw	r2,184(sp)
101023f4:	1000ef16 	blt	r2,zero,101027b4 <___vfprintf_internal_r+0x2064>
101023f8:	04040474 	movhi	r16,4113
101023fc:	d8802a15 	stw	r2,168(sp)
10102400:	dcc02d15 	stw	r19,180(sp)
10102404:	d8002915 	stw	zero,164(sp)
10102408:	d8003215 	stw	zero,200(sp)
1010240c:	843dce04 	addi	r16,r16,-2248
10102410:	0039883a 	mov	fp,zero
10102414:	003aa206 	br	10100ea0 <__alt_data_end+0xfffe0ea0>
10102418:	0021883a 	mov	r16,zero
1010241c:	003e0706 	br	10101c3c <__alt_data_end+0xfffe1c3c>
10102420:	d9002c17 	ldw	r4,176(sp)
10102424:	d9801e04 	addi	r6,sp,120
10102428:	b80b883a 	mov	r5,r23
1010242c:	01072680 	call	10107268 <__sprint_r>
10102430:	1039c91e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
10102434:	d8802617 	ldw	r2,152(sp)
10102438:	d9403317 	ldw	r5,204(sp)
1010243c:	d8c02017 	ldw	r3,128(sp)
10102440:	da000404 	addi	r8,sp,16
10102444:	2885c83a 	sub	r2,r5,r2
10102448:	003dfb06 	br	10101c38 <__alt_data_end+0xfffe1c38>
1010244c:	9080004c 	andi	r2,r18,1
10102450:	103e8f1e 	bne	r2,zero,10101e90 <__alt_data_end+0xfffe1e90>
10102454:	d8802117 	ldw	r2,132(sp)
10102458:	003e9e06 	br	10101ed4 <__alt_data_end+0xfffe1ed4>
1010245c:	1025883a 	mov	r18,r2
10102460:	0039883a 	mov	fp,zero
10102464:	00800084 	movi	r2,2
10102468:	003fd306 	br	101023b8 <__alt_data_end+0xfffe23b8>
1010246c:	07000b44 	movi	fp,45
10102470:	df002785 	stb	fp,158(sp)
10102474:	003a4006 	br	10100d78 <__alt_data_end+0xfffe0d78>
10102478:	00c00b44 	movi	r3,45
1010247c:	d8c02785 	stb	r3,158(sp)
10102480:	d8802a15 	stw	r2,168(sp)
10102484:	dc802b17 	ldw	r18,172(sp)
10102488:	d8002915 	stw	zero,164(sp)
1010248c:	07000b44 	movi	fp,45
10102490:	003a8006 	br	10100e94 <__alt_data_end+0xfffe0e94>
10102494:	04040474 	movhi	r16,4113
10102498:	843dc304 	addi	r16,r16,-2292
1010249c:	003f4706 	br	101021bc <__alt_data_end+0xfffe21bc>
101024a0:	d8c02d17 	ldw	r3,180(sp)
101024a4:	d9002f17 	ldw	r4,188(sp)
101024a8:	18800017 	ldw	r2,0(r3)
101024ac:	18c00104 	addi	r3,r3,4
101024b0:	d8c02d15 	stw	r3,180(sp)
101024b4:	11000015 	stw	r4,0(r2)
101024b8:	0038dd06 	br	10100830 <__alt_data_end+0xfffe0830>
101024bc:	dd802617 	ldw	r22,152(sp)
101024c0:	00bfff44 	movi	r2,-3
101024c4:	b0801c16 	blt	r22,r2,10102538 <___vfprintf_internal_r+0x1de8>
101024c8:	d9402917 	ldw	r5,164(sp)
101024cc:	2d801a16 	blt	r5,r22,10102538 <___vfprintf_internal_r+0x1de8>
101024d0:	dd803215 	stw	r22,200(sp)
101024d4:	003e8906 	br	10101efc <__alt_data_end+0xfffe1efc>
101024d8:	01040474 	movhi	r4,4113
101024dc:	213dd084 	addi	r4,r4,-2238
101024e0:	d9002b15 	stw	r4,172(sp)
101024e4:	003c9106 	br	1010172c <__alt_data_end+0xfffe172c>
101024e8:	e005883a 	mov	r2,fp
101024ec:	003e7906 	br	10101ed4 <__alt_data_end+0xfffe1ed4>
101024f0:	d9402917 	ldw	r5,164(sp)
101024f4:	df002783 	ldbu	fp,158(sp)
101024f8:	dcc02d15 	stw	r19,180(sp)
101024fc:	d9402a15 	stw	r5,168(sp)
10102500:	d9402e15 	stw	r5,184(sp)
10102504:	d8002915 	stw	zero,164(sp)
10102508:	d8003215 	stw	zero,200(sp)
1010250c:	003a5d06 	br	10100e84 <__alt_data_end+0xfffe0e84>
10102510:	9080004c 	andi	r2,r18,1
10102514:	0039883a 	mov	fp,zero
10102518:	10000426 	beq	r2,zero,1010252c <___vfprintf_internal_r+0x1ddc>
1010251c:	00800c04 	movi	r2,48
10102520:	dc001dc4 	addi	r16,sp,119
10102524:	d8801dc5 	stb	r2,119(sp)
10102528:	003b8006 	br	1010132c <__alt_data_end+0xfffe132c>
1010252c:	d8002e15 	stw	zero,184(sp)
10102530:	dc001e04 	addi	r16,sp,120
10102534:	003a4d06 	br	10100e6c <__alt_data_end+0xfffe0e6c>
10102538:	8c7fff84 	addi	r17,r17,-2
1010253c:	b5bfffc4 	addi	r22,r22,-1
10102540:	dd802615 	stw	r22,152(sp)
10102544:	dc4022c5 	stb	r17,139(sp)
10102548:	b000bf16 	blt	r22,zero,10102848 <___vfprintf_internal_r+0x20f8>
1010254c:	00800ac4 	movi	r2,43
10102550:	d8802305 	stb	r2,140(sp)
10102554:	00800244 	movi	r2,9
10102558:	15807016 	blt	r2,r22,1010271c <___vfprintf_internal_r+0x1fcc>
1010255c:	00800c04 	movi	r2,48
10102560:	b5800c04 	addi	r22,r22,48
10102564:	d8802345 	stb	r2,141(sp)
10102568:	dd802385 	stb	r22,142(sp)
1010256c:	d88023c4 	addi	r2,sp,143
10102570:	df0022c4 	addi	fp,sp,139
10102574:	d8c03317 	ldw	r3,204(sp)
10102578:	1739c83a 	sub	fp,r2,fp
1010257c:	d9003317 	ldw	r4,204(sp)
10102580:	e0c7883a 	add	r3,fp,r3
10102584:	df003a15 	stw	fp,232(sp)
10102588:	d8c02e15 	stw	r3,184(sp)
1010258c:	00800044 	movi	r2,1
10102590:	1100b30e 	bge	r2,r4,10102860 <___vfprintf_internal_r+0x2110>
10102594:	d8c02e17 	ldw	r3,184(sp)
10102598:	18c00044 	addi	r3,r3,1
1010259c:	d8c02e15 	stw	r3,184(sp)
101025a0:	1805883a 	mov	r2,r3
101025a4:	1800ac16 	blt	r3,zero,10102858 <___vfprintf_internal_r+0x2108>
101025a8:	d8003215 	stw	zero,200(sp)
101025ac:	003e5d06 	br	10101f24 <__alt_data_end+0xfffe1f24>
101025b0:	d9002c17 	ldw	r4,176(sp)
101025b4:	d9801e04 	addi	r6,sp,120
101025b8:	b80b883a 	mov	r5,r23
101025bc:	01072680 	call	10107268 <__sprint_r>
101025c0:	1039651e 	bne	r2,zero,10100b58 <__alt_data_end+0xfffe0b58>
101025c4:	dc402617 	ldw	r17,152(sp)
101025c8:	d8c02017 	ldw	r3,128(sp)
101025cc:	d8801f17 	ldw	r2,124(sp)
101025d0:	da000404 	addi	r8,sp,16
101025d4:	003ed606 	br	10102130 <__alt_data_end+0xfffe2130>
101025d8:	582b883a 	mov	r21,r11
101025dc:	d8002915 	stw	zero,164(sp)
101025e0:	0038bd06 	br	101008d8 <__alt_data_end+0xfffe08d8>
101025e4:	d8802917 	ldw	r2,164(sp)
101025e8:	103e071e 	bne	r2,zero,10101e08 <__alt_data_end+0xfffe1e08>
101025ec:	dc002915 	stw	r16,164(sp)
101025f0:	003e0506 	br	10101e08 <__alt_data_end+0xfffe1e08>
101025f4:	d9002917 	ldw	r4,164(sp)
101025f8:	20c00044 	addi	r3,r4,1
101025fc:	003e0f06 	br	10101e3c <__alt_data_end+0xfffe1e3c>
10102600:	01400184 	movi	r5,6
10102604:	d9402915 	stw	r5,164(sp)
10102608:	003dff06 	br	10101e08 <__alt_data_end+0xfffe1e08>
1010260c:	d8802104 	addi	r2,sp,132
10102610:	d8800315 	stw	r2,12(sp)
10102614:	d8802504 	addi	r2,sp,148
10102618:	d8800215 	stw	r2,8(sp)
1010261c:	d8802604 	addi	r2,sp,152
10102620:	d8800115 	stw	r2,4(sp)
10102624:	d8802917 	ldw	r2,164(sp)
10102628:	d9403617 	ldw	r5,216(sp)
1010262c:	d9002c17 	ldw	r4,176(sp)
10102630:	d8800015 	stw	r2,0(sp)
10102634:	01c000c4 	movi	r7,3
10102638:	980d883a 	mov	r6,r19
1010263c:	da003d15 	stw	r8,244(sp)
10102640:	0102d740 	call	10102d74 <_dtoa_r>
10102644:	d8c02917 	ldw	r3,164(sp)
10102648:	da003d17 	ldw	r8,244(sp)
1010264c:	1021883a 	mov	r16,r2
10102650:	10f9883a 	add	fp,r2,r3
10102654:	81000007 	ldb	r4,0(r16)
10102658:	00800c04 	movi	r2,48
1010265c:	20805e26 	beq	r4,r2,101027d8 <___vfprintf_internal_r+0x2088>
10102660:	d8c02617 	ldw	r3,152(sp)
10102664:	e0f9883a 	add	fp,fp,r3
10102668:	003e0a06 	br	10101e94 <__alt_data_end+0xfffe1e94>
1010266c:	00c00b44 	movi	r3,45
10102670:	24e0003c 	xorhi	r19,r4,32768
10102674:	d8c02a05 	stb	r3,168(sp)
10102678:	003de906 	br	10101e20 <__alt_data_end+0xfffe1e20>
1010267c:	d8c03217 	ldw	r3,200(sp)
10102680:	00c07a0e 	bge	zero,r3,1010286c <___vfprintf_internal_r+0x211c>
10102684:	00800044 	movi	r2,1
10102688:	d9003317 	ldw	r4,204(sp)
1010268c:	1105883a 	add	r2,r2,r4
10102690:	d8802e15 	stw	r2,184(sp)
10102694:	10004e16 	blt	r2,zero,101027d0 <___vfprintf_internal_r+0x2080>
10102698:	044019c4 	movi	r17,103
1010269c:	003e2106 	br	10101f24 <__alt_data_end+0xfffe1f24>
101026a0:	d9002917 	ldw	r4,164(sp)
101026a4:	d8802104 	addi	r2,sp,132
101026a8:	d8800315 	stw	r2,12(sp)
101026ac:	d9000015 	stw	r4,0(sp)
101026b0:	d8802504 	addi	r2,sp,148
101026b4:	d9403617 	ldw	r5,216(sp)
101026b8:	d9002c17 	ldw	r4,176(sp)
101026bc:	d8800215 	stw	r2,8(sp)
101026c0:	d8802604 	addi	r2,sp,152
101026c4:	d8800115 	stw	r2,4(sp)
101026c8:	01c000c4 	movi	r7,3
101026cc:	980d883a 	mov	r6,r19
101026d0:	da003d15 	stw	r8,244(sp)
101026d4:	0102d740 	call	10102d74 <_dtoa_r>
101026d8:	d8c02917 	ldw	r3,164(sp)
101026dc:	da003d17 	ldw	r8,244(sp)
101026e0:	1021883a 	mov	r16,r2
101026e4:	00801184 	movi	r2,70
101026e8:	80f9883a 	add	fp,r16,r3
101026ec:	88bfd926 	beq	r17,r2,10102654 <__alt_data_end+0xfffe2654>
101026f0:	003de806 	br	10101e94 <__alt_data_end+0xfffe1e94>
101026f4:	d9002917 	ldw	r4,164(sp)
101026f8:	00c04d0e 	bge	zero,r3,10102830 <___vfprintf_internal_r+0x20e0>
101026fc:	2000441e 	bne	r4,zero,10102810 <___vfprintf_internal_r+0x20c0>
10102700:	9480004c 	andi	r18,r18,1
10102704:	9000421e 	bne	r18,zero,10102810 <___vfprintf_internal_r+0x20c0>
10102708:	1805883a 	mov	r2,r3
1010270c:	18007016 	blt	r3,zero,101028d0 <___vfprintf_internal_r+0x2180>
10102710:	d8c03217 	ldw	r3,200(sp)
10102714:	d8c02e15 	stw	r3,184(sp)
10102718:	003e0206 	br	10101f24 <__alt_data_end+0xfffe1f24>
1010271c:	df0022c4 	addi	fp,sp,139
10102720:	dc002915 	stw	r16,164(sp)
10102724:	4027883a 	mov	r19,r8
10102728:	e021883a 	mov	r16,fp
1010272c:	b009883a 	mov	r4,r22
10102730:	01400284 	movi	r5,10
10102734:	010a7980 	call	1010a798 <__modsi3>
10102738:	10800c04 	addi	r2,r2,48
1010273c:	843fffc4 	addi	r16,r16,-1
10102740:	b009883a 	mov	r4,r22
10102744:	01400284 	movi	r5,10
10102748:	80800005 	stb	r2,0(r16)
1010274c:	010a7140 	call	1010a714 <__divsi3>
10102750:	102d883a 	mov	r22,r2
10102754:	00800244 	movi	r2,9
10102758:	15bff416 	blt	r2,r22,1010272c <__alt_data_end+0xfffe272c>
1010275c:	9811883a 	mov	r8,r19
10102760:	b0800c04 	addi	r2,r22,48
10102764:	8027883a 	mov	r19,r16
10102768:	997fffc4 	addi	r5,r19,-1
1010276c:	98bfffc5 	stb	r2,-1(r19)
10102770:	dc002917 	ldw	r16,164(sp)
10102774:	2f006a2e 	bgeu	r5,fp,10102920 <___vfprintf_internal_r+0x21d0>
10102778:	d9c02384 	addi	r7,sp,142
1010277c:	3ccfc83a 	sub	r7,r7,r19
10102780:	d9002344 	addi	r4,sp,141
10102784:	e1cf883a 	add	r7,fp,r7
10102788:	00000106 	br	10102790 <___vfprintf_internal_r+0x2040>
1010278c:	28800003 	ldbu	r2,0(r5)
10102790:	20800005 	stb	r2,0(r4)
10102794:	21000044 	addi	r4,r4,1
10102798:	29400044 	addi	r5,r5,1
1010279c:	393ffb1e 	bne	r7,r4,1010278c <__alt_data_end+0xfffe278c>
101027a0:	d8802304 	addi	r2,sp,140
101027a4:	14c5c83a 	sub	r2,r2,r19
101027a8:	d8c02344 	addi	r3,sp,141
101027ac:	1885883a 	add	r2,r3,r2
101027b0:	003f7006 	br	10102574 <__alt_data_end+0xfffe2574>
101027b4:	0005883a 	mov	r2,zero
101027b8:	003f0f06 	br	101023f8 <__alt_data_end+0xfffe23f8>
101027bc:	d8c03217 	ldw	r3,200(sp)
101027c0:	18c00044 	addi	r3,r3,1
101027c4:	d8c02e15 	stw	r3,184(sp)
101027c8:	1805883a 	mov	r2,r3
101027cc:	183fb20e 	bge	r3,zero,10102698 <__alt_data_end+0xfffe2698>
101027d0:	0005883a 	mov	r2,zero
101027d4:	003fb006 	br	10102698 <__alt_data_end+0xfffe2698>
101027d8:	d9003617 	ldw	r4,216(sp)
101027dc:	000d883a 	mov	r6,zero
101027e0:	000f883a 	mov	r7,zero
101027e4:	980b883a 	mov	r5,r19
101027e8:	d8c03c15 	stw	r3,240(sp)
101027ec:	da003d15 	stw	r8,244(sp)
101027f0:	010ba5c0 	call	1010ba5c <__eqdf2>
101027f4:	d8c03c17 	ldw	r3,240(sp)
101027f8:	da003d17 	ldw	r8,244(sp)
101027fc:	103f9826 	beq	r2,zero,10102660 <__alt_data_end+0xfffe2660>
10102800:	00800044 	movi	r2,1
10102804:	10c7c83a 	sub	r3,r2,r3
10102808:	d8c02615 	stw	r3,152(sp)
1010280c:	003f9506 	br	10102664 <__alt_data_end+0xfffe2664>
10102810:	d9002917 	ldw	r4,164(sp)
10102814:	d8c03217 	ldw	r3,200(sp)
10102818:	20800044 	addi	r2,r4,1
1010281c:	1885883a 	add	r2,r3,r2
10102820:	d8802e15 	stw	r2,184(sp)
10102824:	103dbf0e 	bge	r2,zero,10101f24 <__alt_data_end+0xfffe1f24>
10102828:	0005883a 	mov	r2,zero
1010282c:	003dbd06 	br	10101f24 <__alt_data_end+0xfffe1f24>
10102830:	2000211e 	bne	r4,zero,101028b8 <___vfprintf_internal_r+0x2168>
10102834:	9480004c 	andi	r18,r18,1
10102838:	90001f1e 	bne	r18,zero,101028b8 <___vfprintf_internal_r+0x2168>
1010283c:	00800044 	movi	r2,1
10102840:	d8802e15 	stw	r2,184(sp)
10102844:	003db706 	br	10101f24 <__alt_data_end+0xfffe1f24>
10102848:	00800b44 	movi	r2,45
1010284c:	05adc83a 	sub	r22,zero,r22
10102850:	d8802305 	stb	r2,140(sp)
10102854:	003f3f06 	br	10102554 <__alt_data_end+0xfffe2554>
10102858:	0005883a 	mov	r2,zero
1010285c:	003f5206 	br	101025a8 <__alt_data_end+0xfffe25a8>
10102860:	90a4703a 	and	r18,r18,r2
10102864:	903f4e26 	beq	r18,zero,101025a0 <__alt_data_end+0xfffe25a0>
10102868:	003f4a06 	br	10102594 <__alt_data_end+0xfffe2594>
1010286c:	00800084 	movi	r2,2
10102870:	10c5c83a 	sub	r2,r2,r3
10102874:	003f8406 	br	10102688 <__alt_data_end+0xfffe2688>
10102878:	d8802d17 	ldw	r2,180(sp)
1010287c:	d9002d17 	ldw	r4,180(sp)
10102880:	ac400043 	ldbu	r17,1(r21)
10102884:	10800017 	ldw	r2,0(r2)
10102888:	582b883a 	mov	r21,r11
1010288c:	d8802915 	stw	r2,164(sp)
10102890:	20800104 	addi	r2,r4,4
10102894:	d9002917 	ldw	r4,164(sp)
10102898:	d8802d15 	stw	r2,180(sp)
1010289c:	203e7a0e 	bge	r4,zero,10102288 <__alt_data_end+0xfffe2288>
101028a0:	8c403fcc 	andi	r17,r17,255
101028a4:	00bfffc4 	movi	r2,-1
101028a8:	8c40201c 	xori	r17,r17,128
101028ac:	d8802915 	stw	r2,164(sp)
101028b0:	8c7fe004 	addi	r17,r17,-128
101028b4:	00380706 	br	101008d4 <__alt_data_end+0xfffe08d4>
101028b8:	d8c02917 	ldw	r3,164(sp)
101028bc:	18c00084 	addi	r3,r3,2
101028c0:	d8c02e15 	stw	r3,184(sp)
101028c4:	1805883a 	mov	r2,r3
101028c8:	183d960e 	bge	r3,zero,10101f24 <__alt_data_end+0xfffe1f24>
101028cc:	003fd606 	br	10102828 <__alt_data_end+0xfffe2828>
101028d0:	0005883a 	mov	r2,zero
101028d4:	003f8e06 	br	10102710 <__alt_data_end+0xfffe2710>
101028d8:	9080004c 	andi	r2,r18,1
101028dc:	103f811e 	bne	r2,zero,101026e4 <__alt_data_end+0xfffe26e4>
101028e0:	d8802117 	ldw	r2,132(sp)
101028e4:	1405c83a 	sub	r2,r2,r16
101028e8:	d8803315 	stw	r2,204(sp)
101028ec:	b47ef326 	beq	r22,r17,101024bc <__alt_data_end+0xfffe24bc>
101028f0:	dd802617 	ldw	r22,152(sp)
101028f4:	003f1106 	br	1010253c <__alt_data_end+0xfffe253c>
101028f8:	d9c02785 	stb	r7,158(sp)
101028fc:	00390406 	br	10100d10 <__alt_data_end+0xfffe0d10>
10102900:	d9c02785 	stb	r7,158(sp)
10102904:	0038d306 	br	10100c54 <__alt_data_end+0xfffe0c54>
10102908:	d9c02785 	stb	r7,158(sp)
1010290c:	003a6106 	br	10101294 <__alt_data_end+0xfffe1294>
10102910:	d9c02785 	stb	r7,158(sp)
10102914:	003af806 	br	101014f8 <__alt_data_end+0xfffe14f8>
10102918:	0005883a 	mov	r2,zero
1010291c:	003d7e06 	br	10101f18 <__alt_data_end+0xfffe1f18>
10102920:	d8802344 	addi	r2,sp,141
10102924:	003f1306 	br	10102574 <__alt_data_end+0xfffe2574>
10102928:	d9c02785 	stb	r7,158(sp)
1010292c:	00392306 	br	10100dbc <__alt_data_end+0xfffe0dbc>
10102930:	d9c02785 	stb	r7,158(sp)
10102934:	003aa906 	br	101013dc <__alt_data_end+0xfffe13dc>
10102938:	d9c02785 	stb	r7,158(sp)
1010293c:	003a3d06 	br	10101234 <__alt_data_end+0xfffe1234>
10102940:	d9c02785 	stb	r7,158(sp)
10102944:	003aca06 	br	10101470 <__alt_data_end+0xfffe1470>

10102948 <__vfprintf_internal>:
10102948:	00840474 	movhi	r2,4113
1010294c:	10852b04 	addi	r2,r2,5292
10102950:	300f883a 	mov	r7,r6
10102954:	280d883a 	mov	r6,r5
10102958:	200b883a 	mov	r5,r4
1010295c:	11000017 	ldw	r4,0(r2)
10102960:	01007501 	jmpi	10100750 <___vfprintf_internal_r>

10102964 <__sbprintf>:
10102964:	2880030b 	ldhu	r2,12(r5)
10102968:	2ac01917 	ldw	r11,100(r5)
1010296c:	2a80038b 	ldhu	r10,14(r5)
10102970:	2a400717 	ldw	r9,28(r5)
10102974:	2a000917 	ldw	r8,36(r5)
10102978:	defee204 	addi	sp,sp,-1144
1010297c:	00c10004 	movi	r3,1024
10102980:	dc011a15 	stw	r16,1128(sp)
10102984:	10bfff4c 	andi	r2,r2,65533
10102988:	2821883a 	mov	r16,r5
1010298c:	d8cb883a 	add	r5,sp,r3
10102990:	dc811c15 	stw	r18,1136(sp)
10102994:	dc411b15 	stw	r17,1132(sp)
10102998:	dfc11d15 	stw	ra,1140(sp)
1010299c:	2025883a 	mov	r18,r4
101029a0:	d881030d 	sth	r2,1036(sp)
101029a4:	dac11915 	stw	r11,1124(sp)
101029a8:	da81038d 	sth	r10,1038(sp)
101029ac:	da410715 	stw	r9,1052(sp)
101029b0:	da010915 	stw	r8,1060(sp)
101029b4:	dec10015 	stw	sp,1024(sp)
101029b8:	dec10415 	stw	sp,1040(sp)
101029bc:	d8c10215 	stw	r3,1032(sp)
101029c0:	d8c10515 	stw	r3,1044(sp)
101029c4:	d8010615 	stw	zero,1048(sp)
101029c8:	01007500 	call	10100750 <___vfprintf_internal_r>
101029cc:	1023883a 	mov	r17,r2
101029d0:	10000416 	blt	r2,zero,101029e4 <__sbprintf+0x80>
101029d4:	d9410004 	addi	r5,sp,1024
101029d8:	9009883a 	mov	r4,r18
101029dc:	01046180 	call	10104618 <_fflush_r>
101029e0:	10000d1e 	bne	r2,zero,10102a18 <__sbprintf+0xb4>
101029e4:	d881030b 	ldhu	r2,1036(sp)
101029e8:	1080100c 	andi	r2,r2,64
101029ec:	10000326 	beq	r2,zero,101029fc <__sbprintf+0x98>
101029f0:	8080030b 	ldhu	r2,12(r16)
101029f4:	10801014 	ori	r2,r2,64
101029f8:	8080030d 	sth	r2,12(r16)
101029fc:	8805883a 	mov	r2,r17
10102a00:	dfc11d17 	ldw	ra,1140(sp)
10102a04:	dc811c17 	ldw	r18,1136(sp)
10102a08:	dc411b17 	ldw	r17,1132(sp)
10102a0c:	dc011a17 	ldw	r16,1128(sp)
10102a10:	dec11e04 	addi	sp,sp,1144
10102a14:	f800283a 	ret
10102a18:	047fffc4 	movi	r17,-1
10102a1c:	003ff106 	br	101029e4 <__alt_data_end+0xfffe29e4>

10102a20 <__swsetup_r>:
10102a20:	00840474 	movhi	r2,4113
10102a24:	defffd04 	addi	sp,sp,-12
10102a28:	10852b04 	addi	r2,r2,5292
10102a2c:	dc400115 	stw	r17,4(sp)
10102a30:	2023883a 	mov	r17,r4
10102a34:	11000017 	ldw	r4,0(r2)
10102a38:	dc000015 	stw	r16,0(sp)
10102a3c:	dfc00215 	stw	ra,8(sp)
10102a40:	2821883a 	mov	r16,r5
10102a44:	20000226 	beq	r4,zero,10102a50 <__swsetup_r+0x30>
10102a48:	20800e17 	ldw	r2,56(r4)
10102a4c:	10003126 	beq	r2,zero,10102b14 <__swsetup_r+0xf4>
10102a50:	8080030b 	ldhu	r2,12(r16)
10102a54:	10c0020c 	andi	r3,r2,8
10102a58:	1009883a 	mov	r4,r2
10102a5c:	18000f26 	beq	r3,zero,10102a9c <__swsetup_r+0x7c>
10102a60:	80c00417 	ldw	r3,16(r16)
10102a64:	18001526 	beq	r3,zero,10102abc <__swsetup_r+0x9c>
10102a68:	1100004c 	andi	r4,r2,1
10102a6c:	20001c1e 	bne	r4,zero,10102ae0 <__swsetup_r+0xc0>
10102a70:	1080008c 	andi	r2,r2,2
10102a74:	1000291e 	bne	r2,zero,10102b1c <__swsetup_r+0xfc>
10102a78:	80800517 	ldw	r2,20(r16)
10102a7c:	80800215 	stw	r2,8(r16)
10102a80:	18001c26 	beq	r3,zero,10102af4 <__swsetup_r+0xd4>
10102a84:	0005883a 	mov	r2,zero
10102a88:	dfc00217 	ldw	ra,8(sp)
10102a8c:	dc400117 	ldw	r17,4(sp)
10102a90:	dc000017 	ldw	r16,0(sp)
10102a94:	dec00304 	addi	sp,sp,12
10102a98:	f800283a 	ret
10102a9c:	2080040c 	andi	r2,r4,16
10102aa0:	10002e26 	beq	r2,zero,10102b5c <__swsetup_r+0x13c>
10102aa4:	2080010c 	andi	r2,r4,4
10102aa8:	10001e1e 	bne	r2,zero,10102b24 <__swsetup_r+0x104>
10102aac:	80c00417 	ldw	r3,16(r16)
10102ab0:	20800214 	ori	r2,r4,8
10102ab4:	8080030d 	sth	r2,12(r16)
10102ab8:	183feb1e 	bne	r3,zero,10102a68 <__alt_data_end+0xfffe2a68>
10102abc:	1100a00c 	andi	r4,r2,640
10102ac0:	01408004 	movi	r5,512
10102ac4:	217fe826 	beq	r4,r5,10102a68 <__alt_data_end+0xfffe2a68>
10102ac8:	800b883a 	mov	r5,r16
10102acc:	8809883a 	mov	r4,r17
10102ad0:	01050dc0 	call	101050dc <__smakebuf_r>
10102ad4:	8080030b 	ldhu	r2,12(r16)
10102ad8:	80c00417 	ldw	r3,16(r16)
10102adc:	003fe206 	br	10102a68 <__alt_data_end+0xfffe2a68>
10102ae0:	80800517 	ldw	r2,20(r16)
10102ae4:	80000215 	stw	zero,8(r16)
10102ae8:	0085c83a 	sub	r2,zero,r2
10102aec:	80800615 	stw	r2,24(r16)
10102af0:	183fe41e 	bne	r3,zero,10102a84 <__alt_data_end+0xfffe2a84>
10102af4:	80c0030b 	ldhu	r3,12(r16)
10102af8:	0005883a 	mov	r2,zero
10102afc:	1900200c 	andi	r4,r3,128
10102b00:	203fe126 	beq	r4,zero,10102a88 <__alt_data_end+0xfffe2a88>
10102b04:	18c01014 	ori	r3,r3,64
10102b08:	80c0030d 	sth	r3,12(r16)
10102b0c:	00bfffc4 	movi	r2,-1
10102b10:	003fdd06 	br	10102a88 <__alt_data_end+0xfffe2a88>
10102b14:	01049f40 	call	101049f4 <__sinit>
10102b18:	003fcd06 	br	10102a50 <__alt_data_end+0xfffe2a50>
10102b1c:	0005883a 	mov	r2,zero
10102b20:	003fd606 	br	10102a7c <__alt_data_end+0xfffe2a7c>
10102b24:	81400c17 	ldw	r5,48(r16)
10102b28:	28000626 	beq	r5,zero,10102b44 <__swsetup_r+0x124>
10102b2c:	80801004 	addi	r2,r16,64
10102b30:	28800326 	beq	r5,r2,10102b40 <__swsetup_r+0x120>
10102b34:	8809883a 	mov	r4,r17
10102b38:	0104b680 	call	10104b68 <_free_r>
10102b3c:	8100030b 	ldhu	r4,12(r16)
10102b40:	80000c15 	stw	zero,48(r16)
10102b44:	80c00417 	ldw	r3,16(r16)
10102b48:	00bff6c4 	movi	r2,-37
10102b4c:	1108703a 	and	r4,r2,r4
10102b50:	80000115 	stw	zero,4(r16)
10102b54:	80c00015 	stw	r3,0(r16)
10102b58:	003fd506 	br	10102ab0 <__alt_data_end+0xfffe2ab0>
10102b5c:	00800244 	movi	r2,9
10102b60:	88800015 	stw	r2,0(r17)
10102b64:	20801014 	ori	r2,r4,64
10102b68:	8080030d 	sth	r2,12(r16)
10102b6c:	00bfffc4 	movi	r2,-1
10102b70:	003fc506 	br	10102a88 <__alt_data_end+0xfffe2a88>

10102b74 <quorem>:
10102b74:	defff704 	addi	sp,sp,-36
10102b78:	dc800215 	stw	r18,8(sp)
10102b7c:	20800417 	ldw	r2,16(r4)
10102b80:	2c800417 	ldw	r18,16(r5)
10102b84:	dfc00815 	stw	ra,32(sp)
10102b88:	ddc00715 	stw	r23,28(sp)
10102b8c:	dd800615 	stw	r22,24(sp)
10102b90:	dd400515 	stw	r21,20(sp)
10102b94:	dd000415 	stw	r20,16(sp)
10102b98:	dcc00315 	stw	r19,12(sp)
10102b9c:	dc400115 	stw	r17,4(sp)
10102ba0:	dc000015 	stw	r16,0(sp)
10102ba4:	14807116 	blt	r2,r18,10102d6c <quorem+0x1f8>
10102ba8:	94bfffc4 	addi	r18,r18,-1
10102bac:	94ad883a 	add	r22,r18,r18
10102bb0:	b5ad883a 	add	r22,r22,r22
10102bb4:	2c400504 	addi	r17,r5,20
10102bb8:	8da9883a 	add	r20,r17,r22
10102bbc:	25400504 	addi	r21,r4,20
10102bc0:	282f883a 	mov	r23,r5
10102bc4:	adad883a 	add	r22,r21,r22
10102bc8:	a1400017 	ldw	r5,0(r20)
10102bcc:	2021883a 	mov	r16,r4
10102bd0:	b1000017 	ldw	r4,0(r22)
10102bd4:	29400044 	addi	r5,r5,1
10102bd8:	010a80c0 	call	1010a80c <__udivsi3>
10102bdc:	1027883a 	mov	r19,r2
10102be0:	10002c26 	beq	r2,zero,10102c94 <quorem+0x120>
10102be4:	a813883a 	mov	r9,r21
10102be8:	880b883a 	mov	r5,r17
10102bec:	0009883a 	mov	r4,zero
10102bf0:	000d883a 	mov	r6,zero
10102bf4:	2a000017 	ldw	r8,0(r5)
10102bf8:	49c00017 	ldw	r7,0(r9)
10102bfc:	29400104 	addi	r5,r5,4
10102c00:	40bfffcc 	andi	r2,r8,65535
10102c04:	14c5383a 	mul	r2,r2,r19
10102c08:	4010d43a 	srli	r8,r8,16
10102c0c:	38ffffcc 	andi	r3,r7,65535
10102c10:	1105883a 	add	r2,r2,r4
10102c14:	1008d43a 	srli	r4,r2,16
10102c18:	44d1383a 	mul	r8,r8,r19
10102c1c:	198d883a 	add	r6,r3,r6
10102c20:	10ffffcc 	andi	r3,r2,65535
10102c24:	30c7c83a 	sub	r3,r6,r3
10102c28:	380ed43a 	srli	r7,r7,16
10102c2c:	4105883a 	add	r2,r8,r4
10102c30:	180dd43a 	srai	r6,r3,16
10102c34:	113fffcc 	andi	r4,r2,65535
10102c38:	390fc83a 	sub	r7,r7,r4
10102c3c:	398d883a 	add	r6,r7,r6
10102c40:	300e943a 	slli	r7,r6,16
10102c44:	18ffffcc 	andi	r3,r3,65535
10102c48:	1008d43a 	srli	r4,r2,16
10102c4c:	38ceb03a 	or	r7,r7,r3
10102c50:	49c00015 	stw	r7,0(r9)
10102c54:	300dd43a 	srai	r6,r6,16
10102c58:	4a400104 	addi	r9,r9,4
10102c5c:	a17fe52e 	bgeu	r20,r5,10102bf4 <__alt_data_end+0xfffe2bf4>
10102c60:	b0800017 	ldw	r2,0(r22)
10102c64:	10000b1e 	bne	r2,zero,10102c94 <quorem+0x120>
10102c68:	b0bfff04 	addi	r2,r22,-4
10102c6c:	a880082e 	bgeu	r21,r2,10102c90 <quorem+0x11c>
10102c70:	b0ffff17 	ldw	r3,-4(r22)
10102c74:	18000326 	beq	r3,zero,10102c84 <quorem+0x110>
10102c78:	00000506 	br	10102c90 <quorem+0x11c>
10102c7c:	10c00017 	ldw	r3,0(r2)
10102c80:	1800031e 	bne	r3,zero,10102c90 <quorem+0x11c>
10102c84:	10bfff04 	addi	r2,r2,-4
10102c88:	94bfffc4 	addi	r18,r18,-1
10102c8c:	a8bffb36 	bltu	r21,r2,10102c7c <__alt_data_end+0xfffe2c7c>
10102c90:	84800415 	stw	r18,16(r16)
10102c94:	b80b883a 	mov	r5,r23
10102c98:	8009883a 	mov	r4,r16
10102c9c:	01066c00 	call	101066c0 <__mcmp>
10102ca0:	10002616 	blt	r2,zero,10102d3c <quorem+0x1c8>
10102ca4:	9cc00044 	addi	r19,r19,1
10102ca8:	a805883a 	mov	r2,r21
10102cac:	000b883a 	mov	r5,zero
10102cb0:	11000017 	ldw	r4,0(r2)
10102cb4:	89800017 	ldw	r6,0(r17)
10102cb8:	10800104 	addi	r2,r2,4
10102cbc:	20ffffcc 	andi	r3,r4,65535
10102cc0:	194b883a 	add	r5,r3,r5
10102cc4:	30ffffcc 	andi	r3,r6,65535
10102cc8:	28c7c83a 	sub	r3,r5,r3
10102ccc:	300cd43a 	srli	r6,r6,16
10102cd0:	2008d43a 	srli	r4,r4,16
10102cd4:	180bd43a 	srai	r5,r3,16
10102cd8:	18ffffcc 	andi	r3,r3,65535
10102cdc:	2189c83a 	sub	r4,r4,r6
10102ce0:	2149883a 	add	r4,r4,r5
10102ce4:	200c943a 	slli	r6,r4,16
10102ce8:	8c400104 	addi	r17,r17,4
10102cec:	200bd43a 	srai	r5,r4,16
10102cf0:	30c6b03a 	or	r3,r6,r3
10102cf4:	10ffff15 	stw	r3,-4(r2)
10102cf8:	a47fed2e 	bgeu	r20,r17,10102cb0 <__alt_data_end+0xfffe2cb0>
10102cfc:	9485883a 	add	r2,r18,r18
10102d00:	1085883a 	add	r2,r2,r2
10102d04:	a887883a 	add	r3,r21,r2
10102d08:	18800017 	ldw	r2,0(r3)
10102d0c:	10000b1e 	bne	r2,zero,10102d3c <quorem+0x1c8>
10102d10:	18bfff04 	addi	r2,r3,-4
10102d14:	a880082e 	bgeu	r21,r2,10102d38 <quorem+0x1c4>
10102d18:	18ffff17 	ldw	r3,-4(r3)
10102d1c:	18000326 	beq	r3,zero,10102d2c <quorem+0x1b8>
10102d20:	00000506 	br	10102d38 <quorem+0x1c4>
10102d24:	10c00017 	ldw	r3,0(r2)
10102d28:	1800031e 	bne	r3,zero,10102d38 <quorem+0x1c4>
10102d2c:	10bfff04 	addi	r2,r2,-4
10102d30:	94bfffc4 	addi	r18,r18,-1
10102d34:	a8bffb36 	bltu	r21,r2,10102d24 <__alt_data_end+0xfffe2d24>
10102d38:	84800415 	stw	r18,16(r16)
10102d3c:	9805883a 	mov	r2,r19
10102d40:	dfc00817 	ldw	ra,32(sp)
10102d44:	ddc00717 	ldw	r23,28(sp)
10102d48:	dd800617 	ldw	r22,24(sp)
10102d4c:	dd400517 	ldw	r21,20(sp)
10102d50:	dd000417 	ldw	r20,16(sp)
10102d54:	dcc00317 	ldw	r19,12(sp)
10102d58:	dc800217 	ldw	r18,8(sp)
10102d5c:	dc400117 	ldw	r17,4(sp)
10102d60:	dc000017 	ldw	r16,0(sp)
10102d64:	dec00904 	addi	sp,sp,36
10102d68:	f800283a 	ret
10102d6c:	0005883a 	mov	r2,zero
10102d70:	003ff306 	br	10102d40 <__alt_data_end+0xfffe2d40>

10102d74 <_dtoa_r>:
10102d74:	20801017 	ldw	r2,64(r4)
10102d78:	deffde04 	addi	sp,sp,-136
10102d7c:	df002015 	stw	fp,128(sp)
10102d80:	dcc01b15 	stw	r19,108(sp)
10102d84:	dc801a15 	stw	r18,104(sp)
10102d88:	dc401915 	stw	r17,100(sp)
10102d8c:	dc001815 	stw	r16,96(sp)
10102d90:	dfc02115 	stw	ra,132(sp)
10102d94:	ddc01f15 	stw	r23,124(sp)
10102d98:	dd801e15 	stw	r22,120(sp)
10102d9c:	dd401d15 	stw	r21,116(sp)
10102da0:	dd001c15 	stw	r20,112(sp)
10102da4:	d9c00315 	stw	r7,12(sp)
10102da8:	2039883a 	mov	fp,r4
10102dac:	3023883a 	mov	r17,r6
10102db0:	2825883a 	mov	r18,r5
10102db4:	dc002417 	ldw	r16,144(sp)
10102db8:	3027883a 	mov	r19,r6
10102dbc:	10000826 	beq	r2,zero,10102de0 <_dtoa_r+0x6c>
10102dc0:	21801117 	ldw	r6,68(r4)
10102dc4:	00c00044 	movi	r3,1
10102dc8:	100b883a 	mov	r5,r2
10102dcc:	1986983a 	sll	r3,r3,r6
10102dd0:	11800115 	stw	r6,4(r2)
10102dd4:	10c00215 	stw	r3,8(r2)
10102dd8:	0105ea00 	call	10105ea0 <_Bfree>
10102ddc:	e0001015 	stw	zero,64(fp)
10102de0:	88002e16 	blt	r17,zero,10102e9c <_dtoa_r+0x128>
10102de4:	80000015 	stw	zero,0(r16)
10102de8:	889ffc2c 	andhi	r2,r17,32752
10102dec:	00dffc34 	movhi	r3,32752
10102df0:	10c01c26 	beq	r2,r3,10102e64 <_dtoa_r+0xf0>
10102df4:	000d883a 	mov	r6,zero
10102df8:	000f883a 	mov	r7,zero
10102dfc:	9009883a 	mov	r4,r18
10102e00:	980b883a 	mov	r5,r19
10102e04:	010ba5c0 	call	1010ba5c <__eqdf2>
10102e08:	10002b1e 	bne	r2,zero,10102eb8 <_dtoa_r+0x144>
10102e0c:	d9c02317 	ldw	r7,140(sp)
10102e10:	00800044 	movi	r2,1
10102e14:	38800015 	stw	r2,0(r7)
10102e18:	d8802517 	ldw	r2,148(sp)
10102e1c:	10019e26 	beq	r2,zero,10103498 <_dtoa_r+0x724>
10102e20:	d8c02517 	ldw	r3,148(sp)
10102e24:	00840474 	movhi	r2,4113
10102e28:	10bdd044 	addi	r2,r2,-2239
10102e2c:	18800015 	stw	r2,0(r3)
10102e30:	10bfffc4 	addi	r2,r2,-1
10102e34:	dfc02117 	ldw	ra,132(sp)
10102e38:	df002017 	ldw	fp,128(sp)
10102e3c:	ddc01f17 	ldw	r23,124(sp)
10102e40:	dd801e17 	ldw	r22,120(sp)
10102e44:	dd401d17 	ldw	r21,116(sp)
10102e48:	dd001c17 	ldw	r20,112(sp)
10102e4c:	dcc01b17 	ldw	r19,108(sp)
10102e50:	dc801a17 	ldw	r18,104(sp)
10102e54:	dc401917 	ldw	r17,100(sp)
10102e58:	dc001817 	ldw	r16,96(sp)
10102e5c:	dec02204 	addi	sp,sp,136
10102e60:	f800283a 	ret
10102e64:	d8c02317 	ldw	r3,140(sp)
10102e68:	0089c3c4 	movi	r2,9999
10102e6c:	18800015 	stw	r2,0(r3)
10102e70:	90017726 	beq	r18,zero,10103450 <_dtoa_r+0x6dc>
10102e74:	00840474 	movhi	r2,4113
10102e78:	10bddc04 	addi	r2,r2,-2192
10102e7c:	d9002517 	ldw	r4,148(sp)
10102e80:	203fec26 	beq	r4,zero,10102e34 <__alt_data_end+0xfffe2e34>
10102e84:	10c000c7 	ldb	r3,3(r2)
10102e88:	1801781e 	bne	r3,zero,1010346c <_dtoa_r+0x6f8>
10102e8c:	10c000c4 	addi	r3,r2,3
10102e90:	d9802517 	ldw	r6,148(sp)
10102e94:	30c00015 	stw	r3,0(r6)
10102e98:	003fe606 	br	10102e34 <__alt_data_end+0xfffe2e34>
10102e9c:	04e00034 	movhi	r19,32768
10102ea0:	9cffffc4 	addi	r19,r19,-1
10102ea4:	00800044 	movi	r2,1
10102ea8:	8ce6703a 	and	r19,r17,r19
10102eac:	80800015 	stw	r2,0(r16)
10102eb0:	9823883a 	mov	r17,r19
10102eb4:	003fcc06 	br	10102de8 <__alt_data_end+0xfffe2de8>
10102eb8:	d8800204 	addi	r2,sp,8
10102ebc:	d8800015 	stw	r2,0(sp)
10102ec0:	d9c00104 	addi	r7,sp,4
10102ec4:	900b883a 	mov	r5,r18
10102ec8:	980d883a 	mov	r6,r19
10102ecc:	e009883a 	mov	r4,fp
10102ed0:	8820d53a 	srli	r16,r17,20
10102ed4:	0106a8c0 	call	10106a8c <__d2b>
10102ed8:	d8800915 	stw	r2,36(sp)
10102edc:	8001651e 	bne	r16,zero,10103474 <_dtoa_r+0x700>
10102ee0:	dd800217 	ldw	r22,8(sp)
10102ee4:	dc000117 	ldw	r16,4(sp)
10102ee8:	00800804 	movi	r2,32
10102eec:	b421883a 	add	r16,r22,r16
10102ef0:	80c10c84 	addi	r3,r16,1074
10102ef4:	10c2d10e 	bge	r2,r3,10103a3c <_dtoa_r+0xcc8>
10102ef8:	00801004 	movi	r2,64
10102efc:	81010484 	addi	r4,r16,1042
10102f00:	10c7c83a 	sub	r3,r2,r3
10102f04:	9108d83a 	srl	r4,r18,r4
10102f08:	88e2983a 	sll	r17,r17,r3
10102f0c:	2448b03a 	or	r4,r4,r17
10102f10:	010ce240 	call	1010ce24 <__floatunsidf>
10102f14:	017f8434 	movhi	r5,65040
10102f18:	01800044 	movi	r6,1
10102f1c:	1009883a 	mov	r4,r2
10102f20:	194b883a 	add	r5,r3,r5
10102f24:	843fffc4 	addi	r16,r16,-1
10102f28:	d9801115 	stw	r6,68(sp)
10102f2c:	000d883a 	mov	r6,zero
10102f30:	01cffe34 	movhi	r7,16376
10102f34:	010c3cc0 	call	1010c3cc <__subdf3>
10102f38:	0198dbf4 	movhi	r6,25455
10102f3c:	01cff4f4 	movhi	r7,16339
10102f40:	3190d844 	addi	r6,r6,17249
10102f44:	39e1e9c4 	addi	r7,r7,-30809
10102f48:	1009883a 	mov	r4,r2
10102f4c:	180b883a 	mov	r5,r3
10102f50:	010bcb40 	call	1010bcb4 <__muldf3>
10102f54:	01a2d874 	movhi	r6,35681
10102f58:	01cff1f4 	movhi	r7,16327
10102f5c:	31b22cc4 	addi	r6,r6,-14157
10102f60:	39e28a04 	addi	r7,r7,-30168
10102f64:	180b883a 	mov	r5,r3
10102f68:	1009883a 	mov	r4,r2
10102f6c:	010a8c80 	call	1010a8c8 <__adddf3>
10102f70:	8009883a 	mov	r4,r16
10102f74:	1029883a 	mov	r20,r2
10102f78:	1823883a 	mov	r17,r3
10102f7c:	010cd480 	call	1010cd48 <__floatsidf>
10102f80:	019427f4 	movhi	r6,20639
10102f84:	01cff4f4 	movhi	r7,16339
10102f88:	319e7ec4 	addi	r6,r6,31227
10102f8c:	39d104c4 	addi	r7,r7,17427
10102f90:	1009883a 	mov	r4,r2
10102f94:	180b883a 	mov	r5,r3
10102f98:	010bcb40 	call	1010bcb4 <__muldf3>
10102f9c:	100d883a 	mov	r6,r2
10102fa0:	180f883a 	mov	r7,r3
10102fa4:	a009883a 	mov	r4,r20
10102fa8:	880b883a 	mov	r5,r17
10102fac:	010a8c80 	call	1010a8c8 <__adddf3>
10102fb0:	1009883a 	mov	r4,r2
10102fb4:	180b883a 	mov	r5,r3
10102fb8:	1029883a 	mov	r20,r2
10102fbc:	1823883a 	mov	r17,r3
10102fc0:	010ccc80 	call	1010ccc8 <__fixdfsi>
10102fc4:	000d883a 	mov	r6,zero
10102fc8:	000f883a 	mov	r7,zero
10102fcc:	a009883a 	mov	r4,r20
10102fd0:	880b883a 	mov	r5,r17
10102fd4:	d8800515 	stw	r2,20(sp)
10102fd8:	010bbc00 	call	1010bbc0 <__ledf2>
10102fdc:	10028716 	blt	r2,zero,101039fc <_dtoa_r+0xc88>
10102fe0:	d8c00517 	ldw	r3,20(sp)
10102fe4:	00800584 	movi	r2,22
10102fe8:	10c27536 	bltu	r2,r3,101039c0 <_dtoa_r+0xc4c>
10102fec:	180490fa 	slli	r2,r3,3
10102ff0:	00c40474 	movhi	r3,4113
10102ff4:	18fdf804 	addi	r3,r3,-2080
10102ff8:	1885883a 	add	r2,r3,r2
10102ffc:	11000017 	ldw	r4,0(r2)
10103000:	11400117 	ldw	r5,4(r2)
10103004:	900d883a 	mov	r6,r18
10103008:	980f883a 	mov	r7,r19
1010300c:	010bae40 	call	1010bae4 <__gedf2>
10103010:	00828d0e 	bge	zero,r2,10103a48 <_dtoa_r+0xcd4>
10103014:	d9000517 	ldw	r4,20(sp)
10103018:	d8000e15 	stw	zero,56(sp)
1010301c:	213fffc4 	addi	r4,r4,-1
10103020:	d9000515 	stw	r4,20(sp)
10103024:	b42dc83a 	sub	r22,r22,r16
10103028:	b5bfffc4 	addi	r22,r22,-1
1010302c:	b0026f16 	blt	r22,zero,101039ec <_dtoa_r+0xc78>
10103030:	d8000815 	stw	zero,32(sp)
10103034:	d9c00517 	ldw	r7,20(sp)
10103038:	38026416 	blt	r7,zero,101039cc <_dtoa_r+0xc58>
1010303c:	b1ed883a 	add	r22,r22,r7
10103040:	d9c00d15 	stw	r7,52(sp)
10103044:	d8000a15 	stw	zero,40(sp)
10103048:	d9800317 	ldw	r6,12(sp)
1010304c:	00800244 	movi	r2,9
10103050:	11811436 	bltu	r2,r6,101034a4 <_dtoa_r+0x730>
10103054:	00800144 	movi	r2,5
10103058:	1184e10e 	bge	r2,r6,101043e0 <_dtoa_r+0x166c>
1010305c:	31bfff04 	addi	r6,r6,-4
10103060:	d9800315 	stw	r6,12(sp)
10103064:	0023883a 	mov	r17,zero
10103068:	d9800317 	ldw	r6,12(sp)
1010306c:	008000c4 	movi	r2,3
10103070:	30836726 	beq	r6,r2,10103e10 <_dtoa_r+0x109c>
10103074:	1183410e 	bge	r2,r6,10103d7c <_dtoa_r+0x1008>
10103078:	d9c00317 	ldw	r7,12(sp)
1010307c:	00800104 	movi	r2,4
10103080:	38827c26 	beq	r7,r2,10103a74 <_dtoa_r+0xd00>
10103084:	00800144 	movi	r2,5
10103088:	3884c41e 	bne	r7,r2,1010439c <_dtoa_r+0x1628>
1010308c:	00800044 	movi	r2,1
10103090:	d8800b15 	stw	r2,44(sp)
10103094:	d8c00517 	ldw	r3,20(sp)
10103098:	d9002217 	ldw	r4,136(sp)
1010309c:	1907883a 	add	r3,r3,r4
101030a0:	19800044 	addi	r6,r3,1
101030a4:	d8c00c15 	stw	r3,48(sp)
101030a8:	d9800615 	stw	r6,24(sp)
101030ac:	0183a40e 	bge	zero,r6,10103f40 <_dtoa_r+0x11cc>
101030b0:	d9800617 	ldw	r6,24(sp)
101030b4:	3021883a 	mov	r16,r6
101030b8:	e0001115 	stw	zero,68(fp)
101030bc:	008005c4 	movi	r2,23
101030c0:	1184c92e 	bgeu	r2,r6,101043e8 <_dtoa_r+0x1674>
101030c4:	00c00044 	movi	r3,1
101030c8:	00800104 	movi	r2,4
101030cc:	1085883a 	add	r2,r2,r2
101030d0:	11000504 	addi	r4,r2,20
101030d4:	180b883a 	mov	r5,r3
101030d8:	18c00044 	addi	r3,r3,1
101030dc:	313ffb2e 	bgeu	r6,r4,101030cc <__alt_data_end+0xfffe30cc>
101030e0:	e1401115 	stw	r5,68(fp)
101030e4:	e009883a 	mov	r4,fp
101030e8:	0105df80 	call	10105df8 <_Balloc>
101030ec:	d8800715 	stw	r2,28(sp)
101030f0:	e0801015 	stw	r2,64(fp)
101030f4:	00800384 	movi	r2,14
101030f8:	1400f736 	bltu	r2,r16,101034d8 <_dtoa_r+0x764>
101030fc:	8800f626 	beq	r17,zero,101034d8 <_dtoa_r+0x764>
10103100:	d9c00517 	ldw	r7,20(sp)
10103104:	01c39a0e 	bge	zero,r7,10103f70 <_dtoa_r+0x11fc>
10103108:	388003cc 	andi	r2,r7,15
1010310c:	100490fa 	slli	r2,r2,3
10103110:	382bd13a 	srai	r21,r7,4
10103114:	00c40474 	movhi	r3,4113
10103118:	18fdf804 	addi	r3,r3,-2080
1010311c:	1885883a 	add	r2,r3,r2
10103120:	a8c0040c 	andi	r3,r21,16
10103124:	12400017 	ldw	r9,0(r2)
10103128:	12000117 	ldw	r8,4(r2)
1010312c:	18037926 	beq	r3,zero,10103f14 <_dtoa_r+0x11a0>
10103130:	00840474 	movhi	r2,4113
10103134:	10bdee04 	addi	r2,r2,-2120
10103138:	11800817 	ldw	r6,32(r2)
1010313c:	11c00917 	ldw	r7,36(r2)
10103140:	9009883a 	mov	r4,r18
10103144:	980b883a 	mov	r5,r19
10103148:	da001715 	stw	r8,92(sp)
1010314c:	da401615 	stw	r9,88(sp)
10103150:	010b1740 	call	1010b174 <__divdf3>
10103154:	da001717 	ldw	r8,92(sp)
10103158:	da401617 	ldw	r9,88(sp)
1010315c:	ad4003cc 	andi	r21,r21,15
10103160:	040000c4 	movi	r16,3
10103164:	1023883a 	mov	r17,r2
10103168:	1829883a 	mov	r20,r3
1010316c:	a8001126 	beq	r21,zero,101031b4 <_dtoa_r+0x440>
10103170:	05c40474 	movhi	r23,4113
10103174:	bdfdee04 	addi	r23,r23,-2120
10103178:	4805883a 	mov	r2,r9
1010317c:	4007883a 	mov	r3,r8
10103180:	a980004c 	andi	r6,r21,1
10103184:	1009883a 	mov	r4,r2
10103188:	a82bd07a 	srai	r21,r21,1
1010318c:	180b883a 	mov	r5,r3
10103190:	30000426 	beq	r6,zero,101031a4 <_dtoa_r+0x430>
10103194:	b9800017 	ldw	r6,0(r23)
10103198:	b9c00117 	ldw	r7,4(r23)
1010319c:	84000044 	addi	r16,r16,1
101031a0:	010bcb40 	call	1010bcb4 <__muldf3>
101031a4:	bdc00204 	addi	r23,r23,8
101031a8:	a83ff51e 	bne	r21,zero,10103180 <__alt_data_end+0xfffe3180>
101031ac:	1013883a 	mov	r9,r2
101031b0:	1811883a 	mov	r8,r3
101031b4:	480d883a 	mov	r6,r9
101031b8:	400f883a 	mov	r7,r8
101031bc:	8809883a 	mov	r4,r17
101031c0:	a00b883a 	mov	r5,r20
101031c4:	010b1740 	call	1010b174 <__divdf3>
101031c8:	d8800f15 	stw	r2,60(sp)
101031cc:	d8c01015 	stw	r3,64(sp)
101031d0:	d8c00e17 	ldw	r3,56(sp)
101031d4:	18000626 	beq	r3,zero,101031f0 <_dtoa_r+0x47c>
101031d8:	d9000f17 	ldw	r4,60(sp)
101031dc:	d9401017 	ldw	r5,64(sp)
101031e0:	000d883a 	mov	r6,zero
101031e4:	01cffc34 	movhi	r7,16368
101031e8:	010bbc00 	call	1010bbc0 <__ledf2>
101031ec:	10040b16 	blt	r2,zero,1010421c <_dtoa_r+0x14a8>
101031f0:	8009883a 	mov	r4,r16
101031f4:	010cd480 	call	1010cd48 <__floatsidf>
101031f8:	d9800f17 	ldw	r6,60(sp)
101031fc:	d9c01017 	ldw	r7,64(sp)
10103200:	1009883a 	mov	r4,r2
10103204:	180b883a 	mov	r5,r3
10103208:	010bcb40 	call	1010bcb4 <__muldf3>
1010320c:	000d883a 	mov	r6,zero
10103210:	01d00734 	movhi	r7,16412
10103214:	1009883a 	mov	r4,r2
10103218:	180b883a 	mov	r5,r3
1010321c:	010a8c80 	call	1010a8c8 <__adddf3>
10103220:	1021883a 	mov	r16,r2
10103224:	d8800617 	ldw	r2,24(sp)
10103228:	047f3034 	movhi	r17,64704
1010322c:	1c63883a 	add	r17,r3,r17
10103230:	10031826 	beq	r2,zero,10103e94 <_dtoa_r+0x1120>
10103234:	d8c00517 	ldw	r3,20(sp)
10103238:	db000617 	ldw	r12,24(sp)
1010323c:	d8c01315 	stw	r3,76(sp)
10103240:	d9000b17 	ldw	r4,44(sp)
10103244:	20038f26 	beq	r4,zero,10104084 <_dtoa_r+0x1310>
10103248:	60bfffc4 	addi	r2,r12,-1
1010324c:	100490fa 	slli	r2,r2,3
10103250:	00c40474 	movhi	r3,4113
10103254:	18fdf804 	addi	r3,r3,-2080
10103258:	1885883a 	add	r2,r3,r2
1010325c:	11800017 	ldw	r6,0(r2)
10103260:	11c00117 	ldw	r7,4(r2)
10103264:	d8800717 	ldw	r2,28(sp)
10103268:	0009883a 	mov	r4,zero
1010326c:	014ff834 	movhi	r5,16352
10103270:	db001615 	stw	r12,88(sp)
10103274:	15c00044 	addi	r23,r2,1
10103278:	010b1740 	call	1010b174 <__divdf3>
1010327c:	800d883a 	mov	r6,r16
10103280:	880f883a 	mov	r7,r17
10103284:	1009883a 	mov	r4,r2
10103288:	180b883a 	mov	r5,r3
1010328c:	010c3cc0 	call	1010c3cc <__subdf3>
10103290:	d9401017 	ldw	r5,64(sp)
10103294:	d9000f17 	ldw	r4,60(sp)
10103298:	102b883a 	mov	r21,r2
1010329c:	d8c01215 	stw	r3,72(sp)
101032a0:	010ccc80 	call	1010ccc8 <__fixdfsi>
101032a4:	1009883a 	mov	r4,r2
101032a8:	1029883a 	mov	r20,r2
101032ac:	010cd480 	call	1010cd48 <__floatsidf>
101032b0:	d9000f17 	ldw	r4,60(sp)
101032b4:	d9401017 	ldw	r5,64(sp)
101032b8:	100d883a 	mov	r6,r2
101032bc:	180f883a 	mov	r7,r3
101032c0:	010c3cc0 	call	1010c3cc <__subdf3>
101032c4:	1823883a 	mov	r17,r3
101032c8:	d8c00717 	ldw	r3,28(sp)
101032cc:	d9401217 	ldw	r5,72(sp)
101032d0:	a2000c04 	addi	r8,r20,48
101032d4:	1021883a 	mov	r16,r2
101032d8:	1a000005 	stb	r8,0(r3)
101032dc:	800d883a 	mov	r6,r16
101032e0:	880f883a 	mov	r7,r17
101032e4:	a809883a 	mov	r4,r21
101032e8:	4029883a 	mov	r20,r8
101032ec:	010bae40 	call	1010bae4 <__gedf2>
101032f0:	00841d16 	blt	zero,r2,10104368 <_dtoa_r+0x15f4>
101032f4:	800d883a 	mov	r6,r16
101032f8:	880f883a 	mov	r7,r17
101032fc:	0009883a 	mov	r4,zero
10103300:	014ffc34 	movhi	r5,16368
10103304:	010c3cc0 	call	1010c3cc <__subdf3>
10103308:	d9401217 	ldw	r5,72(sp)
1010330c:	100d883a 	mov	r6,r2
10103310:	180f883a 	mov	r7,r3
10103314:	a809883a 	mov	r4,r21
10103318:	010bae40 	call	1010bae4 <__gedf2>
1010331c:	db001617 	ldw	r12,88(sp)
10103320:	00840e16 	blt	zero,r2,1010435c <_dtoa_r+0x15e8>
10103324:	00800044 	movi	r2,1
10103328:	13006b0e 	bge	r2,r12,101034d8 <_dtoa_r+0x764>
1010332c:	d9000717 	ldw	r4,28(sp)
10103330:	dd800f15 	stw	r22,60(sp)
10103334:	dcc01015 	stw	r19,64(sp)
10103338:	2319883a 	add	r12,r4,r12
1010333c:	dcc01217 	ldw	r19,72(sp)
10103340:	602d883a 	mov	r22,r12
10103344:	dc801215 	stw	r18,72(sp)
10103348:	b825883a 	mov	r18,r23
1010334c:	00000906 	br	10103374 <_dtoa_r+0x600>
10103350:	010c3cc0 	call	1010c3cc <__subdf3>
10103354:	a80d883a 	mov	r6,r21
10103358:	980f883a 	mov	r7,r19
1010335c:	1009883a 	mov	r4,r2
10103360:	180b883a 	mov	r5,r3
10103364:	010bbc00 	call	1010bbc0 <__ledf2>
10103368:	1003e816 	blt	r2,zero,1010430c <_dtoa_r+0x1598>
1010336c:	b825883a 	mov	r18,r23
10103370:	bd83e926 	beq	r23,r22,10104318 <_dtoa_r+0x15a4>
10103374:	a809883a 	mov	r4,r21
10103378:	980b883a 	mov	r5,r19
1010337c:	000d883a 	mov	r6,zero
10103380:	01d00934 	movhi	r7,16420
10103384:	010bcb40 	call	1010bcb4 <__muldf3>
10103388:	000d883a 	mov	r6,zero
1010338c:	01d00934 	movhi	r7,16420
10103390:	8009883a 	mov	r4,r16
10103394:	880b883a 	mov	r5,r17
10103398:	102b883a 	mov	r21,r2
1010339c:	1827883a 	mov	r19,r3
101033a0:	010bcb40 	call	1010bcb4 <__muldf3>
101033a4:	180b883a 	mov	r5,r3
101033a8:	1009883a 	mov	r4,r2
101033ac:	1821883a 	mov	r16,r3
101033b0:	1023883a 	mov	r17,r2
101033b4:	010ccc80 	call	1010ccc8 <__fixdfsi>
101033b8:	1009883a 	mov	r4,r2
101033bc:	1029883a 	mov	r20,r2
101033c0:	010cd480 	call	1010cd48 <__floatsidf>
101033c4:	8809883a 	mov	r4,r17
101033c8:	800b883a 	mov	r5,r16
101033cc:	100d883a 	mov	r6,r2
101033d0:	180f883a 	mov	r7,r3
101033d4:	010c3cc0 	call	1010c3cc <__subdf3>
101033d8:	a5000c04 	addi	r20,r20,48
101033dc:	a80d883a 	mov	r6,r21
101033e0:	980f883a 	mov	r7,r19
101033e4:	1009883a 	mov	r4,r2
101033e8:	180b883a 	mov	r5,r3
101033ec:	95000005 	stb	r20,0(r18)
101033f0:	1021883a 	mov	r16,r2
101033f4:	1823883a 	mov	r17,r3
101033f8:	010bbc00 	call	1010bbc0 <__ledf2>
101033fc:	bdc00044 	addi	r23,r23,1
10103400:	800d883a 	mov	r6,r16
10103404:	880f883a 	mov	r7,r17
10103408:	0009883a 	mov	r4,zero
1010340c:	014ffc34 	movhi	r5,16368
10103410:	103fcf0e 	bge	r2,zero,10103350 <__alt_data_end+0xfffe3350>
10103414:	d8c01317 	ldw	r3,76(sp)
10103418:	d8c00515 	stw	r3,20(sp)
1010341c:	d9400917 	ldw	r5,36(sp)
10103420:	e009883a 	mov	r4,fp
10103424:	0105ea00 	call	10105ea0 <_Bfree>
10103428:	d9000517 	ldw	r4,20(sp)
1010342c:	d9802317 	ldw	r6,140(sp)
10103430:	d9c02517 	ldw	r7,148(sp)
10103434:	b8000005 	stb	zero,0(r23)
10103438:	20800044 	addi	r2,r4,1
1010343c:	30800015 	stw	r2,0(r6)
10103440:	3802aa26 	beq	r7,zero,10103eec <_dtoa_r+0x1178>
10103444:	3dc00015 	stw	r23,0(r7)
10103448:	d8800717 	ldw	r2,28(sp)
1010344c:	003e7906 	br	10102e34 <__alt_data_end+0xfffe2e34>
10103450:	00800434 	movhi	r2,16
10103454:	10bfffc4 	addi	r2,r2,-1
10103458:	88a2703a 	and	r17,r17,r2
1010345c:	883e851e 	bne	r17,zero,10102e74 <__alt_data_end+0xfffe2e74>
10103460:	00840474 	movhi	r2,4113
10103464:	10bdd904 	addi	r2,r2,-2204
10103468:	003e8406 	br	10102e7c <__alt_data_end+0xfffe2e7c>
1010346c:	10c00204 	addi	r3,r2,8
10103470:	003e8706 	br	10102e90 <__alt_data_end+0xfffe2e90>
10103474:	01400434 	movhi	r5,16
10103478:	297fffc4 	addi	r5,r5,-1
1010347c:	994a703a 	and	r5,r19,r5
10103480:	9009883a 	mov	r4,r18
10103484:	843f0044 	addi	r16,r16,-1023
10103488:	294ffc34 	orhi	r5,r5,16368
1010348c:	dd800217 	ldw	r22,8(sp)
10103490:	d8001115 	stw	zero,68(sp)
10103494:	003ea506 	br	10102f2c <__alt_data_end+0xfffe2f2c>
10103498:	00840474 	movhi	r2,4113
1010349c:	10bdd004 	addi	r2,r2,-2240
101034a0:	003e6406 	br	10102e34 <__alt_data_end+0xfffe2e34>
101034a4:	e0001115 	stw	zero,68(fp)
101034a8:	000b883a 	mov	r5,zero
101034ac:	e009883a 	mov	r4,fp
101034b0:	0105df80 	call	10105df8 <_Balloc>
101034b4:	01bfffc4 	movi	r6,-1
101034b8:	01c00044 	movi	r7,1
101034bc:	d8800715 	stw	r2,28(sp)
101034c0:	d9800c15 	stw	r6,48(sp)
101034c4:	e0801015 	stw	r2,64(fp)
101034c8:	d8000315 	stw	zero,12(sp)
101034cc:	d9c00b15 	stw	r7,44(sp)
101034d0:	d9800615 	stw	r6,24(sp)
101034d4:	d8002215 	stw	zero,136(sp)
101034d8:	d8800117 	ldw	r2,4(sp)
101034dc:	10008916 	blt	r2,zero,10103704 <_dtoa_r+0x990>
101034e0:	d9000517 	ldw	r4,20(sp)
101034e4:	00c00384 	movi	r3,14
101034e8:	19008616 	blt	r3,r4,10103704 <_dtoa_r+0x990>
101034ec:	200490fa 	slli	r2,r4,3
101034f0:	00c40474 	movhi	r3,4113
101034f4:	d9802217 	ldw	r6,136(sp)
101034f8:	18fdf804 	addi	r3,r3,-2080
101034fc:	1885883a 	add	r2,r3,r2
10103500:	14000017 	ldw	r16,0(r2)
10103504:	14400117 	ldw	r17,4(r2)
10103508:	30016316 	blt	r6,zero,10103a98 <_dtoa_r+0xd24>
1010350c:	800d883a 	mov	r6,r16
10103510:	880f883a 	mov	r7,r17
10103514:	9009883a 	mov	r4,r18
10103518:	980b883a 	mov	r5,r19
1010351c:	010b1740 	call	1010b174 <__divdf3>
10103520:	180b883a 	mov	r5,r3
10103524:	1009883a 	mov	r4,r2
10103528:	010ccc80 	call	1010ccc8 <__fixdfsi>
1010352c:	1009883a 	mov	r4,r2
10103530:	102b883a 	mov	r21,r2
10103534:	010cd480 	call	1010cd48 <__floatsidf>
10103538:	800d883a 	mov	r6,r16
1010353c:	880f883a 	mov	r7,r17
10103540:	1009883a 	mov	r4,r2
10103544:	180b883a 	mov	r5,r3
10103548:	010bcb40 	call	1010bcb4 <__muldf3>
1010354c:	100d883a 	mov	r6,r2
10103550:	180f883a 	mov	r7,r3
10103554:	9009883a 	mov	r4,r18
10103558:	980b883a 	mov	r5,r19
1010355c:	010c3cc0 	call	1010c3cc <__subdf3>
10103560:	d9c00717 	ldw	r7,28(sp)
10103564:	1009883a 	mov	r4,r2
10103568:	a8800c04 	addi	r2,r21,48
1010356c:	38800005 	stb	r2,0(r7)
10103570:	3dc00044 	addi	r23,r7,1
10103574:	d9c00617 	ldw	r7,24(sp)
10103578:	01800044 	movi	r6,1
1010357c:	180b883a 	mov	r5,r3
10103580:	2005883a 	mov	r2,r4
10103584:	39803826 	beq	r7,r6,10103668 <_dtoa_r+0x8f4>
10103588:	000d883a 	mov	r6,zero
1010358c:	01d00934 	movhi	r7,16420
10103590:	010bcb40 	call	1010bcb4 <__muldf3>
10103594:	000d883a 	mov	r6,zero
10103598:	000f883a 	mov	r7,zero
1010359c:	1009883a 	mov	r4,r2
101035a0:	180b883a 	mov	r5,r3
101035a4:	1025883a 	mov	r18,r2
101035a8:	1827883a 	mov	r19,r3
101035ac:	010ba5c0 	call	1010ba5c <__eqdf2>
101035b0:	103f9a26 	beq	r2,zero,1010341c <__alt_data_end+0xfffe341c>
101035b4:	d9c00617 	ldw	r7,24(sp)
101035b8:	d8c00717 	ldw	r3,28(sp)
101035bc:	b829883a 	mov	r20,r23
101035c0:	38bfffc4 	addi	r2,r7,-1
101035c4:	18ad883a 	add	r22,r3,r2
101035c8:	00000a06 	br	101035f4 <_dtoa_r+0x880>
101035cc:	010bcb40 	call	1010bcb4 <__muldf3>
101035d0:	000d883a 	mov	r6,zero
101035d4:	000f883a 	mov	r7,zero
101035d8:	1009883a 	mov	r4,r2
101035dc:	180b883a 	mov	r5,r3
101035e0:	1025883a 	mov	r18,r2
101035e4:	1827883a 	mov	r19,r3
101035e8:	b829883a 	mov	r20,r23
101035ec:	010ba5c0 	call	1010ba5c <__eqdf2>
101035f0:	103f8a26 	beq	r2,zero,1010341c <__alt_data_end+0xfffe341c>
101035f4:	800d883a 	mov	r6,r16
101035f8:	880f883a 	mov	r7,r17
101035fc:	9009883a 	mov	r4,r18
10103600:	980b883a 	mov	r5,r19
10103604:	010b1740 	call	1010b174 <__divdf3>
10103608:	180b883a 	mov	r5,r3
1010360c:	1009883a 	mov	r4,r2
10103610:	010ccc80 	call	1010ccc8 <__fixdfsi>
10103614:	1009883a 	mov	r4,r2
10103618:	102b883a 	mov	r21,r2
1010361c:	010cd480 	call	1010cd48 <__floatsidf>
10103620:	800d883a 	mov	r6,r16
10103624:	880f883a 	mov	r7,r17
10103628:	1009883a 	mov	r4,r2
1010362c:	180b883a 	mov	r5,r3
10103630:	010bcb40 	call	1010bcb4 <__muldf3>
10103634:	100d883a 	mov	r6,r2
10103638:	180f883a 	mov	r7,r3
1010363c:	9009883a 	mov	r4,r18
10103640:	980b883a 	mov	r5,r19
10103644:	010c3cc0 	call	1010c3cc <__subdf3>
10103648:	aa000c04 	addi	r8,r21,48
1010364c:	a2000005 	stb	r8,0(r20)
10103650:	000d883a 	mov	r6,zero
10103654:	01d00934 	movhi	r7,16420
10103658:	1009883a 	mov	r4,r2
1010365c:	180b883a 	mov	r5,r3
10103660:	a5c00044 	addi	r23,r20,1
10103664:	b53fd91e 	bne	r22,r20,101035cc <__alt_data_end+0xfffe35cc>
10103668:	100d883a 	mov	r6,r2
1010366c:	180f883a 	mov	r7,r3
10103670:	1009883a 	mov	r4,r2
10103674:	180b883a 	mov	r5,r3
10103678:	010a8c80 	call	1010a8c8 <__adddf3>
1010367c:	100d883a 	mov	r6,r2
10103680:	180f883a 	mov	r7,r3
10103684:	8009883a 	mov	r4,r16
10103688:	880b883a 	mov	r5,r17
1010368c:	1027883a 	mov	r19,r2
10103690:	1825883a 	mov	r18,r3
10103694:	010bbc00 	call	1010bbc0 <__ledf2>
10103698:	10000816 	blt	r2,zero,101036bc <_dtoa_r+0x948>
1010369c:	980d883a 	mov	r6,r19
101036a0:	900f883a 	mov	r7,r18
101036a4:	8009883a 	mov	r4,r16
101036a8:	880b883a 	mov	r5,r17
101036ac:	010ba5c0 	call	1010ba5c <__eqdf2>
101036b0:	103f5a1e 	bne	r2,zero,1010341c <__alt_data_end+0xfffe341c>
101036b4:	ad40004c 	andi	r21,r21,1
101036b8:	a83f5826 	beq	r21,zero,1010341c <__alt_data_end+0xfffe341c>
101036bc:	bd3fffc3 	ldbu	r20,-1(r23)
101036c0:	b8bfffc4 	addi	r2,r23,-1
101036c4:	1007883a 	mov	r3,r2
101036c8:	01400e44 	movi	r5,57
101036cc:	d9800717 	ldw	r6,28(sp)
101036d0:	00000506 	br	101036e8 <_dtoa_r+0x974>
101036d4:	18ffffc4 	addi	r3,r3,-1
101036d8:	11824726 	beq	r2,r6,10103ff8 <_dtoa_r+0x1284>
101036dc:	1d000003 	ldbu	r20,0(r3)
101036e0:	102f883a 	mov	r23,r2
101036e4:	10bfffc4 	addi	r2,r2,-1
101036e8:	a1003fcc 	andi	r4,r20,255
101036ec:	2100201c 	xori	r4,r4,128
101036f0:	213fe004 	addi	r4,r4,-128
101036f4:	217ff726 	beq	r4,r5,101036d4 <__alt_data_end+0xfffe36d4>
101036f8:	a2000044 	addi	r8,r20,1
101036fc:	12000005 	stb	r8,0(r2)
10103700:	003f4606 	br	1010341c <__alt_data_end+0xfffe341c>
10103704:	d9000b17 	ldw	r4,44(sp)
10103708:	2000c826 	beq	r4,zero,10103a2c <_dtoa_r+0xcb8>
1010370c:	d9800317 	ldw	r6,12(sp)
10103710:	00c00044 	movi	r3,1
10103714:	1980f90e 	bge	r3,r6,10103afc <_dtoa_r+0xd88>
10103718:	d8800617 	ldw	r2,24(sp)
1010371c:	d8c00a17 	ldw	r3,40(sp)
10103720:	157fffc4 	addi	r21,r2,-1
10103724:	1d41f316 	blt	r3,r21,10103ef4 <_dtoa_r+0x1180>
10103728:	1d6bc83a 	sub	r21,r3,r21
1010372c:	d9c00617 	ldw	r7,24(sp)
10103730:	3802aa16 	blt	r7,zero,101041dc <_dtoa_r+0x1468>
10103734:	dd000817 	ldw	r20,32(sp)
10103738:	d8800617 	ldw	r2,24(sp)
1010373c:	d8c00817 	ldw	r3,32(sp)
10103740:	01400044 	movi	r5,1
10103744:	e009883a 	mov	r4,fp
10103748:	1887883a 	add	r3,r3,r2
1010374c:	d8c00815 	stw	r3,32(sp)
10103750:	b0ad883a 	add	r22,r22,r2
10103754:	01062040 	call	10106204 <__i2b>
10103758:	1023883a 	mov	r17,r2
1010375c:	a0000826 	beq	r20,zero,10103780 <_dtoa_r+0xa0c>
10103760:	0580070e 	bge	zero,r22,10103780 <_dtoa_r+0xa0c>
10103764:	a005883a 	mov	r2,r20
10103768:	b500b916 	blt	r22,r20,10103a50 <_dtoa_r+0xcdc>
1010376c:	d9000817 	ldw	r4,32(sp)
10103770:	a0a9c83a 	sub	r20,r20,r2
10103774:	b0adc83a 	sub	r22,r22,r2
10103778:	2089c83a 	sub	r4,r4,r2
1010377c:	d9000815 	stw	r4,32(sp)
10103780:	d9800a17 	ldw	r6,40(sp)
10103784:	0181810e 	bge	zero,r6,10103d8c <_dtoa_r+0x1018>
10103788:	d9c00b17 	ldw	r7,44(sp)
1010378c:	3800b326 	beq	r7,zero,10103a5c <_dtoa_r+0xce8>
10103790:	a800b226 	beq	r21,zero,10103a5c <_dtoa_r+0xce8>
10103794:	880b883a 	mov	r5,r17
10103798:	a80d883a 	mov	r6,r21
1010379c:	e009883a 	mov	r4,fp
101037a0:	01064380 	call	10106438 <__pow5mult>
101037a4:	d9800917 	ldw	r6,36(sp)
101037a8:	100b883a 	mov	r5,r2
101037ac:	e009883a 	mov	r4,fp
101037b0:	1023883a 	mov	r17,r2
101037b4:	01062400 	call	10106240 <__multiply>
101037b8:	1021883a 	mov	r16,r2
101037bc:	d8800a17 	ldw	r2,40(sp)
101037c0:	d9400917 	ldw	r5,36(sp)
101037c4:	e009883a 	mov	r4,fp
101037c8:	1545c83a 	sub	r2,r2,r21
101037cc:	d8800a15 	stw	r2,40(sp)
101037d0:	0105ea00 	call	10105ea0 <_Bfree>
101037d4:	d8c00a17 	ldw	r3,40(sp)
101037d8:	18009f1e 	bne	r3,zero,10103a58 <_dtoa_r+0xce4>
101037dc:	05c00044 	movi	r23,1
101037e0:	e009883a 	mov	r4,fp
101037e4:	b80b883a 	mov	r5,r23
101037e8:	01062040 	call	10106204 <__i2b>
101037ec:	d9000d17 	ldw	r4,52(sp)
101037f0:	102b883a 	mov	r21,r2
101037f4:	2000ce26 	beq	r4,zero,10103b30 <_dtoa_r+0xdbc>
101037f8:	200d883a 	mov	r6,r4
101037fc:	100b883a 	mov	r5,r2
10103800:	e009883a 	mov	r4,fp
10103804:	01064380 	call	10106438 <__pow5mult>
10103808:	d9800317 	ldw	r6,12(sp)
1010380c:	102b883a 	mov	r21,r2
10103810:	b981810e 	bge	r23,r6,10103e18 <_dtoa_r+0x10a4>
10103814:	0027883a 	mov	r19,zero
10103818:	a8800417 	ldw	r2,16(r21)
1010381c:	05c00804 	movi	r23,32
10103820:	10800104 	addi	r2,r2,4
10103824:	1085883a 	add	r2,r2,r2
10103828:	1085883a 	add	r2,r2,r2
1010382c:	a885883a 	add	r2,r21,r2
10103830:	11000017 	ldw	r4,0(r2)
10103834:	01060ec0 	call	101060ec <__hi0bits>
10103838:	b885c83a 	sub	r2,r23,r2
1010383c:	1585883a 	add	r2,r2,r22
10103840:	108007cc 	andi	r2,r2,31
10103844:	1000b326 	beq	r2,zero,10103b14 <_dtoa_r+0xda0>
10103848:	00c00804 	movi	r3,32
1010384c:	1887c83a 	sub	r3,r3,r2
10103850:	01000104 	movi	r4,4
10103854:	20c2cd0e 	bge	r4,r3,1010438c <_dtoa_r+0x1618>
10103858:	00c00704 	movi	r3,28
1010385c:	1885c83a 	sub	r2,r3,r2
10103860:	d8c00817 	ldw	r3,32(sp)
10103864:	a0a9883a 	add	r20,r20,r2
10103868:	b0ad883a 	add	r22,r22,r2
1010386c:	1887883a 	add	r3,r3,r2
10103870:	d8c00815 	stw	r3,32(sp)
10103874:	d9800817 	ldw	r6,32(sp)
10103878:	0180040e 	bge	zero,r6,1010388c <_dtoa_r+0xb18>
1010387c:	800b883a 	mov	r5,r16
10103880:	e009883a 	mov	r4,fp
10103884:	01065780 	call	10106578 <__lshift>
10103888:	1021883a 	mov	r16,r2
1010388c:	0580050e 	bge	zero,r22,101038a4 <_dtoa_r+0xb30>
10103890:	a80b883a 	mov	r5,r21
10103894:	b00d883a 	mov	r6,r22
10103898:	e009883a 	mov	r4,fp
1010389c:	01065780 	call	10106578 <__lshift>
101038a0:	102b883a 	mov	r21,r2
101038a4:	d9c00e17 	ldw	r7,56(sp)
101038a8:	3801211e 	bne	r7,zero,10103d30 <_dtoa_r+0xfbc>
101038ac:	d9800617 	ldw	r6,24(sp)
101038b0:	0181380e 	bge	zero,r6,10103d94 <_dtoa_r+0x1020>
101038b4:	d8c00b17 	ldw	r3,44(sp)
101038b8:	1800ab1e 	bne	r3,zero,10103b68 <_dtoa_r+0xdf4>
101038bc:	dc800717 	ldw	r18,28(sp)
101038c0:	dcc00617 	ldw	r19,24(sp)
101038c4:	9029883a 	mov	r20,r18
101038c8:	00000206 	br	101038d4 <_dtoa_r+0xb60>
101038cc:	0105ec80 	call	10105ec8 <__multadd>
101038d0:	1021883a 	mov	r16,r2
101038d4:	a80b883a 	mov	r5,r21
101038d8:	8009883a 	mov	r4,r16
101038dc:	0102b740 	call	10102b74 <quorem>
101038e0:	10800c04 	addi	r2,r2,48
101038e4:	90800005 	stb	r2,0(r18)
101038e8:	94800044 	addi	r18,r18,1
101038ec:	9507c83a 	sub	r3,r18,r20
101038f0:	000f883a 	mov	r7,zero
101038f4:	01800284 	movi	r6,10
101038f8:	800b883a 	mov	r5,r16
101038fc:	e009883a 	mov	r4,fp
10103900:	1cfff216 	blt	r3,r19,101038cc <__alt_data_end+0xfffe38cc>
10103904:	1011883a 	mov	r8,r2
10103908:	d8800617 	ldw	r2,24(sp)
1010390c:	0082370e 	bge	zero,r2,101041ec <_dtoa_r+0x1478>
10103910:	d9000717 	ldw	r4,28(sp)
10103914:	0025883a 	mov	r18,zero
10103918:	20af883a 	add	r23,r4,r2
1010391c:	01800044 	movi	r6,1
10103920:	800b883a 	mov	r5,r16
10103924:	e009883a 	mov	r4,fp
10103928:	da001715 	stw	r8,92(sp)
1010392c:	01065780 	call	10106578 <__lshift>
10103930:	a80b883a 	mov	r5,r21
10103934:	1009883a 	mov	r4,r2
10103938:	d8800915 	stw	r2,36(sp)
1010393c:	01066c00 	call	101066c0 <__mcmp>
10103940:	da001717 	ldw	r8,92(sp)
10103944:	0081800e 	bge	zero,r2,10103f48 <_dtoa_r+0x11d4>
10103948:	b93fffc3 	ldbu	r4,-1(r23)
1010394c:	b8bfffc4 	addi	r2,r23,-1
10103950:	1007883a 	mov	r3,r2
10103954:	01800e44 	movi	r6,57
10103958:	d9c00717 	ldw	r7,28(sp)
1010395c:	00000506 	br	10103974 <_dtoa_r+0xc00>
10103960:	18ffffc4 	addi	r3,r3,-1
10103964:	11c12326 	beq	r2,r7,10103df4 <_dtoa_r+0x1080>
10103968:	19000003 	ldbu	r4,0(r3)
1010396c:	102f883a 	mov	r23,r2
10103970:	10bfffc4 	addi	r2,r2,-1
10103974:	21403fcc 	andi	r5,r4,255
10103978:	2940201c 	xori	r5,r5,128
1010397c:	297fe004 	addi	r5,r5,-128
10103980:	29bff726 	beq	r5,r6,10103960 <__alt_data_end+0xfffe3960>
10103984:	21000044 	addi	r4,r4,1
10103988:	11000005 	stb	r4,0(r2)
1010398c:	a80b883a 	mov	r5,r21
10103990:	e009883a 	mov	r4,fp
10103994:	0105ea00 	call	10105ea0 <_Bfree>
10103998:	883ea026 	beq	r17,zero,1010341c <__alt_data_end+0xfffe341c>
1010399c:	90000426 	beq	r18,zero,101039b0 <_dtoa_r+0xc3c>
101039a0:	94400326 	beq	r18,r17,101039b0 <_dtoa_r+0xc3c>
101039a4:	900b883a 	mov	r5,r18
101039a8:	e009883a 	mov	r4,fp
101039ac:	0105ea00 	call	10105ea0 <_Bfree>
101039b0:	880b883a 	mov	r5,r17
101039b4:	e009883a 	mov	r4,fp
101039b8:	0105ea00 	call	10105ea0 <_Bfree>
101039bc:	003e9706 	br	1010341c <__alt_data_end+0xfffe341c>
101039c0:	01800044 	movi	r6,1
101039c4:	d9800e15 	stw	r6,56(sp)
101039c8:	003d9606 	br	10103024 <__alt_data_end+0xfffe3024>
101039cc:	d8800817 	ldw	r2,32(sp)
101039d0:	d8c00517 	ldw	r3,20(sp)
101039d4:	d8000d15 	stw	zero,52(sp)
101039d8:	10c5c83a 	sub	r2,r2,r3
101039dc:	00c9c83a 	sub	r4,zero,r3
101039e0:	d8800815 	stw	r2,32(sp)
101039e4:	d9000a15 	stw	r4,40(sp)
101039e8:	003d9706 	br	10103048 <__alt_data_end+0xfffe3048>
101039ec:	05adc83a 	sub	r22,zero,r22
101039f0:	dd800815 	stw	r22,32(sp)
101039f4:	002d883a 	mov	r22,zero
101039f8:	003d8e06 	br	10103034 <__alt_data_end+0xfffe3034>
101039fc:	d9000517 	ldw	r4,20(sp)
10103a00:	010cd480 	call	1010cd48 <__floatsidf>
10103a04:	100d883a 	mov	r6,r2
10103a08:	180f883a 	mov	r7,r3
10103a0c:	a009883a 	mov	r4,r20
10103a10:	880b883a 	mov	r5,r17
10103a14:	010ba5c0 	call	1010ba5c <__eqdf2>
10103a18:	103d7126 	beq	r2,zero,10102fe0 <__alt_data_end+0xfffe2fe0>
10103a1c:	d9c00517 	ldw	r7,20(sp)
10103a20:	39ffffc4 	addi	r7,r7,-1
10103a24:	d9c00515 	stw	r7,20(sp)
10103a28:	003d6d06 	br	10102fe0 <__alt_data_end+0xfffe2fe0>
10103a2c:	dd400a17 	ldw	r21,40(sp)
10103a30:	dd000817 	ldw	r20,32(sp)
10103a34:	0023883a 	mov	r17,zero
10103a38:	003f4806 	br	1010375c <__alt_data_end+0xfffe375c>
10103a3c:	10e3c83a 	sub	r17,r2,r3
10103a40:	9448983a 	sll	r4,r18,r17
10103a44:	003d3206 	br	10102f10 <__alt_data_end+0xfffe2f10>
10103a48:	d8000e15 	stw	zero,56(sp)
10103a4c:	003d7506 	br	10103024 <__alt_data_end+0xfffe3024>
10103a50:	b005883a 	mov	r2,r22
10103a54:	003f4506 	br	1010376c <__alt_data_end+0xfffe376c>
10103a58:	dc000915 	stw	r16,36(sp)
10103a5c:	d9800a17 	ldw	r6,40(sp)
10103a60:	d9400917 	ldw	r5,36(sp)
10103a64:	e009883a 	mov	r4,fp
10103a68:	01064380 	call	10106438 <__pow5mult>
10103a6c:	1021883a 	mov	r16,r2
10103a70:	003f5a06 	br	101037dc <__alt_data_end+0xfffe37dc>
10103a74:	01c00044 	movi	r7,1
10103a78:	d9c00b15 	stw	r7,44(sp)
10103a7c:	d8802217 	ldw	r2,136(sp)
10103a80:	0081280e 	bge	zero,r2,10103f24 <_dtoa_r+0x11b0>
10103a84:	100d883a 	mov	r6,r2
10103a88:	1021883a 	mov	r16,r2
10103a8c:	d8800c15 	stw	r2,48(sp)
10103a90:	d8800615 	stw	r2,24(sp)
10103a94:	003d8806 	br	101030b8 <__alt_data_end+0xfffe30b8>
10103a98:	d8800617 	ldw	r2,24(sp)
10103a9c:	00be9b16 	blt	zero,r2,1010350c <__alt_data_end+0xfffe350c>
10103aa0:	10010f1e 	bne	r2,zero,10103ee0 <_dtoa_r+0x116c>
10103aa4:	880b883a 	mov	r5,r17
10103aa8:	000d883a 	mov	r6,zero
10103aac:	01d00534 	movhi	r7,16404
10103ab0:	8009883a 	mov	r4,r16
10103ab4:	010bcb40 	call	1010bcb4 <__muldf3>
10103ab8:	900d883a 	mov	r6,r18
10103abc:	980f883a 	mov	r7,r19
10103ac0:	1009883a 	mov	r4,r2
10103ac4:	180b883a 	mov	r5,r3
10103ac8:	010bae40 	call	1010bae4 <__gedf2>
10103acc:	002b883a 	mov	r21,zero
10103ad0:	0023883a 	mov	r17,zero
10103ad4:	1000bf16 	blt	r2,zero,10103dd4 <_dtoa_r+0x1060>
10103ad8:	d9802217 	ldw	r6,136(sp)
10103adc:	ddc00717 	ldw	r23,28(sp)
10103ae0:	018c303a 	nor	r6,zero,r6
10103ae4:	d9800515 	stw	r6,20(sp)
10103ae8:	a80b883a 	mov	r5,r21
10103aec:	e009883a 	mov	r4,fp
10103af0:	0105ea00 	call	10105ea0 <_Bfree>
10103af4:	883e4926 	beq	r17,zero,1010341c <__alt_data_end+0xfffe341c>
10103af8:	003fad06 	br	101039b0 <__alt_data_end+0xfffe39b0>
10103afc:	d9c01117 	ldw	r7,68(sp)
10103b00:	3801bc26 	beq	r7,zero,101041f4 <_dtoa_r+0x1480>
10103b04:	10810cc4 	addi	r2,r2,1075
10103b08:	dd400a17 	ldw	r21,40(sp)
10103b0c:	dd000817 	ldw	r20,32(sp)
10103b10:	003f0a06 	br	1010373c <__alt_data_end+0xfffe373c>
10103b14:	00800704 	movi	r2,28
10103b18:	d9000817 	ldw	r4,32(sp)
10103b1c:	a0a9883a 	add	r20,r20,r2
10103b20:	b0ad883a 	add	r22,r22,r2
10103b24:	2089883a 	add	r4,r4,r2
10103b28:	d9000815 	stw	r4,32(sp)
10103b2c:	003f5106 	br	10103874 <__alt_data_end+0xfffe3874>
10103b30:	d8c00317 	ldw	r3,12(sp)
10103b34:	b8c1fc0e 	bge	r23,r3,10104328 <_dtoa_r+0x15b4>
10103b38:	0027883a 	mov	r19,zero
10103b3c:	b805883a 	mov	r2,r23
10103b40:	003f3e06 	br	1010383c <__alt_data_end+0xfffe383c>
10103b44:	880b883a 	mov	r5,r17
10103b48:	e009883a 	mov	r4,fp
10103b4c:	000f883a 	mov	r7,zero
10103b50:	01800284 	movi	r6,10
10103b54:	0105ec80 	call	10105ec8 <__multadd>
10103b58:	d9000c17 	ldw	r4,48(sp)
10103b5c:	1023883a 	mov	r17,r2
10103b60:	0102040e 	bge	zero,r4,10104374 <_dtoa_r+0x1600>
10103b64:	d9000615 	stw	r4,24(sp)
10103b68:	0500050e 	bge	zero,r20,10103b80 <_dtoa_r+0xe0c>
10103b6c:	880b883a 	mov	r5,r17
10103b70:	a00d883a 	mov	r6,r20
10103b74:	e009883a 	mov	r4,fp
10103b78:	01065780 	call	10106578 <__lshift>
10103b7c:	1023883a 	mov	r17,r2
10103b80:	9801241e 	bne	r19,zero,10104014 <_dtoa_r+0x12a0>
10103b84:	8829883a 	mov	r20,r17
10103b88:	d9000617 	ldw	r4,24(sp)
10103b8c:	dcc00717 	ldw	r19,28(sp)
10103b90:	9480004c 	andi	r18,r18,1
10103b94:	20bfffc4 	addi	r2,r4,-1
10103b98:	9885883a 	add	r2,r19,r2
10103b9c:	d8800415 	stw	r2,16(sp)
10103ba0:	dc800615 	stw	r18,24(sp)
10103ba4:	a80b883a 	mov	r5,r21
10103ba8:	8009883a 	mov	r4,r16
10103bac:	0102b740 	call	10102b74 <quorem>
10103bb0:	880b883a 	mov	r5,r17
10103bb4:	8009883a 	mov	r4,r16
10103bb8:	102f883a 	mov	r23,r2
10103bbc:	01066c00 	call	101066c0 <__mcmp>
10103bc0:	a80b883a 	mov	r5,r21
10103bc4:	a00d883a 	mov	r6,r20
10103bc8:	e009883a 	mov	r4,fp
10103bcc:	102d883a 	mov	r22,r2
10103bd0:	01067200 	call	10106720 <__mdiff>
10103bd4:	1007883a 	mov	r3,r2
10103bd8:	10800317 	ldw	r2,12(r2)
10103bdc:	bc800c04 	addi	r18,r23,48
10103be0:	180b883a 	mov	r5,r3
10103be4:	10004e1e 	bne	r2,zero,10103d20 <_dtoa_r+0xfac>
10103be8:	8009883a 	mov	r4,r16
10103bec:	d8c01615 	stw	r3,88(sp)
10103bf0:	01066c00 	call	101066c0 <__mcmp>
10103bf4:	d8c01617 	ldw	r3,88(sp)
10103bf8:	e009883a 	mov	r4,fp
10103bfc:	d8801615 	stw	r2,88(sp)
10103c00:	180b883a 	mov	r5,r3
10103c04:	0105ea00 	call	10105ea0 <_Bfree>
10103c08:	d8801617 	ldw	r2,88(sp)
10103c0c:	1000041e 	bne	r2,zero,10103c20 <_dtoa_r+0xeac>
10103c10:	d9800317 	ldw	r6,12(sp)
10103c14:	3000021e 	bne	r6,zero,10103c20 <_dtoa_r+0xeac>
10103c18:	d8c00617 	ldw	r3,24(sp)
10103c1c:	18003726 	beq	r3,zero,10103cfc <_dtoa_r+0xf88>
10103c20:	b0002016 	blt	r22,zero,10103ca4 <_dtoa_r+0xf30>
10103c24:	b000041e 	bne	r22,zero,10103c38 <_dtoa_r+0xec4>
10103c28:	d9000317 	ldw	r4,12(sp)
10103c2c:	2000021e 	bne	r4,zero,10103c38 <_dtoa_r+0xec4>
10103c30:	d8c00617 	ldw	r3,24(sp)
10103c34:	18001b26 	beq	r3,zero,10103ca4 <_dtoa_r+0xf30>
10103c38:	00810716 	blt	zero,r2,10104058 <_dtoa_r+0x12e4>
10103c3c:	d8c00417 	ldw	r3,16(sp)
10103c40:	9d800044 	addi	r22,r19,1
10103c44:	9c800005 	stb	r18,0(r19)
10103c48:	b02f883a 	mov	r23,r22
10103c4c:	98c10626 	beq	r19,r3,10104068 <_dtoa_r+0x12f4>
10103c50:	800b883a 	mov	r5,r16
10103c54:	000f883a 	mov	r7,zero
10103c58:	01800284 	movi	r6,10
10103c5c:	e009883a 	mov	r4,fp
10103c60:	0105ec80 	call	10105ec8 <__multadd>
10103c64:	1021883a 	mov	r16,r2
10103c68:	000f883a 	mov	r7,zero
10103c6c:	01800284 	movi	r6,10
10103c70:	880b883a 	mov	r5,r17
10103c74:	e009883a 	mov	r4,fp
10103c78:	8d002526 	beq	r17,r20,10103d10 <_dtoa_r+0xf9c>
10103c7c:	0105ec80 	call	10105ec8 <__multadd>
10103c80:	a00b883a 	mov	r5,r20
10103c84:	000f883a 	mov	r7,zero
10103c88:	01800284 	movi	r6,10
10103c8c:	e009883a 	mov	r4,fp
10103c90:	1023883a 	mov	r17,r2
10103c94:	0105ec80 	call	10105ec8 <__multadd>
10103c98:	1029883a 	mov	r20,r2
10103c9c:	b027883a 	mov	r19,r22
10103ca0:	003fc006 	br	10103ba4 <__alt_data_end+0xfffe3ba4>
10103ca4:	9011883a 	mov	r8,r18
10103ca8:	00800e0e 	bge	zero,r2,10103ce4 <_dtoa_r+0xf70>
10103cac:	800b883a 	mov	r5,r16
10103cb0:	01800044 	movi	r6,1
10103cb4:	e009883a 	mov	r4,fp
10103cb8:	da001715 	stw	r8,92(sp)
10103cbc:	01065780 	call	10106578 <__lshift>
10103cc0:	a80b883a 	mov	r5,r21
10103cc4:	1009883a 	mov	r4,r2
10103cc8:	1021883a 	mov	r16,r2
10103ccc:	01066c00 	call	101066c0 <__mcmp>
10103cd0:	da001717 	ldw	r8,92(sp)
10103cd4:	0081960e 	bge	zero,r2,10104330 <_dtoa_r+0x15bc>
10103cd8:	00800e44 	movi	r2,57
10103cdc:	40817026 	beq	r8,r2,101042a0 <_dtoa_r+0x152c>
10103ce0:	ba000c44 	addi	r8,r23,49
10103ce4:	8825883a 	mov	r18,r17
10103ce8:	9dc00044 	addi	r23,r19,1
10103cec:	9a000005 	stb	r8,0(r19)
10103cf0:	a023883a 	mov	r17,r20
10103cf4:	dc000915 	stw	r16,36(sp)
10103cf8:	003f2406 	br	1010398c <__alt_data_end+0xfffe398c>
10103cfc:	00800e44 	movi	r2,57
10103d00:	9011883a 	mov	r8,r18
10103d04:	90816626 	beq	r18,r2,101042a0 <_dtoa_r+0x152c>
10103d08:	05bff516 	blt	zero,r22,10103ce0 <__alt_data_end+0xfffe3ce0>
10103d0c:	003ff506 	br	10103ce4 <__alt_data_end+0xfffe3ce4>
10103d10:	0105ec80 	call	10105ec8 <__multadd>
10103d14:	1023883a 	mov	r17,r2
10103d18:	1029883a 	mov	r20,r2
10103d1c:	003fdf06 	br	10103c9c <__alt_data_end+0xfffe3c9c>
10103d20:	e009883a 	mov	r4,fp
10103d24:	0105ea00 	call	10105ea0 <_Bfree>
10103d28:	00800044 	movi	r2,1
10103d2c:	003fbc06 	br	10103c20 <__alt_data_end+0xfffe3c20>
10103d30:	a80b883a 	mov	r5,r21
10103d34:	8009883a 	mov	r4,r16
10103d38:	01066c00 	call	101066c0 <__mcmp>
10103d3c:	103edb0e 	bge	r2,zero,101038ac <__alt_data_end+0xfffe38ac>
10103d40:	800b883a 	mov	r5,r16
10103d44:	000f883a 	mov	r7,zero
10103d48:	01800284 	movi	r6,10
10103d4c:	e009883a 	mov	r4,fp
10103d50:	0105ec80 	call	10105ec8 <__multadd>
10103d54:	1021883a 	mov	r16,r2
10103d58:	d8800517 	ldw	r2,20(sp)
10103d5c:	d8c00b17 	ldw	r3,44(sp)
10103d60:	10bfffc4 	addi	r2,r2,-1
10103d64:	d8800515 	stw	r2,20(sp)
10103d68:	183f761e 	bne	r3,zero,10103b44 <__alt_data_end+0xfffe3b44>
10103d6c:	d9000c17 	ldw	r4,48(sp)
10103d70:	0101730e 	bge	zero,r4,10104340 <_dtoa_r+0x15cc>
10103d74:	d9000615 	stw	r4,24(sp)
10103d78:	003ed006 	br	101038bc <__alt_data_end+0xfffe38bc>
10103d7c:	00800084 	movi	r2,2
10103d80:	3081861e 	bne	r6,r2,1010439c <_dtoa_r+0x1628>
10103d84:	d8000b15 	stw	zero,44(sp)
10103d88:	003f3c06 	br	10103a7c <__alt_data_end+0xfffe3a7c>
10103d8c:	dc000917 	ldw	r16,36(sp)
10103d90:	003e9206 	br	101037dc <__alt_data_end+0xfffe37dc>
10103d94:	d9c00317 	ldw	r7,12(sp)
10103d98:	00800084 	movi	r2,2
10103d9c:	11fec50e 	bge	r2,r7,101038b4 <__alt_data_end+0xfffe38b4>
10103da0:	d9000617 	ldw	r4,24(sp)
10103da4:	20013c1e 	bne	r4,zero,10104298 <_dtoa_r+0x1524>
10103da8:	a80b883a 	mov	r5,r21
10103dac:	000f883a 	mov	r7,zero
10103db0:	01800144 	movi	r6,5
10103db4:	e009883a 	mov	r4,fp
10103db8:	0105ec80 	call	10105ec8 <__multadd>
10103dbc:	100b883a 	mov	r5,r2
10103dc0:	8009883a 	mov	r4,r16
10103dc4:	102b883a 	mov	r21,r2
10103dc8:	01066c00 	call	101066c0 <__mcmp>
10103dcc:	dc000915 	stw	r16,36(sp)
10103dd0:	00bf410e 	bge	zero,r2,10103ad8 <__alt_data_end+0xfffe3ad8>
10103dd4:	d9c00717 	ldw	r7,28(sp)
10103dd8:	00800c44 	movi	r2,49
10103ddc:	38800005 	stb	r2,0(r7)
10103de0:	d8800517 	ldw	r2,20(sp)
10103de4:	3dc00044 	addi	r23,r7,1
10103de8:	10800044 	addi	r2,r2,1
10103dec:	d8800515 	stw	r2,20(sp)
10103df0:	003f3d06 	br	10103ae8 <__alt_data_end+0xfffe3ae8>
10103df4:	d9800517 	ldw	r6,20(sp)
10103df8:	d9c00717 	ldw	r7,28(sp)
10103dfc:	00800c44 	movi	r2,49
10103e00:	31800044 	addi	r6,r6,1
10103e04:	d9800515 	stw	r6,20(sp)
10103e08:	38800005 	stb	r2,0(r7)
10103e0c:	003edf06 	br	1010398c <__alt_data_end+0xfffe398c>
10103e10:	d8000b15 	stw	zero,44(sp)
10103e14:	003c9f06 	br	10103094 <__alt_data_end+0xfffe3094>
10103e18:	903e7e1e 	bne	r18,zero,10103814 <__alt_data_end+0xfffe3814>
10103e1c:	00800434 	movhi	r2,16
10103e20:	10bfffc4 	addi	r2,r2,-1
10103e24:	9884703a 	and	r2,r19,r2
10103e28:	1000ea1e 	bne	r2,zero,101041d4 <_dtoa_r+0x1460>
10103e2c:	9cdffc2c 	andhi	r19,r19,32752
10103e30:	9800e826 	beq	r19,zero,101041d4 <_dtoa_r+0x1460>
10103e34:	d9c00817 	ldw	r7,32(sp)
10103e38:	b5800044 	addi	r22,r22,1
10103e3c:	04c00044 	movi	r19,1
10103e40:	39c00044 	addi	r7,r7,1
10103e44:	d9c00815 	stw	r7,32(sp)
10103e48:	d8800d17 	ldw	r2,52(sp)
10103e4c:	103e721e 	bne	r2,zero,10103818 <__alt_data_end+0xfffe3818>
10103e50:	00800044 	movi	r2,1
10103e54:	003e7906 	br	1010383c <__alt_data_end+0xfffe383c>
10103e58:	8009883a 	mov	r4,r16
10103e5c:	010cd480 	call	1010cd48 <__floatsidf>
10103e60:	d9800f17 	ldw	r6,60(sp)
10103e64:	d9c01017 	ldw	r7,64(sp)
10103e68:	1009883a 	mov	r4,r2
10103e6c:	180b883a 	mov	r5,r3
10103e70:	010bcb40 	call	1010bcb4 <__muldf3>
10103e74:	000d883a 	mov	r6,zero
10103e78:	01d00734 	movhi	r7,16412
10103e7c:	1009883a 	mov	r4,r2
10103e80:	180b883a 	mov	r5,r3
10103e84:	010a8c80 	call	1010a8c8 <__adddf3>
10103e88:	047f3034 	movhi	r17,64704
10103e8c:	1021883a 	mov	r16,r2
10103e90:	1c63883a 	add	r17,r3,r17
10103e94:	d9000f17 	ldw	r4,60(sp)
10103e98:	d9401017 	ldw	r5,64(sp)
10103e9c:	000d883a 	mov	r6,zero
10103ea0:	01d00534 	movhi	r7,16404
10103ea4:	010c3cc0 	call	1010c3cc <__subdf3>
10103ea8:	800d883a 	mov	r6,r16
10103eac:	880f883a 	mov	r7,r17
10103eb0:	1009883a 	mov	r4,r2
10103eb4:	180b883a 	mov	r5,r3
10103eb8:	102b883a 	mov	r21,r2
10103ebc:	1829883a 	mov	r20,r3
10103ec0:	010bae40 	call	1010bae4 <__gedf2>
10103ec4:	00806c16 	blt	zero,r2,10104078 <_dtoa_r+0x1304>
10103ec8:	89e0003c 	xorhi	r7,r17,32768
10103ecc:	800d883a 	mov	r6,r16
10103ed0:	a809883a 	mov	r4,r21
10103ed4:	a00b883a 	mov	r5,r20
10103ed8:	010bbc00 	call	1010bbc0 <__ledf2>
10103edc:	103d7e0e 	bge	r2,zero,101034d8 <__alt_data_end+0xfffe34d8>
10103ee0:	002b883a 	mov	r21,zero
10103ee4:	0023883a 	mov	r17,zero
10103ee8:	003efb06 	br	10103ad8 <__alt_data_end+0xfffe3ad8>
10103eec:	d8800717 	ldw	r2,28(sp)
10103ef0:	003bd006 	br	10102e34 <__alt_data_end+0xfffe2e34>
10103ef4:	d9000a17 	ldw	r4,40(sp)
10103ef8:	d9800d17 	ldw	r6,52(sp)
10103efc:	dd400a15 	stw	r21,40(sp)
10103f00:	a905c83a 	sub	r2,r21,r4
10103f04:	308d883a 	add	r6,r6,r2
10103f08:	d9800d15 	stw	r6,52(sp)
10103f0c:	002b883a 	mov	r21,zero
10103f10:	003e0606 	br	1010372c <__alt_data_end+0xfffe372c>
10103f14:	9023883a 	mov	r17,r18
10103f18:	9829883a 	mov	r20,r19
10103f1c:	04000084 	movi	r16,2
10103f20:	003c9206 	br	1010316c <__alt_data_end+0xfffe316c>
10103f24:	04000044 	movi	r16,1
10103f28:	dc000c15 	stw	r16,48(sp)
10103f2c:	dc000615 	stw	r16,24(sp)
10103f30:	dc002215 	stw	r16,136(sp)
10103f34:	e0001115 	stw	zero,68(fp)
10103f38:	000b883a 	mov	r5,zero
10103f3c:	003c6906 	br	101030e4 <__alt_data_end+0xfffe30e4>
10103f40:	3021883a 	mov	r16,r6
10103f44:	003ffb06 	br	10103f34 <__alt_data_end+0xfffe3f34>
10103f48:	1000021e 	bne	r2,zero,10103f54 <_dtoa_r+0x11e0>
10103f4c:	4200004c 	andi	r8,r8,1
10103f50:	403e7d1e 	bne	r8,zero,10103948 <__alt_data_end+0xfffe3948>
10103f54:	01000c04 	movi	r4,48
10103f58:	00000106 	br	10103f60 <_dtoa_r+0x11ec>
10103f5c:	102f883a 	mov	r23,r2
10103f60:	b8bfffc4 	addi	r2,r23,-1
10103f64:	10c00007 	ldb	r3,0(r2)
10103f68:	193ffc26 	beq	r3,r4,10103f5c <__alt_data_end+0xfffe3f5c>
10103f6c:	003e8706 	br	1010398c <__alt_data_end+0xfffe398c>
10103f70:	d8800517 	ldw	r2,20(sp)
10103f74:	00a3c83a 	sub	r17,zero,r2
10103f78:	8800a426 	beq	r17,zero,1010420c <_dtoa_r+0x1498>
10103f7c:	888003cc 	andi	r2,r17,15
10103f80:	100490fa 	slli	r2,r2,3
10103f84:	00c40474 	movhi	r3,4113
10103f88:	18fdf804 	addi	r3,r3,-2080
10103f8c:	1885883a 	add	r2,r3,r2
10103f90:	11800017 	ldw	r6,0(r2)
10103f94:	11c00117 	ldw	r7,4(r2)
10103f98:	9009883a 	mov	r4,r18
10103f9c:	980b883a 	mov	r5,r19
10103fa0:	8823d13a 	srai	r17,r17,4
10103fa4:	010bcb40 	call	1010bcb4 <__muldf3>
10103fa8:	d8800f15 	stw	r2,60(sp)
10103fac:	d8c01015 	stw	r3,64(sp)
10103fb0:	8800e826 	beq	r17,zero,10104354 <_dtoa_r+0x15e0>
10103fb4:	05040474 	movhi	r20,4113
10103fb8:	a53dee04 	addi	r20,r20,-2120
10103fbc:	04000084 	movi	r16,2
10103fc0:	8980004c 	andi	r6,r17,1
10103fc4:	1009883a 	mov	r4,r2
10103fc8:	8823d07a 	srai	r17,r17,1
10103fcc:	180b883a 	mov	r5,r3
10103fd0:	30000426 	beq	r6,zero,10103fe4 <_dtoa_r+0x1270>
10103fd4:	a1800017 	ldw	r6,0(r20)
10103fd8:	a1c00117 	ldw	r7,4(r20)
10103fdc:	84000044 	addi	r16,r16,1
10103fe0:	010bcb40 	call	1010bcb4 <__muldf3>
10103fe4:	a5000204 	addi	r20,r20,8
10103fe8:	883ff51e 	bne	r17,zero,10103fc0 <__alt_data_end+0xfffe3fc0>
10103fec:	d8800f15 	stw	r2,60(sp)
10103ff0:	d8c01015 	stw	r3,64(sp)
10103ff4:	003c7606 	br	101031d0 <__alt_data_end+0xfffe31d0>
10103ff8:	00c00c04 	movi	r3,48
10103ffc:	10c00005 	stb	r3,0(r2)
10104000:	d8c00517 	ldw	r3,20(sp)
10104004:	bd3fffc3 	ldbu	r20,-1(r23)
10104008:	18c00044 	addi	r3,r3,1
1010400c:	d8c00515 	stw	r3,20(sp)
10104010:	003db906 	br	101036f8 <__alt_data_end+0xfffe36f8>
10104014:	89400117 	ldw	r5,4(r17)
10104018:	e009883a 	mov	r4,fp
1010401c:	0105df80 	call	10105df8 <_Balloc>
10104020:	89800417 	ldw	r6,16(r17)
10104024:	89400304 	addi	r5,r17,12
10104028:	11000304 	addi	r4,r2,12
1010402c:	31800084 	addi	r6,r6,2
10104030:	318d883a 	add	r6,r6,r6
10104034:	318d883a 	add	r6,r6,r6
10104038:	1027883a 	mov	r19,r2
1010403c:	0105b880 	call	10105b88 <memcpy>
10104040:	01800044 	movi	r6,1
10104044:	980b883a 	mov	r5,r19
10104048:	e009883a 	mov	r4,fp
1010404c:	01065780 	call	10106578 <__lshift>
10104050:	1029883a 	mov	r20,r2
10104054:	003ecc06 	br	10103b88 <__alt_data_end+0xfffe3b88>
10104058:	00800e44 	movi	r2,57
1010405c:	90809026 	beq	r18,r2,101042a0 <_dtoa_r+0x152c>
10104060:	92000044 	addi	r8,r18,1
10104064:	003f1f06 	br	10103ce4 <__alt_data_end+0xfffe3ce4>
10104068:	9011883a 	mov	r8,r18
1010406c:	8825883a 	mov	r18,r17
10104070:	a023883a 	mov	r17,r20
10104074:	003e2906 	br	1010391c <__alt_data_end+0xfffe391c>
10104078:	002b883a 	mov	r21,zero
1010407c:	0023883a 	mov	r17,zero
10104080:	003f5406 	br	10103dd4 <__alt_data_end+0xfffe3dd4>
10104084:	61bfffc4 	addi	r6,r12,-1
10104088:	300490fa 	slli	r2,r6,3
1010408c:	00c40474 	movhi	r3,4113
10104090:	18fdf804 	addi	r3,r3,-2080
10104094:	1885883a 	add	r2,r3,r2
10104098:	11000017 	ldw	r4,0(r2)
1010409c:	11400117 	ldw	r5,4(r2)
101040a0:	d8800717 	ldw	r2,28(sp)
101040a4:	880f883a 	mov	r7,r17
101040a8:	d9801215 	stw	r6,72(sp)
101040ac:	800d883a 	mov	r6,r16
101040b0:	db001615 	stw	r12,88(sp)
101040b4:	15c00044 	addi	r23,r2,1
101040b8:	010bcb40 	call	1010bcb4 <__muldf3>
101040bc:	d9401017 	ldw	r5,64(sp)
101040c0:	d9000f17 	ldw	r4,60(sp)
101040c4:	d8c01515 	stw	r3,84(sp)
101040c8:	d8801415 	stw	r2,80(sp)
101040cc:	010ccc80 	call	1010ccc8 <__fixdfsi>
101040d0:	1009883a 	mov	r4,r2
101040d4:	1021883a 	mov	r16,r2
101040d8:	010cd480 	call	1010cd48 <__floatsidf>
101040dc:	d9000f17 	ldw	r4,60(sp)
101040e0:	d9401017 	ldw	r5,64(sp)
101040e4:	100d883a 	mov	r6,r2
101040e8:	180f883a 	mov	r7,r3
101040ec:	010c3cc0 	call	1010c3cc <__subdf3>
101040f0:	1829883a 	mov	r20,r3
101040f4:	d8c00717 	ldw	r3,28(sp)
101040f8:	84000c04 	addi	r16,r16,48
101040fc:	1023883a 	mov	r17,r2
10104100:	1c000005 	stb	r16,0(r3)
10104104:	db001617 	ldw	r12,88(sp)
10104108:	00800044 	movi	r2,1
1010410c:	60802226 	beq	r12,r2,10104198 <_dtoa_r+0x1424>
10104110:	d9c00717 	ldw	r7,28(sp)
10104114:	8805883a 	mov	r2,r17
10104118:	b82b883a 	mov	r21,r23
1010411c:	3b19883a 	add	r12,r7,r12
10104120:	6023883a 	mov	r17,r12
10104124:	a007883a 	mov	r3,r20
10104128:	dc800f15 	stw	r18,60(sp)
1010412c:	000d883a 	mov	r6,zero
10104130:	01d00934 	movhi	r7,16420
10104134:	1009883a 	mov	r4,r2
10104138:	180b883a 	mov	r5,r3
1010413c:	010bcb40 	call	1010bcb4 <__muldf3>
10104140:	180b883a 	mov	r5,r3
10104144:	1009883a 	mov	r4,r2
10104148:	1829883a 	mov	r20,r3
1010414c:	1025883a 	mov	r18,r2
10104150:	010ccc80 	call	1010ccc8 <__fixdfsi>
10104154:	1009883a 	mov	r4,r2
10104158:	1021883a 	mov	r16,r2
1010415c:	010cd480 	call	1010cd48 <__floatsidf>
10104160:	100d883a 	mov	r6,r2
10104164:	180f883a 	mov	r7,r3
10104168:	9009883a 	mov	r4,r18
1010416c:	a00b883a 	mov	r5,r20
10104170:	84000c04 	addi	r16,r16,48
10104174:	010c3cc0 	call	1010c3cc <__subdf3>
10104178:	ad400044 	addi	r21,r21,1
1010417c:	ac3fffc5 	stb	r16,-1(r21)
10104180:	ac7fea1e 	bne	r21,r17,1010412c <__alt_data_end+0xfffe412c>
10104184:	1023883a 	mov	r17,r2
10104188:	d8801217 	ldw	r2,72(sp)
1010418c:	dc800f17 	ldw	r18,60(sp)
10104190:	1829883a 	mov	r20,r3
10104194:	b8af883a 	add	r23,r23,r2
10104198:	d9001417 	ldw	r4,80(sp)
1010419c:	d9401517 	ldw	r5,84(sp)
101041a0:	000d883a 	mov	r6,zero
101041a4:	01cff834 	movhi	r7,16352
101041a8:	010a8c80 	call	1010a8c8 <__adddf3>
101041ac:	880d883a 	mov	r6,r17
101041b0:	a00f883a 	mov	r7,r20
101041b4:	1009883a 	mov	r4,r2
101041b8:	180b883a 	mov	r5,r3
101041bc:	010bbc00 	call	1010bbc0 <__ledf2>
101041c0:	10003e0e 	bge	r2,zero,101042bc <_dtoa_r+0x1548>
101041c4:	d9001317 	ldw	r4,76(sp)
101041c8:	bd3fffc3 	ldbu	r20,-1(r23)
101041cc:	d9000515 	stw	r4,20(sp)
101041d0:	003d3b06 	br	101036c0 <__alt_data_end+0xfffe36c0>
101041d4:	0027883a 	mov	r19,zero
101041d8:	003f1b06 	br	10103e48 <__alt_data_end+0xfffe3e48>
101041dc:	d8800817 	ldw	r2,32(sp)
101041e0:	11e9c83a 	sub	r20,r2,r7
101041e4:	0005883a 	mov	r2,zero
101041e8:	003d5406 	br	1010373c <__alt_data_end+0xfffe373c>
101041ec:	00800044 	movi	r2,1
101041f0:	003dc706 	br	10103910 <__alt_data_end+0xfffe3910>
101041f4:	d8c00217 	ldw	r3,8(sp)
101041f8:	00800d84 	movi	r2,54
101041fc:	dd400a17 	ldw	r21,40(sp)
10104200:	10c5c83a 	sub	r2,r2,r3
10104204:	dd000817 	ldw	r20,32(sp)
10104208:	003d4c06 	br	1010373c <__alt_data_end+0xfffe373c>
1010420c:	dc800f15 	stw	r18,60(sp)
10104210:	dcc01015 	stw	r19,64(sp)
10104214:	04000084 	movi	r16,2
10104218:	003bed06 	br	101031d0 <__alt_data_end+0xfffe31d0>
1010421c:	d9000617 	ldw	r4,24(sp)
10104220:	203f0d26 	beq	r4,zero,10103e58 <__alt_data_end+0xfffe3e58>
10104224:	d9800c17 	ldw	r6,48(sp)
10104228:	01bcab0e 	bge	zero,r6,101034d8 <__alt_data_end+0xfffe34d8>
1010422c:	d9401017 	ldw	r5,64(sp)
10104230:	d9000f17 	ldw	r4,60(sp)
10104234:	000d883a 	mov	r6,zero
10104238:	01d00934 	movhi	r7,16420
1010423c:	010bcb40 	call	1010bcb4 <__muldf3>
10104240:	81000044 	addi	r4,r16,1
10104244:	d8800f15 	stw	r2,60(sp)
10104248:	d8c01015 	stw	r3,64(sp)
1010424c:	010cd480 	call	1010cd48 <__floatsidf>
10104250:	d9800f17 	ldw	r6,60(sp)
10104254:	d9c01017 	ldw	r7,64(sp)
10104258:	1009883a 	mov	r4,r2
1010425c:	180b883a 	mov	r5,r3
10104260:	010bcb40 	call	1010bcb4 <__muldf3>
10104264:	01d00734 	movhi	r7,16412
10104268:	000d883a 	mov	r6,zero
1010426c:	1009883a 	mov	r4,r2
10104270:	180b883a 	mov	r5,r3
10104274:	010a8c80 	call	1010a8c8 <__adddf3>
10104278:	d9c00517 	ldw	r7,20(sp)
1010427c:	047f3034 	movhi	r17,64704
10104280:	1021883a 	mov	r16,r2
10104284:	39ffffc4 	addi	r7,r7,-1
10104288:	d9c01315 	stw	r7,76(sp)
1010428c:	1c63883a 	add	r17,r3,r17
10104290:	db000c17 	ldw	r12,48(sp)
10104294:	003bea06 	br	10103240 <__alt_data_end+0xfffe3240>
10104298:	dc000915 	stw	r16,36(sp)
1010429c:	003e0e06 	br	10103ad8 <__alt_data_end+0xfffe3ad8>
101042a0:	01000e44 	movi	r4,57
101042a4:	8825883a 	mov	r18,r17
101042a8:	9dc00044 	addi	r23,r19,1
101042ac:	99000005 	stb	r4,0(r19)
101042b0:	a023883a 	mov	r17,r20
101042b4:	dc000915 	stw	r16,36(sp)
101042b8:	003da406 	br	1010394c <__alt_data_end+0xfffe394c>
101042bc:	d9801417 	ldw	r6,80(sp)
101042c0:	d9c01517 	ldw	r7,84(sp)
101042c4:	0009883a 	mov	r4,zero
101042c8:	014ff834 	movhi	r5,16352
101042cc:	010c3cc0 	call	1010c3cc <__subdf3>
101042d0:	880d883a 	mov	r6,r17
101042d4:	a00f883a 	mov	r7,r20
101042d8:	1009883a 	mov	r4,r2
101042dc:	180b883a 	mov	r5,r3
101042e0:	010bae40 	call	1010bae4 <__gedf2>
101042e4:	00bc7c0e 	bge	zero,r2,101034d8 <__alt_data_end+0xfffe34d8>
101042e8:	01000c04 	movi	r4,48
101042ec:	00000106 	br	101042f4 <_dtoa_r+0x1580>
101042f0:	102f883a 	mov	r23,r2
101042f4:	b8bfffc4 	addi	r2,r23,-1
101042f8:	10c00007 	ldb	r3,0(r2)
101042fc:	193ffc26 	beq	r3,r4,101042f0 <__alt_data_end+0xfffe42f0>
10104300:	d9801317 	ldw	r6,76(sp)
10104304:	d9800515 	stw	r6,20(sp)
10104308:	003c4406 	br	1010341c <__alt_data_end+0xfffe341c>
1010430c:	d9801317 	ldw	r6,76(sp)
10104310:	d9800515 	stw	r6,20(sp)
10104314:	003cea06 	br	101036c0 <__alt_data_end+0xfffe36c0>
10104318:	dd800f17 	ldw	r22,60(sp)
1010431c:	dcc01017 	ldw	r19,64(sp)
10104320:	dc801217 	ldw	r18,72(sp)
10104324:	003c6c06 	br	101034d8 <__alt_data_end+0xfffe34d8>
10104328:	903e031e 	bne	r18,zero,10103b38 <__alt_data_end+0xfffe3b38>
1010432c:	003ebb06 	br	10103e1c <__alt_data_end+0xfffe3e1c>
10104330:	103e6c1e 	bne	r2,zero,10103ce4 <__alt_data_end+0xfffe3ce4>
10104334:	4080004c 	andi	r2,r8,1
10104338:	103e6a26 	beq	r2,zero,10103ce4 <__alt_data_end+0xfffe3ce4>
1010433c:	003e6606 	br	10103cd8 <__alt_data_end+0xfffe3cd8>
10104340:	d8c00317 	ldw	r3,12(sp)
10104344:	00800084 	movi	r2,2
10104348:	10c02916 	blt	r2,r3,101043f0 <_dtoa_r+0x167c>
1010434c:	d9000c17 	ldw	r4,48(sp)
10104350:	003e8806 	br	10103d74 <__alt_data_end+0xfffe3d74>
10104354:	04000084 	movi	r16,2
10104358:	003b9d06 	br	101031d0 <__alt_data_end+0xfffe31d0>
1010435c:	d9001317 	ldw	r4,76(sp)
10104360:	d9000515 	stw	r4,20(sp)
10104364:	003cd606 	br	101036c0 <__alt_data_end+0xfffe36c0>
10104368:	d8801317 	ldw	r2,76(sp)
1010436c:	d8800515 	stw	r2,20(sp)
10104370:	003c2a06 	br	1010341c <__alt_data_end+0xfffe341c>
10104374:	d9800317 	ldw	r6,12(sp)
10104378:	00800084 	movi	r2,2
1010437c:	11801516 	blt	r2,r6,101043d4 <_dtoa_r+0x1660>
10104380:	d9c00c17 	ldw	r7,48(sp)
10104384:	d9c00615 	stw	r7,24(sp)
10104388:	003df706 	br	10103b68 <__alt_data_end+0xfffe3b68>
1010438c:	193d3926 	beq	r3,r4,10103874 <__alt_data_end+0xfffe3874>
10104390:	00c00f04 	movi	r3,60
10104394:	1885c83a 	sub	r2,r3,r2
10104398:	003ddf06 	br	10103b18 <__alt_data_end+0xfffe3b18>
1010439c:	e009883a 	mov	r4,fp
101043a0:	e0001115 	stw	zero,68(fp)
101043a4:	000b883a 	mov	r5,zero
101043a8:	0105df80 	call	10105df8 <_Balloc>
101043ac:	d8800715 	stw	r2,28(sp)
101043b0:	d8c00717 	ldw	r3,28(sp)
101043b4:	00bfffc4 	movi	r2,-1
101043b8:	01000044 	movi	r4,1
101043bc:	d8800c15 	stw	r2,48(sp)
101043c0:	e0c01015 	stw	r3,64(fp)
101043c4:	d9000b15 	stw	r4,44(sp)
101043c8:	d8800615 	stw	r2,24(sp)
101043cc:	d8002215 	stw	zero,136(sp)
101043d0:	003c4106 	br	101034d8 <__alt_data_end+0xfffe34d8>
101043d4:	d8c00c17 	ldw	r3,48(sp)
101043d8:	d8c00615 	stw	r3,24(sp)
101043dc:	003e7006 	br	10103da0 <__alt_data_end+0xfffe3da0>
101043e0:	04400044 	movi	r17,1
101043e4:	003b2006 	br	10103068 <__alt_data_end+0xfffe3068>
101043e8:	000b883a 	mov	r5,zero
101043ec:	003b3d06 	br	101030e4 <__alt_data_end+0xfffe30e4>
101043f0:	d8800c17 	ldw	r2,48(sp)
101043f4:	d8800615 	stw	r2,24(sp)
101043f8:	003e6906 	br	10103da0 <__alt_data_end+0xfffe3da0>

101043fc <__sflush_r>:
101043fc:	2880030b 	ldhu	r2,12(r5)
10104400:	defffb04 	addi	sp,sp,-20
10104404:	dcc00315 	stw	r19,12(sp)
10104408:	dc400115 	stw	r17,4(sp)
1010440c:	dfc00415 	stw	ra,16(sp)
10104410:	dc800215 	stw	r18,8(sp)
10104414:	dc000015 	stw	r16,0(sp)
10104418:	10c0020c 	andi	r3,r2,8
1010441c:	2823883a 	mov	r17,r5
10104420:	2027883a 	mov	r19,r4
10104424:	1800311e 	bne	r3,zero,101044ec <__sflush_r+0xf0>
10104428:	28c00117 	ldw	r3,4(r5)
1010442c:	10820014 	ori	r2,r2,2048
10104430:	2880030d 	sth	r2,12(r5)
10104434:	00c04b0e 	bge	zero,r3,10104564 <__sflush_r+0x168>
10104438:	8a000a17 	ldw	r8,40(r17)
1010443c:	40002326 	beq	r8,zero,101044cc <__sflush_r+0xd0>
10104440:	9c000017 	ldw	r16,0(r19)
10104444:	10c4000c 	andi	r3,r2,4096
10104448:	98000015 	stw	zero,0(r19)
1010444c:	18004826 	beq	r3,zero,10104570 <__sflush_r+0x174>
10104450:	89801417 	ldw	r6,80(r17)
10104454:	10c0010c 	andi	r3,r2,4
10104458:	18000626 	beq	r3,zero,10104474 <__sflush_r+0x78>
1010445c:	88c00117 	ldw	r3,4(r17)
10104460:	88800c17 	ldw	r2,48(r17)
10104464:	30cdc83a 	sub	r6,r6,r3
10104468:	10000226 	beq	r2,zero,10104474 <__sflush_r+0x78>
1010446c:	88800f17 	ldw	r2,60(r17)
10104470:	308dc83a 	sub	r6,r6,r2
10104474:	89400717 	ldw	r5,28(r17)
10104478:	000f883a 	mov	r7,zero
1010447c:	9809883a 	mov	r4,r19
10104480:	403ee83a 	callr	r8
10104484:	00ffffc4 	movi	r3,-1
10104488:	10c04426 	beq	r2,r3,1010459c <__sflush_r+0x1a0>
1010448c:	88c0030b 	ldhu	r3,12(r17)
10104490:	89000417 	ldw	r4,16(r17)
10104494:	88000115 	stw	zero,4(r17)
10104498:	197dffcc 	andi	r5,r3,63487
1010449c:	8940030d 	sth	r5,12(r17)
101044a0:	89000015 	stw	r4,0(r17)
101044a4:	18c4000c 	andi	r3,r3,4096
101044a8:	18002c1e 	bne	r3,zero,1010455c <__sflush_r+0x160>
101044ac:	89400c17 	ldw	r5,48(r17)
101044b0:	9c000015 	stw	r16,0(r19)
101044b4:	28000526 	beq	r5,zero,101044cc <__sflush_r+0xd0>
101044b8:	88801004 	addi	r2,r17,64
101044bc:	28800226 	beq	r5,r2,101044c8 <__sflush_r+0xcc>
101044c0:	9809883a 	mov	r4,r19
101044c4:	0104b680 	call	10104b68 <_free_r>
101044c8:	88000c15 	stw	zero,48(r17)
101044cc:	0005883a 	mov	r2,zero
101044d0:	dfc00417 	ldw	ra,16(sp)
101044d4:	dcc00317 	ldw	r19,12(sp)
101044d8:	dc800217 	ldw	r18,8(sp)
101044dc:	dc400117 	ldw	r17,4(sp)
101044e0:	dc000017 	ldw	r16,0(sp)
101044e4:	dec00504 	addi	sp,sp,20
101044e8:	f800283a 	ret
101044ec:	2c800417 	ldw	r18,16(r5)
101044f0:	903ff626 	beq	r18,zero,101044cc <__alt_data_end+0xfffe44cc>
101044f4:	2c000017 	ldw	r16,0(r5)
101044f8:	108000cc 	andi	r2,r2,3
101044fc:	2c800015 	stw	r18,0(r5)
10104500:	84a1c83a 	sub	r16,r16,r18
10104504:	1000131e 	bne	r2,zero,10104554 <__sflush_r+0x158>
10104508:	28800517 	ldw	r2,20(r5)
1010450c:	88800215 	stw	r2,8(r17)
10104510:	04000316 	blt	zero,r16,10104520 <__sflush_r+0x124>
10104514:	003fed06 	br	101044cc <__alt_data_end+0xfffe44cc>
10104518:	90a5883a 	add	r18,r18,r2
1010451c:	043feb0e 	bge	zero,r16,101044cc <__alt_data_end+0xfffe44cc>
10104520:	88800917 	ldw	r2,36(r17)
10104524:	89400717 	ldw	r5,28(r17)
10104528:	800f883a 	mov	r7,r16
1010452c:	900d883a 	mov	r6,r18
10104530:	9809883a 	mov	r4,r19
10104534:	103ee83a 	callr	r2
10104538:	80a1c83a 	sub	r16,r16,r2
1010453c:	00bff616 	blt	zero,r2,10104518 <__alt_data_end+0xfffe4518>
10104540:	88c0030b 	ldhu	r3,12(r17)
10104544:	00bfffc4 	movi	r2,-1
10104548:	18c01014 	ori	r3,r3,64
1010454c:	88c0030d 	sth	r3,12(r17)
10104550:	003fdf06 	br	101044d0 <__alt_data_end+0xfffe44d0>
10104554:	0005883a 	mov	r2,zero
10104558:	003fec06 	br	1010450c <__alt_data_end+0xfffe450c>
1010455c:	88801415 	stw	r2,80(r17)
10104560:	003fd206 	br	101044ac <__alt_data_end+0xfffe44ac>
10104564:	28c00f17 	ldw	r3,60(r5)
10104568:	00ffb316 	blt	zero,r3,10104438 <__alt_data_end+0xfffe4438>
1010456c:	003fd706 	br	101044cc <__alt_data_end+0xfffe44cc>
10104570:	89400717 	ldw	r5,28(r17)
10104574:	000d883a 	mov	r6,zero
10104578:	01c00044 	movi	r7,1
1010457c:	9809883a 	mov	r4,r19
10104580:	403ee83a 	callr	r8
10104584:	100d883a 	mov	r6,r2
10104588:	00bfffc4 	movi	r2,-1
1010458c:	30801426 	beq	r6,r2,101045e0 <__sflush_r+0x1e4>
10104590:	8880030b 	ldhu	r2,12(r17)
10104594:	8a000a17 	ldw	r8,40(r17)
10104598:	003fae06 	br	10104454 <__alt_data_end+0xfffe4454>
1010459c:	98c00017 	ldw	r3,0(r19)
101045a0:	183fba26 	beq	r3,zero,1010448c <__alt_data_end+0xfffe448c>
101045a4:	01000744 	movi	r4,29
101045a8:	19000626 	beq	r3,r4,101045c4 <__sflush_r+0x1c8>
101045ac:	01000584 	movi	r4,22
101045b0:	19000426 	beq	r3,r4,101045c4 <__sflush_r+0x1c8>
101045b4:	88c0030b 	ldhu	r3,12(r17)
101045b8:	18c01014 	ori	r3,r3,64
101045bc:	88c0030d 	sth	r3,12(r17)
101045c0:	003fc306 	br	101044d0 <__alt_data_end+0xfffe44d0>
101045c4:	8880030b 	ldhu	r2,12(r17)
101045c8:	88c00417 	ldw	r3,16(r17)
101045cc:	88000115 	stw	zero,4(r17)
101045d0:	10bdffcc 	andi	r2,r2,63487
101045d4:	8880030d 	sth	r2,12(r17)
101045d8:	88c00015 	stw	r3,0(r17)
101045dc:	003fb306 	br	101044ac <__alt_data_end+0xfffe44ac>
101045e0:	98800017 	ldw	r2,0(r19)
101045e4:	103fea26 	beq	r2,zero,10104590 <__alt_data_end+0xfffe4590>
101045e8:	00c00744 	movi	r3,29
101045ec:	10c00226 	beq	r2,r3,101045f8 <__sflush_r+0x1fc>
101045f0:	00c00584 	movi	r3,22
101045f4:	10c0031e 	bne	r2,r3,10104604 <__sflush_r+0x208>
101045f8:	9c000015 	stw	r16,0(r19)
101045fc:	0005883a 	mov	r2,zero
10104600:	003fb306 	br	101044d0 <__alt_data_end+0xfffe44d0>
10104604:	88c0030b 	ldhu	r3,12(r17)
10104608:	3005883a 	mov	r2,r6
1010460c:	18c01014 	ori	r3,r3,64
10104610:	88c0030d 	sth	r3,12(r17)
10104614:	003fae06 	br	101044d0 <__alt_data_end+0xfffe44d0>

10104618 <_fflush_r>:
10104618:	defffd04 	addi	sp,sp,-12
1010461c:	dc000115 	stw	r16,4(sp)
10104620:	dfc00215 	stw	ra,8(sp)
10104624:	2021883a 	mov	r16,r4
10104628:	20000226 	beq	r4,zero,10104634 <_fflush_r+0x1c>
1010462c:	20800e17 	ldw	r2,56(r4)
10104630:	10000c26 	beq	r2,zero,10104664 <_fflush_r+0x4c>
10104634:	2880030f 	ldh	r2,12(r5)
10104638:	1000051e 	bne	r2,zero,10104650 <_fflush_r+0x38>
1010463c:	0005883a 	mov	r2,zero
10104640:	dfc00217 	ldw	ra,8(sp)
10104644:	dc000117 	ldw	r16,4(sp)
10104648:	dec00304 	addi	sp,sp,12
1010464c:	f800283a 	ret
10104650:	8009883a 	mov	r4,r16
10104654:	dfc00217 	ldw	ra,8(sp)
10104658:	dc000117 	ldw	r16,4(sp)
1010465c:	dec00304 	addi	sp,sp,12
10104660:	01043fc1 	jmpi	101043fc <__sflush_r>
10104664:	d9400015 	stw	r5,0(sp)
10104668:	01049f40 	call	101049f4 <__sinit>
1010466c:	d9400017 	ldw	r5,0(sp)
10104670:	003ff006 	br	10104634 <__alt_data_end+0xfffe4634>

10104674 <fflush>:
10104674:	20000526 	beq	r4,zero,1010468c <fflush+0x18>
10104678:	00840474 	movhi	r2,4113
1010467c:	10852b04 	addi	r2,r2,5292
10104680:	200b883a 	mov	r5,r4
10104684:	11000017 	ldw	r4,0(r2)
10104688:	01046181 	jmpi	10104618 <_fflush_r>
1010468c:	00840474 	movhi	r2,4113
10104690:	10852a04 	addi	r2,r2,5288
10104694:	11000017 	ldw	r4,0(r2)
10104698:	01440434 	movhi	r5,4112
1010469c:	29518604 	addi	r5,r5,17944
101046a0:	0104f3c1 	jmpi	10104f3c <_fwalk_reent>

101046a4 <__fp_unlock>:
101046a4:	0005883a 	mov	r2,zero
101046a8:	f800283a 	ret

101046ac <_cleanup_r>:
101046ac:	01440474 	movhi	r5,4113
101046b0:	29624b04 	addi	r5,r5,-30420
101046b4:	0104f3c1 	jmpi	10104f3c <_fwalk_reent>

101046b8 <__sinit.part.1>:
101046b8:	defff704 	addi	sp,sp,-36
101046bc:	00c40434 	movhi	r3,4112
101046c0:	dfc00815 	stw	ra,32(sp)
101046c4:	ddc00715 	stw	r23,28(sp)
101046c8:	dd800615 	stw	r22,24(sp)
101046cc:	dd400515 	stw	r21,20(sp)
101046d0:	dd000415 	stw	r20,16(sp)
101046d4:	dcc00315 	stw	r19,12(sp)
101046d8:	dc800215 	stw	r18,8(sp)
101046dc:	dc400115 	stw	r17,4(sp)
101046e0:	dc000015 	stw	r16,0(sp)
101046e4:	18d1ab04 	addi	r3,r3,18092
101046e8:	24000117 	ldw	r16,4(r4)
101046ec:	20c00f15 	stw	r3,60(r4)
101046f0:	2080bb04 	addi	r2,r4,748
101046f4:	00c000c4 	movi	r3,3
101046f8:	20c0b915 	stw	r3,740(r4)
101046fc:	2080ba15 	stw	r2,744(r4)
10104700:	2000b815 	stw	zero,736(r4)
10104704:	05c00204 	movi	r23,8
10104708:	00800104 	movi	r2,4
1010470c:	2025883a 	mov	r18,r4
10104710:	b80d883a 	mov	r6,r23
10104714:	81001704 	addi	r4,r16,92
10104718:	000b883a 	mov	r5,zero
1010471c:	80000015 	stw	zero,0(r16)
10104720:	80000115 	stw	zero,4(r16)
10104724:	80000215 	stw	zero,8(r16)
10104728:	8080030d 	sth	r2,12(r16)
1010472c:	80001915 	stw	zero,100(r16)
10104730:	8000038d 	sth	zero,14(r16)
10104734:	80000415 	stw	zero,16(r16)
10104738:	80000515 	stw	zero,20(r16)
1010473c:	80000615 	stw	zero,24(r16)
10104740:	0105cd00 	call	10105cd0 <memset>
10104744:	05840434 	movhi	r22,4112
10104748:	94400217 	ldw	r17,8(r18)
1010474c:	05440434 	movhi	r21,4112
10104750:	05040434 	movhi	r20,4112
10104754:	04c40434 	movhi	r19,4112
10104758:	b59baf04 	addi	r22,r22,28348
1010475c:	ad5bc604 	addi	r21,r21,28440
10104760:	a51be504 	addi	r20,r20,28564
10104764:	9cdbfc04 	addi	r19,r19,28656
10104768:	85800815 	stw	r22,32(r16)
1010476c:	85400915 	stw	r21,36(r16)
10104770:	85000a15 	stw	r20,40(r16)
10104774:	84c00b15 	stw	r19,44(r16)
10104778:	84000715 	stw	r16,28(r16)
1010477c:	00800284 	movi	r2,10
10104780:	8880030d 	sth	r2,12(r17)
10104784:	00800044 	movi	r2,1
10104788:	b80d883a 	mov	r6,r23
1010478c:	89001704 	addi	r4,r17,92
10104790:	000b883a 	mov	r5,zero
10104794:	88000015 	stw	zero,0(r17)
10104798:	88000115 	stw	zero,4(r17)
1010479c:	88000215 	stw	zero,8(r17)
101047a0:	88001915 	stw	zero,100(r17)
101047a4:	8880038d 	sth	r2,14(r17)
101047a8:	88000415 	stw	zero,16(r17)
101047ac:	88000515 	stw	zero,20(r17)
101047b0:	88000615 	stw	zero,24(r17)
101047b4:	0105cd00 	call	10105cd0 <memset>
101047b8:	94000317 	ldw	r16,12(r18)
101047bc:	00800484 	movi	r2,18
101047c0:	8c400715 	stw	r17,28(r17)
101047c4:	8d800815 	stw	r22,32(r17)
101047c8:	8d400915 	stw	r21,36(r17)
101047cc:	8d000a15 	stw	r20,40(r17)
101047d0:	8cc00b15 	stw	r19,44(r17)
101047d4:	8080030d 	sth	r2,12(r16)
101047d8:	00800084 	movi	r2,2
101047dc:	80000015 	stw	zero,0(r16)
101047e0:	80000115 	stw	zero,4(r16)
101047e4:	80000215 	stw	zero,8(r16)
101047e8:	80001915 	stw	zero,100(r16)
101047ec:	8080038d 	sth	r2,14(r16)
101047f0:	80000415 	stw	zero,16(r16)
101047f4:	80000515 	stw	zero,20(r16)
101047f8:	80000615 	stw	zero,24(r16)
101047fc:	b80d883a 	mov	r6,r23
10104800:	000b883a 	mov	r5,zero
10104804:	81001704 	addi	r4,r16,92
10104808:	0105cd00 	call	10105cd0 <memset>
1010480c:	00800044 	movi	r2,1
10104810:	84000715 	stw	r16,28(r16)
10104814:	85800815 	stw	r22,32(r16)
10104818:	85400915 	stw	r21,36(r16)
1010481c:	85000a15 	stw	r20,40(r16)
10104820:	84c00b15 	stw	r19,44(r16)
10104824:	90800e15 	stw	r2,56(r18)
10104828:	dfc00817 	ldw	ra,32(sp)
1010482c:	ddc00717 	ldw	r23,28(sp)
10104830:	dd800617 	ldw	r22,24(sp)
10104834:	dd400517 	ldw	r21,20(sp)
10104838:	dd000417 	ldw	r20,16(sp)
1010483c:	dcc00317 	ldw	r19,12(sp)
10104840:	dc800217 	ldw	r18,8(sp)
10104844:	dc400117 	ldw	r17,4(sp)
10104848:	dc000017 	ldw	r16,0(sp)
1010484c:	dec00904 	addi	sp,sp,36
10104850:	f800283a 	ret

10104854 <__fp_lock>:
10104854:	0005883a 	mov	r2,zero
10104858:	f800283a 	ret

1010485c <__sfmoreglue>:
1010485c:	defffc04 	addi	sp,sp,-16
10104860:	dc400115 	stw	r17,4(sp)
10104864:	2c7fffc4 	addi	r17,r5,-1
10104868:	8c401a24 	muli	r17,r17,104
1010486c:	dc800215 	stw	r18,8(sp)
10104870:	2825883a 	mov	r18,r5
10104874:	89401d04 	addi	r5,r17,116
10104878:	dc000015 	stw	r16,0(sp)
1010487c:	dfc00315 	stw	ra,12(sp)
10104880:	01052980 	call	10105298 <_malloc_r>
10104884:	1021883a 	mov	r16,r2
10104888:	10000726 	beq	r2,zero,101048a8 <__sfmoreglue+0x4c>
1010488c:	11000304 	addi	r4,r2,12
10104890:	10000015 	stw	zero,0(r2)
10104894:	14800115 	stw	r18,4(r2)
10104898:	11000215 	stw	r4,8(r2)
1010489c:	89801a04 	addi	r6,r17,104
101048a0:	000b883a 	mov	r5,zero
101048a4:	0105cd00 	call	10105cd0 <memset>
101048a8:	8005883a 	mov	r2,r16
101048ac:	dfc00317 	ldw	ra,12(sp)
101048b0:	dc800217 	ldw	r18,8(sp)
101048b4:	dc400117 	ldw	r17,4(sp)
101048b8:	dc000017 	ldw	r16,0(sp)
101048bc:	dec00404 	addi	sp,sp,16
101048c0:	f800283a 	ret

101048c4 <__sfp>:
101048c4:	defffb04 	addi	sp,sp,-20
101048c8:	dc000015 	stw	r16,0(sp)
101048cc:	04040474 	movhi	r16,4113
101048d0:	84052a04 	addi	r16,r16,5288
101048d4:	dcc00315 	stw	r19,12(sp)
101048d8:	2027883a 	mov	r19,r4
101048dc:	81000017 	ldw	r4,0(r16)
101048e0:	dfc00415 	stw	ra,16(sp)
101048e4:	dc800215 	stw	r18,8(sp)
101048e8:	20800e17 	ldw	r2,56(r4)
101048ec:	dc400115 	stw	r17,4(sp)
101048f0:	1000021e 	bne	r2,zero,101048fc <__sfp+0x38>
101048f4:	01046b80 	call	101046b8 <__sinit.part.1>
101048f8:	81000017 	ldw	r4,0(r16)
101048fc:	2480b804 	addi	r18,r4,736
10104900:	047fffc4 	movi	r17,-1
10104904:	91000117 	ldw	r4,4(r18)
10104908:	94000217 	ldw	r16,8(r18)
1010490c:	213fffc4 	addi	r4,r4,-1
10104910:	20000a16 	blt	r4,zero,1010493c <__sfp+0x78>
10104914:	8080030f 	ldh	r2,12(r16)
10104918:	10000c26 	beq	r2,zero,1010494c <__sfp+0x88>
1010491c:	80c01d04 	addi	r3,r16,116
10104920:	00000206 	br	1010492c <__sfp+0x68>
10104924:	18bfe60f 	ldh	r2,-104(r3)
10104928:	10000826 	beq	r2,zero,1010494c <__sfp+0x88>
1010492c:	213fffc4 	addi	r4,r4,-1
10104930:	1c3ffd04 	addi	r16,r3,-12
10104934:	18c01a04 	addi	r3,r3,104
10104938:	247ffa1e 	bne	r4,r17,10104924 <__alt_data_end+0xfffe4924>
1010493c:	90800017 	ldw	r2,0(r18)
10104940:	10001d26 	beq	r2,zero,101049b8 <__sfp+0xf4>
10104944:	1025883a 	mov	r18,r2
10104948:	003fee06 	br	10104904 <__alt_data_end+0xfffe4904>
1010494c:	00bfffc4 	movi	r2,-1
10104950:	8080038d 	sth	r2,14(r16)
10104954:	00800044 	movi	r2,1
10104958:	8080030d 	sth	r2,12(r16)
1010495c:	80001915 	stw	zero,100(r16)
10104960:	80000015 	stw	zero,0(r16)
10104964:	80000215 	stw	zero,8(r16)
10104968:	80000115 	stw	zero,4(r16)
1010496c:	80000415 	stw	zero,16(r16)
10104970:	80000515 	stw	zero,20(r16)
10104974:	80000615 	stw	zero,24(r16)
10104978:	01800204 	movi	r6,8
1010497c:	000b883a 	mov	r5,zero
10104980:	81001704 	addi	r4,r16,92
10104984:	0105cd00 	call	10105cd0 <memset>
10104988:	8005883a 	mov	r2,r16
1010498c:	80000c15 	stw	zero,48(r16)
10104990:	80000d15 	stw	zero,52(r16)
10104994:	80001115 	stw	zero,68(r16)
10104998:	80001215 	stw	zero,72(r16)
1010499c:	dfc00417 	ldw	ra,16(sp)
101049a0:	dcc00317 	ldw	r19,12(sp)
101049a4:	dc800217 	ldw	r18,8(sp)
101049a8:	dc400117 	ldw	r17,4(sp)
101049ac:	dc000017 	ldw	r16,0(sp)
101049b0:	dec00504 	addi	sp,sp,20
101049b4:	f800283a 	ret
101049b8:	01400104 	movi	r5,4
101049bc:	9809883a 	mov	r4,r19
101049c0:	010485c0 	call	1010485c <__sfmoreglue>
101049c4:	90800015 	stw	r2,0(r18)
101049c8:	103fde1e 	bne	r2,zero,10104944 <__alt_data_end+0xfffe4944>
101049cc:	00800304 	movi	r2,12
101049d0:	98800015 	stw	r2,0(r19)
101049d4:	0005883a 	mov	r2,zero
101049d8:	003ff006 	br	1010499c <__alt_data_end+0xfffe499c>

101049dc <_cleanup>:
101049dc:	00840474 	movhi	r2,4113
101049e0:	10852a04 	addi	r2,r2,5288
101049e4:	11000017 	ldw	r4,0(r2)
101049e8:	01440474 	movhi	r5,4113
101049ec:	29624b04 	addi	r5,r5,-30420
101049f0:	0104f3c1 	jmpi	10104f3c <_fwalk_reent>

101049f4 <__sinit>:
101049f4:	20800e17 	ldw	r2,56(r4)
101049f8:	10000126 	beq	r2,zero,10104a00 <__sinit+0xc>
101049fc:	f800283a 	ret
10104a00:	01046b81 	jmpi	101046b8 <__sinit.part.1>

10104a04 <__sfp_lock_acquire>:
10104a04:	f800283a 	ret

10104a08 <__sfp_lock_release>:
10104a08:	f800283a 	ret

10104a0c <__sinit_lock_acquire>:
10104a0c:	f800283a 	ret

10104a10 <__sinit_lock_release>:
10104a10:	f800283a 	ret

10104a14 <__fp_lock_all>:
10104a14:	00840474 	movhi	r2,4113
10104a18:	10852b04 	addi	r2,r2,5292
10104a1c:	11000017 	ldw	r4,0(r2)
10104a20:	01440434 	movhi	r5,4112
10104a24:	29521504 	addi	r5,r5,18516
10104a28:	0104e781 	jmpi	10104e78 <_fwalk>

10104a2c <__fp_unlock_all>:
10104a2c:	00840474 	movhi	r2,4113
10104a30:	10852b04 	addi	r2,r2,5292
10104a34:	11000017 	ldw	r4,0(r2)
10104a38:	01440434 	movhi	r5,4112
10104a3c:	2951a904 	addi	r5,r5,18084
10104a40:	0104e781 	jmpi	10104e78 <_fwalk>

10104a44 <_malloc_trim_r>:
10104a44:	defffb04 	addi	sp,sp,-20
10104a48:	dcc00315 	stw	r19,12(sp)
10104a4c:	04c40474 	movhi	r19,4113
10104a50:	dc800215 	stw	r18,8(sp)
10104a54:	dc400115 	stw	r17,4(sp)
10104a58:	dc000015 	stw	r16,0(sp)
10104a5c:	dfc00415 	stw	ra,16(sp)
10104a60:	2821883a 	mov	r16,r5
10104a64:	9cffa604 	addi	r19,r19,-360
10104a68:	2025883a 	mov	r18,r4
10104a6c:	010d4fc0 	call	1010d4fc <__malloc_lock>
10104a70:	98800217 	ldw	r2,8(r19)
10104a74:	14400117 	ldw	r17,4(r2)
10104a78:	00bfff04 	movi	r2,-4
10104a7c:	88a2703a 	and	r17,r17,r2
10104a80:	8c21c83a 	sub	r16,r17,r16
10104a84:	8403fbc4 	addi	r16,r16,4079
10104a88:	8020d33a 	srli	r16,r16,12
10104a8c:	0083ffc4 	movi	r2,4095
10104a90:	843fffc4 	addi	r16,r16,-1
10104a94:	8020933a 	slli	r16,r16,12
10104a98:	1400060e 	bge	r2,r16,10104ab4 <_malloc_trim_r+0x70>
10104a9c:	000b883a 	mov	r5,zero
10104aa0:	9009883a 	mov	r4,r18
10104aa4:	0106e680 	call	10106e68 <_sbrk_r>
10104aa8:	98c00217 	ldw	r3,8(r19)
10104aac:	1c47883a 	add	r3,r3,r17
10104ab0:	10c00a26 	beq	r2,r3,10104adc <_malloc_trim_r+0x98>
10104ab4:	9009883a 	mov	r4,r18
10104ab8:	010d5200 	call	1010d520 <__malloc_unlock>
10104abc:	0005883a 	mov	r2,zero
10104ac0:	dfc00417 	ldw	ra,16(sp)
10104ac4:	dcc00317 	ldw	r19,12(sp)
10104ac8:	dc800217 	ldw	r18,8(sp)
10104acc:	dc400117 	ldw	r17,4(sp)
10104ad0:	dc000017 	ldw	r16,0(sp)
10104ad4:	dec00504 	addi	sp,sp,20
10104ad8:	f800283a 	ret
10104adc:	040bc83a 	sub	r5,zero,r16
10104ae0:	9009883a 	mov	r4,r18
10104ae4:	0106e680 	call	10106e68 <_sbrk_r>
10104ae8:	00ffffc4 	movi	r3,-1
10104aec:	10c00d26 	beq	r2,r3,10104b24 <_malloc_trim_r+0xe0>
10104af0:	00c40474 	movhi	r3,4113
10104af4:	18cc0304 	addi	r3,r3,12300
10104af8:	18800017 	ldw	r2,0(r3)
10104afc:	99000217 	ldw	r4,8(r19)
10104b00:	8c23c83a 	sub	r17,r17,r16
10104b04:	8c400054 	ori	r17,r17,1
10104b08:	1421c83a 	sub	r16,r2,r16
10104b0c:	24400115 	stw	r17,4(r4)
10104b10:	9009883a 	mov	r4,r18
10104b14:	1c000015 	stw	r16,0(r3)
10104b18:	010d5200 	call	1010d520 <__malloc_unlock>
10104b1c:	00800044 	movi	r2,1
10104b20:	003fe706 	br	10104ac0 <__alt_data_end+0xfffe4ac0>
10104b24:	000b883a 	mov	r5,zero
10104b28:	9009883a 	mov	r4,r18
10104b2c:	0106e680 	call	10106e68 <_sbrk_r>
10104b30:	99000217 	ldw	r4,8(r19)
10104b34:	014003c4 	movi	r5,15
10104b38:	1107c83a 	sub	r3,r2,r4
10104b3c:	28ffdd0e 	bge	r5,r3,10104ab4 <__alt_data_end+0xfffe4ab4>
10104b40:	01440474 	movhi	r5,4113
10104b44:	29452d04 	addi	r5,r5,5300
10104b48:	29400017 	ldw	r5,0(r5)
10104b4c:	18c00054 	ori	r3,r3,1
10104b50:	20c00115 	stw	r3,4(r4)
10104b54:	00c40474 	movhi	r3,4113
10104b58:	1145c83a 	sub	r2,r2,r5
10104b5c:	18cc0304 	addi	r3,r3,12300
10104b60:	18800015 	stw	r2,0(r3)
10104b64:	003fd306 	br	10104ab4 <__alt_data_end+0xfffe4ab4>

10104b68 <_free_r>:
10104b68:	28004126 	beq	r5,zero,10104c70 <_free_r+0x108>
10104b6c:	defffd04 	addi	sp,sp,-12
10104b70:	dc400115 	stw	r17,4(sp)
10104b74:	dc000015 	stw	r16,0(sp)
10104b78:	2023883a 	mov	r17,r4
10104b7c:	2821883a 	mov	r16,r5
10104b80:	dfc00215 	stw	ra,8(sp)
10104b84:	010d4fc0 	call	1010d4fc <__malloc_lock>
10104b88:	81ffff17 	ldw	r7,-4(r16)
10104b8c:	00bfff84 	movi	r2,-2
10104b90:	01040474 	movhi	r4,4113
10104b94:	81bffe04 	addi	r6,r16,-8
10104b98:	3884703a 	and	r2,r7,r2
10104b9c:	213fa604 	addi	r4,r4,-360
10104ba0:	308b883a 	add	r5,r6,r2
10104ba4:	2a400117 	ldw	r9,4(r5)
10104ba8:	22000217 	ldw	r8,8(r4)
10104bac:	00ffff04 	movi	r3,-4
10104bb0:	48c6703a 	and	r3,r9,r3
10104bb4:	2a005726 	beq	r5,r8,10104d14 <_free_r+0x1ac>
10104bb8:	28c00115 	stw	r3,4(r5)
10104bbc:	39c0004c 	andi	r7,r7,1
10104bc0:	3800091e 	bne	r7,zero,10104be8 <_free_r+0x80>
10104bc4:	823ffe17 	ldw	r8,-8(r16)
10104bc8:	22400204 	addi	r9,r4,8
10104bcc:	320dc83a 	sub	r6,r6,r8
10104bd0:	31c00217 	ldw	r7,8(r6)
10104bd4:	1205883a 	add	r2,r2,r8
10104bd8:	3a406526 	beq	r7,r9,10104d70 <_free_r+0x208>
10104bdc:	32000317 	ldw	r8,12(r6)
10104be0:	3a000315 	stw	r8,12(r7)
10104be4:	41c00215 	stw	r7,8(r8)
10104be8:	28cf883a 	add	r7,r5,r3
10104bec:	39c00117 	ldw	r7,4(r7)
10104bf0:	39c0004c 	andi	r7,r7,1
10104bf4:	38003a26 	beq	r7,zero,10104ce0 <_free_r+0x178>
10104bf8:	10c00054 	ori	r3,r2,1
10104bfc:	30c00115 	stw	r3,4(r6)
10104c00:	3087883a 	add	r3,r6,r2
10104c04:	18800015 	stw	r2,0(r3)
10104c08:	00c07fc4 	movi	r3,511
10104c0c:	18801936 	bltu	r3,r2,10104c74 <_free_r+0x10c>
10104c10:	1004d0fa 	srli	r2,r2,3
10104c14:	01c00044 	movi	r7,1
10104c18:	21400117 	ldw	r5,4(r4)
10104c1c:	10c00044 	addi	r3,r2,1
10104c20:	18c7883a 	add	r3,r3,r3
10104c24:	1005d0ba 	srai	r2,r2,2
10104c28:	18c7883a 	add	r3,r3,r3
10104c2c:	18c7883a 	add	r3,r3,r3
10104c30:	1907883a 	add	r3,r3,r4
10104c34:	3884983a 	sll	r2,r7,r2
10104c38:	19c00017 	ldw	r7,0(r3)
10104c3c:	1a3ffe04 	addi	r8,r3,-8
10104c40:	1144b03a 	or	r2,r2,r5
10104c44:	32000315 	stw	r8,12(r6)
10104c48:	31c00215 	stw	r7,8(r6)
10104c4c:	20800115 	stw	r2,4(r4)
10104c50:	19800015 	stw	r6,0(r3)
10104c54:	39800315 	stw	r6,12(r7)
10104c58:	8809883a 	mov	r4,r17
10104c5c:	dfc00217 	ldw	ra,8(sp)
10104c60:	dc400117 	ldw	r17,4(sp)
10104c64:	dc000017 	ldw	r16,0(sp)
10104c68:	dec00304 	addi	sp,sp,12
10104c6c:	010d5201 	jmpi	1010d520 <__malloc_unlock>
10104c70:	f800283a 	ret
10104c74:	100ad27a 	srli	r5,r2,9
10104c78:	00c00104 	movi	r3,4
10104c7c:	19404a36 	bltu	r3,r5,10104da8 <_free_r+0x240>
10104c80:	100ad1ba 	srli	r5,r2,6
10104c84:	28c00e44 	addi	r3,r5,57
10104c88:	18c7883a 	add	r3,r3,r3
10104c8c:	29400e04 	addi	r5,r5,56
10104c90:	18c7883a 	add	r3,r3,r3
10104c94:	18c7883a 	add	r3,r3,r3
10104c98:	1909883a 	add	r4,r3,r4
10104c9c:	20c00017 	ldw	r3,0(r4)
10104ca0:	01c40474 	movhi	r7,4113
10104ca4:	213ffe04 	addi	r4,r4,-8
10104ca8:	39ffa604 	addi	r7,r7,-360
10104cac:	20c04426 	beq	r4,r3,10104dc0 <_free_r+0x258>
10104cb0:	01ffff04 	movi	r7,-4
10104cb4:	19400117 	ldw	r5,4(r3)
10104cb8:	29ca703a 	and	r5,r5,r7
10104cbc:	1140022e 	bgeu	r2,r5,10104cc8 <_free_r+0x160>
10104cc0:	18c00217 	ldw	r3,8(r3)
10104cc4:	20fffb1e 	bne	r4,r3,10104cb4 <__alt_data_end+0xfffe4cb4>
10104cc8:	19000317 	ldw	r4,12(r3)
10104ccc:	31000315 	stw	r4,12(r6)
10104cd0:	30c00215 	stw	r3,8(r6)
10104cd4:	21800215 	stw	r6,8(r4)
10104cd8:	19800315 	stw	r6,12(r3)
10104cdc:	003fde06 	br	10104c58 <__alt_data_end+0xfffe4c58>
10104ce0:	29c00217 	ldw	r7,8(r5)
10104ce4:	10c5883a 	add	r2,r2,r3
10104ce8:	00c40474 	movhi	r3,4113
10104cec:	18ffa804 	addi	r3,r3,-352
10104cf0:	38c03b26 	beq	r7,r3,10104de0 <_free_r+0x278>
10104cf4:	2a000317 	ldw	r8,12(r5)
10104cf8:	11400054 	ori	r5,r2,1
10104cfc:	3087883a 	add	r3,r6,r2
10104d00:	3a000315 	stw	r8,12(r7)
10104d04:	41c00215 	stw	r7,8(r8)
10104d08:	31400115 	stw	r5,4(r6)
10104d0c:	18800015 	stw	r2,0(r3)
10104d10:	003fbd06 	br	10104c08 <__alt_data_end+0xfffe4c08>
10104d14:	39c0004c 	andi	r7,r7,1
10104d18:	10c5883a 	add	r2,r2,r3
10104d1c:	3800071e 	bne	r7,zero,10104d3c <_free_r+0x1d4>
10104d20:	81fffe17 	ldw	r7,-8(r16)
10104d24:	31cdc83a 	sub	r6,r6,r7
10104d28:	30c00317 	ldw	r3,12(r6)
10104d2c:	31400217 	ldw	r5,8(r6)
10104d30:	11c5883a 	add	r2,r2,r7
10104d34:	28c00315 	stw	r3,12(r5)
10104d38:	19400215 	stw	r5,8(r3)
10104d3c:	10c00054 	ori	r3,r2,1
10104d40:	30c00115 	stw	r3,4(r6)
10104d44:	00c40474 	movhi	r3,4113
10104d48:	18c52e04 	addi	r3,r3,5304
10104d4c:	18c00017 	ldw	r3,0(r3)
10104d50:	21800215 	stw	r6,8(r4)
10104d54:	10ffc036 	bltu	r2,r3,10104c58 <__alt_data_end+0xfffe4c58>
10104d58:	00840474 	movhi	r2,4113
10104d5c:	108bfa04 	addi	r2,r2,12264
10104d60:	11400017 	ldw	r5,0(r2)
10104d64:	8809883a 	mov	r4,r17
10104d68:	0104a440 	call	10104a44 <_malloc_trim_r>
10104d6c:	003fba06 	br	10104c58 <__alt_data_end+0xfffe4c58>
10104d70:	28c9883a 	add	r4,r5,r3
10104d74:	21000117 	ldw	r4,4(r4)
10104d78:	2100004c 	andi	r4,r4,1
10104d7c:	2000391e 	bne	r4,zero,10104e64 <_free_r+0x2fc>
10104d80:	29c00217 	ldw	r7,8(r5)
10104d84:	29000317 	ldw	r4,12(r5)
10104d88:	1885883a 	add	r2,r3,r2
10104d8c:	10c00054 	ori	r3,r2,1
10104d90:	39000315 	stw	r4,12(r7)
10104d94:	21c00215 	stw	r7,8(r4)
10104d98:	30c00115 	stw	r3,4(r6)
10104d9c:	308d883a 	add	r6,r6,r2
10104da0:	30800015 	stw	r2,0(r6)
10104da4:	003fac06 	br	10104c58 <__alt_data_end+0xfffe4c58>
10104da8:	00c00504 	movi	r3,20
10104dac:	19401536 	bltu	r3,r5,10104e04 <_free_r+0x29c>
10104db0:	28c01704 	addi	r3,r5,92
10104db4:	18c7883a 	add	r3,r3,r3
10104db8:	294016c4 	addi	r5,r5,91
10104dbc:	003fb406 	br	10104c90 <__alt_data_end+0xfffe4c90>
10104dc0:	280bd0ba 	srai	r5,r5,2
10104dc4:	00c00044 	movi	r3,1
10104dc8:	38800117 	ldw	r2,4(r7)
10104dcc:	194a983a 	sll	r5,r3,r5
10104dd0:	2007883a 	mov	r3,r4
10104dd4:	2884b03a 	or	r2,r5,r2
10104dd8:	38800115 	stw	r2,4(r7)
10104ddc:	003fbb06 	br	10104ccc <__alt_data_end+0xfffe4ccc>
10104de0:	21800515 	stw	r6,20(r4)
10104de4:	21800415 	stw	r6,16(r4)
10104de8:	10c00054 	ori	r3,r2,1
10104dec:	31c00315 	stw	r7,12(r6)
10104df0:	31c00215 	stw	r7,8(r6)
10104df4:	30c00115 	stw	r3,4(r6)
10104df8:	308d883a 	add	r6,r6,r2
10104dfc:	30800015 	stw	r2,0(r6)
10104e00:	003f9506 	br	10104c58 <__alt_data_end+0xfffe4c58>
10104e04:	00c01504 	movi	r3,84
10104e08:	19400536 	bltu	r3,r5,10104e20 <_free_r+0x2b8>
10104e0c:	100ad33a 	srli	r5,r2,12
10104e10:	28c01bc4 	addi	r3,r5,111
10104e14:	18c7883a 	add	r3,r3,r3
10104e18:	29401b84 	addi	r5,r5,110
10104e1c:	003f9c06 	br	10104c90 <__alt_data_end+0xfffe4c90>
10104e20:	00c05504 	movi	r3,340
10104e24:	19400536 	bltu	r3,r5,10104e3c <_free_r+0x2d4>
10104e28:	100ad3fa 	srli	r5,r2,15
10104e2c:	28c01e04 	addi	r3,r5,120
10104e30:	18c7883a 	add	r3,r3,r3
10104e34:	29401dc4 	addi	r5,r5,119
10104e38:	003f9506 	br	10104c90 <__alt_data_end+0xfffe4c90>
10104e3c:	00c15504 	movi	r3,1364
10104e40:	19400536 	bltu	r3,r5,10104e58 <_free_r+0x2f0>
10104e44:	100ad4ba 	srli	r5,r2,18
10104e48:	28c01f44 	addi	r3,r5,125
10104e4c:	18c7883a 	add	r3,r3,r3
10104e50:	29401f04 	addi	r5,r5,124
10104e54:	003f8e06 	br	10104c90 <__alt_data_end+0xfffe4c90>
10104e58:	00c03f84 	movi	r3,254
10104e5c:	01401f84 	movi	r5,126
10104e60:	003f8b06 	br	10104c90 <__alt_data_end+0xfffe4c90>
10104e64:	10c00054 	ori	r3,r2,1
10104e68:	30c00115 	stw	r3,4(r6)
10104e6c:	308d883a 	add	r6,r6,r2
10104e70:	30800015 	stw	r2,0(r6)
10104e74:	003f7806 	br	10104c58 <__alt_data_end+0xfffe4c58>

10104e78 <_fwalk>:
10104e78:	defff704 	addi	sp,sp,-36
10104e7c:	dd000415 	stw	r20,16(sp)
10104e80:	dfc00815 	stw	ra,32(sp)
10104e84:	ddc00715 	stw	r23,28(sp)
10104e88:	dd800615 	stw	r22,24(sp)
10104e8c:	dd400515 	stw	r21,20(sp)
10104e90:	dcc00315 	stw	r19,12(sp)
10104e94:	dc800215 	stw	r18,8(sp)
10104e98:	dc400115 	stw	r17,4(sp)
10104e9c:	dc000015 	stw	r16,0(sp)
10104ea0:	2500b804 	addi	r20,r4,736
10104ea4:	a0002326 	beq	r20,zero,10104f34 <_fwalk+0xbc>
10104ea8:	282b883a 	mov	r21,r5
10104eac:	002f883a 	mov	r23,zero
10104eb0:	05800044 	movi	r22,1
10104eb4:	04ffffc4 	movi	r19,-1
10104eb8:	a4400117 	ldw	r17,4(r20)
10104ebc:	a4800217 	ldw	r18,8(r20)
10104ec0:	8c7fffc4 	addi	r17,r17,-1
10104ec4:	88000d16 	blt	r17,zero,10104efc <_fwalk+0x84>
10104ec8:	94000304 	addi	r16,r18,12
10104ecc:	94800384 	addi	r18,r18,14
10104ed0:	8080000b 	ldhu	r2,0(r16)
10104ed4:	8c7fffc4 	addi	r17,r17,-1
10104ed8:	813ffd04 	addi	r4,r16,-12
10104edc:	b080042e 	bgeu	r22,r2,10104ef0 <_fwalk+0x78>
10104ee0:	9080000f 	ldh	r2,0(r18)
10104ee4:	14c00226 	beq	r2,r19,10104ef0 <_fwalk+0x78>
10104ee8:	a83ee83a 	callr	r21
10104eec:	b8aeb03a 	or	r23,r23,r2
10104ef0:	84001a04 	addi	r16,r16,104
10104ef4:	94801a04 	addi	r18,r18,104
10104ef8:	8cfff51e 	bne	r17,r19,10104ed0 <__alt_data_end+0xfffe4ed0>
10104efc:	a5000017 	ldw	r20,0(r20)
10104f00:	a03fed1e 	bne	r20,zero,10104eb8 <__alt_data_end+0xfffe4eb8>
10104f04:	b805883a 	mov	r2,r23
10104f08:	dfc00817 	ldw	ra,32(sp)
10104f0c:	ddc00717 	ldw	r23,28(sp)
10104f10:	dd800617 	ldw	r22,24(sp)
10104f14:	dd400517 	ldw	r21,20(sp)
10104f18:	dd000417 	ldw	r20,16(sp)
10104f1c:	dcc00317 	ldw	r19,12(sp)
10104f20:	dc800217 	ldw	r18,8(sp)
10104f24:	dc400117 	ldw	r17,4(sp)
10104f28:	dc000017 	ldw	r16,0(sp)
10104f2c:	dec00904 	addi	sp,sp,36
10104f30:	f800283a 	ret
10104f34:	002f883a 	mov	r23,zero
10104f38:	003ff206 	br	10104f04 <__alt_data_end+0xfffe4f04>

10104f3c <_fwalk_reent>:
10104f3c:	defff704 	addi	sp,sp,-36
10104f40:	dd000415 	stw	r20,16(sp)
10104f44:	dfc00815 	stw	ra,32(sp)
10104f48:	ddc00715 	stw	r23,28(sp)
10104f4c:	dd800615 	stw	r22,24(sp)
10104f50:	dd400515 	stw	r21,20(sp)
10104f54:	dcc00315 	stw	r19,12(sp)
10104f58:	dc800215 	stw	r18,8(sp)
10104f5c:	dc400115 	stw	r17,4(sp)
10104f60:	dc000015 	stw	r16,0(sp)
10104f64:	2500b804 	addi	r20,r4,736
10104f68:	a0002326 	beq	r20,zero,10104ff8 <_fwalk_reent+0xbc>
10104f6c:	282b883a 	mov	r21,r5
10104f70:	2027883a 	mov	r19,r4
10104f74:	002f883a 	mov	r23,zero
10104f78:	05800044 	movi	r22,1
10104f7c:	04bfffc4 	movi	r18,-1
10104f80:	a4400117 	ldw	r17,4(r20)
10104f84:	a4000217 	ldw	r16,8(r20)
10104f88:	8c7fffc4 	addi	r17,r17,-1
10104f8c:	88000c16 	blt	r17,zero,10104fc0 <_fwalk_reent+0x84>
10104f90:	84000304 	addi	r16,r16,12
10104f94:	8080000b 	ldhu	r2,0(r16)
10104f98:	8c7fffc4 	addi	r17,r17,-1
10104f9c:	817ffd04 	addi	r5,r16,-12
10104fa0:	b080052e 	bgeu	r22,r2,10104fb8 <_fwalk_reent+0x7c>
10104fa4:	8080008f 	ldh	r2,2(r16)
10104fa8:	9809883a 	mov	r4,r19
10104fac:	14800226 	beq	r2,r18,10104fb8 <_fwalk_reent+0x7c>
10104fb0:	a83ee83a 	callr	r21
10104fb4:	b8aeb03a 	or	r23,r23,r2
10104fb8:	84001a04 	addi	r16,r16,104
10104fbc:	8cbff51e 	bne	r17,r18,10104f94 <__alt_data_end+0xfffe4f94>
10104fc0:	a5000017 	ldw	r20,0(r20)
10104fc4:	a03fee1e 	bne	r20,zero,10104f80 <__alt_data_end+0xfffe4f80>
10104fc8:	b805883a 	mov	r2,r23
10104fcc:	dfc00817 	ldw	ra,32(sp)
10104fd0:	ddc00717 	ldw	r23,28(sp)
10104fd4:	dd800617 	ldw	r22,24(sp)
10104fd8:	dd400517 	ldw	r21,20(sp)
10104fdc:	dd000417 	ldw	r20,16(sp)
10104fe0:	dcc00317 	ldw	r19,12(sp)
10104fe4:	dc800217 	ldw	r18,8(sp)
10104fe8:	dc400117 	ldw	r17,4(sp)
10104fec:	dc000017 	ldw	r16,0(sp)
10104ff0:	dec00904 	addi	sp,sp,36
10104ff4:	f800283a 	ret
10104ff8:	002f883a 	mov	r23,zero
10104ffc:	003ff206 	br	10104fc8 <__alt_data_end+0xfffe4fc8>

10105000 <_setlocale_r>:
10105000:	30001b26 	beq	r6,zero,10105070 <_setlocale_r+0x70>
10105004:	01440474 	movhi	r5,4113
10105008:	defffe04 	addi	sp,sp,-8
1010500c:	297dde04 	addi	r5,r5,-2184
10105010:	3009883a 	mov	r4,r6
10105014:	dc000015 	stw	r16,0(sp)
10105018:	dfc00115 	stw	ra,4(sp)
1010501c:	3021883a 	mov	r16,r6
10105020:	0106ff80 	call	10106ff8 <strcmp>
10105024:	1000061e 	bne	r2,zero,10105040 <_setlocale_r+0x40>
10105028:	00840474 	movhi	r2,4113
1010502c:	10bddd04 	addi	r2,r2,-2188
10105030:	dfc00117 	ldw	ra,4(sp)
10105034:	dc000017 	ldw	r16,0(sp)
10105038:	dec00204 	addi	sp,sp,8
1010503c:	f800283a 	ret
10105040:	01440474 	movhi	r5,4113
10105044:	297ddd04 	addi	r5,r5,-2188
10105048:	8009883a 	mov	r4,r16
1010504c:	0106ff80 	call	10106ff8 <strcmp>
10105050:	103ff526 	beq	r2,zero,10105028 <__alt_data_end+0xfffe5028>
10105054:	01440474 	movhi	r5,4113
10105058:	297dc804 	addi	r5,r5,-2272
1010505c:	8009883a 	mov	r4,r16
10105060:	0106ff80 	call	10106ff8 <strcmp>
10105064:	103ff026 	beq	r2,zero,10105028 <__alt_data_end+0xfffe5028>
10105068:	0005883a 	mov	r2,zero
1010506c:	003ff006 	br	10105030 <__alt_data_end+0xfffe5030>
10105070:	00840474 	movhi	r2,4113
10105074:	10bddd04 	addi	r2,r2,-2188
10105078:	f800283a 	ret

1010507c <__locale_charset>:
1010507c:	00840474 	movhi	r2,4113
10105080:	10bf9004 	addi	r2,r2,-448
10105084:	f800283a 	ret

10105088 <__locale_mb_cur_max>:
10105088:	00840474 	movhi	r2,4113
1010508c:	10852c04 	addi	r2,r2,5296
10105090:	10800017 	ldw	r2,0(r2)
10105094:	f800283a 	ret

10105098 <__locale_msgcharset>:
10105098:	00840474 	movhi	r2,4113
1010509c:	10bf8804 	addi	r2,r2,-480
101050a0:	f800283a 	ret

101050a4 <__locale_cjk_lang>:
101050a4:	0005883a 	mov	r2,zero
101050a8:	f800283a 	ret

101050ac <_localeconv_r>:
101050ac:	00840474 	movhi	r2,4113
101050b0:	10bf9804 	addi	r2,r2,-416
101050b4:	f800283a 	ret

101050b8 <setlocale>:
101050b8:	00840474 	movhi	r2,4113
101050bc:	10852b04 	addi	r2,r2,5292
101050c0:	280d883a 	mov	r6,r5
101050c4:	200b883a 	mov	r5,r4
101050c8:	11000017 	ldw	r4,0(r2)
101050cc:	01050001 	jmpi	10105000 <_setlocale_r>

101050d0 <localeconv>:
101050d0:	00840474 	movhi	r2,4113
101050d4:	10bf9804 	addi	r2,r2,-416
101050d8:	f800283a 	ret

101050dc <__smakebuf_r>:
101050dc:	2880030b 	ldhu	r2,12(r5)
101050e0:	10c0008c 	andi	r3,r2,2
101050e4:	1800411e 	bne	r3,zero,101051ec <__smakebuf_r+0x110>
101050e8:	deffec04 	addi	sp,sp,-80
101050ec:	dc000f15 	stw	r16,60(sp)
101050f0:	2821883a 	mov	r16,r5
101050f4:	2940038f 	ldh	r5,14(r5)
101050f8:	dc401015 	stw	r17,64(sp)
101050fc:	dfc01315 	stw	ra,76(sp)
10105100:	dcc01215 	stw	r19,72(sp)
10105104:	dc801115 	stw	r18,68(sp)
10105108:	2023883a 	mov	r17,r4
1010510c:	28001c16 	blt	r5,zero,10105180 <__smakebuf_r+0xa4>
10105110:	d80d883a 	mov	r6,sp
10105114:	0108c380 	call	10108c38 <_fstat_r>
10105118:	10001816 	blt	r2,zero,1010517c <__smakebuf_r+0xa0>
1010511c:	d8800117 	ldw	r2,4(sp)
10105120:	00e00014 	movui	r3,32768
10105124:	10bc000c 	andi	r2,r2,61440
10105128:	14c80020 	cmpeqi	r19,r2,8192
1010512c:	10c03726 	beq	r2,r3,1010520c <__smakebuf_r+0x130>
10105130:	80c0030b 	ldhu	r3,12(r16)
10105134:	18c20014 	ori	r3,r3,2048
10105138:	80c0030d 	sth	r3,12(r16)
1010513c:	00c80004 	movi	r3,8192
10105140:	10c0521e 	bne	r2,r3,1010528c <__smakebuf_r+0x1b0>
10105144:	8140038f 	ldh	r5,14(r16)
10105148:	8809883a 	mov	r4,r17
1010514c:	01091500 	call	10109150 <_isatty_r>
10105150:	10004c26 	beq	r2,zero,10105284 <__smakebuf_r+0x1a8>
10105154:	8080030b 	ldhu	r2,12(r16)
10105158:	80c010c4 	addi	r3,r16,67
1010515c:	80c00015 	stw	r3,0(r16)
10105160:	10800054 	ori	r2,r2,1
10105164:	8080030d 	sth	r2,12(r16)
10105168:	00800044 	movi	r2,1
1010516c:	80c00415 	stw	r3,16(r16)
10105170:	80800515 	stw	r2,20(r16)
10105174:	04810004 	movi	r18,1024
10105178:	00000706 	br	10105198 <__smakebuf_r+0xbc>
1010517c:	8080030b 	ldhu	r2,12(r16)
10105180:	10c0200c 	andi	r3,r2,128
10105184:	18001f1e 	bne	r3,zero,10105204 <__smakebuf_r+0x128>
10105188:	04810004 	movi	r18,1024
1010518c:	10820014 	ori	r2,r2,2048
10105190:	8080030d 	sth	r2,12(r16)
10105194:	0027883a 	mov	r19,zero
10105198:	900b883a 	mov	r5,r18
1010519c:	8809883a 	mov	r4,r17
101051a0:	01052980 	call	10105298 <_malloc_r>
101051a4:	10002c26 	beq	r2,zero,10105258 <__smakebuf_r+0x17c>
101051a8:	80c0030b 	ldhu	r3,12(r16)
101051ac:	01040434 	movhi	r4,4112
101051b0:	2111ab04 	addi	r4,r4,18092
101051b4:	89000f15 	stw	r4,60(r17)
101051b8:	18c02014 	ori	r3,r3,128
101051bc:	80c0030d 	sth	r3,12(r16)
101051c0:	80800015 	stw	r2,0(r16)
101051c4:	80800415 	stw	r2,16(r16)
101051c8:	84800515 	stw	r18,20(r16)
101051cc:	98001a1e 	bne	r19,zero,10105238 <__smakebuf_r+0x15c>
101051d0:	dfc01317 	ldw	ra,76(sp)
101051d4:	dcc01217 	ldw	r19,72(sp)
101051d8:	dc801117 	ldw	r18,68(sp)
101051dc:	dc401017 	ldw	r17,64(sp)
101051e0:	dc000f17 	ldw	r16,60(sp)
101051e4:	dec01404 	addi	sp,sp,80
101051e8:	f800283a 	ret
101051ec:	288010c4 	addi	r2,r5,67
101051f0:	28800015 	stw	r2,0(r5)
101051f4:	28800415 	stw	r2,16(r5)
101051f8:	00800044 	movi	r2,1
101051fc:	28800515 	stw	r2,20(r5)
10105200:	f800283a 	ret
10105204:	04801004 	movi	r18,64
10105208:	003fe006 	br	1010518c <__alt_data_end+0xfffe518c>
1010520c:	81000a17 	ldw	r4,40(r16)
10105210:	00c40434 	movhi	r3,4112
10105214:	18dbe504 	addi	r3,r3,28564
10105218:	20ffc51e 	bne	r4,r3,10105130 <__alt_data_end+0xfffe5130>
1010521c:	8080030b 	ldhu	r2,12(r16)
10105220:	04810004 	movi	r18,1024
10105224:	84801315 	stw	r18,76(r16)
10105228:	1484b03a 	or	r2,r2,r18
1010522c:	8080030d 	sth	r2,12(r16)
10105230:	0027883a 	mov	r19,zero
10105234:	003fd806 	br	10105198 <__alt_data_end+0xfffe5198>
10105238:	8140038f 	ldh	r5,14(r16)
1010523c:	8809883a 	mov	r4,r17
10105240:	01091500 	call	10109150 <_isatty_r>
10105244:	103fe226 	beq	r2,zero,101051d0 <__alt_data_end+0xfffe51d0>
10105248:	8080030b 	ldhu	r2,12(r16)
1010524c:	10800054 	ori	r2,r2,1
10105250:	8080030d 	sth	r2,12(r16)
10105254:	003fde06 	br	101051d0 <__alt_data_end+0xfffe51d0>
10105258:	8080030b 	ldhu	r2,12(r16)
1010525c:	10c0800c 	andi	r3,r2,512
10105260:	183fdb1e 	bne	r3,zero,101051d0 <__alt_data_end+0xfffe51d0>
10105264:	10800094 	ori	r2,r2,2
10105268:	80c010c4 	addi	r3,r16,67
1010526c:	8080030d 	sth	r2,12(r16)
10105270:	00800044 	movi	r2,1
10105274:	80c00015 	stw	r3,0(r16)
10105278:	80c00415 	stw	r3,16(r16)
1010527c:	80800515 	stw	r2,20(r16)
10105280:	003fd306 	br	101051d0 <__alt_data_end+0xfffe51d0>
10105284:	04810004 	movi	r18,1024
10105288:	003fc306 	br	10105198 <__alt_data_end+0xfffe5198>
1010528c:	0027883a 	mov	r19,zero
10105290:	04810004 	movi	r18,1024
10105294:	003fc006 	br	10105198 <__alt_data_end+0xfffe5198>

10105298 <_malloc_r>:
10105298:	defff504 	addi	sp,sp,-44
1010529c:	dc800315 	stw	r18,12(sp)
101052a0:	dfc00a15 	stw	ra,40(sp)
101052a4:	df000915 	stw	fp,36(sp)
101052a8:	ddc00815 	stw	r23,32(sp)
101052ac:	dd800715 	stw	r22,28(sp)
101052b0:	dd400615 	stw	r21,24(sp)
101052b4:	dd000515 	stw	r20,20(sp)
101052b8:	dcc00415 	stw	r19,16(sp)
101052bc:	dc400215 	stw	r17,8(sp)
101052c0:	dc000115 	stw	r16,4(sp)
101052c4:	288002c4 	addi	r2,r5,11
101052c8:	00c00584 	movi	r3,22
101052cc:	2025883a 	mov	r18,r4
101052d0:	18807f2e 	bgeu	r3,r2,101054d0 <_malloc_r+0x238>
101052d4:	047ffe04 	movi	r17,-8
101052d8:	1462703a 	and	r17,r2,r17
101052dc:	8800a316 	blt	r17,zero,1010556c <_malloc_r+0x2d4>
101052e0:	8940a236 	bltu	r17,r5,1010556c <_malloc_r+0x2d4>
101052e4:	010d4fc0 	call	1010d4fc <__malloc_lock>
101052e8:	00807dc4 	movi	r2,503
101052ec:	1441e92e 	bgeu	r2,r17,10105a94 <_malloc_r+0x7fc>
101052f0:	8804d27a 	srli	r2,r17,9
101052f4:	1000a126 	beq	r2,zero,1010557c <_malloc_r+0x2e4>
101052f8:	00c00104 	movi	r3,4
101052fc:	18811e36 	bltu	r3,r2,10105778 <_malloc_r+0x4e0>
10105300:	8804d1ba 	srli	r2,r17,6
10105304:	12000e44 	addi	r8,r2,57
10105308:	11c00e04 	addi	r7,r2,56
1010530c:	4209883a 	add	r4,r8,r8
10105310:	04c40474 	movhi	r19,4113
10105314:	2109883a 	add	r4,r4,r4
10105318:	9cffa604 	addi	r19,r19,-360
1010531c:	2109883a 	add	r4,r4,r4
10105320:	9909883a 	add	r4,r19,r4
10105324:	24000117 	ldw	r16,4(r4)
10105328:	213ffe04 	addi	r4,r4,-8
1010532c:	24009726 	beq	r4,r16,1010558c <_malloc_r+0x2f4>
10105330:	80800117 	ldw	r2,4(r16)
10105334:	01bfff04 	movi	r6,-4
10105338:	014003c4 	movi	r5,15
1010533c:	1184703a 	and	r2,r2,r6
10105340:	1447c83a 	sub	r3,r2,r17
10105344:	28c00716 	blt	r5,r3,10105364 <_malloc_r+0xcc>
10105348:	1800920e 	bge	r3,zero,10105594 <_malloc_r+0x2fc>
1010534c:	84000317 	ldw	r16,12(r16)
10105350:	24008e26 	beq	r4,r16,1010558c <_malloc_r+0x2f4>
10105354:	80800117 	ldw	r2,4(r16)
10105358:	1184703a 	and	r2,r2,r6
1010535c:	1447c83a 	sub	r3,r2,r17
10105360:	28fff90e 	bge	r5,r3,10105348 <__alt_data_end+0xfffe5348>
10105364:	3809883a 	mov	r4,r7
10105368:	01840474 	movhi	r6,4113
1010536c:	9c000417 	ldw	r16,16(r19)
10105370:	31bfa604 	addi	r6,r6,-360
10105374:	32000204 	addi	r8,r6,8
10105378:	82013426 	beq	r16,r8,1010584c <_malloc_r+0x5b4>
1010537c:	80c00117 	ldw	r3,4(r16)
10105380:	00bfff04 	movi	r2,-4
10105384:	188e703a 	and	r7,r3,r2
10105388:	3c45c83a 	sub	r2,r7,r17
1010538c:	00c003c4 	movi	r3,15
10105390:	18811f16 	blt	r3,r2,10105810 <_malloc_r+0x578>
10105394:	32000515 	stw	r8,20(r6)
10105398:	32000415 	stw	r8,16(r6)
1010539c:	10007f0e 	bge	r2,zero,1010559c <_malloc_r+0x304>
101053a0:	00807fc4 	movi	r2,511
101053a4:	11c0fd36 	bltu	r2,r7,1010579c <_malloc_r+0x504>
101053a8:	3806d0fa 	srli	r3,r7,3
101053ac:	01c00044 	movi	r7,1
101053b0:	30800117 	ldw	r2,4(r6)
101053b4:	19400044 	addi	r5,r3,1
101053b8:	294b883a 	add	r5,r5,r5
101053bc:	1807d0ba 	srai	r3,r3,2
101053c0:	294b883a 	add	r5,r5,r5
101053c4:	294b883a 	add	r5,r5,r5
101053c8:	298b883a 	add	r5,r5,r6
101053cc:	38c6983a 	sll	r3,r7,r3
101053d0:	29c00017 	ldw	r7,0(r5)
101053d4:	2a7ffe04 	addi	r9,r5,-8
101053d8:	1886b03a 	or	r3,r3,r2
101053dc:	82400315 	stw	r9,12(r16)
101053e0:	81c00215 	stw	r7,8(r16)
101053e4:	30c00115 	stw	r3,4(r6)
101053e8:	2c000015 	stw	r16,0(r5)
101053ec:	3c000315 	stw	r16,12(r7)
101053f0:	2005d0ba 	srai	r2,r4,2
101053f4:	01400044 	movi	r5,1
101053f8:	288a983a 	sll	r5,r5,r2
101053fc:	19406f36 	bltu	r3,r5,101055bc <_malloc_r+0x324>
10105400:	28c4703a 	and	r2,r5,r3
10105404:	10000a1e 	bne	r2,zero,10105430 <_malloc_r+0x198>
10105408:	00bfff04 	movi	r2,-4
1010540c:	294b883a 	add	r5,r5,r5
10105410:	2088703a 	and	r4,r4,r2
10105414:	28c4703a 	and	r2,r5,r3
10105418:	21000104 	addi	r4,r4,4
1010541c:	1000041e 	bne	r2,zero,10105430 <_malloc_r+0x198>
10105420:	294b883a 	add	r5,r5,r5
10105424:	28c4703a 	and	r2,r5,r3
10105428:	21000104 	addi	r4,r4,4
1010542c:	103ffc26 	beq	r2,zero,10105420 <__alt_data_end+0xfffe5420>
10105430:	02bfff04 	movi	r10,-4
10105434:	024003c4 	movi	r9,15
10105438:	21800044 	addi	r6,r4,1
1010543c:	318d883a 	add	r6,r6,r6
10105440:	318d883a 	add	r6,r6,r6
10105444:	318d883a 	add	r6,r6,r6
10105448:	998d883a 	add	r6,r19,r6
1010544c:	333ffe04 	addi	r12,r6,-8
10105450:	2017883a 	mov	r11,r4
10105454:	31800104 	addi	r6,r6,4
10105458:	34000017 	ldw	r16,0(r6)
1010545c:	31fffd04 	addi	r7,r6,-12
10105460:	81c0041e 	bne	r16,r7,10105474 <_malloc_r+0x1dc>
10105464:	0000fb06 	br	10105854 <_malloc_r+0x5bc>
10105468:	1801030e 	bge	r3,zero,10105878 <_malloc_r+0x5e0>
1010546c:	84000317 	ldw	r16,12(r16)
10105470:	81c0f826 	beq	r16,r7,10105854 <_malloc_r+0x5bc>
10105474:	80800117 	ldw	r2,4(r16)
10105478:	1284703a 	and	r2,r2,r10
1010547c:	1447c83a 	sub	r3,r2,r17
10105480:	48fff90e 	bge	r9,r3,10105468 <__alt_data_end+0xfffe5468>
10105484:	80800317 	ldw	r2,12(r16)
10105488:	81000217 	ldw	r4,8(r16)
1010548c:	89400054 	ori	r5,r17,1
10105490:	81400115 	stw	r5,4(r16)
10105494:	20800315 	stw	r2,12(r4)
10105498:	11000215 	stw	r4,8(r2)
1010549c:	8463883a 	add	r17,r16,r17
101054a0:	9c400515 	stw	r17,20(r19)
101054a4:	9c400415 	stw	r17,16(r19)
101054a8:	18800054 	ori	r2,r3,1
101054ac:	88800115 	stw	r2,4(r17)
101054b0:	8a000315 	stw	r8,12(r17)
101054b4:	8a000215 	stw	r8,8(r17)
101054b8:	88e3883a 	add	r17,r17,r3
101054bc:	88c00015 	stw	r3,0(r17)
101054c0:	9009883a 	mov	r4,r18
101054c4:	010d5200 	call	1010d520 <__malloc_unlock>
101054c8:	80800204 	addi	r2,r16,8
101054cc:	00001b06 	br	1010553c <_malloc_r+0x2a4>
101054d0:	04400404 	movi	r17,16
101054d4:	89402536 	bltu	r17,r5,1010556c <_malloc_r+0x2d4>
101054d8:	010d4fc0 	call	1010d4fc <__malloc_lock>
101054dc:	00800184 	movi	r2,6
101054e0:	01000084 	movi	r4,2
101054e4:	04c40474 	movhi	r19,4113
101054e8:	1085883a 	add	r2,r2,r2
101054ec:	9cffa604 	addi	r19,r19,-360
101054f0:	1085883a 	add	r2,r2,r2
101054f4:	9885883a 	add	r2,r19,r2
101054f8:	14000117 	ldw	r16,4(r2)
101054fc:	10fffe04 	addi	r3,r2,-8
10105500:	80c0d926 	beq	r16,r3,10105868 <_malloc_r+0x5d0>
10105504:	80c00117 	ldw	r3,4(r16)
10105508:	81000317 	ldw	r4,12(r16)
1010550c:	00bfff04 	movi	r2,-4
10105510:	1884703a 	and	r2,r3,r2
10105514:	81400217 	ldw	r5,8(r16)
10105518:	8085883a 	add	r2,r16,r2
1010551c:	10c00117 	ldw	r3,4(r2)
10105520:	29000315 	stw	r4,12(r5)
10105524:	21400215 	stw	r5,8(r4)
10105528:	18c00054 	ori	r3,r3,1
1010552c:	10c00115 	stw	r3,4(r2)
10105530:	9009883a 	mov	r4,r18
10105534:	010d5200 	call	1010d520 <__malloc_unlock>
10105538:	80800204 	addi	r2,r16,8
1010553c:	dfc00a17 	ldw	ra,40(sp)
10105540:	df000917 	ldw	fp,36(sp)
10105544:	ddc00817 	ldw	r23,32(sp)
10105548:	dd800717 	ldw	r22,28(sp)
1010554c:	dd400617 	ldw	r21,24(sp)
10105550:	dd000517 	ldw	r20,20(sp)
10105554:	dcc00417 	ldw	r19,16(sp)
10105558:	dc800317 	ldw	r18,12(sp)
1010555c:	dc400217 	ldw	r17,8(sp)
10105560:	dc000117 	ldw	r16,4(sp)
10105564:	dec00b04 	addi	sp,sp,44
10105568:	f800283a 	ret
1010556c:	00800304 	movi	r2,12
10105570:	90800015 	stw	r2,0(r18)
10105574:	0005883a 	mov	r2,zero
10105578:	003ff006 	br	1010553c <__alt_data_end+0xfffe553c>
1010557c:	01002004 	movi	r4,128
10105580:	02001004 	movi	r8,64
10105584:	01c00fc4 	movi	r7,63
10105588:	003f6106 	br	10105310 <__alt_data_end+0xfffe5310>
1010558c:	4009883a 	mov	r4,r8
10105590:	003f7506 	br	10105368 <__alt_data_end+0xfffe5368>
10105594:	81000317 	ldw	r4,12(r16)
10105598:	003fde06 	br	10105514 <__alt_data_end+0xfffe5514>
1010559c:	81c5883a 	add	r2,r16,r7
101055a0:	11400117 	ldw	r5,4(r2)
101055a4:	9009883a 	mov	r4,r18
101055a8:	29400054 	ori	r5,r5,1
101055ac:	11400115 	stw	r5,4(r2)
101055b0:	010d5200 	call	1010d520 <__malloc_unlock>
101055b4:	80800204 	addi	r2,r16,8
101055b8:	003fe006 	br	1010553c <__alt_data_end+0xfffe553c>
101055bc:	9c000217 	ldw	r16,8(r19)
101055c0:	00bfff04 	movi	r2,-4
101055c4:	85800117 	ldw	r22,4(r16)
101055c8:	b0ac703a 	and	r22,r22,r2
101055cc:	b4400336 	bltu	r22,r17,101055dc <_malloc_r+0x344>
101055d0:	b445c83a 	sub	r2,r22,r17
101055d4:	00c003c4 	movi	r3,15
101055d8:	18805d16 	blt	r3,r2,10105750 <_malloc_r+0x4b8>
101055dc:	05c40474 	movhi	r23,4113
101055e0:	00840474 	movhi	r2,4113
101055e4:	108bfa04 	addi	r2,r2,12264
101055e8:	bdc52d04 	addi	r23,r23,5300
101055ec:	15400017 	ldw	r21,0(r2)
101055f0:	b8c00017 	ldw	r3,0(r23)
101055f4:	00bfffc4 	movi	r2,-1
101055f8:	858d883a 	add	r6,r16,r22
101055fc:	8d6b883a 	add	r21,r17,r21
10105600:	1880ea26 	beq	r3,r2,101059ac <_malloc_r+0x714>
10105604:	ad4403c4 	addi	r21,r21,4111
10105608:	00bc0004 	movi	r2,-4096
1010560c:	a8aa703a 	and	r21,r21,r2
10105610:	a80b883a 	mov	r5,r21
10105614:	9009883a 	mov	r4,r18
10105618:	d9800015 	stw	r6,0(sp)
1010561c:	0106e680 	call	10106e68 <_sbrk_r>
10105620:	1029883a 	mov	r20,r2
10105624:	00bfffc4 	movi	r2,-1
10105628:	d9800017 	ldw	r6,0(sp)
1010562c:	a080e826 	beq	r20,r2,101059d0 <_malloc_r+0x738>
10105630:	a180a636 	bltu	r20,r6,101058cc <_malloc_r+0x634>
10105634:	07040474 	movhi	fp,4113
10105638:	e70c0304 	addi	fp,fp,12300
1010563c:	e0800017 	ldw	r2,0(fp)
10105640:	a887883a 	add	r3,r21,r2
10105644:	e0c00015 	stw	r3,0(fp)
10105648:	3500e626 	beq	r6,r20,101059e4 <_malloc_r+0x74c>
1010564c:	b9000017 	ldw	r4,0(r23)
10105650:	00bfffc4 	movi	r2,-1
10105654:	2080ee26 	beq	r4,r2,10105a10 <_malloc_r+0x778>
10105658:	a185c83a 	sub	r2,r20,r6
1010565c:	10c5883a 	add	r2,r2,r3
10105660:	e0800015 	stw	r2,0(fp)
10105664:	a0c001cc 	andi	r3,r20,7
10105668:	1800bc26 	beq	r3,zero,1010595c <_malloc_r+0x6c4>
1010566c:	a0e9c83a 	sub	r20,r20,r3
10105670:	00840204 	movi	r2,4104
10105674:	a5000204 	addi	r20,r20,8
10105678:	10c7c83a 	sub	r3,r2,r3
1010567c:	a545883a 	add	r2,r20,r21
10105680:	1083ffcc 	andi	r2,r2,4095
10105684:	18abc83a 	sub	r21,r3,r2
10105688:	a80b883a 	mov	r5,r21
1010568c:	9009883a 	mov	r4,r18
10105690:	0106e680 	call	10106e68 <_sbrk_r>
10105694:	00ffffc4 	movi	r3,-1
10105698:	10c0e126 	beq	r2,r3,10105a20 <_malloc_r+0x788>
1010569c:	1505c83a 	sub	r2,r2,r20
101056a0:	1545883a 	add	r2,r2,r21
101056a4:	10800054 	ori	r2,r2,1
101056a8:	e0c00017 	ldw	r3,0(fp)
101056ac:	9d000215 	stw	r20,8(r19)
101056b0:	a0800115 	stw	r2,4(r20)
101056b4:	a8c7883a 	add	r3,r21,r3
101056b8:	e0c00015 	stw	r3,0(fp)
101056bc:	84c00e26 	beq	r16,r19,101056f8 <_malloc_r+0x460>
101056c0:	018003c4 	movi	r6,15
101056c4:	3580a72e 	bgeu	r6,r22,10105964 <_malloc_r+0x6cc>
101056c8:	81400117 	ldw	r5,4(r16)
101056cc:	013ffe04 	movi	r4,-8
101056d0:	b0bffd04 	addi	r2,r22,-12
101056d4:	1104703a 	and	r2,r2,r4
101056d8:	2900004c 	andi	r4,r5,1
101056dc:	2088b03a 	or	r4,r4,r2
101056e0:	81000115 	stw	r4,4(r16)
101056e4:	01400144 	movi	r5,5
101056e8:	8089883a 	add	r4,r16,r2
101056ec:	21400115 	stw	r5,4(r4)
101056f0:	21400215 	stw	r5,8(r4)
101056f4:	3080cd36 	bltu	r6,r2,10105a2c <_malloc_r+0x794>
101056f8:	00840474 	movhi	r2,4113
101056fc:	108bf904 	addi	r2,r2,12260
10105700:	11000017 	ldw	r4,0(r2)
10105704:	20c0012e 	bgeu	r4,r3,1010570c <_malloc_r+0x474>
10105708:	10c00015 	stw	r3,0(r2)
1010570c:	00840474 	movhi	r2,4113
10105710:	108bf804 	addi	r2,r2,12256
10105714:	11000017 	ldw	r4,0(r2)
10105718:	9c000217 	ldw	r16,8(r19)
1010571c:	20c0012e 	bgeu	r4,r3,10105724 <_malloc_r+0x48c>
10105720:	10c00015 	stw	r3,0(r2)
10105724:	80c00117 	ldw	r3,4(r16)
10105728:	00bfff04 	movi	r2,-4
1010572c:	1886703a 	and	r3,r3,r2
10105730:	1c45c83a 	sub	r2,r3,r17
10105734:	1c400236 	bltu	r3,r17,10105740 <_malloc_r+0x4a8>
10105738:	00c003c4 	movi	r3,15
1010573c:	18800416 	blt	r3,r2,10105750 <_malloc_r+0x4b8>
10105740:	9009883a 	mov	r4,r18
10105744:	010d5200 	call	1010d520 <__malloc_unlock>
10105748:	0005883a 	mov	r2,zero
1010574c:	003f7b06 	br	1010553c <__alt_data_end+0xfffe553c>
10105750:	88c00054 	ori	r3,r17,1
10105754:	80c00115 	stw	r3,4(r16)
10105758:	8463883a 	add	r17,r16,r17
1010575c:	10800054 	ori	r2,r2,1
10105760:	9c400215 	stw	r17,8(r19)
10105764:	88800115 	stw	r2,4(r17)
10105768:	9009883a 	mov	r4,r18
1010576c:	010d5200 	call	1010d520 <__malloc_unlock>
10105770:	80800204 	addi	r2,r16,8
10105774:	003f7106 	br	1010553c <__alt_data_end+0xfffe553c>
10105778:	00c00504 	movi	r3,20
1010577c:	18804a2e 	bgeu	r3,r2,101058a8 <_malloc_r+0x610>
10105780:	00c01504 	movi	r3,84
10105784:	18806e36 	bltu	r3,r2,10105940 <_malloc_r+0x6a8>
10105788:	8804d33a 	srli	r2,r17,12
1010578c:	12001bc4 	addi	r8,r2,111
10105790:	11c01b84 	addi	r7,r2,110
10105794:	4209883a 	add	r4,r8,r8
10105798:	003edd06 	br	10105310 <__alt_data_end+0xfffe5310>
1010579c:	3804d27a 	srli	r2,r7,9
101057a0:	00c00104 	movi	r3,4
101057a4:	1880442e 	bgeu	r3,r2,101058b8 <_malloc_r+0x620>
101057a8:	00c00504 	movi	r3,20
101057ac:	18808136 	bltu	r3,r2,101059b4 <_malloc_r+0x71c>
101057b0:	11401704 	addi	r5,r2,92
101057b4:	10c016c4 	addi	r3,r2,91
101057b8:	294b883a 	add	r5,r5,r5
101057bc:	294b883a 	add	r5,r5,r5
101057c0:	294b883a 	add	r5,r5,r5
101057c4:	994b883a 	add	r5,r19,r5
101057c8:	28800017 	ldw	r2,0(r5)
101057cc:	01840474 	movhi	r6,4113
101057d0:	297ffe04 	addi	r5,r5,-8
101057d4:	31bfa604 	addi	r6,r6,-360
101057d8:	28806526 	beq	r5,r2,10105970 <_malloc_r+0x6d8>
101057dc:	01bfff04 	movi	r6,-4
101057e0:	10c00117 	ldw	r3,4(r2)
101057e4:	1986703a 	and	r3,r3,r6
101057e8:	38c0022e 	bgeu	r7,r3,101057f4 <_malloc_r+0x55c>
101057ec:	10800217 	ldw	r2,8(r2)
101057f0:	28bffb1e 	bne	r5,r2,101057e0 <__alt_data_end+0xfffe57e0>
101057f4:	11400317 	ldw	r5,12(r2)
101057f8:	98c00117 	ldw	r3,4(r19)
101057fc:	81400315 	stw	r5,12(r16)
10105800:	80800215 	stw	r2,8(r16)
10105804:	2c000215 	stw	r16,8(r5)
10105808:	14000315 	stw	r16,12(r2)
1010580c:	003ef806 	br	101053f0 <__alt_data_end+0xfffe53f0>
10105810:	88c00054 	ori	r3,r17,1
10105814:	80c00115 	stw	r3,4(r16)
10105818:	8463883a 	add	r17,r16,r17
1010581c:	34400515 	stw	r17,20(r6)
10105820:	34400415 	stw	r17,16(r6)
10105824:	10c00054 	ori	r3,r2,1
10105828:	8a000315 	stw	r8,12(r17)
1010582c:	8a000215 	stw	r8,8(r17)
10105830:	88c00115 	stw	r3,4(r17)
10105834:	88a3883a 	add	r17,r17,r2
10105838:	88800015 	stw	r2,0(r17)
1010583c:	9009883a 	mov	r4,r18
10105840:	010d5200 	call	1010d520 <__malloc_unlock>
10105844:	80800204 	addi	r2,r16,8
10105848:	003f3c06 	br	1010553c <__alt_data_end+0xfffe553c>
1010584c:	30c00117 	ldw	r3,4(r6)
10105850:	003ee706 	br	101053f0 <__alt_data_end+0xfffe53f0>
10105854:	5ac00044 	addi	r11,r11,1
10105858:	588000cc 	andi	r2,r11,3
1010585c:	31800204 	addi	r6,r6,8
10105860:	103efd1e 	bne	r2,zero,10105458 <__alt_data_end+0xfffe5458>
10105864:	00002406 	br	101058f8 <_malloc_r+0x660>
10105868:	14000317 	ldw	r16,12(r2)
1010586c:	143f251e 	bne	r2,r16,10105504 <__alt_data_end+0xfffe5504>
10105870:	21000084 	addi	r4,r4,2
10105874:	003ebc06 	br	10105368 <__alt_data_end+0xfffe5368>
10105878:	8085883a 	add	r2,r16,r2
1010587c:	10c00117 	ldw	r3,4(r2)
10105880:	81000317 	ldw	r4,12(r16)
10105884:	81400217 	ldw	r5,8(r16)
10105888:	18c00054 	ori	r3,r3,1
1010588c:	10c00115 	stw	r3,4(r2)
10105890:	29000315 	stw	r4,12(r5)
10105894:	21400215 	stw	r5,8(r4)
10105898:	9009883a 	mov	r4,r18
1010589c:	010d5200 	call	1010d520 <__malloc_unlock>
101058a0:	80800204 	addi	r2,r16,8
101058a4:	003f2506 	br	1010553c <__alt_data_end+0xfffe553c>
101058a8:	12001704 	addi	r8,r2,92
101058ac:	11c016c4 	addi	r7,r2,91
101058b0:	4209883a 	add	r4,r8,r8
101058b4:	003e9606 	br	10105310 <__alt_data_end+0xfffe5310>
101058b8:	3804d1ba 	srli	r2,r7,6
101058bc:	11400e44 	addi	r5,r2,57
101058c0:	10c00e04 	addi	r3,r2,56
101058c4:	294b883a 	add	r5,r5,r5
101058c8:	003fbc06 	br	101057bc <__alt_data_end+0xfffe57bc>
101058cc:	84ff5926 	beq	r16,r19,10105634 <__alt_data_end+0xfffe5634>
101058d0:	00840474 	movhi	r2,4113
101058d4:	10bfa604 	addi	r2,r2,-360
101058d8:	14000217 	ldw	r16,8(r2)
101058dc:	00bfff04 	movi	r2,-4
101058e0:	80c00117 	ldw	r3,4(r16)
101058e4:	1886703a 	and	r3,r3,r2
101058e8:	003f9106 	br	10105730 <__alt_data_end+0xfffe5730>
101058ec:	60800217 	ldw	r2,8(r12)
101058f0:	213fffc4 	addi	r4,r4,-1
101058f4:	1300651e 	bne	r2,r12,10105a8c <_malloc_r+0x7f4>
101058f8:	208000cc 	andi	r2,r4,3
101058fc:	633ffe04 	addi	r12,r12,-8
10105900:	103ffa1e 	bne	r2,zero,101058ec <__alt_data_end+0xfffe58ec>
10105904:	98800117 	ldw	r2,4(r19)
10105908:	0146303a 	nor	r3,zero,r5
1010590c:	1884703a 	and	r2,r3,r2
10105910:	98800115 	stw	r2,4(r19)
10105914:	294b883a 	add	r5,r5,r5
10105918:	117f2836 	bltu	r2,r5,101055bc <__alt_data_end+0xfffe55bc>
1010591c:	283f2726 	beq	r5,zero,101055bc <__alt_data_end+0xfffe55bc>
10105920:	2886703a 	and	r3,r5,r2
10105924:	5809883a 	mov	r4,r11
10105928:	183ec31e 	bne	r3,zero,10105438 <__alt_data_end+0xfffe5438>
1010592c:	294b883a 	add	r5,r5,r5
10105930:	2886703a 	and	r3,r5,r2
10105934:	21000104 	addi	r4,r4,4
10105938:	183ffc26 	beq	r3,zero,1010592c <__alt_data_end+0xfffe592c>
1010593c:	003ebe06 	br	10105438 <__alt_data_end+0xfffe5438>
10105940:	00c05504 	movi	r3,340
10105944:	18801236 	bltu	r3,r2,10105990 <_malloc_r+0x6f8>
10105948:	8804d3fa 	srli	r2,r17,15
1010594c:	12001e04 	addi	r8,r2,120
10105950:	11c01dc4 	addi	r7,r2,119
10105954:	4209883a 	add	r4,r8,r8
10105958:	003e6d06 	br	10105310 <__alt_data_end+0xfffe5310>
1010595c:	00c40004 	movi	r3,4096
10105960:	003f4606 	br	1010567c <__alt_data_end+0xfffe567c>
10105964:	00800044 	movi	r2,1
10105968:	a0800115 	stw	r2,4(r20)
1010596c:	003f7406 	br	10105740 <__alt_data_end+0xfffe5740>
10105970:	1805d0ba 	srai	r2,r3,2
10105974:	01c00044 	movi	r7,1
10105978:	30c00117 	ldw	r3,4(r6)
1010597c:	388e983a 	sll	r7,r7,r2
10105980:	2805883a 	mov	r2,r5
10105984:	38c6b03a 	or	r3,r7,r3
10105988:	30c00115 	stw	r3,4(r6)
1010598c:	003f9b06 	br	101057fc <__alt_data_end+0xfffe57fc>
10105990:	00c15504 	movi	r3,1364
10105994:	18801a36 	bltu	r3,r2,10105a00 <_malloc_r+0x768>
10105998:	8804d4ba 	srli	r2,r17,18
1010599c:	12001f44 	addi	r8,r2,125
101059a0:	11c01f04 	addi	r7,r2,124
101059a4:	4209883a 	add	r4,r8,r8
101059a8:	003e5906 	br	10105310 <__alt_data_end+0xfffe5310>
101059ac:	ad400404 	addi	r21,r21,16
101059b0:	003f1706 	br	10105610 <__alt_data_end+0xfffe5610>
101059b4:	00c01504 	movi	r3,84
101059b8:	18802336 	bltu	r3,r2,10105a48 <_malloc_r+0x7b0>
101059bc:	3804d33a 	srli	r2,r7,12
101059c0:	11401bc4 	addi	r5,r2,111
101059c4:	10c01b84 	addi	r3,r2,110
101059c8:	294b883a 	add	r5,r5,r5
101059cc:	003f7b06 	br	101057bc <__alt_data_end+0xfffe57bc>
101059d0:	9c000217 	ldw	r16,8(r19)
101059d4:	00bfff04 	movi	r2,-4
101059d8:	80c00117 	ldw	r3,4(r16)
101059dc:	1886703a 	and	r3,r3,r2
101059e0:	003f5306 	br	10105730 <__alt_data_end+0xfffe5730>
101059e4:	3083ffcc 	andi	r2,r6,4095
101059e8:	103f181e 	bne	r2,zero,1010564c <__alt_data_end+0xfffe564c>
101059ec:	99000217 	ldw	r4,8(r19)
101059f0:	b545883a 	add	r2,r22,r21
101059f4:	10800054 	ori	r2,r2,1
101059f8:	20800115 	stw	r2,4(r4)
101059fc:	003f3e06 	br	101056f8 <__alt_data_end+0xfffe56f8>
10105a00:	01003f84 	movi	r4,254
10105a04:	02001fc4 	movi	r8,127
10105a08:	01c01f84 	movi	r7,126
10105a0c:	003e4006 	br	10105310 <__alt_data_end+0xfffe5310>
10105a10:	00840474 	movhi	r2,4113
10105a14:	10852d04 	addi	r2,r2,5300
10105a18:	15000015 	stw	r20,0(r2)
10105a1c:	003f1106 	br	10105664 <__alt_data_end+0xfffe5664>
10105a20:	00800044 	movi	r2,1
10105a24:	002b883a 	mov	r21,zero
10105a28:	003f1f06 	br	101056a8 <__alt_data_end+0xfffe56a8>
10105a2c:	81400204 	addi	r5,r16,8
10105a30:	9009883a 	mov	r4,r18
10105a34:	0104b680 	call	10104b68 <_free_r>
10105a38:	00840474 	movhi	r2,4113
10105a3c:	108c0304 	addi	r2,r2,12300
10105a40:	10c00017 	ldw	r3,0(r2)
10105a44:	003f2c06 	br	101056f8 <__alt_data_end+0xfffe56f8>
10105a48:	00c05504 	movi	r3,340
10105a4c:	18800536 	bltu	r3,r2,10105a64 <_malloc_r+0x7cc>
10105a50:	3804d3fa 	srli	r2,r7,15
10105a54:	11401e04 	addi	r5,r2,120
10105a58:	10c01dc4 	addi	r3,r2,119
10105a5c:	294b883a 	add	r5,r5,r5
10105a60:	003f5606 	br	101057bc <__alt_data_end+0xfffe57bc>
10105a64:	00c15504 	movi	r3,1364
10105a68:	18800536 	bltu	r3,r2,10105a80 <_malloc_r+0x7e8>
10105a6c:	3804d4ba 	srli	r2,r7,18
10105a70:	11401f44 	addi	r5,r2,125
10105a74:	10c01f04 	addi	r3,r2,124
10105a78:	294b883a 	add	r5,r5,r5
10105a7c:	003f4f06 	br	101057bc <__alt_data_end+0xfffe57bc>
10105a80:	01403f84 	movi	r5,254
10105a84:	00c01f84 	movi	r3,126
10105a88:	003f4c06 	br	101057bc <__alt_data_end+0xfffe57bc>
10105a8c:	98800117 	ldw	r2,4(r19)
10105a90:	003fa006 	br	10105914 <__alt_data_end+0xfffe5914>
10105a94:	8808d0fa 	srli	r4,r17,3
10105a98:	20800044 	addi	r2,r4,1
10105a9c:	1085883a 	add	r2,r2,r2
10105aa0:	003e9006 	br	101054e4 <__alt_data_end+0xfffe54e4>

10105aa4 <memchr>:
10105aa4:	208000cc 	andi	r2,r4,3
10105aa8:	280f883a 	mov	r7,r5
10105aac:	10003426 	beq	r2,zero,10105b80 <memchr+0xdc>
10105ab0:	30bfffc4 	addi	r2,r6,-1
10105ab4:	30001a26 	beq	r6,zero,10105b20 <memchr+0x7c>
10105ab8:	20c00003 	ldbu	r3,0(r4)
10105abc:	29803fcc 	andi	r6,r5,255
10105ac0:	30c0051e 	bne	r6,r3,10105ad8 <memchr+0x34>
10105ac4:	00001806 	br	10105b28 <memchr+0x84>
10105ac8:	10001526 	beq	r2,zero,10105b20 <memchr+0x7c>
10105acc:	20c00003 	ldbu	r3,0(r4)
10105ad0:	10bfffc4 	addi	r2,r2,-1
10105ad4:	30c01426 	beq	r6,r3,10105b28 <memchr+0x84>
10105ad8:	21000044 	addi	r4,r4,1
10105adc:	20c000cc 	andi	r3,r4,3
10105ae0:	183ff91e 	bne	r3,zero,10105ac8 <__alt_data_end+0xfffe5ac8>
10105ae4:	020000c4 	movi	r8,3
10105ae8:	40801136 	bltu	r8,r2,10105b30 <memchr+0x8c>
10105aec:	10000c26 	beq	r2,zero,10105b20 <memchr+0x7c>
10105af0:	20c00003 	ldbu	r3,0(r4)
10105af4:	29403fcc 	andi	r5,r5,255
10105af8:	28c00b26 	beq	r5,r3,10105b28 <memchr+0x84>
10105afc:	20c00044 	addi	r3,r4,1
10105b00:	39803fcc 	andi	r6,r7,255
10105b04:	2089883a 	add	r4,r4,r2
10105b08:	00000306 	br	10105b18 <memchr+0x74>
10105b0c:	18c00044 	addi	r3,r3,1
10105b10:	197fffc3 	ldbu	r5,-1(r3)
10105b14:	31400526 	beq	r6,r5,10105b2c <memchr+0x88>
10105b18:	1805883a 	mov	r2,r3
10105b1c:	20fffb1e 	bne	r4,r3,10105b0c <__alt_data_end+0xfffe5b0c>
10105b20:	0005883a 	mov	r2,zero
10105b24:	f800283a 	ret
10105b28:	2005883a 	mov	r2,r4
10105b2c:	f800283a 	ret
10105b30:	28c03fcc 	andi	r3,r5,255
10105b34:	1812923a 	slli	r9,r3,8
10105b38:	02ffbff4 	movhi	r11,65279
10105b3c:	02a02074 	movhi	r10,32897
10105b40:	48d2b03a 	or	r9,r9,r3
10105b44:	4806943a 	slli	r3,r9,16
10105b48:	5affbfc4 	addi	r11,r11,-257
10105b4c:	52a02004 	addi	r10,r10,-32640
10105b50:	48d2b03a 	or	r9,r9,r3
10105b54:	20c00017 	ldw	r3,0(r4)
10105b58:	48c6f03a 	xor	r3,r9,r3
10105b5c:	1acd883a 	add	r6,r3,r11
10105b60:	00c6303a 	nor	r3,zero,r3
10105b64:	30c6703a 	and	r3,r6,r3
10105b68:	1a86703a 	and	r3,r3,r10
10105b6c:	183fe01e 	bne	r3,zero,10105af0 <__alt_data_end+0xfffe5af0>
10105b70:	10bfff04 	addi	r2,r2,-4
10105b74:	21000104 	addi	r4,r4,4
10105b78:	40bff636 	bltu	r8,r2,10105b54 <__alt_data_end+0xfffe5b54>
10105b7c:	003fdb06 	br	10105aec <__alt_data_end+0xfffe5aec>
10105b80:	3005883a 	mov	r2,r6
10105b84:	003fd706 	br	10105ae4 <__alt_data_end+0xfffe5ae4>

10105b88 <memcpy>:
10105b88:	defffd04 	addi	sp,sp,-12
10105b8c:	dfc00215 	stw	ra,8(sp)
10105b90:	dc400115 	stw	r17,4(sp)
10105b94:	dc000015 	stw	r16,0(sp)
10105b98:	00c003c4 	movi	r3,15
10105b9c:	2005883a 	mov	r2,r4
10105ba0:	1980452e 	bgeu	r3,r6,10105cb8 <memcpy+0x130>
10105ba4:	2906b03a 	or	r3,r5,r4
10105ba8:	18c000cc 	andi	r3,r3,3
10105bac:	1800441e 	bne	r3,zero,10105cc0 <memcpy+0x138>
10105bb0:	347ffc04 	addi	r17,r6,-16
10105bb4:	8822d13a 	srli	r17,r17,4
10105bb8:	28c00104 	addi	r3,r5,4
10105bbc:	23400104 	addi	r13,r4,4
10105bc0:	8820913a 	slli	r16,r17,4
10105bc4:	2b000204 	addi	r12,r5,8
10105bc8:	22c00204 	addi	r11,r4,8
10105bcc:	84000504 	addi	r16,r16,20
10105bd0:	2a800304 	addi	r10,r5,12
10105bd4:	22400304 	addi	r9,r4,12
10105bd8:	2c21883a 	add	r16,r5,r16
10105bdc:	2811883a 	mov	r8,r5
10105be0:	200f883a 	mov	r7,r4
10105be4:	41000017 	ldw	r4,0(r8)
10105be8:	1fc00017 	ldw	ra,0(r3)
10105bec:	63c00017 	ldw	r15,0(r12)
10105bf0:	39000015 	stw	r4,0(r7)
10105bf4:	53800017 	ldw	r14,0(r10)
10105bf8:	6fc00015 	stw	ra,0(r13)
10105bfc:	5bc00015 	stw	r15,0(r11)
10105c00:	4b800015 	stw	r14,0(r9)
10105c04:	18c00404 	addi	r3,r3,16
10105c08:	39c00404 	addi	r7,r7,16
10105c0c:	42000404 	addi	r8,r8,16
10105c10:	6b400404 	addi	r13,r13,16
10105c14:	63000404 	addi	r12,r12,16
10105c18:	5ac00404 	addi	r11,r11,16
10105c1c:	52800404 	addi	r10,r10,16
10105c20:	4a400404 	addi	r9,r9,16
10105c24:	1c3fef1e 	bne	r3,r16,10105be4 <__alt_data_end+0xfffe5be4>
10105c28:	89c00044 	addi	r7,r17,1
10105c2c:	380e913a 	slli	r7,r7,4
10105c30:	310003cc 	andi	r4,r6,15
10105c34:	02c000c4 	movi	r11,3
10105c38:	11c7883a 	add	r3,r2,r7
10105c3c:	29cb883a 	add	r5,r5,r7
10105c40:	5900212e 	bgeu	r11,r4,10105cc8 <memcpy+0x140>
10105c44:	1813883a 	mov	r9,r3
10105c48:	2811883a 	mov	r8,r5
10105c4c:	200f883a 	mov	r7,r4
10105c50:	42800017 	ldw	r10,0(r8)
10105c54:	4a400104 	addi	r9,r9,4
10105c58:	39ffff04 	addi	r7,r7,-4
10105c5c:	4abfff15 	stw	r10,-4(r9)
10105c60:	42000104 	addi	r8,r8,4
10105c64:	59fffa36 	bltu	r11,r7,10105c50 <__alt_data_end+0xfffe5c50>
10105c68:	213fff04 	addi	r4,r4,-4
10105c6c:	2008d0ba 	srli	r4,r4,2
10105c70:	318000cc 	andi	r6,r6,3
10105c74:	21000044 	addi	r4,r4,1
10105c78:	2109883a 	add	r4,r4,r4
10105c7c:	2109883a 	add	r4,r4,r4
10105c80:	1907883a 	add	r3,r3,r4
10105c84:	290b883a 	add	r5,r5,r4
10105c88:	30000626 	beq	r6,zero,10105ca4 <memcpy+0x11c>
10105c8c:	198d883a 	add	r6,r3,r6
10105c90:	29c00003 	ldbu	r7,0(r5)
10105c94:	18c00044 	addi	r3,r3,1
10105c98:	29400044 	addi	r5,r5,1
10105c9c:	19ffffc5 	stb	r7,-1(r3)
10105ca0:	19bffb1e 	bne	r3,r6,10105c90 <__alt_data_end+0xfffe5c90>
10105ca4:	dfc00217 	ldw	ra,8(sp)
10105ca8:	dc400117 	ldw	r17,4(sp)
10105cac:	dc000017 	ldw	r16,0(sp)
10105cb0:	dec00304 	addi	sp,sp,12
10105cb4:	f800283a 	ret
10105cb8:	2007883a 	mov	r3,r4
10105cbc:	003ff206 	br	10105c88 <__alt_data_end+0xfffe5c88>
10105cc0:	2007883a 	mov	r3,r4
10105cc4:	003ff106 	br	10105c8c <__alt_data_end+0xfffe5c8c>
10105cc8:	200d883a 	mov	r6,r4
10105ccc:	003fee06 	br	10105c88 <__alt_data_end+0xfffe5c88>

10105cd0 <memset>:
10105cd0:	20c000cc 	andi	r3,r4,3
10105cd4:	2005883a 	mov	r2,r4
10105cd8:	18004426 	beq	r3,zero,10105dec <memset+0x11c>
10105cdc:	31ffffc4 	addi	r7,r6,-1
10105ce0:	30004026 	beq	r6,zero,10105de4 <memset+0x114>
10105ce4:	2813883a 	mov	r9,r5
10105ce8:	200d883a 	mov	r6,r4
10105cec:	2007883a 	mov	r3,r4
10105cf0:	00000406 	br	10105d04 <memset+0x34>
10105cf4:	3a3fffc4 	addi	r8,r7,-1
10105cf8:	31800044 	addi	r6,r6,1
10105cfc:	38003926 	beq	r7,zero,10105de4 <memset+0x114>
10105d00:	400f883a 	mov	r7,r8
10105d04:	18c00044 	addi	r3,r3,1
10105d08:	32400005 	stb	r9,0(r6)
10105d0c:	1a0000cc 	andi	r8,r3,3
10105d10:	403ff81e 	bne	r8,zero,10105cf4 <__alt_data_end+0xfffe5cf4>
10105d14:	010000c4 	movi	r4,3
10105d18:	21c02d2e 	bgeu	r4,r7,10105dd0 <memset+0x100>
10105d1c:	29003fcc 	andi	r4,r5,255
10105d20:	200c923a 	slli	r6,r4,8
10105d24:	3108b03a 	or	r4,r6,r4
10105d28:	200c943a 	slli	r6,r4,16
10105d2c:	218cb03a 	or	r6,r4,r6
10105d30:	010003c4 	movi	r4,15
10105d34:	21c0182e 	bgeu	r4,r7,10105d98 <memset+0xc8>
10105d38:	3b3ffc04 	addi	r12,r7,-16
10105d3c:	6018d13a 	srli	r12,r12,4
10105d40:	1a000104 	addi	r8,r3,4
10105d44:	1ac00204 	addi	r11,r3,8
10105d48:	6008913a 	slli	r4,r12,4
10105d4c:	1a800304 	addi	r10,r3,12
10105d50:	1813883a 	mov	r9,r3
10105d54:	21000504 	addi	r4,r4,20
10105d58:	1909883a 	add	r4,r3,r4
10105d5c:	49800015 	stw	r6,0(r9)
10105d60:	41800015 	stw	r6,0(r8)
10105d64:	59800015 	stw	r6,0(r11)
10105d68:	51800015 	stw	r6,0(r10)
10105d6c:	42000404 	addi	r8,r8,16
10105d70:	4a400404 	addi	r9,r9,16
10105d74:	5ac00404 	addi	r11,r11,16
10105d78:	52800404 	addi	r10,r10,16
10105d7c:	413ff71e 	bne	r8,r4,10105d5c <__alt_data_end+0xfffe5d5c>
10105d80:	63000044 	addi	r12,r12,1
10105d84:	6018913a 	slli	r12,r12,4
10105d88:	39c003cc 	andi	r7,r7,15
10105d8c:	010000c4 	movi	r4,3
10105d90:	1b07883a 	add	r3,r3,r12
10105d94:	21c00e2e 	bgeu	r4,r7,10105dd0 <memset+0x100>
10105d98:	1813883a 	mov	r9,r3
10105d9c:	3811883a 	mov	r8,r7
10105da0:	010000c4 	movi	r4,3
10105da4:	49800015 	stw	r6,0(r9)
10105da8:	423fff04 	addi	r8,r8,-4
10105dac:	4a400104 	addi	r9,r9,4
10105db0:	223ffc36 	bltu	r4,r8,10105da4 <__alt_data_end+0xfffe5da4>
10105db4:	393fff04 	addi	r4,r7,-4
10105db8:	2008d0ba 	srli	r4,r4,2
10105dbc:	39c000cc 	andi	r7,r7,3
10105dc0:	21000044 	addi	r4,r4,1
10105dc4:	2109883a 	add	r4,r4,r4
10105dc8:	2109883a 	add	r4,r4,r4
10105dcc:	1907883a 	add	r3,r3,r4
10105dd0:	38000526 	beq	r7,zero,10105de8 <memset+0x118>
10105dd4:	19cf883a 	add	r7,r3,r7
10105dd8:	19400005 	stb	r5,0(r3)
10105ddc:	18c00044 	addi	r3,r3,1
10105de0:	38fffd1e 	bne	r7,r3,10105dd8 <__alt_data_end+0xfffe5dd8>
10105de4:	f800283a 	ret
10105de8:	f800283a 	ret
10105dec:	2007883a 	mov	r3,r4
10105df0:	300f883a 	mov	r7,r6
10105df4:	003fc706 	br	10105d14 <__alt_data_end+0xfffe5d14>

10105df8 <_Balloc>:
10105df8:	20801317 	ldw	r2,76(r4)
10105dfc:	defffc04 	addi	sp,sp,-16
10105e00:	dc400115 	stw	r17,4(sp)
10105e04:	dc000015 	stw	r16,0(sp)
10105e08:	dfc00315 	stw	ra,12(sp)
10105e0c:	dc800215 	stw	r18,8(sp)
10105e10:	2023883a 	mov	r17,r4
10105e14:	2821883a 	mov	r16,r5
10105e18:	10000f26 	beq	r2,zero,10105e58 <_Balloc+0x60>
10105e1c:	8407883a 	add	r3,r16,r16
10105e20:	18c7883a 	add	r3,r3,r3
10105e24:	10c7883a 	add	r3,r2,r3
10105e28:	18800017 	ldw	r2,0(r3)
10105e2c:	10001126 	beq	r2,zero,10105e74 <_Balloc+0x7c>
10105e30:	11000017 	ldw	r4,0(r2)
10105e34:	19000015 	stw	r4,0(r3)
10105e38:	10000415 	stw	zero,16(r2)
10105e3c:	10000315 	stw	zero,12(r2)
10105e40:	dfc00317 	ldw	ra,12(sp)
10105e44:	dc800217 	ldw	r18,8(sp)
10105e48:	dc400117 	ldw	r17,4(sp)
10105e4c:	dc000017 	ldw	r16,0(sp)
10105e50:	dec00404 	addi	sp,sp,16
10105e54:	f800283a 	ret
10105e58:	01800844 	movi	r6,33
10105e5c:	01400104 	movi	r5,4
10105e60:	01088680 	call	10108868 <_calloc_r>
10105e64:	88801315 	stw	r2,76(r17)
10105e68:	103fec1e 	bne	r2,zero,10105e1c <__alt_data_end+0xfffe5e1c>
10105e6c:	0005883a 	mov	r2,zero
10105e70:	003ff306 	br	10105e40 <__alt_data_end+0xfffe5e40>
10105e74:	01400044 	movi	r5,1
10105e78:	2c24983a 	sll	r18,r5,r16
10105e7c:	8809883a 	mov	r4,r17
10105e80:	91800144 	addi	r6,r18,5
10105e84:	318d883a 	add	r6,r6,r6
10105e88:	318d883a 	add	r6,r6,r6
10105e8c:	01088680 	call	10108868 <_calloc_r>
10105e90:	103ff626 	beq	r2,zero,10105e6c <__alt_data_end+0xfffe5e6c>
10105e94:	14000115 	stw	r16,4(r2)
10105e98:	14800215 	stw	r18,8(r2)
10105e9c:	003fe606 	br	10105e38 <__alt_data_end+0xfffe5e38>

10105ea0 <_Bfree>:
10105ea0:	28000826 	beq	r5,zero,10105ec4 <_Bfree+0x24>
10105ea4:	28c00117 	ldw	r3,4(r5)
10105ea8:	20801317 	ldw	r2,76(r4)
10105eac:	18c7883a 	add	r3,r3,r3
10105eb0:	18c7883a 	add	r3,r3,r3
10105eb4:	10c5883a 	add	r2,r2,r3
10105eb8:	10c00017 	ldw	r3,0(r2)
10105ebc:	28c00015 	stw	r3,0(r5)
10105ec0:	11400015 	stw	r5,0(r2)
10105ec4:	f800283a 	ret

10105ec8 <__multadd>:
10105ec8:	defffa04 	addi	sp,sp,-24
10105ecc:	dc800315 	stw	r18,12(sp)
10105ed0:	dc400215 	stw	r17,8(sp)
10105ed4:	dc000115 	stw	r16,4(sp)
10105ed8:	2823883a 	mov	r17,r5
10105edc:	2c000417 	ldw	r16,16(r5)
10105ee0:	dfc00515 	stw	ra,20(sp)
10105ee4:	dcc00415 	stw	r19,16(sp)
10105ee8:	2025883a 	mov	r18,r4
10105eec:	29400504 	addi	r5,r5,20
10105ef0:	0011883a 	mov	r8,zero
10105ef4:	28c00017 	ldw	r3,0(r5)
10105ef8:	29400104 	addi	r5,r5,4
10105efc:	42000044 	addi	r8,r8,1
10105f00:	18bfffcc 	andi	r2,r3,65535
10105f04:	1185383a 	mul	r2,r2,r6
10105f08:	1806d43a 	srli	r3,r3,16
10105f0c:	11cf883a 	add	r7,r2,r7
10105f10:	3808d43a 	srli	r4,r7,16
10105f14:	1987383a 	mul	r3,r3,r6
10105f18:	38bfffcc 	andi	r2,r7,65535
10105f1c:	1907883a 	add	r3,r3,r4
10105f20:	1808943a 	slli	r4,r3,16
10105f24:	180ed43a 	srli	r7,r3,16
10105f28:	2085883a 	add	r2,r4,r2
10105f2c:	28bfff15 	stw	r2,-4(r5)
10105f30:	443ff016 	blt	r8,r16,10105ef4 <__alt_data_end+0xfffe5ef4>
10105f34:	38000926 	beq	r7,zero,10105f5c <__multadd+0x94>
10105f38:	88800217 	ldw	r2,8(r17)
10105f3c:	80800f0e 	bge	r16,r2,10105f7c <__multadd+0xb4>
10105f40:	80800144 	addi	r2,r16,5
10105f44:	1085883a 	add	r2,r2,r2
10105f48:	1085883a 	add	r2,r2,r2
10105f4c:	8885883a 	add	r2,r17,r2
10105f50:	11c00015 	stw	r7,0(r2)
10105f54:	84000044 	addi	r16,r16,1
10105f58:	8c000415 	stw	r16,16(r17)
10105f5c:	8805883a 	mov	r2,r17
10105f60:	dfc00517 	ldw	ra,20(sp)
10105f64:	dcc00417 	ldw	r19,16(sp)
10105f68:	dc800317 	ldw	r18,12(sp)
10105f6c:	dc400217 	ldw	r17,8(sp)
10105f70:	dc000117 	ldw	r16,4(sp)
10105f74:	dec00604 	addi	sp,sp,24
10105f78:	f800283a 	ret
10105f7c:	89400117 	ldw	r5,4(r17)
10105f80:	9009883a 	mov	r4,r18
10105f84:	d9c00015 	stw	r7,0(sp)
10105f88:	29400044 	addi	r5,r5,1
10105f8c:	0105df80 	call	10105df8 <_Balloc>
10105f90:	89800417 	ldw	r6,16(r17)
10105f94:	89400304 	addi	r5,r17,12
10105f98:	11000304 	addi	r4,r2,12
10105f9c:	31800084 	addi	r6,r6,2
10105fa0:	318d883a 	add	r6,r6,r6
10105fa4:	318d883a 	add	r6,r6,r6
10105fa8:	1027883a 	mov	r19,r2
10105fac:	0105b880 	call	10105b88 <memcpy>
10105fb0:	d9c00017 	ldw	r7,0(sp)
10105fb4:	88000a26 	beq	r17,zero,10105fe0 <__multadd+0x118>
10105fb8:	88c00117 	ldw	r3,4(r17)
10105fbc:	90801317 	ldw	r2,76(r18)
10105fc0:	18c7883a 	add	r3,r3,r3
10105fc4:	18c7883a 	add	r3,r3,r3
10105fc8:	10c5883a 	add	r2,r2,r3
10105fcc:	10c00017 	ldw	r3,0(r2)
10105fd0:	88c00015 	stw	r3,0(r17)
10105fd4:	14400015 	stw	r17,0(r2)
10105fd8:	9823883a 	mov	r17,r19
10105fdc:	003fd806 	br	10105f40 <__alt_data_end+0xfffe5f40>
10105fe0:	9823883a 	mov	r17,r19
10105fe4:	003fd606 	br	10105f40 <__alt_data_end+0xfffe5f40>

10105fe8 <__s2b>:
10105fe8:	defff904 	addi	sp,sp,-28
10105fec:	dc400115 	stw	r17,4(sp)
10105ff0:	dc000015 	stw	r16,0(sp)
10105ff4:	2023883a 	mov	r17,r4
10105ff8:	2821883a 	mov	r16,r5
10105ffc:	39000204 	addi	r4,r7,8
10106000:	01400244 	movi	r5,9
10106004:	dcc00315 	stw	r19,12(sp)
10106008:	dc800215 	stw	r18,8(sp)
1010600c:	dfc00615 	stw	ra,24(sp)
10106010:	dd400515 	stw	r21,20(sp)
10106014:	dd000415 	stw	r20,16(sp)
10106018:	3825883a 	mov	r18,r7
1010601c:	3027883a 	mov	r19,r6
10106020:	010a7140 	call	1010a714 <__divsi3>
10106024:	00c00044 	movi	r3,1
10106028:	000b883a 	mov	r5,zero
1010602c:	1880030e 	bge	r3,r2,1010603c <__s2b+0x54>
10106030:	18c7883a 	add	r3,r3,r3
10106034:	29400044 	addi	r5,r5,1
10106038:	18bffd16 	blt	r3,r2,10106030 <__alt_data_end+0xfffe6030>
1010603c:	8809883a 	mov	r4,r17
10106040:	0105df80 	call	10105df8 <_Balloc>
10106044:	d8c00717 	ldw	r3,28(sp)
10106048:	10c00515 	stw	r3,20(r2)
1010604c:	00c00044 	movi	r3,1
10106050:	10c00415 	stw	r3,16(r2)
10106054:	00c00244 	movi	r3,9
10106058:	1cc0210e 	bge	r3,r19,101060e0 <__s2b+0xf8>
1010605c:	80eb883a 	add	r21,r16,r3
10106060:	a829883a 	mov	r20,r21
10106064:	84e1883a 	add	r16,r16,r19
10106068:	a1c00007 	ldb	r7,0(r20)
1010606c:	01800284 	movi	r6,10
10106070:	a5000044 	addi	r20,r20,1
10106074:	100b883a 	mov	r5,r2
10106078:	39fff404 	addi	r7,r7,-48
1010607c:	8809883a 	mov	r4,r17
10106080:	0105ec80 	call	10105ec8 <__multadd>
10106084:	a43ff81e 	bne	r20,r16,10106068 <__alt_data_end+0xfffe6068>
10106088:	ace1883a 	add	r16,r21,r19
1010608c:	843ffe04 	addi	r16,r16,-8
10106090:	9c800a0e 	bge	r19,r18,101060bc <__s2b+0xd4>
10106094:	94e5c83a 	sub	r18,r18,r19
10106098:	84a5883a 	add	r18,r16,r18
1010609c:	81c00007 	ldb	r7,0(r16)
101060a0:	01800284 	movi	r6,10
101060a4:	84000044 	addi	r16,r16,1
101060a8:	100b883a 	mov	r5,r2
101060ac:	39fff404 	addi	r7,r7,-48
101060b0:	8809883a 	mov	r4,r17
101060b4:	0105ec80 	call	10105ec8 <__multadd>
101060b8:	84bff81e 	bne	r16,r18,1010609c <__alt_data_end+0xfffe609c>
101060bc:	dfc00617 	ldw	ra,24(sp)
101060c0:	dd400517 	ldw	r21,20(sp)
101060c4:	dd000417 	ldw	r20,16(sp)
101060c8:	dcc00317 	ldw	r19,12(sp)
101060cc:	dc800217 	ldw	r18,8(sp)
101060d0:	dc400117 	ldw	r17,4(sp)
101060d4:	dc000017 	ldw	r16,0(sp)
101060d8:	dec00704 	addi	sp,sp,28
101060dc:	f800283a 	ret
101060e0:	84000284 	addi	r16,r16,10
101060e4:	1827883a 	mov	r19,r3
101060e8:	003fe906 	br	10106090 <__alt_data_end+0xfffe6090>

101060ec <__hi0bits>:
101060ec:	20bfffec 	andhi	r2,r4,65535
101060f0:	1000141e 	bne	r2,zero,10106144 <__hi0bits+0x58>
101060f4:	2008943a 	slli	r4,r4,16
101060f8:	00800404 	movi	r2,16
101060fc:	20ffc02c 	andhi	r3,r4,65280
10106100:	1800021e 	bne	r3,zero,1010610c <__hi0bits+0x20>
10106104:	2008923a 	slli	r4,r4,8
10106108:	10800204 	addi	r2,r2,8
1010610c:	20fc002c 	andhi	r3,r4,61440
10106110:	1800021e 	bne	r3,zero,1010611c <__hi0bits+0x30>
10106114:	2008913a 	slli	r4,r4,4
10106118:	10800104 	addi	r2,r2,4
1010611c:	20f0002c 	andhi	r3,r4,49152
10106120:	1800031e 	bne	r3,zero,10106130 <__hi0bits+0x44>
10106124:	2109883a 	add	r4,r4,r4
10106128:	10800084 	addi	r2,r2,2
1010612c:	2109883a 	add	r4,r4,r4
10106130:	20000316 	blt	r4,zero,10106140 <__hi0bits+0x54>
10106134:	2110002c 	andhi	r4,r4,16384
10106138:	2000041e 	bne	r4,zero,1010614c <__hi0bits+0x60>
1010613c:	00800804 	movi	r2,32
10106140:	f800283a 	ret
10106144:	0005883a 	mov	r2,zero
10106148:	003fec06 	br	101060fc <__alt_data_end+0xfffe60fc>
1010614c:	10800044 	addi	r2,r2,1
10106150:	f800283a 	ret

10106154 <__lo0bits>:
10106154:	20c00017 	ldw	r3,0(r4)
10106158:	188001cc 	andi	r2,r3,7
1010615c:	10000826 	beq	r2,zero,10106180 <__lo0bits+0x2c>
10106160:	1880004c 	andi	r2,r3,1
10106164:	1000211e 	bne	r2,zero,101061ec <__lo0bits+0x98>
10106168:	1880008c 	andi	r2,r3,2
1010616c:	1000211e 	bne	r2,zero,101061f4 <__lo0bits+0xa0>
10106170:	1806d0ba 	srli	r3,r3,2
10106174:	00800084 	movi	r2,2
10106178:	20c00015 	stw	r3,0(r4)
1010617c:	f800283a 	ret
10106180:	18bfffcc 	andi	r2,r3,65535
10106184:	10001326 	beq	r2,zero,101061d4 <__lo0bits+0x80>
10106188:	0005883a 	mov	r2,zero
1010618c:	19403fcc 	andi	r5,r3,255
10106190:	2800021e 	bne	r5,zero,1010619c <__lo0bits+0x48>
10106194:	1806d23a 	srli	r3,r3,8
10106198:	10800204 	addi	r2,r2,8
1010619c:	194003cc 	andi	r5,r3,15
101061a0:	2800021e 	bne	r5,zero,101061ac <__lo0bits+0x58>
101061a4:	1806d13a 	srli	r3,r3,4
101061a8:	10800104 	addi	r2,r2,4
101061ac:	194000cc 	andi	r5,r3,3
101061b0:	2800021e 	bne	r5,zero,101061bc <__lo0bits+0x68>
101061b4:	1806d0ba 	srli	r3,r3,2
101061b8:	10800084 	addi	r2,r2,2
101061bc:	1940004c 	andi	r5,r3,1
101061c0:	2800081e 	bne	r5,zero,101061e4 <__lo0bits+0x90>
101061c4:	1806d07a 	srli	r3,r3,1
101061c8:	1800051e 	bne	r3,zero,101061e0 <__lo0bits+0x8c>
101061cc:	00800804 	movi	r2,32
101061d0:	f800283a 	ret
101061d4:	1806d43a 	srli	r3,r3,16
101061d8:	00800404 	movi	r2,16
101061dc:	003feb06 	br	1010618c <__alt_data_end+0xfffe618c>
101061e0:	10800044 	addi	r2,r2,1
101061e4:	20c00015 	stw	r3,0(r4)
101061e8:	f800283a 	ret
101061ec:	0005883a 	mov	r2,zero
101061f0:	f800283a 	ret
101061f4:	1806d07a 	srli	r3,r3,1
101061f8:	00800044 	movi	r2,1
101061fc:	20c00015 	stw	r3,0(r4)
10106200:	f800283a 	ret

10106204 <__i2b>:
10106204:	defffd04 	addi	sp,sp,-12
10106208:	dc000015 	stw	r16,0(sp)
1010620c:	04000044 	movi	r16,1
10106210:	dc400115 	stw	r17,4(sp)
10106214:	2823883a 	mov	r17,r5
10106218:	800b883a 	mov	r5,r16
1010621c:	dfc00215 	stw	ra,8(sp)
10106220:	0105df80 	call	10105df8 <_Balloc>
10106224:	14400515 	stw	r17,20(r2)
10106228:	14000415 	stw	r16,16(r2)
1010622c:	dfc00217 	ldw	ra,8(sp)
10106230:	dc400117 	ldw	r17,4(sp)
10106234:	dc000017 	ldw	r16,0(sp)
10106238:	dec00304 	addi	sp,sp,12
1010623c:	f800283a 	ret

10106240 <__multiply>:
10106240:	defffa04 	addi	sp,sp,-24
10106244:	dcc00315 	stw	r19,12(sp)
10106248:	dc800215 	stw	r18,8(sp)
1010624c:	34c00417 	ldw	r19,16(r6)
10106250:	2c800417 	ldw	r18,16(r5)
10106254:	dd000415 	stw	r20,16(sp)
10106258:	dc400115 	stw	r17,4(sp)
1010625c:	dfc00515 	stw	ra,20(sp)
10106260:	dc000015 	stw	r16,0(sp)
10106264:	2829883a 	mov	r20,r5
10106268:	3023883a 	mov	r17,r6
1010626c:	94c0050e 	bge	r18,r19,10106284 <__multiply+0x44>
10106270:	9007883a 	mov	r3,r18
10106274:	3029883a 	mov	r20,r6
10106278:	9825883a 	mov	r18,r19
1010627c:	2823883a 	mov	r17,r5
10106280:	1827883a 	mov	r19,r3
10106284:	a0800217 	ldw	r2,8(r20)
10106288:	94e1883a 	add	r16,r18,r19
1010628c:	a1400117 	ldw	r5,4(r20)
10106290:	1400010e 	bge	r2,r16,10106298 <__multiply+0x58>
10106294:	29400044 	addi	r5,r5,1
10106298:	0105df80 	call	10105df8 <_Balloc>
1010629c:	8415883a 	add	r10,r16,r16
101062a0:	12c00504 	addi	r11,r2,20
101062a4:	5295883a 	add	r10,r10,r10
101062a8:	5a95883a 	add	r10,r11,r10
101062ac:	5807883a 	mov	r3,r11
101062b0:	5a80032e 	bgeu	r11,r10,101062c0 <__multiply+0x80>
101062b4:	18000015 	stw	zero,0(r3)
101062b8:	18c00104 	addi	r3,r3,4
101062bc:	1abffd36 	bltu	r3,r10,101062b4 <__alt_data_end+0xfffe62b4>
101062c0:	9ce7883a 	add	r19,r19,r19
101062c4:	94a5883a 	add	r18,r18,r18
101062c8:	89800504 	addi	r6,r17,20
101062cc:	9ce7883a 	add	r19,r19,r19
101062d0:	a3400504 	addi	r13,r20,20
101062d4:	94a5883a 	add	r18,r18,r18
101062d8:	34d9883a 	add	r12,r6,r19
101062dc:	6c93883a 	add	r9,r13,r18
101062e0:	3300422e 	bgeu	r6,r12,101063ec <__multiply+0x1ac>
101062e4:	37c00017 	ldw	ra,0(r6)
101062e8:	fbffffcc 	andi	r15,ra,65535
101062ec:	78001b26 	beq	r15,zero,1010635c <__multiply+0x11c>
101062f0:	5811883a 	mov	r8,r11
101062f4:	681d883a 	mov	r14,r13
101062f8:	000f883a 	mov	r7,zero
101062fc:	71000017 	ldw	r4,0(r14)
10106300:	40c00017 	ldw	r3,0(r8)
10106304:	73800104 	addi	r14,r14,4
10106308:	217fffcc 	andi	r5,r4,65535
1010630c:	2bcb383a 	mul	r5,r5,r15
10106310:	2008d43a 	srli	r4,r4,16
10106314:	1c7fffcc 	andi	r17,r3,65535
10106318:	2c4b883a 	add	r5,r5,r17
1010631c:	29cb883a 	add	r5,r5,r7
10106320:	23c9383a 	mul	r4,r4,r15
10106324:	1806d43a 	srli	r3,r3,16
10106328:	280ed43a 	srli	r7,r5,16
1010632c:	297fffcc 	andi	r5,r5,65535
10106330:	20c7883a 	add	r3,r4,r3
10106334:	19c7883a 	add	r3,r3,r7
10106338:	1808943a 	slli	r4,r3,16
1010633c:	4023883a 	mov	r17,r8
10106340:	180ed43a 	srli	r7,r3,16
10106344:	214ab03a 	or	r5,r4,r5
10106348:	41400015 	stw	r5,0(r8)
1010634c:	42000104 	addi	r8,r8,4
10106350:	727fea36 	bltu	r14,r9,101062fc <__alt_data_end+0xfffe62fc>
10106354:	89c00115 	stw	r7,4(r17)
10106358:	37c00017 	ldw	ra,0(r6)
1010635c:	f83ed43a 	srli	ra,ra,16
10106360:	f8001f26 	beq	ra,zero,101063e0 <__multiply+0x1a0>
10106364:	58c00017 	ldw	r3,0(r11)
10106368:	681d883a 	mov	r14,r13
1010636c:	581f883a 	mov	r15,r11
10106370:	1811883a 	mov	r8,r3
10106374:	5825883a 	mov	r18,r11
10106378:	000f883a 	mov	r7,zero
1010637c:	00000106 	br	10106384 <__multiply+0x144>
10106380:	8825883a 	mov	r18,r17
10106384:	7140000b 	ldhu	r5,0(r14)
10106388:	4010d43a 	srli	r8,r8,16
1010638c:	193fffcc 	andi	r4,r3,65535
10106390:	2fcb383a 	mul	r5,r5,ra
10106394:	7bc00104 	addi	r15,r15,4
10106398:	73800104 	addi	r14,r14,4
1010639c:	2a0b883a 	add	r5,r5,r8
101063a0:	29cb883a 	add	r5,r5,r7
101063a4:	2806943a 	slli	r3,r5,16
101063a8:	94400104 	addi	r17,r18,4
101063ac:	280ad43a 	srli	r5,r5,16
101063b0:	1908b03a 	or	r4,r3,r4
101063b4:	793fff15 	stw	r4,-4(r15)
101063b8:	70ffff17 	ldw	r3,-4(r14)
101063bc:	8a000017 	ldw	r8,0(r17)
101063c0:	1806d43a 	srli	r3,r3,16
101063c4:	413fffcc 	andi	r4,r8,65535
101063c8:	1fc7383a 	mul	r3,r3,ra
101063cc:	1907883a 	add	r3,r3,r4
101063d0:	1947883a 	add	r3,r3,r5
101063d4:	180ed43a 	srli	r7,r3,16
101063d8:	727fe936 	bltu	r14,r9,10106380 <__alt_data_end+0xfffe6380>
101063dc:	90c00115 	stw	r3,4(r18)
101063e0:	31800104 	addi	r6,r6,4
101063e4:	5ac00104 	addi	r11,r11,4
101063e8:	333fbe36 	bltu	r6,r12,101062e4 <__alt_data_end+0xfffe62e4>
101063ec:	0400090e 	bge	zero,r16,10106414 <__multiply+0x1d4>
101063f0:	50ffff17 	ldw	r3,-4(r10)
101063f4:	52bfff04 	addi	r10,r10,-4
101063f8:	18000326 	beq	r3,zero,10106408 <__multiply+0x1c8>
101063fc:	00000506 	br	10106414 <__multiply+0x1d4>
10106400:	50c00017 	ldw	r3,0(r10)
10106404:	1800031e 	bne	r3,zero,10106414 <__multiply+0x1d4>
10106408:	843fffc4 	addi	r16,r16,-1
1010640c:	52bfff04 	addi	r10,r10,-4
10106410:	803ffb1e 	bne	r16,zero,10106400 <__alt_data_end+0xfffe6400>
10106414:	14000415 	stw	r16,16(r2)
10106418:	dfc00517 	ldw	ra,20(sp)
1010641c:	dd000417 	ldw	r20,16(sp)
10106420:	dcc00317 	ldw	r19,12(sp)
10106424:	dc800217 	ldw	r18,8(sp)
10106428:	dc400117 	ldw	r17,4(sp)
1010642c:	dc000017 	ldw	r16,0(sp)
10106430:	dec00604 	addi	sp,sp,24
10106434:	f800283a 	ret

10106438 <__pow5mult>:
10106438:	defffa04 	addi	sp,sp,-24
1010643c:	dcc00315 	stw	r19,12(sp)
10106440:	dc000015 	stw	r16,0(sp)
10106444:	dfc00515 	stw	ra,20(sp)
10106448:	dd000415 	stw	r20,16(sp)
1010644c:	dc800215 	stw	r18,8(sp)
10106450:	dc400115 	stw	r17,4(sp)
10106454:	308000cc 	andi	r2,r6,3
10106458:	3021883a 	mov	r16,r6
1010645c:	2027883a 	mov	r19,r4
10106460:	10002f1e 	bne	r2,zero,10106520 <__pow5mult+0xe8>
10106464:	2825883a 	mov	r18,r5
10106468:	8021d0ba 	srai	r16,r16,2
1010646c:	80001a26 	beq	r16,zero,101064d8 <__pow5mult+0xa0>
10106470:	9c401217 	ldw	r17,72(r19)
10106474:	8800061e 	bne	r17,zero,10106490 <__pow5mult+0x58>
10106478:	00003406 	br	1010654c <__pow5mult+0x114>
1010647c:	8021d07a 	srai	r16,r16,1
10106480:	80001526 	beq	r16,zero,101064d8 <__pow5mult+0xa0>
10106484:	88800017 	ldw	r2,0(r17)
10106488:	10001c26 	beq	r2,zero,101064fc <__pow5mult+0xc4>
1010648c:	1023883a 	mov	r17,r2
10106490:	8080004c 	andi	r2,r16,1
10106494:	103ff926 	beq	r2,zero,1010647c <__alt_data_end+0xfffe647c>
10106498:	880d883a 	mov	r6,r17
1010649c:	900b883a 	mov	r5,r18
101064a0:	9809883a 	mov	r4,r19
101064a4:	01062400 	call	10106240 <__multiply>
101064a8:	90001b26 	beq	r18,zero,10106518 <__pow5mult+0xe0>
101064ac:	91000117 	ldw	r4,4(r18)
101064b0:	98c01317 	ldw	r3,76(r19)
101064b4:	8021d07a 	srai	r16,r16,1
101064b8:	2109883a 	add	r4,r4,r4
101064bc:	2109883a 	add	r4,r4,r4
101064c0:	1907883a 	add	r3,r3,r4
101064c4:	19000017 	ldw	r4,0(r3)
101064c8:	91000015 	stw	r4,0(r18)
101064cc:	1c800015 	stw	r18,0(r3)
101064d0:	1025883a 	mov	r18,r2
101064d4:	803feb1e 	bne	r16,zero,10106484 <__alt_data_end+0xfffe6484>
101064d8:	9005883a 	mov	r2,r18
101064dc:	dfc00517 	ldw	ra,20(sp)
101064e0:	dd000417 	ldw	r20,16(sp)
101064e4:	dcc00317 	ldw	r19,12(sp)
101064e8:	dc800217 	ldw	r18,8(sp)
101064ec:	dc400117 	ldw	r17,4(sp)
101064f0:	dc000017 	ldw	r16,0(sp)
101064f4:	dec00604 	addi	sp,sp,24
101064f8:	f800283a 	ret
101064fc:	880d883a 	mov	r6,r17
10106500:	880b883a 	mov	r5,r17
10106504:	9809883a 	mov	r4,r19
10106508:	01062400 	call	10106240 <__multiply>
1010650c:	88800015 	stw	r2,0(r17)
10106510:	10000015 	stw	zero,0(r2)
10106514:	003fdd06 	br	1010648c <__alt_data_end+0xfffe648c>
10106518:	1025883a 	mov	r18,r2
1010651c:	003fd706 	br	1010647c <__alt_data_end+0xfffe647c>
10106520:	10bfffc4 	addi	r2,r2,-1
10106524:	1085883a 	add	r2,r2,r2
10106528:	00c40474 	movhi	r3,4113
1010652c:	18fde104 	addi	r3,r3,-2172
10106530:	1085883a 	add	r2,r2,r2
10106534:	1885883a 	add	r2,r3,r2
10106538:	11800017 	ldw	r6,0(r2)
1010653c:	000f883a 	mov	r7,zero
10106540:	0105ec80 	call	10105ec8 <__multadd>
10106544:	1025883a 	mov	r18,r2
10106548:	003fc706 	br	10106468 <__alt_data_end+0xfffe6468>
1010654c:	05000044 	movi	r20,1
10106550:	a00b883a 	mov	r5,r20
10106554:	9809883a 	mov	r4,r19
10106558:	0105df80 	call	10105df8 <_Balloc>
1010655c:	1023883a 	mov	r17,r2
10106560:	00809c44 	movi	r2,625
10106564:	88800515 	stw	r2,20(r17)
10106568:	8d000415 	stw	r20,16(r17)
1010656c:	9c401215 	stw	r17,72(r19)
10106570:	88000015 	stw	zero,0(r17)
10106574:	003fc606 	br	10106490 <__alt_data_end+0xfffe6490>

10106578 <__lshift>:
10106578:	defff904 	addi	sp,sp,-28
1010657c:	dd400515 	stw	r21,20(sp)
10106580:	dcc00315 	stw	r19,12(sp)
10106584:	302bd17a 	srai	r21,r6,5
10106588:	2cc00417 	ldw	r19,16(r5)
1010658c:	28800217 	ldw	r2,8(r5)
10106590:	dd000415 	stw	r20,16(sp)
10106594:	ace7883a 	add	r19,r21,r19
10106598:	dc800215 	stw	r18,8(sp)
1010659c:	dc400115 	stw	r17,4(sp)
101065a0:	dc000015 	stw	r16,0(sp)
101065a4:	dfc00615 	stw	ra,24(sp)
101065a8:	9c000044 	addi	r16,r19,1
101065ac:	2823883a 	mov	r17,r5
101065b0:	3029883a 	mov	r20,r6
101065b4:	2025883a 	mov	r18,r4
101065b8:	29400117 	ldw	r5,4(r5)
101065bc:	1400030e 	bge	r2,r16,101065cc <__lshift+0x54>
101065c0:	1085883a 	add	r2,r2,r2
101065c4:	29400044 	addi	r5,r5,1
101065c8:	143ffd16 	blt	r2,r16,101065c0 <__alt_data_end+0xfffe65c0>
101065cc:	9009883a 	mov	r4,r18
101065d0:	0105df80 	call	10105df8 <_Balloc>
101065d4:	10c00504 	addi	r3,r2,20
101065d8:	0540070e 	bge	zero,r21,101065f8 <__lshift+0x80>
101065dc:	ad6b883a 	add	r21,r21,r21
101065e0:	ad6b883a 	add	r21,r21,r21
101065e4:	1809883a 	mov	r4,r3
101065e8:	1d47883a 	add	r3,r3,r21
101065ec:	20000015 	stw	zero,0(r4)
101065f0:	21000104 	addi	r4,r4,4
101065f4:	193ffd1e 	bne	r3,r4,101065ec <__alt_data_end+0xfffe65ec>
101065f8:	8a000417 	ldw	r8,16(r17)
101065fc:	89000504 	addi	r4,r17,20
10106600:	a18007cc 	andi	r6,r20,31
10106604:	4211883a 	add	r8,r8,r8
10106608:	4211883a 	add	r8,r8,r8
1010660c:	2211883a 	add	r8,r4,r8
10106610:	30002326 	beq	r6,zero,101066a0 <__lshift+0x128>
10106614:	02400804 	movi	r9,32
10106618:	4993c83a 	sub	r9,r9,r6
1010661c:	000b883a 	mov	r5,zero
10106620:	21c00017 	ldw	r7,0(r4)
10106624:	1815883a 	mov	r10,r3
10106628:	18c00104 	addi	r3,r3,4
1010662c:	398e983a 	sll	r7,r7,r6
10106630:	21000104 	addi	r4,r4,4
10106634:	394ab03a 	or	r5,r7,r5
10106638:	197fff15 	stw	r5,-4(r3)
1010663c:	217fff17 	ldw	r5,-4(r4)
10106640:	2a4ad83a 	srl	r5,r5,r9
10106644:	223ff636 	bltu	r4,r8,10106620 <__alt_data_end+0xfffe6620>
10106648:	51400115 	stw	r5,4(r10)
1010664c:	28001a1e 	bne	r5,zero,101066b8 <__lshift+0x140>
10106650:	843fffc4 	addi	r16,r16,-1
10106654:	14000415 	stw	r16,16(r2)
10106658:	88000826 	beq	r17,zero,1010667c <__lshift+0x104>
1010665c:	89000117 	ldw	r4,4(r17)
10106660:	90c01317 	ldw	r3,76(r18)
10106664:	2109883a 	add	r4,r4,r4
10106668:	2109883a 	add	r4,r4,r4
1010666c:	1907883a 	add	r3,r3,r4
10106670:	19000017 	ldw	r4,0(r3)
10106674:	89000015 	stw	r4,0(r17)
10106678:	1c400015 	stw	r17,0(r3)
1010667c:	dfc00617 	ldw	ra,24(sp)
10106680:	dd400517 	ldw	r21,20(sp)
10106684:	dd000417 	ldw	r20,16(sp)
10106688:	dcc00317 	ldw	r19,12(sp)
1010668c:	dc800217 	ldw	r18,8(sp)
10106690:	dc400117 	ldw	r17,4(sp)
10106694:	dc000017 	ldw	r16,0(sp)
10106698:	dec00704 	addi	sp,sp,28
1010669c:	f800283a 	ret
101066a0:	21400017 	ldw	r5,0(r4)
101066a4:	18c00104 	addi	r3,r3,4
101066a8:	21000104 	addi	r4,r4,4
101066ac:	197fff15 	stw	r5,-4(r3)
101066b0:	223ffb36 	bltu	r4,r8,101066a0 <__alt_data_end+0xfffe66a0>
101066b4:	003fe606 	br	10106650 <__alt_data_end+0xfffe6650>
101066b8:	9c000084 	addi	r16,r19,2
101066bc:	003fe406 	br	10106650 <__alt_data_end+0xfffe6650>

101066c0 <__mcmp>:
101066c0:	20800417 	ldw	r2,16(r4)
101066c4:	28c00417 	ldw	r3,16(r5)
101066c8:	10c5c83a 	sub	r2,r2,r3
101066cc:	1000111e 	bne	r2,zero,10106714 <__mcmp+0x54>
101066d0:	18c7883a 	add	r3,r3,r3
101066d4:	18c7883a 	add	r3,r3,r3
101066d8:	21000504 	addi	r4,r4,20
101066dc:	29400504 	addi	r5,r5,20
101066e0:	20c5883a 	add	r2,r4,r3
101066e4:	28cb883a 	add	r5,r5,r3
101066e8:	00000106 	br	101066f0 <__mcmp+0x30>
101066ec:	20800a2e 	bgeu	r4,r2,10106718 <__mcmp+0x58>
101066f0:	10bfff04 	addi	r2,r2,-4
101066f4:	297fff04 	addi	r5,r5,-4
101066f8:	11800017 	ldw	r6,0(r2)
101066fc:	28c00017 	ldw	r3,0(r5)
10106700:	30fffa26 	beq	r6,r3,101066ec <__alt_data_end+0xfffe66ec>
10106704:	30c00236 	bltu	r6,r3,10106710 <__mcmp+0x50>
10106708:	00800044 	movi	r2,1
1010670c:	f800283a 	ret
10106710:	00bfffc4 	movi	r2,-1
10106714:	f800283a 	ret
10106718:	0005883a 	mov	r2,zero
1010671c:	f800283a 	ret

10106720 <__mdiff>:
10106720:	28c00417 	ldw	r3,16(r5)
10106724:	30800417 	ldw	r2,16(r6)
10106728:	defffa04 	addi	sp,sp,-24
1010672c:	dcc00315 	stw	r19,12(sp)
10106730:	dc800215 	stw	r18,8(sp)
10106734:	dfc00515 	stw	ra,20(sp)
10106738:	dd000415 	stw	r20,16(sp)
1010673c:	dc400115 	stw	r17,4(sp)
10106740:	dc000015 	stw	r16,0(sp)
10106744:	1887c83a 	sub	r3,r3,r2
10106748:	2825883a 	mov	r18,r5
1010674c:	3027883a 	mov	r19,r6
10106750:	1800141e 	bne	r3,zero,101067a4 <__mdiff+0x84>
10106754:	1085883a 	add	r2,r2,r2
10106758:	1085883a 	add	r2,r2,r2
1010675c:	2a000504 	addi	r8,r5,20
10106760:	34000504 	addi	r16,r6,20
10106764:	4087883a 	add	r3,r8,r2
10106768:	8085883a 	add	r2,r16,r2
1010676c:	00000106 	br	10106774 <__mdiff+0x54>
10106770:	40c0592e 	bgeu	r8,r3,101068d8 <__mdiff+0x1b8>
10106774:	18ffff04 	addi	r3,r3,-4
10106778:	10bfff04 	addi	r2,r2,-4
1010677c:	19c00017 	ldw	r7,0(r3)
10106780:	11400017 	ldw	r5,0(r2)
10106784:	397ffa26 	beq	r7,r5,10106770 <__alt_data_end+0xfffe6770>
10106788:	3940592e 	bgeu	r7,r5,101068f0 <__mdiff+0x1d0>
1010678c:	9005883a 	mov	r2,r18
10106790:	4023883a 	mov	r17,r8
10106794:	9825883a 	mov	r18,r19
10106798:	05000044 	movi	r20,1
1010679c:	1027883a 	mov	r19,r2
101067a0:	00000406 	br	101067b4 <__mdiff+0x94>
101067a4:	18005616 	blt	r3,zero,10106900 <__mdiff+0x1e0>
101067a8:	34400504 	addi	r17,r6,20
101067ac:	2c000504 	addi	r16,r5,20
101067b0:	0029883a 	mov	r20,zero
101067b4:	91400117 	ldw	r5,4(r18)
101067b8:	0105df80 	call	10105df8 <_Balloc>
101067bc:	92400417 	ldw	r9,16(r18)
101067c0:	9b000417 	ldw	r12,16(r19)
101067c4:	12c00504 	addi	r11,r2,20
101067c8:	4a51883a 	add	r8,r9,r9
101067cc:	6319883a 	add	r12,r12,r12
101067d0:	4211883a 	add	r8,r8,r8
101067d4:	6319883a 	add	r12,r12,r12
101067d8:	15000315 	stw	r20,12(r2)
101067dc:	8211883a 	add	r8,r16,r8
101067e0:	8b19883a 	add	r12,r17,r12
101067e4:	0007883a 	mov	r3,zero
101067e8:	81400017 	ldw	r5,0(r16)
101067ec:	89c00017 	ldw	r7,0(r17)
101067f0:	59800104 	addi	r6,r11,4
101067f4:	293fffcc 	andi	r4,r5,65535
101067f8:	20c7883a 	add	r3,r4,r3
101067fc:	393fffcc 	andi	r4,r7,65535
10106800:	1909c83a 	sub	r4,r3,r4
10106804:	280ad43a 	srli	r5,r5,16
10106808:	380ed43a 	srli	r7,r7,16
1010680c:	2007d43a 	srai	r3,r4,16
10106810:	213fffcc 	andi	r4,r4,65535
10106814:	29cbc83a 	sub	r5,r5,r7
10106818:	28c7883a 	add	r3,r5,r3
1010681c:	180a943a 	slli	r5,r3,16
10106820:	8c400104 	addi	r17,r17,4
10106824:	84000104 	addi	r16,r16,4
10106828:	2908b03a 	or	r4,r5,r4
1010682c:	59000015 	stw	r4,0(r11)
10106830:	1807d43a 	srai	r3,r3,16
10106834:	3015883a 	mov	r10,r6
10106838:	3017883a 	mov	r11,r6
1010683c:	8b3fea36 	bltu	r17,r12,101067e8 <__alt_data_end+0xfffe67e8>
10106840:	8200162e 	bgeu	r16,r8,1010689c <__mdiff+0x17c>
10106844:	8017883a 	mov	r11,r16
10106848:	59400017 	ldw	r5,0(r11)
1010684c:	31800104 	addi	r6,r6,4
10106850:	5ac00104 	addi	r11,r11,4
10106854:	293fffcc 	andi	r4,r5,65535
10106858:	20c7883a 	add	r3,r4,r3
1010685c:	280ed43a 	srli	r7,r5,16
10106860:	180bd43a 	srai	r5,r3,16
10106864:	193fffcc 	andi	r4,r3,65535
10106868:	3947883a 	add	r3,r7,r5
1010686c:	180a943a 	slli	r5,r3,16
10106870:	1807d43a 	srai	r3,r3,16
10106874:	2908b03a 	or	r4,r5,r4
10106878:	313fff15 	stw	r4,-4(r6)
1010687c:	5a3ff236 	bltu	r11,r8,10106848 <__alt_data_end+0xfffe6848>
10106880:	0406303a 	nor	r3,zero,r16
10106884:	1a07883a 	add	r3,r3,r8
10106888:	1806d0ba 	srli	r3,r3,2
1010688c:	18c00044 	addi	r3,r3,1
10106890:	18c7883a 	add	r3,r3,r3
10106894:	18c7883a 	add	r3,r3,r3
10106898:	50d5883a 	add	r10,r10,r3
1010689c:	50ffff04 	addi	r3,r10,-4
101068a0:	2000041e 	bne	r4,zero,101068b4 <__mdiff+0x194>
101068a4:	18ffff04 	addi	r3,r3,-4
101068a8:	19000017 	ldw	r4,0(r3)
101068ac:	4a7fffc4 	addi	r9,r9,-1
101068b0:	203ffc26 	beq	r4,zero,101068a4 <__alt_data_end+0xfffe68a4>
101068b4:	12400415 	stw	r9,16(r2)
101068b8:	dfc00517 	ldw	ra,20(sp)
101068bc:	dd000417 	ldw	r20,16(sp)
101068c0:	dcc00317 	ldw	r19,12(sp)
101068c4:	dc800217 	ldw	r18,8(sp)
101068c8:	dc400117 	ldw	r17,4(sp)
101068cc:	dc000017 	ldw	r16,0(sp)
101068d0:	dec00604 	addi	sp,sp,24
101068d4:	f800283a 	ret
101068d8:	000b883a 	mov	r5,zero
101068dc:	0105df80 	call	10105df8 <_Balloc>
101068e0:	00c00044 	movi	r3,1
101068e4:	10c00415 	stw	r3,16(r2)
101068e8:	10000515 	stw	zero,20(r2)
101068ec:	003ff206 	br	101068b8 <__alt_data_end+0xfffe68b8>
101068f0:	8023883a 	mov	r17,r16
101068f4:	0029883a 	mov	r20,zero
101068f8:	4021883a 	mov	r16,r8
101068fc:	003fad06 	br	101067b4 <__alt_data_end+0xfffe67b4>
10106900:	9005883a 	mov	r2,r18
10106904:	94400504 	addi	r17,r18,20
10106908:	9c000504 	addi	r16,r19,20
1010690c:	9825883a 	mov	r18,r19
10106910:	05000044 	movi	r20,1
10106914:	1027883a 	mov	r19,r2
10106918:	003fa606 	br	101067b4 <__alt_data_end+0xfffe67b4>

1010691c <__ulp>:
1010691c:	295ffc2c 	andhi	r5,r5,32752
10106920:	00bf3034 	movhi	r2,64704
10106924:	2887883a 	add	r3,r5,r2
10106928:	00c0020e 	bge	zero,r3,10106934 <__ulp+0x18>
1010692c:	0005883a 	mov	r2,zero
10106930:	f800283a 	ret
10106934:	00c7c83a 	sub	r3,zero,r3
10106938:	1807d53a 	srai	r3,r3,20
1010693c:	008004c4 	movi	r2,19
10106940:	10c00b0e 	bge	r2,r3,10106970 <__ulp+0x54>
10106944:	18bffb04 	addi	r2,r3,-20
10106948:	01000784 	movi	r4,30
1010694c:	0007883a 	mov	r3,zero
10106950:	20800516 	blt	r4,r2,10106968 <__ulp+0x4c>
10106954:	010007c4 	movi	r4,31
10106958:	2089c83a 	sub	r4,r4,r2
1010695c:	00800044 	movi	r2,1
10106960:	1104983a 	sll	r2,r2,r4
10106964:	f800283a 	ret
10106968:	00800044 	movi	r2,1
1010696c:	f800283a 	ret
10106970:	01400234 	movhi	r5,8
10106974:	28c7d83a 	sra	r3,r5,r3
10106978:	0005883a 	mov	r2,zero
1010697c:	f800283a 	ret

10106980 <__b2d>:
10106980:	defffa04 	addi	sp,sp,-24
10106984:	dc000015 	stw	r16,0(sp)
10106988:	24000417 	ldw	r16,16(r4)
1010698c:	dc400115 	stw	r17,4(sp)
10106990:	24400504 	addi	r17,r4,20
10106994:	8421883a 	add	r16,r16,r16
10106998:	8421883a 	add	r16,r16,r16
1010699c:	8c21883a 	add	r16,r17,r16
101069a0:	dc800215 	stw	r18,8(sp)
101069a4:	84bfff17 	ldw	r18,-4(r16)
101069a8:	dd000415 	stw	r20,16(sp)
101069ac:	dcc00315 	stw	r19,12(sp)
101069b0:	9009883a 	mov	r4,r18
101069b4:	2829883a 	mov	r20,r5
101069b8:	dfc00515 	stw	ra,20(sp)
101069bc:	01060ec0 	call	101060ec <__hi0bits>
101069c0:	00c00804 	movi	r3,32
101069c4:	1889c83a 	sub	r4,r3,r2
101069c8:	a1000015 	stw	r4,0(r20)
101069cc:	01000284 	movi	r4,10
101069d0:	84ffff04 	addi	r19,r16,-4
101069d4:	20801216 	blt	r4,r2,10106a20 <__b2d+0xa0>
101069d8:	018002c4 	movi	r6,11
101069dc:	308dc83a 	sub	r6,r6,r2
101069e0:	9186d83a 	srl	r3,r18,r6
101069e4:	18cffc34 	orhi	r3,r3,16368
101069e8:	8cc0212e 	bgeu	r17,r19,10106a70 <__b2d+0xf0>
101069ec:	813ffe17 	ldw	r4,-8(r16)
101069f0:	218cd83a 	srl	r6,r4,r6
101069f4:	10800544 	addi	r2,r2,21
101069f8:	9084983a 	sll	r2,r18,r2
101069fc:	1184b03a 	or	r2,r2,r6
10106a00:	dfc00517 	ldw	ra,20(sp)
10106a04:	dd000417 	ldw	r20,16(sp)
10106a08:	dcc00317 	ldw	r19,12(sp)
10106a0c:	dc800217 	ldw	r18,8(sp)
10106a10:	dc400117 	ldw	r17,4(sp)
10106a14:	dc000017 	ldw	r16,0(sp)
10106a18:	dec00604 	addi	sp,sp,24
10106a1c:	f800283a 	ret
10106a20:	8cc00f2e 	bgeu	r17,r19,10106a60 <__b2d+0xe0>
10106a24:	117ffd44 	addi	r5,r2,-11
10106a28:	80bffe17 	ldw	r2,-8(r16)
10106a2c:	28000e26 	beq	r5,zero,10106a68 <__b2d+0xe8>
10106a30:	1949c83a 	sub	r4,r3,r5
10106a34:	9164983a 	sll	r18,r18,r5
10106a38:	1106d83a 	srl	r3,r2,r4
10106a3c:	81bffe04 	addi	r6,r16,-8
10106a40:	948ffc34 	orhi	r18,r18,16368
10106a44:	90c6b03a 	or	r3,r18,r3
10106a48:	89800e2e 	bgeu	r17,r6,10106a84 <__b2d+0x104>
10106a4c:	81bffd17 	ldw	r6,-12(r16)
10106a50:	1144983a 	sll	r2,r2,r5
10106a54:	310ad83a 	srl	r5,r6,r4
10106a58:	2884b03a 	or	r2,r5,r2
10106a5c:	003fe806 	br	10106a00 <__alt_data_end+0xfffe6a00>
10106a60:	10bffd44 	addi	r2,r2,-11
10106a64:	1000041e 	bne	r2,zero,10106a78 <__b2d+0xf8>
10106a68:	90cffc34 	orhi	r3,r18,16368
10106a6c:	003fe406 	br	10106a00 <__alt_data_end+0xfffe6a00>
10106a70:	000d883a 	mov	r6,zero
10106a74:	003fdf06 	br	101069f4 <__alt_data_end+0xfffe69f4>
10106a78:	90a4983a 	sll	r18,r18,r2
10106a7c:	0005883a 	mov	r2,zero
10106a80:	003ff906 	br	10106a68 <__alt_data_end+0xfffe6a68>
10106a84:	1144983a 	sll	r2,r2,r5
10106a88:	003fdd06 	br	10106a00 <__alt_data_end+0xfffe6a00>

10106a8c <__d2b>:
10106a8c:	defff804 	addi	sp,sp,-32
10106a90:	dc000215 	stw	r16,8(sp)
10106a94:	3021883a 	mov	r16,r6
10106a98:	dc400315 	stw	r17,12(sp)
10106a9c:	8022907a 	slli	r17,r16,1
10106aa0:	dd000615 	stw	r20,24(sp)
10106aa4:	2829883a 	mov	r20,r5
10106aa8:	01400044 	movi	r5,1
10106aac:	dcc00515 	stw	r19,20(sp)
10106ab0:	dc800415 	stw	r18,16(sp)
10106ab4:	dfc00715 	stw	ra,28(sp)
10106ab8:	3825883a 	mov	r18,r7
10106abc:	8822d57a 	srli	r17,r17,21
10106ac0:	0105df80 	call	10105df8 <_Balloc>
10106ac4:	1027883a 	mov	r19,r2
10106ac8:	00800434 	movhi	r2,16
10106acc:	10bfffc4 	addi	r2,r2,-1
10106ad0:	808c703a 	and	r6,r16,r2
10106ad4:	88000126 	beq	r17,zero,10106adc <__d2b+0x50>
10106ad8:	31800434 	orhi	r6,r6,16
10106adc:	d9800015 	stw	r6,0(sp)
10106ae0:	a0002426 	beq	r20,zero,10106b74 <__d2b+0xe8>
10106ae4:	d9000104 	addi	r4,sp,4
10106ae8:	dd000115 	stw	r20,4(sp)
10106aec:	01061540 	call	10106154 <__lo0bits>
10106af0:	d8c00017 	ldw	r3,0(sp)
10106af4:	10002f1e 	bne	r2,zero,10106bb4 <__d2b+0x128>
10106af8:	d9000117 	ldw	r4,4(sp)
10106afc:	99000515 	stw	r4,20(r19)
10106b00:	1821003a 	cmpeq	r16,r3,zero
10106b04:	01000084 	movi	r4,2
10106b08:	2421c83a 	sub	r16,r4,r16
10106b0c:	98c00615 	stw	r3,24(r19)
10106b10:	9c000415 	stw	r16,16(r19)
10106b14:	88001f1e 	bne	r17,zero,10106b94 <__d2b+0x108>
10106b18:	10bef384 	addi	r2,r2,-1074
10106b1c:	90800015 	stw	r2,0(r18)
10106b20:	00900034 	movhi	r2,16384
10106b24:	10bfffc4 	addi	r2,r2,-1
10106b28:	8085883a 	add	r2,r16,r2
10106b2c:	1085883a 	add	r2,r2,r2
10106b30:	1085883a 	add	r2,r2,r2
10106b34:	9885883a 	add	r2,r19,r2
10106b38:	11000517 	ldw	r4,20(r2)
10106b3c:	8020917a 	slli	r16,r16,5
10106b40:	01060ec0 	call	101060ec <__hi0bits>
10106b44:	d8c00817 	ldw	r3,32(sp)
10106b48:	8085c83a 	sub	r2,r16,r2
10106b4c:	18800015 	stw	r2,0(r3)
10106b50:	9805883a 	mov	r2,r19
10106b54:	dfc00717 	ldw	ra,28(sp)
10106b58:	dd000617 	ldw	r20,24(sp)
10106b5c:	dcc00517 	ldw	r19,20(sp)
10106b60:	dc800417 	ldw	r18,16(sp)
10106b64:	dc400317 	ldw	r17,12(sp)
10106b68:	dc000217 	ldw	r16,8(sp)
10106b6c:	dec00804 	addi	sp,sp,32
10106b70:	f800283a 	ret
10106b74:	d809883a 	mov	r4,sp
10106b78:	01061540 	call	10106154 <__lo0bits>
10106b7c:	d8c00017 	ldw	r3,0(sp)
10106b80:	04000044 	movi	r16,1
10106b84:	9c000415 	stw	r16,16(r19)
10106b88:	98c00515 	stw	r3,20(r19)
10106b8c:	10800804 	addi	r2,r2,32
10106b90:	883fe126 	beq	r17,zero,10106b18 <__alt_data_end+0xfffe6b18>
10106b94:	00c00d44 	movi	r3,53
10106b98:	8c7ef344 	addi	r17,r17,-1075
10106b9c:	88a3883a 	add	r17,r17,r2
10106ba0:	1885c83a 	sub	r2,r3,r2
10106ba4:	d8c00817 	ldw	r3,32(sp)
10106ba8:	94400015 	stw	r17,0(r18)
10106bac:	18800015 	stw	r2,0(r3)
10106bb0:	003fe706 	br	10106b50 <__alt_data_end+0xfffe6b50>
10106bb4:	01000804 	movi	r4,32
10106bb8:	2089c83a 	sub	r4,r4,r2
10106bbc:	1908983a 	sll	r4,r3,r4
10106bc0:	d9400117 	ldw	r5,4(sp)
10106bc4:	1886d83a 	srl	r3,r3,r2
10106bc8:	2148b03a 	or	r4,r4,r5
10106bcc:	99000515 	stw	r4,20(r19)
10106bd0:	d8c00015 	stw	r3,0(sp)
10106bd4:	003fca06 	br	10106b00 <__alt_data_end+0xfffe6b00>

10106bd8 <__ratio>:
10106bd8:	defff904 	addi	sp,sp,-28
10106bdc:	dc400315 	stw	r17,12(sp)
10106be0:	2823883a 	mov	r17,r5
10106be4:	d9400104 	addi	r5,sp,4
10106be8:	dfc00615 	stw	ra,24(sp)
10106bec:	dcc00515 	stw	r19,20(sp)
10106bf0:	dc800415 	stw	r18,16(sp)
10106bf4:	2027883a 	mov	r19,r4
10106bf8:	dc000215 	stw	r16,8(sp)
10106bfc:	01069800 	call	10106980 <__b2d>
10106c00:	d80b883a 	mov	r5,sp
10106c04:	8809883a 	mov	r4,r17
10106c08:	1025883a 	mov	r18,r2
10106c0c:	1821883a 	mov	r16,r3
10106c10:	01069800 	call	10106980 <__b2d>
10106c14:	8a000417 	ldw	r8,16(r17)
10106c18:	99000417 	ldw	r4,16(r19)
10106c1c:	d9400117 	ldw	r5,4(sp)
10106c20:	2209c83a 	sub	r4,r4,r8
10106c24:	2010917a 	slli	r8,r4,5
10106c28:	d9000017 	ldw	r4,0(sp)
10106c2c:	2909c83a 	sub	r4,r5,r4
10106c30:	4109883a 	add	r4,r8,r4
10106c34:	01000e0e 	bge	zero,r4,10106c70 <__ratio+0x98>
10106c38:	2008953a 	slli	r4,r4,20
10106c3c:	2421883a 	add	r16,r4,r16
10106c40:	100d883a 	mov	r6,r2
10106c44:	180f883a 	mov	r7,r3
10106c48:	9009883a 	mov	r4,r18
10106c4c:	800b883a 	mov	r5,r16
10106c50:	010b1740 	call	1010b174 <__divdf3>
10106c54:	dfc00617 	ldw	ra,24(sp)
10106c58:	dcc00517 	ldw	r19,20(sp)
10106c5c:	dc800417 	ldw	r18,16(sp)
10106c60:	dc400317 	ldw	r17,12(sp)
10106c64:	dc000217 	ldw	r16,8(sp)
10106c68:	dec00704 	addi	sp,sp,28
10106c6c:	f800283a 	ret
10106c70:	2008953a 	slli	r4,r4,20
10106c74:	1907c83a 	sub	r3,r3,r4
10106c78:	003ff106 	br	10106c40 <__alt_data_end+0xfffe6c40>

10106c7c <_mprec_log10>:
10106c7c:	defffe04 	addi	sp,sp,-8
10106c80:	dc000015 	stw	r16,0(sp)
10106c84:	dfc00115 	stw	ra,4(sp)
10106c88:	008005c4 	movi	r2,23
10106c8c:	2021883a 	mov	r16,r4
10106c90:	11000d0e 	bge	r2,r4,10106cc8 <_mprec_log10+0x4c>
10106c94:	0005883a 	mov	r2,zero
10106c98:	00cffc34 	movhi	r3,16368
10106c9c:	843fffc4 	addi	r16,r16,-1
10106ca0:	000d883a 	mov	r6,zero
10106ca4:	01d00934 	movhi	r7,16420
10106ca8:	1009883a 	mov	r4,r2
10106cac:	180b883a 	mov	r5,r3
10106cb0:	010bcb40 	call	1010bcb4 <__muldf3>
10106cb4:	803ff91e 	bne	r16,zero,10106c9c <__alt_data_end+0xfffe6c9c>
10106cb8:	dfc00117 	ldw	ra,4(sp)
10106cbc:	dc000017 	ldw	r16,0(sp)
10106cc0:	dec00204 	addi	sp,sp,8
10106cc4:	f800283a 	ret
10106cc8:	202090fa 	slli	r16,r4,3
10106ccc:	00840474 	movhi	r2,4113
10106cd0:	10bdf804 	addi	r2,r2,-2080
10106cd4:	1421883a 	add	r16,r2,r16
10106cd8:	80800017 	ldw	r2,0(r16)
10106cdc:	80c00117 	ldw	r3,4(r16)
10106ce0:	dfc00117 	ldw	ra,4(sp)
10106ce4:	dc000017 	ldw	r16,0(sp)
10106ce8:	dec00204 	addi	sp,sp,8
10106cec:	f800283a 	ret

10106cf0 <__copybits>:
10106cf0:	297fffc4 	addi	r5,r5,-1
10106cf4:	280fd17a 	srai	r7,r5,5
10106cf8:	30c00417 	ldw	r3,16(r6)
10106cfc:	30800504 	addi	r2,r6,20
10106d00:	39c00044 	addi	r7,r7,1
10106d04:	18c7883a 	add	r3,r3,r3
10106d08:	39cf883a 	add	r7,r7,r7
10106d0c:	18c7883a 	add	r3,r3,r3
10106d10:	39cf883a 	add	r7,r7,r7
10106d14:	10c7883a 	add	r3,r2,r3
10106d18:	21cf883a 	add	r7,r4,r7
10106d1c:	10c00d2e 	bgeu	r2,r3,10106d54 <__copybits+0x64>
10106d20:	200b883a 	mov	r5,r4
10106d24:	12000017 	ldw	r8,0(r2)
10106d28:	29400104 	addi	r5,r5,4
10106d2c:	10800104 	addi	r2,r2,4
10106d30:	2a3fff15 	stw	r8,-4(r5)
10106d34:	10fffb36 	bltu	r2,r3,10106d24 <__alt_data_end+0xfffe6d24>
10106d38:	1985c83a 	sub	r2,r3,r6
10106d3c:	10bffac4 	addi	r2,r2,-21
10106d40:	1004d0ba 	srli	r2,r2,2
10106d44:	10800044 	addi	r2,r2,1
10106d48:	1085883a 	add	r2,r2,r2
10106d4c:	1085883a 	add	r2,r2,r2
10106d50:	2089883a 	add	r4,r4,r2
10106d54:	21c0032e 	bgeu	r4,r7,10106d64 <__copybits+0x74>
10106d58:	20000015 	stw	zero,0(r4)
10106d5c:	21000104 	addi	r4,r4,4
10106d60:	21fffd36 	bltu	r4,r7,10106d58 <__alt_data_end+0xfffe6d58>
10106d64:	f800283a 	ret

10106d68 <__any_on>:
10106d68:	20c00417 	ldw	r3,16(r4)
10106d6c:	2805d17a 	srai	r2,r5,5
10106d70:	21000504 	addi	r4,r4,20
10106d74:	18800d0e 	bge	r3,r2,10106dac <__any_on+0x44>
10106d78:	18c7883a 	add	r3,r3,r3
10106d7c:	18c7883a 	add	r3,r3,r3
10106d80:	20c7883a 	add	r3,r4,r3
10106d84:	20c0192e 	bgeu	r4,r3,10106dec <__any_on+0x84>
10106d88:	18bfff17 	ldw	r2,-4(r3)
10106d8c:	18ffff04 	addi	r3,r3,-4
10106d90:	1000041e 	bne	r2,zero,10106da4 <__any_on+0x3c>
10106d94:	20c0142e 	bgeu	r4,r3,10106de8 <__any_on+0x80>
10106d98:	18ffff04 	addi	r3,r3,-4
10106d9c:	19400017 	ldw	r5,0(r3)
10106da0:	283ffc26 	beq	r5,zero,10106d94 <__alt_data_end+0xfffe6d94>
10106da4:	00800044 	movi	r2,1
10106da8:	f800283a 	ret
10106dac:	10c00a0e 	bge	r2,r3,10106dd8 <__any_on+0x70>
10106db0:	1085883a 	add	r2,r2,r2
10106db4:	1085883a 	add	r2,r2,r2
10106db8:	294007cc 	andi	r5,r5,31
10106dbc:	2087883a 	add	r3,r4,r2
10106dc0:	283ff026 	beq	r5,zero,10106d84 <__alt_data_end+0xfffe6d84>
10106dc4:	19800017 	ldw	r6,0(r3)
10106dc8:	3144d83a 	srl	r2,r6,r5
10106dcc:	114a983a 	sll	r5,r2,r5
10106dd0:	317ff41e 	bne	r6,r5,10106da4 <__alt_data_end+0xfffe6da4>
10106dd4:	003feb06 	br	10106d84 <__alt_data_end+0xfffe6d84>
10106dd8:	1085883a 	add	r2,r2,r2
10106ddc:	1085883a 	add	r2,r2,r2
10106de0:	2087883a 	add	r3,r4,r2
10106de4:	003fe706 	br	10106d84 <__alt_data_end+0xfffe6d84>
10106de8:	f800283a 	ret
10106dec:	0005883a 	mov	r2,zero
10106df0:	f800283a 	ret

10106df4 <__fpclassifyd>:
10106df4:	00a00034 	movhi	r2,32768
10106df8:	10bfffc4 	addi	r2,r2,-1
10106dfc:	2884703a 	and	r2,r5,r2
10106e00:	10000726 	beq	r2,zero,10106e20 <__fpclassifyd+0x2c>
10106e04:	00fffc34 	movhi	r3,65520
10106e08:	019ff834 	movhi	r6,32736
10106e0c:	28c7883a 	add	r3,r5,r3
10106e10:	31bfffc4 	addi	r6,r6,-1
10106e14:	30c00536 	bltu	r6,r3,10106e2c <__fpclassifyd+0x38>
10106e18:	00800104 	movi	r2,4
10106e1c:	f800283a 	ret
10106e20:	2000021e 	bne	r4,zero,10106e2c <__fpclassifyd+0x38>
10106e24:	00800084 	movi	r2,2
10106e28:	f800283a 	ret
10106e2c:	00dffc34 	movhi	r3,32752
10106e30:	019ff834 	movhi	r6,32736
10106e34:	28cb883a 	add	r5,r5,r3
10106e38:	31bfffc4 	addi	r6,r6,-1
10106e3c:	317ff62e 	bgeu	r6,r5,10106e18 <__alt_data_end+0xfffe6e18>
10106e40:	01400434 	movhi	r5,16
10106e44:	297fffc4 	addi	r5,r5,-1
10106e48:	28800236 	bltu	r5,r2,10106e54 <__fpclassifyd+0x60>
10106e4c:	008000c4 	movi	r2,3
10106e50:	f800283a 	ret
10106e54:	10c00226 	beq	r2,r3,10106e60 <__fpclassifyd+0x6c>
10106e58:	0005883a 	mov	r2,zero
10106e5c:	f800283a 	ret
10106e60:	2005003a 	cmpeq	r2,r4,zero
10106e64:	f800283a 	ret

10106e68 <_sbrk_r>:
10106e68:	defffd04 	addi	sp,sp,-12
10106e6c:	dc000015 	stw	r16,0(sp)
10106e70:	04040474 	movhi	r16,4113
10106e74:	dc400115 	stw	r17,4(sp)
10106e78:	840bfb04 	addi	r16,r16,12268
10106e7c:	2023883a 	mov	r17,r4
10106e80:	2809883a 	mov	r4,r5
10106e84:	dfc00215 	stw	ra,8(sp)
10106e88:	80000015 	stw	zero,0(r16)
10106e8c:	010d6f40 	call	1010d6f4 <sbrk>
10106e90:	00ffffc4 	movi	r3,-1
10106e94:	10c00526 	beq	r2,r3,10106eac <_sbrk_r+0x44>
10106e98:	dfc00217 	ldw	ra,8(sp)
10106e9c:	dc400117 	ldw	r17,4(sp)
10106ea0:	dc000017 	ldw	r16,0(sp)
10106ea4:	dec00304 	addi	sp,sp,12
10106ea8:	f800283a 	ret
10106eac:	80c00017 	ldw	r3,0(r16)
10106eb0:	183ff926 	beq	r3,zero,10106e98 <__alt_data_end+0xfffe6e98>
10106eb4:	88c00015 	stw	r3,0(r17)
10106eb8:	003ff706 	br	10106e98 <__alt_data_end+0xfffe6e98>

10106ebc <__sread>:
10106ebc:	defffe04 	addi	sp,sp,-8
10106ec0:	dc000015 	stw	r16,0(sp)
10106ec4:	2821883a 	mov	r16,r5
10106ec8:	2940038f 	ldh	r5,14(r5)
10106ecc:	dfc00115 	stw	ra,4(sp)
10106ed0:	01093600 	call	10109360 <_read_r>
10106ed4:	10000716 	blt	r2,zero,10106ef4 <__sread+0x38>
10106ed8:	80c01417 	ldw	r3,80(r16)
10106edc:	1887883a 	add	r3,r3,r2
10106ee0:	80c01415 	stw	r3,80(r16)
10106ee4:	dfc00117 	ldw	ra,4(sp)
10106ee8:	dc000017 	ldw	r16,0(sp)
10106eec:	dec00204 	addi	sp,sp,8
10106ef0:	f800283a 	ret
10106ef4:	80c0030b 	ldhu	r3,12(r16)
10106ef8:	18fbffcc 	andi	r3,r3,61439
10106efc:	80c0030d 	sth	r3,12(r16)
10106f00:	dfc00117 	ldw	ra,4(sp)
10106f04:	dc000017 	ldw	r16,0(sp)
10106f08:	dec00204 	addi	sp,sp,8
10106f0c:	f800283a 	ret

10106f10 <__seofread>:
10106f10:	0005883a 	mov	r2,zero
10106f14:	f800283a 	ret

10106f18 <__swrite>:
10106f18:	2880030b 	ldhu	r2,12(r5)
10106f1c:	defffb04 	addi	sp,sp,-20
10106f20:	dcc00315 	stw	r19,12(sp)
10106f24:	dc800215 	stw	r18,8(sp)
10106f28:	dc400115 	stw	r17,4(sp)
10106f2c:	dc000015 	stw	r16,0(sp)
10106f30:	dfc00415 	stw	ra,16(sp)
10106f34:	10c0400c 	andi	r3,r2,256
10106f38:	2821883a 	mov	r16,r5
10106f3c:	2023883a 	mov	r17,r4
10106f40:	3025883a 	mov	r18,r6
10106f44:	3827883a 	mov	r19,r7
10106f48:	18000526 	beq	r3,zero,10106f60 <__swrite+0x48>
10106f4c:	2940038f 	ldh	r5,14(r5)
10106f50:	01c00084 	movi	r7,2
10106f54:	000d883a 	mov	r6,zero
10106f58:	01091a40 	call	101091a4 <_lseek_r>
10106f5c:	8080030b 	ldhu	r2,12(r16)
10106f60:	8140038f 	ldh	r5,14(r16)
10106f64:	10bbffcc 	andi	r2,r2,61439
10106f68:	980f883a 	mov	r7,r19
10106f6c:	900d883a 	mov	r6,r18
10106f70:	8809883a 	mov	r4,r17
10106f74:	8080030d 	sth	r2,12(r16)
10106f78:	dfc00417 	ldw	ra,16(sp)
10106f7c:	dcc00317 	ldw	r19,12(sp)
10106f80:	dc800217 	ldw	r18,8(sp)
10106f84:	dc400117 	ldw	r17,4(sp)
10106f88:	dc000017 	ldw	r16,0(sp)
10106f8c:	dec00504 	addi	sp,sp,20
10106f90:	01087b41 	jmpi	101087b4 <_write_r>

10106f94 <__sseek>:
10106f94:	defffe04 	addi	sp,sp,-8
10106f98:	dc000015 	stw	r16,0(sp)
10106f9c:	2821883a 	mov	r16,r5
10106fa0:	2940038f 	ldh	r5,14(r5)
10106fa4:	dfc00115 	stw	ra,4(sp)
10106fa8:	01091a40 	call	101091a4 <_lseek_r>
10106fac:	00ffffc4 	movi	r3,-1
10106fb0:	10c00826 	beq	r2,r3,10106fd4 <__sseek+0x40>
10106fb4:	80c0030b 	ldhu	r3,12(r16)
10106fb8:	80801415 	stw	r2,80(r16)
10106fbc:	18c40014 	ori	r3,r3,4096
10106fc0:	80c0030d 	sth	r3,12(r16)
10106fc4:	dfc00117 	ldw	ra,4(sp)
10106fc8:	dc000017 	ldw	r16,0(sp)
10106fcc:	dec00204 	addi	sp,sp,8
10106fd0:	f800283a 	ret
10106fd4:	80c0030b 	ldhu	r3,12(r16)
10106fd8:	18fbffcc 	andi	r3,r3,61439
10106fdc:	80c0030d 	sth	r3,12(r16)
10106fe0:	dfc00117 	ldw	ra,4(sp)
10106fe4:	dc000017 	ldw	r16,0(sp)
10106fe8:	dec00204 	addi	sp,sp,8
10106fec:	f800283a 	ret

10106ff0 <__sclose>:
10106ff0:	2940038f 	ldh	r5,14(r5)
10106ff4:	01088141 	jmpi	10108814 <_close_r>

10106ff8 <strcmp>:
10106ff8:	2144b03a 	or	r2,r4,r5
10106ffc:	108000cc 	andi	r2,r2,3
10107000:	1000171e 	bne	r2,zero,10107060 <strcmp+0x68>
10107004:	20800017 	ldw	r2,0(r4)
10107008:	28c00017 	ldw	r3,0(r5)
1010700c:	10c0141e 	bne	r2,r3,10107060 <strcmp+0x68>
10107010:	027fbff4 	movhi	r9,65279
10107014:	4a7fbfc4 	addi	r9,r9,-257
10107018:	0086303a 	nor	r3,zero,r2
1010701c:	02202074 	movhi	r8,32897
10107020:	1245883a 	add	r2,r2,r9
10107024:	42202004 	addi	r8,r8,-32640
10107028:	10c4703a 	and	r2,r2,r3
1010702c:	1204703a 	and	r2,r2,r8
10107030:	10000226 	beq	r2,zero,1010703c <strcmp+0x44>
10107034:	00002306 	br	101070c4 <strcmp+0xcc>
10107038:	1000221e 	bne	r2,zero,101070c4 <strcmp+0xcc>
1010703c:	21000104 	addi	r4,r4,4
10107040:	20c00017 	ldw	r3,0(r4)
10107044:	29400104 	addi	r5,r5,4
10107048:	29800017 	ldw	r6,0(r5)
1010704c:	1a4f883a 	add	r7,r3,r9
10107050:	00c4303a 	nor	r2,zero,r3
10107054:	3884703a 	and	r2,r7,r2
10107058:	1204703a 	and	r2,r2,r8
1010705c:	19bff626 	beq	r3,r6,10107038 <__alt_data_end+0xfffe7038>
10107060:	20800003 	ldbu	r2,0(r4)
10107064:	10c03fcc 	andi	r3,r2,255
10107068:	18c0201c 	xori	r3,r3,128
1010706c:	18ffe004 	addi	r3,r3,-128
10107070:	18000c26 	beq	r3,zero,101070a4 <strcmp+0xac>
10107074:	29800007 	ldb	r6,0(r5)
10107078:	19800326 	beq	r3,r6,10107088 <strcmp+0x90>
1010707c:	00001306 	br	101070cc <strcmp+0xd4>
10107080:	29800007 	ldb	r6,0(r5)
10107084:	11800b1e 	bne	r2,r6,101070b4 <strcmp+0xbc>
10107088:	21000044 	addi	r4,r4,1
1010708c:	20c00003 	ldbu	r3,0(r4)
10107090:	29400044 	addi	r5,r5,1
10107094:	18803fcc 	andi	r2,r3,255
10107098:	1080201c 	xori	r2,r2,128
1010709c:	10bfe004 	addi	r2,r2,-128
101070a0:	103ff71e 	bne	r2,zero,10107080 <__alt_data_end+0xfffe7080>
101070a4:	0007883a 	mov	r3,zero
101070a8:	28800003 	ldbu	r2,0(r5)
101070ac:	1885c83a 	sub	r2,r3,r2
101070b0:	f800283a 	ret
101070b4:	28800003 	ldbu	r2,0(r5)
101070b8:	18c03fcc 	andi	r3,r3,255
101070bc:	1885c83a 	sub	r2,r3,r2
101070c0:	f800283a 	ret
101070c4:	0005883a 	mov	r2,zero
101070c8:	f800283a 	ret
101070cc:	10c03fcc 	andi	r3,r2,255
101070d0:	003ff506 	br	101070a8 <__alt_data_end+0xfffe70a8>

101070d4 <strlen>:
101070d4:	208000cc 	andi	r2,r4,3
101070d8:	10002026 	beq	r2,zero,1010715c <strlen+0x88>
101070dc:	20800007 	ldb	r2,0(r4)
101070e0:	10002026 	beq	r2,zero,10107164 <strlen+0x90>
101070e4:	2005883a 	mov	r2,r4
101070e8:	00000206 	br	101070f4 <strlen+0x20>
101070ec:	10c00007 	ldb	r3,0(r2)
101070f0:	18001826 	beq	r3,zero,10107154 <strlen+0x80>
101070f4:	10800044 	addi	r2,r2,1
101070f8:	10c000cc 	andi	r3,r2,3
101070fc:	183ffb1e 	bne	r3,zero,101070ec <__alt_data_end+0xfffe70ec>
10107100:	10c00017 	ldw	r3,0(r2)
10107104:	01ffbff4 	movhi	r7,65279
10107108:	39ffbfc4 	addi	r7,r7,-257
1010710c:	00ca303a 	nor	r5,zero,r3
10107110:	01a02074 	movhi	r6,32897
10107114:	19c7883a 	add	r3,r3,r7
10107118:	31a02004 	addi	r6,r6,-32640
1010711c:	1946703a 	and	r3,r3,r5
10107120:	1986703a 	and	r3,r3,r6
10107124:	1800091e 	bne	r3,zero,1010714c <strlen+0x78>
10107128:	10800104 	addi	r2,r2,4
1010712c:	10c00017 	ldw	r3,0(r2)
10107130:	19cb883a 	add	r5,r3,r7
10107134:	00c6303a 	nor	r3,zero,r3
10107138:	28c6703a 	and	r3,r5,r3
1010713c:	1986703a 	and	r3,r3,r6
10107140:	183ff926 	beq	r3,zero,10107128 <__alt_data_end+0xfffe7128>
10107144:	00000106 	br	1010714c <strlen+0x78>
10107148:	10800044 	addi	r2,r2,1
1010714c:	10c00007 	ldb	r3,0(r2)
10107150:	183ffd1e 	bne	r3,zero,10107148 <__alt_data_end+0xfffe7148>
10107154:	1105c83a 	sub	r2,r2,r4
10107158:	f800283a 	ret
1010715c:	2005883a 	mov	r2,r4
10107160:	003fe706 	br	10107100 <__alt_data_end+0xfffe7100>
10107164:	0005883a 	mov	r2,zero
10107168:	f800283a 	ret

1010716c <__sprint_r.part.0>:
1010716c:	28801917 	ldw	r2,100(r5)
10107170:	defff604 	addi	sp,sp,-40
10107174:	dd400515 	stw	r21,20(sp)
10107178:	dfc00915 	stw	ra,36(sp)
1010717c:	df000815 	stw	fp,32(sp)
10107180:	ddc00715 	stw	r23,28(sp)
10107184:	dd800615 	stw	r22,24(sp)
10107188:	dd000415 	stw	r20,16(sp)
1010718c:	dcc00315 	stw	r19,12(sp)
10107190:	dc800215 	stw	r18,8(sp)
10107194:	dc400115 	stw	r17,4(sp)
10107198:	dc000015 	stw	r16,0(sp)
1010719c:	1088000c 	andi	r2,r2,8192
101071a0:	302b883a 	mov	r21,r6
101071a4:	10002e26 	beq	r2,zero,10107260 <__sprint_r.part.0+0xf4>
101071a8:	30800217 	ldw	r2,8(r6)
101071ac:	35800017 	ldw	r22,0(r6)
101071b0:	10002926 	beq	r2,zero,10107258 <__sprint_r.part.0+0xec>
101071b4:	2827883a 	mov	r19,r5
101071b8:	2029883a 	mov	r20,r4
101071bc:	b5c00104 	addi	r23,r22,4
101071c0:	04bfffc4 	movi	r18,-1
101071c4:	bc400017 	ldw	r17,0(r23)
101071c8:	b4000017 	ldw	r16,0(r22)
101071cc:	0039883a 	mov	fp,zero
101071d0:	8822d0ba 	srli	r17,r17,2
101071d4:	8800031e 	bne	r17,zero,101071e4 <__sprint_r.part.0+0x78>
101071d8:	00001806 	br	1010723c <__sprint_r.part.0+0xd0>
101071dc:	84000104 	addi	r16,r16,4
101071e0:	8f001526 	beq	r17,fp,10107238 <__sprint_r.part.0+0xcc>
101071e4:	81400017 	ldw	r5,0(r16)
101071e8:	980d883a 	mov	r6,r19
101071ec:	a009883a 	mov	r4,r20
101071f0:	0108b940 	call	10108b94 <_fputwc_r>
101071f4:	e7000044 	addi	fp,fp,1
101071f8:	14bff81e 	bne	r2,r18,101071dc <__alt_data_end+0xfffe71dc>
101071fc:	9005883a 	mov	r2,r18
10107200:	a8000215 	stw	zero,8(r21)
10107204:	a8000115 	stw	zero,4(r21)
10107208:	dfc00917 	ldw	ra,36(sp)
1010720c:	df000817 	ldw	fp,32(sp)
10107210:	ddc00717 	ldw	r23,28(sp)
10107214:	dd800617 	ldw	r22,24(sp)
10107218:	dd400517 	ldw	r21,20(sp)
1010721c:	dd000417 	ldw	r20,16(sp)
10107220:	dcc00317 	ldw	r19,12(sp)
10107224:	dc800217 	ldw	r18,8(sp)
10107228:	dc400117 	ldw	r17,4(sp)
1010722c:	dc000017 	ldw	r16,0(sp)
10107230:	dec00a04 	addi	sp,sp,40
10107234:	f800283a 	ret
10107238:	a8800217 	ldw	r2,8(r21)
1010723c:	8c63883a 	add	r17,r17,r17
10107240:	8c63883a 	add	r17,r17,r17
10107244:	1445c83a 	sub	r2,r2,r17
10107248:	a8800215 	stw	r2,8(r21)
1010724c:	b5800204 	addi	r22,r22,8
10107250:	bdc00204 	addi	r23,r23,8
10107254:	103fdb1e 	bne	r2,zero,101071c4 <__alt_data_end+0xfffe71c4>
10107258:	0005883a 	mov	r2,zero
1010725c:	003fe806 	br	10107200 <__alt_data_end+0xfffe7200>
10107260:	0108c940 	call	10108c94 <__sfvwrite_r>
10107264:	003fe606 	br	10107200 <__alt_data_end+0xfffe7200>

10107268 <__sprint_r>:
10107268:	30c00217 	ldw	r3,8(r6)
1010726c:	18000126 	beq	r3,zero,10107274 <__sprint_r+0xc>
10107270:	010716c1 	jmpi	1010716c <__sprint_r.part.0>
10107274:	30000115 	stw	zero,4(r6)
10107278:	0005883a 	mov	r2,zero
1010727c:	f800283a 	ret

10107280 <___vfiprintf_internal_r>:
10107280:	deffc904 	addi	sp,sp,-220
10107284:	df003515 	stw	fp,212(sp)
10107288:	dd003115 	stw	r20,196(sp)
1010728c:	dfc03615 	stw	ra,216(sp)
10107290:	ddc03415 	stw	r23,208(sp)
10107294:	dd803315 	stw	r22,204(sp)
10107298:	dd403215 	stw	r21,200(sp)
1010729c:	dcc03015 	stw	r19,192(sp)
101072a0:	dc802f15 	stw	r18,188(sp)
101072a4:	dc402e15 	stw	r17,184(sp)
101072a8:	dc002d15 	stw	r16,180(sp)
101072ac:	d9002015 	stw	r4,128(sp)
101072b0:	d9c02215 	stw	r7,136(sp)
101072b4:	2829883a 	mov	r20,r5
101072b8:	3039883a 	mov	fp,r6
101072bc:	20000226 	beq	r4,zero,101072c8 <___vfiprintf_internal_r+0x48>
101072c0:	20800e17 	ldw	r2,56(r4)
101072c4:	1000cf26 	beq	r2,zero,10107604 <___vfiprintf_internal_r+0x384>
101072c8:	a080030b 	ldhu	r2,12(r20)
101072cc:	10c8000c 	andi	r3,r2,8192
101072d0:	1800061e 	bne	r3,zero,101072ec <___vfiprintf_internal_r+0x6c>
101072d4:	a1001917 	ldw	r4,100(r20)
101072d8:	00f7ffc4 	movi	r3,-8193
101072dc:	10880014 	ori	r2,r2,8192
101072e0:	20c6703a 	and	r3,r4,r3
101072e4:	a080030d 	sth	r2,12(r20)
101072e8:	a0c01915 	stw	r3,100(r20)
101072ec:	10c0020c 	andi	r3,r2,8
101072f0:	1800a926 	beq	r3,zero,10107598 <___vfiprintf_internal_r+0x318>
101072f4:	a0c00417 	ldw	r3,16(r20)
101072f8:	1800a726 	beq	r3,zero,10107598 <___vfiprintf_internal_r+0x318>
101072fc:	1080068c 	andi	r2,r2,26
10107300:	00c00284 	movi	r3,10
10107304:	10c0ac26 	beq	r2,r3,101075b8 <___vfiprintf_internal_r+0x338>
10107308:	da801a04 	addi	r10,sp,104
1010730c:	da801e15 	stw	r10,120(sp)
10107310:	d8801e17 	ldw	r2,120(sp)
10107314:	da8019c4 	addi	r10,sp,103
10107318:	05840474 	movhi	r22,4113
1010731c:	05c40474 	movhi	r23,4113
10107320:	da801f15 	stw	r10,124(sp)
10107324:	1295c83a 	sub	r10,r2,r10
10107328:	b5be2e04 	addi	r22,r22,-1864
1010732c:	bdfe2a04 	addi	r23,r23,-1880
10107330:	dec01a15 	stw	sp,104(sp)
10107334:	d8001c15 	stw	zero,112(sp)
10107338:	d8001b15 	stw	zero,108(sp)
1010733c:	d8002615 	stw	zero,152(sp)
10107340:	d8002315 	stw	zero,140(sp)
10107344:	da802715 	stw	r10,156(sp)
10107348:	d811883a 	mov	r8,sp
1010734c:	dd002115 	stw	r20,132(sp)
10107350:	e021883a 	mov	r16,fp
10107354:	80800007 	ldb	r2,0(r16)
10107358:	1003ea26 	beq	r2,zero,10108304 <___vfiprintf_internal_r+0x1084>
1010735c:	00c00944 	movi	r3,37
10107360:	8025883a 	mov	r18,r16
10107364:	10c0021e 	bne	r2,r3,10107370 <___vfiprintf_internal_r+0xf0>
10107368:	00001606 	br	101073c4 <___vfiprintf_internal_r+0x144>
1010736c:	10c00326 	beq	r2,r3,1010737c <___vfiprintf_internal_r+0xfc>
10107370:	94800044 	addi	r18,r18,1
10107374:	90800007 	ldb	r2,0(r18)
10107378:	103ffc1e 	bne	r2,zero,1010736c <__alt_data_end+0xfffe736c>
1010737c:	9423c83a 	sub	r17,r18,r16
10107380:	88001026 	beq	r17,zero,101073c4 <___vfiprintf_internal_r+0x144>
10107384:	d8c01c17 	ldw	r3,112(sp)
10107388:	d8801b17 	ldw	r2,108(sp)
1010738c:	44000015 	stw	r16,0(r8)
10107390:	88c7883a 	add	r3,r17,r3
10107394:	10800044 	addi	r2,r2,1
10107398:	44400115 	stw	r17,4(r8)
1010739c:	d8c01c15 	stw	r3,112(sp)
101073a0:	d8801b15 	stw	r2,108(sp)
101073a4:	010001c4 	movi	r4,7
101073a8:	2080760e 	bge	r4,r2,10107584 <___vfiprintf_internal_r+0x304>
101073ac:	1803821e 	bne	r3,zero,101081b8 <___vfiprintf_internal_r+0xf38>
101073b0:	da802317 	ldw	r10,140(sp)
101073b4:	d8001b15 	stw	zero,108(sp)
101073b8:	d811883a 	mov	r8,sp
101073bc:	5455883a 	add	r10,r10,r17
101073c0:	da802315 	stw	r10,140(sp)
101073c4:	90800007 	ldb	r2,0(r18)
101073c8:	10044626 	beq	r2,zero,101084e4 <___vfiprintf_internal_r+0x1264>
101073cc:	90c00047 	ldb	r3,1(r18)
101073d0:	94000044 	addi	r16,r18,1
101073d4:	d8001d85 	stb	zero,118(sp)
101073d8:	0009883a 	mov	r4,zero
101073dc:	000f883a 	mov	r7,zero
101073e0:	027fffc4 	movi	r9,-1
101073e4:	0023883a 	mov	r17,zero
101073e8:	0029883a 	mov	r20,zero
101073ec:	01401604 	movi	r5,88
101073f0:	01800244 	movi	r6,9
101073f4:	03400a84 	movi	r13,42
101073f8:	03001b04 	movi	r12,108
101073fc:	84000044 	addi	r16,r16,1
10107400:	18bff804 	addi	r2,r3,-32
10107404:	28827336 	bltu	r5,r2,10107dd4 <___vfiprintf_internal_r+0xb54>
10107408:	100490ba 	slli	r2,r2,2
1010740c:	02840434 	movhi	r10,4112
10107410:	529d0804 	addi	r10,r10,29728
10107414:	1285883a 	add	r2,r2,r10
10107418:	10800017 	ldw	r2,0(r2)
1010741c:	1000683a 	jmp	r2
10107420:	10107b08 	cmpgei	zero,r2,16876
10107424:	10107dd4 	ori	zero,r2,16887
10107428:	10107dd4 	ori	zero,r2,16887
1010742c:	10107b28 	cmpgeui	zero,r2,16876
10107430:	10107dd4 	ori	zero,r2,16887
10107434:	10107dd4 	ori	zero,r2,16887
10107438:	10107dd4 	ori	zero,r2,16887
1010743c:	10107dd4 	ori	zero,r2,16887
10107440:	10107dd4 	ori	zero,r2,16887
10107444:	10107dd4 	ori	zero,r2,16887
10107448:	10107d10 	cmplti	zero,r2,16884
1010744c:	10107d2c 	andhi	zero,r2,16884
10107450:	10107dd4 	ori	zero,r2,16887
10107454:	10107614 	ori	zero,r2,16856
10107458:	10107d3c 	xorhi	zero,r2,16884
1010745c:	10107dd4 	ori	zero,r2,16887
10107460:	10107b34 	orhi	zero,r2,16876
10107464:	10107b40 	call	110107b4 <__alt_data_end+0xef07b4>
10107468:	10107b40 	call	110107b4 <__alt_data_end+0xef07b4>
1010746c:	10107b40 	call	110107b4 <__alt_data_end+0xef07b4>
10107470:	10107b40 	call	110107b4 <__alt_data_end+0xef07b4>
10107474:	10107b40 	call	110107b4 <__alt_data_end+0xef07b4>
10107478:	10107b40 	call	110107b4 <__alt_data_end+0xef07b4>
1010747c:	10107b40 	call	110107b4 <__alt_data_end+0xef07b4>
10107480:	10107b40 	call	110107b4 <__alt_data_end+0xef07b4>
10107484:	10107b40 	call	110107b4 <__alt_data_end+0xef07b4>
10107488:	10107dd4 	ori	zero,r2,16887
1010748c:	10107dd4 	ori	zero,r2,16887
10107490:	10107dd4 	ori	zero,r2,16887
10107494:	10107dd4 	ori	zero,r2,16887
10107498:	10107dd4 	ori	zero,r2,16887
1010749c:	10107dd4 	ori	zero,r2,16887
101074a0:	10107dd4 	ori	zero,r2,16887
101074a4:	10107dd4 	ori	zero,r2,16887
101074a8:	10107dd4 	ori	zero,r2,16887
101074ac:	10107dd4 	ori	zero,r2,16887
101074b0:	10107b6c 	andhi	zero,r2,16877
101074b4:	10107dd4 	ori	zero,r2,16887
101074b8:	10107dd4 	ori	zero,r2,16887
101074bc:	10107dd4 	ori	zero,r2,16887
101074c0:	10107dd4 	ori	zero,r2,16887
101074c4:	10107dd4 	ori	zero,r2,16887
101074c8:	10107dd4 	ori	zero,r2,16887
101074cc:	10107dd4 	ori	zero,r2,16887
101074d0:	10107dd4 	ori	zero,r2,16887
101074d4:	10107dd4 	ori	zero,r2,16887
101074d8:	10107dd4 	ori	zero,r2,16887
101074dc:	10107ba4 	muli	zero,r2,16878
101074e0:	10107dd4 	ori	zero,r2,16887
101074e4:	10107dd4 	ori	zero,r2,16887
101074e8:	10107dd4 	ori	zero,r2,16887
101074ec:	10107dd4 	ori	zero,r2,16887
101074f0:	10107dd4 	ori	zero,r2,16887
101074f4:	10107bfc 	xorhi	zero,r2,16879
101074f8:	10107dd4 	ori	zero,r2,16887
101074fc:	10107dd4 	ori	zero,r2,16887
10107500:	10107c6c 	andhi	zero,r2,16881
10107504:	10107dd4 	ori	zero,r2,16887
10107508:	10107dd4 	ori	zero,r2,16887
1010750c:	10107dd4 	ori	zero,r2,16887
10107510:	10107dd4 	ori	zero,r2,16887
10107514:	10107dd4 	ori	zero,r2,16887
10107518:	10107dd4 	ori	zero,r2,16887
1010751c:	10107dd4 	ori	zero,r2,16887
10107520:	10107dd4 	ori	zero,r2,16887
10107524:	10107dd4 	ori	zero,r2,16887
10107528:	10107dd4 	ori	zero,r2,16887
1010752c:	10107a18 	cmpnei	zero,r2,16872
10107530:	10107a44 	addi	zero,r2,16873
10107534:	10107dd4 	ori	zero,r2,16887
10107538:	10107dd4 	ori	zero,r2,16887
1010753c:	10107dd4 	ori	zero,r2,16887
10107540:	10107d7c 	xorhi	zero,r2,16885
10107544:	10107a44 	addi	zero,r2,16873
10107548:	10107dd4 	ori	zero,r2,16887
1010754c:	10107dd4 	ori	zero,r2,16887
10107550:	101078d8 	cmpnei	zero,r2,16867
10107554:	10107dd4 	ori	zero,r2,16887
10107558:	101078e8 	cmpgeui	zero,r2,16867
1010755c:	10107924 	muli	zero,r2,16868
10107560:	10107620 	cmpeqi	zero,r2,16856
10107564:	101078cc 	andi	zero,r2,16867
10107568:	10107dd4 	ori	zero,r2,16887
1010756c:	10107ca8 	cmpgeui	zero,r2,16882
10107570:	10107dd4 	ori	zero,r2,16887
10107574:	10107d00 	call	110107d0 <__alt_data_end+0xef07d0>
10107578:	10107dd4 	ori	zero,r2,16887
1010757c:	10107dd4 	ori	zero,r2,16887
10107580:	101079c4 	addi	zero,r2,16871
10107584:	42000204 	addi	r8,r8,8
10107588:	da802317 	ldw	r10,140(sp)
1010758c:	5455883a 	add	r10,r10,r17
10107590:	da802315 	stw	r10,140(sp)
10107594:	003f8b06 	br	101073c4 <__alt_data_end+0xfffe73c4>
10107598:	d9002017 	ldw	r4,128(sp)
1010759c:	a00b883a 	mov	r5,r20
101075a0:	0102a200 	call	10102a20 <__swsetup_r>
101075a4:	1003b11e 	bne	r2,zero,1010846c <___vfiprintf_internal_r+0x11ec>
101075a8:	a080030b 	ldhu	r2,12(r20)
101075ac:	00c00284 	movi	r3,10
101075b0:	1080068c 	andi	r2,r2,26
101075b4:	10ff541e 	bne	r2,r3,10107308 <__alt_data_end+0xfffe7308>
101075b8:	a080038f 	ldh	r2,14(r20)
101075bc:	103f5216 	blt	r2,zero,10107308 <__alt_data_end+0xfffe7308>
101075c0:	d9c02217 	ldw	r7,136(sp)
101075c4:	d9002017 	ldw	r4,128(sp)
101075c8:	e00d883a 	mov	r6,fp
101075cc:	a00b883a 	mov	r5,r20
101075d0:	01086f80 	call	101086f8 <__sbprintf>
101075d4:	dfc03617 	ldw	ra,216(sp)
101075d8:	df003517 	ldw	fp,212(sp)
101075dc:	ddc03417 	ldw	r23,208(sp)
101075e0:	dd803317 	ldw	r22,204(sp)
101075e4:	dd403217 	ldw	r21,200(sp)
101075e8:	dd003117 	ldw	r20,196(sp)
101075ec:	dcc03017 	ldw	r19,192(sp)
101075f0:	dc802f17 	ldw	r18,188(sp)
101075f4:	dc402e17 	ldw	r17,184(sp)
101075f8:	dc002d17 	ldw	r16,180(sp)
101075fc:	dec03704 	addi	sp,sp,220
10107600:	f800283a 	ret
10107604:	01049f40 	call	101049f4 <__sinit>
10107608:	003f2f06 	br	101072c8 <__alt_data_end+0xfffe72c8>
1010760c:	0463c83a 	sub	r17,zero,r17
10107610:	d8802215 	stw	r2,136(sp)
10107614:	a5000114 	ori	r20,r20,4
10107618:	80c00007 	ldb	r3,0(r16)
1010761c:	003f7706 	br	101073fc <__alt_data_end+0xfffe73fc>
10107620:	00800c04 	movi	r2,48
10107624:	da802217 	ldw	r10,136(sp)
10107628:	d8801d05 	stb	r2,116(sp)
1010762c:	00801e04 	movi	r2,120
10107630:	d8801d45 	stb	r2,117(sp)
10107634:	d8001d85 	stb	zero,118(sp)
10107638:	50c00104 	addi	r3,r10,4
1010763c:	54800017 	ldw	r18,0(r10)
10107640:	0027883a 	mov	r19,zero
10107644:	a0800094 	ori	r2,r20,2
10107648:	48030b16 	blt	r9,zero,10108278 <___vfiprintf_internal_r+0xff8>
1010764c:	00bfdfc4 	movi	r2,-129
10107650:	a096703a 	and	r11,r20,r2
10107654:	d8c02215 	stw	r3,136(sp)
10107658:	5d000094 	ori	r20,r11,2
1010765c:	90032b1e 	bne	r18,zero,1010830c <___vfiprintf_internal_r+0x108c>
10107660:	00840474 	movhi	r2,4113
10107664:	10bdc904 	addi	r2,r2,-2268
10107668:	d8802615 	stw	r2,152(sp)
1010766c:	0039883a 	mov	fp,zero
10107670:	48017b1e 	bne	r9,zero,10107c60 <___vfiprintf_internal_r+0x9e0>
10107674:	0013883a 	mov	r9,zero
10107678:	0027883a 	mov	r19,zero
1010767c:	dd401a04 	addi	r21,sp,104
10107680:	4825883a 	mov	r18,r9
10107684:	4cc0010e 	bge	r9,r19,1010768c <___vfiprintf_internal_r+0x40c>
10107688:	9825883a 	mov	r18,r19
1010768c:	e7003fcc 	andi	fp,fp,255
10107690:	e700201c 	xori	fp,fp,128
10107694:	e73fe004 	addi	fp,fp,-128
10107698:	e0000126 	beq	fp,zero,101076a0 <___vfiprintf_internal_r+0x420>
1010769c:	94800044 	addi	r18,r18,1
101076a0:	a380008c 	andi	r14,r20,2
101076a4:	70000126 	beq	r14,zero,101076ac <___vfiprintf_internal_r+0x42c>
101076a8:	94800084 	addi	r18,r18,2
101076ac:	a700210c 	andi	fp,r20,132
101076b0:	e001df1e 	bne	fp,zero,10107e30 <___vfiprintf_internal_r+0xbb0>
101076b4:	8c87c83a 	sub	r3,r17,r18
101076b8:	00c1dd0e 	bge	zero,r3,10107e30 <___vfiprintf_internal_r+0xbb0>
101076bc:	01c00404 	movi	r7,16
101076c0:	d8801c17 	ldw	r2,112(sp)
101076c4:	38c3ad0e 	bge	r7,r3,1010857c <___vfiprintf_internal_r+0x12fc>
101076c8:	02840474 	movhi	r10,4113
101076cc:	52be2e04 	addi	r10,r10,-1864
101076d0:	dc002915 	stw	r16,164(sp)
101076d4:	d9801b17 	ldw	r6,108(sp)
101076d8:	da802415 	stw	r10,144(sp)
101076dc:	03c001c4 	movi	r15,7
101076e0:	da402515 	stw	r9,148(sp)
101076e4:	db802815 	stw	r14,160(sp)
101076e8:	1821883a 	mov	r16,r3
101076ec:	00000506 	br	10107704 <___vfiprintf_internal_r+0x484>
101076f0:	31400084 	addi	r5,r6,2
101076f4:	42000204 	addi	r8,r8,8
101076f8:	200d883a 	mov	r6,r4
101076fc:	843ffc04 	addi	r16,r16,-16
10107700:	3c000d0e 	bge	r7,r16,10107738 <___vfiprintf_internal_r+0x4b8>
10107704:	10800404 	addi	r2,r2,16
10107708:	31000044 	addi	r4,r6,1
1010770c:	45800015 	stw	r22,0(r8)
10107710:	41c00115 	stw	r7,4(r8)
10107714:	d8801c15 	stw	r2,112(sp)
10107718:	d9001b15 	stw	r4,108(sp)
1010771c:	793ff40e 	bge	r15,r4,101076f0 <__alt_data_end+0xfffe76f0>
10107720:	1001b51e 	bne	r2,zero,10107df8 <___vfiprintf_internal_r+0xb78>
10107724:	843ffc04 	addi	r16,r16,-16
10107728:	000d883a 	mov	r6,zero
1010772c:	01400044 	movi	r5,1
10107730:	d811883a 	mov	r8,sp
10107734:	3c3ff316 	blt	r7,r16,10107704 <__alt_data_end+0xfffe7704>
10107738:	8007883a 	mov	r3,r16
1010773c:	da402517 	ldw	r9,148(sp)
10107740:	db802817 	ldw	r14,160(sp)
10107744:	dc002917 	ldw	r16,164(sp)
10107748:	da802417 	ldw	r10,144(sp)
1010774c:	1885883a 	add	r2,r3,r2
10107750:	40c00115 	stw	r3,4(r8)
10107754:	42800015 	stw	r10,0(r8)
10107758:	d8801c15 	stw	r2,112(sp)
1010775c:	d9401b15 	stw	r5,108(sp)
10107760:	00c001c4 	movi	r3,7
10107764:	19426016 	blt	r3,r5,101080e8 <___vfiprintf_internal_r+0xe68>
10107768:	d8c01d87 	ldb	r3,118(sp)
1010776c:	42000204 	addi	r8,r8,8
10107770:	29000044 	addi	r4,r5,1
10107774:	1801b31e 	bne	r3,zero,10107e44 <___vfiprintf_internal_r+0xbc4>
10107778:	7001c026 	beq	r14,zero,10107e7c <___vfiprintf_internal_r+0xbfc>
1010777c:	d8c01d04 	addi	r3,sp,116
10107780:	10800084 	addi	r2,r2,2
10107784:	40c00015 	stw	r3,0(r8)
10107788:	00c00084 	movi	r3,2
1010778c:	40c00115 	stw	r3,4(r8)
10107790:	d8801c15 	stw	r2,112(sp)
10107794:	d9001b15 	stw	r4,108(sp)
10107798:	00c001c4 	movi	r3,7
1010779c:	1902650e 	bge	r3,r4,10108134 <___vfiprintf_internal_r+0xeb4>
101077a0:	10029a1e 	bne	r2,zero,1010820c <___vfiprintf_internal_r+0xf8c>
101077a4:	00c02004 	movi	r3,128
101077a8:	01000044 	movi	r4,1
101077ac:	000b883a 	mov	r5,zero
101077b0:	d811883a 	mov	r8,sp
101077b4:	e0c1b31e 	bne	fp,r3,10107e84 <___vfiprintf_internal_r+0xc04>
101077b8:	8cb9c83a 	sub	fp,r17,r18
101077bc:	0701b10e 	bge	zero,fp,10107e84 <___vfiprintf_internal_r+0xc04>
101077c0:	01c00404 	movi	r7,16
101077c4:	3f03890e 	bge	r7,fp,101085ec <___vfiprintf_internal_r+0x136c>
101077c8:	00c40474 	movhi	r3,4113
101077cc:	18fe2a04 	addi	r3,r3,-1880
101077d0:	d8c02415 	stw	r3,144(sp)
101077d4:	8007883a 	mov	r3,r16
101077d8:	034001c4 	movi	r13,7
101077dc:	e021883a 	mov	r16,fp
101077e0:	da402515 	stw	r9,148(sp)
101077e4:	1839883a 	mov	fp,r3
101077e8:	00000506 	br	10107800 <___vfiprintf_internal_r+0x580>
101077ec:	29800084 	addi	r6,r5,2
101077f0:	42000204 	addi	r8,r8,8
101077f4:	180b883a 	mov	r5,r3
101077f8:	843ffc04 	addi	r16,r16,-16
101077fc:	3c000d0e 	bge	r7,r16,10107834 <___vfiprintf_internal_r+0x5b4>
10107800:	10800404 	addi	r2,r2,16
10107804:	28c00044 	addi	r3,r5,1
10107808:	45c00015 	stw	r23,0(r8)
1010780c:	41c00115 	stw	r7,4(r8)
10107810:	d8801c15 	stw	r2,112(sp)
10107814:	d8c01b15 	stw	r3,108(sp)
10107818:	68fff40e 	bge	r13,r3,101077ec <__alt_data_end+0xfffe77ec>
1010781c:	1002241e 	bne	r2,zero,101080b0 <___vfiprintf_internal_r+0xe30>
10107820:	843ffc04 	addi	r16,r16,-16
10107824:	01800044 	movi	r6,1
10107828:	000b883a 	mov	r5,zero
1010782c:	d811883a 	mov	r8,sp
10107830:	3c3ff316 	blt	r7,r16,10107800 <__alt_data_end+0xfffe7800>
10107834:	da402517 	ldw	r9,148(sp)
10107838:	e007883a 	mov	r3,fp
1010783c:	8039883a 	mov	fp,r16
10107840:	1821883a 	mov	r16,r3
10107844:	d8c02417 	ldw	r3,144(sp)
10107848:	1705883a 	add	r2,r2,fp
1010784c:	47000115 	stw	fp,4(r8)
10107850:	40c00015 	stw	r3,0(r8)
10107854:	d8801c15 	stw	r2,112(sp)
10107858:	d9801b15 	stw	r6,108(sp)
1010785c:	00c001c4 	movi	r3,7
10107860:	19827616 	blt	r3,r6,1010823c <___vfiprintf_internal_r+0xfbc>
10107864:	4cf9c83a 	sub	fp,r9,r19
10107868:	42000204 	addi	r8,r8,8
1010786c:	31000044 	addi	r4,r6,1
10107870:	300b883a 	mov	r5,r6
10107874:	07018516 	blt	zero,fp,10107e8c <___vfiprintf_internal_r+0xc0c>
10107878:	9885883a 	add	r2,r19,r2
1010787c:	45400015 	stw	r21,0(r8)
10107880:	44c00115 	stw	r19,4(r8)
10107884:	d8801c15 	stw	r2,112(sp)
10107888:	d9001b15 	stw	r4,108(sp)
1010788c:	00c001c4 	movi	r3,7
10107890:	1901dd0e 	bge	r3,r4,10108008 <___vfiprintf_internal_r+0xd88>
10107894:	1002401e 	bne	r2,zero,10108198 <___vfiprintf_internal_r+0xf18>
10107898:	d8001b15 	stw	zero,108(sp)
1010789c:	a2c0010c 	andi	r11,r20,4
101078a0:	58000226 	beq	r11,zero,101078ac <___vfiprintf_internal_r+0x62c>
101078a4:	8ca7c83a 	sub	r19,r17,r18
101078a8:	04c2f216 	blt	zero,r19,10108474 <___vfiprintf_internal_r+0x11f4>
101078ac:	8c80010e 	bge	r17,r18,101078b4 <___vfiprintf_internal_r+0x634>
101078b0:	9023883a 	mov	r17,r18
101078b4:	da802317 	ldw	r10,140(sp)
101078b8:	5455883a 	add	r10,r10,r17
101078bc:	da802315 	stw	r10,140(sp)
101078c0:	d8001b15 	stw	zero,108(sp)
101078c4:	d811883a 	mov	r8,sp
101078c8:	003ea206 	br	10107354 <__alt_data_end+0xfffe7354>
101078cc:	a5000814 	ori	r20,r20,32
101078d0:	80c00007 	ldb	r3,0(r16)
101078d4:	003ec906 	br	101073fc <__alt_data_end+0xfffe73fc>
101078d8:	80c00007 	ldb	r3,0(r16)
101078dc:	1b030926 	beq	r3,r12,10108504 <___vfiprintf_internal_r+0x1284>
101078e0:	a5000414 	ori	r20,r20,16
101078e4:	003ec506 	br	101073fc <__alt_data_end+0xfffe73fc>
101078e8:	21003fcc 	andi	r4,r4,255
101078ec:	20035e1e 	bne	r4,zero,10108668 <___vfiprintf_internal_r+0x13e8>
101078f0:	a080080c 	andi	r2,r20,32
101078f4:	1002a526 	beq	r2,zero,1010838c <___vfiprintf_internal_r+0x110c>
101078f8:	da802217 	ldw	r10,136(sp)
101078fc:	50800017 	ldw	r2,0(r10)
10107900:	da802317 	ldw	r10,140(sp)
10107904:	5007d7fa 	srai	r3,r10,31
10107908:	da802217 	ldw	r10,136(sp)
1010790c:	10c00115 	stw	r3,4(r2)
10107910:	52800104 	addi	r10,r10,4
10107914:	da802215 	stw	r10,136(sp)
10107918:	da802317 	ldw	r10,140(sp)
1010791c:	12800015 	stw	r10,0(r2)
10107920:	003e8c06 	br	10107354 <__alt_data_end+0xfffe7354>
10107924:	21003fcc 	andi	r4,r4,255
10107928:	2003511e 	bne	r4,zero,10108670 <___vfiprintf_internal_r+0x13f0>
1010792c:	a080080c 	andi	r2,r20,32
10107930:	1000a126 	beq	r2,zero,10107bb8 <___vfiprintf_internal_r+0x938>
10107934:	da802217 	ldw	r10,136(sp)
10107938:	d8001d85 	stb	zero,118(sp)
1010793c:	50800204 	addi	r2,r10,8
10107940:	54800017 	ldw	r18,0(r10)
10107944:	54c00117 	ldw	r19,4(r10)
10107948:	4802b416 	blt	r9,zero,1010841c <___vfiprintf_internal_r+0x119c>
1010794c:	013fdfc4 	movi	r4,-129
10107950:	94c6b03a 	or	r3,r18,r19
10107954:	d8802215 	stw	r2,136(sp)
10107958:	a128703a 	and	r20,r20,r4
1010795c:	1800a226 	beq	r3,zero,10107be8 <___vfiprintf_internal_r+0x968>
10107960:	0039883a 	mov	fp,zero
10107964:	dd401a04 	addi	r21,sp,104
10107968:	9006d0fa 	srli	r3,r18,3
1010796c:	9808977a 	slli	r4,r19,29
10107970:	9826d0fa 	srli	r19,r19,3
10107974:	948001cc 	andi	r18,r18,7
10107978:	90800c04 	addi	r2,r18,48
1010797c:	ad7fffc4 	addi	r21,r21,-1
10107980:	20e4b03a 	or	r18,r4,r3
10107984:	a8800005 	stb	r2,0(r21)
10107988:	94c6b03a 	or	r3,r18,r19
1010798c:	183ff61e 	bne	r3,zero,10107968 <__alt_data_end+0xfffe7968>
10107990:	a0c0004c 	andi	r3,r20,1
10107994:	18005926 	beq	r3,zero,10107afc <___vfiprintf_internal_r+0x87c>
10107998:	10803fcc 	andi	r2,r2,255
1010799c:	1080201c 	xori	r2,r2,128
101079a0:	10bfe004 	addi	r2,r2,-128
101079a4:	00c00c04 	movi	r3,48
101079a8:	10c05426 	beq	r2,r3,10107afc <___vfiprintf_internal_r+0x87c>
101079ac:	da801e17 	ldw	r10,120(sp)
101079b0:	a8bfffc4 	addi	r2,r21,-1
101079b4:	a8ffffc5 	stb	r3,-1(r21)
101079b8:	50a7c83a 	sub	r19,r10,r2
101079bc:	102b883a 	mov	r21,r2
101079c0:	003f2f06 	br	10107680 <__alt_data_end+0xfffe7680>
101079c4:	21003fcc 	andi	r4,r4,255
101079c8:	2003421e 	bne	r4,zero,101086d4 <___vfiprintf_internal_r+0x1454>
101079cc:	00840474 	movhi	r2,4113
101079d0:	10bdc904 	addi	r2,r2,-2268
101079d4:	d8802615 	stw	r2,152(sp)
101079d8:	a080080c 	andi	r2,r20,32
101079dc:	1000aa26 	beq	r2,zero,10107c88 <___vfiprintf_internal_r+0xa08>
101079e0:	da802217 	ldw	r10,136(sp)
101079e4:	54800017 	ldw	r18,0(r10)
101079e8:	54c00117 	ldw	r19,4(r10)
101079ec:	52800204 	addi	r10,r10,8
101079f0:	da802215 	stw	r10,136(sp)
101079f4:	a080004c 	andi	r2,r20,1
101079f8:	1001d226 	beq	r2,zero,10108144 <___vfiprintf_internal_r+0xec4>
101079fc:	94c4b03a 	or	r2,r18,r19
10107a00:	1002351e 	bne	r2,zero,101082d8 <___vfiprintf_internal_r+0x1058>
10107a04:	d8001d85 	stb	zero,118(sp)
10107a08:	48022216 	blt	r9,zero,10108294 <___vfiprintf_internal_r+0x1014>
10107a0c:	00bfdfc4 	movi	r2,-129
10107a10:	a0a8703a 	and	r20,r20,r2
10107a14:	003f1506 	br	1010766c <__alt_data_end+0xfffe766c>
10107a18:	da802217 	ldw	r10,136(sp)
10107a1c:	04800044 	movi	r18,1
10107a20:	d8001d85 	stb	zero,118(sp)
10107a24:	50800017 	ldw	r2,0(r10)
10107a28:	52800104 	addi	r10,r10,4
10107a2c:	da802215 	stw	r10,136(sp)
10107a30:	d8801005 	stb	r2,64(sp)
10107a34:	9027883a 	mov	r19,r18
10107a38:	dd401004 	addi	r21,sp,64
10107a3c:	0013883a 	mov	r9,zero
10107a40:	003f1706 	br	101076a0 <__alt_data_end+0xfffe76a0>
10107a44:	21003fcc 	andi	r4,r4,255
10107a48:	2003201e 	bne	r4,zero,101086cc <___vfiprintf_internal_r+0x144c>
10107a4c:	a080080c 	andi	r2,r20,32
10107a50:	10004b26 	beq	r2,zero,10107b80 <___vfiprintf_internal_r+0x900>
10107a54:	da802217 	ldw	r10,136(sp)
10107a58:	50800117 	ldw	r2,4(r10)
10107a5c:	54800017 	ldw	r18,0(r10)
10107a60:	52800204 	addi	r10,r10,8
10107a64:	da802215 	stw	r10,136(sp)
10107a68:	1027883a 	mov	r19,r2
10107a6c:	10022c16 	blt	r2,zero,10108320 <___vfiprintf_internal_r+0x10a0>
10107a70:	df001d83 	ldbu	fp,118(sp)
10107a74:	48007216 	blt	r9,zero,10107c40 <___vfiprintf_internal_r+0x9c0>
10107a78:	00ffdfc4 	movi	r3,-129
10107a7c:	94c4b03a 	or	r2,r18,r19
10107a80:	a0e8703a 	and	r20,r20,r3
10107a84:	1000cc26 	beq	r2,zero,10107db8 <___vfiprintf_internal_r+0xb38>
10107a88:	98021026 	beq	r19,zero,101082cc <___vfiprintf_internal_r+0x104c>
10107a8c:	dc402415 	stw	r17,144(sp)
10107a90:	dc002515 	stw	r16,148(sp)
10107a94:	9823883a 	mov	r17,r19
10107a98:	9021883a 	mov	r16,r18
10107a9c:	dd401a04 	addi	r21,sp,104
10107aa0:	4825883a 	mov	r18,r9
10107aa4:	4027883a 	mov	r19,r8
10107aa8:	8009883a 	mov	r4,r16
10107aac:	880b883a 	mov	r5,r17
10107ab0:	01800284 	movi	r6,10
10107ab4:	000f883a 	mov	r7,zero
10107ab8:	010a1dc0 	call	1010a1dc <__umoddi3>
10107abc:	10800c04 	addi	r2,r2,48
10107ac0:	ad7fffc4 	addi	r21,r21,-1
10107ac4:	8009883a 	mov	r4,r16
10107ac8:	880b883a 	mov	r5,r17
10107acc:	a8800005 	stb	r2,0(r21)
10107ad0:	01800284 	movi	r6,10
10107ad4:	000f883a 	mov	r7,zero
10107ad8:	0109c640 	call	10109c64 <__udivdi3>
10107adc:	1021883a 	mov	r16,r2
10107ae0:	10c4b03a 	or	r2,r2,r3
10107ae4:	1823883a 	mov	r17,r3
10107ae8:	103fef1e 	bne	r2,zero,10107aa8 <__alt_data_end+0xfffe7aa8>
10107aec:	dc402417 	ldw	r17,144(sp)
10107af0:	dc002517 	ldw	r16,148(sp)
10107af4:	9013883a 	mov	r9,r18
10107af8:	9811883a 	mov	r8,r19
10107afc:	da801e17 	ldw	r10,120(sp)
10107b00:	5567c83a 	sub	r19,r10,r21
10107b04:	003ede06 	br	10107680 <__alt_data_end+0xfffe7680>
10107b08:	38803fcc 	andi	r2,r7,255
10107b0c:	1080201c 	xori	r2,r2,128
10107b10:	10bfe004 	addi	r2,r2,-128
10107b14:	1002371e 	bne	r2,zero,101083f4 <___vfiprintf_internal_r+0x1174>
10107b18:	01000044 	movi	r4,1
10107b1c:	01c00804 	movi	r7,32
10107b20:	80c00007 	ldb	r3,0(r16)
10107b24:	003e3506 	br	101073fc <__alt_data_end+0xfffe73fc>
10107b28:	a5000054 	ori	r20,r20,1
10107b2c:	80c00007 	ldb	r3,0(r16)
10107b30:	003e3206 	br	101073fc <__alt_data_end+0xfffe73fc>
10107b34:	a5002014 	ori	r20,r20,128
10107b38:	80c00007 	ldb	r3,0(r16)
10107b3c:	003e2f06 	br	101073fc <__alt_data_end+0xfffe73fc>
10107b40:	8015883a 	mov	r10,r16
10107b44:	0023883a 	mov	r17,zero
10107b48:	18bff404 	addi	r2,r3,-48
10107b4c:	50c00007 	ldb	r3,0(r10)
10107b50:	8c4002a4 	muli	r17,r17,10
10107b54:	84000044 	addi	r16,r16,1
10107b58:	8015883a 	mov	r10,r16
10107b5c:	1463883a 	add	r17,r2,r17
10107b60:	18bff404 	addi	r2,r3,-48
10107b64:	30bff92e 	bgeu	r6,r2,10107b4c <__alt_data_end+0xfffe7b4c>
10107b68:	003e2506 	br	10107400 <__alt_data_end+0xfffe7400>
10107b6c:	21003fcc 	andi	r4,r4,255
10107b70:	2002d41e 	bne	r4,zero,101086c4 <___vfiprintf_internal_r+0x1444>
10107b74:	a5000414 	ori	r20,r20,16
10107b78:	a080080c 	andi	r2,r20,32
10107b7c:	103fb51e 	bne	r2,zero,10107a54 <__alt_data_end+0xfffe7a54>
10107b80:	a080040c 	andi	r2,r20,16
10107b84:	1001f826 	beq	r2,zero,10108368 <___vfiprintf_internal_r+0x10e8>
10107b88:	da802217 	ldw	r10,136(sp)
10107b8c:	54800017 	ldw	r18,0(r10)
10107b90:	52800104 	addi	r10,r10,4
10107b94:	da802215 	stw	r10,136(sp)
10107b98:	9027d7fa 	srai	r19,r18,31
10107b9c:	9805883a 	mov	r2,r19
10107ba0:	003fb206 	br	10107a6c <__alt_data_end+0xfffe7a6c>
10107ba4:	21003fcc 	andi	r4,r4,255
10107ba8:	2002c41e 	bne	r4,zero,101086bc <___vfiprintf_internal_r+0x143c>
10107bac:	a5000414 	ori	r20,r20,16
10107bb0:	a080080c 	andi	r2,r20,32
10107bb4:	103f5f1e 	bne	r2,zero,10107934 <__alt_data_end+0xfffe7934>
10107bb8:	a080040c 	andi	r2,r20,16
10107bbc:	10020f26 	beq	r2,zero,101083fc <___vfiprintf_internal_r+0x117c>
10107bc0:	da802217 	ldw	r10,136(sp)
10107bc4:	d8001d85 	stb	zero,118(sp)
10107bc8:	0027883a 	mov	r19,zero
10107bcc:	50800104 	addi	r2,r10,4
10107bd0:	54800017 	ldw	r18,0(r10)
10107bd4:	48021116 	blt	r9,zero,1010841c <___vfiprintf_internal_r+0x119c>
10107bd8:	00ffdfc4 	movi	r3,-129
10107bdc:	d8802215 	stw	r2,136(sp)
10107be0:	a0e8703a 	and	r20,r20,r3
10107be4:	903f5e1e 	bne	r18,zero,10107960 <__alt_data_end+0xfffe7960>
10107be8:	0039883a 	mov	fp,zero
10107bec:	4802a626 	beq	r9,zero,10108688 <___vfiprintf_internal_r+0x1408>
10107bf0:	0025883a 	mov	r18,zero
10107bf4:	0027883a 	mov	r19,zero
10107bf8:	003f5a06 	br	10107964 <__alt_data_end+0xfffe7964>
10107bfc:	21003fcc 	andi	r4,r4,255
10107c00:	20029f1e 	bne	r4,zero,10108680 <___vfiprintf_internal_r+0x1400>
10107c04:	a5000414 	ori	r20,r20,16
10107c08:	a080080c 	andi	r2,r20,32
10107c0c:	10005e1e 	bne	r2,zero,10107d88 <___vfiprintf_internal_r+0xb08>
10107c10:	a080040c 	andi	r2,r20,16
10107c14:	1001a21e 	bne	r2,zero,101082a0 <___vfiprintf_internal_r+0x1020>
10107c18:	a080100c 	andi	r2,r20,64
10107c1c:	d8001d85 	stb	zero,118(sp)
10107c20:	da802217 	ldw	r10,136(sp)
10107c24:	1002231e 	bne	r2,zero,101084b4 <___vfiprintf_internal_r+0x1234>
10107c28:	50800104 	addi	r2,r10,4
10107c2c:	54800017 	ldw	r18,0(r10)
10107c30:	0027883a 	mov	r19,zero
10107c34:	4801a00e 	bge	r9,zero,101082b8 <___vfiprintf_internal_r+0x1038>
10107c38:	d8802215 	stw	r2,136(sp)
10107c3c:	0039883a 	mov	fp,zero
10107c40:	94c4b03a 	or	r2,r18,r19
10107c44:	103f901e 	bne	r2,zero,10107a88 <__alt_data_end+0xfffe7a88>
10107c48:	00800044 	movi	r2,1
10107c4c:	10803fcc 	andi	r2,r2,255
10107c50:	00c00044 	movi	r3,1
10107c54:	10c05926 	beq	r2,r3,10107dbc <___vfiprintf_internal_r+0xb3c>
10107c58:	00c00084 	movi	r3,2
10107c5c:	10ffe41e 	bne	r2,r3,10107bf0 <__alt_data_end+0xfffe7bf0>
10107c60:	0025883a 	mov	r18,zero
10107c64:	0027883a 	mov	r19,zero
10107c68:	00013d06 	br	10108160 <___vfiprintf_internal_r+0xee0>
10107c6c:	21003fcc 	andi	r4,r4,255
10107c70:	2002811e 	bne	r4,zero,10108678 <___vfiprintf_internal_r+0x13f8>
10107c74:	00840474 	movhi	r2,4113
10107c78:	10bdc404 	addi	r2,r2,-2288
10107c7c:	d8802615 	stw	r2,152(sp)
10107c80:	a080080c 	andi	r2,r20,32
10107c84:	103f561e 	bne	r2,zero,101079e0 <__alt_data_end+0xfffe79e0>
10107c88:	a080040c 	andi	r2,r20,16
10107c8c:	1001d126 	beq	r2,zero,101083d4 <___vfiprintf_internal_r+0x1154>
10107c90:	da802217 	ldw	r10,136(sp)
10107c94:	0027883a 	mov	r19,zero
10107c98:	54800017 	ldw	r18,0(r10)
10107c9c:	52800104 	addi	r10,r10,4
10107ca0:	da802215 	stw	r10,136(sp)
10107ca4:	003f5306 	br	101079f4 <__alt_data_end+0xfffe79f4>
10107ca8:	da802217 	ldw	r10,136(sp)
10107cac:	d8001d85 	stb	zero,118(sp)
10107cb0:	55400017 	ldw	r21,0(r10)
10107cb4:	50c00104 	addi	r3,r10,4
10107cb8:	a8024226 	beq	r21,zero,101085c4 <___vfiprintf_internal_r+0x1344>
10107cbc:	48021816 	blt	r9,zero,10108520 <___vfiprintf_internal_r+0x12a0>
10107cc0:	480d883a 	mov	r6,r9
10107cc4:	000b883a 	mov	r5,zero
10107cc8:	a809883a 	mov	r4,r21
10107ccc:	d8c02a15 	stw	r3,168(sp)
10107cd0:	da002b15 	stw	r8,172(sp)
10107cd4:	da402c15 	stw	r9,176(sp)
10107cd8:	0105aa40 	call	10105aa4 <memchr>
10107cdc:	d8c02a17 	ldw	r3,168(sp)
10107ce0:	da002b17 	ldw	r8,172(sp)
10107ce4:	da402c17 	ldw	r9,176(sp)
10107ce8:	10024826 	beq	r2,zero,1010860c <___vfiprintf_internal_r+0x138c>
10107cec:	1567c83a 	sub	r19,r2,r21
10107cf0:	df001d83 	ldbu	fp,118(sp)
10107cf4:	d8c02215 	stw	r3,136(sp)
10107cf8:	0013883a 	mov	r9,zero
10107cfc:	003e6006 	br	10107680 <__alt_data_end+0xfffe7680>
10107d00:	21003fcc 	andi	r4,r4,255
10107d04:	203fc026 	beq	r4,zero,10107c08 <__alt_data_end+0xfffe7c08>
10107d08:	d9c01d85 	stb	r7,118(sp)
10107d0c:	003fbe06 	br	10107c08 <__alt_data_end+0xfffe7c08>
10107d10:	da802217 	ldw	r10,136(sp)
10107d14:	54400017 	ldw	r17,0(r10)
10107d18:	50800104 	addi	r2,r10,4
10107d1c:	883e3b16 	blt	r17,zero,1010760c <__alt_data_end+0xfffe760c>
10107d20:	d8802215 	stw	r2,136(sp)
10107d24:	80c00007 	ldb	r3,0(r16)
10107d28:	003db406 	br	101073fc <__alt_data_end+0xfffe73fc>
10107d2c:	01000044 	movi	r4,1
10107d30:	01c00ac4 	movi	r7,43
10107d34:	80c00007 	ldb	r3,0(r16)
10107d38:	003db006 	br	101073fc <__alt_data_end+0xfffe73fc>
10107d3c:	80c00007 	ldb	r3,0(r16)
10107d40:	82800044 	addi	r10,r16,1
10107d44:	1b423c26 	beq	r3,r13,10108638 <___vfiprintf_internal_r+0x13b8>
10107d48:	18bff404 	addi	r2,r3,-48
10107d4c:	0013883a 	mov	r9,zero
10107d50:	30822b36 	bltu	r6,r2,10108600 <___vfiprintf_internal_r+0x1380>
10107d54:	50c00007 	ldb	r3,0(r10)
10107d58:	4a4002a4 	muli	r9,r9,10
10107d5c:	54000044 	addi	r16,r10,1
10107d60:	8015883a 	mov	r10,r16
10107d64:	4893883a 	add	r9,r9,r2
10107d68:	18bff404 	addi	r2,r3,-48
10107d6c:	30bff92e 	bgeu	r6,r2,10107d54 <__alt_data_end+0xfffe7d54>
10107d70:	483da30e 	bge	r9,zero,10107400 <__alt_data_end+0xfffe7400>
10107d74:	027fffc4 	movi	r9,-1
10107d78:	003da106 	br	10107400 <__alt_data_end+0xfffe7400>
10107d7c:	a5001014 	ori	r20,r20,64
10107d80:	80c00007 	ldb	r3,0(r16)
10107d84:	003d9d06 	br	101073fc <__alt_data_end+0xfffe73fc>
10107d88:	da802217 	ldw	r10,136(sp)
10107d8c:	d8001d85 	stb	zero,118(sp)
10107d90:	50c00204 	addi	r3,r10,8
10107d94:	54800017 	ldw	r18,0(r10)
10107d98:	54c00117 	ldw	r19,4(r10)
10107d9c:	4801ca16 	blt	r9,zero,101084c8 <___vfiprintf_internal_r+0x1248>
10107da0:	013fdfc4 	movi	r4,-129
10107da4:	94c4b03a 	or	r2,r18,r19
10107da8:	d8c02215 	stw	r3,136(sp)
10107dac:	a128703a 	and	r20,r20,r4
10107db0:	0039883a 	mov	fp,zero
10107db4:	103f341e 	bne	r2,zero,10107a88 <__alt_data_end+0xfffe7a88>
10107db8:	483e2e26 	beq	r9,zero,10107674 <__alt_data_end+0xfffe7674>
10107dbc:	0025883a 	mov	r18,zero
10107dc0:	94800c04 	addi	r18,r18,48
10107dc4:	dc8019c5 	stb	r18,103(sp)
10107dc8:	dcc02717 	ldw	r19,156(sp)
10107dcc:	dd4019c4 	addi	r21,sp,103
10107dd0:	003e2b06 	br	10107680 <__alt_data_end+0xfffe7680>
10107dd4:	21003fcc 	andi	r4,r4,255
10107dd8:	2002361e 	bne	r4,zero,101086b4 <___vfiprintf_internal_r+0x1434>
10107ddc:	1801c126 	beq	r3,zero,101084e4 <___vfiprintf_internal_r+0x1264>
10107de0:	04800044 	movi	r18,1
10107de4:	d8c01005 	stb	r3,64(sp)
10107de8:	d8001d85 	stb	zero,118(sp)
10107dec:	9027883a 	mov	r19,r18
10107df0:	dd401004 	addi	r21,sp,64
10107df4:	003f1106 	br	10107a3c <__alt_data_end+0xfffe7a3c>
10107df8:	d9402117 	ldw	r5,132(sp)
10107dfc:	d9002017 	ldw	r4,128(sp)
10107e00:	d9801a04 	addi	r6,sp,104
10107e04:	d9c02b15 	stw	r7,172(sp)
10107e08:	dbc02a15 	stw	r15,168(sp)
10107e0c:	010716c0 	call	1010716c <__sprint_r.part.0>
10107e10:	d9c02b17 	ldw	r7,172(sp)
10107e14:	dbc02a17 	ldw	r15,168(sp)
10107e18:	10006d1e 	bne	r2,zero,10107fd0 <___vfiprintf_internal_r+0xd50>
10107e1c:	d9801b17 	ldw	r6,108(sp)
10107e20:	d8801c17 	ldw	r2,112(sp)
10107e24:	d811883a 	mov	r8,sp
10107e28:	31400044 	addi	r5,r6,1
10107e2c:	003e3306 	br	101076fc <__alt_data_end+0xfffe76fc>
10107e30:	d9401b17 	ldw	r5,108(sp)
10107e34:	d8801c17 	ldw	r2,112(sp)
10107e38:	29000044 	addi	r4,r5,1
10107e3c:	d8c01d87 	ldb	r3,118(sp)
10107e40:	183e4d26 	beq	r3,zero,10107778 <__alt_data_end+0xfffe7778>
10107e44:	00c00044 	movi	r3,1
10107e48:	d9401d84 	addi	r5,sp,118
10107e4c:	10c5883a 	add	r2,r2,r3
10107e50:	41400015 	stw	r5,0(r8)
10107e54:	40c00115 	stw	r3,4(r8)
10107e58:	d8801c15 	stw	r2,112(sp)
10107e5c:	d9001b15 	stw	r4,108(sp)
10107e60:	014001c4 	movi	r5,7
10107e64:	2900a90e 	bge	r5,r4,1010810c <___vfiprintf_internal_r+0xe8c>
10107e68:	1000da1e 	bne	r2,zero,101081d4 <___vfiprintf_internal_r+0xf54>
10107e6c:	7000ab1e 	bne	r14,zero,1010811c <___vfiprintf_internal_r+0xe9c>
10107e70:	000b883a 	mov	r5,zero
10107e74:	1809883a 	mov	r4,r3
10107e78:	d811883a 	mov	r8,sp
10107e7c:	00c02004 	movi	r3,128
10107e80:	e0fe4d26 	beq	fp,r3,101077b8 <__alt_data_end+0xfffe77b8>
10107e84:	4cf9c83a 	sub	fp,r9,r19
10107e88:	073e7b0e 	bge	zero,fp,10107878 <__alt_data_end+0xfffe7878>
10107e8c:	01c00404 	movi	r7,16
10107e90:	3f01900e 	bge	r7,fp,101084d4 <___vfiprintf_internal_r+0x1254>
10107e94:	00c40474 	movhi	r3,4113
10107e98:	18fe2a04 	addi	r3,r3,-1880
10107e9c:	d8c02415 	stw	r3,144(sp)
10107ea0:	034001c4 	movi	r13,7
10107ea4:	00000506 	br	10107ebc <___vfiprintf_internal_r+0xc3c>
10107ea8:	29000084 	addi	r4,r5,2
10107eac:	42000204 	addi	r8,r8,8
10107eb0:	180b883a 	mov	r5,r3
10107eb4:	e73ffc04 	addi	fp,fp,-16
10107eb8:	3f000d0e 	bge	r7,fp,10107ef0 <___vfiprintf_internal_r+0xc70>
10107ebc:	10800404 	addi	r2,r2,16
10107ec0:	28c00044 	addi	r3,r5,1
10107ec4:	45c00015 	stw	r23,0(r8)
10107ec8:	41c00115 	stw	r7,4(r8)
10107ecc:	d8801c15 	stw	r2,112(sp)
10107ed0:	d8c01b15 	stw	r3,108(sp)
10107ed4:	68fff40e 	bge	r13,r3,10107ea8 <__alt_data_end+0xfffe7ea8>
10107ed8:	1000101e 	bne	r2,zero,10107f1c <___vfiprintf_internal_r+0xc9c>
10107edc:	e73ffc04 	addi	fp,fp,-16
10107ee0:	01000044 	movi	r4,1
10107ee4:	000b883a 	mov	r5,zero
10107ee8:	d811883a 	mov	r8,sp
10107eec:	3f3ff316 	blt	r7,fp,10107ebc <__alt_data_end+0xfffe7ebc>
10107ef0:	da802417 	ldw	r10,144(sp)
10107ef4:	1705883a 	add	r2,r2,fp
10107ef8:	47000115 	stw	fp,4(r8)
10107efc:	42800015 	stw	r10,0(r8)
10107f00:	d8801c15 	stw	r2,112(sp)
10107f04:	d9001b15 	stw	r4,108(sp)
10107f08:	00c001c4 	movi	r3,7
10107f0c:	19003616 	blt	r3,r4,10107fe8 <___vfiprintf_internal_r+0xd68>
10107f10:	42000204 	addi	r8,r8,8
10107f14:	21000044 	addi	r4,r4,1
10107f18:	003e5706 	br	10107878 <__alt_data_end+0xfffe7878>
10107f1c:	d9402117 	ldw	r5,132(sp)
10107f20:	d9002017 	ldw	r4,128(sp)
10107f24:	d9801a04 	addi	r6,sp,104
10107f28:	d9c02b15 	stw	r7,172(sp)
10107f2c:	db402a15 	stw	r13,168(sp)
10107f30:	010716c0 	call	1010716c <__sprint_r.part.0>
10107f34:	d9c02b17 	ldw	r7,172(sp)
10107f38:	db402a17 	ldw	r13,168(sp)
10107f3c:	1000241e 	bne	r2,zero,10107fd0 <___vfiprintf_internal_r+0xd50>
10107f40:	d9401b17 	ldw	r5,108(sp)
10107f44:	d8801c17 	ldw	r2,112(sp)
10107f48:	d811883a 	mov	r8,sp
10107f4c:	29000044 	addi	r4,r5,1
10107f50:	003fd806 	br	10107eb4 <__alt_data_end+0xfffe7eb4>
10107f54:	d9401b17 	ldw	r5,108(sp)
10107f58:	00c40474 	movhi	r3,4113
10107f5c:	18fe2e04 	addi	r3,r3,-1864
10107f60:	d8c02415 	stw	r3,144(sp)
10107f64:	29400044 	addi	r5,r5,1
10107f68:	d8c02417 	ldw	r3,144(sp)
10107f6c:	14c5883a 	add	r2,r2,r19
10107f70:	44c00115 	stw	r19,4(r8)
10107f74:	40c00015 	stw	r3,0(r8)
10107f78:	d8801c15 	stw	r2,112(sp)
10107f7c:	d9401b15 	stw	r5,108(sp)
10107f80:	00c001c4 	movi	r3,7
10107f84:	1940070e 	bge	r3,r5,10107fa4 <___vfiprintf_internal_r+0xd24>
10107f88:	103e4826 	beq	r2,zero,101078ac <__alt_data_end+0xfffe78ac>
10107f8c:	d9402117 	ldw	r5,132(sp)
10107f90:	d9002017 	ldw	r4,128(sp)
10107f94:	d9801a04 	addi	r6,sp,104
10107f98:	010716c0 	call	1010716c <__sprint_r.part.0>
10107f9c:	10000c1e 	bne	r2,zero,10107fd0 <___vfiprintf_internal_r+0xd50>
10107fa0:	d8801c17 	ldw	r2,112(sp)
10107fa4:	8c80010e 	bge	r17,r18,10107fac <___vfiprintf_internal_r+0xd2c>
10107fa8:	9023883a 	mov	r17,r18
10107fac:	da802317 	ldw	r10,140(sp)
10107fb0:	5455883a 	add	r10,r10,r17
10107fb4:	da802315 	stw	r10,140(sp)
10107fb8:	103e4126 	beq	r2,zero,101078c0 <__alt_data_end+0xfffe78c0>
10107fbc:	d9402117 	ldw	r5,132(sp)
10107fc0:	d9002017 	ldw	r4,128(sp)
10107fc4:	d9801a04 	addi	r6,sp,104
10107fc8:	010716c0 	call	1010716c <__sprint_r.part.0>
10107fcc:	103e3c26 	beq	r2,zero,101078c0 <__alt_data_end+0xfffe78c0>
10107fd0:	dd002117 	ldw	r20,132(sp)
10107fd4:	a080030b 	ldhu	r2,12(r20)
10107fd8:	1080100c 	andi	r2,r2,64
10107fdc:	1001231e 	bne	r2,zero,1010846c <___vfiprintf_internal_r+0x11ec>
10107fe0:	d8802317 	ldw	r2,140(sp)
10107fe4:	003d7b06 	br	101075d4 <__alt_data_end+0xfffe75d4>
10107fe8:	1000991e 	bne	r2,zero,10108250 <___vfiprintf_internal_r+0xfd0>
10107fec:	00c00044 	movi	r3,1
10107ff0:	9805883a 	mov	r2,r19
10107ff4:	dd400015 	stw	r21,0(sp)
10107ff8:	dcc00115 	stw	r19,4(sp)
10107ffc:	dcc01c15 	stw	r19,112(sp)
10108000:	d8c01b15 	stw	r3,108(sp)
10108004:	d811883a 	mov	r8,sp
10108008:	42000204 	addi	r8,r8,8
1010800c:	a2c0010c 	andi	r11,r20,4
10108010:	583fe426 	beq	r11,zero,10107fa4 <__alt_data_end+0xfffe7fa4>
10108014:	8ca7c83a 	sub	r19,r17,r18
10108018:	04ffe20e 	bge	zero,r19,10107fa4 <__alt_data_end+0xfffe7fa4>
1010801c:	01c00404 	movi	r7,16
10108020:	3cffcc0e 	bge	r7,r19,10107f54 <__alt_data_end+0xfffe7f54>
10108024:	02840474 	movhi	r10,4113
10108028:	52be2e04 	addi	r10,r10,-1864
1010802c:	d9001b17 	ldw	r4,108(sp)
10108030:	da802415 	stw	r10,144(sp)
10108034:	382b883a 	mov	r21,r7
10108038:	050001c4 	movi	r20,7
1010803c:	df002017 	ldw	fp,128(sp)
10108040:	00000506 	br	10108058 <___vfiprintf_internal_r+0xdd8>
10108044:	21400084 	addi	r5,r4,2
10108048:	42000204 	addi	r8,r8,8
1010804c:	1809883a 	mov	r4,r3
10108050:	9cfffc04 	addi	r19,r19,-16
10108054:	acffc40e 	bge	r21,r19,10107f68 <__alt_data_end+0xfffe7f68>
10108058:	10800404 	addi	r2,r2,16
1010805c:	20c00044 	addi	r3,r4,1
10108060:	45800015 	stw	r22,0(r8)
10108064:	45400115 	stw	r21,4(r8)
10108068:	d8801c15 	stw	r2,112(sp)
1010806c:	d8c01b15 	stw	r3,108(sp)
10108070:	a0fff40e 	bge	r20,r3,10108044 <__alt_data_end+0xfffe8044>
10108074:	1000041e 	bne	r2,zero,10108088 <___vfiprintf_internal_r+0xe08>
10108078:	01400044 	movi	r5,1
1010807c:	0009883a 	mov	r4,zero
10108080:	d811883a 	mov	r8,sp
10108084:	003ff206 	br	10108050 <__alt_data_end+0xfffe8050>
10108088:	d9402117 	ldw	r5,132(sp)
1010808c:	d9801a04 	addi	r6,sp,104
10108090:	e009883a 	mov	r4,fp
10108094:	010716c0 	call	1010716c <__sprint_r.part.0>
10108098:	103fcd1e 	bne	r2,zero,10107fd0 <__alt_data_end+0xfffe7fd0>
1010809c:	d9001b17 	ldw	r4,108(sp)
101080a0:	d8801c17 	ldw	r2,112(sp)
101080a4:	d811883a 	mov	r8,sp
101080a8:	21400044 	addi	r5,r4,1
101080ac:	003fe806 	br	10108050 <__alt_data_end+0xfffe8050>
101080b0:	d9402117 	ldw	r5,132(sp)
101080b4:	d9002017 	ldw	r4,128(sp)
101080b8:	d9801a04 	addi	r6,sp,104
101080bc:	d9c02b15 	stw	r7,172(sp)
101080c0:	db402a15 	stw	r13,168(sp)
101080c4:	010716c0 	call	1010716c <__sprint_r.part.0>
101080c8:	d9c02b17 	ldw	r7,172(sp)
101080cc:	db402a17 	ldw	r13,168(sp)
101080d0:	103fbf1e 	bne	r2,zero,10107fd0 <__alt_data_end+0xfffe7fd0>
101080d4:	d9401b17 	ldw	r5,108(sp)
101080d8:	d8801c17 	ldw	r2,112(sp)
101080dc:	d811883a 	mov	r8,sp
101080e0:	29800044 	addi	r6,r5,1
101080e4:	003dc406 	br	101077f8 <__alt_data_end+0xfffe77f8>
101080e8:	1000d21e 	bne	r2,zero,10108434 <___vfiprintf_internal_r+0x11b4>
101080ec:	d8c01d87 	ldb	r3,118(sp)
101080f0:	18009526 	beq	r3,zero,10108348 <___vfiprintf_internal_r+0x10c8>
101080f4:	00800044 	movi	r2,1
101080f8:	d8c01d84 	addi	r3,sp,118
101080fc:	1009883a 	mov	r4,r2
10108100:	d8c00015 	stw	r3,0(sp)
10108104:	d8800115 	stw	r2,4(sp)
10108108:	d811883a 	mov	r8,sp
1010810c:	200b883a 	mov	r5,r4
10108110:	42000204 	addi	r8,r8,8
10108114:	21000044 	addi	r4,r4,1
10108118:	003d9706 	br	10107778 <__alt_data_end+0xfffe7778>
1010811c:	d9001d04 	addi	r4,sp,116
10108120:	00800084 	movi	r2,2
10108124:	d9000015 	stw	r4,0(sp)
10108128:	d8800115 	stw	r2,4(sp)
1010812c:	1809883a 	mov	r4,r3
10108130:	d811883a 	mov	r8,sp
10108134:	200b883a 	mov	r5,r4
10108138:	42000204 	addi	r8,r8,8
1010813c:	21000044 	addi	r4,r4,1
10108140:	003f4e06 	br	10107e7c <__alt_data_end+0xfffe7e7c>
10108144:	d8001d85 	stb	zero,118(sp)
10108148:	48005016 	blt	r9,zero,1010828c <___vfiprintf_internal_r+0x100c>
1010814c:	00ffdfc4 	movi	r3,-129
10108150:	94c4b03a 	or	r2,r18,r19
10108154:	a0e8703a 	and	r20,r20,r3
10108158:	103d4426 	beq	r2,zero,1010766c <__alt_data_end+0xfffe766c>
1010815c:	0039883a 	mov	fp,zero
10108160:	d9002617 	ldw	r4,152(sp)
10108164:	dd401a04 	addi	r21,sp,104
10108168:	908003cc 	andi	r2,r18,15
1010816c:	9806973a 	slli	r3,r19,28
10108170:	2085883a 	add	r2,r4,r2
10108174:	9024d13a 	srli	r18,r18,4
10108178:	10800003 	ldbu	r2,0(r2)
1010817c:	9826d13a 	srli	r19,r19,4
10108180:	ad7fffc4 	addi	r21,r21,-1
10108184:	1ca4b03a 	or	r18,r3,r18
10108188:	a8800005 	stb	r2,0(r21)
1010818c:	94c4b03a 	or	r2,r18,r19
10108190:	103ff51e 	bne	r2,zero,10108168 <__alt_data_end+0xfffe8168>
10108194:	003e5906 	br	10107afc <__alt_data_end+0xfffe7afc>
10108198:	d9402117 	ldw	r5,132(sp)
1010819c:	d9002017 	ldw	r4,128(sp)
101081a0:	d9801a04 	addi	r6,sp,104
101081a4:	010716c0 	call	1010716c <__sprint_r.part.0>
101081a8:	103f891e 	bne	r2,zero,10107fd0 <__alt_data_end+0xfffe7fd0>
101081ac:	d8801c17 	ldw	r2,112(sp)
101081b0:	d811883a 	mov	r8,sp
101081b4:	003f9506 	br	1010800c <__alt_data_end+0xfffe800c>
101081b8:	d9402117 	ldw	r5,132(sp)
101081bc:	d9002017 	ldw	r4,128(sp)
101081c0:	d9801a04 	addi	r6,sp,104
101081c4:	010716c0 	call	1010716c <__sprint_r.part.0>
101081c8:	103f811e 	bne	r2,zero,10107fd0 <__alt_data_end+0xfffe7fd0>
101081cc:	d811883a 	mov	r8,sp
101081d0:	003ced06 	br	10107588 <__alt_data_end+0xfffe7588>
101081d4:	d9402117 	ldw	r5,132(sp)
101081d8:	d9002017 	ldw	r4,128(sp)
101081dc:	d9801a04 	addi	r6,sp,104
101081e0:	da402c15 	stw	r9,176(sp)
101081e4:	db802a15 	stw	r14,168(sp)
101081e8:	010716c0 	call	1010716c <__sprint_r.part.0>
101081ec:	da402c17 	ldw	r9,176(sp)
101081f0:	db802a17 	ldw	r14,168(sp)
101081f4:	103f761e 	bne	r2,zero,10107fd0 <__alt_data_end+0xfffe7fd0>
101081f8:	d9401b17 	ldw	r5,108(sp)
101081fc:	d8801c17 	ldw	r2,112(sp)
10108200:	d811883a 	mov	r8,sp
10108204:	29000044 	addi	r4,r5,1
10108208:	003d5b06 	br	10107778 <__alt_data_end+0xfffe7778>
1010820c:	d9402117 	ldw	r5,132(sp)
10108210:	d9002017 	ldw	r4,128(sp)
10108214:	d9801a04 	addi	r6,sp,104
10108218:	da402c15 	stw	r9,176(sp)
1010821c:	010716c0 	call	1010716c <__sprint_r.part.0>
10108220:	da402c17 	ldw	r9,176(sp)
10108224:	103f6a1e 	bne	r2,zero,10107fd0 <__alt_data_end+0xfffe7fd0>
10108228:	d9401b17 	ldw	r5,108(sp)
1010822c:	d8801c17 	ldw	r2,112(sp)
10108230:	d811883a 	mov	r8,sp
10108234:	29000044 	addi	r4,r5,1
10108238:	003f1006 	br	10107e7c <__alt_data_end+0xfffe7e7c>
1010823c:	1000c31e 	bne	r2,zero,1010854c <___vfiprintf_internal_r+0x12cc>
10108240:	01000044 	movi	r4,1
10108244:	000b883a 	mov	r5,zero
10108248:	d811883a 	mov	r8,sp
1010824c:	003f0d06 	br	10107e84 <__alt_data_end+0xfffe7e84>
10108250:	d9402117 	ldw	r5,132(sp)
10108254:	d9002017 	ldw	r4,128(sp)
10108258:	d9801a04 	addi	r6,sp,104
1010825c:	010716c0 	call	1010716c <__sprint_r.part.0>
10108260:	103f5b1e 	bne	r2,zero,10107fd0 <__alt_data_end+0xfffe7fd0>
10108264:	d9001b17 	ldw	r4,108(sp)
10108268:	d8801c17 	ldw	r2,112(sp)
1010826c:	d811883a 	mov	r8,sp
10108270:	21000044 	addi	r4,r4,1
10108274:	003d8006 	br	10107878 <__alt_data_end+0xfffe7878>
10108278:	01040474 	movhi	r4,4113
1010827c:	213dc904 	addi	r4,r4,-2268
10108280:	d9002615 	stw	r4,152(sp)
10108284:	d8c02215 	stw	r3,136(sp)
10108288:	1029883a 	mov	r20,r2
1010828c:	94c4b03a 	or	r2,r18,r19
10108290:	103fb21e 	bne	r2,zero,1010815c <__alt_data_end+0xfffe815c>
10108294:	0039883a 	mov	fp,zero
10108298:	00800084 	movi	r2,2
1010829c:	003e6b06 	br	10107c4c <__alt_data_end+0xfffe7c4c>
101082a0:	da802217 	ldw	r10,136(sp)
101082a4:	d8001d85 	stb	zero,118(sp)
101082a8:	0027883a 	mov	r19,zero
101082ac:	50800104 	addi	r2,r10,4
101082b0:	54800017 	ldw	r18,0(r10)
101082b4:	483e6016 	blt	r9,zero,10107c38 <__alt_data_end+0xfffe7c38>
101082b8:	00ffdfc4 	movi	r3,-129
101082bc:	d8802215 	stw	r2,136(sp)
101082c0:	a0e8703a 	and	r20,r20,r3
101082c4:	0039883a 	mov	fp,zero
101082c8:	903ebb26 	beq	r18,zero,10107db8 <__alt_data_end+0xfffe7db8>
101082cc:	00800244 	movi	r2,9
101082d0:	14bdee36 	bltu	r2,r18,10107a8c <__alt_data_end+0xfffe7a8c>
101082d4:	003eba06 	br	10107dc0 <__alt_data_end+0xfffe7dc0>
101082d8:	00800c04 	movi	r2,48
101082dc:	d8c01d45 	stb	r3,117(sp)
101082e0:	d8801d05 	stb	r2,116(sp)
101082e4:	d8001d85 	stb	zero,118(sp)
101082e8:	a0c00094 	ori	r3,r20,2
101082ec:	4800a916 	blt	r9,zero,10108594 <___vfiprintf_internal_r+0x1314>
101082f0:	00bfdfc4 	movi	r2,-129
101082f4:	a096703a 	and	r11,r20,r2
101082f8:	5d000094 	ori	r20,r11,2
101082fc:	0039883a 	mov	fp,zero
10108300:	003f9706 	br	10108160 <__alt_data_end+0xfffe8160>
10108304:	8025883a 	mov	r18,r16
10108308:	003c2e06 	br	101073c4 <__alt_data_end+0xfffe73c4>
1010830c:	00840474 	movhi	r2,4113
10108310:	10bdc904 	addi	r2,r2,-2268
10108314:	0039883a 	mov	fp,zero
10108318:	d8802615 	stw	r2,152(sp)
1010831c:	003f9006 	br	10108160 <__alt_data_end+0xfffe8160>
10108320:	04a5c83a 	sub	r18,zero,r18
10108324:	07000b44 	movi	fp,45
10108328:	9004c03a 	cmpne	r2,r18,zero
1010832c:	04e7c83a 	sub	r19,zero,r19
10108330:	df001d85 	stb	fp,118(sp)
10108334:	98a7c83a 	sub	r19,r19,r2
10108338:	48009f16 	blt	r9,zero,101085b8 <___vfiprintf_internal_r+0x1338>
1010833c:	00bfdfc4 	movi	r2,-129
10108340:	a0a8703a 	and	r20,r20,r2
10108344:	003dd006 	br	10107a88 <__alt_data_end+0xfffe7a88>
10108348:	70004c26 	beq	r14,zero,1010847c <___vfiprintf_internal_r+0x11fc>
1010834c:	00800084 	movi	r2,2
10108350:	d8c01d04 	addi	r3,sp,116
10108354:	d8c00015 	stw	r3,0(sp)
10108358:	d8800115 	stw	r2,4(sp)
1010835c:	01000044 	movi	r4,1
10108360:	d811883a 	mov	r8,sp
10108364:	003f7306 	br	10108134 <__alt_data_end+0xfffe8134>
10108368:	a080100c 	andi	r2,r20,64
1010836c:	da802217 	ldw	r10,136(sp)
10108370:	103e0626 	beq	r2,zero,10107b8c <__alt_data_end+0xfffe7b8c>
10108374:	5480000f 	ldh	r18,0(r10)
10108378:	52800104 	addi	r10,r10,4
1010837c:	da802215 	stw	r10,136(sp)
10108380:	9027d7fa 	srai	r19,r18,31
10108384:	9805883a 	mov	r2,r19
10108388:	003db806 	br	10107a6c <__alt_data_end+0xfffe7a6c>
1010838c:	a080040c 	andi	r2,r20,16
10108390:	1000091e 	bne	r2,zero,101083b8 <___vfiprintf_internal_r+0x1138>
10108394:	a2c0100c 	andi	r11,r20,64
10108398:	58000726 	beq	r11,zero,101083b8 <___vfiprintf_internal_r+0x1138>
1010839c:	da802217 	ldw	r10,136(sp)
101083a0:	50800017 	ldw	r2,0(r10)
101083a4:	52800104 	addi	r10,r10,4
101083a8:	da802215 	stw	r10,136(sp)
101083ac:	da802317 	ldw	r10,140(sp)
101083b0:	1280000d 	sth	r10,0(r2)
101083b4:	003be706 	br	10107354 <__alt_data_end+0xfffe7354>
101083b8:	da802217 	ldw	r10,136(sp)
101083bc:	50800017 	ldw	r2,0(r10)
101083c0:	52800104 	addi	r10,r10,4
101083c4:	da802215 	stw	r10,136(sp)
101083c8:	da802317 	ldw	r10,140(sp)
101083cc:	12800015 	stw	r10,0(r2)
101083d0:	003be006 	br	10107354 <__alt_data_end+0xfffe7354>
101083d4:	a080100c 	andi	r2,r20,64
101083d8:	da802217 	ldw	r10,136(sp)
101083dc:	10003026 	beq	r2,zero,101084a0 <___vfiprintf_internal_r+0x1220>
101083e0:	5480000b 	ldhu	r18,0(r10)
101083e4:	52800104 	addi	r10,r10,4
101083e8:	0027883a 	mov	r19,zero
101083ec:	da802215 	stw	r10,136(sp)
101083f0:	003d8006 	br	101079f4 <__alt_data_end+0xfffe79f4>
101083f4:	80c00007 	ldb	r3,0(r16)
101083f8:	003c0006 	br	101073fc <__alt_data_end+0xfffe73fc>
101083fc:	a080100c 	andi	r2,r20,64
10108400:	d8001d85 	stb	zero,118(sp)
10108404:	da802217 	ldw	r10,136(sp)
10108408:	1000201e 	bne	r2,zero,1010848c <___vfiprintf_internal_r+0x120c>
1010840c:	50800104 	addi	r2,r10,4
10108410:	54800017 	ldw	r18,0(r10)
10108414:	0027883a 	mov	r19,zero
10108418:	483def0e 	bge	r9,zero,10107bd8 <__alt_data_end+0xfffe7bd8>
1010841c:	94c6b03a 	or	r3,r18,r19
10108420:	d8802215 	stw	r2,136(sp)
10108424:	183d4e1e 	bne	r3,zero,10107960 <__alt_data_end+0xfffe7960>
10108428:	0039883a 	mov	fp,zero
1010842c:	0005883a 	mov	r2,zero
10108430:	003e0606 	br	10107c4c <__alt_data_end+0xfffe7c4c>
10108434:	d9402117 	ldw	r5,132(sp)
10108438:	d9002017 	ldw	r4,128(sp)
1010843c:	d9801a04 	addi	r6,sp,104
10108440:	da402c15 	stw	r9,176(sp)
10108444:	db802a15 	stw	r14,168(sp)
10108448:	010716c0 	call	1010716c <__sprint_r.part.0>
1010844c:	da402c17 	ldw	r9,176(sp)
10108450:	db802a17 	ldw	r14,168(sp)
10108454:	103ede1e 	bne	r2,zero,10107fd0 <__alt_data_end+0xfffe7fd0>
10108458:	d9401b17 	ldw	r5,108(sp)
1010845c:	d8801c17 	ldw	r2,112(sp)
10108460:	d811883a 	mov	r8,sp
10108464:	29000044 	addi	r4,r5,1
10108468:	003e7406 	br	10107e3c <__alt_data_end+0xfffe7e3c>
1010846c:	00bfffc4 	movi	r2,-1
10108470:	003c5806 	br	101075d4 <__alt_data_end+0xfffe75d4>
10108474:	d811883a 	mov	r8,sp
10108478:	003ee806 	br	1010801c <__alt_data_end+0xfffe801c>
1010847c:	000b883a 	mov	r5,zero
10108480:	01000044 	movi	r4,1
10108484:	d811883a 	mov	r8,sp
10108488:	003e7c06 	br	10107e7c <__alt_data_end+0xfffe7e7c>
1010848c:	50800104 	addi	r2,r10,4
10108490:	5480000b 	ldhu	r18,0(r10)
10108494:	0027883a 	mov	r19,zero
10108498:	483dcf0e 	bge	r9,zero,10107bd8 <__alt_data_end+0xfffe7bd8>
1010849c:	003fdf06 	br	1010841c <__alt_data_end+0xfffe841c>
101084a0:	54800017 	ldw	r18,0(r10)
101084a4:	52800104 	addi	r10,r10,4
101084a8:	0027883a 	mov	r19,zero
101084ac:	da802215 	stw	r10,136(sp)
101084b0:	003d5006 	br	101079f4 <__alt_data_end+0xfffe79f4>
101084b4:	50800104 	addi	r2,r10,4
101084b8:	5480000b 	ldhu	r18,0(r10)
101084bc:	0027883a 	mov	r19,zero
101084c0:	483f7d0e 	bge	r9,zero,101082b8 <__alt_data_end+0xfffe82b8>
101084c4:	003ddc06 	br	10107c38 <__alt_data_end+0xfffe7c38>
101084c8:	d8c02215 	stw	r3,136(sp)
101084cc:	0039883a 	mov	fp,zero
101084d0:	003ddb06 	br	10107c40 <__alt_data_end+0xfffe7c40>
101084d4:	02840474 	movhi	r10,4113
101084d8:	52be2a04 	addi	r10,r10,-1880
101084dc:	da802415 	stw	r10,144(sp)
101084e0:	003e8306 	br	10107ef0 <__alt_data_end+0xfffe7ef0>
101084e4:	d8801c17 	ldw	r2,112(sp)
101084e8:	dd002117 	ldw	r20,132(sp)
101084ec:	103eb926 	beq	r2,zero,10107fd4 <__alt_data_end+0xfffe7fd4>
101084f0:	d9002017 	ldw	r4,128(sp)
101084f4:	d9801a04 	addi	r6,sp,104
101084f8:	a00b883a 	mov	r5,r20
101084fc:	010716c0 	call	1010716c <__sprint_r.part.0>
10108500:	003eb406 	br	10107fd4 <__alt_data_end+0xfffe7fd4>
10108504:	80c00043 	ldbu	r3,1(r16)
10108508:	a5000814 	ori	r20,r20,32
1010850c:	84000044 	addi	r16,r16,1
10108510:	18c03fcc 	andi	r3,r3,255
10108514:	18c0201c 	xori	r3,r3,128
10108518:	18ffe004 	addi	r3,r3,-128
1010851c:	003bb706 	br	101073fc <__alt_data_end+0xfffe73fc>
10108520:	a809883a 	mov	r4,r21
10108524:	d8c02a15 	stw	r3,168(sp)
10108528:	da002b15 	stw	r8,172(sp)
1010852c:	01070d40 	call	101070d4 <strlen>
10108530:	d8c02a17 	ldw	r3,168(sp)
10108534:	1027883a 	mov	r19,r2
10108538:	df001d83 	ldbu	fp,118(sp)
1010853c:	d8c02215 	stw	r3,136(sp)
10108540:	0013883a 	mov	r9,zero
10108544:	da002b17 	ldw	r8,172(sp)
10108548:	003c4d06 	br	10107680 <__alt_data_end+0xfffe7680>
1010854c:	d9402117 	ldw	r5,132(sp)
10108550:	d9002017 	ldw	r4,128(sp)
10108554:	d9801a04 	addi	r6,sp,104
10108558:	da402c15 	stw	r9,176(sp)
1010855c:	010716c0 	call	1010716c <__sprint_r.part.0>
10108560:	da402c17 	ldw	r9,176(sp)
10108564:	103e9a1e 	bne	r2,zero,10107fd0 <__alt_data_end+0xfffe7fd0>
10108568:	d9401b17 	ldw	r5,108(sp)
1010856c:	d8801c17 	ldw	r2,112(sp)
10108570:	d811883a 	mov	r8,sp
10108574:	29000044 	addi	r4,r5,1
10108578:	003e4206 	br	10107e84 <__alt_data_end+0xfffe7e84>
1010857c:	d9401b17 	ldw	r5,108(sp)
10108580:	01040474 	movhi	r4,4113
10108584:	213e2e04 	addi	r4,r4,-1864
10108588:	d9002415 	stw	r4,144(sp)
1010858c:	29400044 	addi	r5,r5,1
10108590:	003c6d06 	br	10107748 <__alt_data_end+0xfffe7748>
10108594:	0039883a 	mov	fp,zero
10108598:	00800084 	movi	r2,2
1010859c:	10803fcc 	andi	r2,r2,255
101085a0:	01000044 	movi	r4,1
101085a4:	11001e26 	beq	r2,r4,10108620 <___vfiprintf_internal_r+0x13a0>
101085a8:	01000084 	movi	r4,2
101085ac:	11001e1e 	bne	r2,r4,10108628 <___vfiprintf_internal_r+0x13a8>
101085b0:	1829883a 	mov	r20,r3
101085b4:	003eea06 	br	10108160 <__alt_data_end+0xfffe8160>
101085b8:	a007883a 	mov	r3,r20
101085bc:	00800044 	movi	r2,1
101085c0:	003ff606 	br	1010859c <__alt_data_end+0xfffe859c>
101085c4:	00800184 	movi	r2,6
101085c8:	1240012e 	bgeu	r2,r9,101085d0 <___vfiprintf_internal_r+0x1350>
101085cc:	1013883a 	mov	r9,r2
101085d0:	4827883a 	mov	r19,r9
101085d4:	4825883a 	mov	r18,r9
101085d8:	48001516 	blt	r9,zero,10108630 <___vfiprintf_internal_r+0x13b0>
101085dc:	05440474 	movhi	r21,4113
101085e0:	d8c02215 	stw	r3,136(sp)
101085e4:	ad7dce04 	addi	r21,r21,-2248
101085e8:	003d1406 	br	10107a3c <__alt_data_end+0xfffe7a3c>
101085ec:	02840474 	movhi	r10,4113
101085f0:	52be2a04 	addi	r10,r10,-1880
101085f4:	da802415 	stw	r10,144(sp)
101085f8:	200d883a 	mov	r6,r4
101085fc:	003c9106 	br	10107844 <__alt_data_end+0xfffe7844>
10108600:	5021883a 	mov	r16,r10
10108604:	0013883a 	mov	r9,zero
10108608:	003b7d06 	br	10107400 <__alt_data_end+0xfffe7400>
1010860c:	4827883a 	mov	r19,r9
10108610:	df001d83 	ldbu	fp,118(sp)
10108614:	d8c02215 	stw	r3,136(sp)
10108618:	0013883a 	mov	r9,zero
1010861c:	003c1806 	br	10107680 <__alt_data_end+0xfffe7680>
10108620:	1829883a 	mov	r20,r3
10108624:	003d1806 	br	10107a88 <__alt_data_end+0xfffe7a88>
10108628:	1829883a 	mov	r20,r3
1010862c:	003ccd06 	br	10107964 <__alt_data_end+0xfffe7964>
10108630:	0025883a 	mov	r18,zero
10108634:	003fe906 	br	101085dc <__alt_data_end+0xfffe85dc>
10108638:	d8802217 	ldw	r2,136(sp)
1010863c:	80c00043 	ldbu	r3,1(r16)
10108640:	5021883a 	mov	r16,r10
10108644:	12400017 	ldw	r9,0(r2)
10108648:	10800104 	addi	r2,r2,4
1010864c:	d8802215 	stw	r2,136(sp)
10108650:	483faf0e 	bge	r9,zero,10108510 <__alt_data_end+0xfffe8510>
10108654:	18c03fcc 	andi	r3,r3,255
10108658:	18c0201c 	xori	r3,r3,128
1010865c:	027fffc4 	movi	r9,-1
10108660:	18ffe004 	addi	r3,r3,-128
10108664:	003b6506 	br	101073fc <__alt_data_end+0xfffe73fc>
10108668:	d9c01d85 	stb	r7,118(sp)
1010866c:	003ca006 	br	101078f0 <__alt_data_end+0xfffe78f0>
10108670:	d9c01d85 	stb	r7,118(sp)
10108674:	003cad06 	br	1010792c <__alt_data_end+0xfffe792c>
10108678:	d9c01d85 	stb	r7,118(sp)
1010867c:	003d7d06 	br	10107c74 <__alt_data_end+0xfffe7c74>
10108680:	d9c01d85 	stb	r7,118(sp)
10108684:	003d5f06 	br	10107c04 <__alt_data_end+0xfffe7c04>
10108688:	a080004c 	andi	r2,r20,1
1010868c:	0039883a 	mov	fp,zero
10108690:	10000526 	beq	r2,zero,101086a8 <___vfiprintf_internal_r+0x1428>
10108694:	00800c04 	movi	r2,48
10108698:	d88019c5 	stb	r2,103(sp)
1010869c:	dcc02717 	ldw	r19,156(sp)
101086a0:	dd4019c4 	addi	r21,sp,103
101086a4:	003bf606 	br	10107680 <__alt_data_end+0xfffe7680>
101086a8:	0027883a 	mov	r19,zero
101086ac:	dd401a04 	addi	r21,sp,104
101086b0:	003bf306 	br	10107680 <__alt_data_end+0xfffe7680>
101086b4:	d9c01d85 	stb	r7,118(sp)
101086b8:	003dc806 	br	10107ddc <__alt_data_end+0xfffe7ddc>
101086bc:	d9c01d85 	stb	r7,118(sp)
101086c0:	003d3a06 	br	10107bac <__alt_data_end+0xfffe7bac>
101086c4:	d9c01d85 	stb	r7,118(sp)
101086c8:	003d2a06 	br	10107b74 <__alt_data_end+0xfffe7b74>
101086cc:	d9c01d85 	stb	r7,118(sp)
101086d0:	003cde06 	br	10107a4c <__alt_data_end+0xfffe7a4c>
101086d4:	d9c01d85 	stb	r7,118(sp)
101086d8:	003cbc06 	br	101079cc <__alt_data_end+0xfffe79cc>

101086dc <__vfiprintf_internal>:
101086dc:	00840474 	movhi	r2,4113
101086e0:	10852b04 	addi	r2,r2,5292
101086e4:	300f883a 	mov	r7,r6
101086e8:	280d883a 	mov	r6,r5
101086ec:	200b883a 	mov	r5,r4
101086f0:	11000017 	ldw	r4,0(r2)
101086f4:	01072801 	jmpi	10107280 <___vfiprintf_internal_r>

101086f8 <__sbprintf>:
101086f8:	2880030b 	ldhu	r2,12(r5)
101086fc:	2ac01917 	ldw	r11,100(r5)
10108700:	2a80038b 	ldhu	r10,14(r5)
10108704:	2a400717 	ldw	r9,28(r5)
10108708:	2a000917 	ldw	r8,36(r5)
1010870c:	defee204 	addi	sp,sp,-1144
10108710:	00c10004 	movi	r3,1024
10108714:	dc011a15 	stw	r16,1128(sp)
10108718:	10bfff4c 	andi	r2,r2,65533
1010871c:	2821883a 	mov	r16,r5
10108720:	d8cb883a 	add	r5,sp,r3
10108724:	dc811c15 	stw	r18,1136(sp)
10108728:	dc411b15 	stw	r17,1132(sp)
1010872c:	dfc11d15 	stw	ra,1140(sp)
10108730:	2025883a 	mov	r18,r4
10108734:	d881030d 	sth	r2,1036(sp)
10108738:	dac11915 	stw	r11,1124(sp)
1010873c:	da81038d 	sth	r10,1038(sp)
10108740:	da410715 	stw	r9,1052(sp)
10108744:	da010915 	stw	r8,1060(sp)
10108748:	dec10015 	stw	sp,1024(sp)
1010874c:	dec10415 	stw	sp,1040(sp)
10108750:	d8c10215 	stw	r3,1032(sp)
10108754:	d8c10515 	stw	r3,1044(sp)
10108758:	d8010615 	stw	zero,1048(sp)
1010875c:	01072800 	call	10107280 <___vfiprintf_internal_r>
10108760:	1023883a 	mov	r17,r2
10108764:	10000416 	blt	r2,zero,10108778 <__sbprintf+0x80>
10108768:	d9410004 	addi	r5,sp,1024
1010876c:	9009883a 	mov	r4,r18
10108770:	01046180 	call	10104618 <_fflush_r>
10108774:	10000d1e 	bne	r2,zero,101087ac <__sbprintf+0xb4>
10108778:	d881030b 	ldhu	r2,1036(sp)
1010877c:	1080100c 	andi	r2,r2,64
10108780:	10000326 	beq	r2,zero,10108790 <__sbprintf+0x98>
10108784:	8080030b 	ldhu	r2,12(r16)
10108788:	10801014 	ori	r2,r2,64
1010878c:	8080030d 	sth	r2,12(r16)
10108790:	8805883a 	mov	r2,r17
10108794:	dfc11d17 	ldw	ra,1140(sp)
10108798:	dc811c17 	ldw	r18,1136(sp)
1010879c:	dc411b17 	ldw	r17,1132(sp)
101087a0:	dc011a17 	ldw	r16,1128(sp)
101087a4:	dec11e04 	addi	sp,sp,1144
101087a8:	f800283a 	ret
101087ac:	047fffc4 	movi	r17,-1
101087b0:	003ff106 	br	10108778 <__alt_data_end+0xfffe8778>

101087b4 <_write_r>:
101087b4:	defffd04 	addi	sp,sp,-12
101087b8:	2805883a 	mov	r2,r5
101087bc:	dc000015 	stw	r16,0(sp)
101087c0:	04040474 	movhi	r16,4113
101087c4:	dc400115 	stw	r17,4(sp)
101087c8:	300b883a 	mov	r5,r6
101087cc:	840bfb04 	addi	r16,r16,12268
101087d0:	2023883a 	mov	r17,r4
101087d4:	380d883a 	mov	r6,r7
101087d8:	1009883a 	mov	r4,r2
101087dc:	dfc00215 	stw	ra,8(sp)
101087e0:	80000015 	stw	zero,0(r16)
101087e4:	010d7f40 	call	1010d7f4 <write>
101087e8:	00ffffc4 	movi	r3,-1
101087ec:	10c00526 	beq	r2,r3,10108804 <_write_r+0x50>
101087f0:	dfc00217 	ldw	ra,8(sp)
101087f4:	dc400117 	ldw	r17,4(sp)
101087f8:	dc000017 	ldw	r16,0(sp)
101087fc:	dec00304 	addi	sp,sp,12
10108800:	f800283a 	ret
10108804:	80c00017 	ldw	r3,0(r16)
10108808:	183ff926 	beq	r3,zero,101087f0 <__alt_data_end+0xfffe87f0>
1010880c:	88c00015 	stw	r3,0(r17)
10108810:	003ff706 	br	101087f0 <__alt_data_end+0xfffe87f0>

10108814 <_close_r>:
10108814:	defffd04 	addi	sp,sp,-12
10108818:	dc000015 	stw	r16,0(sp)
1010881c:	04040474 	movhi	r16,4113
10108820:	dc400115 	stw	r17,4(sp)
10108824:	840bfb04 	addi	r16,r16,12268
10108828:	2023883a 	mov	r17,r4
1010882c:	2809883a 	mov	r4,r5
10108830:	dfc00215 	stw	ra,8(sp)
10108834:	80000015 	stw	zero,0(r16)
10108838:	010cf800 	call	1010cf80 <close>
1010883c:	00ffffc4 	movi	r3,-1
10108840:	10c00526 	beq	r2,r3,10108858 <_close_r+0x44>
10108844:	dfc00217 	ldw	ra,8(sp)
10108848:	dc400117 	ldw	r17,4(sp)
1010884c:	dc000017 	ldw	r16,0(sp)
10108850:	dec00304 	addi	sp,sp,12
10108854:	f800283a 	ret
10108858:	80c00017 	ldw	r3,0(r16)
1010885c:	183ff926 	beq	r3,zero,10108844 <__alt_data_end+0xfffe8844>
10108860:	88c00015 	stw	r3,0(r17)
10108864:	003ff706 	br	10108844 <__alt_data_end+0xfffe8844>

10108868 <_calloc_r>:
10108868:	298b383a 	mul	r5,r5,r6
1010886c:	defffe04 	addi	sp,sp,-8
10108870:	dfc00115 	stw	ra,4(sp)
10108874:	dc000015 	stw	r16,0(sp)
10108878:	01052980 	call	10105298 <_malloc_r>
1010887c:	10002926 	beq	r2,zero,10108924 <_calloc_r+0xbc>
10108880:	11bfff17 	ldw	r6,-4(r2)
10108884:	1021883a 	mov	r16,r2
10108888:	00bfff04 	movi	r2,-4
1010888c:	308c703a 	and	r6,r6,r2
10108890:	00c00904 	movi	r3,36
10108894:	308d883a 	add	r6,r6,r2
10108898:	19801636 	bltu	r3,r6,101088f4 <_calloc_r+0x8c>
1010889c:	008004c4 	movi	r2,19
101088a0:	11800b2e 	bgeu	r2,r6,101088d0 <_calloc_r+0x68>
101088a4:	80000015 	stw	zero,0(r16)
101088a8:	80000115 	stw	zero,4(r16)
101088ac:	008006c4 	movi	r2,27
101088b0:	11801a2e 	bgeu	r2,r6,1010891c <_calloc_r+0xb4>
101088b4:	80000215 	stw	zero,8(r16)
101088b8:	80000315 	stw	zero,12(r16)
101088bc:	30c0151e 	bne	r6,r3,10108914 <_calloc_r+0xac>
101088c0:	80000415 	stw	zero,16(r16)
101088c4:	80800604 	addi	r2,r16,24
101088c8:	80000515 	stw	zero,20(r16)
101088cc:	00000106 	br	101088d4 <_calloc_r+0x6c>
101088d0:	8005883a 	mov	r2,r16
101088d4:	10000015 	stw	zero,0(r2)
101088d8:	10000115 	stw	zero,4(r2)
101088dc:	10000215 	stw	zero,8(r2)
101088e0:	8005883a 	mov	r2,r16
101088e4:	dfc00117 	ldw	ra,4(sp)
101088e8:	dc000017 	ldw	r16,0(sp)
101088ec:	dec00204 	addi	sp,sp,8
101088f0:	f800283a 	ret
101088f4:	000b883a 	mov	r5,zero
101088f8:	8009883a 	mov	r4,r16
101088fc:	0105cd00 	call	10105cd0 <memset>
10108900:	8005883a 	mov	r2,r16
10108904:	dfc00117 	ldw	ra,4(sp)
10108908:	dc000017 	ldw	r16,0(sp)
1010890c:	dec00204 	addi	sp,sp,8
10108910:	f800283a 	ret
10108914:	80800404 	addi	r2,r16,16
10108918:	003fee06 	br	101088d4 <__alt_data_end+0xfffe88d4>
1010891c:	80800204 	addi	r2,r16,8
10108920:	003fec06 	br	101088d4 <__alt_data_end+0xfffe88d4>
10108924:	0005883a 	mov	r2,zero
10108928:	003fee06 	br	101088e4 <__alt_data_end+0xfffe88e4>

1010892c <_fclose_r>:
1010892c:	28003926 	beq	r5,zero,10108a14 <_fclose_r+0xe8>
10108930:	defffc04 	addi	sp,sp,-16
10108934:	dc400115 	stw	r17,4(sp)
10108938:	dc000015 	stw	r16,0(sp)
1010893c:	dfc00315 	stw	ra,12(sp)
10108940:	dc800215 	stw	r18,8(sp)
10108944:	2023883a 	mov	r17,r4
10108948:	2821883a 	mov	r16,r5
1010894c:	20000226 	beq	r4,zero,10108958 <_fclose_r+0x2c>
10108950:	20800e17 	ldw	r2,56(r4)
10108954:	10002726 	beq	r2,zero,101089f4 <_fclose_r+0xc8>
10108958:	8080030f 	ldh	r2,12(r16)
1010895c:	1000071e 	bne	r2,zero,1010897c <_fclose_r+0x50>
10108960:	0005883a 	mov	r2,zero
10108964:	dfc00317 	ldw	ra,12(sp)
10108968:	dc800217 	ldw	r18,8(sp)
1010896c:	dc400117 	ldw	r17,4(sp)
10108970:	dc000017 	ldw	r16,0(sp)
10108974:	dec00404 	addi	sp,sp,16
10108978:	f800283a 	ret
1010897c:	800b883a 	mov	r5,r16
10108980:	8809883a 	mov	r4,r17
10108984:	01043fc0 	call	101043fc <__sflush_r>
10108988:	1025883a 	mov	r18,r2
1010898c:	80800b17 	ldw	r2,44(r16)
10108990:	10000426 	beq	r2,zero,101089a4 <_fclose_r+0x78>
10108994:	81400717 	ldw	r5,28(r16)
10108998:	8809883a 	mov	r4,r17
1010899c:	103ee83a 	callr	r2
101089a0:	10001616 	blt	r2,zero,101089fc <_fclose_r+0xd0>
101089a4:	8080030b 	ldhu	r2,12(r16)
101089a8:	1080200c 	andi	r2,r2,128
101089ac:	1000151e 	bne	r2,zero,10108a04 <_fclose_r+0xd8>
101089b0:	81400c17 	ldw	r5,48(r16)
101089b4:	28000526 	beq	r5,zero,101089cc <_fclose_r+0xa0>
101089b8:	80801004 	addi	r2,r16,64
101089bc:	28800226 	beq	r5,r2,101089c8 <_fclose_r+0x9c>
101089c0:	8809883a 	mov	r4,r17
101089c4:	0104b680 	call	10104b68 <_free_r>
101089c8:	80000c15 	stw	zero,48(r16)
101089cc:	81401117 	ldw	r5,68(r16)
101089d0:	28000326 	beq	r5,zero,101089e0 <_fclose_r+0xb4>
101089d4:	8809883a 	mov	r4,r17
101089d8:	0104b680 	call	10104b68 <_free_r>
101089dc:	80001115 	stw	zero,68(r16)
101089e0:	0104a040 	call	10104a04 <__sfp_lock_acquire>
101089e4:	8000030d 	sth	zero,12(r16)
101089e8:	0104a080 	call	10104a08 <__sfp_lock_release>
101089ec:	9005883a 	mov	r2,r18
101089f0:	003fdc06 	br	10108964 <__alt_data_end+0xfffe8964>
101089f4:	01049f40 	call	101049f4 <__sinit>
101089f8:	003fd706 	br	10108958 <__alt_data_end+0xfffe8958>
101089fc:	04bfffc4 	movi	r18,-1
10108a00:	003fe806 	br	101089a4 <__alt_data_end+0xfffe89a4>
10108a04:	81400417 	ldw	r5,16(r16)
10108a08:	8809883a 	mov	r4,r17
10108a0c:	0104b680 	call	10104b68 <_free_r>
10108a10:	003fe706 	br	101089b0 <__alt_data_end+0xfffe89b0>
10108a14:	0005883a 	mov	r2,zero
10108a18:	f800283a 	ret

10108a1c <fclose>:
10108a1c:	00840474 	movhi	r2,4113
10108a20:	10852b04 	addi	r2,r2,5292
10108a24:	200b883a 	mov	r5,r4
10108a28:	11000017 	ldw	r4,0(r2)
10108a2c:	010892c1 	jmpi	1010892c <_fclose_r>

10108a30 <__fputwc>:
10108a30:	defff804 	addi	sp,sp,-32
10108a34:	dcc00415 	stw	r19,16(sp)
10108a38:	dc800315 	stw	r18,12(sp)
10108a3c:	dc000115 	stw	r16,4(sp)
10108a40:	dfc00715 	stw	ra,28(sp)
10108a44:	dd400615 	stw	r21,24(sp)
10108a48:	dd000515 	stw	r20,20(sp)
10108a4c:	dc400215 	stw	r17,8(sp)
10108a50:	2027883a 	mov	r19,r4
10108a54:	2825883a 	mov	r18,r5
10108a58:	3021883a 	mov	r16,r6
10108a5c:	01050880 	call	10105088 <__locale_mb_cur_max>
10108a60:	00c00044 	movi	r3,1
10108a64:	10c03e26 	beq	r2,r3,10108b60 <__fputwc+0x130>
10108a68:	81c01704 	addi	r7,r16,92
10108a6c:	900d883a 	mov	r6,r18
10108a70:	d80b883a 	mov	r5,sp
10108a74:	9809883a 	mov	r4,r19
10108a78:	0109a7c0 	call	10109a7c <_wcrtomb_r>
10108a7c:	1029883a 	mov	r20,r2
10108a80:	00bfffc4 	movi	r2,-1
10108a84:	a0802026 	beq	r20,r2,10108b08 <__fputwc+0xd8>
10108a88:	d9400003 	ldbu	r5,0(sp)
10108a8c:	a0001c26 	beq	r20,zero,10108b00 <__fputwc+0xd0>
10108a90:	0023883a 	mov	r17,zero
10108a94:	05400284 	movi	r21,10
10108a98:	00000906 	br	10108ac0 <__fputwc+0x90>
10108a9c:	80800017 	ldw	r2,0(r16)
10108aa0:	11400005 	stb	r5,0(r2)
10108aa4:	80c00017 	ldw	r3,0(r16)
10108aa8:	18c00044 	addi	r3,r3,1
10108aac:	80c00015 	stw	r3,0(r16)
10108ab0:	8c400044 	addi	r17,r17,1
10108ab4:	dc45883a 	add	r2,sp,r17
10108ab8:	8d00112e 	bgeu	r17,r20,10108b00 <__fputwc+0xd0>
10108abc:	11400003 	ldbu	r5,0(r2)
10108ac0:	80c00217 	ldw	r3,8(r16)
10108ac4:	18ffffc4 	addi	r3,r3,-1
10108ac8:	80c00215 	stw	r3,8(r16)
10108acc:	183ff30e 	bge	r3,zero,10108a9c <__alt_data_end+0xfffe8a9c>
10108ad0:	80800617 	ldw	r2,24(r16)
10108ad4:	18801916 	blt	r3,r2,10108b3c <__fputwc+0x10c>
10108ad8:	80800017 	ldw	r2,0(r16)
10108adc:	11400005 	stb	r5,0(r2)
10108ae0:	80800017 	ldw	r2,0(r16)
10108ae4:	10c00003 	ldbu	r3,0(r2)
10108ae8:	10800044 	addi	r2,r2,1
10108aec:	1d402326 	beq	r3,r21,10108b7c <__fputwc+0x14c>
10108af0:	80800015 	stw	r2,0(r16)
10108af4:	8c400044 	addi	r17,r17,1
10108af8:	dc45883a 	add	r2,sp,r17
10108afc:	8d3fef36 	bltu	r17,r20,10108abc <__alt_data_end+0xfffe8abc>
10108b00:	9005883a 	mov	r2,r18
10108b04:	00000406 	br	10108b18 <__fputwc+0xe8>
10108b08:	80c0030b 	ldhu	r3,12(r16)
10108b0c:	a005883a 	mov	r2,r20
10108b10:	18c01014 	ori	r3,r3,64
10108b14:	80c0030d 	sth	r3,12(r16)
10108b18:	dfc00717 	ldw	ra,28(sp)
10108b1c:	dd400617 	ldw	r21,24(sp)
10108b20:	dd000517 	ldw	r20,20(sp)
10108b24:	dcc00417 	ldw	r19,16(sp)
10108b28:	dc800317 	ldw	r18,12(sp)
10108b2c:	dc400217 	ldw	r17,8(sp)
10108b30:	dc000117 	ldw	r16,4(sp)
10108b34:	dec00804 	addi	sp,sp,32
10108b38:	f800283a 	ret
10108b3c:	800d883a 	mov	r6,r16
10108b40:	29403fcc 	andi	r5,r5,255
10108b44:	9809883a 	mov	r4,r19
10108b48:	01099240 	call	10109924 <__swbuf_r>
10108b4c:	10bfffe0 	cmpeqi	r2,r2,-1
10108b50:	10803fcc 	andi	r2,r2,255
10108b54:	103fd626 	beq	r2,zero,10108ab0 <__alt_data_end+0xfffe8ab0>
10108b58:	00bfffc4 	movi	r2,-1
10108b5c:	003fee06 	br	10108b18 <__alt_data_end+0xfffe8b18>
10108b60:	90ffffc4 	addi	r3,r18,-1
10108b64:	01003f84 	movi	r4,254
10108b68:	20ffbf36 	bltu	r4,r3,10108a68 <__alt_data_end+0xfffe8a68>
10108b6c:	900b883a 	mov	r5,r18
10108b70:	dc800005 	stb	r18,0(sp)
10108b74:	1029883a 	mov	r20,r2
10108b78:	003fc506 	br	10108a90 <__alt_data_end+0xfffe8a90>
10108b7c:	800d883a 	mov	r6,r16
10108b80:	a80b883a 	mov	r5,r21
10108b84:	9809883a 	mov	r4,r19
10108b88:	01099240 	call	10109924 <__swbuf_r>
10108b8c:	10bfffe0 	cmpeqi	r2,r2,-1
10108b90:	003fef06 	br	10108b50 <__alt_data_end+0xfffe8b50>

10108b94 <_fputwc_r>:
10108b94:	3080030b 	ldhu	r2,12(r6)
10108b98:	10c8000c 	andi	r3,r2,8192
10108b9c:	1800051e 	bne	r3,zero,10108bb4 <_fputwc_r+0x20>
10108ba0:	30c01917 	ldw	r3,100(r6)
10108ba4:	10880014 	ori	r2,r2,8192
10108ba8:	3080030d 	sth	r2,12(r6)
10108bac:	18880014 	ori	r2,r3,8192
10108bb0:	30801915 	stw	r2,100(r6)
10108bb4:	0108a301 	jmpi	10108a30 <__fputwc>

10108bb8 <fputwc>:
10108bb8:	00840474 	movhi	r2,4113
10108bbc:	defffc04 	addi	sp,sp,-16
10108bc0:	10852b04 	addi	r2,r2,5292
10108bc4:	dc000115 	stw	r16,4(sp)
10108bc8:	14000017 	ldw	r16,0(r2)
10108bcc:	dc400215 	stw	r17,8(sp)
10108bd0:	dfc00315 	stw	ra,12(sp)
10108bd4:	2023883a 	mov	r17,r4
10108bd8:	80000226 	beq	r16,zero,10108be4 <fputwc+0x2c>
10108bdc:	80800e17 	ldw	r2,56(r16)
10108be0:	10001026 	beq	r2,zero,10108c24 <fputwc+0x6c>
10108be4:	2880030b 	ldhu	r2,12(r5)
10108be8:	10c8000c 	andi	r3,r2,8192
10108bec:	1800051e 	bne	r3,zero,10108c04 <fputwc+0x4c>
10108bf0:	28c01917 	ldw	r3,100(r5)
10108bf4:	10880014 	ori	r2,r2,8192
10108bf8:	2880030d 	sth	r2,12(r5)
10108bfc:	18880014 	ori	r2,r3,8192
10108c00:	28801915 	stw	r2,100(r5)
10108c04:	280d883a 	mov	r6,r5
10108c08:	8009883a 	mov	r4,r16
10108c0c:	880b883a 	mov	r5,r17
10108c10:	dfc00317 	ldw	ra,12(sp)
10108c14:	dc400217 	ldw	r17,8(sp)
10108c18:	dc000117 	ldw	r16,4(sp)
10108c1c:	dec00404 	addi	sp,sp,16
10108c20:	0108a301 	jmpi	10108a30 <__fputwc>
10108c24:	8009883a 	mov	r4,r16
10108c28:	d9400015 	stw	r5,0(sp)
10108c2c:	01049f40 	call	101049f4 <__sinit>
10108c30:	d9400017 	ldw	r5,0(sp)
10108c34:	003feb06 	br	10108be4 <__alt_data_end+0xfffe8be4>

10108c38 <_fstat_r>:
10108c38:	defffd04 	addi	sp,sp,-12
10108c3c:	2805883a 	mov	r2,r5
10108c40:	dc000015 	stw	r16,0(sp)
10108c44:	04040474 	movhi	r16,4113
10108c48:	dc400115 	stw	r17,4(sp)
10108c4c:	840bfb04 	addi	r16,r16,12268
10108c50:	2023883a 	mov	r17,r4
10108c54:	300b883a 	mov	r5,r6
10108c58:	1009883a 	mov	r4,r2
10108c5c:	dfc00215 	stw	ra,8(sp)
10108c60:	80000015 	stw	zero,0(r16)
10108c64:	010d0cc0 	call	1010d0cc <fstat>
10108c68:	00ffffc4 	movi	r3,-1
10108c6c:	10c00526 	beq	r2,r3,10108c84 <_fstat_r+0x4c>
10108c70:	dfc00217 	ldw	ra,8(sp)
10108c74:	dc400117 	ldw	r17,4(sp)
10108c78:	dc000017 	ldw	r16,0(sp)
10108c7c:	dec00304 	addi	sp,sp,12
10108c80:	f800283a 	ret
10108c84:	80c00017 	ldw	r3,0(r16)
10108c88:	183ff926 	beq	r3,zero,10108c70 <__alt_data_end+0xfffe8c70>
10108c8c:	88c00015 	stw	r3,0(r17)
10108c90:	003ff706 	br	10108c70 <__alt_data_end+0xfffe8c70>

10108c94 <__sfvwrite_r>:
10108c94:	30800217 	ldw	r2,8(r6)
10108c98:	10006726 	beq	r2,zero,10108e38 <__sfvwrite_r+0x1a4>
10108c9c:	28c0030b 	ldhu	r3,12(r5)
10108ca0:	defff404 	addi	sp,sp,-48
10108ca4:	dd400715 	stw	r21,28(sp)
10108ca8:	dd000615 	stw	r20,24(sp)
10108cac:	dc000215 	stw	r16,8(sp)
10108cb0:	dfc00b15 	stw	ra,44(sp)
10108cb4:	df000a15 	stw	fp,40(sp)
10108cb8:	ddc00915 	stw	r23,36(sp)
10108cbc:	dd800815 	stw	r22,32(sp)
10108cc0:	dcc00515 	stw	r19,20(sp)
10108cc4:	dc800415 	stw	r18,16(sp)
10108cc8:	dc400315 	stw	r17,12(sp)
10108ccc:	1880020c 	andi	r2,r3,8
10108cd0:	2821883a 	mov	r16,r5
10108cd4:	202b883a 	mov	r21,r4
10108cd8:	3029883a 	mov	r20,r6
10108cdc:	10002726 	beq	r2,zero,10108d7c <__sfvwrite_r+0xe8>
10108ce0:	28800417 	ldw	r2,16(r5)
10108ce4:	10002526 	beq	r2,zero,10108d7c <__sfvwrite_r+0xe8>
10108ce8:	1880008c 	andi	r2,r3,2
10108cec:	a4400017 	ldw	r17,0(r20)
10108cf0:	10002a26 	beq	r2,zero,10108d9c <__sfvwrite_r+0x108>
10108cf4:	05a00034 	movhi	r22,32768
10108cf8:	0027883a 	mov	r19,zero
10108cfc:	0025883a 	mov	r18,zero
10108d00:	b5bf0004 	addi	r22,r22,-1024
10108d04:	980d883a 	mov	r6,r19
10108d08:	a809883a 	mov	r4,r21
10108d0c:	90004626 	beq	r18,zero,10108e28 <__sfvwrite_r+0x194>
10108d10:	900f883a 	mov	r7,r18
10108d14:	b480022e 	bgeu	r22,r18,10108d20 <__sfvwrite_r+0x8c>
10108d18:	01e00034 	movhi	r7,32768
10108d1c:	39ff0004 	addi	r7,r7,-1024
10108d20:	80800917 	ldw	r2,36(r16)
10108d24:	81400717 	ldw	r5,28(r16)
10108d28:	103ee83a 	callr	r2
10108d2c:	0080570e 	bge	zero,r2,10108e8c <__sfvwrite_r+0x1f8>
10108d30:	a0c00217 	ldw	r3,8(r20)
10108d34:	98a7883a 	add	r19,r19,r2
10108d38:	90a5c83a 	sub	r18,r18,r2
10108d3c:	1885c83a 	sub	r2,r3,r2
10108d40:	a0800215 	stw	r2,8(r20)
10108d44:	103fef1e 	bne	r2,zero,10108d04 <__alt_data_end+0xfffe8d04>
10108d48:	0005883a 	mov	r2,zero
10108d4c:	dfc00b17 	ldw	ra,44(sp)
10108d50:	df000a17 	ldw	fp,40(sp)
10108d54:	ddc00917 	ldw	r23,36(sp)
10108d58:	dd800817 	ldw	r22,32(sp)
10108d5c:	dd400717 	ldw	r21,28(sp)
10108d60:	dd000617 	ldw	r20,24(sp)
10108d64:	dcc00517 	ldw	r19,20(sp)
10108d68:	dc800417 	ldw	r18,16(sp)
10108d6c:	dc400317 	ldw	r17,12(sp)
10108d70:	dc000217 	ldw	r16,8(sp)
10108d74:	dec00c04 	addi	sp,sp,48
10108d78:	f800283a 	ret
10108d7c:	800b883a 	mov	r5,r16
10108d80:	a809883a 	mov	r4,r21
10108d84:	0102a200 	call	10102a20 <__swsetup_r>
10108d88:	1000eb1e 	bne	r2,zero,10109138 <__sfvwrite_r+0x4a4>
10108d8c:	80c0030b 	ldhu	r3,12(r16)
10108d90:	a4400017 	ldw	r17,0(r20)
10108d94:	1880008c 	andi	r2,r3,2
10108d98:	103fd61e 	bne	r2,zero,10108cf4 <__alt_data_end+0xfffe8cf4>
10108d9c:	1880004c 	andi	r2,r3,1
10108da0:	10003f1e 	bne	r2,zero,10108ea0 <__sfvwrite_r+0x20c>
10108da4:	0039883a 	mov	fp,zero
10108da8:	0025883a 	mov	r18,zero
10108dac:	90001a26 	beq	r18,zero,10108e18 <__sfvwrite_r+0x184>
10108db0:	1880800c 	andi	r2,r3,512
10108db4:	84c00217 	ldw	r19,8(r16)
10108db8:	10002126 	beq	r2,zero,10108e40 <__sfvwrite_r+0x1ac>
10108dbc:	982f883a 	mov	r23,r19
10108dc0:	94c09336 	bltu	r18,r19,10109010 <__sfvwrite_r+0x37c>
10108dc4:	1881200c 	andi	r2,r3,1152
10108dc8:	10009e1e 	bne	r2,zero,10109044 <__sfvwrite_r+0x3b0>
10108dcc:	81000017 	ldw	r4,0(r16)
10108dd0:	b80d883a 	mov	r6,r23
10108dd4:	e00b883a 	mov	r5,fp
10108dd8:	01092040 	call	10109204 <memmove>
10108ddc:	80c00217 	ldw	r3,8(r16)
10108de0:	81000017 	ldw	r4,0(r16)
10108de4:	9005883a 	mov	r2,r18
10108de8:	1ce7c83a 	sub	r19,r3,r19
10108dec:	25cf883a 	add	r7,r4,r23
10108df0:	84c00215 	stw	r19,8(r16)
10108df4:	81c00015 	stw	r7,0(r16)
10108df8:	a0c00217 	ldw	r3,8(r20)
10108dfc:	e0b9883a 	add	fp,fp,r2
10108e00:	90a5c83a 	sub	r18,r18,r2
10108e04:	18a7c83a 	sub	r19,r3,r2
10108e08:	a4c00215 	stw	r19,8(r20)
10108e0c:	983fce26 	beq	r19,zero,10108d48 <__alt_data_end+0xfffe8d48>
10108e10:	80c0030b 	ldhu	r3,12(r16)
10108e14:	903fe61e 	bne	r18,zero,10108db0 <__alt_data_end+0xfffe8db0>
10108e18:	8f000017 	ldw	fp,0(r17)
10108e1c:	8c800117 	ldw	r18,4(r17)
10108e20:	8c400204 	addi	r17,r17,8
10108e24:	003fe106 	br	10108dac <__alt_data_end+0xfffe8dac>
10108e28:	8cc00017 	ldw	r19,0(r17)
10108e2c:	8c800117 	ldw	r18,4(r17)
10108e30:	8c400204 	addi	r17,r17,8
10108e34:	003fb306 	br	10108d04 <__alt_data_end+0xfffe8d04>
10108e38:	0005883a 	mov	r2,zero
10108e3c:	f800283a 	ret
10108e40:	81000017 	ldw	r4,0(r16)
10108e44:	80800417 	ldw	r2,16(r16)
10108e48:	11005736 	bltu	r2,r4,10108fa8 <__sfvwrite_r+0x314>
10108e4c:	85c00517 	ldw	r23,20(r16)
10108e50:	95c05536 	bltu	r18,r23,10108fa8 <__sfvwrite_r+0x314>
10108e54:	00a00034 	movhi	r2,32768
10108e58:	10bfffc4 	addi	r2,r2,-1
10108e5c:	9009883a 	mov	r4,r18
10108e60:	1480012e 	bgeu	r2,r18,10108e68 <__sfvwrite_r+0x1d4>
10108e64:	1009883a 	mov	r4,r2
10108e68:	b80b883a 	mov	r5,r23
10108e6c:	010a7140 	call	1010a714 <__divsi3>
10108e70:	15cf383a 	mul	r7,r2,r23
10108e74:	81400717 	ldw	r5,28(r16)
10108e78:	80800917 	ldw	r2,36(r16)
10108e7c:	e00d883a 	mov	r6,fp
10108e80:	a809883a 	mov	r4,r21
10108e84:	103ee83a 	callr	r2
10108e88:	00bfdb16 	blt	zero,r2,10108df8 <__alt_data_end+0xfffe8df8>
10108e8c:	8080030b 	ldhu	r2,12(r16)
10108e90:	10801014 	ori	r2,r2,64
10108e94:	8080030d 	sth	r2,12(r16)
10108e98:	00bfffc4 	movi	r2,-1
10108e9c:	003fab06 	br	10108d4c <__alt_data_end+0xfffe8d4c>
10108ea0:	0027883a 	mov	r19,zero
10108ea4:	0011883a 	mov	r8,zero
10108ea8:	0039883a 	mov	fp,zero
10108eac:	0025883a 	mov	r18,zero
10108eb0:	90001f26 	beq	r18,zero,10108f30 <__sfvwrite_r+0x29c>
10108eb4:	40005a26 	beq	r8,zero,10109020 <__sfvwrite_r+0x38c>
10108eb8:	982d883a 	mov	r22,r19
10108ebc:	94c0012e 	bgeu	r18,r19,10108ec4 <__sfvwrite_r+0x230>
10108ec0:	902d883a 	mov	r22,r18
10108ec4:	81000017 	ldw	r4,0(r16)
10108ec8:	80800417 	ldw	r2,16(r16)
10108ecc:	b02f883a 	mov	r23,r22
10108ed0:	81c00517 	ldw	r7,20(r16)
10108ed4:	1100032e 	bgeu	r2,r4,10108ee4 <__sfvwrite_r+0x250>
10108ed8:	80c00217 	ldw	r3,8(r16)
10108edc:	38c7883a 	add	r3,r7,r3
10108ee0:	1d801816 	blt	r3,r22,10108f44 <__sfvwrite_r+0x2b0>
10108ee4:	b1c03e16 	blt	r22,r7,10108fe0 <__sfvwrite_r+0x34c>
10108ee8:	80800917 	ldw	r2,36(r16)
10108eec:	81400717 	ldw	r5,28(r16)
10108ef0:	e00d883a 	mov	r6,fp
10108ef4:	da000115 	stw	r8,4(sp)
10108ef8:	a809883a 	mov	r4,r21
10108efc:	103ee83a 	callr	r2
10108f00:	102f883a 	mov	r23,r2
10108f04:	da000117 	ldw	r8,4(sp)
10108f08:	00bfe00e 	bge	zero,r2,10108e8c <__alt_data_end+0xfffe8e8c>
10108f0c:	9de7c83a 	sub	r19,r19,r23
10108f10:	98001f26 	beq	r19,zero,10108f90 <__sfvwrite_r+0x2fc>
10108f14:	a0800217 	ldw	r2,8(r20)
10108f18:	e5f9883a 	add	fp,fp,r23
10108f1c:	95e5c83a 	sub	r18,r18,r23
10108f20:	15efc83a 	sub	r23,r2,r23
10108f24:	a5c00215 	stw	r23,8(r20)
10108f28:	b83f8726 	beq	r23,zero,10108d48 <__alt_data_end+0xfffe8d48>
10108f2c:	903fe11e 	bne	r18,zero,10108eb4 <__alt_data_end+0xfffe8eb4>
10108f30:	8f000017 	ldw	fp,0(r17)
10108f34:	8c800117 	ldw	r18,4(r17)
10108f38:	0011883a 	mov	r8,zero
10108f3c:	8c400204 	addi	r17,r17,8
10108f40:	003fdb06 	br	10108eb0 <__alt_data_end+0xfffe8eb0>
10108f44:	180d883a 	mov	r6,r3
10108f48:	e00b883a 	mov	r5,fp
10108f4c:	da000115 	stw	r8,4(sp)
10108f50:	d8c00015 	stw	r3,0(sp)
10108f54:	01092040 	call	10109204 <memmove>
10108f58:	d8c00017 	ldw	r3,0(sp)
10108f5c:	80800017 	ldw	r2,0(r16)
10108f60:	800b883a 	mov	r5,r16
10108f64:	a809883a 	mov	r4,r21
10108f68:	10c5883a 	add	r2,r2,r3
10108f6c:	80800015 	stw	r2,0(r16)
10108f70:	d8c00015 	stw	r3,0(sp)
10108f74:	01046180 	call	10104618 <_fflush_r>
10108f78:	d8c00017 	ldw	r3,0(sp)
10108f7c:	da000117 	ldw	r8,4(sp)
10108f80:	103fc21e 	bne	r2,zero,10108e8c <__alt_data_end+0xfffe8e8c>
10108f84:	182f883a 	mov	r23,r3
10108f88:	9de7c83a 	sub	r19,r19,r23
10108f8c:	983fe11e 	bne	r19,zero,10108f14 <__alt_data_end+0xfffe8f14>
10108f90:	800b883a 	mov	r5,r16
10108f94:	a809883a 	mov	r4,r21
10108f98:	01046180 	call	10104618 <_fflush_r>
10108f9c:	103fbb1e 	bne	r2,zero,10108e8c <__alt_data_end+0xfffe8e8c>
10108fa0:	0011883a 	mov	r8,zero
10108fa4:	003fdb06 	br	10108f14 <__alt_data_end+0xfffe8f14>
10108fa8:	94c0012e 	bgeu	r18,r19,10108fb0 <__sfvwrite_r+0x31c>
10108fac:	9027883a 	mov	r19,r18
10108fb0:	980d883a 	mov	r6,r19
10108fb4:	e00b883a 	mov	r5,fp
10108fb8:	01092040 	call	10109204 <memmove>
10108fbc:	80800217 	ldw	r2,8(r16)
10108fc0:	80c00017 	ldw	r3,0(r16)
10108fc4:	14c5c83a 	sub	r2,r2,r19
10108fc8:	1cc7883a 	add	r3,r3,r19
10108fcc:	80800215 	stw	r2,8(r16)
10108fd0:	80c00015 	stw	r3,0(r16)
10108fd4:	10004326 	beq	r2,zero,101090e4 <__sfvwrite_r+0x450>
10108fd8:	9805883a 	mov	r2,r19
10108fdc:	003f8606 	br	10108df8 <__alt_data_end+0xfffe8df8>
10108fe0:	b00d883a 	mov	r6,r22
10108fe4:	e00b883a 	mov	r5,fp
10108fe8:	da000115 	stw	r8,4(sp)
10108fec:	01092040 	call	10109204 <memmove>
10108ff0:	80800217 	ldw	r2,8(r16)
10108ff4:	80c00017 	ldw	r3,0(r16)
10108ff8:	da000117 	ldw	r8,4(sp)
10108ffc:	1585c83a 	sub	r2,r2,r22
10109000:	1dad883a 	add	r22,r3,r22
10109004:	80800215 	stw	r2,8(r16)
10109008:	85800015 	stw	r22,0(r16)
1010900c:	003fbf06 	br	10108f0c <__alt_data_end+0xfffe8f0c>
10109010:	81000017 	ldw	r4,0(r16)
10109014:	9027883a 	mov	r19,r18
10109018:	902f883a 	mov	r23,r18
1010901c:	003f6c06 	br	10108dd0 <__alt_data_end+0xfffe8dd0>
10109020:	900d883a 	mov	r6,r18
10109024:	01400284 	movi	r5,10
10109028:	e009883a 	mov	r4,fp
1010902c:	0105aa40 	call	10105aa4 <memchr>
10109030:	10003e26 	beq	r2,zero,1010912c <__sfvwrite_r+0x498>
10109034:	10800044 	addi	r2,r2,1
10109038:	1727c83a 	sub	r19,r2,fp
1010903c:	02000044 	movi	r8,1
10109040:	003f9d06 	br	10108eb8 <__alt_data_end+0xfffe8eb8>
10109044:	80800517 	ldw	r2,20(r16)
10109048:	81400417 	ldw	r5,16(r16)
1010904c:	81c00017 	ldw	r7,0(r16)
10109050:	10a7883a 	add	r19,r2,r2
10109054:	9885883a 	add	r2,r19,r2
10109058:	1026d7fa 	srli	r19,r2,31
1010905c:	396dc83a 	sub	r22,r7,r5
10109060:	b1000044 	addi	r4,r22,1
10109064:	9885883a 	add	r2,r19,r2
10109068:	1027d07a 	srai	r19,r2,1
1010906c:	2485883a 	add	r2,r4,r18
10109070:	980d883a 	mov	r6,r19
10109074:	9880022e 	bgeu	r19,r2,10109080 <__sfvwrite_r+0x3ec>
10109078:	1027883a 	mov	r19,r2
1010907c:	100d883a 	mov	r6,r2
10109080:	18c1000c 	andi	r3,r3,1024
10109084:	18001c26 	beq	r3,zero,101090f8 <__sfvwrite_r+0x464>
10109088:	300b883a 	mov	r5,r6
1010908c:	a809883a 	mov	r4,r21
10109090:	01052980 	call	10105298 <_malloc_r>
10109094:	102f883a 	mov	r23,r2
10109098:	10002926 	beq	r2,zero,10109140 <__sfvwrite_r+0x4ac>
1010909c:	81400417 	ldw	r5,16(r16)
101090a0:	b00d883a 	mov	r6,r22
101090a4:	1009883a 	mov	r4,r2
101090a8:	0105b880 	call	10105b88 <memcpy>
101090ac:	8080030b 	ldhu	r2,12(r16)
101090b0:	00fedfc4 	movi	r3,-1153
101090b4:	10c4703a 	and	r2,r2,r3
101090b8:	10802014 	ori	r2,r2,128
101090bc:	8080030d 	sth	r2,12(r16)
101090c0:	bd89883a 	add	r4,r23,r22
101090c4:	9d8fc83a 	sub	r7,r19,r22
101090c8:	85c00415 	stw	r23,16(r16)
101090cc:	84c00515 	stw	r19,20(r16)
101090d0:	81000015 	stw	r4,0(r16)
101090d4:	9027883a 	mov	r19,r18
101090d8:	81c00215 	stw	r7,8(r16)
101090dc:	902f883a 	mov	r23,r18
101090e0:	003f3b06 	br	10108dd0 <__alt_data_end+0xfffe8dd0>
101090e4:	800b883a 	mov	r5,r16
101090e8:	a809883a 	mov	r4,r21
101090ec:	01046180 	call	10104618 <_fflush_r>
101090f0:	103fb926 	beq	r2,zero,10108fd8 <__alt_data_end+0xfffe8fd8>
101090f4:	003f6506 	br	10108e8c <__alt_data_end+0xfffe8e8c>
101090f8:	a809883a 	mov	r4,r21
101090fc:	01093c00 	call	101093c0 <_realloc_r>
10109100:	102f883a 	mov	r23,r2
10109104:	103fee1e 	bne	r2,zero,101090c0 <__alt_data_end+0xfffe90c0>
10109108:	81400417 	ldw	r5,16(r16)
1010910c:	a809883a 	mov	r4,r21
10109110:	0104b680 	call	10104b68 <_free_r>
10109114:	8080030b 	ldhu	r2,12(r16)
10109118:	00ffdfc4 	movi	r3,-129
1010911c:	1884703a 	and	r2,r3,r2
10109120:	00c00304 	movi	r3,12
10109124:	a8c00015 	stw	r3,0(r21)
10109128:	003f5906 	br	10108e90 <__alt_data_end+0xfffe8e90>
1010912c:	94c00044 	addi	r19,r18,1
10109130:	02000044 	movi	r8,1
10109134:	003f6006 	br	10108eb8 <__alt_data_end+0xfffe8eb8>
10109138:	00bfffc4 	movi	r2,-1
1010913c:	003f0306 	br	10108d4c <__alt_data_end+0xfffe8d4c>
10109140:	00800304 	movi	r2,12
10109144:	a8800015 	stw	r2,0(r21)
10109148:	8080030b 	ldhu	r2,12(r16)
1010914c:	003f5006 	br	10108e90 <__alt_data_end+0xfffe8e90>

10109150 <_isatty_r>:
10109150:	defffd04 	addi	sp,sp,-12
10109154:	dc000015 	stw	r16,0(sp)
10109158:	04040474 	movhi	r16,4113
1010915c:	dc400115 	stw	r17,4(sp)
10109160:	840bfb04 	addi	r16,r16,12268
10109164:	2023883a 	mov	r17,r4
10109168:	2809883a 	mov	r4,r5
1010916c:	dfc00215 	stw	ra,8(sp)
10109170:	80000015 	stw	zero,0(r16)
10109174:	010d1cc0 	call	1010d1cc <isatty>
10109178:	00ffffc4 	movi	r3,-1
1010917c:	10c00526 	beq	r2,r3,10109194 <_isatty_r+0x44>
10109180:	dfc00217 	ldw	ra,8(sp)
10109184:	dc400117 	ldw	r17,4(sp)
10109188:	dc000017 	ldw	r16,0(sp)
1010918c:	dec00304 	addi	sp,sp,12
10109190:	f800283a 	ret
10109194:	80c00017 	ldw	r3,0(r16)
10109198:	183ff926 	beq	r3,zero,10109180 <__alt_data_end+0xfffe9180>
1010919c:	88c00015 	stw	r3,0(r17)
101091a0:	003ff706 	br	10109180 <__alt_data_end+0xfffe9180>

101091a4 <_lseek_r>:
101091a4:	defffd04 	addi	sp,sp,-12
101091a8:	2805883a 	mov	r2,r5
101091ac:	dc000015 	stw	r16,0(sp)
101091b0:	04040474 	movhi	r16,4113
101091b4:	dc400115 	stw	r17,4(sp)
101091b8:	300b883a 	mov	r5,r6
101091bc:	840bfb04 	addi	r16,r16,12268
101091c0:	2023883a 	mov	r17,r4
101091c4:	380d883a 	mov	r6,r7
101091c8:	1009883a 	mov	r4,r2
101091cc:	dfc00215 	stw	ra,8(sp)
101091d0:	80000015 	stw	zero,0(r16)
101091d4:	010d3ac0 	call	1010d3ac <lseek>
101091d8:	00ffffc4 	movi	r3,-1
101091dc:	10c00526 	beq	r2,r3,101091f4 <_lseek_r+0x50>
101091e0:	dfc00217 	ldw	ra,8(sp)
101091e4:	dc400117 	ldw	r17,4(sp)
101091e8:	dc000017 	ldw	r16,0(sp)
101091ec:	dec00304 	addi	sp,sp,12
101091f0:	f800283a 	ret
101091f4:	80c00017 	ldw	r3,0(r16)
101091f8:	183ff926 	beq	r3,zero,101091e0 <__alt_data_end+0xfffe91e0>
101091fc:	88c00015 	stw	r3,0(r17)
10109200:	003ff706 	br	101091e0 <__alt_data_end+0xfffe91e0>

10109204 <memmove>:
10109204:	2005883a 	mov	r2,r4
10109208:	29000b2e 	bgeu	r5,r4,10109238 <memmove+0x34>
1010920c:	298f883a 	add	r7,r5,r6
10109210:	21c0092e 	bgeu	r4,r7,10109238 <memmove+0x34>
10109214:	2187883a 	add	r3,r4,r6
10109218:	198bc83a 	sub	r5,r3,r6
1010921c:	30004826 	beq	r6,zero,10109340 <memmove+0x13c>
10109220:	39ffffc4 	addi	r7,r7,-1
10109224:	39000003 	ldbu	r4,0(r7)
10109228:	18ffffc4 	addi	r3,r3,-1
1010922c:	19000005 	stb	r4,0(r3)
10109230:	28fffb1e 	bne	r5,r3,10109220 <__alt_data_end+0xfffe9220>
10109234:	f800283a 	ret
10109238:	00c003c4 	movi	r3,15
1010923c:	1980412e 	bgeu	r3,r6,10109344 <memmove+0x140>
10109240:	2886b03a 	or	r3,r5,r2
10109244:	18c000cc 	andi	r3,r3,3
10109248:	1800401e 	bne	r3,zero,1010934c <memmove+0x148>
1010924c:	33fffc04 	addi	r15,r6,-16
10109250:	781ed13a 	srli	r15,r15,4
10109254:	28c00104 	addi	r3,r5,4
10109258:	13400104 	addi	r13,r2,4
1010925c:	781c913a 	slli	r14,r15,4
10109260:	2b000204 	addi	r12,r5,8
10109264:	12c00204 	addi	r11,r2,8
10109268:	73800504 	addi	r14,r14,20
1010926c:	2a800304 	addi	r10,r5,12
10109270:	12400304 	addi	r9,r2,12
10109274:	2b9d883a 	add	r14,r5,r14
10109278:	2811883a 	mov	r8,r5
1010927c:	100f883a 	mov	r7,r2
10109280:	41000017 	ldw	r4,0(r8)
10109284:	39c00404 	addi	r7,r7,16
10109288:	18c00404 	addi	r3,r3,16
1010928c:	393ffc15 	stw	r4,-16(r7)
10109290:	193ffc17 	ldw	r4,-16(r3)
10109294:	6b400404 	addi	r13,r13,16
10109298:	5ac00404 	addi	r11,r11,16
1010929c:	693ffc15 	stw	r4,-16(r13)
101092a0:	61000017 	ldw	r4,0(r12)
101092a4:	4a400404 	addi	r9,r9,16
101092a8:	42000404 	addi	r8,r8,16
101092ac:	593ffc15 	stw	r4,-16(r11)
101092b0:	51000017 	ldw	r4,0(r10)
101092b4:	63000404 	addi	r12,r12,16
101092b8:	52800404 	addi	r10,r10,16
101092bc:	493ffc15 	stw	r4,-16(r9)
101092c0:	1bbfef1e 	bne	r3,r14,10109280 <__alt_data_end+0xfffe9280>
101092c4:	79000044 	addi	r4,r15,1
101092c8:	2008913a 	slli	r4,r4,4
101092cc:	328003cc 	andi	r10,r6,15
101092d0:	02c000c4 	movi	r11,3
101092d4:	1107883a 	add	r3,r2,r4
101092d8:	290b883a 	add	r5,r5,r4
101092dc:	5a801e2e 	bgeu	r11,r10,10109358 <memmove+0x154>
101092e0:	1813883a 	mov	r9,r3
101092e4:	2811883a 	mov	r8,r5
101092e8:	500f883a 	mov	r7,r10
101092ec:	41000017 	ldw	r4,0(r8)
101092f0:	4a400104 	addi	r9,r9,4
101092f4:	39ffff04 	addi	r7,r7,-4
101092f8:	493fff15 	stw	r4,-4(r9)
101092fc:	42000104 	addi	r8,r8,4
10109300:	59fffa36 	bltu	r11,r7,101092ec <__alt_data_end+0xfffe92ec>
10109304:	513fff04 	addi	r4,r10,-4
10109308:	2008d0ba 	srli	r4,r4,2
1010930c:	318000cc 	andi	r6,r6,3
10109310:	21000044 	addi	r4,r4,1
10109314:	2109883a 	add	r4,r4,r4
10109318:	2109883a 	add	r4,r4,r4
1010931c:	1907883a 	add	r3,r3,r4
10109320:	290b883a 	add	r5,r5,r4
10109324:	30000b26 	beq	r6,zero,10109354 <memmove+0x150>
10109328:	198d883a 	add	r6,r3,r6
1010932c:	29c00003 	ldbu	r7,0(r5)
10109330:	18c00044 	addi	r3,r3,1
10109334:	29400044 	addi	r5,r5,1
10109338:	19ffffc5 	stb	r7,-1(r3)
1010933c:	19bffb1e 	bne	r3,r6,1010932c <__alt_data_end+0xfffe932c>
10109340:	f800283a 	ret
10109344:	1007883a 	mov	r3,r2
10109348:	003ff606 	br	10109324 <__alt_data_end+0xfffe9324>
1010934c:	1007883a 	mov	r3,r2
10109350:	003ff506 	br	10109328 <__alt_data_end+0xfffe9328>
10109354:	f800283a 	ret
10109358:	500d883a 	mov	r6,r10
1010935c:	003ff106 	br	10109324 <__alt_data_end+0xfffe9324>

10109360 <_read_r>:
10109360:	defffd04 	addi	sp,sp,-12
10109364:	2805883a 	mov	r2,r5
10109368:	dc000015 	stw	r16,0(sp)
1010936c:	04040474 	movhi	r16,4113
10109370:	dc400115 	stw	r17,4(sp)
10109374:	300b883a 	mov	r5,r6
10109378:	840bfb04 	addi	r16,r16,12268
1010937c:	2023883a 	mov	r17,r4
10109380:	380d883a 	mov	r6,r7
10109384:	1009883a 	mov	r4,r2
10109388:	dfc00215 	stw	ra,8(sp)
1010938c:	80000015 	stw	zero,0(r16)
10109390:	010d5940 	call	1010d594 <read>
10109394:	00ffffc4 	movi	r3,-1
10109398:	10c00526 	beq	r2,r3,101093b0 <_read_r+0x50>
1010939c:	dfc00217 	ldw	ra,8(sp)
101093a0:	dc400117 	ldw	r17,4(sp)
101093a4:	dc000017 	ldw	r16,0(sp)
101093a8:	dec00304 	addi	sp,sp,12
101093ac:	f800283a 	ret
101093b0:	80c00017 	ldw	r3,0(r16)
101093b4:	183ff926 	beq	r3,zero,1010939c <__alt_data_end+0xfffe939c>
101093b8:	88c00015 	stw	r3,0(r17)
101093bc:	003ff706 	br	1010939c <__alt_data_end+0xfffe939c>

101093c0 <_realloc_r>:
101093c0:	defff604 	addi	sp,sp,-40
101093c4:	dc400115 	stw	r17,4(sp)
101093c8:	dfc00915 	stw	ra,36(sp)
101093cc:	df000815 	stw	fp,32(sp)
101093d0:	ddc00715 	stw	r23,28(sp)
101093d4:	dd800615 	stw	r22,24(sp)
101093d8:	dd400515 	stw	r21,20(sp)
101093dc:	dd000415 	stw	r20,16(sp)
101093e0:	dcc00315 	stw	r19,12(sp)
101093e4:	dc800215 	stw	r18,8(sp)
101093e8:	dc000015 	stw	r16,0(sp)
101093ec:	3023883a 	mov	r17,r6
101093f0:	2800b626 	beq	r5,zero,101096cc <_realloc_r+0x30c>
101093f4:	2829883a 	mov	r20,r5
101093f8:	2025883a 	mov	r18,r4
101093fc:	010d4fc0 	call	1010d4fc <__malloc_lock>
10109400:	a0ffff17 	ldw	r3,-4(r20)
10109404:	043fff04 	movi	r16,-4
10109408:	888002c4 	addi	r2,r17,11
1010940c:	01000584 	movi	r4,22
10109410:	a57ffe04 	addi	r21,r20,-8
10109414:	1c20703a 	and	r16,r3,r16
10109418:	2080332e 	bgeu	r4,r2,101094e8 <_realloc_r+0x128>
1010941c:	05bffe04 	movi	r22,-8
10109420:	15ac703a 	and	r22,r2,r22
10109424:	b005883a 	mov	r2,r22
10109428:	b0005716 	blt	r22,zero,10109588 <_realloc_r+0x1c8>
1010942c:	b4405636 	bltu	r22,r17,10109588 <_realloc_r+0x1c8>
10109430:	8080300e 	bge	r16,r2,101094f4 <_realloc_r+0x134>
10109434:	07040474 	movhi	fp,4113
10109438:	e73fa604 	addi	fp,fp,-360
1010943c:	e2000217 	ldw	r8,8(fp)
10109440:	ac09883a 	add	r4,r21,r16
10109444:	22006126 	beq	r4,r8,101095cc <_realloc_r+0x20c>
10109448:	22400117 	ldw	r9,4(r4)
1010944c:	01ffff84 	movi	r7,-2
10109450:	49ce703a 	and	r7,r9,r7
10109454:	21cf883a 	add	r7,r4,r7
10109458:	39800117 	ldw	r6,4(r7)
1010945c:	3180004c 	andi	r6,r6,1
10109460:	30003e26 	beq	r6,zero,1010955c <_realloc_r+0x19c>
10109464:	18c0004c 	andi	r3,r3,1
10109468:	18008126 	beq	r3,zero,10109670 <_realloc_r+0x2b0>
1010946c:	880b883a 	mov	r5,r17
10109470:	9009883a 	mov	r4,r18
10109474:	01052980 	call	10105298 <_malloc_r>
10109478:	1023883a 	mov	r17,r2
1010947c:	10011e26 	beq	r2,zero,101098f8 <_realloc_r+0x538>
10109480:	a0ffff17 	ldw	r3,-4(r20)
10109484:	113ffe04 	addi	r4,r2,-8
10109488:	00bfff84 	movi	r2,-2
1010948c:	1884703a 	and	r2,r3,r2
10109490:	a885883a 	add	r2,r21,r2
10109494:	2080ee26 	beq	r4,r2,10109850 <_realloc_r+0x490>
10109498:	81bfff04 	addi	r6,r16,-4
1010949c:	00800904 	movi	r2,36
101094a0:	1180b836 	bltu	r2,r6,10109784 <_realloc_r+0x3c4>
101094a4:	00c004c4 	movi	r3,19
101094a8:	19809536 	bltu	r3,r6,10109700 <_realloc_r+0x340>
101094ac:	8805883a 	mov	r2,r17
101094b0:	a007883a 	mov	r3,r20
101094b4:	19000017 	ldw	r4,0(r3)
101094b8:	11000015 	stw	r4,0(r2)
101094bc:	19000117 	ldw	r4,4(r3)
101094c0:	11000115 	stw	r4,4(r2)
101094c4:	18c00217 	ldw	r3,8(r3)
101094c8:	10c00215 	stw	r3,8(r2)
101094cc:	a00b883a 	mov	r5,r20
101094d0:	9009883a 	mov	r4,r18
101094d4:	0104b680 	call	10104b68 <_free_r>
101094d8:	9009883a 	mov	r4,r18
101094dc:	010d5200 	call	1010d520 <__malloc_unlock>
101094e0:	8805883a 	mov	r2,r17
101094e4:	00001106 	br	1010952c <_realloc_r+0x16c>
101094e8:	00800404 	movi	r2,16
101094ec:	102d883a 	mov	r22,r2
101094f0:	003fce06 	br	1010942c <__alt_data_end+0xfffe942c>
101094f4:	a023883a 	mov	r17,r20
101094f8:	858fc83a 	sub	r7,r16,r22
101094fc:	008003c4 	movi	r2,15
10109500:	18c0004c 	andi	r3,r3,1
10109504:	11c02436 	bltu	r2,r7,10109598 <_realloc_r+0x1d8>
10109508:	1c06b03a 	or	r3,r3,r16
1010950c:	a8c00115 	stw	r3,4(r21)
10109510:	ac21883a 	add	r16,r21,r16
10109514:	80800117 	ldw	r2,4(r16)
10109518:	10800054 	ori	r2,r2,1
1010951c:	80800115 	stw	r2,4(r16)
10109520:	9009883a 	mov	r4,r18
10109524:	010d5200 	call	1010d520 <__malloc_unlock>
10109528:	8805883a 	mov	r2,r17
1010952c:	dfc00917 	ldw	ra,36(sp)
10109530:	df000817 	ldw	fp,32(sp)
10109534:	ddc00717 	ldw	r23,28(sp)
10109538:	dd800617 	ldw	r22,24(sp)
1010953c:	dd400517 	ldw	r21,20(sp)
10109540:	dd000417 	ldw	r20,16(sp)
10109544:	dcc00317 	ldw	r19,12(sp)
10109548:	dc800217 	ldw	r18,8(sp)
1010954c:	dc400117 	ldw	r17,4(sp)
10109550:	dc000017 	ldw	r16,0(sp)
10109554:	dec00a04 	addi	sp,sp,40
10109558:	f800283a 	ret
1010955c:	017fff04 	movi	r5,-4
10109560:	494a703a 	and	r5,r9,r5
10109564:	814d883a 	add	r6,r16,r5
10109568:	30801e16 	blt	r6,r2,101095e4 <_realloc_r+0x224>
1010956c:	20800317 	ldw	r2,12(r4)
10109570:	21000217 	ldw	r4,8(r4)
10109574:	a023883a 	mov	r17,r20
10109578:	3021883a 	mov	r16,r6
1010957c:	20800315 	stw	r2,12(r4)
10109580:	11000215 	stw	r4,8(r2)
10109584:	003fdc06 	br	101094f8 <__alt_data_end+0xfffe94f8>
10109588:	00800304 	movi	r2,12
1010958c:	90800015 	stw	r2,0(r18)
10109590:	0005883a 	mov	r2,zero
10109594:	003fe506 	br	1010952c <__alt_data_end+0xfffe952c>
10109598:	1d86b03a 	or	r3,r3,r22
1010959c:	a8c00115 	stw	r3,4(r21)
101095a0:	ad8b883a 	add	r5,r21,r22
101095a4:	38c00054 	ori	r3,r7,1
101095a8:	28c00115 	stw	r3,4(r5)
101095ac:	29cf883a 	add	r7,r5,r7
101095b0:	38c00117 	ldw	r3,4(r7)
101095b4:	29400204 	addi	r5,r5,8
101095b8:	9009883a 	mov	r4,r18
101095bc:	18800054 	ori	r2,r3,1
101095c0:	38800115 	stw	r2,4(r7)
101095c4:	0104b680 	call	10104b68 <_free_r>
101095c8:	003fd506 	br	10109520 <__alt_data_end+0xfffe9520>
101095cc:	21c00117 	ldw	r7,4(r4)
101095d0:	017fff04 	movi	r5,-4
101095d4:	b1800404 	addi	r6,r22,16
101095d8:	394a703a 	and	r5,r7,r5
101095dc:	814f883a 	add	r7,r16,r5
101095e0:	39805b0e 	bge	r7,r6,10109750 <_realloc_r+0x390>
101095e4:	18c0004c 	andi	r3,r3,1
101095e8:	183fa01e 	bne	r3,zero,1010946c <__alt_data_end+0xfffe946c>
101095ec:	a4fffe17 	ldw	r19,-8(r20)
101095f0:	00ffff04 	movi	r3,-4
101095f4:	ace7c83a 	sub	r19,r21,r19
101095f8:	99800117 	ldw	r6,4(r19)
101095fc:	30c6703a 	and	r3,r6,r3
10109600:	20002026 	beq	r4,zero,10109684 <_realloc_r+0x2c4>
10109604:	80ef883a 	add	r23,r16,r3
10109608:	b96f883a 	add	r23,r23,r5
1010960c:	22006126 	beq	r4,r8,10109794 <_realloc_r+0x3d4>
10109610:	b8801c16 	blt	r23,r2,10109684 <_realloc_r+0x2c4>
10109614:	20800317 	ldw	r2,12(r4)
10109618:	20c00217 	ldw	r3,8(r4)
1010961c:	81bfff04 	addi	r6,r16,-4
10109620:	01000904 	movi	r4,36
10109624:	18800315 	stw	r2,12(r3)
10109628:	10c00215 	stw	r3,8(r2)
1010962c:	98c00217 	ldw	r3,8(r19)
10109630:	98800317 	ldw	r2,12(r19)
10109634:	9c400204 	addi	r17,r19,8
10109638:	18800315 	stw	r2,12(r3)
1010963c:	10c00215 	stw	r3,8(r2)
10109640:	21801b36 	bltu	r4,r6,101096b0 <_realloc_r+0x2f0>
10109644:	008004c4 	movi	r2,19
10109648:	1180362e 	bgeu	r2,r6,10109724 <_realloc_r+0x364>
1010964c:	a0800017 	ldw	r2,0(r20)
10109650:	98800215 	stw	r2,8(r19)
10109654:	a0800117 	ldw	r2,4(r20)
10109658:	98800315 	stw	r2,12(r19)
1010965c:	008006c4 	movi	r2,27
10109660:	11808136 	bltu	r2,r6,10109868 <_realloc_r+0x4a8>
10109664:	98800404 	addi	r2,r19,16
10109668:	a5000204 	addi	r20,r20,8
1010966c:	00002e06 	br	10109728 <_realloc_r+0x368>
10109670:	a4fffe17 	ldw	r19,-8(r20)
10109674:	00ffff04 	movi	r3,-4
10109678:	ace7c83a 	sub	r19,r21,r19
1010967c:	99000117 	ldw	r4,4(r19)
10109680:	20c6703a 	and	r3,r4,r3
10109684:	983f7926 	beq	r19,zero,1010946c <__alt_data_end+0xfffe946c>
10109688:	80ef883a 	add	r23,r16,r3
1010968c:	b8bf7716 	blt	r23,r2,1010946c <__alt_data_end+0xfffe946c>
10109690:	98800317 	ldw	r2,12(r19)
10109694:	98c00217 	ldw	r3,8(r19)
10109698:	81bfff04 	addi	r6,r16,-4
1010969c:	01000904 	movi	r4,36
101096a0:	18800315 	stw	r2,12(r3)
101096a4:	10c00215 	stw	r3,8(r2)
101096a8:	9c400204 	addi	r17,r19,8
101096ac:	21bfe52e 	bgeu	r4,r6,10109644 <__alt_data_end+0xfffe9644>
101096b0:	a00b883a 	mov	r5,r20
101096b4:	8809883a 	mov	r4,r17
101096b8:	01092040 	call	10109204 <memmove>
101096bc:	98c00117 	ldw	r3,4(r19)
101096c0:	b821883a 	mov	r16,r23
101096c4:	982b883a 	mov	r21,r19
101096c8:	003f8b06 	br	101094f8 <__alt_data_end+0xfffe94f8>
101096cc:	300b883a 	mov	r5,r6
101096d0:	dfc00917 	ldw	ra,36(sp)
101096d4:	df000817 	ldw	fp,32(sp)
101096d8:	ddc00717 	ldw	r23,28(sp)
101096dc:	dd800617 	ldw	r22,24(sp)
101096e0:	dd400517 	ldw	r21,20(sp)
101096e4:	dd000417 	ldw	r20,16(sp)
101096e8:	dcc00317 	ldw	r19,12(sp)
101096ec:	dc800217 	ldw	r18,8(sp)
101096f0:	dc400117 	ldw	r17,4(sp)
101096f4:	dc000017 	ldw	r16,0(sp)
101096f8:	dec00a04 	addi	sp,sp,40
101096fc:	01052981 	jmpi	10105298 <_malloc_r>
10109700:	a0c00017 	ldw	r3,0(r20)
10109704:	88c00015 	stw	r3,0(r17)
10109708:	a0c00117 	ldw	r3,4(r20)
1010970c:	88c00115 	stw	r3,4(r17)
10109710:	00c006c4 	movi	r3,27
10109714:	19804636 	bltu	r3,r6,10109830 <_realloc_r+0x470>
10109718:	88800204 	addi	r2,r17,8
1010971c:	a0c00204 	addi	r3,r20,8
10109720:	003f6406 	br	101094b4 <__alt_data_end+0xfffe94b4>
10109724:	8805883a 	mov	r2,r17
10109728:	a0c00017 	ldw	r3,0(r20)
1010972c:	b821883a 	mov	r16,r23
10109730:	982b883a 	mov	r21,r19
10109734:	10c00015 	stw	r3,0(r2)
10109738:	a0c00117 	ldw	r3,4(r20)
1010973c:	10c00115 	stw	r3,4(r2)
10109740:	a0c00217 	ldw	r3,8(r20)
10109744:	10c00215 	stw	r3,8(r2)
10109748:	98c00117 	ldw	r3,4(r19)
1010974c:	003f6a06 	br	101094f8 <__alt_data_end+0xfffe94f8>
10109750:	adab883a 	add	r21,r21,r22
10109754:	3d85c83a 	sub	r2,r7,r22
10109758:	e5400215 	stw	r21,8(fp)
1010975c:	10800054 	ori	r2,r2,1
10109760:	a8800115 	stw	r2,4(r21)
10109764:	a0bfff17 	ldw	r2,-4(r20)
10109768:	9009883a 	mov	r4,r18
1010976c:	1080004c 	andi	r2,r2,1
10109770:	1584b03a 	or	r2,r2,r22
10109774:	a0bfff15 	stw	r2,-4(r20)
10109778:	010d5200 	call	1010d520 <__malloc_unlock>
1010977c:	a005883a 	mov	r2,r20
10109780:	003f6a06 	br	1010952c <__alt_data_end+0xfffe952c>
10109784:	a00b883a 	mov	r5,r20
10109788:	8809883a 	mov	r4,r17
1010978c:	01092040 	call	10109204 <memmove>
10109790:	003f4e06 	br	101094cc <__alt_data_end+0xfffe94cc>
10109794:	b1000404 	addi	r4,r22,16
10109798:	b93fba16 	blt	r23,r4,10109684 <__alt_data_end+0xfffe9684>
1010979c:	98800317 	ldw	r2,12(r19)
101097a0:	98c00217 	ldw	r3,8(r19)
101097a4:	81bfff04 	addi	r6,r16,-4
101097a8:	01000904 	movi	r4,36
101097ac:	18800315 	stw	r2,12(r3)
101097b0:	10c00215 	stw	r3,8(r2)
101097b4:	9c400204 	addi	r17,r19,8
101097b8:	21804336 	bltu	r4,r6,101098c8 <_realloc_r+0x508>
101097bc:	008004c4 	movi	r2,19
101097c0:	11803f2e 	bgeu	r2,r6,101098c0 <_realloc_r+0x500>
101097c4:	a0800017 	ldw	r2,0(r20)
101097c8:	98800215 	stw	r2,8(r19)
101097cc:	a0800117 	ldw	r2,4(r20)
101097d0:	98800315 	stw	r2,12(r19)
101097d4:	008006c4 	movi	r2,27
101097d8:	11803f36 	bltu	r2,r6,101098d8 <_realloc_r+0x518>
101097dc:	98800404 	addi	r2,r19,16
101097e0:	a5000204 	addi	r20,r20,8
101097e4:	a0c00017 	ldw	r3,0(r20)
101097e8:	10c00015 	stw	r3,0(r2)
101097ec:	a0c00117 	ldw	r3,4(r20)
101097f0:	10c00115 	stw	r3,4(r2)
101097f4:	a0c00217 	ldw	r3,8(r20)
101097f8:	10c00215 	stw	r3,8(r2)
101097fc:	9d87883a 	add	r3,r19,r22
10109800:	bd85c83a 	sub	r2,r23,r22
10109804:	e0c00215 	stw	r3,8(fp)
10109808:	10800054 	ori	r2,r2,1
1010980c:	18800115 	stw	r2,4(r3)
10109810:	98800117 	ldw	r2,4(r19)
10109814:	9009883a 	mov	r4,r18
10109818:	1080004c 	andi	r2,r2,1
1010981c:	1584b03a 	or	r2,r2,r22
10109820:	98800115 	stw	r2,4(r19)
10109824:	010d5200 	call	1010d520 <__malloc_unlock>
10109828:	8805883a 	mov	r2,r17
1010982c:	003f3f06 	br	1010952c <__alt_data_end+0xfffe952c>
10109830:	a0c00217 	ldw	r3,8(r20)
10109834:	88c00215 	stw	r3,8(r17)
10109838:	a0c00317 	ldw	r3,12(r20)
1010983c:	88c00315 	stw	r3,12(r17)
10109840:	30801126 	beq	r6,r2,10109888 <_realloc_r+0x4c8>
10109844:	88800404 	addi	r2,r17,16
10109848:	a0c00404 	addi	r3,r20,16
1010984c:	003f1906 	br	101094b4 <__alt_data_end+0xfffe94b4>
10109850:	893fff17 	ldw	r4,-4(r17)
10109854:	00bfff04 	movi	r2,-4
10109858:	a023883a 	mov	r17,r20
1010985c:	2084703a 	and	r2,r4,r2
10109860:	80a1883a 	add	r16,r16,r2
10109864:	003f2406 	br	101094f8 <__alt_data_end+0xfffe94f8>
10109868:	a0800217 	ldw	r2,8(r20)
1010986c:	98800415 	stw	r2,16(r19)
10109870:	a0800317 	ldw	r2,12(r20)
10109874:	98800515 	stw	r2,20(r19)
10109878:	31000a26 	beq	r6,r4,101098a4 <_realloc_r+0x4e4>
1010987c:	98800604 	addi	r2,r19,24
10109880:	a5000404 	addi	r20,r20,16
10109884:	003fa806 	br	10109728 <__alt_data_end+0xfffe9728>
10109888:	a1000417 	ldw	r4,16(r20)
1010988c:	88800604 	addi	r2,r17,24
10109890:	a0c00604 	addi	r3,r20,24
10109894:	89000415 	stw	r4,16(r17)
10109898:	a1000517 	ldw	r4,20(r20)
1010989c:	89000515 	stw	r4,20(r17)
101098a0:	003f0406 	br	101094b4 <__alt_data_end+0xfffe94b4>
101098a4:	a0c00417 	ldw	r3,16(r20)
101098a8:	a5000604 	addi	r20,r20,24
101098ac:	98800804 	addi	r2,r19,32
101098b0:	98c00615 	stw	r3,24(r19)
101098b4:	a0ffff17 	ldw	r3,-4(r20)
101098b8:	98c00715 	stw	r3,28(r19)
101098bc:	003f9a06 	br	10109728 <__alt_data_end+0xfffe9728>
101098c0:	8805883a 	mov	r2,r17
101098c4:	003fc706 	br	101097e4 <__alt_data_end+0xfffe97e4>
101098c8:	a00b883a 	mov	r5,r20
101098cc:	8809883a 	mov	r4,r17
101098d0:	01092040 	call	10109204 <memmove>
101098d4:	003fc906 	br	101097fc <__alt_data_end+0xfffe97fc>
101098d8:	a0800217 	ldw	r2,8(r20)
101098dc:	98800415 	stw	r2,16(r19)
101098e0:	a0800317 	ldw	r2,12(r20)
101098e4:	98800515 	stw	r2,20(r19)
101098e8:	31000726 	beq	r6,r4,10109908 <_realloc_r+0x548>
101098ec:	98800604 	addi	r2,r19,24
101098f0:	a5000404 	addi	r20,r20,16
101098f4:	003fbb06 	br	101097e4 <__alt_data_end+0xfffe97e4>
101098f8:	9009883a 	mov	r4,r18
101098fc:	010d5200 	call	1010d520 <__malloc_unlock>
10109900:	0005883a 	mov	r2,zero
10109904:	003f0906 	br	1010952c <__alt_data_end+0xfffe952c>
10109908:	a0c00417 	ldw	r3,16(r20)
1010990c:	a5000604 	addi	r20,r20,24
10109910:	98800804 	addi	r2,r19,32
10109914:	98c00615 	stw	r3,24(r19)
10109918:	a0ffff17 	ldw	r3,-4(r20)
1010991c:	98c00715 	stw	r3,28(r19)
10109920:	003fb006 	br	101097e4 <__alt_data_end+0xfffe97e4>

10109924 <__swbuf_r>:
10109924:	defffb04 	addi	sp,sp,-20
10109928:	dcc00315 	stw	r19,12(sp)
1010992c:	dc800215 	stw	r18,8(sp)
10109930:	dc000015 	stw	r16,0(sp)
10109934:	dfc00415 	stw	ra,16(sp)
10109938:	dc400115 	stw	r17,4(sp)
1010993c:	2025883a 	mov	r18,r4
10109940:	2827883a 	mov	r19,r5
10109944:	3021883a 	mov	r16,r6
10109948:	20000226 	beq	r4,zero,10109954 <__swbuf_r+0x30>
1010994c:	20800e17 	ldw	r2,56(r4)
10109950:	10004226 	beq	r2,zero,10109a5c <__swbuf_r+0x138>
10109954:	80800617 	ldw	r2,24(r16)
10109958:	8100030b 	ldhu	r4,12(r16)
1010995c:	80800215 	stw	r2,8(r16)
10109960:	2080020c 	andi	r2,r4,8
10109964:	10003626 	beq	r2,zero,10109a40 <__swbuf_r+0x11c>
10109968:	80c00417 	ldw	r3,16(r16)
1010996c:	18003426 	beq	r3,zero,10109a40 <__swbuf_r+0x11c>
10109970:	2088000c 	andi	r2,r4,8192
10109974:	9c403fcc 	andi	r17,r19,255
10109978:	10001a26 	beq	r2,zero,101099e4 <__swbuf_r+0xc0>
1010997c:	80800017 	ldw	r2,0(r16)
10109980:	81000517 	ldw	r4,20(r16)
10109984:	10c7c83a 	sub	r3,r2,r3
10109988:	1900200e 	bge	r3,r4,10109a0c <__swbuf_r+0xe8>
1010998c:	18c00044 	addi	r3,r3,1
10109990:	81000217 	ldw	r4,8(r16)
10109994:	11400044 	addi	r5,r2,1
10109998:	81400015 	stw	r5,0(r16)
1010999c:	213fffc4 	addi	r4,r4,-1
101099a0:	81000215 	stw	r4,8(r16)
101099a4:	14c00005 	stb	r19,0(r2)
101099a8:	80800517 	ldw	r2,20(r16)
101099ac:	10c01e26 	beq	r2,r3,10109a28 <__swbuf_r+0x104>
101099b0:	8080030b 	ldhu	r2,12(r16)
101099b4:	1080004c 	andi	r2,r2,1
101099b8:	10000226 	beq	r2,zero,101099c4 <__swbuf_r+0xa0>
101099bc:	00800284 	movi	r2,10
101099c0:	88801926 	beq	r17,r2,10109a28 <__swbuf_r+0x104>
101099c4:	8805883a 	mov	r2,r17
101099c8:	dfc00417 	ldw	ra,16(sp)
101099cc:	dcc00317 	ldw	r19,12(sp)
101099d0:	dc800217 	ldw	r18,8(sp)
101099d4:	dc400117 	ldw	r17,4(sp)
101099d8:	dc000017 	ldw	r16,0(sp)
101099dc:	dec00504 	addi	sp,sp,20
101099e0:	f800283a 	ret
101099e4:	81401917 	ldw	r5,100(r16)
101099e8:	00b7ffc4 	movi	r2,-8193
101099ec:	21080014 	ori	r4,r4,8192
101099f0:	2884703a 	and	r2,r5,r2
101099f4:	80801915 	stw	r2,100(r16)
101099f8:	80800017 	ldw	r2,0(r16)
101099fc:	8100030d 	sth	r4,12(r16)
10109a00:	81000517 	ldw	r4,20(r16)
10109a04:	10c7c83a 	sub	r3,r2,r3
10109a08:	193fe016 	blt	r3,r4,1010998c <__alt_data_end+0xfffe998c>
10109a0c:	800b883a 	mov	r5,r16
10109a10:	9009883a 	mov	r4,r18
10109a14:	01046180 	call	10104618 <_fflush_r>
10109a18:	1000071e 	bne	r2,zero,10109a38 <__swbuf_r+0x114>
10109a1c:	80800017 	ldw	r2,0(r16)
10109a20:	00c00044 	movi	r3,1
10109a24:	003fda06 	br	10109990 <__alt_data_end+0xfffe9990>
10109a28:	800b883a 	mov	r5,r16
10109a2c:	9009883a 	mov	r4,r18
10109a30:	01046180 	call	10104618 <_fflush_r>
10109a34:	103fe326 	beq	r2,zero,101099c4 <__alt_data_end+0xfffe99c4>
10109a38:	00bfffc4 	movi	r2,-1
10109a3c:	003fe206 	br	101099c8 <__alt_data_end+0xfffe99c8>
10109a40:	800b883a 	mov	r5,r16
10109a44:	9009883a 	mov	r4,r18
10109a48:	0102a200 	call	10102a20 <__swsetup_r>
10109a4c:	103ffa1e 	bne	r2,zero,10109a38 <__alt_data_end+0xfffe9a38>
10109a50:	8100030b 	ldhu	r4,12(r16)
10109a54:	80c00417 	ldw	r3,16(r16)
10109a58:	003fc506 	br	10109970 <__alt_data_end+0xfffe9970>
10109a5c:	01049f40 	call	101049f4 <__sinit>
10109a60:	003fbc06 	br	10109954 <__alt_data_end+0xfffe9954>

10109a64 <__swbuf>:
10109a64:	00840474 	movhi	r2,4113
10109a68:	10852b04 	addi	r2,r2,5292
10109a6c:	280d883a 	mov	r6,r5
10109a70:	200b883a 	mov	r5,r4
10109a74:	11000017 	ldw	r4,0(r2)
10109a78:	01099241 	jmpi	10109924 <__swbuf_r>

10109a7c <_wcrtomb_r>:
10109a7c:	defff604 	addi	sp,sp,-40
10109a80:	00840474 	movhi	r2,4113
10109a84:	dc800815 	stw	r18,32(sp)
10109a88:	dc400715 	stw	r17,28(sp)
10109a8c:	dc000615 	stw	r16,24(sp)
10109a90:	10852f04 	addi	r2,r2,5308
10109a94:	dfc00915 	stw	ra,36(sp)
10109a98:	2021883a 	mov	r16,r4
10109a9c:	3823883a 	mov	r17,r7
10109aa0:	14800017 	ldw	r18,0(r2)
10109aa4:	28001426 	beq	r5,zero,10109af8 <_wcrtomb_r+0x7c>
10109aa8:	d9400415 	stw	r5,16(sp)
10109aac:	d9800515 	stw	r6,20(sp)
10109ab0:	010507c0 	call	1010507c <__locale_charset>
10109ab4:	d9800517 	ldw	r6,20(sp)
10109ab8:	d9400417 	ldw	r5,16(sp)
10109abc:	100f883a 	mov	r7,r2
10109ac0:	dc400015 	stw	r17,0(sp)
10109ac4:	8009883a 	mov	r4,r16
10109ac8:	903ee83a 	callr	r18
10109acc:	00ffffc4 	movi	r3,-1
10109ad0:	10c0031e 	bne	r2,r3,10109ae0 <_wcrtomb_r+0x64>
10109ad4:	88000015 	stw	zero,0(r17)
10109ad8:	00c02284 	movi	r3,138
10109adc:	80c00015 	stw	r3,0(r16)
10109ae0:	dfc00917 	ldw	ra,36(sp)
10109ae4:	dc800817 	ldw	r18,32(sp)
10109ae8:	dc400717 	ldw	r17,28(sp)
10109aec:	dc000617 	ldw	r16,24(sp)
10109af0:	dec00a04 	addi	sp,sp,40
10109af4:	f800283a 	ret
10109af8:	010507c0 	call	1010507c <__locale_charset>
10109afc:	100f883a 	mov	r7,r2
10109b00:	dc400015 	stw	r17,0(sp)
10109b04:	000d883a 	mov	r6,zero
10109b08:	d9400104 	addi	r5,sp,4
10109b0c:	8009883a 	mov	r4,r16
10109b10:	903ee83a 	callr	r18
10109b14:	003fed06 	br	10109acc <__alt_data_end+0xfffe9acc>

10109b18 <wcrtomb>:
10109b18:	defff604 	addi	sp,sp,-40
10109b1c:	00840474 	movhi	r2,4113
10109b20:	dc800615 	stw	r18,24(sp)
10109b24:	dc400515 	stw	r17,20(sp)
10109b28:	10852b04 	addi	r2,r2,5292
10109b2c:	dfc00915 	stw	ra,36(sp)
10109b30:	dd000815 	stw	r20,32(sp)
10109b34:	dcc00715 	stw	r19,28(sp)
10109b38:	dc000415 	stw	r16,16(sp)
10109b3c:	3025883a 	mov	r18,r6
10109b40:	14400017 	ldw	r17,0(r2)
10109b44:	20001926 	beq	r4,zero,10109bac <wcrtomb+0x94>
10109b48:	00840474 	movhi	r2,4113
10109b4c:	10852f04 	addi	r2,r2,5308
10109b50:	15000017 	ldw	r20,0(r2)
10109b54:	2021883a 	mov	r16,r4
10109b58:	2827883a 	mov	r19,r5
10109b5c:	010507c0 	call	1010507c <__locale_charset>
10109b60:	100f883a 	mov	r7,r2
10109b64:	dc800015 	stw	r18,0(sp)
10109b68:	980d883a 	mov	r6,r19
10109b6c:	800b883a 	mov	r5,r16
10109b70:	8809883a 	mov	r4,r17
10109b74:	a03ee83a 	callr	r20
10109b78:	00ffffc4 	movi	r3,-1
10109b7c:	10c0031e 	bne	r2,r3,10109b8c <wcrtomb+0x74>
10109b80:	90000015 	stw	zero,0(r18)
10109b84:	00c02284 	movi	r3,138
10109b88:	88c00015 	stw	r3,0(r17)
10109b8c:	dfc00917 	ldw	ra,36(sp)
10109b90:	dd000817 	ldw	r20,32(sp)
10109b94:	dcc00717 	ldw	r19,28(sp)
10109b98:	dc800617 	ldw	r18,24(sp)
10109b9c:	dc400517 	ldw	r17,20(sp)
10109ba0:	dc000417 	ldw	r16,16(sp)
10109ba4:	dec00a04 	addi	sp,sp,40
10109ba8:	f800283a 	ret
10109bac:	00840474 	movhi	r2,4113
10109bb0:	10852f04 	addi	r2,r2,5308
10109bb4:	14000017 	ldw	r16,0(r2)
10109bb8:	010507c0 	call	1010507c <__locale_charset>
10109bbc:	100f883a 	mov	r7,r2
10109bc0:	dc800015 	stw	r18,0(sp)
10109bc4:	000d883a 	mov	r6,zero
10109bc8:	d9400104 	addi	r5,sp,4
10109bcc:	8809883a 	mov	r4,r17
10109bd0:	803ee83a 	callr	r16
10109bd4:	003fe806 	br	10109b78 <__alt_data_end+0xfffe9b78>

10109bd8 <__ascii_wctomb>:
10109bd8:	28000526 	beq	r5,zero,10109bf0 <__ascii_wctomb+0x18>
10109bdc:	00803fc4 	movi	r2,255
10109be0:	11800536 	bltu	r2,r6,10109bf8 <__ascii_wctomb+0x20>
10109be4:	29800005 	stb	r6,0(r5)
10109be8:	00800044 	movi	r2,1
10109bec:	f800283a 	ret
10109bf0:	0005883a 	mov	r2,zero
10109bf4:	f800283a 	ret
10109bf8:	00802284 	movi	r2,138
10109bfc:	20800015 	stw	r2,0(r4)
10109c00:	00bfffc4 	movi	r2,-1
10109c04:	f800283a 	ret

10109c08 <_wctomb_r>:
10109c08:	00840474 	movhi	r2,4113
10109c0c:	defff904 	addi	sp,sp,-28
10109c10:	10852f04 	addi	r2,r2,5308
10109c14:	dfc00615 	stw	ra,24(sp)
10109c18:	dc400515 	stw	r17,20(sp)
10109c1c:	dc000415 	stw	r16,16(sp)
10109c20:	3823883a 	mov	r17,r7
10109c24:	14000017 	ldw	r16,0(r2)
10109c28:	d9000115 	stw	r4,4(sp)
10109c2c:	d9400215 	stw	r5,8(sp)
10109c30:	d9800315 	stw	r6,12(sp)
10109c34:	010507c0 	call	1010507c <__locale_charset>
10109c38:	d9800317 	ldw	r6,12(sp)
10109c3c:	d9400217 	ldw	r5,8(sp)
10109c40:	d9000117 	ldw	r4,4(sp)
10109c44:	100f883a 	mov	r7,r2
10109c48:	dc400015 	stw	r17,0(sp)
10109c4c:	803ee83a 	callr	r16
10109c50:	dfc00617 	ldw	ra,24(sp)
10109c54:	dc400517 	ldw	r17,20(sp)
10109c58:	dc000417 	ldw	r16,16(sp)
10109c5c:	dec00704 	addi	sp,sp,28
10109c60:	f800283a 	ret

10109c64 <__udivdi3>:
10109c64:	defff504 	addi	sp,sp,-44
10109c68:	dcc00415 	stw	r19,16(sp)
10109c6c:	dc000115 	stw	r16,4(sp)
10109c70:	dfc00a15 	stw	ra,40(sp)
10109c74:	df000915 	stw	fp,36(sp)
10109c78:	ddc00815 	stw	r23,32(sp)
10109c7c:	dd800715 	stw	r22,28(sp)
10109c80:	dd400615 	stw	r21,24(sp)
10109c84:	dd000515 	stw	r20,20(sp)
10109c88:	dc800315 	stw	r18,12(sp)
10109c8c:	dc400215 	stw	r17,8(sp)
10109c90:	2027883a 	mov	r19,r4
10109c94:	2821883a 	mov	r16,r5
10109c98:	3800411e 	bne	r7,zero,10109da0 <__udivdi3+0x13c>
10109c9c:	3023883a 	mov	r17,r6
10109ca0:	2025883a 	mov	r18,r4
10109ca4:	2980522e 	bgeu	r5,r6,10109df0 <__udivdi3+0x18c>
10109ca8:	00bfffd4 	movui	r2,65535
10109cac:	282d883a 	mov	r22,r5
10109cb0:	1180a836 	bltu	r2,r6,10109f54 <__udivdi3+0x2f0>
10109cb4:	00803fc4 	movi	r2,255
10109cb8:	1185803a 	cmpltu	r2,r2,r6
10109cbc:	100490fa 	slli	r2,r2,3
10109cc0:	3086d83a 	srl	r3,r6,r2
10109cc4:	01040474 	movhi	r4,4113
10109cc8:	213e3204 	addi	r4,r4,-1848
10109ccc:	20c7883a 	add	r3,r4,r3
10109cd0:	18c00003 	ldbu	r3,0(r3)
10109cd4:	1885883a 	add	r2,r3,r2
10109cd8:	00c00804 	movi	r3,32
10109cdc:	1887c83a 	sub	r3,r3,r2
10109ce0:	18000526 	beq	r3,zero,10109cf8 <__udivdi3+0x94>
10109ce4:	80e0983a 	sll	r16,r16,r3
10109ce8:	9884d83a 	srl	r2,r19,r2
10109cec:	30e2983a 	sll	r17,r6,r3
10109cf0:	98e4983a 	sll	r18,r19,r3
10109cf4:	142cb03a 	or	r22,r2,r16
10109cf8:	882ad43a 	srli	r21,r17,16
10109cfc:	b009883a 	mov	r4,r22
10109d00:	8d3fffcc 	andi	r20,r17,65535
10109d04:	a80b883a 	mov	r5,r21
10109d08:	010a8700 	call	1010a870 <__umodsi3>
10109d0c:	b009883a 	mov	r4,r22
10109d10:	a80b883a 	mov	r5,r21
10109d14:	1027883a 	mov	r19,r2
10109d18:	010a80c0 	call	1010a80c <__udivsi3>
10109d1c:	102d883a 	mov	r22,r2
10109d20:	9826943a 	slli	r19,r19,16
10109d24:	9004d43a 	srli	r2,r18,16
10109d28:	a5a1383a 	mul	r16,r20,r22
10109d2c:	14c4b03a 	or	r2,r2,r19
10109d30:	1400052e 	bgeu	r2,r16,10109d48 <__udivdi3+0xe4>
10109d34:	1445883a 	add	r2,r2,r17
10109d38:	b0ffffc4 	addi	r3,r22,-1
10109d3c:	14400136 	bltu	r2,r17,10109d44 <__udivdi3+0xe0>
10109d40:	14012336 	bltu	r2,r16,1010a1d0 <__udivdi3+0x56c>
10109d44:	182d883a 	mov	r22,r3
10109d48:	1421c83a 	sub	r16,r2,r16
10109d4c:	a80b883a 	mov	r5,r21
10109d50:	8009883a 	mov	r4,r16
10109d54:	010a8700 	call	1010a870 <__umodsi3>
10109d58:	1027883a 	mov	r19,r2
10109d5c:	a80b883a 	mov	r5,r21
10109d60:	8009883a 	mov	r4,r16
10109d64:	010a80c0 	call	1010a80c <__udivsi3>
10109d68:	9826943a 	slli	r19,r19,16
10109d6c:	a0a9383a 	mul	r20,r20,r2
10109d70:	94bfffcc 	andi	r18,r18,65535
10109d74:	94e4b03a 	or	r18,r18,r19
10109d78:	9500052e 	bgeu	r18,r20,10109d90 <__udivdi3+0x12c>
10109d7c:	8ca5883a 	add	r18,r17,r18
10109d80:	10ffffc4 	addi	r3,r2,-1
10109d84:	9440f136 	bltu	r18,r17,1010a14c <__udivdi3+0x4e8>
10109d88:	9500f02e 	bgeu	r18,r20,1010a14c <__udivdi3+0x4e8>
10109d8c:	10bfff84 	addi	r2,r2,-2
10109d90:	b00c943a 	slli	r6,r22,16
10109d94:	0007883a 	mov	r3,zero
10109d98:	3084b03a 	or	r2,r6,r2
10109d9c:	00005906 	br	10109f04 <__udivdi3+0x2a0>
10109da0:	29c05636 	bltu	r5,r7,10109efc <__udivdi3+0x298>
10109da4:	00bfffd4 	movui	r2,65535
10109da8:	11c0622e 	bgeu	r2,r7,10109f34 <__udivdi3+0x2d0>
10109dac:	00804034 	movhi	r2,256
10109db0:	10bfffc4 	addi	r2,r2,-1
10109db4:	11c0ee36 	bltu	r2,r7,1010a170 <__udivdi3+0x50c>
10109db8:	00800404 	movi	r2,16
10109dbc:	3886d83a 	srl	r3,r7,r2
10109dc0:	01040474 	movhi	r4,4113
10109dc4:	213e3204 	addi	r4,r4,-1848
10109dc8:	20c7883a 	add	r3,r4,r3
10109dcc:	18c00003 	ldbu	r3,0(r3)
10109dd0:	05400804 	movi	r21,32
10109dd4:	1885883a 	add	r2,r3,r2
10109dd8:	a8abc83a 	sub	r21,r21,r2
10109ddc:	a800621e 	bne	r21,zero,10109f68 <__udivdi3+0x304>
10109de0:	3c00e936 	bltu	r7,r16,1010a188 <__udivdi3+0x524>
10109de4:	9985403a 	cmpgeu	r2,r19,r6
10109de8:	0007883a 	mov	r3,zero
10109dec:	00004506 	br	10109f04 <__udivdi3+0x2a0>
10109df0:	3000041e 	bne	r6,zero,10109e04 <__udivdi3+0x1a0>
10109df4:	000b883a 	mov	r5,zero
10109df8:	01000044 	movi	r4,1
10109dfc:	010a80c0 	call	1010a80c <__udivsi3>
10109e00:	1023883a 	mov	r17,r2
10109e04:	00bfffd4 	movui	r2,65535
10109e08:	14404e2e 	bgeu	r2,r17,10109f44 <__udivdi3+0x2e0>
10109e0c:	00804034 	movhi	r2,256
10109e10:	10bfffc4 	addi	r2,r2,-1
10109e14:	1440d836 	bltu	r2,r17,1010a178 <__udivdi3+0x514>
10109e18:	00800404 	movi	r2,16
10109e1c:	8886d83a 	srl	r3,r17,r2
10109e20:	01040474 	movhi	r4,4113
10109e24:	213e3204 	addi	r4,r4,-1848
10109e28:	20c7883a 	add	r3,r4,r3
10109e2c:	18c00003 	ldbu	r3,0(r3)
10109e30:	1885883a 	add	r2,r3,r2
10109e34:	00c00804 	movi	r3,32
10109e38:	1887c83a 	sub	r3,r3,r2
10109e3c:	18008f1e 	bne	r3,zero,1010a07c <__udivdi3+0x418>
10109e40:	882ad43a 	srli	r21,r17,16
10109e44:	8461c83a 	sub	r16,r16,r17
10109e48:	8d3fffcc 	andi	r20,r17,65535
10109e4c:	00c00044 	movi	r3,1
10109e50:	8009883a 	mov	r4,r16
10109e54:	a80b883a 	mov	r5,r21
10109e58:	d8c00015 	stw	r3,0(sp)
10109e5c:	010a8700 	call	1010a870 <__umodsi3>
10109e60:	8009883a 	mov	r4,r16
10109e64:	a80b883a 	mov	r5,r21
10109e68:	1027883a 	mov	r19,r2
10109e6c:	010a80c0 	call	1010a80c <__udivsi3>
10109e70:	9826943a 	slli	r19,r19,16
10109e74:	9008d43a 	srli	r4,r18,16
10109e78:	1521383a 	mul	r16,r2,r20
10109e7c:	102d883a 	mov	r22,r2
10109e80:	24c8b03a 	or	r4,r4,r19
10109e84:	d8c00017 	ldw	r3,0(sp)
10109e88:	2400052e 	bgeu	r4,r16,10109ea0 <__udivdi3+0x23c>
10109e8c:	2449883a 	add	r4,r4,r17
10109e90:	b0bfffc4 	addi	r2,r22,-1
10109e94:	24400136 	bltu	r4,r17,10109e9c <__udivdi3+0x238>
10109e98:	2400ca36 	bltu	r4,r16,1010a1c4 <__udivdi3+0x560>
10109e9c:	102d883a 	mov	r22,r2
10109ea0:	2421c83a 	sub	r16,r4,r16
10109ea4:	a80b883a 	mov	r5,r21
10109ea8:	8009883a 	mov	r4,r16
10109eac:	d8c00015 	stw	r3,0(sp)
10109eb0:	010a8700 	call	1010a870 <__umodsi3>
10109eb4:	1027883a 	mov	r19,r2
10109eb8:	a80b883a 	mov	r5,r21
10109ebc:	8009883a 	mov	r4,r16
10109ec0:	010a80c0 	call	1010a80c <__udivsi3>
10109ec4:	9826943a 	slli	r19,r19,16
10109ec8:	1529383a 	mul	r20,r2,r20
10109ecc:	94bfffcc 	andi	r18,r18,65535
10109ed0:	94e4b03a 	or	r18,r18,r19
10109ed4:	d8c00017 	ldw	r3,0(sp)
10109ed8:	9500052e 	bgeu	r18,r20,10109ef0 <__udivdi3+0x28c>
10109edc:	8ca5883a 	add	r18,r17,r18
10109ee0:	113fffc4 	addi	r4,r2,-1
10109ee4:	94409736 	bltu	r18,r17,1010a144 <__udivdi3+0x4e0>
10109ee8:	9500962e 	bgeu	r18,r20,1010a144 <__udivdi3+0x4e0>
10109eec:	10bfff84 	addi	r2,r2,-2
10109ef0:	b00c943a 	slli	r6,r22,16
10109ef4:	3084b03a 	or	r2,r6,r2
10109ef8:	00000206 	br	10109f04 <__udivdi3+0x2a0>
10109efc:	0007883a 	mov	r3,zero
10109f00:	0005883a 	mov	r2,zero
10109f04:	dfc00a17 	ldw	ra,40(sp)
10109f08:	df000917 	ldw	fp,36(sp)
10109f0c:	ddc00817 	ldw	r23,32(sp)
10109f10:	dd800717 	ldw	r22,28(sp)
10109f14:	dd400617 	ldw	r21,24(sp)
10109f18:	dd000517 	ldw	r20,20(sp)
10109f1c:	dcc00417 	ldw	r19,16(sp)
10109f20:	dc800317 	ldw	r18,12(sp)
10109f24:	dc400217 	ldw	r17,8(sp)
10109f28:	dc000117 	ldw	r16,4(sp)
10109f2c:	dec00b04 	addi	sp,sp,44
10109f30:	f800283a 	ret
10109f34:	00803fc4 	movi	r2,255
10109f38:	11c5803a 	cmpltu	r2,r2,r7
10109f3c:	100490fa 	slli	r2,r2,3
10109f40:	003f9e06 	br	10109dbc <__alt_data_end+0xfffe9dbc>
10109f44:	00803fc4 	movi	r2,255
10109f48:	1445803a 	cmpltu	r2,r2,r17
10109f4c:	100490fa 	slli	r2,r2,3
10109f50:	003fb206 	br	10109e1c <__alt_data_end+0xfffe9e1c>
10109f54:	00804034 	movhi	r2,256
10109f58:	10bfffc4 	addi	r2,r2,-1
10109f5c:	11808836 	bltu	r2,r6,1010a180 <__udivdi3+0x51c>
10109f60:	00800404 	movi	r2,16
10109f64:	003f5606 	br	10109cc0 <__alt_data_end+0xfffe9cc0>
10109f68:	30aed83a 	srl	r23,r6,r2
10109f6c:	3d4e983a 	sll	r7,r7,r21
10109f70:	80acd83a 	srl	r22,r16,r2
10109f74:	9884d83a 	srl	r2,r19,r2
10109f78:	3deeb03a 	or	r23,r7,r23
10109f7c:	b824d43a 	srli	r18,r23,16
10109f80:	8560983a 	sll	r16,r16,r21
10109f84:	b009883a 	mov	r4,r22
10109f88:	900b883a 	mov	r5,r18
10109f8c:	3568983a 	sll	r20,r6,r21
10109f90:	1420b03a 	or	r16,r2,r16
10109f94:	010a8700 	call	1010a870 <__umodsi3>
10109f98:	b009883a 	mov	r4,r22
10109f9c:	900b883a 	mov	r5,r18
10109fa0:	1023883a 	mov	r17,r2
10109fa4:	010a80c0 	call	1010a80c <__udivsi3>
10109fa8:	8808943a 	slli	r4,r17,16
10109fac:	bf3fffcc 	andi	fp,r23,65535
10109fb0:	8006d43a 	srli	r3,r16,16
10109fb4:	e0a3383a 	mul	r17,fp,r2
10109fb8:	100d883a 	mov	r6,r2
10109fbc:	1906b03a 	or	r3,r3,r4
10109fc0:	1c40042e 	bgeu	r3,r17,10109fd4 <__udivdi3+0x370>
10109fc4:	1dc7883a 	add	r3,r3,r23
10109fc8:	10bfffc4 	addi	r2,r2,-1
10109fcc:	1dc0752e 	bgeu	r3,r23,1010a1a4 <__udivdi3+0x540>
10109fd0:	100d883a 	mov	r6,r2
10109fd4:	1c63c83a 	sub	r17,r3,r17
10109fd8:	900b883a 	mov	r5,r18
10109fdc:	8809883a 	mov	r4,r17
10109fe0:	d9800015 	stw	r6,0(sp)
10109fe4:	010a8700 	call	1010a870 <__umodsi3>
10109fe8:	102d883a 	mov	r22,r2
10109fec:	8809883a 	mov	r4,r17
10109ff0:	900b883a 	mov	r5,r18
10109ff4:	010a80c0 	call	1010a80c <__udivsi3>
10109ff8:	b02c943a 	slli	r22,r22,16
10109ffc:	e089383a 	mul	r4,fp,r2
1010a000:	843fffcc 	andi	r16,r16,65535
1010a004:	85a0b03a 	or	r16,r16,r22
1010a008:	d9800017 	ldw	r6,0(sp)
1010a00c:	8100042e 	bgeu	r16,r4,1010a020 <__udivdi3+0x3bc>
1010a010:	85e1883a 	add	r16,r16,r23
1010a014:	10ffffc4 	addi	r3,r2,-1
1010a018:	85c05e2e 	bgeu	r16,r23,1010a194 <__udivdi3+0x530>
1010a01c:	1805883a 	mov	r2,r3
1010a020:	300c943a 	slli	r6,r6,16
1010a024:	a17fffcc 	andi	r5,r20,65535
1010a028:	a028d43a 	srli	r20,r20,16
1010a02c:	3084b03a 	or	r2,r6,r2
1010a030:	10ffffcc 	andi	r3,r2,65535
1010a034:	100cd43a 	srli	r6,r2,16
1010a038:	194f383a 	mul	r7,r3,r5
1010a03c:	1d07383a 	mul	r3,r3,r20
1010a040:	314b383a 	mul	r5,r6,r5
1010a044:	3810d43a 	srli	r8,r7,16
1010a048:	8121c83a 	sub	r16,r16,r4
1010a04c:	1947883a 	add	r3,r3,r5
1010a050:	40c7883a 	add	r3,r8,r3
1010a054:	350d383a 	mul	r6,r6,r20
1010a058:	1940022e 	bgeu	r3,r5,1010a064 <__udivdi3+0x400>
1010a05c:	01000074 	movhi	r4,1
1010a060:	310d883a 	add	r6,r6,r4
1010a064:	1828d43a 	srli	r20,r3,16
1010a068:	a18d883a 	add	r6,r20,r6
1010a06c:	81803e36 	bltu	r16,r6,1010a168 <__udivdi3+0x504>
1010a070:	81803826 	beq	r16,r6,1010a154 <__udivdi3+0x4f0>
1010a074:	0007883a 	mov	r3,zero
1010a078:	003fa206 	br	10109f04 <__alt_data_end+0xfffe9f04>
1010a07c:	88e2983a 	sll	r17,r17,r3
1010a080:	80a8d83a 	srl	r20,r16,r2
1010a084:	80e0983a 	sll	r16,r16,r3
1010a088:	882ad43a 	srli	r21,r17,16
1010a08c:	9884d83a 	srl	r2,r19,r2
1010a090:	a009883a 	mov	r4,r20
1010a094:	a80b883a 	mov	r5,r21
1010a098:	142eb03a 	or	r23,r2,r16
1010a09c:	98e4983a 	sll	r18,r19,r3
1010a0a0:	010a8700 	call	1010a870 <__umodsi3>
1010a0a4:	a009883a 	mov	r4,r20
1010a0a8:	a80b883a 	mov	r5,r21
1010a0ac:	1021883a 	mov	r16,r2
1010a0b0:	010a80c0 	call	1010a80c <__udivsi3>
1010a0b4:	1039883a 	mov	fp,r2
1010a0b8:	8d3fffcc 	andi	r20,r17,65535
1010a0bc:	8020943a 	slli	r16,r16,16
1010a0c0:	b804d43a 	srli	r2,r23,16
1010a0c4:	a72d383a 	mul	r22,r20,fp
1010a0c8:	1404b03a 	or	r2,r2,r16
1010a0cc:	1580062e 	bgeu	r2,r22,1010a0e8 <__udivdi3+0x484>
1010a0d0:	1445883a 	add	r2,r2,r17
1010a0d4:	e0ffffc4 	addi	r3,fp,-1
1010a0d8:	14403836 	bltu	r2,r17,1010a1bc <__udivdi3+0x558>
1010a0dc:	1580372e 	bgeu	r2,r22,1010a1bc <__udivdi3+0x558>
1010a0e0:	e73fff84 	addi	fp,fp,-2
1010a0e4:	1445883a 	add	r2,r2,r17
1010a0e8:	15adc83a 	sub	r22,r2,r22
1010a0ec:	a80b883a 	mov	r5,r21
1010a0f0:	b009883a 	mov	r4,r22
1010a0f4:	010a8700 	call	1010a870 <__umodsi3>
1010a0f8:	1027883a 	mov	r19,r2
1010a0fc:	b009883a 	mov	r4,r22
1010a100:	a80b883a 	mov	r5,r21
1010a104:	010a80c0 	call	1010a80c <__udivsi3>
1010a108:	9826943a 	slli	r19,r19,16
1010a10c:	a0a1383a 	mul	r16,r20,r2
1010a110:	b93fffcc 	andi	r4,r23,65535
1010a114:	24c8b03a 	or	r4,r4,r19
1010a118:	2400062e 	bgeu	r4,r16,1010a134 <__udivdi3+0x4d0>
1010a11c:	2449883a 	add	r4,r4,r17
1010a120:	10ffffc4 	addi	r3,r2,-1
1010a124:	24402336 	bltu	r4,r17,1010a1b4 <__udivdi3+0x550>
1010a128:	2400222e 	bgeu	r4,r16,1010a1b4 <__udivdi3+0x550>
1010a12c:	10bfff84 	addi	r2,r2,-2
1010a130:	2449883a 	add	r4,r4,r17
1010a134:	e038943a 	slli	fp,fp,16
1010a138:	2421c83a 	sub	r16,r4,r16
1010a13c:	e086b03a 	or	r3,fp,r2
1010a140:	003f4306 	br	10109e50 <__alt_data_end+0xfffe9e50>
1010a144:	2005883a 	mov	r2,r4
1010a148:	003f6906 	br	10109ef0 <__alt_data_end+0xfffe9ef0>
1010a14c:	1805883a 	mov	r2,r3
1010a150:	003f0f06 	br	10109d90 <__alt_data_end+0xfffe9d90>
1010a154:	1806943a 	slli	r3,r3,16
1010a158:	9d66983a 	sll	r19,r19,r21
1010a15c:	39ffffcc 	andi	r7,r7,65535
1010a160:	19c7883a 	add	r3,r3,r7
1010a164:	98ffc32e 	bgeu	r19,r3,1010a074 <__alt_data_end+0xfffea074>
1010a168:	10bfffc4 	addi	r2,r2,-1
1010a16c:	003fc106 	br	1010a074 <__alt_data_end+0xfffea074>
1010a170:	00800604 	movi	r2,24
1010a174:	003f1106 	br	10109dbc <__alt_data_end+0xfffe9dbc>
1010a178:	00800604 	movi	r2,24
1010a17c:	003f2706 	br	10109e1c <__alt_data_end+0xfffe9e1c>
1010a180:	00800604 	movi	r2,24
1010a184:	003ece06 	br	10109cc0 <__alt_data_end+0xfffe9cc0>
1010a188:	0007883a 	mov	r3,zero
1010a18c:	00800044 	movi	r2,1
1010a190:	003f5c06 	br	10109f04 <__alt_data_end+0xfffe9f04>
1010a194:	813fa12e 	bgeu	r16,r4,1010a01c <__alt_data_end+0xfffea01c>
1010a198:	10bfff84 	addi	r2,r2,-2
1010a19c:	85e1883a 	add	r16,r16,r23
1010a1a0:	003f9f06 	br	1010a020 <__alt_data_end+0xfffea020>
1010a1a4:	1c7f8a2e 	bgeu	r3,r17,10109fd0 <__alt_data_end+0xfffe9fd0>
1010a1a8:	31bfff84 	addi	r6,r6,-2
1010a1ac:	1dc7883a 	add	r3,r3,r23
1010a1b0:	003f8806 	br	10109fd4 <__alt_data_end+0xfffe9fd4>
1010a1b4:	1805883a 	mov	r2,r3
1010a1b8:	003fde06 	br	1010a134 <__alt_data_end+0xfffea134>
1010a1bc:	1839883a 	mov	fp,r3
1010a1c0:	003fc906 	br	1010a0e8 <__alt_data_end+0xfffea0e8>
1010a1c4:	b5bfff84 	addi	r22,r22,-2
1010a1c8:	2449883a 	add	r4,r4,r17
1010a1cc:	003f3406 	br	10109ea0 <__alt_data_end+0xfffe9ea0>
1010a1d0:	b5bfff84 	addi	r22,r22,-2
1010a1d4:	1445883a 	add	r2,r2,r17
1010a1d8:	003edb06 	br	10109d48 <__alt_data_end+0xfffe9d48>

1010a1dc <__umoddi3>:
1010a1dc:	defff404 	addi	sp,sp,-48
1010a1e0:	df000a15 	stw	fp,40(sp)
1010a1e4:	dc400315 	stw	r17,12(sp)
1010a1e8:	dc000215 	stw	r16,8(sp)
1010a1ec:	dfc00b15 	stw	ra,44(sp)
1010a1f0:	ddc00915 	stw	r23,36(sp)
1010a1f4:	dd800815 	stw	r22,32(sp)
1010a1f8:	dd400715 	stw	r21,28(sp)
1010a1fc:	dd000615 	stw	r20,24(sp)
1010a200:	dcc00515 	stw	r19,20(sp)
1010a204:	dc800415 	stw	r18,16(sp)
1010a208:	2021883a 	mov	r16,r4
1010a20c:	2823883a 	mov	r17,r5
1010a210:	2839883a 	mov	fp,r5
1010a214:	38003c1e 	bne	r7,zero,1010a308 <__umoddi3+0x12c>
1010a218:	3027883a 	mov	r19,r6
1010a21c:	2029883a 	mov	r20,r4
1010a220:	2980512e 	bgeu	r5,r6,1010a368 <__umoddi3+0x18c>
1010a224:	00bfffd4 	movui	r2,65535
1010a228:	11809a36 	bltu	r2,r6,1010a494 <__umoddi3+0x2b8>
1010a22c:	01003fc4 	movi	r4,255
1010a230:	2189803a 	cmpltu	r4,r4,r6
1010a234:	200890fa 	slli	r4,r4,3
1010a238:	3104d83a 	srl	r2,r6,r4
1010a23c:	00c40474 	movhi	r3,4113
1010a240:	18fe3204 	addi	r3,r3,-1848
1010a244:	1885883a 	add	r2,r3,r2
1010a248:	10c00003 	ldbu	r3,0(r2)
1010a24c:	00800804 	movi	r2,32
1010a250:	1909883a 	add	r4,r3,r4
1010a254:	1125c83a 	sub	r18,r2,r4
1010a258:	90000526 	beq	r18,zero,1010a270 <__umoddi3+0x94>
1010a25c:	8ca2983a 	sll	r17,r17,r18
1010a260:	8108d83a 	srl	r4,r16,r4
1010a264:	34a6983a 	sll	r19,r6,r18
1010a268:	84a8983a 	sll	r20,r16,r18
1010a26c:	2478b03a 	or	fp,r4,r17
1010a270:	982ed43a 	srli	r23,r19,16
1010a274:	e009883a 	mov	r4,fp
1010a278:	9dbfffcc 	andi	r22,r19,65535
1010a27c:	b80b883a 	mov	r5,r23
1010a280:	010a8700 	call	1010a870 <__umodsi3>
1010a284:	e009883a 	mov	r4,fp
1010a288:	b80b883a 	mov	r5,r23
1010a28c:	102b883a 	mov	r21,r2
1010a290:	010a80c0 	call	1010a80c <__udivsi3>
1010a294:	a806943a 	slli	r3,r21,16
1010a298:	a008d43a 	srli	r4,r20,16
1010a29c:	b085383a 	mul	r2,r22,r2
1010a2a0:	20c8b03a 	or	r4,r4,r3
1010a2a4:	2080032e 	bgeu	r4,r2,1010a2b4 <__umoddi3+0xd8>
1010a2a8:	24c9883a 	add	r4,r4,r19
1010a2ac:	24c00136 	bltu	r4,r19,1010a2b4 <__umoddi3+0xd8>
1010a2b0:	20811036 	bltu	r4,r2,1010a6f4 <__umoddi3+0x518>
1010a2b4:	20abc83a 	sub	r21,r4,r2
1010a2b8:	b80b883a 	mov	r5,r23
1010a2bc:	a809883a 	mov	r4,r21
1010a2c0:	010a8700 	call	1010a870 <__umodsi3>
1010a2c4:	1023883a 	mov	r17,r2
1010a2c8:	b80b883a 	mov	r5,r23
1010a2cc:	a809883a 	mov	r4,r21
1010a2d0:	010a80c0 	call	1010a80c <__udivsi3>
1010a2d4:	8822943a 	slli	r17,r17,16
1010a2d8:	b085383a 	mul	r2,r22,r2
1010a2dc:	a0ffffcc 	andi	r3,r20,65535
1010a2e0:	1c46b03a 	or	r3,r3,r17
1010a2e4:	1880042e 	bgeu	r3,r2,1010a2f8 <__umoddi3+0x11c>
1010a2e8:	1cc7883a 	add	r3,r3,r19
1010a2ec:	1cc00236 	bltu	r3,r19,1010a2f8 <__umoddi3+0x11c>
1010a2f0:	1880012e 	bgeu	r3,r2,1010a2f8 <__umoddi3+0x11c>
1010a2f4:	1cc7883a 	add	r3,r3,r19
1010a2f8:	1885c83a 	sub	r2,r3,r2
1010a2fc:	1484d83a 	srl	r2,r2,r18
1010a300:	0007883a 	mov	r3,zero
1010a304:	00004f06 	br	1010a444 <__umoddi3+0x268>
1010a308:	29c04c36 	bltu	r5,r7,1010a43c <__umoddi3+0x260>
1010a30c:	00bfffd4 	movui	r2,65535
1010a310:	11c0582e 	bgeu	r2,r7,1010a474 <__umoddi3+0x298>
1010a314:	00804034 	movhi	r2,256
1010a318:	10bfffc4 	addi	r2,r2,-1
1010a31c:	11c0e736 	bltu	r2,r7,1010a6bc <__umoddi3+0x4e0>
1010a320:	01000404 	movi	r4,16
1010a324:	3904d83a 	srl	r2,r7,r4
1010a328:	00c40474 	movhi	r3,4113
1010a32c:	18fe3204 	addi	r3,r3,-1848
1010a330:	1885883a 	add	r2,r3,r2
1010a334:	14c00003 	ldbu	r19,0(r2)
1010a338:	00c00804 	movi	r3,32
1010a33c:	9927883a 	add	r19,r19,r4
1010a340:	1ce9c83a 	sub	r20,r3,r19
1010a344:	a000581e 	bne	r20,zero,1010a4a8 <__umoddi3+0x2cc>
1010a348:	3c400136 	bltu	r7,r17,1010a350 <__umoddi3+0x174>
1010a34c:	8180eb36 	bltu	r16,r6,1010a6fc <__umoddi3+0x520>
1010a350:	8185c83a 	sub	r2,r16,r6
1010a354:	89e3c83a 	sub	r17,r17,r7
1010a358:	8089803a 	cmpltu	r4,r16,r2
1010a35c:	8939c83a 	sub	fp,r17,r4
1010a360:	e007883a 	mov	r3,fp
1010a364:	00003706 	br	1010a444 <__umoddi3+0x268>
1010a368:	3000041e 	bne	r6,zero,1010a37c <__umoddi3+0x1a0>
1010a36c:	000b883a 	mov	r5,zero
1010a370:	01000044 	movi	r4,1
1010a374:	010a80c0 	call	1010a80c <__udivsi3>
1010a378:	1027883a 	mov	r19,r2
1010a37c:	00bfffd4 	movui	r2,65535
1010a380:	14c0402e 	bgeu	r2,r19,1010a484 <__umoddi3+0x2a8>
1010a384:	00804034 	movhi	r2,256
1010a388:	10bfffc4 	addi	r2,r2,-1
1010a38c:	14c0cd36 	bltu	r2,r19,1010a6c4 <__umoddi3+0x4e8>
1010a390:	00800404 	movi	r2,16
1010a394:	9886d83a 	srl	r3,r19,r2
1010a398:	01040474 	movhi	r4,4113
1010a39c:	213e3204 	addi	r4,r4,-1848
1010a3a0:	20c7883a 	add	r3,r4,r3
1010a3a4:	18c00003 	ldbu	r3,0(r3)
1010a3a8:	1887883a 	add	r3,r3,r2
1010a3ac:	00800804 	movi	r2,32
1010a3b0:	10e5c83a 	sub	r18,r2,r3
1010a3b4:	9000901e 	bne	r18,zero,1010a5f8 <__umoddi3+0x41c>
1010a3b8:	982cd43a 	srli	r22,r19,16
1010a3bc:	8ce3c83a 	sub	r17,r17,r19
1010a3c0:	9d7fffcc 	andi	r21,r19,65535
1010a3c4:	b00b883a 	mov	r5,r22
1010a3c8:	8809883a 	mov	r4,r17
1010a3cc:	010a8700 	call	1010a870 <__umodsi3>
1010a3d0:	8809883a 	mov	r4,r17
1010a3d4:	b00b883a 	mov	r5,r22
1010a3d8:	1021883a 	mov	r16,r2
1010a3dc:	010a80c0 	call	1010a80c <__udivsi3>
1010a3e0:	8006943a 	slli	r3,r16,16
1010a3e4:	a008d43a 	srli	r4,r20,16
1010a3e8:	1545383a 	mul	r2,r2,r21
1010a3ec:	20c8b03a 	or	r4,r4,r3
1010a3f0:	2080042e 	bgeu	r4,r2,1010a404 <__umoddi3+0x228>
1010a3f4:	24c9883a 	add	r4,r4,r19
1010a3f8:	24c00236 	bltu	r4,r19,1010a404 <__umoddi3+0x228>
1010a3fc:	2080012e 	bgeu	r4,r2,1010a404 <__umoddi3+0x228>
1010a400:	24c9883a 	add	r4,r4,r19
1010a404:	20a1c83a 	sub	r16,r4,r2
1010a408:	b00b883a 	mov	r5,r22
1010a40c:	8009883a 	mov	r4,r16
1010a410:	010a8700 	call	1010a870 <__umodsi3>
1010a414:	1023883a 	mov	r17,r2
1010a418:	b00b883a 	mov	r5,r22
1010a41c:	8009883a 	mov	r4,r16
1010a420:	010a80c0 	call	1010a80c <__udivsi3>
1010a424:	8822943a 	slli	r17,r17,16
1010a428:	1545383a 	mul	r2,r2,r21
1010a42c:	a53fffcc 	andi	r20,r20,65535
1010a430:	a446b03a 	or	r3,r20,r17
1010a434:	18bfb02e 	bgeu	r3,r2,1010a2f8 <__alt_data_end+0xfffea2f8>
1010a438:	003fab06 	br	1010a2e8 <__alt_data_end+0xfffea2e8>
1010a43c:	2005883a 	mov	r2,r4
1010a440:	2807883a 	mov	r3,r5
1010a444:	dfc00b17 	ldw	ra,44(sp)
1010a448:	df000a17 	ldw	fp,40(sp)
1010a44c:	ddc00917 	ldw	r23,36(sp)
1010a450:	dd800817 	ldw	r22,32(sp)
1010a454:	dd400717 	ldw	r21,28(sp)
1010a458:	dd000617 	ldw	r20,24(sp)
1010a45c:	dcc00517 	ldw	r19,20(sp)
1010a460:	dc800417 	ldw	r18,16(sp)
1010a464:	dc400317 	ldw	r17,12(sp)
1010a468:	dc000217 	ldw	r16,8(sp)
1010a46c:	dec00c04 	addi	sp,sp,48
1010a470:	f800283a 	ret
1010a474:	04c03fc4 	movi	r19,255
1010a478:	99c9803a 	cmpltu	r4,r19,r7
1010a47c:	200890fa 	slli	r4,r4,3
1010a480:	003fa806 	br	1010a324 <__alt_data_end+0xfffea324>
1010a484:	00803fc4 	movi	r2,255
1010a488:	14c5803a 	cmpltu	r2,r2,r19
1010a48c:	100490fa 	slli	r2,r2,3
1010a490:	003fc006 	br	1010a394 <__alt_data_end+0xfffea394>
1010a494:	00804034 	movhi	r2,256
1010a498:	10bfffc4 	addi	r2,r2,-1
1010a49c:	11808b36 	bltu	r2,r6,1010a6cc <__umoddi3+0x4f0>
1010a4a0:	01000404 	movi	r4,16
1010a4a4:	003f6406 	br	1010a238 <__alt_data_end+0xfffea238>
1010a4a8:	34c4d83a 	srl	r2,r6,r19
1010a4ac:	3d0e983a 	sll	r7,r7,r20
1010a4b0:	8cf8d83a 	srl	fp,r17,r19
1010a4b4:	8d10983a 	sll	r8,r17,r20
1010a4b8:	38aab03a 	or	r21,r7,r2
1010a4bc:	a82cd43a 	srli	r22,r21,16
1010a4c0:	84e2d83a 	srl	r17,r16,r19
1010a4c4:	e009883a 	mov	r4,fp
1010a4c8:	b00b883a 	mov	r5,r22
1010a4cc:	8a22b03a 	or	r17,r17,r8
1010a4d0:	3524983a 	sll	r18,r6,r20
1010a4d4:	010a8700 	call	1010a870 <__umodsi3>
1010a4d8:	e009883a 	mov	r4,fp
1010a4dc:	b00b883a 	mov	r5,r22
1010a4e0:	102f883a 	mov	r23,r2
1010a4e4:	010a80c0 	call	1010a80c <__udivsi3>
1010a4e8:	100d883a 	mov	r6,r2
1010a4ec:	b808943a 	slli	r4,r23,16
1010a4f0:	aa3fffcc 	andi	r8,r21,65535
1010a4f4:	8804d43a 	srli	r2,r17,16
1010a4f8:	41af383a 	mul	r23,r8,r6
1010a4fc:	8520983a 	sll	r16,r16,r20
1010a500:	1104b03a 	or	r2,r2,r4
1010a504:	15c0042e 	bgeu	r2,r23,1010a518 <__umoddi3+0x33c>
1010a508:	1545883a 	add	r2,r2,r21
1010a50c:	30ffffc4 	addi	r3,r6,-1
1010a510:	1540742e 	bgeu	r2,r21,1010a6e4 <__umoddi3+0x508>
1010a514:	180d883a 	mov	r6,r3
1010a518:	15efc83a 	sub	r23,r2,r23
1010a51c:	b00b883a 	mov	r5,r22
1010a520:	b809883a 	mov	r4,r23
1010a524:	d9800115 	stw	r6,4(sp)
1010a528:	da000015 	stw	r8,0(sp)
1010a52c:	010a8700 	call	1010a870 <__umodsi3>
1010a530:	b00b883a 	mov	r5,r22
1010a534:	b809883a 	mov	r4,r23
1010a538:	1039883a 	mov	fp,r2
1010a53c:	010a80c0 	call	1010a80c <__udivsi3>
1010a540:	da000017 	ldw	r8,0(sp)
1010a544:	e038943a 	slli	fp,fp,16
1010a548:	100b883a 	mov	r5,r2
1010a54c:	4089383a 	mul	r4,r8,r2
1010a550:	8a3fffcc 	andi	r8,r17,65535
1010a554:	4710b03a 	or	r8,r8,fp
1010a558:	d9800117 	ldw	r6,4(sp)
1010a55c:	4100042e 	bgeu	r8,r4,1010a570 <__umoddi3+0x394>
1010a560:	4551883a 	add	r8,r8,r21
1010a564:	10bfffc4 	addi	r2,r2,-1
1010a568:	45405a2e 	bgeu	r8,r21,1010a6d4 <__umoddi3+0x4f8>
1010a56c:	100b883a 	mov	r5,r2
1010a570:	300c943a 	slli	r6,r6,16
1010a574:	91ffffcc 	andi	r7,r18,65535
1010a578:	9004d43a 	srli	r2,r18,16
1010a57c:	314cb03a 	or	r6,r6,r5
1010a580:	317fffcc 	andi	r5,r6,65535
1010a584:	300cd43a 	srli	r6,r6,16
1010a588:	29d3383a 	mul	r9,r5,r7
1010a58c:	288b383a 	mul	r5,r5,r2
1010a590:	31cf383a 	mul	r7,r6,r7
1010a594:	4806d43a 	srli	r3,r9,16
1010a598:	4111c83a 	sub	r8,r8,r4
1010a59c:	29cb883a 	add	r5,r5,r7
1010a5a0:	194b883a 	add	r5,r3,r5
1010a5a4:	3085383a 	mul	r2,r6,r2
1010a5a8:	29c0022e 	bgeu	r5,r7,1010a5b4 <__umoddi3+0x3d8>
1010a5ac:	00c00074 	movhi	r3,1
1010a5b0:	10c5883a 	add	r2,r2,r3
1010a5b4:	2808d43a 	srli	r4,r5,16
1010a5b8:	280a943a 	slli	r5,r5,16
1010a5bc:	4a7fffcc 	andi	r9,r9,65535
1010a5c0:	2085883a 	add	r2,r4,r2
1010a5c4:	2a4b883a 	add	r5,r5,r9
1010a5c8:	40803636 	bltu	r8,r2,1010a6a4 <__umoddi3+0x4c8>
1010a5cc:	40804d26 	beq	r8,r2,1010a704 <__umoddi3+0x528>
1010a5d0:	4089c83a 	sub	r4,r8,r2
1010a5d4:	280f883a 	mov	r7,r5
1010a5d8:	81cfc83a 	sub	r7,r16,r7
1010a5dc:	81c7803a 	cmpltu	r3,r16,r7
1010a5e0:	20c7c83a 	sub	r3,r4,r3
1010a5e4:	1cc4983a 	sll	r2,r3,r19
1010a5e8:	3d0ed83a 	srl	r7,r7,r20
1010a5ec:	1d06d83a 	srl	r3,r3,r20
1010a5f0:	11c4b03a 	or	r2,r2,r7
1010a5f4:	003f9306 	br	1010a444 <__alt_data_end+0xfffea444>
1010a5f8:	9ca6983a 	sll	r19,r19,r18
1010a5fc:	88e8d83a 	srl	r20,r17,r3
1010a600:	80c4d83a 	srl	r2,r16,r3
1010a604:	982cd43a 	srli	r22,r19,16
1010a608:	8ca2983a 	sll	r17,r17,r18
1010a60c:	a009883a 	mov	r4,r20
1010a610:	b00b883a 	mov	r5,r22
1010a614:	1478b03a 	or	fp,r2,r17
1010a618:	010a8700 	call	1010a870 <__umodsi3>
1010a61c:	a009883a 	mov	r4,r20
1010a620:	b00b883a 	mov	r5,r22
1010a624:	1023883a 	mov	r17,r2
1010a628:	010a80c0 	call	1010a80c <__udivsi3>
1010a62c:	9d7fffcc 	andi	r21,r19,65535
1010a630:	880a943a 	slli	r5,r17,16
1010a634:	e008d43a 	srli	r4,fp,16
1010a638:	a885383a 	mul	r2,r21,r2
1010a63c:	84a8983a 	sll	r20,r16,r18
1010a640:	2148b03a 	or	r4,r4,r5
1010a644:	2080042e 	bgeu	r4,r2,1010a658 <__umoddi3+0x47c>
1010a648:	24c9883a 	add	r4,r4,r19
1010a64c:	24c00236 	bltu	r4,r19,1010a658 <__umoddi3+0x47c>
1010a650:	2080012e 	bgeu	r4,r2,1010a658 <__umoddi3+0x47c>
1010a654:	24c9883a 	add	r4,r4,r19
1010a658:	20a3c83a 	sub	r17,r4,r2
1010a65c:	b00b883a 	mov	r5,r22
1010a660:	8809883a 	mov	r4,r17
1010a664:	010a8700 	call	1010a870 <__umodsi3>
1010a668:	102f883a 	mov	r23,r2
1010a66c:	8809883a 	mov	r4,r17
1010a670:	b00b883a 	mov	r5,r22
1010a674:	010a80c0 	call	1010a80c <__udivsi3>
1010a678:	b82e943a 	slli	r23,r23,16
1010a67c:	a885383a 	mul	r2,r21,r2
1010a680:	e13fffcc 	andi	r4,fp,65535
1010a684:	25c8b03a 	or	r4,r4,r23
1010a688:	2080042e 	bgeu	r4,r2,1010a69c <__umoddi3+0x4c0>
1010a68c:	24c9883a 	add	r4,r4,r19
1010a690:	24c00236 	bltu	r4,r19,1010a69c <__umoddi3+0x4c0>
1010a694:	2080012e 	bgeu	r4,r2,1010a69c <__umoddi3+0x4c0>
1010a698:	24c9883a 	add	r4,r4,r19
1010a69c:	20a3c83a 	sub	r17,r4,r2
1010a6a0:	003f4806 	br	1010a3c4 <__alt_data_end+0xfffea3c4>
1010a6a4:	2c8fc83a 	sub	r7,r5,r18
1010a6a8:	1545c83a 	sub	r2,r2,r21
1010a6ac:	29cb803a 	cmpltu	r5,r5,r7
1010a6b0:	1145c83a 	sub	r2,r2,r5
1010a6b4:	4089c83a 	sub	r4,r8,r2
1010a6b8:	003fc706 	br	1010a5d8 <__alt_data_end+0xfffea5d8>
1010a6bc:	01000604 	movi	r4,24
1010a6c0:	003f1806 	br	1010a324 <__alt_data_end+0xfffea324>
1010a6c4:	00800604 	movi	r2,24
1010a6c8:	003f3206 	br	1010a394 <__alt_data_end+0xfffea394>
1010a6cc:	01000604 	movi	r4,24
1010a6d0:	003ed906 	br	1010a238 <__alt_data_end+0xfffea238>
1010a6d4:	413fa52e 	bgeu	r8,r4,1010a56c <__alt_data_end+0xfffea56c>
1010a6d8:	297fff84 	addi	r5,r5,-2
1010a6dc:	4551883a 	add	r8,r8,r21
1010a6e0:	003fa306 	br	1010a570 <__alt_data_end+0xfffea570>
1010a6e4:	15ff8b2e 	bgeu	r2,r23,1010a514 <__alt_data_end+0xfffea514>
1010a6e8:	31bfff84 	addi	r6,r6,-2
1010a6ec:	1545883a 	add	r2,r2,r21
1010a6f0:	003f8906 	br	1010a518 <__alt_data_end+0xfffea518>
1010a6f4:	24c9883a 	add	r4,r4,r19
1010a6f8:	003eee06 	br	1010a2b4 <__alt_data_end+0xfffea2b4>
1010a6fc:	8005883a 	mov	r2,r16
1010a700:	003f1706 	br	1010a360 <__alt_data_end+0xfffea360>
1010a704:	817fe736 	bltu	r16,r5,1010a6a4 <__alt_data_end+0xfffea6a4>
1010a708:	280f883a 	mov	r7,r5
1010a70c:	0009883a 	mov	r4,zero
1010a710:	003fb106 	br	1010a5d8 <__alt_data_end+0xfffea5d8>

1010a714 <__divsi3>:
1010a714:	20001b16 	blt	r4,zero,1010a784 <__divsi3+0x70>
1010a718:	000f883a 	mov	r7,zero
1010a71c:	28001616 	blt	r5,zero,1010a778 <__divsi3+0x64>
1010a720:	200d883a 	mov	r6,r4
1010a724:	29001a2e 	bgeu	r5,r4,1010a790 <__divsi3+0x7c>
1010a728:	00800804 	movi	r2,32
1010a72c:	00c00044 	movi	r3,1
1010a730:	00000106 	br	1010a738 <__divsi3+0x24>
1010a734:	10000d26 	beq	r2,zero,1010a76c <__divsi3+0x58>
1010a738:	294b883a 	add	r5,r5,r5
1010a73c:	10bfffc4 	addi	r2,r2,-1
1010a740:	18c7883a 	add	r3,r3,r3
1010a744:	293ffb36 	bltu	r5,r4,1010a734 <__alt_data_end+0xfffea734>
1010a748:	0005883a 	mov	r2,zero
1010a74c:	18000726 	beq	r3,zero,1010a76c <__divsi3+0x58>
1010a750:	0005883a 	mov	r2,zero
1010a754:	31400236 	bltu	r6,r5,1010a760 <__divsi3+0x4c>
1010a758:	314dc83a 	sub	r6,r6,r5
1010a75c:	10c4b03a 	or	r2,r2,r3
1010a760:	1806d07a 	srli	r3,r3,1
1010a764:	280ad07a 	srli	r5,r5,1
1010a768:	183ffa1e 	bne	r3,zero,1010a754 <__alt_data_end+0xfffea754>
1010a76c:	38000126 	beq	r7,zero,1010a774 <__divsi3+0x60>
1010a770:	0085c83a 	sub	r2,zero,r2
1010a774:	f800283a 	ret
1010a778:	014bc83a 	sub	r5,zero,r5
1010a77c:	39c0005c 	xori	r7,r7,1
1010a780:	003fe706 	br	1010a720 <__alt_data_end+0xfffea720>
1010a784:	0109c83a 	sub	r4,zero,r4
1010a788:	01c00044 	movi	r7,1
1010a78c:	003fe306 	br	1010a71c <__alt_data_end+0xfffea71c>
1010a790:	00c00044 	movi	r3,1
1010a794:	003fee06 	br	1010a750 <__alt_data_end+0xfffea750>

1010a798 <__modsi3>:
1010a798:	20001716 	blt	r4,zero,1010a7f8 <__modsi3+0x60>
1010a79c:	000f883a 	mov	r7,zero
1010a7a0:	2005883a 	mov	r2,r4
1010a7a4:	28001216 	blt	r5,zero,1010a7f0 <__modsi3+0x58>
1010a7a8:	2900162e 	bgeu	r5,r4,1010a804 <__modsi3+0x6c>
1010a7ac:	01800804 	movi	r6,32
1010a7b0:	00c00044 	movi	r3,1
1010a7b4:	00000106 	br	1010a7bc <__modsi3+0x24>
1010a7b8:	30000a26 	beq	r6,zero,1010a7e4 <__modsi3+0x4c>
1010a7bc:	294b883a 	add	r5,r5,r5
1010a7c0:	31bfffc4 	addi	r6,r6,-1
1010a7c4:	18c7883a 	add	r3,r3,r3
1010a7c8:	293ffb36 	bltu	r5,r4,1010a7b8 <__alt_data_end+0xfffea7b8>
1010a7cc:	18000526 	beq	r3,zero,1010a7e4 <__modsi3+0x4c>
1010a7d0:	1806d07a 	srli	r3,r3,1
1010a7d4:	11400136 	bltu	r2,r5,1010a7dc <__modsi3+0x44>
1010a7d8:	1145c83a 	sub	r2,r2,r5
1010a7dc:	280ad07a 	srli	r5,r5,1
1010a7e0:	183ffb1e 	bne	r3,zero,1010a7d0 <__alt_data_end+0xfffea7d0>
1010a7e4:	38000126 	beq	r7,zero,1010a7ec <__modsi3+0x54>
1010a7e8:	0085c83a 	sub	r2,zero,r2
1010a7ec:	f800283a 	ret
1010a7f0:	014bc83a 	sub	r5,zero,r5
1010a7f4:	003fec06 	br	1010a7a8 <__alt_data_end+0xfffea7a8>
1010a7f8:	0109c83a 	sub	r4,zero,r4
1010a7fc:	01c00044 	movi	r7,1
1010a800:	003fe706 	br	1010a7a0 <__alt_data_end+0xfffea7a0>
1010a804:	00c00044 	movi	r3,1
1010a808:	003ff106 	br	1010a7d0 <__alt_data_end+0xfffea7d0>

1010a80c <__udivsi3>:
1010a80c:	200d883a 	mov	r6,r4
1010a810:	2900152e 	bgeu	r5,r4,1010a868 <__udivsi3+0x5c>
1010a814:	28001416 	blt	r5,zero,1010a868 <__udivsi3+0x5c>
1010a818:	00800804 	movi	r2,32
1010a81c:	00c00044 	movi	r3,1
1010a820:	00000206 	br	1010a82c <__udivsi3+0x20>
1010a824:	10000e26 	beq	r2,zero,1010a860 <__udivsi3+0x54>
1010a828:	28000516 	blt	r5,zero,1010a840 <__udivsi3+0x34>
1010a82c:	294b883a 	add	r5,r5,r5
1010a830:	10bfffc4 	addi	r2,r2,-1
1010a834:	18c7883a 	add	r3,r3,r3
1010a838:	293ffa36 	bltu	r5,r4,1010a824 <__alt_data_end+0xfffea824>
1010a83c:	18000826 	beq	r3,zero,1010a860 <__udivsi3+0x54>
1010a840:	0005883a 	mov	r2,zero
1010a844:	31400236 	bltu	r6,r5,1010a850 <__udivsi3+0x44>
1010a848:	314dc83a 	sub	r6,r6,r5
1010a84c:	10c4b03a 	or	r2,r2,r3
1010a850:	1806d07a 	srli	r3,r3,1
1010a854:	280ad07a 	srli	r5,r5,1
1010a858:	183ffa1e 	bne	r3,zero,1010a844 <__alt_data_end+0xfffea844>
1010a85c:	f800283a 	ret
1010a860:	0005883a 	mov	r2,zero
1010a864:	f800283a 	ret
1010a868:	00c00044 	movi	r3,1
1010a86c:	003ff406 	br	1010a840 <__alt_data_end+0xfffea840>

1010a870 <__umodsi3>:
1010a870:	2005883a 	mov	r2,r4
1010a874:	2900122e 	bgeu	r5,r4,1010a8c0 <__umodsi3+0x50>
1010a878:	28001116 	blt	r5,zero,1010a8c0 <__umodsi3+0x50>
1010a87c:	01800804 	movi	r6,32
1010a880:	00c00044 	movi	r3,1
1010a884:	00000206 	br	1010a890 <__umodsi3+0x20>
1010a888:	30000c26 	beq	r6,zero,1010a8bc <__umodsi3+0x4c>
1010a88c:	28000516 	blt	r5,zero,1010a8a4 <__umodsi3+0x34>
1010a890:	294b883a 	add	r5,r5,r5
1010a894:	31bfffc4 	addi	r6,r6,-1
1010a898:	18c7883a 	add	r3,r3,r3
1010a89c:	293ffa36 	bltu	r5,r4,1010a888 <__alt_data_end+0xfffea888>
1010a8a0:	18000626 	beq	r3,zero,1010a8bc <__umodsi3+0x4c>
1010a8a4:	1806d07a 	srli	r3,r3,1
1010a8a8:	11400136 	bltu	r2,r5,1010a8b0 <__umodsi3+0x40>
1010a8ac:	1145c83a 	sub	r2,r2,r5
1010a8b0:	280ad07a 	srli	r5,r5,1
1010a8b4:	183ffb1e 	bne	r3,zero,1010a8a4 <__alt_data_end+0xfffea8a4>
1010a8b8:	f800283a 	ret
1010a8bc:	f800283a 	ret
1010a8c0:	00c00044 	movi	r3,1
1010a8c4:	003ff706 	br	1010a8a4 <__alt_data_end+0xfffea8a4>

1010a8c8 <__adddf3>:
1010a8c8:	02c00434 	movhi	r11,16
1010a8cc:	5affffc4 	addi	r11,r11,-1
1010a8d0:	2806d7fa 	srli	r3,r5,31
1010a8d4:	2ad4703a 	and	r10,r5,r11
1010a8d8:	3ad2703a 	and	r9,r7,r11
1010a8dc:	3804d53a 	srli	r2,r7,20
1010a8e0:	3018d77a 	srli	r12,r6,29
1010a8e4:	280ad53a 	srli	r5,r5,20
1010a8e8:	501490fa 	slli	r10,r10,3
1010a8ec:	2010d77a 	srli	r8,r4,29
1010a8f0:	481290fa 	slli	r9,r9,3
1010a8f4:	380ed7fa 	srli	r7,r7,31
1010a8f8:	defffb04 	addi	sp,sp,-20
1010a8fc:	dc800215 	stw	r18,8(sp)
1010a900:	dc400115 	stw	r17,4(sp)
1010a904:	dc000015 	stw	r16,0(sp)
1010a908:	dfc00415 	stw	ra,16(sp)
1010a90c:	dcc00315 	stw	r19,12(sp)
1010a910:	1c803fcc 	andi	r18,r3,255
1010a914:	2c01ffcc 	andi	r16,r5,2047
1010a918:	5210b03a 	or	r8,r10,r8
1010a91c:	202290fa 	slli	r17,r4,3
1010a920:	1081ffcc 	andi	r2,r2,2047
1010a924:	4b12b03a 	or	r9,r9,r12
1010a928:	300c90fa 	slli	r6,r6,3
1010a92c:	91c07526 	beq	r18,r7,1010ab04 <__adddf3+0x23c>
1010a930:	8087c83a 	sub	r3,r16,r2
1010a934:	00c0ab0e 	bge	zero,r3,1010abe4 <__adddf3+0x31c>
1010a938:	10002a1e 	bne	r2,zero,1010a9e4 <__adddf3+0x11c>
1010a93c:	4984b03a 	or	r2,r9,r6
1010a940:	1000961e 	bne	r2,zero,1010ab9c <__adddf3+0x2d4>
1010a944:	888001cc 	andi	r2,r17,7
1010a948:	10000726 	beq	r2,zero,1010a968 <__adddf3+0xa0>
1010a94c:	888003cc 	andi	r2,r17,15
1010a950:	00c00104 	movi	r3,4
1010a954:	10c00426 	beq	r2,r3,1010a968 <__adddf3+0xa0>
1010a958:	88c7883a 	add	r3,r17,r3
1010a95c:	1c63803a 	cmpltu	r17,r3,r17
1010a960:	4451883a 	add	r8,r8,r17
1010a964:	1823883a 	mov	r17,r3
1010a968:	4080202c 	andhi	r2,r8,128
1010a96c:	10005926 	beq	r2,zero,1010aad4 <__adddf3+0x20c>
1010a970:	84000044 	addi	r16,r16,1
1010a974:	0081ffc4 	movi	r2,2047
1010a978:	8080ba26 	beq	r16,r2,1010ac64 <__adddf3+0x39c>
1010a97c:	00bfe034 	movhi	r2,65408
1010a980:	10bfffc4 	addi	r2,r2,-1
1010a984:	4090703a 	and	r8,r8,r2
1010a988:	4004977a 	slli	r2,r8,29
1010a98c:	4010927a 	slli	r8,r8,9
1010a990:	8822d0fa 	srli	r17,r17,3
1010a994:	8401ffcc 	andi	r16,r16,2047
1010a998:	4010d33a 	srli	r8,r8,12
1010a99c:	9007883a 	mov	r3,r18
1010a9a0:	1444b03a 	or	r2,r2,r17
1010a9a4:	8401ffcc 	andi	r16,r16,2047
1010a9a8:	8020953a 	slli	r16,r16,20
1010a9ac:	18c03fcc 	andi	r3,r3,255
1010a9b0:	01000434 	movhi	r4,16
1010a9b4:	213fffc4 	addi	r4,r4,-1
1010a9b8:	180697fa 	slli	r3,r3,31
1010a9bc:	4110703a 	and	r8,r8,r4
1010a9c0:	4410b03a 	or	r8,r8,r16
1010a9c4:	40c6b03a 	or	r3,r8,r3
1010a9c8:	dfc00417 	ldw	ra,16(sp)
1010a9cc:	dcc00317 	ldw	r19,12(sp)
1010a9d0:	dc800217 	ldw	r18,8(sp)
1010a9d4:	dc400117 	ldw	r17,4(sp)
1010a9d8:	dc000017 	ldw	r16,0(sp)
1010a9dc:	dec00504 	addi	sp,sp,20
1010a9e0:	f800283a 	ret
1010a9e4:	0081ffc4 	movi	r2,2047
1010a9e8:	80bfd626 	beq	r16,r2,1010a944 <__alt_data_end+0xfffea944>
1010a9ec:	4a402034 	orhi	r9,r9,128
1010a9f0:	00800e04 	movi	r2,56
1010a9f4:	10c09f16 	blt	r2,r3,1010ac74 <__adddf3+0x3ac>
1010a9f8:	008007c4 	movi	r2,31
1010a9fc:	10c0c216 	blt	r2,r3,1010ad08 <__adddf3+0x440>
1010aa00:	00800804 	movi	r2,32
1010aa04:	10c5c83a 	sub	r2,r2,r3
1010aa08:	488a983a 	sll	r5,r9,r2
1010aa0c:	30c8d83a 	srl	r4,r6,r3
1010aa10:	3084983a 	sll	r2,r6,r2
1010aa14:	48c6d83a 	srl	r3,r9,r3
1010aa18:	290cb03a 	or	r6,r5,r4
1010aa1c:	1004c03a 	cmpne	r2,r2,zero
1010aa20:	308cb03a 	or	r6,r6,r2
1010aa24:	898dc83a 	sub	r6,r17,r6
1010aa28:	89a3803a 	cmpltu	r17,r17,r6
1010aa2c:	40d1c83a 	sub	r8,r8,r3
1010aa30:	4451c83a 	sub	r8,r8,r17
1010aa34:	3023883a 	mov	r17,r6
1010aa38:	4080202c 	andhi	r2,r8,128
1010aa3c:	10002326 	beq	r2,zero,1010aacc <__adddf3+0x204>
1010aa40:	04c02034 	movhi	r19,128
1010aa44:	9cffffc4 	addi	r19,r19,-1
1010aa48:	44e6703a 	and	r19,r8,r19
1010aa4c:	98007626 	beq	r19,zero,1010ac28 <__adddf3+0x360>
1010aa50:	9809883a 	mov	r4,r19
1010aa54:	010cecc0 	call	1010cecc <__clzsi2>
1010aa58:	10fffe04 	addi	r3,r2,-8
1010aa5c:	010007c4 	movi	r4,31
1010aa60:	20c07716 	blt	r4,r3,1010ac40 <__adddf3+0x378>
1010aa64:	00800804 	movi	r2,32
1010aa68:	10c5c83a 	sub	r2,r2,r3
1010aa6c:	8884d83a 	srl	r2,r17,r2
1010aa70:	98d0983a 	sll	r8,r19,r3
1010aa74:	88e2983a 	sll	r17,r17,r3
1010aa78:	1204b03a 	or	r2,r2,r8
1010aa7c:	1c007416 	blt	r3,r16,1010ac50 <__adddf3+0x388>
1010aa80:	1c21c83a 	sub	r16,r3,r16
1010aa84:	82000044 	addi	r8,r16,1
1010aa88:	00c007c4 	movi	r3,31
1010aa8c:	1a009116 	blt	r3,r8,1010acd4 <__adddf3+0x40c>
1010aa90:	00c00804 	movi	r3,32
1010aa94:	1a07c83a 	sub	r3,r3,r8
1010aa98:	8a08d83a 	srl	r4,r17,r8
1010aa9c:	88e2983a 	sll	r17,r17,r3
1010aaa0:	10c6983a 	sll	r3,r2,r3
1010aaa4:	1210d83a 	srl	r8,r2,r8
1010aaa8:	8804c03a 	cmpne	r2,r17,zero
1010aaac:	1906b03a 	or	r3,r3,r4
1010aab0:	18a2b03a 	or	r17,r3,r2
1010aab4:	0021883a 	mov	r16,zero
1010aab8:	003fa206 	br	1010a944 <__alt_data_end+0xfffea944>
1010aabc:	1890b03a 	or	r8,r3,r2
1010aac0:	40017d26 	beq	r8,zero,1010b0b8 <__adddf3+0x7f0>
1010aac4:	1011883a 	mov	r8,r2
1010aac8:	1823883a 	mov	r17,r3
1010aacc:	888001cc 	andi	r2,r17,7
1010aad0:	103f9e1e 	bne	r2,zero,1010a94c <__alt_data_end+0xfffea94c>
1010aad4:	4004977a 	slli	r2,r8,29
1010aad8:	8822d0fa 	srli	r17,r17,3
1010aadc:	4010d0fa 	srli	r8,r8,3
1010aae0:	9007883a 	mov	r3,r18
1010aae4:	1444b03a 	or	r2,r2,r17
1010aae8:	0101ffc4 	movi	r4,2047
1010aaec:	81002426 	beq	r16,r4,1010ab80 <__adddf3+0x2b8>
1010aaf0:	8120703a 	and	r16,r16,r4
1010aaf4:	01000434 	movhi	r4,16
1010aaf8:	213fffc4 	addi	r4,r4,-1
1010aafc:	4110703a 	and	r8,r8,r4
1010ab00:	003fa806 	br	1010a9a4 <__alt_data_end+0xfffea9a4>
1010ab04:	8089c83a 	sub	r4,r16,r2
1010ab08:	01005e0e 	bge	zero,r4,1010ac84 <__adddf3+0x3bc>
1010ab0c:	10002b26 	beq	r2,zero,1010abbc <__adddf3+0x2f4>
1010ab10:	0081ffc4 	movi	r2,2047
1010ab14:	80bf8b26 	beq	r16,r2,1010a944 <__alt_data_end+0xfffea944>
1010ab18:	4a402034 	orhi	r9,r9,128
1010ab1c:	00800e04 	movi	r2,56
1010ab20:	1100a40e 	bge	r2,r4,1010adb4 <__adddf3+0x4ec>
1010ab24:	498cb03a 	or	r6,r9,r6
1010ab28:	300ac03a 	cmpne	r5,r6,zero
1010ab2c:	0013883a 	mov	r9,zero
1010ab30:	2c4b883a 	add	r5,r5,r17
1010ab34:	2c63803a 	cmpltu	r17,r5,r17
1010ab38:	4a11883a 	add	r8,r9,r8
1010ab3c:	8a11883a 	add	r8,r17,r8
1010ab40:	2823883a 	mov	r17,r5
1010ab44:	4080202c 	andhi	r2,r8,128
1010ab48:	103fe026 	beq	r2,zero,1010aacc <__alt_data_end+0xfffeaacc>
1010ab4c:	84000044 	addi	r16,r16,1
1010ab50:	0081ffc4 	movi	r2,2047
1010ab54:	8080d226 	beq	r16,r2,1010aea0 <__adddf3+0x5d8>
1010ab58:	00bfe034 	movhi	r2,65408
1010ab5c:	10bfffc4 	addi	r2,r2,-1
1010ab60:	4090703a 	and	r8,r8,r2
1010ab64:	880ad07a 	srli	r5,r17,1
1010ab68:	400897fa 	slli	r4,r8,31
1010ab6c:	88c0004c 	andi	r3,r17,1
1010ab70:	28e2b03a 	or	r17,r5,r3
1010ab74:	4010d07a 	srli	r8,r8,1
1010ab78:	2462b03a 	or	r17,r4,r17
1010ab7c:	003f7106 	br	1010a944 <__alt_data_end+0xfffea944>
1010ab80:	4088b03a 	or	r4,r8,r2
1010ab84:	20014526 	beq	r4,zero,1010b09c <__adddf3+0x7d4>
1010ab88:	01000434 	movhi	r4,16
1010ab8c:	42000234 	orhi	r8,r8,8
1010ab90:	213fffc4 	addi	r4,r4,-1
1010ab94:	4110703a 	and	r8,r8,r4
1010ab98:	003f8206 	br	1010a9a4 <__alt_data_end+0xfffea9a4>
1010ab9c:	18ffffc4 	addi	r3,r3,-1
1010aba0:	1800491e 	bne	r3,zero,1010acc8 <__adddf3+0x400>
1010aba4:	898bc83a 	sub	r5,r17,r6
1010aba8:	8963803a 	cmpltu	r17,r17,r5
1010abac:	4251c83a 	sub	r8,r8,r9
1010abb0:	4451c83a 	sub	r8,r8,r17
1010abb4:	2823883a 	mov	r17,r5
1010abb8:	003f9f06 	br	1010aa38 <__alt_data_end+0xfffeaa38>
1010abbc:	4984b03a 	or	r2,r9,r6
1010abc0:	103f6026 	beq	r2,zero,1010a944 <__alt_data_end+0xfffea944>
1010abc4:	213fffc4 	addi	r4,r4,-1
1010abc8:	2000931e 	bne	r4,zero,1010ae18 <__adddf3+0x550>
1010abcc:	898d883a 	add	r6,r17,r6
1010abd0:	3463803a 	cmpltu	r17,r6,r17
1010abd4:	4251883a 	add	r8,r8,r9
1010abd8:	8a11883a 	add	r8,r17,r8
1010abdc:	3023883a 	mov	r17,r6
1010abe0:	003fd806 	br	1010ab44 <__alt_data_end+0xfffeab44>
1010abe4:	1800541e 	bne	r3,zero,1010ad38 <__adddf3+0x470>
1010abe8:	80800044 	addi	r2,r16,1
1010abec:	1081ffcc 	andi	r2,r2,2047
1010abf0:	00c00044 	movi	r3,1
1010abf4:	1880a00e 	bge	r3,r2,1010ae78 <__adddf3+0x5b0>
1010abf8:	8989c83a 	sub	r4,r17,r6
1010abfc:	8905803a 	cmpltu	r2,r17,r4
1010ac00:	4267c83a 	sub	r19,r8,r9
1010ac04:	98a7c83a 	sub	r19,r19,r2
1010ac08:	9880202c 	andhi	r2,r19,128
1010ac0c:	10006326 	beq	r2,zero,1010ad9c <__adddf3+0x4d4>
1010ac10:	3463c83a 	sub	r17,r6,r17
1010ac14:	4a07c83a 	sub	r3,r9,r8
1010ac18:	344d803a 	cmpltu	r6,r6,r17
1010ac1c:	19a7c83a 	sub	r19,r3,r6
1010ac20:	3825883a 	mov	r18,r7
1010ac24:	983f8a1e 	bne	r19,zero,1010aa50 <__alt_data_end+0xfffeaa50>
1010ac28:	8809883a 	mov	r4,r17
1010ac2c:	010cecc0 	call	1010cecc <__clzsi2>
1010ac30:	10800804 	addi	r2,r2,32
1010ac34:	10fffe04 	addi	r3,r2,-8
1010ac38:	010007c4 	movi	r4,31
1010ac3c:	20ff890e 	bge	r4,r3,1010aa64 <__alt_data_end+0xfffeaa64>
1010ac40:	10bff604 	addi	r2,r2,-40
1010ac44:	8884983a 	sll	r2,r17,r2
1010ac48:	0023883a 	mov	r17,zero
1010ac4c:	1c3f8c0e 	bge	r3,r16,1010aa80 <__alt_data_end+0xfffeaa80>
1010ac50:	023fe034 	movhi	r8,65408
1010ac54:	423fffc4 	addi	r8,r8,-1
1010ac58:	80e1c83a 	sub	r16,r16,r3
1010ac5c:	1210703a 	and	r8,r2,r8
1010ac60:	003f3806 	br	1010a944 <__alt_data_end+0xfffea944>
1010ac64:	9007883a 	mov	r3,r18
1010ac68:	0011883a 	mov	r8,zero
1010ac6c:	0005883a 	mov	r2,zero
1010ac70:	003f4c06 	br	1010a9a4 <__alt_data_end+0xfffea9a4>
1010ac74:	498cb03a 	or	r6,r9,r6
1010ac78:	300cc03a 	cmpne	r6,r6,zero
1010ac7c:	0007883a 	mov	r3,zero
1010ac80:	003f6806 	br	1010aa24 <__alt_data_end+0xfffeaa24>
1010ac84:	20009c1e 	bne	r4,zero,1010aef8 <__adddf3+0x630>
1010ac88:	80800044 	addi	r2,r16,1
1010ac8c:	1141ffcc 	andi	r5,r2,2047
1010ac90:	01000044 	movi	r4,1
1010ac94:	2140670e 	bge	r4,r5,1010ae34 <__adddf3+0x56c>
1010ac98:	0101ffc4 	movi	r4,2047
1010ac9c:	11007f26 	beq	r2,r4,1010ae9c <__adddf3+0x5d4>
1010aca0:	898d883a 	add	r6,r17,r6
1010aca4:	4247883a 	add	r3,r8,r9
1010aca8:	3451803a 	cmpltu	r8,r6,r17
1010acac:	40d1883a 	add	r8,r8,r3
1010acb0:	402297fa 	slli	r17,r8,31
1010acb4:	300cd07a 	srli	r6,r6,1
1010acb8:	4010d07a 	srli	r8,r8,1
1010acbc:	1021883a 	mov	r16,r2
1010acc0:	89a2b03a 	or	r17,r17,r6
1010acc4:	003f1f06 	br	1010a944 <__alt_data_end+0xfffea944>
1010acc8:	0081ffc4 	movi	r2,2047
1010accc:	80bf481e 	bne	r16,r2,1010a9f0 <__alt_data_end+0xfffea9f0>
1010acd0:	003f1c06 	br	1010a944 <__alt_data_end+0xfffea944>
1010acd4:	843ff844 	addi	r16,r16,-31
1010acd8:	01000804 	movi	r4,32
1010acdc:	1406d83a 	srl	r3,r2,r16
1010ace0:	41005026 	beq	r8,r4,1010ae24 <__adddf3+0x55c>
1010ace4:	01001004 	movi	r4,64
1010ace8:	2211c83a 	sub	r8,r4,r8
1010acec:	1204983a 	sll	r2,r2,r8
1010acf0:	88a2b03a 	or	r17,r17,r2
1010acf4:	8822c03a 	cmpne	r17,r17,zero
1010acf8:	1c62b03a 	or	r17,r3,r17
1010acfc:	0011883a 	mov	r8,zero
1010ad00:	0021883a 	mov	r16,zero
1010ad04:	003f7106 	br	1010aacc <__alt_data_end+0xfffeaacc>
1010ad08:	193ff804 	addi	r4,r3,-32
1010ad0c:	00800804 	movi	r2,32
1010ad10:	4908d83a 	srl	r4,r9,r4
1010ad14:	18804526 	beq	r3,r2,1010ae2c <__adddf3+0x564>
1010ad18:	00801004 	movi	r2,64
1010ad1c:	10c5c83a 	sub	r2,r2,r3
1010ad20:	4886983a 	sll	r3,r9,r2
1010ad24:	198cb03a 	or	r6,r3,r6
1010ad28:	300cc03a 	cmpne	r6,r6,zero
1010ad2c:	218cb03a 	or	r6,r4,r6
1010ad30:	0007883a 	mov	r3,zero
1010ad34:	003f3b06 	br	1010aa24 <__alt_data_end+0xfffeaa24>
1010ad38:	80002a26 	beq	r16,zero,1010ade4 <__adddf3+0x51c>
1010ad3c:	0101ffc4 	movi	r4,2047
1010ad40:	11006826 	beq	r2,r4,1010aee4 <__adddf3+0x61c>
1010ad44:	00c7c83a 	sub	r3,zero,r3
1010ad48:	42002034 	orhi	r8,r8,128
1010ad4c:	01000e04 	movi	r4,56
1010ad50:	20c07c16 	blt	r4,r3,1010af44 <__adddf3+0x67c>
1010ad54:	010007c4 	movi	r4,31
1010ad58:	20c0da16 	blt	r4,r3,1010b0c4 <__adddf3+0x7fc>
1010ad5c:	01000804 	movi	r4,32
1010ad60:	20c9c83a 	sub	r4,r4,r3
1010ad64:	4114983a 	sll	r10,r8,r4
1010ad68:	88cad83a 	srl	r5,r17,r3
1010ad6c:	8908983a 	sll	r4,r17,r4
1010ad70:	40c6d83a 	srl	r3,r8,r3
1010ad74:	5162b03a 	or	r17,r10,r5
1010ad78:	2008c03a 	cmpne	r4,r4,zero
1010ad7c:	8922b03a 	or	r17,r17,r4
1010ad80:	3463c83a 	sub	r17,r6,r17
1010ad84:	48c7c83a 	sub	r3,r9,r3
1010ad88:	344d803a 	cmpltu	r6,r6,r17
1010ad8c:	1991c83a 	sub	r8,r3,r6
1010ad90:	1021883a 	mov	r16,r2
1010ad94:	3825883a 	mov	r18,r7
1010ad98:	003f2706 	br	1010aa38 <__alt_data_end+0xfffeaa38>
1010ad9c:	24d0b03a 	or	r8,r4,r19
1010ada0:	40001b1e 	bne	r8,zero,1010ae10 <__adddf3+0x548>
1010ada4:	0005883a 	mov	r2,zero
1010ada8:	0007883a 	mov	r3,zero
1010adac:	0021883a 	mov	r16,zero
1010adb0:	003f4d06 	br	1010aae8 <__alt_data_end+0xfffeaae8>
1010adb4:	008007c4 	movi	r2,31
1010adb8:	11003c16 	blt	r2,r4,1010aeac <__adddf3+0x5e4>
1010adbc:	00800804 	movi	r2,32
1010adc0:	1105c83a 	sub	r2,r2,r4
1010adc4:	488e983a 	sll	r7,r9,r2
1010adc8:	310ad83a 	srl	r5,r6,r4
1010adcc:	3084983a 	sll	r2,r6,r2
1010add0:	4912d83a 	srl	r9,r9,r4
1010add4:	394ab03a 	or	r5,r7,r5
1010add8:	1004c03a 	cmpne	r2,r2,zero
1010addc:	288ab03a 	or	r5,r5,r2
1010ade0:	003f5306 	br	1010ab30 <__alt_data_end+0xfffeab30>
1010ade4:	4448b03a 	or	r4,r8,r17
1010ade8:	20003e26 	beq	r4,zero,1010aee4 <__adddf3+0x61c>
1010adec:	00c6303a 	nor	r3,zero,r3
1010adf0:	18003a1e 	bne	r3,zero,1010aedc <__adddf3+0x614>
1010adf4:	3463c83a 	sub	r17,r6,r17
1010adf8:	4a07c83a 	sub	r3,r9,r8
1010adfc:	344d803a 	cmpltu	r6,r6,r17
1010ae00:	1991c83a 	sub	r8,r3,r6
1010ae04:	1021883a 	mov	r16,r2
1010ae08:	3825883a 	mov	r18,r7
1010ae0c:	003f0a06 	br	1010aa38 <__alt_data_end+0xfffeaa38>
1010ae10:	2023883a 	mov	r17,r4
1010ae14:	003f0d06 	br	1010aa4c <__alt_data_end+0xfffeaa4c>
1010ae18:	0081ffc4 	movi	r2,2047
1010ae1c:	80bf3f1e 	bne	r16,r2,1010ab1c <__alt_data_end+0xfffeab1c>
1010ae20:	003ec806 	br	1010a944 <__alt_data_end+0xfffea944>
1010ae24:	0005883a 	mov	r2,zero
1010ae28:	003fb106 	br	1010acf0 <__alt_data_end+0xfffeacf0>
1010ae2c:	0007883a 	mov	r3,zero
1010ae30:	003fbc06 	br	1010ad24 <__alt_data_end+0xfffead24>
1010ae34:	4444b03a 	or	r2,r8,r17
1010ae38:	8000871e 	bne	r16,zero,1010b058 <__adddf3+0x790>
1010ae3c:	1000ba26 	beq	r2,zero,1010b128 <__adddf3+0x860>
1010ae40:	4984b03a 	or	r2,r9,r6
1010ae44:	103ebf26 	beq	r2,zero,1010a944 <__alt_data_end+0xfffea944>
1010ae48:	8985883a 	add	r2,r17,r6
1010ae4c:	4247883a 	add	r3,r8,r9
1010ae50:	1451803a 	cmpltu	r8,r2,r17
1010ae54:	40d1883a 	add	r8,r8,r3
1010ae58:	40c0202c 	andhi	r3,r8,128
1010ae5c:	1023883a 	mov	r17,r2
1010ae60:	183f1a26 	beq	r3,zero,1010aacc <__alt_data_end+0xfffeaacc>
1010ae64:	00bfe034 	movhi	r2,65408
1010ae68:	10bfffc4 	addi	r2,r2,-1
1010ae6c:	2021883a 	mov	r16,r4
1010ae70:	4090703a 	and	r8,r8,r2
1010ae74:	003eb306 	br	1010a944 <__alt_data_end+0xfffea944>
1010ae78:	4444b03a 	or	r2,r8,r17
1010ae7c:	8000291e 	bne	r16,zero,1010af24 <__adddf3+0x65c>
1010ae80:	10004b1e 	bne	r2,zero,1010afb0 <__adddf3+0x6e8>
1010ae84:	4990b03a 	or	r8,r9,r6
1010ae88:	40008b26 	beq	r8,zero,1010b0b8 <__adddf3+0x7f0>
1010ae8c:	4811883a 	mov	r8,r9
1010ae90:	3023883a 	mov	r17,r6
1010ae94:	3825883a 	mov	r18,r7
1010ae98:	003eaa06 	br	1010a944 <__alt_data_end+0xfffea944>
1010ae9c:	1021883a 	mov	r16,r2
1010aea0:	0011883a 	mov	r8,zero
1010aea4:	0005883a 	mov	r2,zero
1010aea8:	003f0f06 	br	1010aae8 <__alt_data_end+0xfffeaae8>
1010aeac:	217ff804 	addi	r5,r4,-32
1010aeb0:	00800804 	movi	r2,32
1010aeb4:	494ad83a 	srl	r5,r9,r5
1010aeb8:	20807d26 	beq	r4,r2,1010b0b0 <__adddf3+0x7e8>
1010aebc:	00801004 	movi	r2,64
1010aec0:	1109c83a 	sub	r4,r2,r4
1010aec4:	4912983a 	sll	r9,r9,r4
1010aec8:	498cb03a 	or	r6,r9,r6
1010aecc:	300cc03a 	cmpne	r6,r6,zero
1010aed0:	298ab03a 	or	r5,r5,r6
1010aed4:	0013883a 	mov	r9,zero
1010aed8:	003f1506 	br	1010ab30 <__alt_data_end+0xfffeab30>
1010aedc:	0101ffc4 	movi	r4,2047
1010aee0:	113f9a1e 	bne	r2,r4,1010ad4c <__alt_data_end+0xfffead4c>
1010aee4:	4811883a 	mov	r8,r9
1010aee8:	3023883a 	mov	r17,r6
1010aeec:	1021883a 	mov	r16,r2
1010aef0:	3825883a 	mov	r18,r7
1010aef4:	003e9306 	br	1010a944 <__alt_data_end+0xfffea944>
1010aef8:	8000161e 	bne	r16,zero,1010af54 <__adddf3+0x68c>
1010aefc:	444ab03a 	or	r5,r8,r17
1010af00:	28005126 	beq	r5,zero,1010b048 <__adddf3+0x780>
1010af04:	0108303a 	nor	r4,zero,r4
1010af08:	20004d1e 	bne	r4,zero,1010b040 <__adddf3+0x778>
1010af0c:	89a3883a 	add	r17,r17,r6
1010af10:	4253883a 	add	r9,r8,r9
1010af14:	898d803a 	cmpltu	r6,r17,r6
1010af18:	3251883a 	add	r8,r6,r9
1010af1c:	1021883a 	mov	r16,r2
1010af20:	003f0806 	br	1010ab44 <__alt_data_end+0xfffeab44>
1010af24:	1000301e 	bne	r2,zero,1010afe8 <__adddf3+0x720>
1010af28:	4984b03a 	or	r2,r9,r6
1010af2c:	10007126 	beq	r2,zero,1010b0f4 <__adddf3+0x82c>
1010af30:	4811883a 	mov	r8,r9
1010af34:	3023883a 	mov	r17,r6
1010af38:	3825883a 	mov	r18,r7
1010af3c:	0401ffc4 	movi	r16,2047
1010af40:	003e8006 	br	1010a944 <__alt_data_end+0xfffea944>
1010af44:	4462b03a 	or	r17,r8,r17
1010af48:	8822c03a 	cmpne	r17,r17,zero
1010af4c:	0007883a 	mov	r3,zero
1010af50:	003f8b06 	br	1010ad80 <__alt_data_end+0xfffead80>
1010af54:	0141ffc4 	movi	r5,2047
1010af58:	11403b26 	beq	r2,r5,1010b048 <__adddf3+0x780>
1010af5c:	0109c83a 	sub	r4,zero,r4
1010af60:	42002034 	orhi	r8,r8,128
1010af64:	01400e04 	movi	r5,56
1010af68:	29006716 	blt	r5,r4,1010b108 <__adddf3+0x840>
1010af6c:	014007c4 	movi	r5,31
1010af70:	29007016 	blt	r5,r4,1010b134 <__adddf3+0x86c>
1010af74:	01400804 	movi	r5,32
1010af78:	290bc83a 	sub	r5,r5,r4
1010af7c:	4154983a 	sll	r10,r8,r5
1010af80:	890ed83a 	srl	r7,r17,r4
1010af84:	894a983a 	sll	r5,r17,r5
1010af88:	4108d83a 	srl	r4,r8,r4
1010af8c:	51e2b03a 	or	r17,r10,r7
1010af90:	280ac03a 	cmpne	r5,r5,zero
1010af94:	8962b03a 	or	r17,r17,r5
1010af98:	89a3883a 	add	r17,r17,r6
1010af9c:	2253883a 	add	r9,r4,r9
1010afa0:	898d803a 	cmpltu	r6,r17,r6
1010afa4:	3251883a 	add	r8,r6,r9
1010afa8:	1021883a 	mov	r16,r2
1010afac:	003ee506 	br	1010ab44 <__alt_data_end+0xfffeab44>
1010afb0:	4984b03a 	or	r2,r9,r6
1010afb4:	103e6326 	beq	r2,zero,1010a944 <__alt_data_end+0xfffea944>
1010afb8:	8987c83a 	sub	r3,r17,r6
1010afbc:	88c9803a 	cmpltu	r4,r17,r3
1010afc0:	4245c83a 	sub	r2,r8,r9
1010afc4:	1105c83a 	sub	r2,r2,r4
1010afc8:	1100202c 	andhi	r4,r2,128
1010afcc:	203ebb26 	beq	r4,zero,1010aabc <__alt_data_end+0xfffeaabc>
1010afd0:	3463c83a 	sub	r17,r6,r17
1010afd4:	4a07c83a 	sub	r3,r9,r8
1010afd8:	344d803a 	cmpltu	r6,r6,r17
1010afdc:	1991c83a 	sub	r8,r3,r6
1010afe0:	3825883a 	mov	r18,r7
1010afe4:	003e5706 	br	1010a944 <__alt_data_end+0xfffea944>
1010afe8:	4984b03a 	or	r2,r9,r6
1010afec:	10002e26 	beq	r2,zero,1010b0a8 <__adddf3+0x7e0>
1010aff0:	4004d0fa 	srli	r2,r8,3
1010aff4:	8822d0fa 	srli	r17,r17,3
1010aff8:	4010977a 	slli	r8,r8,29
1010affc:	10c0022c 	andhi	r3,r2,8
1010b000:	4462b03a 	or	r17,r8,r17
1010b004:	18000826 	beq	r3,zero,1010b028 <__adddf3+0x760>
1010b008:	4808d0fa 	srli	r4,r9,3
1010b00c:	20c0022c 	andhi	r3,r4,8
1010b010:	1800051e 	bne	r3,zero,1010b028 <__adddf3+0x760>
1010b014:	300cd0fa 	srli	r6,r6,3
1010b018:	4806977a 	slli	r3,r9,29
1010b01c:	2005883a 	mov	r2,r4
1010b020:	3825883a 	mov	r18,r7
1010b024:	19a2b03a 	or	r17,r3,r6
1010b028:	8810d77a 	srli	r8,r17,29
1010b02c:	100490fa 	slli	r2,r2,3
1010b030:	882290fa 	slli	r17,r17,3
1010b034:	0401ffc4 	movi	r16,2047
1010b038:	4090b03a 	or	r8,r8,r2
1010b03c:	003e4106 	br	1010a944 <__alt_data_end+0xfffea944>
1010b040:	0141ffc4 	movi	r5,2047
1010b044:	117fc71e 	bne	r2,r5,1010af64 <__alt_data_end+0xfffeaf64>
1010b048:	4811883a 	mov	r8,r9
1010b04c:	3023883a 	mov	r17,r6
1010b050:	1021883a 	mov	r16,r2
1010b054:	003e3b06 	br	1010a944 <__alt_data_end+0xfffea944>
1010b058:	10002f26 	beq	r2,zero,1010b118 <__adddf3+0x850>
1010b05c:	4984b03a 	or	r2,r9,r6
1010b060:	10001126 	beq	r2,zero,1010b0a8 <__adddf3+0x7e0>
1010b064:	4004d0fa 	srli	r2,r8,3
1010b068:	8822d0fa 	srli	r17,r17,3
1010b06c:	4010977a 	slli	r8,r8,29
1010b070:	10c0022c 	andhi	r3,r2,8
1010b074:	4462b03a 	or	r17,r8,r17
1010b078:	183feb26 	beq	r3,zero,1010b028 <__alt_data_end+0xfffeb028>
1010b07c:	4808d0fa 	srli	r4,r9,3
1010b080:	20c0022c 	andhi	r3,r4,8
1010b084:	183fe81e 	bne	r3,zero,1010b028 <__alt_data_end+0xfffeb028>
1010b088:	300cd0fa 	srli	r6,r6,3
1010b08c:	4806977a 	slli	r3,r9,29
1010b090:	2005883a 	mov	r2,r4
1010b094:	19a2b03a 	or	r17,r3,r6
1010b098:	003fe306 	br	1010b028 <__alt_data_end+0xfffeb028>
1010b09c:	0011883a 	mov	r8,zero
1010b0a0:	0005883a 	mov	r2,zero
1010b0a4:	003e3f06 	br	1010a9a4 <__alt_data_end+0xfffea9a4>
1010b0a8:	0401ffc4 	movi	r16,2047
1010b0ac:	003e2506 	br	1010a944 <__alt_data_end+0xfffea944>
1010b0b0:	0013883a 	mov	r9,zero
1010b0b4:	003f8406 	br	1010aec8 <__alt_data_end+0xfffeaec8>
1010b0b8:	0005883a 	mov	r2,zero
1010b0bc:	0007883a 	mov	r3,zero
1010b0c0:	003e8906 	br	1010aae8 <__alt_data_end+0xfffeaae8>
1010b0c4:	197ff804 	addi	r5,r3,-32
1010b0c8:	01000804 	movi	r4,32
1010b0cc:	414ad83a 	srl	r5,r8,r5
1010b0d0:	19002426 	beq	r3,r4,1010b164 <__adddf3+0x89c>
1010b0d4:	01001004 	movi	r4,64
1010b0d8:	20c7c83a 	sub	r3,r4,r3
1010b0dc:	40c6983a 	sll	r3,r8,r3
1010b0e0:	1c46b03a 	or	r3,r3,r17
1010b0e4:	1806c03a 	cmpne	r3,r3,zero
1010b0e8:	28e2b03a 	or	r17,r5,r3
1010b0ec:	0007883a 	mov	r3,zero
1010b0f0:	003f2306 	br	1010ad80 <__alt_data_end+0xfffead80>
1010b0f4:	0007883a 	mov	r3,zero
1010b0f8:	5811883a 	mov	r8,r11
1010b0fc:	00bfffc4 	movi	r2,-1
1010b100:	0401ffc4 	movi	r16,2047
1010b104:	003e7806 	br	1010aae8 <__alt_data_end+0xfffeaae8>
1010b108:	4462b03a 	or	r17,r8,r17
1010b10c:	8822c03a 	cmpne	r17,r17,zero
1010b110:	0009883a 	mov	r4,zero
1010b114:	003fa006 	br	1010af98 <__alt_data_end+0xfffeaf98>
1010b118:	4811883a 	mov	r8,r9
1010b11c:	3023883a 	mov	r17,r6
1010b120:	0401ffc4 	movi	r16,2047
1010b124:	003e0706 	br	1010a944 <__alt_data_end+0xfffea944>
1010b128:	4811883a 	mov	r8,r9
1010b12c:	3023883a 	mov	r17,r6
1010b130:	003e0406 	br	1010a944 <__alt_data_end+0xfffea944>
1010b134:	21fff804 	addi	r7,r4,-32
1010b138:	01400804 	movi	r5,32
1010b13c:	41ced83a 	srl	r7,r8,r7
1010b140:	21400a26 	beq	r4,r5,1010b16c <__adddf3+0x8a4>
1010b144:	01401004 	movi	r5,64
1010b148:	2909c83a 	sub	r4,r5,r4
1010b14c:	4108983a 	sll	r4,r8,r4
1010b150:	2448b03a 	or	r4,r4,r17
1010b154:	2008c03a 	cmpne	r4,r4,zero
1010b158:	3922b03a 	or	r17,r7,r4
1010b15c:	0009883a 	mov	r4,zero
1010b160:	003f8d06 	br	1010af98 <__alt_data_end+0xfffeaf98>
1010b164:	0007883a 	mov	r3,zero
1010b168:	003fdd06 	br	1010b0e0 <__alt_data_end+0xfffeb0e0>
1010b16c:	0009883a 	mov	r4,zero
1010b170:	003ff706 	br	1010b150 <__alt_data_end+0xfffeb150>

1010b174 <__divdf3>:
1010b174:	defff204 	addi	sp,sp,-56
1010b178:	dd400915 	stw	r21,36(sp)
1010b17c:	282ad53a 	srli	r21,r5,20
1010b180:	dd000815 	stw	r20,32(sp)
1010b184:	2828d7fa 	srli	r20,r5,31
1010b188:	dc000415 	stw	r16,16(sp)
1010b18c:	04000434 	movhi	r16,16
1010b190:	df000c15 	stw	fp,48(sp)
1010b194:	843fffc4 	addi	r16,r16,-1
1010b198:	dfc00d15 	stw	ra,52(sp)
1010b19c:	ddc00b15 	stw	r23,44(sp)
1010b1a0:	dd800a15 	stw	r22,40(sp)
1010b1a4:	dcc00715 	stw	r19,28(sp)
1010b1a8:	dc800615 	stw	r18,24(sp)
1010b1ac:	dc400515 	stw	r17,20(sp)
1010b1b0:	ad41ffcc 	andi	r21,r21,2047
1010b1b4:	2c20703a 	and	r16,r5,r16
1010b1b8:	a7003fcc 	andi	fp,r20,255
1010b1bc:	a8006126 	beq	r21,zero,1010b344 <__divdf3+0x1d0>
1010b1c0:	0081ffc4 	movi	r2,2047
1010b1c4:	2025883a 	mov	r18,r4
1010b1c8:	a8803726 	beq	r21,r2,1010b2a8 <__divdf3+0x134>
1010b1cc:	80c00434 	orhi	r3,r16,16
1010b1d0:	180690fa 	slli	r3,r3,3
1010b1d4:	2020d77a 	srli	r16,r4,29
1010b1d8:	202490fa 	slli	r18,r4,3
1010b1dc:	ad7f0044 	addi	r21,r21,-1023
1010b1e0:	80e0b03a 	or	r16,r16,r3
1010b1e4:	0027883a 	mov	r19,zero
1010b1e8:	0013883a 	mov	r9,zero
1010b1ec:	3808d53a 	srli	r4,r7,20
1010b1f0:	382cd7fa 	srli	r22,r7,31
1010b1f4:	04400434 	movhi	r17,16
1010b1f8:	8c7fffc4 	addi	r17,r17,-1
1010b1fc:	2101ffcc 	andi	r4,r4,2047
1010b200:	3011883a 	mov	r8,r6
1010b204:	3c62703a 	and	r17,r7,r17
1010b208:	b5c03fcc 	andi	r23,r22,255
1010b20c:	20006c26 	beq	r4,zero,1010b3c0 <__divdf3+0x24c>
1010b210:	0081ffc4 	movi	r2,2047
1010b214:	20806426 	beq	r4,r2,1010b3a8 <__divdf3+0x234>
1010b218:	88c00434 	orhi	r3,r17,16
1010b21c:	180690fa 	slli	r3,r3,3
1010b220:	3022d77a 	srli	r17,r6,29
1010b224:	301090fa 	slli	r8,r6,3
1010b228:	213f0044 	addi	r4,r4,-1023
1010b22c:	88e2b03a 	or	r17,r17,r3
1010b230:	000d883a 	mov	r6,zero
1010b234:	a584f03a 	xor	r2,r20,r22
1010b238:	34cab03a 	or	r5,r6,r19
1010b23c:	1007883a 	mov	r3,r2
1010b240:	14c03fcc 	andi	r19,r2,255
1010b244:	008003c4 	movi	r2,15
1010b248:	a92bc83a 	sub	r21,r21,r4
1010b24c:	11409036 	bltu	r2,r5,1010b490 <__divdf3+0x31c>
1010b250:	280a90ba 	slli	r5,r5,2
1010b254:	00840474 	movhi	r2,4113
1010b258:	10ac9a04 	addi	r2,r2,-19864
1010b25c:	288b883a 	add	r5,r5,r2
1010b260:	28800017 	ldw	r2,0(r5)
1010b264:	1000683a 	jmp	r2
1010b268:	1010b490 	cmplti	zero,r2,17106
1010b26c:	1010b2e0 	cmpeqi	zero,r2,17099
1010b270:	1010b480 	call	11010b48 <__alt_data_end+0xef0b48>
1010b274:	1010b2d4 	ori	zero,r2,17099
1010b278:	1010b480 	call	11010b48 <__alt_data_end+0xef0b48>
1010b27c:	1010b454 	ori	zero,r2,17105
1010b280:	1010b480 	call	11010b48 <__alt_data_end+0xef0b48>
1010b284:	1010b2d4 	ori	zero,r2,17099
1010b288:	1010b2e0 	cmpeqi	zero,r2,17099
1010b28c:	1010b2e0 	cmpeqi	zero,r2,17099
1010b290:	1010b454 	ori	zero,r2,17105
1010b294:	1010b2d4 	ori	zero,r2,17099
1010b298:	1010b2c4 	addi	zero,r2,17099
1010b29c:	1010b2c4 	addi	zero,r2,17099
1010b2a0:	1010b2c4 	addi	zero,r2,17099
1010b2a4:	1010b774 	orhi	zero,r2,17117
1010b2a8:	2404b03a 	or	r2,r4,r16
1010b2ac:	1000661e 	bne	r2,zero,1010b448 <__divdf3+0x2d4>
1010b2b0:	04c00204 	movi	r19,8
1010b2b4:	0021883a 	mov	r16,zero
1010b2b8:	0025883a 	mov	r18,zero
1010b2bc:	02400084 	movi	r9,2
1010b2c0:	003fca06 	br	1010b1ec <__alt_data_end+0xfffeb1ec>
1010b2c4:	8023883a 	mov	r17,r16
1010b2c8:	9011883a 	mov	r8,r18
1010b2cc:	e02f883a 	mov	r23,fp
1010b2d0:	480d883a 	mov	r6,r9
1010b2d4:	00800084 	movi	r2,2
1010b2d8:	3081311e 	bne	r6,r2,1010b7a0 <__divdf3+0x62c>
1010b2dc:	b827883a 	mov	r19,r23
1010b2e0:	98c0004c 	andi	r3,r19,1
1010b2e4:	0081ffc4 	movi	r2,2047
1010b2e8:	000b883a 	mov	r5,zero
1010b2ec:	0025883a 	mov	r18,zero
1010b2f0:	1004953a 	slli	r2,r2,20
1010b2f4:	18c03fcc 	andi	r3,r3,255
1010b2f8:	04400434 	movhi	r17,16
1010b2fc:	8c7fffc4 	addi	r17,r17,-1
1010b300:	180697fa 	slli	r3,r3,31
1010b304:	2c4a703a 	and	r5,r5,r17
1010b308:	288ab03a 	or	r5,r5,r2
1010b30c:	28c6b03a 	or	r3,r5,r3
1010b310:	9005883a 	mov	r2,r18
1010b314:	dfc00d17 	ldw	ra,52(sp)
1010b318:	df000c17 	ldw	fp,48(sp)
1010b31c:	ddc00b17 	ldw	r23,44(sp)
1010b320:	dd800a17 	ldw	r22,40(sp)
1010b324:	dd400917 	ldw	r21,36(sp)
1010b328:	dd000817 	ldw	r20,32(sp)
1010b32c:	dcc00717 	ldw	r19,28(sp)
1010b330:	dc800617 	ldw	r18,24(sp)
1010b334:	dc400517 	ldw	r17,20(sp)
1010b338:	dc000417 	ldw	r16,16(sp)
1010b33c:	dec00e04 	addi	sp,sp,56
1010b340:	f800283a 	ret
1010b344:	2404b03a 	or	r2,r4,r16
1010b348:	2027883a 	mov	r19,r4
1010b34c:	10003926 	beq	r2,zero,1010b434 <__divdf3+0x2c0>
1010b350:	80012e26 	beq	r16,zero,1010b80c <__divdf3+0x698>
1010b354:	8009883a 	mov	r4,r16
1010b358:	d9800315 	stw	r6,12(sp)
1010b35c:	d9c00215 	stw	r7,8(sp)
1010b360:	010cecc0 	call	1010cecc <__clzsi2>
1010b364:	d9800317 	ldw	r6,12(sp)
1010b368:	d9c00217 	ldw	r7,8(sp)
1010b36c:	10fffd44 	addi	r3,r2,-11
1010b370:	01000704 	movi	r4,28
1010b374:	20c12116 	blt	r4,r3,1010b7fc <__divdf3+0x688>
1010b378:	01000744 	movi	r4,29
1010b37c:	147ffe04 	addi	r17,r2,-8
1010b380:	20c9c83a 	sub	r4,r4,r3
1010b384:	8460983a 	sll	r16,r16,r17
1010b388:	9908d83a 	srl	r4,r19,r4
1010b38c:	9c64983a 	sll	r18,r19,r17
1010b390:	2420b03a 	or	r16,r4,r16
1010b394:	057f0084 	movi	r21,-1022
1010b398:	a8ebc83a 	sub	r21,r21,r3
1010b39c:	0027883a 	mov	r19,zero
1010b3a0:	0013883a 	mov	r9,zero
1010b3a4:	003f9106 	br	1010b1ec <__alt_data_end+0xfffeb1ec>
1010b3a8:	3444b03a 	or	r2,r6,r17
1010b3ac:	10001f1e 	bne	r2,zero,1010b42c <__divdf3+0x2b8>
1010b3b0:	0023883a 	mov	r17,zero
1010b3b4:	0011883a 	mov	r8,zero
1010b3b8:	01800084 	movi	r6,2
1010b3bc:	003f9d06 	br	1010b234 <__alt_data_end+0xfffeb234>
1010b3c0:	3444b03a 	or	r2,r6,r17
1010b3c4:	10001526 	beq	r2,zero,1010b41c <__divdf3+0x2a8>
1010b3c8:	88011b26 	beq	r17,zero,1010b838 <__divdf3+0x6c4>
1010b3cc:	8809883a 	mov	r4,r17
1010b3d0:	d9800315 	stw	r6,12(sp)
1010b3d4:	da400115 	stw	r9,4(sp)
1010b3d8:	010cecc0 	call	1010cecc <__clzsi2>
1010b3dc:	d9800317 	ldw	r6,12(sp)
1010b3e0:	da400117 	ldw	r9,4(sp)
1010b3e4:	10fffd44 	addi	r3,r2,-11
1010b3e8:	01000704 	movi	r4,28
1010b3ec:	20c10e16 	blt	r4,r3,1010b828 <__divdf3+0x6b4>
1010b3f0:	01000744 	movi	r4,29
1010b3f4:	123ffe04 	addi	r8,r2,-8
1010b3f8:	20c9c83a 	sub	r4,r4,r3
1010b3fc:	8a22983a 	sll	r17,r17,r8
1010b400:	3108d83a 	srl	r4,r6,r4
1010b404:	3210983a 	sll	r8,r6,r8
1010b408:	2462b03a 	or	r17,r4,r17
1010b40c:	013f0084 	movi	r4,-1022
1010b410:	20c9c83a 	sub	r4,r4,r3
1010b414:	000d883a 	mov	r6,zero
1010b418:	003f8606 	br	1010b234 <__alt_data_end+0xfffeb234>
1010b41c:	0023883a 	mov	r17,zero
1010b420:	0011883a 	mov	r8,zero
1010b424:	01800044 	movi	r6,1
1010b428:	003f8206 	br	1010b234 <__alt_data_end+0xfffeb234>
1010b42c:	018000c4 	movi	r6,3
1010b430:	003f8006 	br	1010b234 <__alt_data_end+0xfffeb234>
1010b434:	04c00104 	movi	r19,4
1010b438:	0021883a 	mov	r16,zero
1010b43c:	0025883a 	mov	r18,zero
1010b440:	02400044 	movi	r9,1
1010b444:	003f6906 	br	1010b1ec <__alt_data_end+0xfffeb1ec>
1010b448:	04c00304 	movi	r19,12
1010b44c:	024000c4 	movi	r9,3
1010b450:	003f6606 	br	1010b1ec <__alt_data_end+0xfffeb1ec>
1010b454:	01400434 	movhi	r5,16
1010b458:	0007883a 	mov	r3,zero
1010b45c:	297fffc4 	addi	r5,r5,-1
1010b460:	04bfffc4 	movi	r18,-1
1010b464:	0081ffc4 	movi	r2,2047
1010b468:	003fa106 	br	1010b2f0 <__alt_data_end+0xfffeb2f0>
1010b46c:	00c00044 	movi	r3,1
1010b470:	1887c83a 	sub	r3,r3,r2
1010b474:	01000e04 	movi	r4,56
1010b478:	20c1210e 	bge	r4,r3,1010b900 <__divdf3+0x78c>
1010b47c:	98c0004c 	andi	r3,r19,1
1010b480:	0005883a 	mov	r2,zero
1010b484:	000b883a 	mov	r5,zero
1010b488:	0025883a 	mov	r18,zero
1010b48c:	003f9806 	br	1010b2f0 <__alt_data_end+0xfffeb2f0>
1010b490:	8c00fd36 	bltu	r17,r16,1010b888 <__divdf3+0x714>
1010b494:	8440fb26 	beq	r16,r17,1010b884 <__divdf3+0x710>
1010b498:	8007883a 	mov	r3,r16
1010b49c:	ad7fffc4 	addi	r21,r21,-1
1010b4a0:	0021883a 	mov	r16,zero
1010b4a4:	400ad63a 	srli	r5,r8,24
1010b4a8:	8822923a 	slli	r17,r17,8
1010b4ac:	1809883a 	mov	r4,r3
1010b4b0:	402c923a 	slli	r22,r8,8
1010b4b4:	8978b03a 	or	fp,r17,r5
1010b4b8:	e028d43a 	srli	r20,fp,16
1010b4bc:	d8c00015 	stw	r3,0(sp)
1010b4c0:	e5ffffcc 	andi	r23,fp,65535
1010b4c4:	a00b883a 	mov	r5,r20
1010b4c8:	010a80c0 	call	1010a80c <__udivsi3>
1010b4cc:	d8c00017 	ldw	r3,0(sp)
1010b4d0:	a00b883a 	mov	r5,r20
1010b4d4:	d8800315 	stw	r2,12(sp)
1010b4d8:	1809883a 	mov	r4,r3
1010b4dc:	010a8700 	call	1010a870 <__umodsi3>
1010b4e0:	d9800317 	ldw	r6,12(sp)
1010b4e4:	1006943a 	slli	r3,r2,16
1010b4e8:	9004d43a 	srli	r2,r18,16
1010b4ec:	b9a3383a 	mul	r17,r23,r6
1010b4f0:	10c4b03a 	or	r2,r2,r3
1010b4f4:	1440062e 	bgeu	r2,r17,1010b510 <__divdf3+0x39c>
1010b4f8:	1705883a 	add	r2,r2,fp
1010b4fc:	30ffffc4 	addi	r3,r6,-1
1010b500:	1700ee36 	bltu	r2,fp,1010b8bc <__divdf3+0x748>
1010b504:	1440ed2e 	bgeu	r2,r17,1010b8bc <__divdf3+0x748>
1010b508:	31bfff84 	addi	r6,r6,-2
1010b50c:	1705883a 	add	r2,r2,fp
1010b510:	1463c83a 	sub	r17,r2,r17
1010b514:	a00b883a 	mov	r5,r20
1010b518:	8809883a 	mov	r4,r17
1010b51c:	d9800315 	stw	r6,12(sp)
1010b520:	010a80c0 	call	1010a80c <__udivsi3>
1010b524:	a00b883a 	mov	r5,r20
1010b528:	8809883a 	mov	r4,r17
1010b52c:	d8800215 	stw	r2,8(sp)
1010b530:	010a8700 	call	1010a870 <__umodsi3>
1010b534:	d9c00217 	ldw	r7,8(sp)
1010b538:	1004943a 	slli	r2,r2,16
1010b53c:	94bfffcc 	andi	r18,r18,65535
1010b540:	b9d1383a 	mul	r8,r23,r7
1010b544:	90a4b03a 	or	r18,r18,r2
1010b548:	d9800317 	ldw	r6,12(sp)
1010b54c:	9200062e 	bgeu	r18,r8,1010b568 <__divdf3+0x3f4>
1010b550:	9725883a 	add	r18,r18,fp
1010b554:	38bfffc4 	addi	r2,r7,-1
1010b558:	9700d636 	bltu	r18,fp,1010b8b4 <__divdf3+0x740>
1010b55c:	9200d52e 	bgeu	r18,r8,1010b8b4 <__divdf3+0x740>
1010b560:	39ffff84 	addi	r7,r7,-2
1010b564:	9725883a 	add	r18,r18,fp
1010b568:	3004943a 	slli	r2,r6,16
1010b56c:	b012d43a 	srli	r9,r22,16
1010b570:	b1bfffcc 	andi	r6,r22,65535
1010b574:	11e2b03a 	or	r17,r2,r7
1010b578:	8806d43a 	srli	r3,r17,16
1010b57c:	893fffcc 	andi	r4,r17,65535
1010b580:	218b383a 	mul	r5,r4,r6
1010b584:	30c5383a 	mul	r2,r6,r3
1010b588:	2249383a 	mul	r4,r4,r9
1010b58c:	280ed43a 	srli	r7,r5,16
1010b590:	9225c83a 	sub	r18,r18,r8
1010b594:	2089883a 	add	r4,r4,r2
1010b598:	3909883a 	add	r4,r7,r4
1010b59c:	1a47383a 	mul	r3,r3,r9
1010b5a0:	2080022e 	bgeu	r4,r2,1010b5ac <__divdf3+0x438>
1010b5a4:	00800074 	movhi	r2,1
1010b5a8:	1887883a 	add	r3,r3,r2
1010b5ac:	2004d43a 	srli	r2,r4,16
1010b5b0:	2008943a 	slli	r4,r4,16
1010b5b4:	297fffcc 	andi	r5,r5,65535
1010b5b8:	10c7883a 	add	r3,r2,r3
1010b5bc:	2149883a 	add	r4,r4,r5
1010b5c0:	90c0a536 	bltu	r18,r3,1010b858 <__divdf3+0x6e4>
1010b5c4:	90c0bf26 	beq	r18,r3,1010b8c4 <__divdf3+0x750>
1010b5c8:	90c7c83a 	sub	r3,r18,r3
1010b5cc:	810fc83a 	sub	r7,r16,r4
1010b5d0:	81e5803a 	cmpltu	r18,r16,r7
1010b5d4:	1ca5c83a 	sub	r18,r3,r18
1010b5d8:	e480c126 	beq	fp,r18,1010b8e0 <__divdf3+0x76c>
1010b5dc:	a00b883a 	mov	r5,r20
1010b5e0:	9009883a 	mov	r4,r18
1010b5e4:	d9800315 	stw	r6,12(sp)
1010b5e8:	d9c00215 	stw	r7,8(sp)
1010b5ec:	da400115 	stw	r9,4(sp)
1010b5f0:	010a80c0 	call	1010a80c <__udivsi3>
1010b5f4:	a00b883a 	mov	r5,r20
1010b5f8:	9009883a 	mov	r4,r18
1010b5fc:	d8800015 	stw	r2,0(sp)
1010b600:	010a8700 	call	1010a870 <__umodsi3>
1010b604:	d9c00217 	ldw	r7,8(sp)
1010b608:	da000017 	ldw	r8,0(sp)
1010b60c:	1006943a 	slli	r3,r2,16
1010b610:	3804d43a 	srli	r2,r7,16
1010b614:	ba21383a 	mul	r16,r23,r8
1010b618:	d9800317 	ldw	r6,12(sp)
1010b61c:	10c4b03a 	or	r2,r2,r3
1010b620:	da400117 	ldw	r9,4(sp)
1010b624:	1400062e 	bgeu	r2,r16,1010b640 <__divdf3+0x4cc>
1010b628:	1705883a 	add	r2,r2,fp
1010b62c:	40ffffc4 	addi	r3,r8,-1
1010b630:	1700ad36 	bltu	r2,fp,1010b8e8 <__divdf3+0x774>
1010b634:	1400ac2e 	bgeu	r2,r16,1010b8e8 <__divdf3+0x774>
1010b638:	423fff84 	addi	r8,r8,-2
1010b63c:	1705883a 	add	r2,r2,fp
1010b640:	1421c83a 	sub	r16,r2,r16
1010b644:	a00b883a 	mov	r5,r20
1010b648:	8009883a 	mov	r4,r16
1010b64c:	d9800315 	stw	r6,12(sp)
1010b650:	d9c00215 	stw	r7,8(sp)
1010b654:	da000015 	stw	r8,0(sp)
1010b658:	da400115 	stw	r9,4(sp)
1010b65c:	010a80c0 	call	1010a80c <__udivsi3>
1010b660:	8009883a 	mov	r4,r16
1010b664:	a00b883a 	mov	r5,r20
1010b668:	1025883a 	mov	r18,r2
1010b66c:	010a8700 	call	1010a870 <__umodsi3>
1010b670:	d9c00217 	ldw	r7,8(sp)
1010b674:	1004943a 	slli	r2,r2,16
1010b678:	bcaf383a 	mul	r23,r23,r18
1010b67c:	393fffcc 	andi	r4,r7,65535
1010b680:	2088b03a 	or	r4,r4,r2
1010b684:	d9800317 	ldw	r6,12(sp)
1010b688:	da000017 	ldw	r8,0(sp)
1010b68c:	da400117 	ldw	r9,4(sp)
1010b690:	25c0062e 	bgeu	r4,r23,1010b6ac <__divdf3+0x538>
1010b694:	2709883a 	add	r4,r4,fp
1010b698:	90bfffc4 	addi	r2,r18,-1
1010b69c:	27009436 	bltu	r4,fp,1010b8f0 <__divdf3+0x77c>
1010b6a0:	25c0932e 	bgeu	r4,r23,1010b8f0 <__divdf3+0x77c>
1010b6a4:	94bfff84 	addi	r18,r18,-2
1010b6a8:	2709883a 	add	r4,r4,fp
1010b6ac:	4004943a 	slli	r2,r8,16
1010b6b0:	25efc83a 	sub	r23,r4,r23
1010b6b4:	1490b03a 	or	r8,r2,r18
1010b6b8:	4008d43a 	srli	r4,r8,16
1010b6bc:	40ffffcc 	andi	r3,r8,65535
1010b6c0:	30c5383a 	mul	r2,r6,r3
1010b6c4:	1a47383a 	mul	r3,r3,r9
1010b6c8:	310d383a 	mul	r6,r6,r4
1010b6cc:	100ad43a 	srli	r5,r2,16
1010b6d0:	4913383a 	mul	r9,r9,r4
1010b6d4:	1987883a 	add	r3,r3,r6
1010b6d8:	28c7883a 	add	r3,r5,r3
1010b6dc:	1980022e 	bgeu	r3,r6,1010b6e8 <__divdf3+0x574>
1010b6e0:	01000074 	movhi	r4,1
1010b6e4:	4913883a 	add	r9,r9,r4
1010b6e8:	1808d43a 	srli	r4,r3,16
1010b6ec:	1806943a 	slli	r3,r3,16
1010b6f0:	10bfffcc 	andi	r2,r2,65535
1010b6f4:	2253883a 	add	r9,r4,r9
1010b6f8:	1887883a 	add	r3,r3,r2
1010b6fc:	ba403836 	bltu	r23,r9,1010b7e0 <__divdf3+0x66c>
1010b700:	ba403626 	beq	r23,r9,1010b7dc <__divdf3+0x668>
1010b704:	42000054 	ori	r8,r8,1
1010b708:	a880ffc4 	addi	r2,r21,1023
1010b70c:	00bf570e 	bge	zero,r2,1010b46c <__alt_data_end+0xfffeb46c>
1010b710:	40c001cc 	andi	r3,r8,7
1010b714:	18000726 	beq	r3,zero,1010b734 <__divdf3+0x5c0>
1010b718:	40c003cc 	andi	r3,r8,15
1010b71c:	01000104 	movi	r4,4
1010b720:	19000426 	beq	r3,r4,1010b734 <__divdf3+0x5c0>
1010b724:	4107883a 	add	r3,r8,r4
1010b728:	1a11803a 	cmpltu	r8,r3,r8
1010b72c:	8a23883a 	add	r17,r17,r8
1010b730:	1811883a 	mov	r8,r3
1010b734:	88c0402c 	andhi	r3,r17,256
1010b738:	18000426 	beq	r3,zero,1010b74c <__divdf3+0x5d8>
1010b73c:	00ffc034 	movhi	r3,65280
1010b740:	18ffffc4 	addi	r3,r3,-1
1010b744:	a8810004 	addi	r2,r21,1024
1010b748:	88e2703a 	and	r17,r17,r3
1010b74c:	00c1ff84 	movi	r3,2046
1010b750:	18bee316 	blt	r3,r2,1010b2e0 <__alt_data_end+0xfffeb2e0>
1010b754:	8824977a 	slli	r18,r17,29
1010b758:	4010d0fa 	srli	r8,r8,3
1010b75c:	8822927a 	slli	r17,r17,9
1010b760:	1081ffcc 	andi	r2,r2,2047
1010b764:	9224b03a 	or	r18,r18,r8
1010b768:	880ad33a 	srli	r5,r17,12
1010b76c:	98c0004c 	andi	r3,r19,1
1010b770:	003edf06 	br	1010b2f0 <__alt_data_end+0xfffeb2f0>
1010b774:	8080022c 	andhi	r2,r16,8
1010b778:	10001226 	beq	r2,zero,1010b7c4 <__divdf3+0x650>
1010b77c:	8880022c 	andhi	r2,r17,8
1010b780:	1000101e 	bne	r2,zero,1010b7c4 <__divdf3+0x650>
1010b784:	00800434 	movhi	r2,16
1010b788:	89400234 	orhi	r5,r17,8
1010b78c:	10bfffc4 	addi	r2,r2,-1
1010b790:	b007883a 	mov	r3,r22
1010b794:	288a703a 	and	r5,r5,r2
1010b798:	4025883a 	mov	r18,r8
1010b79c:	003f3106 	br	1010b464 <__alt_data_end+0xfffeb464>
1010b7a0:	008000c4 	movi	r2,3
1010b7a4:	3080a626 	beq	r6,r2,1010ba40 <__divdf3+0x8cc>
1010b7a8:	00800044 	movi	r2,1
1010b7ac:	3080521e 	bne	r6,r2,1010b8f8 <__divdf3+0x784>
1010b7b0:	b807883a 	mov	r3,r23
1010b7b4:	0005883a 	mov	r2,zero
1010b7b8:	000b883a 	mov	r5,zero
1010b7bc:	0025883a 	mov	r18,zero
1010b7c0:	003ecb06 	br	1010b2f0 <__alt_data_end+0xfffeb2f0>
1010b7c4:	00800434 	movhi	r2,16
1010b7c8:	81400234 	orhi	r5,r16,8
1010b7cc:	10bfffc4 	addi	r2,r2,-1
1010b7d0:	a007883a 	mov	r3,r20
1010b7d4:	288a703a 	and	r5,r5,r2
1010b7d8:	003f2206 	br	1010b464 <__alt_data_end+0xfffeb464>
1010b7dc:	183fca26 	beq	r3,zero,1010b708 <__alt_data_end+0xfffeb708>
1010b7e0:	e5ef883a 	add	r23,fp,r23
1010b7e4:	40bfffc4 	addi	r2,r8,-1
1010b7e8:	bf00392e 	bgeu	r23,fp,1010b8d0 <__divdf3+0x75c>
1010b7ec:	1011883a 	mov	r8,r2
1010b7f0:	ba7fc41e 	bne	r23,r9,1010b704 <__alt_data_end+0xfffeb704>
1010b7f4:	b0ffc31e 	bne	r22,r3,1010b704 <__alt_data_end+0xfffeb704>
1010b7f8:	003fc306 	br	1010b708 <__alt_data_end+0xfffeb708>
1010b7fc:	10bff604 	addi	r2,r2,-40
1010b800:	98a0983a 	sll	r16,r19,r2
1010b804:	0025883a 	mov	r18,zero
1010b808:	003ee206 	br	1010b394 <__alt_data_end+0xfffeb394>
1010b80c:	d9800315 	stw	r6,12(sp)
1010b810:	d9c00215 	stw	r7,8(sp)
1010b814:	010cecc0 	call	1010cecc <__clzsi2>
1010b818:	10800804 	addi	r2,r2,32
1010b81c:	d9c00217 	ldw	r7,8(sp)
1010b820:	d9800317 	ldw	r6,12(sp)
1010b824:	003ed106 	br	1010b36c <__alt_data_end+0xfffeb36c>
1010b828:	10bff604 	addi	r2,r2,-40
1010b82c:	30a2983a 	sll	r17,r6,r2
1010b830:	0011883a 	mov	r8,zero
1010b834:	003ef506 	br	1010b40c <__alt_data_end+0xfffeb40c>
1010b838:	3009883a 	mov	r4,r6
1010b83c:	d9800315 	stw	r6,12(sp)
1010b840:	da400115 	stw	r9,4(sp)
1010b844:	010cecc0 	call	1010cecc <__clzsi2>
1010b848:	10800804 	addi	r2,r2,32
1010b84c:	da400117 	ldw	r9,4(sp)
1010b850:	d9800317 	ldw	r6,12(sp)
1010b854:	003ee306 	br	1010b3e4 <__alt_data_end+0xfffeb3e4>
1010b858:	85a1883a 	add	r16,r16,r22
1010b85c:	8585803a 	cmpltu	r2,r16,r22
1010b860:	1705883a 	add	r2,r2,fp
1010b864:	14a5883a 	add	r18,r2,r18
1010b868:	88bfffc4 	addi	r2,r17,-1
1010b86c:	e4800c2e 	bgeu	fp,r18,1010b8a0 <__divdf3+0x72c>
1010b870:	90c03e36 	bltu	r18,r3,1010b96c <__divdf3+0x7f8>
1010b874:	1c806926 	beq	r3,r18,1010ba1c <__divdf3+0x8a8>
1010b878:	90c7c83a 	sub	r3,r18,r3
1010b87c:	1023883a 	mov	r17,r2
1010b880:	003f5206 	br	1010b5cc <__alt_data_end+0xfffeb5cc>
1010b884:	923f0436 	bltu	r18,r8,1010b498 <__alt_data_end+0xfffeb498>
1010b888:	800897fa 	slli	r4,r16,31
1010b88c:	9004d07a 	srli	r2,r18,1
1010b890:	8006d07a 	srli	r3,r16,1
1010b894:	902097fa 	slli	r16,r18,31
1010b898:	20a4b03a 	or	r18,r4,r2
1010b89c:	003f0106 	br	1010b4a4 <__alt_data_end+0xfffeb4a4>
1010b8a0:	e4bff51e 	bne	fp,r18,1010b878 <__alt_data_end+0xfffeb878>
1010b8a4:	85bff22e 	bgeu	r16,r22,1010b870 <__alt_data_end+0xfffeb870>
1010b8a8:	e0c7c83a 	sub	r3,fp,r3
1010b8ac:	1023883a 	mov	r17,r2
1010b8b0:	003f4606 	br	1010b5cc <__alt_data_end+0xfffeb5cc>
1010b8b4:	100f883a 	mov	r7,r2
1010b8b8:	003f2b06 	br	1010b568 <__alt_data_end+0xfffeb568>
1010b8bc:	180d883a 	mov	r6,r3
1010b8c0:	003f1306 	br	1010b510 <__alt_data_end+0xfffeb510>
1010b8c4:	813fe436 	bltu	r16,r4,1010b858 <__alt_data_end+0xfffeb858>
1010b8c8:	0007883a 	mov	r3,zero
1010b8cc:	003f3f06 	br	1010b5cc <__alt_data_end+0xfffeb5cc>
1010b8d0:	ba402c36 	bltu	r23,r9,1010b984 <__divdf3+0x810>
1010b8d4:	4dc05426 	beq	r9,r23,1010ba28 <__divdf3+0x8b4>
1010b8d8:	1011883a 	mov	r8,r2
1010b8dc:	003f8906 	br	1010b704 <__alt_data_end+0xfffeb704>
1010b8e0:	023fffc4 	movi	r8,-1
1010b8e4:	003f8806 	br	1010b708 <__alt_data_end+0xfffeb708>
1010b8e8:	1811883a 	mov	r8,r3
1010b8ec:	003f5406 	br	1010b640 <__alt_data_end+0xfffeb640>
1010b8f0:	1025883a 	mov	r18,r2
1010b8f4:	003f6d06 	br	1010b6ac <__alt_data_end+0xfffeb6ac>
1010b8f8:	b827883a 	mov	r19,r23
1010b8fc:	003f8206 	br	1010b708 <__alt_data_end+0xfffeb708>
1010b900:	010007c4 	movi	r4,31
1010b904:	20c02616 	blt	r4,r3,1010b9a0 <__divdf3+0x82c>
1010b908:	00800804 	movi	r2,32
1010b90c:	10c5c83a 	sub	r2,r2,r3
1010b910:	888a983a 	sll	r5,r17,r2
1010b914:	40c8d83a 	srl	r4,r8,r3
1010b918:	4084983a 	sll	r2,r8,r2
1010b91c:	88e2d83a 	srl	r17,r17,r3
1010b920:	2906b03a 	or	r3,r5,r4
1010b924:	1004c03a 	cmpne	r2,r2,zero
1010b928:	1886b03a 	or	r3,r3,r2
1010b92c:	188001cc 	andi	r2,r3,7
1010b930:	10000726 	beq	r2,zero,1010b950 <__divdf3+0x7dc>
1010b934:	188003cc 	andi	r2,r3,15
1010b938:	01000104 	movi	r4,4
1010b93c:	11000426 	beq	r2,r4,1010b950 <__divdf3+0x7dc>
1010b940:	1805883a 	mov	r2,r3
1010b944:	10c00104 	addi	r3,r2,4
1010b948:	1885803a 	cmpltu	r2,r3,r2
1010b94c:	88a3883a 	add	r17,r17,r2
1010b950:	8880202c 	andhi	r2,r17,128
1010b954:	10002726 	beq	r2,zero,1010b9f4 <__divdf3+0x880>
1010b958:	98c0004c 	andi	r3,r19,1
1010b95c:	00800044 	movi	r2,1
1010b960:	000b883a 	mov	r5,zero
1010b964:	0025883a 	mov	r18,zero
1010b968:	003e6106 	br	1010b2f0 <__alt_data_end+0xfffeb2f0>
1010b96c:	85a1883a 	add	r16,r16,r22
1010b970:	8585803a 	cmpltu	r2,r16,r22
1010b974:	1705883a 	add	r2,r2,fp
1010b978:	14a5883a 	add	r18,r2,r18
1010b97c:	8c7fff84 	addi	r17,r17,-2
1010b980:	003f1106 	br	1010b5c8 <__alt_data_end+0xfffeb5c8>
1010b984:	b589883a 	add	r4,r22,r22
1010b988:	25ad803a 	cmpltu	r22,r4,r22
1010b98c:	b739883a 	add	fp,r22,fp
1010b990:	40bfff84 	addi	r2,r8,-2
1010b994:	bf2f883a 	add	r23,r23,fp
1010b998:	202d883a 	mov	r22,r4
1010b99c:	003f9306 	br	1010b7ec <__alt_data_end+0xfffeb7ec>
1010b9a0:	013ff844 	movi	r4,-31
1010b9a4:	2085c83a 	sub	r2,r4,r2
1010b9a8:	8888d83a 	srl	r4,r17,r2
1010b9ac:	00800804 	movi	r2,32
1010b9b0:	18802126 	beq	r3,r2,1010ba38 <__divdf3+0x8c4>
1010b9b4:	00801004 	movi	r2,64
1010b9b8:	10c5c83a 	sub	r2,r2,r3
1010b9bc:	8884983a 	sll	r2,r17,r2
1010b9c0:	1204b03a 	or	r2,r2,r8
1010b9c4:	1004c03a 	cmpne	r2,r2,zero
1010b9c8:	2084b03a 	or	r2,r4,r2
1010b9cc:	144001cc 	andi	r17,r2,7
1010b9d0:	88000d1e 	bne	r17,zero,1010ba08 <__divdf3+0x894>
1010b9d4:	000b883a 	mov	r5,zero
1010b9d8:	1024d0fa 	srli	r18,r2,3
1010b9dc:	98c0004c 	andi	r3,r19,1
1010b9e0:	0005883a 	mov	r2,zero
1010b9e4:	9464b03a 	or	r18,r18,r17
1010b9e8:	003e4106 	br	1010b2f0 <__alt_data_end+0xfffeb2f0>
1010b9ec:	1007883a 	mov	r3,r2
1010b9f0:	0023883a 	mov	r17,zero
1010b9f4:	880a927a 	slli	r5,r17,9
1010b9f8:	1805883a 	mov	r2,r3
1010b9fc:	8822977a 	slli	r17,r17,29
1010ba00:	280ad33a 	srli	r5,r5,12
1010ba04:	003ff406 	br	1010b9d8 <__alt_data_end+0xfffeb9d8>
1010ba08:	10c003cc 	andi	r3,r2,15
1010ba0c:	01000104 	movi	r4,4
1010ba10:	193ff626 	beq	r3,r4,1010b9ec <__alt_data_end+0xfffeb9ec>
1010ba14:	0023883a 	mov	r17,zero
1010ba18:	003fca06 	br	1010b944 <__alt_data_end+0xfffeb944>
1010ba1c:	813fd336 	bltu	r16,r4,1010b96c <__alt_data_end+0xfffeb96c>
1010ba20:	1023883a 	mov	r17,r2
1010ba24:	003fa806 	br	1010b8c8 <__alt_data_end+0xfffeb8c8>
1010ba28:	b0ffd636 	bltu	r22,r3,1010b984 <__alt_data_end+0xfffeb984>
1010ba2c:	1011883a 	mov	r8,r2
1010ba30:	b0ff341e 	bne	r22,r3,1010b704 <__alt_data_end+0xfffeb704>
1010ba34:	003f3406 	br	1010b708 <__alt_data_end+0xfffeb708>
1010ba38:	0005883a 	mov	r2,zero
1010ba3c:	003fe006 	br	1010b9c0 <__alt_data_end+0xfffeb9c0>
1010ba40:	00800434 	movhi	r2,16
1010ba44:	89400234 	orhi	r5,r17,8
1010ba48:	10bfffc4 	addi	r2,r2,-1
1010ba4c:	b807883a 	mov	r3,r23
1010ba50:	288a703a 	and	r5,r5,r2
1010ba54:	4025883a 	mov	r18,r8
1010ba58:	003e8206 	br	1010b464 <__alt_data_end+0xfffeb464>

1010ba5c <__eqdf2>:
1010ba5c:	2804d53a 	srli	r2,r5,20
1010ba60:	3806d53a 	srli	r3,r7,20
1010ba64:	02000434 	movhi	r8,16
1010ba68:	423fffc4 	addi	r8,r8,-1
1010ba6c:	1081ffcc 	andi	r2,r2,2047
1010ba70:	0281ffc4 	movi	r10,2047
1010ba74:	2a12703a 	and	r9,r5,r8
1010ba78:	18c1ffcc 	andi	r3,r3,2047
1010ba7c:	3a10703a 	and	r8,r7,r8
1010ba80:	280ad7fa 	srli	r5,r5,31
1010ba84:	380ed7fa 	srli	r7,r7,31
1010ba88:	12801026 	beq	r2,r10,1010bacc <__eqdf2+0x70>
1010ba8c:	0281ffc4 	movi	r10,2047
1010ba90:	1a800a26 	beq	r3,r10,1010babc <__eqdf2+0x60>
1010ba94:	10c00226 	beq	r2,r3,1010baa0 <__eqdf2+0x44>
1010ba98:	00800044 	movi	r2,1
1010ba9c:	f800283a 	ret
1010baa0:	4a3ffd1e 	bne	r9,r8,1010ba98 <__alt_data_end+0xfffeba98>
1010baa4:	21bffc1e 	bne	r4,r6,1010ba98 <__alt_data_end+0xfffeba98>
1010baa8:	29c00c26 	beq	r5,r7,1010badc <__eqdf2+0x80>
1010baac:	103ffa1e 	bne	r2,zero,1010ba98 <__alt_data_end+0xfffeba98>
1010bab0:	2244b03a 	or	r2,r4,r9
1010bab4:	1004c03a 	cmpne	r2,r2,zero
1010bab8:	f800283a 	ret
1010babc:	3214b03a 	or	r10,r6,r8
1010bac0:	503ff426 	beq	r10,zero,1010ba94 <__alt_data_end+0xfffeba94>
1010bac4:	00800044 	movi	r2,1
1010bac8:	f800283a 	ret
1010bacc:	2254b03a 	or	r10,r4,r9
1010bad0:	503fee26 	beq	r10,zero,1010ba8c <__alt_data_end+0xfffeba8c>
1010bad4:	00800044 	movi	r2,1
1010bad8:	f800283a 	ret
1010badc:	0005883a 	mov	r2,zero
1010bae0:	f800283a 	ret

1010bae4 <__gedf2>:
1010bae4:	2804d53a 	srli	r2,r5,20
1010bae8:	3806d53a 	srli	r3,r7,20
1010baec:	02000434 	movhi	r8,16
1010baf0:	423fffc4 	addi	r8,r8,-1
1010baf4:	1081ffcc 	andi	r2,r2,2047
1010baf8:	0241ffc4 	movi	r9,2047
1010bafc:	2a14703a 	and	r10,r5,r8
1010bb00:	18c1ffcc 	andi	r3,r3,2047
1010bb04:	3a10703a 	and	r8,r7,r8
1010bb08:	280ad7fa 	srli	r5,r5,31
1010bb0c:	380ed7fa 	srli	r7,r7,31
1010bb10:	12401d26 	beq	r2,r9,1010bb88 <__gedf2+0xa4>
1010bb14:	0241ffc4 	movi	r9,2047
1010bb18:	1a401226 	beq	r3,r9,1010bb64 <__gedf2+0x80>
1010bb1c:	1000081e 	bne	r2,zero,1010bb40 <__gedf2+0x5c>
1010bb20:	2296b03a 	or	r11,r4,r10
1010bb24:	5813003a 	cmpeq	r9,r11,zero
1010bb28:	1800091e 	bne	r3,zero,1010bb50 <__gedf2+0x6c>
1010bb2c:	3218b03a 	or	r12,r6,r8
1010bb30:	6000071e 	bne	r12,zero,1010bb50 <__gedf2+0x6c>
1010bb34:	0005883a 	mov	r2,zero
1010bb38:	5800101e 	bne	r11,zero,1010bb7c <__gedf2+0x98>
1010bb3c:	f800283a 	ret
1010bb40:	18000c1e 	bne	r3,zero,1010bb74 <__gedf2+0x90>
1010bb44:	3212b03a 	or	r9,r6,r8
1010bb48:	48000c26 	beq	r9,zero,1010bb7c <__gedf2+0x98>
1010bb4c:	0013883a 	mov	r9,zero
1010bb50:	39c03fcc 	andi	r7,r7,255
1010bb54:	48000826 	beq	r9,zero,1010bb78 <__gedf2+0x94>
1010bb58:	38000926 	beq	r7,zero,1010bb80 <__gedf2+0x9c>
1010bb5c:	00800044 	movi	r2,1
1010bb60:	f800283a 	ret
1010bb64:	3212b03a 	or	r9,r6,r8
1010bb68:	483fec26 	beq	r9,zero,1010bb1c <__alt_data_end+0xfffebb1c>
1010bb6c:	00bfff84 	movi	r2,-2
1010bb70:	f800283a 	ret
1010bb74:	39c03fcc 	andi	r7,r7,255
1010bb78:	29c00626 	beq	r5,r7,1010bb94 <__gedf2+0xb0>
1010bb7c:	283ff726 	beq	r5,zero,1010bb5c <__alt_data_end+0xfffebb5c>
1010bb80:	00bfffc4 	movi	r2,-1
1010bb84:	f800283a 	ret
1010bb88:	2292b03a 	or	r9,r4,r10
1010bb8c:	483fe126 	beq	r9,zero,1010bb14 <__alt_data_end+0xfffebb14>
1010bb90:	003ff606 	br	1010bb6c <__alt_data_end+0xfffebb6c>
1010bb94:	18bff916 	blt	r3,r2,1010bb7c <__alt_data_end+0xfffebb7c>
1010bb98:	10c00316 	blt	r2,r3,1010bba8 <__gedf2+0xc4>
1010bb9c:	42bff736 	bltu	r8,r10,1010bb7c <__alt_data_end+0xfffebb7c>
1010bba0:	52000326 	beq	r10,r8,1010bbb0 <__gedf2+0xcc>
1010bba4:	5200042e 	bgeu	r10,r8,1010bbb8 <__gedf2+0xd4>
1010bba8:	283fec1e 	bne	r5,zero,1010bb5c <__alt_data_end+0xfffebb5c>
1010bbac:	003ff406 	br	1010bb80 <__alt_data_end+0xfffebb80>
1010bbb0:	313ff236 	bltu	r6,r4,1010bb7c <__alt_data_end+0xfffebb7c>
1010bbb4:	21bffc36 	bltu	r4,r6,1010bba8 <__alt_data_end+0xfffebba8>
1010bbb8:	0005883a 	mov	r2,zero
1010bbbc:	f800283a 	ret

1010bbc0 <__ledf2>:
1010bbc0:	2804d53a 	srli	r2,r5,20
1010bbc4:	3810d53a 	srli	r8,r7,20
1010bbc8:	00c00434 	movhi	r3,16
1010bbcc:	18ffffc4 	addi	r3,r3,-1
1010bbd0:	1081ffcc 	andi	r2,r2,2047
1010bbd4:	0241ffc4 	movi	r9,2047
1010bbd8:	28d4703a 	and	r10,r5,r3
1010bbdc:	4201ffcc 	andi	r8,r8,2047
1010bbe0:	38c6703a 	and	r3,r7,r3
1010bbe4:	280ad7fa 	srli	r5,r5,31
1010bbe8:	380ed7fa 	srli	r7,r7,31
1010bbec:	12401f26 	beq	r2,r9,1010bc6c <__ledf2+0xac>
1010bbf0:	0241ffc4 	movi	r9,2047
1010bbf4:	42401426 	beq	r8,r9,1010bc48 <__ledf2+0x88>
1010bbf8:	1000091e 	bne	r2,zero,1010bc20 <__ledf2+0x60>
1010bbfc:	2296b03a 	or	r11,r4,r10
1010bc00:	5813003a 	cmpeq	r9,r11,zero
1010bc04:	29403fcc 	andi	r5,r5,255
1010bc08:	40000a1e 	bne	r8,zero,1010bc34 <__ledf2+0x74>
1010bc0c:	30d8b03a 	or	r12,r6,r3
1010bc10:	6000081e 	bne	r12,zero,1010bc34 <__ledf2+0x74>
1010bc14:	0005883a 	mov	r2,zero
1010bc18:	5800111e 	bne	r11,zero,1010bc60 <__ledf2+0xa0>
1010bc1c:	f800283a 	ret
1010bc20:	29403fcc 	andi	r5,r5,255
1010bc24:	40000c1e 	bne	r8,zero,1010bc58 <__ledf2+0x98>
1010bc28:	30d2b03a 	or	r9,r6,r3
1010bc2c:	48000c26 	beq	r9,zero,1010bc60 <__ledf2+0xa0>
1010bc30:	0013883a 	mov	r9,zero
1010bc34:	39c03fcc 	andi	r7,r7,255
1010bc38:	48000826 	beq	r9,zero,1010bc5c <__ledf2+0x9c>
1010bc3c:	38001126 	beq	r7,zero,1010bc84 <__ledf2+0xc4>
1010bc40:	00800044 	movi	r2,1
1010bc44:	f800283a 	ret
1010bc48:	30d2b03a 	or	r9,r6,r3
1010bc4c:	483fea26 	beq	r9,zero,1010bbf8 <__alt_data_end+0xfffebbf8>
1010bc50:	00800084 	movi	r2,2
1010bc54:	f800283a 	ret
1010bc58:	39c03fcc 	andi	r7,r7,255
1010bc5c:	39400726 	beq	r7,r5,1010bc7c <__ledf2+0xbc>
1010bc60:	2800081e 	bne	r5,zero,1010bc84 <__ledf2+0xc4>
1010bc64:	00800044 	movi	r2,1
1010bc68:	f800283a 	ret
1010bc6c:	2292b03a 	or	r9,r4,r10
1010bc70:	483fdf26 	beq	r9,zero,1010bbf0 <__alt_data_end+0xfffebbf0>
1010bc74:	00800084 	movi	r2,2
1010bc78:	f800283a 	ret
1010bc7c:	4080030e 	bge	r8,r2,1010bc8c <__ledf2+0xcc>
1010bc80:	383fef26 	beq	r7,zero,1010bc40 <__alt_data_end+0xfffebc40>
1010bc84:	00bfffc4 	movi	r2,-1
1010bc88:	f800283a 	ret
1010bc8c:	123feb16 	blt	r2,r8,1010bc3c <__alt_data_end+0xfffebc3c>
1010bc90:	1abff336 	bltu	r3,r10,1010bc60 <__alt_data_end+0xfffebc60>
1010bc94:	50c00326 	beq	r10,r3,1010bca4 <__ledf2+0xe4>
1010bc98:	50c0042e 	bgeu	r10,r3,1010bcac <__ledf2+0xec>
1010bc9c:	283fe81e 	bne	r5,zero,1010bc40 <__alt_data_end+0xfffebc40>
1010bca0:	003ff806 	br	1010bc84 <__alt_data_end+0xfffebc84>
1010bca4:	313fee36 	bltu	r6,r4,1010bc60 <__alt_data_end+0xfffebc60>
1010bca8:	21bffc36 	bltu	r4,r6,1010bc9c <__alt_data_end+0xfffebc9c>
1010bcac:	0005883a 	mov	r2,zero
1010bcb0:	f800283a 	ret

1010bcb4 <__muldf3>:
1010bcb4:	defff304 	addi	sp,sp,-52
1010bcb8:	dd400815 	stw	r21,32(sp)
1010bcbc:	282ad53a 	srli	r21,r5,20
1010bcc0:	dd800915 	stw	r22,36(sp)
1010bcc4:	282cd7fa 	srli	r22,r5,31
1010bcc8:	dc000315 	stw	r16,12(sp)
1010bccc:	04000434 	movhi	r16,16
1010bcd0:	dd000715 	stw	r20,28(sp)
1010bcd4:	843fffc4 	addi	r16,r16,-1
1010bcd8:	dfc00c15 	stw	ra,48(sp)
1010bcdc:	df000b15 	stw	fp,44(sp)
1010bce0:	ddc00a15 	stw	r23,40(sp)
1010bce4:	dcc00615 	stw	r19,24(sp)
1010bce8:	dc800515 	stw	r18,20(sp)
1010bcec:	dc400415 	stw	r17,16(sp)
1010bcf0:	ad41ffcc 	andi	r21,r21,2047
1010bcf4:	2c20703a 	and	r16,r5,r16
1010bcf8:	b029883a 	mov	r20,r22
1010bcfc:	b2403fcc 	andi	r9,r22,255
1010bd00:	a8006026 	beq	r21,zero,1010be84 <__muldf3+0x1d0>
1010bd04:	0081ffc4 	movi	r2,2047
1010bd08:	2027883a 	mov	r19,r4
1010bd0c:	a8803626 	beq	r21,r2,1010bde8 <__muldf3+0x134>
1010bd10:	80c00434 	orhi	r3,r16,16
1010bd14:	180690fa 	slli	r3,r3,3
1010bd18:	2020d77a 	srli	r16,r4,29
1010bd1c:	202690fa 	slli	r19,r4,3
1010bd20:	ad7f0044 	addi	r21,r21,-1023
1010bd24:	80e0b03a 	or	r16,r16,r3
1010bd28:	0025883a 	mov	r18,zero
1010bd2c:	0039883a 	mov	fp,zero
1010bd30:	3808d53a 	srli	r4,r7,20
1010bd34:	382ed7fa 	srli	r23,r7,31
1010bd38:	04400434 	movhi	r17,16
1010bd3c:	8c7fffc4 	addi	r17,r17,-1
1010bd40:	2101ffcc 	andi	r4,r4,2047
1010bd44:	3011883a 	mov	r8,r6
1010bd48:	3c62703a 	and	r17,r7,r17
1010bd4c:	ba803fcc 	andi	r10,r23,255
1010bd50:	20006d26 	beq	r4,zero,1010bf08 <__muldf3+0x254>
1010bd54:	0081ffc4 	movi	r2,2047
1010bd58:	20806526 	beq	r4,r2,1010bef0 <__muldf3+0x23c>
1010bd5c:	88c00434 	orhi	r3,r17,16
1010bd60:	180690fa 	slli	r3,r3,3
1010bd64:	3022d77a 	srli	r17,r6,29
1010bd68:	301090fa 	slli	r8,r6,3
1010bd6c:	213f0044 	addi	r4,r4,-1023
1010bd70:	88e2b03a 	or	r17,r17,r3
1010bd74:	000b883a 	mov	r5,zero
1010bd78:	a909883a 	add	r4,r21,r4
1010bd7c:	2c84b03a 	or	r2,r5,r18
1010bd80:	00c003c4 	movi	r3,15
1010bd84:	bdacf03a 	xor	r22,r23,r22
1010bd88:	22c00044 	addi	r11,r4,1
1010bd8c:	18809936 	bltu	r3,r2,1010bff4 <__muldf3+0x340>
1010bd90:	100490ba 	slli	r2,r2,2
1010bd94:	00c40474 	movhi	r3,4113
1010bd98:	18ef6a04 	addi	r3,r3,-16984
1010bd9c:	10c5883a 	add	r2,r2,r3
1010bda0:	10800017 	ldw	r2,0(r2)
1010bda4:	1000683a 	jmp	r2
1010bda8:	1010bff4 	orhi	zero,r2,17151
1010bdac:	1010be08 	cmpgei	zero,r2,17144
1010bdb0:	1010be08 	cmpgei	zero,r2,17144
1010bdb4:	1010be04 	addi	zero,r2,17144
1010bdb8:	1010bfd0 	cmplti	zero,r2,17151
1010bdbc:	1010bfd0 	cmplti	zero,r2,17151
1010bdc0:	1010bfb8 	rdprs	zero,r2,17150
1010bdc4:	1010be04 	addi	zero,r2,17144
1010bdc8:	1010bfd0 	cmplti	zero,r2,17151
1010bdcc:	1010bfb8 	rdprs	zero,r2,17150
1010bdd0:	1010bfd0 	cmplti	zero,r2,17151
1010bdd4:	1010be04 	addi	zero,r2,17144
1010bdd8:	1010bfe0 	cmpeqi	zero,r2,17151
1010bddc:	1010bfe0 	cmpeqi	zero,r2,17151
1010bde0:	1010bfe0 	cmpeqi	zero,r2,17151
1010bde4:	1010c1fc 	xorhi	zero,r2,17159
1010bde8:	2404b03a 	or	r2,r4,r16
1010bdec:	10006f1e 	bne	r2,zero,1010bfac <__muldf3+0x2f8>
1010bdf0:	04800204 	movi	r18,8
1010bdf4:	0021883a 	mov	r16,zero
1010bdf8:	0027883a 	mov	r19,zero
1010bdfc:	07000084 	movi	fp,2
1010be00:	003fcb06 	br	1010bd30 <__alt_data_end+0xfffebd30>
1010be04:	502d883a 	mov	r22,r10
1010be08:	00800084 	movi	r2,2
1010be0c:	28805726 	beq	r5,r2,1010bf6c <__muldf3+0x2b8>
1010be10:	008000c4 	movi	r2,3
1010be14:	28816626 	beq	r5,r2,1010c3b0 <__muldf3+0x6fc>
1010be18:	00800044 	movi	r2,1
1010be1c:	2881411e 	bne	r5,r2,1010c324 <__muldf3+0x670>
1010be20:	b029883a 	mov	r20,r22
1010be24:	0005883a 	mov	r2,zero
1010be28:	000b883a 	mov	r5,zero
1010be2c:	0027883a 	mov	r19,zero
1010be30:	1004953a 	slli	r2,r2,20
1010be34:	a0c03fcc 	andi	r3,r20,255
1010be38:	04400434 	movhi	r17,16
1010be3c:	8c7fffc4 	addi	r17,r17,-1
1010be40:	180697fa 	slli	r3,r3,31
1010be44:	2c4a703a 	and	r5,r5,r17
1010be48:	288ab03a 	or	r5,r5,r2
1010be4c:	28c6b03a 	or	r3,r5,r3
1010be50:	9805883a 	mov	r2,r19
1010be54:	dfc00c17 	ldw	ra,48(sp)
1010be58:	df000b17 	ldw	fp,44(sp)
1010be5c:	ddc00a17 	ldw	r23,40(sp)
1010be60:	dd800917 	ldw	r22,36(sp)
1010be64:	dd400817 	ldw	r21,32(sp)
1010be68:	dd000717 	ldw	r20,28(sp)
1010be6c:	dcc00617 	ldw	r19,24(sp)
1010be70:	dc800517 	ldw	r18,20(sp)
1010be74:	dc400417 	ldw	r17,16(sp)
1010be78:	dc000317 	ldw	r16,12(sp)
1010be7c:	dec00d04 	addi	sp,sp,52
1010be80:	f800283a 	ret
1010be84:	2404b03a 	or	r2,r4,r16
1010be88:	2025883a 	mov	r18,r4
1010be8c:	10004226 	beq	r2,zero,1010bf98 <__muldf3+0x2e4>
1010be90:	8000fc26 	beq	r16,zero,1010c284 <__muldf3+0x5d0>
1010be94:	8009883a 	mov	r4,r16
1010be98:	d9800215 	stw	r6,8(sp)
1010be9c:	d9c00015 	stw	r7,0(sp)
1010bea0:	da400115 	stw	r9,4(sp)
1010bea4:	010cecc0 	call	1010cecc <__clzsi2>
1010bea8:	d9800217 	ldw	r6,8(sp)
1010beac:	d9c00017 	ldw	r7,0(sp)
1010beb0:	da400117 	ldw	r9,4(sp)
1010beb4:	10fffd44 	addi	r3,r2,-11
1010beb8:	01000704 	movi	r4,28
1010bebc:	20c0ed16 	blt	r4,r3,1010c274 <__muldf3+0x5c0>
1010bec0:	01000744 	movi	r4,29
1010bec4:	147ffe04 	addi	r17,r2,-8
1010bec8:	20c9c83a 	sub	r4,r4,r3
1010becc:	8460983a 	sll	r16,r16,r17
1010bed0:	9108d83a 	srl	r4,r18,r4
1010bed4:	9466983a 	sll	r19,r18,r17
1010bed8:	2420b03a 	or	r16,r4,r16
1010bedc:	013f0084 	movi	r4,-1022
1010bee0:	20ebc83a 	sub	r21,r4,r3
1010bee4:	0025883a 	mov	r18,zero
1010bee8:	0039883a 	mov	fp,zero
1010beec:	003f9006 	br	1010bd30 <__alt_data_end+0xfffebd30>
1010bef0:	3444b03a 	or	r2,r6,r17
1010bef4:	1000261e 	bne	r2,zero,1010bf90 <__muldf3+0x2dc>
1010bef8:	0023883a 	mov	r17,zero
1010befc:	0011883a 	mov	r8,zero
1010bf00:	01400084 	movi	r5,2
1010bf04:	003f9c06 	br	1010bd78 <__alt_data_end+0xfffebd78>
1010bf08:	3444b03a 	or	r2,r6,r17
1010bf0c:	10001c26 	beq	r2,zero,1010bf80 <__muldf3+0x2cc>
1010bf10:	8800ce26 	beq	r17,zero,1010c24c <__muldf3+0x598>
1010bf14:	8809883a 	mov	r4,r17
1010bf18:	d9800215 	stw	r6,8(sp)
1010bf1c:	da400115 	stw	r9,4(sp)
1010bf20:	da800015 	stw	r10,0(sp)
1010bf24:	010cecc0 	call	1010cecc <__clzsi2>
1010bf28:	d9800217 	ldw	r6,8(sp)
1010bf2c:	da400117 	ldw	r9,4(sp)
1010bf30:	da800017 	ldw	r10,0(sp)
1010bf34:	113ffd44 	addi	r4,r2,-11
1010bf38:	00c00704 	movi	r3,28
1010bf3c:	1900bf16 	blt	r3,r4,1010c23c <__muldf3+0x588>
1010bf40:	00c00744 	movi	r3,29
1010bf44:	123ffe04 	addi	r8,r2,-8
1010bf48:	1907c83a 	sub	r3,r3,r4
1010bf4c:	8a22983a 	sll	r17,r17,r8
1010bf50:	30c6d83a 	srl	r3,r6,r3
1010bf54:	3210983a 	sll	r8,r6,r8
1010bf58:	1c62b03a 	or	r17,r3,r17
1010bf5c:	017f0084 	movi	r5,-1022
1010bf60:	2909c83a 	sub	r4,r5,r4
1010bf64:	000b883a 	mov	r5,zero
1010bf68:	003f8306 	br	1010bd78 <__alt_data_end+0xfffebd78>
1010bf6c:	b029883a 	mov	r20,r22
1010bf70:	0081ffc4 	movi	r2,2047
1010bf74:	000b883a 	mov	r5,zero
1010bf78:	0027883a 	mov	r19,zero
1010bf7c:	003fac06 	br	1010be30 <__alt_data_end+0xfffebe30>
1010bf80:	0023883a 	mov	r17,zero
1010bf84:	0011883a 	mov	r8,zero
1010bf88:	01400044 	movi	r5,1
1010bf8c:	003f7a06 	br	1010bd78 <__alt_data_end+0xfffebd78>
1010bf90:	014000c4 	movi	r5,3
1010bf94:	003f7806 	br	1010bd78 <__alt_data_end+0xfffebd78>
1010bf98:	04800104 	movi	r18,4
1010bf9c:	0021883a 	mov	r16,zero
1010bfa0:	0027883a 	mov	r19,zero
1010bfa4:	07000044 	movi	fp,1
1010bfa8:	003f6106 	br	1010bd30 <__alt_data_end+0xfffebd30>
1010bfac:	04800304 	movi	r18,12
1010bfb0:	070000c4 	movi	fp,3
1010bfb4:	003f5e06 	br	1010bd30 <__alt_data_end+0xfffebd30>
1010bfb8:	01400434 	movhi	r5,16
1010bfbc:	0029883a 	mov	r20,zero
1010bfc0:	297fffc4 	addi	r5,r5,-1
1010bfc4:	04ffffc4 	movi	r19,-1
1010bfc8:	0081ffc4 	movi	r2,2047
1010bfcc:	003f9806 	br	1010be30 <__alt_data_end+0xfffebe30>
1010bfd0:	8023883a 	mov	r17,r16
1010bfd4:	9811883a 	mov	r8,r19
1010bfd8:	e00b883a 	mov	r5,fp
1010bfdc:	003f8a06 	br	1010be08 <__alt_data_end+0xfffebe08>
1010bfe0:	8023883a 	mov	r17,r16
1010bfe4:	9811883a 	mov	r8,r19
1010bfe8:	482d883a 	mov	r22,r9
1010bfec:	e00b883a 	mov	r5,fp
1010bff0:	003f8506 	br	1010be08 <__alt_data_end+0xfffebe08>
1010bff4:	980ad43a 	srli	r5,r19,16
1010bff8:	401ad43a 	srli	r13,r8,16
1010bffc:	9cffffcc 	andi	r19,r19,65535
1010c000:	423fffcc 	andi	r8,r8,65535
1010c004:	44d9383a 	mul	r12,r8,r19
1010c008:	4145383a 	mul	r2,r8,r5
1010c00c:	6ccd383a 	mul	r6,r13,r19
1010c010:	6006d43a 	srli	r3,r12,16
1010c014:	2b5d383a 	mul	r14,r5,r13
1010c018:	308d883a 	add	r6,r6,r2
1010c01c:	198d883a 	add	r6,r3,r6
1010c020:	3080022e 	bgeu	r6,r2,1010c02c <__muldf3+0x378>
1010c024:	00800074 	movhi	r2,1
1010c028:	709d883a 	add	r14,r14,r2
1010c02c:	8828d43a 	srli	r20,r17,16
1010c030:	8bffffcc 	andi	r15,r17,65535
1010c034:	7ce3383a 	mul	r17,r15,r19
1010c038:	7945383a 	mul	r2,r15,r5
1010c03c:	a4e7383a 	mul	r19,r20,r19
1010c040:	8814d43a 	srli	r10,r17,16
1010c044:	3012943a 	slli	r9,r6,16
1010c048:	98a7883a 	add	r19,r19,r2
1010c04c:	633fffcc 	andi	r12,r12,65535
1010c050:	54d5883a 	add	r10,r10,r19
1010c054:	3006d43a 	srli	r3,r6,16
1010c058:	4b13883a 	add	r9,r9,r12
1010c05c:	2d0b383a 	mul	r5,r5,r20
1010c060:	5080022e 	bgeu	r10,r2,1010c06c <__muldf3+0x3b8>
1010c064:	00800074 	movhi	r2,1
1010c068:	288b883a 	add	r5,r5,r2
1010c06c:	802ad43a 	srli	r21,r16,16
1010c070:	843fffcc 	andi	r16,r16,65535
1010c074:	440d383a 	mul	r6,r8,r16
1010c078:	4565383a 	mul	r18,r8,r21
1010c07c:	8359383a 	mul	r12,r16,r13
1010c080:	500e943a 	slli	r7,r10,16
1010c084:	3010d43a 	srli	r8,r6,16
1010c088:	5026d43a 	srli	r19,r10,16
1010c08c:	6499883a 	add	r12,r12,r18
1010c090:	8abfffcc 	andi	r10,r17,65535
1010c094:	3a95883a 	add	r10,r7,r10
1010c098:	4319883a 	add	r12,r8,r12
1010c09c:	9967883a 	add	r19,r19,r5
1010c0a0:	1a87883a 	add	r3,r3,r10
1010c0a4:	6d5b383a 	mul	r13,r13,r21
1010c0a8:	6480022e 	bgeu	r12,r18,1010c0b4 <__muldf3+0x400>
1010c0ac:	00800074 	movhi	r2,1
1010c0b0:	689b883a 	add	r13,r13,r2
1010c0b4:	7c25383a 	mul	r18,r15,r16
1010c0b8:	7d4b383a 	mul	r5,r15,r21
1010c0bc:	850f383a 	mul	r7,r16,r20
1010c0c0:	901ed43a 	srli	r15,r18,16
1010c0c4:	6004d43a 	srli	r2,r12,16
1010c0c8:	6010943a 	slli	r8,r12,16
1010c0cc:	394f883a 	add	r7,r7,r5
1010c0d0:	333fffcc 	andi	r12,r6,65535
1010c0d4:	79df883a 	add	r15,r15,r7
1010c0d8:	135b883a 	add	r13,r2,r13
1010c0dc:	a563383a 	mul	r17,r20,r21
1010c0e0:	4305883a 	add	r2,r8,r12
1010c0e4:	7940022e 	bgeu	r15,r5,1010c0f0 <__muldf3+0x43c>
1010c0e8:	01400074 	movhi	r5,1
1010c0ec:	8963883a 	add	r17,r17,r5
1010c0f0:	780a943a 	slli	r5,r15,16
1010c0f4:	91bfffcc 	andi	r6,r18,65535
1010c0f8:	70c7883a 	add	r3,r14,r3
1010c0fc:	298d883a 	add	r6,r5,r6
1010c100:	1a8f803a 	cmpltu	r7,r3,r10
1010c104:	34cb883a 	add	r5,r6,r19
1010c108:	10c7883a 	add	r3,r2,r3
1010c10c:	3955883a 	add	r10,r7,r5
1010c110:	1885803a 	cmpltu	r2,r3,r2
1010c114:	6a91883a 	add	r8,r13,r10
1010c118:	780cd43a 	srli	r6,r15,16
1010c11c:	1219883a 	add	r12,r2,r8
1010c120:	2ccb803a 	cmpltu	r5,r5,r19
1010c124:	51cf803a 	cmpltu	r7,r10,r7
1010c128:	29ceb03a 	or	r7,r5,r7
1010c12c:	4351803a 	cmpltu	r8,r8,r13
1010c130:	608b803a 	cmpltu	r5,r12,r2
1010c134:	4144b03a 	or	r2,r8,r5
1010c138:	398f883a 	add	r7,r7,r6
1010c13c:	3885883a 	add	r2,r7,r2
1010c140:	1810927a 	slli	r8,r3,9
1010c144:	1445883a 	add	r2,r2,r17
1010c148:	1004927a 	slli	r2,r2,9
1010c14c:	6022d5fa 	srli	r17,r12,23
1010c150:	1806d5fa 	srli	r3,r3,23
1010c154:	4252b03a 	or	r9,r8,r9
1010c158:	600a927a 	slli	r5,r12,9
1010c15c:	4810c03a 	cmpne	r8,r9,zero
1010c160:	1462b03a 	or	r17,r2,r17
1010c164:	40c6b03a 	or	r3,r8,r3
1010c168:	8880402c 	andhi	r2,r17,256
1010c16c:	1950b03a 	or	r8,r3,r5
1010c170:	10000726 	beq	r2,zero,1010c190 <__muldf3+0x4dc>
1010c174:	4006d07a 	srli	r3,r8,1
1010c178:	880497fa 	slli	r2,r17,31
1010c17c:	4200004c 	andi	r8,r8,1
1010c180:	8822d07a 	srli	r17,r17,1
1010c184:	1a10b03a 	or	r8,r3,r8
1010c188:	1210b03a 	or	r8,r2,r8
1010c18c:	5809883a 	mov	r4,r11
1010c190:	2080ffc4 	addi	r2,r4,1023
1010c194:	0080440e 	bge	zero,r2,1010c2a8 <__muldf3+0x5f4>
1010c198:	40c001cc 	andi	r3,r8,7
1010c19c:	18000726 	beq	r3,zero,1010c1bc <__muldf3+0x508>
1010c1a0:	40c003cc 	andi	r3,r8,15
1010c1a4:	01400104 	movi	r5,4
1010c1a8:	19400426 	beq	r3,r5,1010c1bc <__muldf3+0x508>
1010c1ac:	4147883a 	add	r3,r8,r5
1010c1b0:	1a11803a 	cmpltu	r8,r3,r8
1010c1b4:	8a23883a 	add	r17,r17,r8
1010c1b8:	1811883a 	mov	r8,r3
1010c1bc:	88c0402c 	andhi	r3,r17,256
1010c1c0:	18000426 	beq	r3,zero,1010c1d4 <__muldf3+0x520>
1010c1c4:	00ffc034 	movhi	r3,65280
1010c1c8:	18ffffc4 	addi	r3,r3,-1
1010c1cc:	20810004 	addi	r2,r4,1024
1010c1d0:	88e2703a 	and	r17,r17,r3
1010c1d4:	00c1ff84 	movi	r3,2046
1010c1d8:	18bf6416 	blt	r3,r2,1010bf6c <__alt_data_end+0xfffebf6c>
1010c1dc:	8826977a 	slli	r19,r17,29
1010c1e0:	4010d0fa 	srli	r8,r8,3
1010c1e4:	8822927a 	slli	r17,r17,9
1010c1e8:	1081ffcc 	andi	r2,r2,2047
1010c1ec:	9a26b03a 	or	r19,r19,r8
1010c1f0:	880ad33a 	srli	r5,r17,12
1010c1f4:	b029883a 	mov	r20,r22
1010c1f8:	003f0d06 	br	1010be30 <__alt_data_end+0xfffebe30>
1010c1fc:	8080022c 	andhi	r2,r16,8
1010c200:	10000926 	beq	r2,zero,1010c228 <__muldf3+0x574>
1010c204:	8880022c 	andhi	r2,r17,8
1010c208:	1000071e 	bne	r2,zero,1010c228 <__muldf3+0x574>
1010c20c:	00800434 	movhi	r2,16
1010c210:	89400234 	orhi	r5,r17,8
1010c214:	10bfffc4 	addi	r2,r2,-1
1010c218:	b829883a 	mov	r20,r23
1010c21c:	288a703a 	and	r5,r5,r2
1010c220:	4027883a 	mov	r19,r8
1010c224:	003f6806 	br	1010bfc8 <__alt_data_end+0xfffebfc8>
1010c228:	00800434 	movhi	r2,16
1010c22c:	81400234 	orhi	r5,r16,8
1010c230:	10bfffc4 	addi	r2,r2,-1
1010c234:	288a703a 	and	r5,r5,r2
1010c238:	003f6306 	br	1010bfc8 <__alt_data_end+0xfffebfc8>
1010c23c:	10bff604 	addi	r2,r2,-40
1010c240:	30a2983a 	sll	r17,r6,r2
1010c244:	0011883a 	mov	r8,zero
1010c248:	003f4406 	br	1010bf5c <__alt_data_end+0xfffebf5c>
1010c24c:	3009883a 	mov	r4,r6
1010c250:	d9800215 	stw	r6,8(sp)
1010c254:	da400115 	stw	r9,4(sp)
1010c258:	da800015 	stw	r10,0(sp)
1010c25c:	010cecc0 	call	1010cecc <__clzsi2>
1010c260:	10800804 	addi	r2,r2,32
1010c264:	da800017 	ldw	r10,0(sp)
1010c268:	da400117 	ldw	r9,4(sp)
1010c26c:	d9800217 	ldw	r6,8(sp)
1010c270:	003f3006 	br	1010bf34 <__alt_data_end+0xfffebf34>
1010c274:	10bff604 	addi	r2,r2,-40
1010c278:	90a0983a 	sll	r16,r18,r2
1010c27c:	0027883a 	mov	r19,zero
1010c280:	003f1606 	br	1010bedc <__alt_data_end+0xfffebedc>
1010c284:	d9800215 	stw	r6,8(sp)
1010c288:	d9c00015 	stw	r7,0(sp)
1010c28c:	da400115 	stw	r9,4(sp)
1010c290:	010cecc0 	call	1010cecc <__clzsi2>
1010c294:	10800804 	addi	r2,r2,32
1010c298:	da400117 	ldw	r9,4(sp)
1010c29c:	d9c00017 	ldw	r7,0(sp)
1010c2a0:	d9800217 	ldw	r6,8(sp)
1010c2a4:	003f0306 	br	1010beb4 <__alt_data_end+0xfffebeb4>
1010c2a8:	00c00044 	movi	r3,1
1010c2ac:	1887c83a 	sub	r3,r3,r2
1010c2b0:	01000e04 	movi	r4,56
1010c2b4:	20feda16 	blt	r4,r3,1010be20 <__alt_data_end+0xfffebe20>
1010c2b8:	010007c4 	movi	r4,31
1010c2bc:	20c01b16 	blt	r4,r3,1010c32c <__muldf3+0x678>
1010c2c0:	00800804 	movi	r2,32
1010c2c4:	10c5c83a 	sub	r2,r2,r3
1010c2c8:	888a983a 	sll	r5,r17,r2
1010c2cc:	40c8d83a 	srl	r4,r8,r3
1010c2d0:	4084983a 	sll	r2,r8,r2
1010c2d4:	88e2d83a 	srl	r17,r17,r3
1010c2d8:	2906b03a 	or	r3,r5,r4
1010c2dc:	1004c03a 	cmpne	r2,r2,zero
1010c2e0:	1886b03a 	or	r3,r3,r2
1010c2e4:	188001cc 	andi	r2,r3,7
1010c2e8:	10000726 	beq	r2,zero,1010c308 <__muldf3+0x654>
1010c2ec:	188003cc 	andi	r2,r3,15
1010c2f0:	01000104 	movi	r4,4
1010c2f4:	11000426 	beq	r2,r4,1010c308 <__muldf3+0x654>
1010c2f8:	1805883a 	mov	r2,r3
1010c2fc:	10c00104 	addi	r3,r2,4
1010c300:	1885803a 	cmpltu	r2,r3,r2
1010c304:	88a3883a 	add	r17,r17,r2
1010c308:	8880202c 	andhi	r2,r17,128
1010c30c:	10001c26 	beq	r2,zero,1010c380 <__muldf3+0x6cc>
1010c310:	b029883a 	mov	r20,r22
1010c314:	00800044 	movi	r2,1
1010c318:	000b883a 	mov	r5,zero
1010c31c:	0027883a 	mov	r19,zero
1010c320:	003ec306 	br	1010be30 <__alt_data_end+0xfffebe30>
1010c324:	5809883a 	mov	r4,r11
1010c328:	003f9906 	br	1010c190 <__alt_data_end+0xfffec190>
1010c32c:	013ff844 	movi	r4,-31
1010c330:	2085c83a 	sub	r2,r4,r2
1010c334:	8888d83a 	srl	r4,r17,r2
1010c338:	00800804 	movi	r2,32
1010c33c:	18801a26 	beq	r3,r2,1010c3a8 <__muldf3+0x6f4>
1010c340:	00801004 	movi	r2,64
1010c344:	10c5c83a 	sub	r2,r2,r3
1010c348:	8884983a 	sll	r2,r17,r2
1010c34c:	1204b03a 	or	r2,r2,r8
1010c350:	1004c03a 	cmpne	r2,r2,zero
1010c354:	2084b03a 	or	r2,r4,r2
1010c358:	144001cc 	andi	r17,r2,7
1010c35c:	88000d1e 	bne	r17,zero,1010c394 <__muldf3+0x6e0>
1010c360:	000b883a 	mov	r5,zero
1010c364:	1026d0fa 	srli	r19,r2,3
1010c368:	b029883a 	mov	r20,r22
1010c36c:	0005883a 	mov	r2,zero
1010c370:	9c66b03a 	or	r19,r19,r17
1010c374:	003eae06 	br	1010be30 <__alt_data_end+0xfffebe30>
1010c378:	1007883a 	mov	r3,r2
1010c37c:	0023883a 	mov	r17,zero
1010c380:	880a927a 	slli	r5,r17,9
1010c384:	1805883a 	mov	r2,r3
1010c388:	8822977a 	slli	r17,r17,29
1010c38c:	280ad33a 	srli	r5,r5,12
1010c390:	003ff406 	br	1010c364 <__alt_data_end+0xfffec364>
1010c394:	10c003cc 	andi	r3,r2,15
1010c398:	01000104 	movi	r4,4
1010c39c:	193ff626 	beq	r3,r4,1010c378 <__alt_data_end+0xfffec378>
1010c3a0:	0023883a 	mov	r17,zero
1010c3a4:	003fd506 	br	1010c2fc <__alt_data_end+0xfffec2fc>
1010c3a8:	0005883a 	mov	r2,zero
1010c3ac:	003fe706 	br	1010c34c <__alt_data_end+0xfffec34c>
1010c3b0:	00800434 	movhi	r2,16
1010c3b4:	89400234 	orhi	r5,r17,8
1010c3b8:	10bfffc4 	addi	r2,r2,-1
1010c3bc:	b029883a 	mov	r20,r22
1010c3c0:	288a703a 	and	r5,r5,r2
1010c3c4:	4027883a 	mov	r19,r8
1010c3c8:	003eff06 	br	1010bfc8 <__alt_data_end+0xfffebfc8>

1010c3cc <__subdf3>:
1010c3cc:	02000434 	movhi	r8,16
1010c3d0:	423fffc4 	addi	r8,r8,-1
1010c3d4:	defffb04 	addi	sp,sp,-20
1010c3d8:	2a14703a 	and	r10,r5,r8
1010c3dc:	3812d53a 	srli	r9,r7,20
1010c3e0:	3a10703a 	and	r8,r7,r8
1010c3e4:	2006d77a 	srli	r3,r4,29
1010c3e8:	3004d77a 	srli	r2,r6,29
1010c3ec:	dc000015 	stw	r16,0(sp)
1010c3f0:	501490fa 	slli	r10,r10,3
1010c3f4:	2820d53a 	srli	r16,r5,20
1010c3f8:	401090fa 	slli	r8,r8,3
1010c3fc:	dc800215 	stw	r18,8(sp)
1010c400:	dc400115 	stw	r17,4(sp)
1010c404:	dfc00415 	stw	ra,16(sp)
1010c408:	202290fa 	slli	r17,r4,3
1010c40c:	dcc00315 	stw	r19,12(sp)
1010c410:	4a41ffcc 	andi	r9,r9,2047
1010c414:	0101ffc4 	movi	r4,2047
1010c418:	2824d7fa 	srli	r18,r5,31
1010c41c:	8401ffcc 	andi	r16,r16,2047
1010c420:	50c6b03a 	or	r3,r10,r3
1010c424:	380ed7fa 	srli	r7,r7,31
1010c428:	408ab03a 	or	r5,r8,r2
1010c42c:	300c90fa 	slli	r6,r6,3
1010c430:	49009626 	beq	r9,r4,1010c68c <__subdf3+0x2c0>
1010c434:	39c0005c 	xori	r7,r7,1
1010c438:	8245c83a 	sub	r2,r16,r9
1010c43c:	3c807426 	beq	r7,r18,1010c610 <__subdf3+0x244>
1010c440:	0080af0e 	bge	zero,r2,1010c700 <__subdf3+0x334>
1010c444:	48002a1e 	bne	r9,zero,1010c4f0 <__subdf3+0x124>
1010c448:	2988b03a 	or	r4,r5,r6
1010c44c:	20009a1e 	bne	r4,zero,1010c6b8 <__subdf3+0x2ec>
1010c450:	888001cc 	andi	r2,r17,7
1010c454:	10000726 	beq	r2,zero,1010c474 <__subdf3+0xa8>
1010c458:	888003cc 	andi	r2,r17,15
1010c45c:	01000104 	movi	r4,4
1010c460:	11000426 	beq	r2,r4,1010c474 <__subdf3+0xa8>
1010c464:	890b883a 	add	r5,r17,r4
1010c468:	2c63803a 	cmpltu	r17,r5,r17
1010c46c:	1c47883a 	add	r3,r3,r17
1010c470:	2823883a 	mov	r17,r5
1010c474:	1880202c 	andhi	r2,r3,128
1010c478:	10005926 	beq	r2,zero,1010c5e0 <__subdf3+0x214>
1010c47c:	84000044 	addi	r16,r16,1
1010c480:	0081ffc4 	movi	r2,2047
1010c484:	8080be26 	beq	r16,r2,1010c780 <__subdf3+0x3b4>
1010c488:	017fe034 	movhi	r5,65408
1010c48c:	297fffc4 	addi	r5,r5,-1
1010c490:	1946703a 	and	r3,r3,r5
1010c494:	1804977a 	slli	r2,r3,29
1010c498:	1806927a 	slli	r3,r3,9
1010c49c:	8822d0fa 	srli	r17,r17,3
1010c4a0:	8401ffcc 	andi	r16,r16,2047
1010c4a4:	180ad33a 	srli	r5,r3,12
1010c4a8:	9100004c 	andi	r4,r18,1
1010c4ac:	1444b03a 	or	r2,r2,r17
1010c4b0:	80c1ffcc 	andi	r3,r16,2047
1010c4b4:	1820953a 	slli	r16,r3,20
1010c4b8:	20c03fcc 	andi	r3,r4,255
1010c4bc:	180897fa 	slli	r4,r3,31
1010c4c0:	00c00434 	movhi	r3,16
1010c4c4:	18ffffc4 	addi	r3,r3,-1
1010c4c8:	28c6703a 	and	r3,r5,r3
1010c4cc:	1c06b03a 	or	r3,r3,r16
1010c4d0:	1906b03a 	or	r3,r3,r4
1010c4d4:	dfc00417 	ldw	ra,16(sp)
1010c4d8:	dcc00317 	ldw	r19,12(sp)
1010c4dc:	dc800217 	ldw	r18,8(sp)
1010c4e0:	dc400117 	ldw	r17,4(sp)
1010c4e4:	dc000017 	ldw	r16,0(sp)
1010c4e8:	dec00504 	addi	sp,sp,20
1010c4ec:	f800283a 	ret
1010c4f0:	0101ffc4 	movi	r4,2047
1010c4f4:	813fd626 	beq	r16,r4,1010c450 <__alt_data_end+0xfffec450>
1010c4f8:	29402034 	orhi	r5,r5,128
1010c4fc:	01000e04 	movi	r4,56
1010c500:	2080a316 	blt	r4,r2,1010c790 <__subdf3+0x3c4>
1010c504:	010007c4 	movi	r4,31
1010c508:	2080c616 	blt	r4,r2,1010c824 <__subdf3+0x458>
1010c50c:	01000804 	movi	r4,32
1010c510:	2089c83a 	sub	r4,r4,r2
1010c514:	2910983a 	sll	r8,r5,r4
1010c518:	308ed83a 	srl	r7,r6,r2
1010c51c:	3108983a 	sll	r4,r6,r4
1010c520:	2884d83a 	srl	r2,r5,r2
1010c524:	41ccb03a 	or	r6,r8,r7
1010c528:	2008c03a 	cmpne	r4,r4,zero
1010c52c:	310cb03a 	or	r6,r6,r4
1010c530:	898dc83a 	sub	r6,r17,r6
1010c534:	89a3803a 	cmpltu	r17,r17,r6
1010c538:	1887c83a 	sub	r3,r3,r2
1010c53c:	1c47c83a 	sub	r3,r3,r17
1010c540:	3023883a 	mov	r17,r6
1010c544:	1880202c 	andhi	r2,r3,128
1010c548:	10002326 	beq	r2,zero,1010c5d8 <__subdf3+0x20c>
1010c54c:	04c02034 	movhi	r19,128
1010c550:	9cffffc4 	addi	r19,r19,-1
1010c554:	1ce6703a 	and	r19,r3,r19
1010c558:	98007a26 	beq	r19,zero,1010c744 <__subdf3+0x378>
1010c55c:	9809883a 	mov	r4,r19
1010c560:	010cecc0 	call	1010cecc <__clzsi2>
1010c564:	113ffe04 	addi	r4,r2,-8
1010c568:	00c007c4 	movi	r3,31
1010c56c:	19007b16 	blt	r3,r4,1010c75c <__subdf3+0x390>
1010c570:	00800804 	movi	r2,32
1010c574:	1105c83a 	sub	r2,r2,r4
1010c578:	8884d83a 	srl	r2,r17,r2
1010c57c:	9906983a 	sll	r3,r19,r4
1010c580:	8922983a 	sll	r17,r17,r4
1010c584:	10c4b03a 	or	r2,r2,r3
1010c588:	24007816 	blt	r4,r16,1010c76c <__subdf3+0x3a0>
1010c58c:	2421c83a 	sub	r16,r4,r16
1010c590:	80c00044 	addi	r3,r16,1
1010c594:	010007c4 	movi	r4,31
1010c598:	20c09516 	blt	r4,r3,1010c7f0 <__subdf3+0x424>
1010c59c:	01400804 	movi	r5,32
1010c5a0:	28cbc83a 	sub	r5,r5,r3
1010c5a4:	88c8d83a 	srl	r4,r17,r3
1010c5a8:	8962983a 	sll	r17,r17,r5
1010c5ac:	114a983a 	sll	r5,r2,r5
1010c5b0:	10c6d83a 	srl	r3,r2,r3
1010c5b4:	8804c03a 	cmpne	r2,r17,zero
1010c5b8:	290ab03a 	or	r5,r5,r4
1010c5bc:	28a2b03a 	or	r17,r5,r2
1010c5c0:	0021883a 	mov	r16,zero
1010c5c4:	003fa206 	br	1010c450 <__alt_data_end+0xfffec450>
1010c5c8:	2090b03a 	or	r8,r4,r2
1010c5cc:	40018e26 	beq	r8,zero,1010cc08 <__subdf3+0x83c>
1010c5d0:	1007883a 	mov	r3,r2
1010c5d4:	2023883a 	mov	r17,r4
1010c5d8:	888001cc 	andi	r2,r17,7
1010c5dc:	103f9e1e 	bne	r2,zero,1010c458 <__alt_data_end+0xfffec458>
1010c5e0:	1804977a 	slli	r2,r3,29
1010c5e4:	8822d0fa 	srli	r17,r17,3
1010c5e8:	1810d0fa 	srli	r8,r3,3
1010c5ec:	9100004c 	andi	r4,r18,1
1010c5f0:	1444b03a 	or	r2,r2,r17
1010c5f4:	00c1ffc4 	movi	r3,2047
1010c5f8:	80c02826 	beq	r16,r3,1010c69c <__subdf3+0x2d0>
1010c5fc:	01400434 	movhi	r5,16
1010c600:	297fffc4 	addi	r5,r5,-1
1010c604:	80e0703a 	and	r16,r16,r3
1010c608:	414a703a 	and	r5,r8,r5
1010c60c:	003fa806 	br	1010c4b0 <__alt_data_end+0xfffec4b0>
1010c610:	0080630e 	bge	zero,r2,1010c7a0 <__subdf3+0x3d4>
1010c614:	48003026 	beq	r9,zero,1010c6d8 <__subdf3+0x30c>
1010c618:	0101ffc4 	movi	r4,2047
1010c61c:	813f8c26 	beq	r16,r4,1010c450 <__alt_data_end+0xfffec450>
1010c620:	29402034 	orhi	r5,r5,128
1010c624:	01000e04 	movi	r4,56
1010c628:	2080a90e 	bge	r4,r2,1010c8d0 <__subdf3+0x504>
1010c62c:	298cb03a 	or	r6,r5,r6
1010c630:	3012c03a 	cmpne	r9,r6,zero
1010c634:	0005883a 	mov	r2,zero
1010c638:	4c53883a 	add	r9,r9,r17
1010c63c:	4c63803a 	cmpltu	r17,r9,r17
1010c640:	10c7883a 	add	r3,r2,r3
1010c644:	88c7883a 	add	r3,r17,r3
1010c648:	4823883a 	mov	r17,r9
1010c64c:	1880202c 	andhi	r2,r3,128
1010c650:	1000d026 	beq	r2,zero,1010c994 <__subdf3+0x5c8>
1010c654:	84000044 	addi	r16,r16,1
1010c658:	0081ffc4 	movi	r2,2047
1010c65c:	8080fe26 	beq	r16,r2,1010ca58 <__subdf3+0x68c>
1010c660:	00bfe034 	movhi	r2,65408
1010c664:	10bfffc4 	addi	r2,r2,-1
1010c668:	1886703a 	and	r3,r3,r2
1010c66c:	880ad07a 	srli	r5,r17,1
1010c670:	180497fa 	slli	r2,r3,31
1010c674:	8900004c 	andi	r4,r17,1
1010c678:	2922b03a 	or	r17,r5,r4
1010c67c:	1806d07a 	srli	r3,r3,1
1010c680:	1462b03a 	or	r17,r2,r17
1010c684:	3825883a 	mov	r18,r7
1010c688:	003f7106 	br	1010c450 <__alt_data_end+0xfffec450>
1010c68c:	2984b03a 	or	r2,r5,r6
1010c690:	103f6826 	beq	r2,zero,1010c434 <__alt_data_end+0xfffec434>
1010c694:	39c03fcc 	andi	r7,r7,255
1010c698:	003f6706 	br	1010c438 <__alt_data_end+0xfffec438>
1010c69c:	4086b03a 	or	r3,r8,r2
1010c6a0:	18015226 	beq	r3,zero,1010cbec <__subdf3+0x820>
1010c6a4:	00c00434 	movhi	r3,16
1010c6a8:	41400234 	orhi	r5,r8,8
1010c6ac:	18ffffc4 	addi	r3,r3,-1
1010c6b0:	28ca703a 	and	r5,r5,r3
1010c6b4:	003f7e06 	br	1010c4b0 <__alt_data_end+0xfffec4b0>
1010c6b8:	10bfffc4 	addi	r2,r2,-1
1010c6bc:	1000491e 	bne	r2,zero,1010c7e4 <__subdf3+0x418>
1010c6c0:	898fc83a 	sub	r7,r17,r6
1010c6c4:	89e3803a 	cmpltu	r17,r17,r7
1010c6c8:	1947c83a 	sub	r3,r3,r5
1010c6cc:	1c47c83a 	sub	r3,r3,r17
1010c6d0:	3823883a 	mov	r17,r7
1010c6d4:	003f9b06 	br	1010c544 <__alt_data_end+0xfffec544>
1010c6d8:	2988b03a 	or	r4,r5,r6
1010c6dc:	203f5c26 	beq	r4,zero,1010c450 <__alt_data_end+0xfffec450>
1010c6e0:	10bfffc4 	addi	r2,r2,-1
1010c6e4:	1000931e 	bne	r2,zero,1010c934 <__subdf3+0x568>
1010c6e8:	898d883a 	add	r6,r17,r6
1010c6ec:	3463803a 	cmpltu	r17,r6,r17
1010c6f0:	1947883a 	add	r3,r3,r5
1010c6f4:	88c7883a 	add	r3,r17,r3
1010c6f8:	3023883a 	mov	r17,r6
1010c6fc:	003fd306 	br	1010c64c <__alt_data_end+0xfffec64c>
1010c700:	1000541e 	bne	r2,zero,1010c854 <__subdf3+0x488>
1010c704:	80800044 	addi	r2,r16,1
1010c708:	1081ffcc 	andi	r2,r2,2047
1010c70c:	01000044 	movi	r4,1
1010c710:	2080a20e 	bge	r4,r2,1010c99c <__subdf3+0x5d0>
1010c714:	8989c83a 	sub	r4,r17,r6
1010c718:	8905803a 	cmpltu	r2,r17,r4
1010c71c:	1967c83a 	sub	r19,r3,r5
1010c720:	98a7c83a 	sub	r19,r19,r2
1010c724:	9880202c 	andhi	r2,r19,128
1010c728:	10006326 	beq	r2,zero,1010c8b8 <__subdf3+0x4ec>
1010c72c:	3463c83a 	sub	r17,r6,r17
1010c730:	28c7c83a 	sub	r3,r5,r3
1010c734:	344d803a 	cmpltu	r6,r6,r17
1010c738:	19a7c83a 	sub	r19,r3,r6
1010c73c:	3825883a 	mov	r18,r7
1010c740:	983f861e 	bne	r19,zero,1010c55c <__alt_data_end+0xfffec55c>
1010c744:	8809883a 	mov	r4,r17
1010c748:	010cecc0 	call	1010cecc <__clzsi2>
1010c74c:	10800804 	addi	r2,r2,32
1010c750:	113ffe04 	addi	r4,r2,-8
1010c754:	00c007c4 	movi	r3,31
1010c758:	193f850e 	bge	r3,r4,1010c570 <__alt_data_end+0xfffec570>
1010c75c:	10bff604 	addi	r2,r2,-40
1010c760:	8884983a 	sll	r2,r17,r2
1010c764:	0023883a 	mov	r17,zero
1010c768:	243f880e 	bge	r4,r16,1010c58c <__alt_data_end+0xfffec58c>
1010c76c:	00ffe034 	movhi	r3,65408
1010c770:	18ffffc4 	addi	r3,r3,-1
1010c774:	8121c83a 	sub	r16,r16,r4
1010c778:	10c6703a 	and	r3,r2,r3
1010c77c:	003f3406 	br	1010c450 <__alt_data_end+0xfffec450>
1010c780:	9100004c 	andi	r4,r18,1
1010c784:	000b883a 	mov	r5,zero
1010c788:	0005883a 	mov	r2,zero
1010c78c:	003f4806 	br	1010c4b0 <__alt_data_end+0xfffec4b0>
1010c790:	298cb03a 	or	r6,r5,r6
1010c794:	300cc03a 	cmpne	r6,r6,zero
1010c798:	0005883a 	mov	r2,zero
1010c79c:	003f6406 	br	1010c530 <__alt_data_end+0xfffec530>
1010c7a0:	10009a1e 	bne	r2,zero,1010ca0c <__subdf3+0x640>
1010c7a4:	82400044 	addi	r9,r16,1
1010c7a8:	4881ffcc 	andi	r2,r9,2047
1010c7ac:	02800044 	movi	r10,1
1010c7b0:	5080670e 	bge	r10,r2,1010c950 <__subdf3+0x584>
1010c7b4:	0081ffc4 	movi	r2,2047
1010c7b8:	4880af26 	beq	r9,r2,1010ca78 <__subdf3+0x6ac>
1010c7bc:	898d883a 	add	r6,r17,r6
1010c7c0:	1945883a 	add	r2,r3,r5
1010c7c4:	3447803a 	cmpltu	r3,r6,r17
1010c7c8:	1887883a 	add	r3,r3,r2
1010c7cc:	182297fa 	slli	r17,r3,31
1010c7d0:	300cd07a 	srli	r6,r6,1
1010c7d4:	1806d07a 	srli	r3,r3,1
1010c7d8:	4821883a 	mov	r16,r9
1010c7dc:	89a2b03a 	or	r17,r17,r6
1010c7e0:	003f1b06 	br	1010c450 <__alt_data_end+0xfffec450>
1010c7e4:	0101ffc4 	movi	r4,2047
1010c7e8:	813f441e 	bne	r16,r4,1010c4fc <__alt_data_end+0xfffec4fc>
1010c7ec:	003f1806 	br	1010c450 <__alt_data_end+0xfffec450>
1010c7f0:	843ff844 	addi	r16,r16,-31
1010c7f4:	01400804 	movi	r5,32
1010c7f8:	1408d83a 	srl	r4,r2,r16
1010c7fc:	19405026 	beq	r3,r5,1010c940 <__subdf3+0x574>
1010c800:	01401004 	movi	r5,64
1010c804:	28c7c83a 	sub	r3,r5,r3
1010c808:	10c4983a 	sll	r2,r2,r3
1010c80c:	88a2b03a 	or	r17,r17,r2
1010c810:	8822c03a 	cmpne	r17,r17,zero
1010c814:	2462b03a 	or	r17,r4,r17
1010c818:	0007883a 	mov	r3,zero
1010c81c:	0021883a 	mov	r16,zero
1010c820:	003f6d06 	br	1010c5d8 <__alt_data_end+0xfffec5d8>
1010c824:	11fff804 	addi	r7,r2,-32
1010c828:	01000804 	movi	r4,32
1010c82c:	29ced83a 	srl	r7,r5,r7
1010c830:	11004526 	beq	r2,r4,1010c948 <__subdf3+0x57c>
1010c834:	01001004 	movi	r4,64
1010c838:	2089c83a 	sub	r4,r4,r2
1010c83c:	2904983a 	sll	r2,r5,r4
1010c840:	118cb03a 	or	r6,r2,r6
1010c844:	300cc03a 	cmpne	r6,r6,zero
1010c848:	398cb03a 	or	r6,r7,r6
1010c84c:	0005883a 	mov	r2,zero
1010c850:	003f3706 	br	1010c530 <__alt_data_end+0xfffec530>
1010c854:	80002a26 	beq	r16,zero,1010c900 <__subdf3+0x534>
1010c858:	0101ffc4 	movi	r4,2047
1010c85c:	49006626 	beq	r9,r4,1010c9f8 <__subdf3+0x62c>
1010c860:	0085c83a 	sub	r2,zero,r2
1010c864:	18c02034 	orhi	r3,r3,128
1010c868:	01000e04 	movi	r4,56
1010c86c:	20807e16 	blt	r4,r2,1010ca68 <__subdf3+0x69c>
1010c870:	010007c4 	movi	r4,31
1010c874:	2080e716 	blt	r4,r2,1010cc14 <__subdf3+0x848>
1010c878:	01000804 	movi	r4,32
1010c87c:	2089c83a 	sub	r4,r4,r2
1010c880:	1914983a 	sll	r10,r3,r4
1010c884:	8890d83a 	srl	r8,r17,r2
1010c888:	8908983a 	sll	r4,r17,r4
1010c88c:	1884d83a 	srl	r2,r3,r2
1010c890:	5222b03a 	or	r17,r10,r8
1010c894:	2006c03a 	cmpne	r3,r4,zero
1010c898:	88e2b03a 	or	r17,r17,r3
1010c89c:	3463c83a 	sub	r17,r6,r17
1010c8a0:	2885c83a 	sub	r2,r5,r2
1010c8a4:	344d803a 	cmpltu	r6,r6,r17
1010c8a8:	1187c83a 	sub	r3,r2,r6
1010c8ac:	4821883a 	mov	r16,r9
1010c8b0:	3825883a 	mov	r18,r7
1010c8b4:	003f2306 	br	1010c544 <__alt_data_end+0xfffec544>
1010c8b8:	24d0b03a 	or	r8,r4,r19
1010c8bc:	40001b1e 	bne	r8,zero,1010c92c <__subdf3+0x560>
1010c8c0:	0005883a 	mov	r2,zero
1010c8c4:	0009883a 	mov	r4,zero
1010c8c8:	0021883a 	mov	r16,zero
1010c8cc:	003f4906 	br	1010c5f4 <__alt_data_end+0xfffec5f4>
1010c8d0:	010007c4 	movi	r4,31
1010c8d4:	20803a16 	blt	r4,r2,1010c9c0 <__subdf3+0x5f4>
1010c8d8:	01000804 	movi	r4,32
1010c8dc:	2089c83a 	sub	r4,r4,r2
1010c8e0:	2912983a 	sll	r9,r5,r4
1010c8e4:	3090d83a 	srl	r8,r6,r2
1010c8e8:	3108983a 	sll	r4,r6,r4
1010c8ec:	2884d83a 	srl	r2,r5,r2
1010c8f0:	4a12b03a 	or	r9,r9,r8
1010c8f4:	2008c03a 	cmpne	r4,r4,zero
1010c8f8:	4912b03a 	or	r9,r9,r4
1010c8fc:	003f4e06 	br	1010c638 <__alt_data_end+0xfffec638>
1010c900:	1c48b03a 	or	r4,r3,r17
1010c904:	20003c26 	beq	r4,zero,1010c9f8 <__subdf3+0x62c>
1010c908:	0084303a 	nor	r2,zero,r2
1010c90c:	1000381e 	bne	r2,zero,1010c9f0 <__subdf3+0x624>
1010c910:	3463c83a 	sub	r17,r6,r17
1010c914:	28c5c83a 	sub	r2,r5,r3
1010c918:	344d803a 	cmpltu	r6,r6,r17
1010c91c:	1187c83a 	sub	r3,r2,r6
1010c920:	4821883a 	mov	r16,r9
1010c924:	3825883a 	mov	r18,r7
1010c928:	003f0606 	br	1010c544 <__alt_data_end+0xfffec544>
1010c92c:	2023883a 	mov	r17,r4
1010c930:	003f0906 	br	1010c558 <__alt_data_end+0xfffec558>
1010c934:	0101ffc4 	movi	r4,2047
1010c938:	813f3a1e 	bne	r16,r4,1010c624 <__alt_data_end+0xfffec624>
1010c93c:	003ec406 	br	1010c450 <__alt_data_end+0xfffec450>
1010c940:	0005883a 	mov	r2,zero
1010c944:	003fb106 	br	1010c80c <__alt_data_end+0xfffec80c>
1010c948:	0005883a 	mov	r2,zero
1010c94c:	003fbc06 	br	1010c840 <__alt_data_end+0xfffec840>
1010c950:	1c44b03a 	or	r2,r3,r17
1010c954:	80008e1e 	bne	r16,zero,1010cb90 <__subdf3+0x7c4>
1010c958:	1000c826 	beq	r2,zero,1010cc7c <__subdf3+0x8b0>
1010c95c:	2984b03a 	or	r2,r5,r6
1010c960:	103ebb26 	beq	r2,zero,1010c450 <__alt_data_end+0xfffec450>
1010c964:	8989883a 	add	r4,r17,r6
1010c968:	1945883a 	add	r2,r3,r5
1010c96c:	2447803a 	cmpltu	r3,r4,r17
1010c970:	1887883a 	add	r3,r3,r2
1010c974:	1880202c 	andhi	r2,r3,128
1010c978:	2023883a 	mov	r17,r4
1010c97c:	103f1626 	beq	r2,zero,1010c5d8 <__alt_data_end+0xfffec5d8>
1010c980:	00bfe034 	movhi	r2,65408
1010c984:	10bfffc4 	addi	r2,r2,-1
1010c988:	5021883a 	mov	r16,r10
1010c98c:	1886703a 	and	r3,r3,r2
1010c990:	003eaf06 	br	1010c450 <__alt_data_end+0xfffec450>
1010c994:	3825883a 	mov	r18,r7
1010c998:	003f0f06 	br	1010c5d8 <__alt_data_end+0xfffec5d8>
1010c99c:	1c44b03a 	or	r2,r3,r17
1010c9a0:	8000251e 	bne	r16,zero,1010ca38 <__subdf3+0x66c>
1010c9a4:	1000661e 	bne	r2,zero,1010cb40 <__subdf3+0x774>
1010c9a8:	2990b03a 	or	r8,r5,r6
1010c9ac:	40009626 	beq	r8,zero,1010cc08 <__subdf3+0x83c>
1010c9b0:	2807883a 	mov	r3,r5
1010c9b4:	3023883a 	mov	r17,r6
1010c9b8:	3825883a 	mov	r18,r7
1010c9bc:	003ea406 	br	1010c450 <__alt_data_end+0xfffec450>
1010c9c0:	127ff804 	addi	r9,r2,-32
1010c9c4:	01000804 	movi	r4,32
1010c9c8:	2a52d83a 	srl	r9,r5,r9
1010c9cc:	11008c26 	beq	r2,r4,1010cc00 <__subdf3+0x834>
1010c9d0:	01001004 	movi	r4,64
1010c9d4:	2085c83a 	sub	r2,r4,r2
1010c9d8:	2884983a 	sll	r2,r5,r2
1010c9dc:	118cb03a 	or	r6,r2,r6
1010c9e0:	300cc03a 	cmpne	r6,r6,zero
1010c9e4:	4992b03a 	or	r9,r9,r6
1010c9e8:	0005883a 	mov	r2,zero
1010c9ec:	003f1206 	br	1010c638 <__alt_data_end+0xfffec638>
1010c9f0:	0101ffc4 	movi	r4,2047
1010c9f4:	493f9c1e 	bne	r9,r4,1010c868 <__alt_data_end+0xfffec868>
1010c9f8:	2807883a 	mov	r3,r5
1010c9fc:	3023883a 	mov	r17,r6
1010ca00:	4821883a 	mov	r16,r9
1010ca04:	3825883a 	mov	r18,r7
1010ca08:	003e9106 	br	1010c450 <__alt_data_end+0xfffec450>
1010ca0c:	80001f1e 	bne	r16,zero,1010ca8c <__subdf3+0x6c0>
1010ca10:	1c48b03a 	or	r4,r3,r17
1010ca14:	20005a26 	beq	r4,zero,1010cb80 <__subdf3+0x7b4>
1010ca18:	0084303a 	nor	r2,zero,r2
1010ca1c:	1000561e 	bne	r2,zero,1010cb78 <__subdf3+0x7ac>
1010ca20:	89a3883a 	add	r17,r17,r6
1010ca24:	1945883a 	add	r2,r3,r5
1010ca28:	898d803a 	cmpltu	r6,r17,r6
1010ca2c:	3087883a 	add	r3,r6,r2
1010ca30:	4821883a 	mov	r16,r9
1010ca34:	003f0506 	br	1010c64c <__alt_data_end+0xfffec64c>
1010ca38:	10002b1e 	bne	r2,zero,1010cae8 <__subdf3+0x71c>
1010ca3c:	2984b03a 	or	r2,r5,r6
1010ca40:	10008026 	beq	r2,zero,1010cc44 <__subdf3+0x878>
1010ca44:	2807883a 	mov	r3,r5
1010ca48:	3023883a 	mov	r17,r6
1010ca4c:	3825883a 	mov	r18,r7
1010ca50:	0401ffc4 	movi	r16,2047
1010ca54:	003e7e06 	br	1010c450 <__alt_data_end+0xfffec450>
1010ca58:	3809883a 	mov	r4,r7
1010ca5c:	0011883a 	mov	r8,zero
1010ca60:	0005883a 	mov	r2,zero
1010ca64:	003ee306 	br	1010c5f4 <__alt_data_end+0xfffec5f4>
1010ca68:	1c62b03a 	or	r17,r3,r17
1010ca6c:	8822c03a 	cmpne	r17,r17,zero
1010ca70:	0005883a 	mov	r2,zero
1010ca74:	003f8906 	br	1010c89c <__alt_data_end+0xfffec89c>
1010ca78:	3809883a 	mov	r4,r7
1010ca7c:	4821883a 	mov	r16,r9
1010ca80:	0011883a 	mov	r8,zero
1010ca84:	0005883a 	mov	r2,zero
1010ca88:	003eda06 	br	1010c5f4 <__alt_data_end+0xfffec5f4>
1010ca8c:	0101ffc4 	movi	r4,2047
1010ca90:	49003b26 	beq	r9,r4,1010cb80 <__subdf3+0x7b4>
1010ca94:	0085c83a 	sub	r2,zero,r2
1010ca98:	18c02034 	orhi	r3,r3,128
1010ca9c:	01000e04 	movi	r4,56
1010caa0:	20806e16 	blt	r4,r2,1010cc5c <__subdf3+0x890>
1010caa4:	010007c4 	movi	r4,31
1010caa8:	20807716 	blt	r4,r2,1010cc88 <__subdf3+0x8bc>
1010caac:	01000804 	movi	r4,32
1010cab0:	2089c83a 	sub	r4,r4,r2
1010cab4:	1914983a 	sll	r10,r3,r4
1010cab8:	8890d83a 	srl	r8,r17,r2
1010cabc:	8908983a 	sll	r4,r17,r4
1010cac0:	1884d83a 	srl	r2,r3,r2
1010cac4:	5222b03a 	or	r17,r10,r8
1010cac8:	2006c03a 	cmpne	r3,r4,zero
1010cacc:	88e2b03a 	or	r17,r17,r3
1010cad0:	89a3883a 	add	r17,r17,r6
1010cad4:	1145883a 	add	r2,r2,r5
1010cad8:	898d803a 	cmpltu	r6,r17,r6
1010cadc:	3087883a 	add	r3,r6,r2
1010cae0:	4821883a 	mov	r16,r9
1010cae4:	003ed906 	br	1010c64c <__alt_data_end+0xfffec64c>
1010cae8:	2984b03a 	or	r2,r5,r6
1010caec:	10004226 	beq	r2,zero,1010cbf8 <__subdf3+0x82c>
1010caf0:	1808d0fa 	srli	r4,r3,3
1010caf4:	8822d0fa 	srli	r17,r17,3
1010caf8:	1806977a 	slli	r3,r3,29
1010cafc:	2080022c 	andhi	r2,r4,8
1010cb00:	1c62b03a 	or	r17,r3,r17
1010cb04:	10000826 	beq	r2,zero,1010cb28 <__subdf3+0x75c>
1010cb08:	2812d0fa 	srli	r9,r5,3
1010cb0c:	4880022c 	andhi	r2,r9,8
1010cb10:	1000051e 	bne	r2,zero,1010cb28 <__subdf3+0x75c>
1010cb14:	300cd0fa 	srli	r6,r6,3
1010cb18:	2804977a 	slli	r2,r5,29
1010cb1c:	4809883a 	mov	r4,r9
1010cb20:	3825883a 	mov	r18,r7
1010cb24:	11a2b03a 	or	r17,r2,r6
1010cb28:	8806d77a 	srli	r3,r17,29
1010cb2c:	200890fa 	slli	r4,r4,3
1010cb30:	882290fa 	slli	r17,r17,3
1010cb34:	0401ffc4 	movi	r16,2047
1010cb38:	1906b03a 	or	r3,r3,r4
1010cb3c:	003e4406 	br	1010c450 <__alt_data_end+0xfffec450>
1010cb40:	2984b03a 	or	r2,r5,r6
1010cb44:	103e4226 	beq	r2,zero,1010c450 <__alt_data_end+0xfffec450>
1010cb48:	8989c83a 	sub	r4,r17,r6
1010cb4c:	8911803a 	cmpltu	r8,r17,r4
1010cb50:	1945c83a 	sub	r2,r3,r5
1010cb54:	1205c83a 	sub	r2,r2,r8
1010cb58:	1200202c 	andhi	r8,r2,128
1010cb5c:	403e9a26 	beq	r8,zero,1010c5c8 <__alt_data_end+0xfffec5c8>
1010cb60:	3463c83a 	sub	r17,r6,r17
1010cb64:	28c5c83a 	sub	r2,r5,r3
1010cb68:	344d803a 	cmpltu	r6,r6,r17
1010cb6c:	1187c83a 	sub	r3,r2,r6
1010cb70:	3825883a 	mov	r18,r7
1010cb74:	003e3606 	br	1010c450 <__alt_data_end+0xfffec450>
1010cb78:	0101ffc4 	movi	r4,2047
1010cb7c:	493fc71e 	bne	r9,r4,1010ca9c <__alt_data_end+0xfffeca9c>
1010cb80:	2807883a 	mov	r3,r5
1010cb84:	3023883a 	mov	r17,r6
1010cb88:	4821883a 	mov	r16,r9
1010cb8c:	003e3006 	br	1010c450 <__alt_data_end+0xfffec450>
1010cb90:	10003626 	beq	r2,zero,1010cc6c <__subdf3+0x8a0>
1010cb94:	2984b03a 	or	r2,r5,r6
1010cb98:	10001726 	beq	r2,zero,1010cbf8 <__subdf3+0x82c>
1010cb9c:	1808d0fa 	srli	r4,r3,3
1010cba0:	8822d0fa 	srli	r17,r17,3
1010cba4:	1806977a 	slli	r3,r3,29
1010cba8:	2080022c 	andhi	r2,r4,8
1010cbac:	1c62b03a 	or	r17,r3,r17
1010cbb0:	10000726 	beq	r2,zero,1010cbd0 <__subdf3+0x804>
1010cbb4:	2812d0fa 	srli	r9,r5,3
1010cbb8:	4880022c 	andhi	r2,r9,8
1010cbbc:	1000041e 	bne	r2,zero,1010cbd0 <__subdf3+0x804>
1010cbc0:	300cd0fa 	srli	r6,r6,3
1010cbc4:	2804977a 	slli	r2,r5,29
1010cbc8:	4809883a 	mov	r4,r9
1010cbcc:	11a2b03a 	or	r17,r2,r6
1010cbd0:	8806d77a 	srli	r3,r17,29
1010cbd4:	200890fa 	slli	r4,r4,3
1010cbd8:	882290fa 	slli	r17,r17,3
1010cbdc:	3825883a 	mov	r18,r7
1010cbe0:	1906b03a 	or	r3,r3,r4
1010cbe4:	0401ffc4 	movi	r16,2047
1010cbe8:	003e1906 	br	1010c450 <__alt_data_end+0xfffec450>
1010cbec:	000b883a 	mov	r5,zero
1010cbf0:	0005883a 	mov	r2,zero
1010cbf4:	003e2e06 	br	1010c4b0 <__alt_data_end+0xfffec4b0>
1010cbf8:	0401ffc4 	movi	r16,2047
1010cbfc:	003e1406 	br	1010c450 <__alt_data_end+0xfffec450>
1010cc00:	0005883a 	mov	r2,zero
1010cc04:	003f7506 	br	1010c9dc <__alt_data_end+0xfffec9dc>
1010cc08:	0005883a 	mov	r2,zero
1010cc0c:	0009883a 	mov	r4,zero
1010cc10:	003e7806 	br	1010c5f4 <__alt_data_end+0xfffec5f4>
1010cc14:	123ff804 	addi	r8,r2,-32
1010cc18:	01000804 	movi	r4,32
1010cc1c:	1a10d83a 	srl	r8,r3,r8
1010cc20:	11002526 	beq	r2,r4,1010ccb8 <__subdf3+0x8ec>
1010cc24:	01001004 	movi	r4,64
1010cc28:	2085c83a 	sub	r2,r4,r2
1010cc2c:	1884983a 	sll	r2,r3,r2
1010cc30:	1444b03a 	or	r2,r2,r17
1010cc34:	1004c03a 	cmpne	r2,r2,zero
1010cc38:	40a2b03a 	or	r17,r8,r2
1010cc3c:	0005883a 	mov	r2,zero
1010cc40:	003f1606 	br	1010c89c <__alt_data_end+0xfffec89c>
1010cc44:	02000434 	movhi	r8,16
1010cc48:	0009883a 	mov	r4,zero
1010cc4c:	423fffc4 	addi	r8,r8,-1
1010cc50:	00bfffc4 	movi	r2,-1
1010cc54:	0401ffc4 	movi	r16,2047
1010cc58:	003e6606 	br	1010c5f4 <__alt_data_end+0xfffec5f4>
1010cc5c:	1c62b03a 	or	r17,r3,r17
1010cc60:	8822c03a 	cmpne	r17,r17,zero
1010cc64:	0005883a 	mov	r2,zero
1010cc68:	003f9906 	br	1010cad0 <__alt_data_end+0xfffecad0>
1010cc6c:	2807883a 	mov	r3,r5
1010cc70:	3023883a 	mov	r17,r6
1010cc74:	0401ffc4 	movi	r16,2047
1010cc78:	003df506 	br	1010c450 <__alt_data_end+0xfffec450>
1010cc7c:	2807883a 	mov	r3,r5
1010cc80:	3023883a 	mov	r17,r6
1010cc84:	003df206 	br	1010c450 <__alt_data_end+0xfffec450>
1010cc88:	123ff804 	addi	r8,r2,-32
1010cc8c:	01000804 	movi	r4,32
1010cc90:	1a10d83a 	srl	r8,r3,r8
1010cc94:	11000a26 	beq	r2,r4,1010ccc0 <__subdf3+0x8f4>
1010cc98:	01001004 	movi	r4,64
1010cc9c:	2085c83a 	sub	r2,r4,r2
1010cca0:	1884983a 	sll	r2,r3,r2
1010cca4:	1444b03a 	or	r2,r2,r17
1010cca8:	1004c03a 	cmpne	r2,r2,zero
1010ccac:	40a2b03a 	or	r17,r8,r2
1010ccb0:	0005883a 	mov	r2,zero
1010ccb4:	003f8606 	br	1010cad0 <__alt_data_end+0xfffecad0>
1010ccb8:	0005883a 	mov	r2,zero
1010ccbc:	003fdc06 	br	1010cc30 <__alt_data_end+0xfffecc30>
1010ccc0:	0005883a 	mov	r2,zero
1010ccc4:	003ff706 	br	1010cca4 <__alt_data_end+0xfffecca4>

1010ccc8 <__fixdfsi>:
1010ccc8:	280cd53a 	srli	r6,r5,20
1010cccc:	00c00434 	movhi	r3,16
1010ccd0:	18ffffc4 	addi	r3,r3,-1
1010ccd4:	3181ffcc 	andi	r6,r6,2047
1010ccd8:	01c0ff84 	movi	r7,1022
1010ccdc:	28c6703a 	and	r3,r5,r3
1010cce0:	280ad7fa 	srli	r5,r5,31
1010cce4:	3980120e 	bge	r7,r6,1010cd30 <__fixdfsi+0x68>
1010cce8:	00810744 	movi	r2,1053
1010ccec:	11800c16 	blt	r2,r6,1010cd20 <__fixdfsi+0x58>
1010ccf0:	00810cc4 	movi	r2,1075
1010ccf4:	1185c83a 	sub	r2,r2,r6
1010ccf8:	01c007c4 	movi	r7,31
1010ccfc:	18c00434 	orhi	r3,r3,16
1010cd00:	38800d16 	blt	r7,r2,1010cd38 <__fixdfsi+0x70>
1010cd04:	31befb44 	addi	r6,r6,-1043
1010cd08:	2084d83a 	srl	r2,r4,r2
1010cd0c:	1986983a 	sll	r3,r3,r6
1010cd10:	1884b03a 	or	r2,r3,r2
1010cd14:	28000726 	beq	r5,zero,1010cd34 <__fixdfsi+0x6c>
1010cd18:	0085c83a 	sub	r2,zero,r2
1010cd1c:	f800283a 	ret
1010cd20:	00a00034 	movhi	r2,32768
1010cd24:	10bfffc4 	addi	r2,r2,-1
1010cd28:	2885883a 	add	r2,r5,r2
1010cd2c:	f800283a 	ret
1010cd30:	0005883a 	mov	r2,zero
1010cd34:	f800283a 	ret
1010cd38:	008104c4 	movi	r2,1043
1010cd3c:	1185c83a 	sub	r2,r2,r6
1010cd40:	1884d83a 	srl	r2,r3,r2
1010cd44:	003ff306 	br	1010cd14 <__alt_data_end+0xfffecd14>

1010cd48 <__floatsidf>:
1010cd48:	defffd04 	addi	sp,sp,-12
1010cd4c:	dfc00215 	stw	ra,8(sp)
1010cd50:	dc400115 	stw	r17,4(sp)
1010cd54:	dc000015 	stw	r16,0(sp)
1010cd58:	20002b26 	beq	r4,zero,1010ce08 <__floatsidf+0xc0>
1010cd5c:	2023883a 	mov	r17,r4
1010cd60:	2020d7fa 	srli	r16,r4,31
1010cd64:	20002d16 	blt	r4,zero,1010ce1c <__floatsidf+0xd4>
1010cd68:	8809883a 	mov	r4,r17
1010cd6c:	010cecc0 	call	1010cecc <__clzsi2>
1010cd70:	01410784 	movi	r5,1054
1010cd74:	288bc83a 	sub	r5,r5,r2
1010cd78:	01010cc4 	movi	r4,1075
1010cd7c:	2149c83a 	sub	r4,r4,r5
1010cd80:	00c007c4 	movi	r3,31
1010cd84:	1900160e 	bge	r3,r4,1010cde0 <__floatsidf+0x98>
1010cd88:	00c104c4 	movi	r3,1043
1010cd8c:	1947c83a 	sub	r3,r3,r5
1010cd90:	88c6983a 	sll	r3,r17,r3
1010cd94:	00800434 	movhi	r2,16
1010cd98:	10bfffc4 	addi	r2,r2,-1
1010cd9c:	1886703a 	and	r3,r3,r2
1010cda0:	2941ffcc 	andi	r5,r5,2047
1010cda4:	800d883a 	mov	r6,r16
1010cda8:	0005883a 	mov	r2,zero
1010cdac:	280a953a 	slli	r5,r5,20
1010cdb0:	31803fcc 	andi	r6,r6,255
1010cdb4:	01000434 	movhi	r4,16
1010cdb8:	300c97fa 	slli	r6,r6,31
1010cdbc:	213fffc4 	addi	r4,r4,-1
1010cdc0:	1906703a 	and	r3,r3,r4
1010cdc4:	1946b03a 	or	r3,r3,r5
1010cdc8:	1986b03a 	or	r3,r3,r6
1010cdcc:	dfc00217 	ldw	ra,8(sp)
1010cdd0:	dc400117 	ldw	r17,4(sp)
1010cdd4:	dc000017 	ldw	r16,0(sp)
1010cdd8:	dec00304 	addi	sp,sp,12
1010cddc:	f800283a 	ret
1010cde0:	00c002c4 	movi	r3,11
1010cde4:	1887c83a 	sub	r3,r3,r2
1010cde8:	88c6d83a 	srl	r3,r17,r3
1010cdec:	8904983a 	sll	r2,r17,r4
1010cdf0:	01000434 	movhi	r4,16
1010cdf4:	213fffc4 	addi	r4,r4,-1
1010cdf8:	2941ffcc 	andi	r5,r5,2047
1010cdfc:	1906703a 	and	r3,r3,r4
1010ce00:	800d883a 	mov	r6,r16
1010ce04:	003fe906 	br	1010cdac <__alt_data_end+0xfffecdac>
1010ce08:	000d883a 	mov	r6,zero
1010ce0c:	000b883a 	mov	r5,zero
1010ce10:	0007883a 	mov	r3,zero
1010ce14:	0005883a 	mov	r2,zero
1010ce18:	003fe406 	br	1010cdac <__alt_data_end+0xfffecdac>
1010ce1c:	0123c83a 	sub	r17,zero,r4
1010ce20:	003fd106 	br	1010cd68 <__alt_data_end+0xfffecd68>

1010ce24 <__floatunsidf>:
1010ce24:	defffe04 	addi	sp,sp,-8
1010ce28:	dc000015 	stw	r16,0(sp)
1010ce2c:	dfc00115 	stw	ra,4(sp)
1010ce30:	2021883a 	mov	r16,r4
1010ce34:	20002226 	beq	r4,zero,1010cec0 <__floatunsidf+0x9c>
1010ce38:	010cecc0 	call	1010cecc <__clzsi2>
1010ce3c:	01010784 	movi	r4,1054
1010ce40:	2089c83a 	sub	r4,r4,r2
1010ce44:	01810cc4 	movi	r6,1075
1010ce48:	310dc83a 	sub	r6,r6,r4
1010ce4c:	00c007c4 	movi	r3,31
1010ce50:	1980120e 	bge	r3,r6,1010ce9c <__floatunsidf+0x78>
1010ce54:	00c104c4 	movi	r3,1043
1010ce58:	1907c83a 	sub	r3,r3,r4
1010ce5c:	80ca983a 	sll	r5,r16,r3
1010ce60:	00800434 	movhi	r2,16
1010ce64:	10bfffc4 	addi	r2,r2,-1
1010ce68:	2101ffcc 	andi	r4,r4,2047
1010ce6c:	0021883a 	mov	r16,zero
1010ce70:	288a703a 	and	r5,r5,r2
1010ce74:	2008953a 	slli	r4,r4,20
1010ce78:	00c00434 	movhi	r3,16
1010ce7c:	18ffffc4 	addi	r3,r3,-1
1010ce80:	28c6703a 	and	r3,r5,r3
1010ce84:	8005883a 	mov	r2,r16
1010ce88:	1906b03a 	or	r3,r3,r4
1010ce8c:	dfc00117 	ldw	ra,4(sp)
1010ce90:	dc000017 	ldw	r16,0(sp)
1010ce94:	dec00204 	addi	sp,sp,8
1010ce98:	f800283a 	ret
1010ce9c:	00c002c4 	movi	r3,11
1010cea0:	188bc83a 	sub	r5,r3,r2
1010cea4:	814ad83a 	srl	r5,r16,r5
1010cea8:	00c00434 	movhi	r3,16
1010ceac:	18ffffc4 	addi	r3,r3,-1
1010ceb0:	81a0983a 	sll	r16,r16,r6
1010ceb4:	2101ffcc 	andi	r4,r4,2047
1010ceb8:	28ca703a 	and	r5,r5,r3
1010cebc:	003fed06 	br	1010ce74 <__alt_data_end+0xfffece74>
1010cec0:	0009883a 	mov	r4,zero
1010cec4:	000b883a 	mov	r5,zero
1010cec8:	003fea06 	br	1010ce74 <__alt_data_end+0xfffece74>

1010cecc <__clzsi2>:
1010cecc:	00bfffd4 	movui	r2,65535
1010ced0:	11000536 	bltu	r2,r4,1010cee8 <__clzsi2+0x1c>
1010ced4:	00803fc4 	movi	r2,255
1010ced8:	11000f36 	bltu	r2,r4,1010cf18 <__clzsi2+0x4c>
1010cedc:	00800804 	movi	r2,32
1010cee0:	0007883a 	mov	r3,zero
1010cee4:	00000506 	br	1010cefc <__clzsi2+0x30>
1010cee8:	00804034 	movhi	r2,256
1010ceec:	10bfffc4 	addi	r2,r2,-1
1010cef0:	11000c2e 	bgeu	r2,r4,1010cf24 <__clzsi2+0x58>
1010cef4:	00800204 	movi	r2,8
1010cef8:	00c00604 	movi	r3,24
1010cefc:	20c8d83a 	srl	r4,r4,r3
1010cf00:	00c40474 	movhi	r3,4113
1010cf04:	18fe3204 	addi	r3,r3,-1848
1010cf08:	1909883a 	add	r4,r3,r4
1010cf0c:	20c00003 	ldbu	r3,0(r4)
1010cf10:	10c5c83a 	sub	r2,r2,r3
1010cf14:	f800283a 	ret
1010cf18:	00800604 	movi	r2,24
1010cf1c:	00c00204 	movi	r3,8
1010cf20:	003ff606 	br	1010cefc <__alt_data_end+0xfffecefc>
1010cf24:	00800404 	movi	r2,16
1010cf28:	1007883a 	mov	r3,r2
1010cf2c:	003ff306 	br	1010cefc <__alt_data_end+0xfffecefc>

1010cf30 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010cf30:	defffe04 	addi	sp,sp,-8
1010cf34:	dfc00115 	stw	ra,4(sp)
1010cf38:	df000015 	stw	fp,0(sp)
1010cf3c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010cf40:	00840474 	movhi	r2,4113
1010cf44:	10853504 	addi	r2,r2,5332
1010cf48:	10800017 	ldw	r2,0(r2)
1010cf4c:	10000526 	beq	r2,zero,1010cf64 <alt_get_errno+0x34>
1010cf50:	00840474 	movhi	r2,4113
1010cf54:	10853504 	addi	r2,r2,5332
1010cf58:	10800017 	ldw	r2,0(r2)
1010cf5c:	103ee83a 	callr	r2
1010cf60:	00000206 	br	1010cf6c <alt_get_errno+0x3c>
1010cf64:	00840474 	movhi	r2,4113
1010cf68:	108bfb04 	addi	r2,r2,12268
}
1010cf6c:	e037883a 	mov	sp,fp
1010cf70:	dfc00117 	ldw	ra,4(sp)
1010cf74:	df000017 	ldw	fp,0(sp)
1010cf78:	dec00204 	addi	sp,sp,8
1010cf7c:	f800283a 	ret

1010cf80 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1010cf80:	defffb04 	addi	sp,sp,-20
1010cf84:	dfc00415 	stw	ra,16(sp)
1010cf88:	df000315 	stw	fp,12(sp)
1010cf8c:	df000304 	addi	fp,sp,12
1010cf90:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1010cf94:	e0bfff17 	ldw	r2,-4(fp)
1010cf98:	10000616 	blt	r2,zero,1010cfb4 <close+0x34>
1010cf9c:	e0bfff17 	ldw	r2,-4(fp)
1010cfa0:	10c00324 	muli	r3,r2,12
1010cfa4:	00840474 	movhi	r2,4113
1010cfa8:	1080b204 	addi	r2,r2,712
1010cfac:	1885883a 	add	r2,r3,r2
1010cfb0:	00000106 	br	1010cfb8 <close+0x38>
1010cfb4:	0005883a 	mov	r2,zero
1010cfb8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1010cfbc:	e0bffd17 	ldw	r2,-12(fp)
1010cfc0:	10001926 	beq	r2,zero,1010d028 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1010cfc4:	e0bffd17 	ldw	r2,-12(fp)
1010cfc8:	10800017 	ldw	r2,0(r2)
1010cfcc:	10800417 	ldw	r2,16(r2)
1010cfd0:	10000626 	beq	r2,zero,1010cfec <close+0x6c>
1010cfd4:	e0bffd17 	ldw	r2,-12(fp)
1010cfd8:	10800017 	ldw	r2,0(r2)
1010cfdc:	10800417 	ldw	r2,16(r2)
1010cfe0:	e13ffd17 	ldw	r4,-12(fp)
1010cfe4:	103ee83a 	callr	r2
1010cfe8:	00000106 	br	1010cff0 <close+0x70>
1010cfec:	0005883a 	mov	r2,zero
1010cff0:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1010cff4:	e13fff17 	ldw	r4,-4(fp)
1010cff8:	010d6900 	call	1010d690 <alt_release_fd>
    if (rval < 0)
1010cffc:	e0bffe17 	ldw	r2,-8(fp)
1010d000:	1000070e 	bge	r2,zero,1010d020 <close+0xa0>
    {
      ALT_ERRNO = -rval;
1010d004:	010cf300 	call	1010cf30 <alt_get_errno>
1010d008:	1007883a 	mov	r3,r2
1010d00c:	e0bffe17 	ldw	r2,-8(fp)
1010d010:	0085c83a 	sub	r2,zero,r2
1010d014:	18800015 	stw	r2,0(r3)
      return -1;
1010d018:	00bfffc4 	movi	r2,-1
1010d01c:	00000706 	br	1010d03c <close+0xbc>
    }
    return 0;
1010d020:	0005883a 	mov	r2,zero
1010d024:	00000506 	br	1010d03c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d028:	010cf300 	call	1010cf30 <alt_get_errno>
1010d02c:	1007883a 	mov	r3,r2
1010d030:	00801444 	movi	r2,81
1010d034:	18800015 	stw	r2,0(r3)
    return -1;
1010d038:	00bfffc4 	movi	r2,-1
  }
}
1010d03c:	e037883a 	mov	sp,fp
1010d040:	dfc00117 	ldw	ra,4(sp)
1010d044:	df000017 	ldw	fp,0(sp)
1010d048:	dec00204 	addi	sp,sp,8
1010d04c:	f800283a 	ret

1010d050 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1010d050:	defffc04 	addi	sp,sp,-16
1010d054:	df000315 	stw	fp,12(sp)
1010d058:	df000304 	addi	fp,sp,12
1010d05c:	e13ffd15 	stw	r4,-12(fp)
1010d060:	e17ffe15 	stw	r5,-8(fp)
1010d064:	e1bfff15 	stw	r6,-4(fp)
  return len;
1010d068:	e0bfff17 	ldw	r2,-4(fp)
}
1010d06c:	e037883a 	mov	sp,fp
1010d070:	df000017 	ldw	fp,0(sp)
1010d074:	dec00104 	addi	sp,sp,4
1010d078:	f800283a 	ret

1010d07c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d07c:	defffe04 	addi	sp,sp,-8
1010d080:	dfc00115 	stw	ra,4(sp)
1010d084:	df000015 	stw	fp,0(sp)
1010d088:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d08c:	00840474 	movhi	r2,4113
1010d090:	10853504 	addi	r2,r2,5332
1010d094:	10800017 	ldw	r2,0(r2)
1010d098:	10000526 	beq	r2,zero,1010d0b0 <alt_get_errno+0x34>
1010d09c:	00840474 	movhi	r2,4113
1010d0a0:	10853504 	addi	r2,r2,5332
1010d0a4:	10800017 	ldw	r2,0(r2)
1010d0a8:	103ee83a 	callr	r2
1010d0ac:	00000206 	br	1010d0b8 <alt_get_errno+0x3c>
1010d0b0:	00840474 	movhi	r2,4113
1010d0b4:	108bfb04 	addi	r2,r2,12268
}
1010d0b8:	e037883a 	mov	sp,fp
1010d0bc:	dfc00117 	ldw	ra,4(sp)
1010d0c0:	df000017 	ldw	fp,0(sp)
1010d0c4:	dec00204 	addi	sp,sp,8
1010d0c8:	f800283a 	ret

1010d0cc <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
1010d0cc:	defffb04 	addi	sp,sp,-20
1010d0d0:	dfc00415 	stw	ra,16(sp)
1010d0d4:	df000315 	stw	fp,12(sp)
1010d0d8:	df000304 	addi	fp,sp,12
1010d0dc:	e13ffe15 	stw	r4,-8(fp)
1010d0e0:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d0e4:	e0bffe17 	ldw	r2,-8(fp)
1010d0e8:	10000616 	blt	r2,zero,1010d104 <fstat+0x38>
1010d0ec:	e0bffe17 	ldw	r2,-8(fp)
1010d0f0:	10c00324 	muli	r3,r2,12
1010d0f4:	00840474 	movhi	r2,4113
1010d0f8:	1080b204 	addi	r2,r2,712
1010d0fc:	1885883a 	add	r2,r3,r2
1010d100:	00000106 	br	1010d108 <fstat+0x3c>
1010d104:	0005883a 	mov	r2,zero
1010d108:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
1010d10c:	e0bffd17 	ldw	r2,-12(fp)
1010d110:	10001026 	beq	r2,zero,1010d154 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
1010d114:	e0bffd17 	ldw	r2,-12(fp)
1010d118:	10800017 	ldw	r2,0(r2)
1010d11c:	10800817 	ldw	r2,32(r2)
1010d120:	10000726 	beq	r2,zero,1010d140 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
1010d124:	e0bffd17 	ldw	r2,-12(fp)
1010d128:	10800017 	ldw	r2,0(r2)
1010d12c:	10800817 	ldw	r2,32(r2)
1010d130:	e17fff17 	ldw	r5,-4(fp)
1010d134:	e13ffd17 	ldw	r4,-12(fp)
1010d138:	103ee83a 	callr	r2
1010d13c:	00000a06 	br	1010d168 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1010d140:	e0bfff17 	ldw	r2,-4(fp)
1010d144:	00c80004 	movi	r3,8192
1010d148:	10c00115 	stw	r3,4(r2)
      return 0;
1010d14c:	0005883a 	mov	r2,zero
1010d150:	00000506 	br	1010d168 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d154:	010d07c0 	call	1010d07c <alt_get_errno>
1010d158:	1007883a 	mov	r3,r2
1010d15c:	00801444 	movi	r2,81
1010d160:	18800015 	stw	r2,0(r3)
    return -1;
1010d164:	00bfffc4 	movi	r2,-1
  }
}
1010d168:	e037883a 	mov	sp,fp
1010d16c:	dfc00117 	ldw	ra,4(sp)
1010d170:	df000017 	ldw	fp,0(sp)
1010d174:	dec00204 	addi	sp,sp,8
1010d178:	f800283a 	ret

1010d17c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d17c:	defffe04 	addi	sp,sp,-8
1010d180:	dfc00115 	stw	ra,4(sp)
1010d184:	df000015 	stw	fp,0(sp)
1010d188:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d18c:	00840474 	movhi	r2,4113
1010d190:	10853504 	addi	r2,r2,5332
1010d194:	10800017 	ldw	r2,0(r2)
1010d198:	10000526 	beq	r2,zero,1010d1b0 <alt_get_errno+0x34>
1010d19c:	00840474 	movhi	r2,4113
1010d1a0:	10853504 	addi	r2,r2,5332
1010d1a4:	10800017 	ldw	r2,0(r2)
1010d1a8:	103ee83a 	callr	r2
1010d1ac:	00000206 	br	1010d1b8 <alt_get_errno+0x3c>
1010d1b0:	00840474 	movhi	r2,4113
1010d1b4:	108bfb04 	addi	r2,r2,12268
}
1010d1b8:	e037883a 	mov	sp,fp
1010d1bc:	dfc00117 	ldw	ra,4(sp)
1010d1c0:	df000017 	ldw	fp,0(sp)
1010d1c4:	dec00204 	addi	sp,sp,8
1010d1c8:	f800283a 	ret

1010d1cc <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
1010d1cc:	deffed04 	addi	sp,sp,-76
1010d1d0:	dfc01215 	stw	ra,72(sp)
1010d1d4:	df001115 	stw	fp,68(sp)
1010d1d8:	df001104 	addi	fp,sp,68
1010d1dc:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d1e0:	e0bfff17 	ldw	r2,-4(fp)
1010d1e4:	10000616 	blt	r2,zero,1010d200 <isatty+0x34>
1010d1e8:	e0bfff17 	ldw	r2,-4(fp)
1010d1ec:	10c00324 	muli	r3,r2,12
1010d1f0:	00840474 	movhi	r2,4113
1010d1f4:	1080b204 	addi	r2,r2,712
1010d1f8:	1885883a 	add	r2,r3,r2
1010d1fc:	00000106 	br	1010d204 <isatty+0x38>
1010d200:	0005883a 	mov	r2,zero
1010d204:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
1010d208:	e0bfef17 	ldw	r2,-68(fp)
1010d20c:	10000e26 	beq	r2,zero,1010d248 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
1010d210:	e0bfef17 	ldw	r2,-68(fp)
1010d214:	10800017 	ldw	r2,0(r2)
1010d218:	10800817 	ldw	r2,32(r2)
1010d21c:	1000021e 	bne	r2,zero,1010d228 <isatty+0x5c>
    {
      return 1;
1010d220:	00800044 	movi	r2,1
1010d224:	00000d06 	br	1010d25c <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
1010d228:	e0bff004 	addi	r2,fp,-64
1010d22c:	100b883a 	mov	r5,r2
1010d230:	e13fff17 	ldw	r4,-4(fp)
1010d234:	010d0cc0 	call	1010d0cc <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
1010d238:	e0bff117 	ldw	r2,-60(fp)
1010d23c:	10880020 	cmpeqi	r2,r2,8192
1010d240:	10803fcc 	andi	r2,r2,255
1010d244:	00000506 	br	1010d25c <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d248:	010d17c0 	call	1010d17c <alt_get_errno>
1010d24c:	1007883a 	mov	r3,r2
1010d250:	00801444 	movi	r2,81
1010d254:	18800015 	stw	r2,0(r3)
    return 0;
1010d258:	0005883a 	mov	r2,zero
  }
}
1010d25c:	e037883a 	mov	sp,fp
1010d260:	dfc00117 	ldw	ra,4(sp)
1010d264:	df000017 	ldw	fp,0(sp)
1010d268:	dec00204 	addi	sp,sp,8
1010d26c:	f800283a 	ret

1010d270 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
1010d270:	defffc04 	addi	sp,sp,-16
1010d274:	df000315 	stw	fp,12(sp)
1010d278:	df000304 	addi	fp,sp,12
1010d27c:	e13ffd15 	stw	r4,-12(fp)
1010d280:	e17ffe15 	stw	r5,-8(fp)
1010d284:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
1010d288:	e0fffe17 	ldw	r3,-8(fp)
1010d28c:	e0bffd17 	ldw	r2,-12(fp)
1010d290:	18800c26 	beq	r3,r2,1010d2c4 <alt_load_section+0x54>
  {
    while( to != end )
1010d294:	00000806 	br	1010d2b8 <alt_load_section+0x48>
    {
      *to++ = *from++;
1010d298:	e0bffe17 	ldw	r2,-8(fp)
1010d29c:	10c00104 	addi	r3,r2,4
1010d2a0:	e0fffe15 	stw	r3,-8(fp)
1010d2a4:	e0fffd17 	ldw	r3,-12(fp)
1010d2a8:	19000104 	addi	r4,r3,4
1010d2ac:	e13ffd15 	stw	r4,-12(fp)
1010d2b0:	18c00017 	ldw	r3,0(r3)
1010d2b4:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
1010d2b8:	e0fffe17 	ldw	r3,-8(fp)
1010d2bc:	e0bfff17 	ldw	r2,-4(fp)
1010d2c0:	18bff51e 	bne	r3,r2,1010d298 <__alt_data_end+0xfffed298>
    {
      *to++ = *from++;
    }
  }
}
1010d2c4:	0001883a 	nop
1010d2c8:	e037883a 	mov	sp,fp
1010d2cc:	df000017 	ldw	fp,0(sp)
1010d2d0:	dec00104 	addi	sp,sp,4
1010d2d4:	f800283a 	ret

1010d2d8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
1010d2d8:	defffe04 	addi	sp,sp,-8
1010d2dc:	dfc00115 	stw	ra,4(sp)
1010d2e0:	df000015 	stw	fp,0(sp)
1010d2e4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
1010d2e8:	01840474 	movhi	r6,4113
1010d2ec:	31853a04 	addi	r6,r6,5352
1010d2f0:	01440474 	movhi	r5,4113
1010d2f4:	297e7f04 	addi	r5,r5,-1540
1010d2f8:	01040474 	movhi	r4,4113
1010d2fc:	21053a04 	addi	r4,r4,5352
1010d300:	010d2700 	call	1010d270 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
1010d304:	01840434 	movhi	r6,4112
1010d308:	31809104 	addi	r6,r6,580
1010d30c:	01440434 	movhi	r5,4112
1010d310:	29400804 	addi	r5,r5,32
1010d314:	01040434 	movhi	r4,4112
1010d318:	21000804 	addi	r4,r4,32
1010d31c:	010d2700 	call	1010d270 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
1010d320:	01840474 	movhi	r6,4113
1010d324:	31be7f04 	addi	r6,r6,-1540
1010d328:	01440474 	movhi	r5,4113
1010d32c:	297dbc04 	addi	r5,r5,-2320
1010d330:	01040474 	movhi	r4,4113
1010d334:	213dbc04 	addi	r4,r4,-2320
1010d338:	010d2700 	call	1010d270 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
1010d33c:	010e55c0 	call	1010e55c <alt_dcache_flush_all>
  alt_icache_flush_all();
1010d340:	010e7580 	call	1010e758 <alt_icache_flush_all>
}
1010d344:	0001883a 	nop
1010d348:	e037883a 	mov	sp,fp
1010d34c:	dfc00117 	ldw	ra,4(sp)
1010d350:	df000017 	ldw	fp,0(sp)
1010d354:	dec00204 	addi	sp,sp,8
1010d358:	f800283a 	ret

1010d35c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d35c:	defffe04 	addi	sp,sp,-8
1010d360:	dfc00115 	stw	ra,4(sp)
1010d364:	df000015 	stw	fp,0(sp)
1010d368:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d36c:	00840474 	movhi	r2,4113
1010d370:	10853504 	addi	r2,r2,5332
1010d374:	10800017 	ldw	r2,0(r2)
1010d378:	10000526 	beq	r2,zero,1010d390 <alt_get_errno+0x34>
1010d37c:	00840474 	movhi	r2,4113
1010d380:	10853504 	addi	r2,r2,5332
1010d384:	10800017 	ldw	r2,0(r2)
1010d388:	103ee83a 	callr	r2
1010d38c:	00000206 	br	1010d398 <alt_get_errno+0x3c>
1010d390:	00840474 	movhi	r2,4113
1010d394:	108bfb04 	addi	r2,r2,12268
}
1010d398:	e037883a 	mov	sp,fp
1010d39c:	dfc00117 	ldw	ra,4(sp)
1010d3a0:	df000017 	ldw	fp,0(sp)
1010d3a4:	dec00204 	addi	sp,sp,8
1010d3a8:	f800283a 	ret

1010d3ac <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
1010d3ac:	defff904 	addi	sp,sp,-28
1010d3b0:	dfc00615 	stw	ra,24(sp)
1010d3b4:	df000515 	stw	fp,20(sp)
1010d3b8:	df000504 	addi	fp,sp,20
1010d3bc:	e13ffd15 	stw	r4,-12(fp)
1010d3c0:	e17ffe15 	stw	r5,-8(fp)
1010d3c4:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
1010d3c8:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d3cc:	e0bffd17 	ldw	r2,-12(fp)
1010d3d0:	10000616 	blt	r2,zero,1010d3ec <lseek+0x40>
1010d3d4:	e0bffd17 	ldw	r2,-12(fp)
1010d3d8:	10c00324 	muli	r3,r2,12
1010d3dc:	00840474 	movhi	r2,4113
1010d3e0:	1080b204 	addi	r2,r2,712
1010d3e4:	1885883a 	add	r2,r3,r2
1010d3e8:	00000106 	br	1010d3f0 <lseek+0x44>
1010d3ec:	0005883a 	mov	r2,zero
1010d3f0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
1010d3f4:	e0bffc17 	ldw	r2,-16(fp)
1010d3f8:	10001026 	beq	r2,zero,1010d43c <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
1010d3fc:	e0bffc17 	ldw	r2,-16(fp)
1010d400:	10800017 	ldw	r2,0(r2)
1010d404:	10800717 	ldw	r2,28(r2)
1010d408:	10000926 	beq	r2,zero,1010d430 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
1010d40c:	e0bffc17 	ldw	r2,-16(fp)
1010d410:	10800017 	ldw	r2,0(r2)
1010d414:	10800717 	ldw	r2,28(r2)
1010d418:	e1bfff17 	ldw	r6,-4(fp)
1010d41c:	e17ffe17 	ldw	r5,-8(fp)
1010d420:	e13ffc17 	ldw	r4,-16(fp)
1010d424:	103ee83a 	callr	r2
1010d428:	e0bffb15 	stw	r2,-20(fp)
1010d42c:	00000506 	br	1010d444 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
1010d430:	00bfde84 	movi	r2,-134
1010d434:	e0bffb15 	stw	r2,-20(fp)
1010d438:	00000206 	br	1010d444 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
1010d43c:	00bfebc4 	movi	r2,-81
1010d440:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
1010d444:	e0bffb17 	ldw	r2,-20(fp)
1010d448:	1000070e 	bge	r2,zero,1010d468 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
1010d44c:	010d35c0 	call	1010d35c <alt_get_errno>
1010d450:	1007883a 	mov	r3,r2
1010d454:	e0bffb17 	ldw	r2,-20(fp)
1010d458:	0085c83a 	sub	r2,zero,r2
1010d45c:	18800015 	stw	r2,0(r3)
    rc = -1;
1010d460:	00bfffc4 	movi	r2,-1
1010d464:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
1010d468:	e0bffb17 	ldw	r2,-20(fp)
}
1010d46c:	e037883a 	mov	sp,fp
1010d470:	dfc00117 	ldw	ra,4(sp)
1010d474:	df000017 	ldw	fp,0(sp)
1010d478:	dec00204 	addi	sp,sp,8
1010d47c:	f800283a 	ret

1010d480 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
1010d480:	defffd04 	addi	sp,sp,-12
1010d484:	dfc00215 	stw	ra,8(sp)
1010d488:	df000115 	stw	fp,4(sp)
1010d48c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
1010d490:	0009883a 	mov	r4,zero
1010d494:	010d9240 	call	1010d924 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1010d498:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
1010d49c:	010d95c0 	call	1010d95c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
1010d4a0:	01840474 	movhi	r6,4113
1010d4a4:	31be7504 	addi	r6,r6,-1580
1010d4a8:	01440474 	movhi	r5,4113
1010d4ac:	297e7504 	addi	r5,r5,-1580
1010d4b0:	01040474 	movhi	r4,4113
1010d4b4:	213e7504 	addi	r4,r4,-1580
1010d4b8:	010eb200 	call	1010eb20 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
1010d4bc:	010e6980 	call	1010e698 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
1010d4c0:	01040474 	movhi	r4,4113
1010d4c4:	2139be04 	addi	r4,r4,-6408
1010d4c8:	010f35c0 	call	1010f35c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
1010d4cc:	d0a6d217 	ldw	r2,-25784(gp)
1010d4d0:	d0e6d317 	ldw	r3,-25780(gp)
1010d4d4:	d126d417 	ldw	r4,-25776(gp)
1010d4d8:	200d883a 	mov	r6,r4
1010d4dc:	180b883a 	mov	r5,r3
1010d4e0:	1009883a 	mov	r4,r2
1010d4e4:	01006680 	call	10100668 <main>
1010d4e8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
1010d4ec:	01000044 	movi	r4,1
1010d4f0:	010cf800 	call	1010cf80 <close>
  exit (result);
1010d4f4:	e13fff17 	ldw	r4,-4(fp)
1010d4f8:	010f3700 	call	1010f370 <exit>

1010d4fc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
1010d4fc:	defffe04 	addi	sp,sp,-8
1010d500:	df000115 	stw	fp,4(sp)
1010d504:	df000104 	addi	fp,sp,4
1010d508:	e13fff15 	stw	r4,-4(fp)
}
1010d50c:	0001883a 	nop
1010d510:	e037883a 	mov	sp,fp
1010d514:	df000017 	ldw	fp,0(sp)
1010d518:	dec00104 	addi	sp,sp,4
1010d51c:	f800283a 	ret

1010d520 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
1010d520:	defffe04 	addi	sp,sp,-8
1010d524:	df000115 	stw	fp,4(sp)
1010d528:	df000104 	addi	fp,sp,4
1010d52c:	e13fff15 	stw	r4,-4(fp)
}
1010d530:	0001883a 	nop
1010d534:	e037883a 	mov	sp,fp
1010d538:	df000017 	ldw	fp,0(sp)
1010d53c:	dec00104 	addi	sp,sp,4
1010d540:	f800283a 	ret

1010d544 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d544:	defffe04 	addi	sp,sp,-8
1010d548:	dfc00115 	stw	ra,4(sp)
1010d54c:	df000015 	stw	fp,0(sp)
1010d550:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d554:	00840474 	movhi	r2,4113
1010d558:	10853504 	addi	r2,r2,5332
1010d55c:	10800017 	ldw	r2,0(r2)
1010d560:	10000526 	beq	r2,zero,1010d578 <alt_get_errno+0x34>
1010d564:	00840474 	movhi	r2,4113
1010d568:	10853504 	addi	r2,r2,5332
1010d56c:	10800017 	ldw	r2,0(r2)
1010d570:	103ee83a 	callr	r2
1010d574:	00000206 	br	1010d580 <alt_get_errno+0x3c>
1010d578:	00840474 	movhi	r2,4113
1010d57c:	108bfb04 	addi	r2,r2,12268
}
1010d580:	e037883a 	mov	sp,fp
1010d584:	dfc00117 	ldw	ra,4(sp)
1010d588:	df000017 	ldw	fp,0(sp)
1010d58c:	dec00204 	addi	sp,sp,8
1010d590:	f800283a 	ret

1010d594 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
1010d594:	defff904 	addi	sp,sp,-28
1010d598:	dfc00615 	stw	ra,24(sp)
1010d59c:	df000515 	stw	fp,20(sp)
1010d5a0:	df000504 	addi	fp,sp,20
1010d5a4:	e13ffd15 	stw	r4,-12(fp)
1010d5a8:	e17ffe15 	stw	r5,-8(fp)
1010d5ac:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d5b0:	e0bffd17 	ldw	r2,-12(fp)
1010d5b4:	10000616 	blt	r2,zero,1010d5d0 <read+0x3c>
1010d5b8:	e0bffd17 	ldw	r2,-12(fp)
1010d5bc:	10c00324 	muli	r3,r2,12
1010d5c0:	00840474 	movhi	r2,4113
1010d5c4:	1080b204 	addi	r2,r2,712
1010d5c8:	1885883a 	add	r2,r3,r2
1010d5cc:	00000106 	br	1010d5d4 <read+0x40>
1010d5d0:	0005883a 	mov	r2,zero
1010d5d4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010d5d8:	e0bffb17 	ldw	r2,-20(fp)
1010d5dc:	10002226 	beq	r2,zero,1010d668 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010d5e0:	e0bffb17 	ldw	r2,-20(fp)
1010d5e4:	10800217 	ldw	r2,8(r2)
1010d5e8:	108000cc 	andi	r2,r2,3
1010d5ec:	10800060 	cmpeqi	r2,r2,1
1010d5f0:	1000181e 	bne	r2,zero,1010d654 <read+0xc0>
        (fd->dev->read))
1010d5f4:	e0bffb17 	ldw	r2,-20(fp)
1010d5f8:	10800017 	ldw	r2,0(r2)
1010d5fc:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010d600:	10001426 	beq	r2,zero,1010d654 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
1010d604:	e0bffb17 	ldw	r2,-20(fp)
1010d608:	10800017 	ldw	r2,0(r2)
1010d60c:	10800517 	ldw	r2,20(r2)
1010d610:	e0ffff17 	ldw	r3,-4(fp)
1010d614:	180d883a 	mov	r6,r3
1010d618:	e17ffe17 	ldw	r5,-8(fp)
1010d61c:	e13ffb17 	ldw	r4,-20(fp)
1010d620:	103ee83a 	callr	r2
1010d624:	e0bffc15 	stw	r2,-16(fp)
1010d628:	e0bffc17 	ldw	r2,-16(fp)
1010d62c:	1000070e 	bge	r2,zero,1010d64c <read+0xb8>
        {
          ALT_ERRNO = -rval;
1010d630:	010d5440 	call	1010d544 <alt_get_errno>
1010d634:	1007883a 	mov	r3,r2
1010d638:	e0bffc17 	ldw	r2,-16(fp)
1010d63c:	0085c83a 	sub	r2,zero,r2
1010d640:	18800015 	stw	r2,0(r3)
          return -1;
1010d644:	00bfffc4 	movi	r2,-1
1010d648:	00000c06 	br	1010d67c <read+0xe8>
        }
        return rval;
1010d64c:	e0bffc17 	ldw	r2,-16(fp)
1010d650:	00000a06 	br	1010d67c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
1010d654:	010d5440 	call	1010d544 <alt_get_errno>
1010d658:	1007883a 	mov	r3,r2
1010d65c:	00800344 	movi	r2,13
1010d660:	18800015 	stw	r2,0(r3)
1010d664:	00000406 	br	1010d678 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
1010d668:	010d5440 	call	1010d544 <alt_get_errno>
1010d66c:	1007883a 	mov	r3,r2
1010d670:	00801444 	movi	r2,81
1010d674:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010d678:	00bfffc4 	movi	r2,-1
}
1010d67c:	e037883a 	mov	sp,fp
1010d680:	dfc00117 	ldw	ra,4(sp)
1010d684:	df000017 	ldw	fp,0(sp)
1010d688:	dec00204 	addi	sp,sp,8
1010d68c:	f800283a 	ret

1010d690 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
1010d690:	defffe04 	addi	sp,sp,-8
1010d694:	df000115 	stw	fp,4(sp)
1010d698:	df000104 	addi	fp,sp,4
1010d69c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
1010d6a0:	e0bfff17 	ldw	r2,-4(fp)
1010d6a4:	108000d0 	cmplti	r2,r2,3
1010d6a8:	10000d1e 	bne	r2,zero,1010d6e0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
1010d6ac:	00840474 	movhi	r2,4113
1010d6b0:	1080b204 	addi	r2,r2,712
1010d6b4:	e0ffff17 	ldw	r3,-4(fp)
1010d6b8:	18c00324 	muli	r3,r3,12
1010d6bc:	10c5883a 	add	r2,r2,r3
1010d6c0:	10800204 	addi	r2,r2,8
1010d6c4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
1010d6c8:	00840474 	movhi	r2,4113
1010d6cc:	1080b204 	addi	r2,r2,712
1010d6d0:	e0ffff17 	ldw	r3,-4(fp)
1010d6d4:	18c00324 	muli	r3,r3,12
1010d6d8:	10c5883a 	add	r2,r2,r3
1010d6dc:	10000015 	stw	zero,0(r2)
  }
}
1010d6e0:	0001883a 	nop
1010d6e4:	e037883a 	mov	sp,fp
1010d6e8:	df000017 	ldw	fp,0(sp)
1010d6ec:	dec00104 	addi	sp,sp,4
1010d6f0:	f800283a 	ret

1010d6f4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
1010d6f4:	defff904 	addi	sp,sp,-28
1010d6f8:	df000615 	stw	fp,24(sp)
1010d6fc:	df000604 	addi	fp,sp,24
1010d700:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010d704:	0005303a 	rdctl	r2,status
1010d708:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010d70c:	e0fffe17 	ldw	r3,-8(fp)
1010d710:	00bfff84 	movi	r2,-2
1010d714:	1884703a 	and	r2,r3,r2
1010d718:	1001703a 	wrctl	status,r2
  
  return context;
1010d71c:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
1010d720:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
1010d724:	d0a00c17 	ldw	r2,-32720(gp)
1010d728:	10c000c4 	addi	r3,r2,3
1010d72c:	00bfff04 	movi	r2,-4
1010d730:	1884703a 	and	r2,r3,r2
1010d734:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
1010d738:	d0e00c17 	ldw	r3,-32720(gp)
1010d73c:	e0bfff17 	ldw	r2,-4(fp)
1010d740:	1887883a 	add	r3,r3,r2
1010d744:	008404b4 	movhi	r2,4114
1010d748:	10800004 	addi	r2,r2,0
1010d74c:	10c0062e 	bgeu	r2,r3,1010d768 <sbrk+0x74>
1010d750:	e0bffb17 	ldw	r2,-20(fp)
1010d754:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010d758:	e0bffa17 	ldw	r2,-24(fp)
1010d75c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
1010d760:	00bfffc4 	movi	r2,-1
1010d764:	00000b06 	br	1010d794 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1010d768:	d0a00c17 	ldw	r2,-32720(gp)
1010d76c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
1010d770:	d0e00c17 	ldw	r3,-32720(gp)
1010d774:	e0bfff17 	ldw	r2,-4(fp)
1010d778:	1885883a 	add	r2,r3,r2
1010d77c:	d0a00c15 	stw	r2,-32720(gp)
1010d780:	e0bffb17 	ldw	r2,-20(fp)
1010d784:	e0bffc15 	stw	r2,-16(fp)
1010d788:	e0bffc17 	ldw	r2,-16(fp)
1010d78c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
1010d790:	e0bffd17 	ldw	r2,-12(fp)
} 
1010d794:	e037883a 	mov	sp,fp
1010d798:	df000017 	ldw	fp,0(sp)
1010d79c:	dec00104 	addi	sp,sp,4
1010d7a0:	f800283a 	ret

1010d7a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d7a4:	defffe04 	addi	sp,sp,-8
1010d7a8:	dfc00115 	stw	ra,4(sp)
1010d7ac:	df000015 	stw	fp,0(sp)
1010d7b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d7b4:	00840474 	movhi	r2,4113
1010d7b8:	10853504 	addi	r2,r2,5332
1010d7bc:	10800017 	ldw	r2,0(r2)
1010d7c0:	10000526 	beq	r2,zero,1010d7d8 <alt_get_errno+0x34>
1010d7c4:	00840474 	movhi	r2,4113
1010d7c8:	10853504 	addi	r2,r2,5332
1010d7cc:	10800017 	ldw	r2,0(r2)
1010d7d0:	103ee83a 	callr	r2
1010d7d4:	00000206 	br	1010d7e0 <alt_get_errno+0x3c>
1010d7d8:	00840474 	movhi	r2,4113
1010d7dc:	108bfb04 	addi	r2,r2,12268
}
1010d7e0:	e037883a 	mov	sp,fp
1010d7e4:	dfc00117 	ldw	ra,4(sp)
1010d7e8:	df000017 	ldw	fp,0(sp)
1010d7ec:	dec00204 	addi	sp,sp,8
1010d7f0:	f800283a 	ret

1010d7f4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
1010d7f4:	defff904 	addi	sp,sp,-28
1010d7f8:	dfc00615 	stw	ra,24(sp)
1010d7fc:	df000515 	stw	fp,20(sp)
1010d800:	df000504 	addi	fp,sp,20
1010d804:	e13ffd15 	stw	r4,-12(fp)
1010d808:	e17ffe15 	stw	r5,-8(fp)
1010d80c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d810:	e0bffd17 	ldw	r2,-12(fp)
1010d814:	10000616 	blt	r2,zero,1010d830 <write+0x3c>
1010d818:	e0bffd17 	ldw	r2,-12(fp)
1010d81c:	10c00324 	muli	r3,r2,12
1010d820:	00840474 	movhi	r2,4113
1010d824:	1080b204 	addi	r2,r2,712
1010d828:	1885883a 	add	r2,r3,r2
1010d82c:	00000106 	br	1010d834 <write+0x40>
1010d830:	0005883a 	mov	r2,zero
1010d834:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010d838:	e0bffb17 	ldw	r2,-20(fp)
1010d83c:	10002126 	beq	r2,zero,1010d8c4 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
1010d840:	e0bffb17 	ldw	r2,-20(fp)
1010d844:	10800217 	ldw	r2,8(r2)
1010d848:	108000cc 	andi	r2,r2,3
1010d84c:	10001826 	beq	r2,zero,1010d8b0 <write+0xbc>
1010d850:	e0bffb17 	ldw	r2,-20(fp)
1010d854:	10800017 	ldw	r2,0(r2)
1010d858:	10800617 	ldw	r2,24(r2)
1010d85c:	10001426 	beq	r2,zero,1010d8b0 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
1010d860:	e0bffb17 	ldw	r2,-20(fp)
1010d864:	10800017 	ldw	r2,0(r2)
1010d868:	10800617 	ldw	r2,24(r2)
1010d86c:	e0ffff17 	ldw	r3,-4(fp)
1010d870:	180d883a 	mov	r6,r3
1010d874:	e17ffe17 	ldw	r5,-8(fp)
1010d878:	e13ffb17 	ldw	r4,-20(fp)
1010d87c:	103ee83a 	callr	r2
1010d880:	e0bffc15 	stw	r2,-16(fp)
1010d884:	e0bffc17 	ldw	r2,-16(fp)
1010d888:	1000070e 	bge	r2,zero,1010d8a8 <write+0xb4>
      {
        ALT_ERRNO = -rval;
1010d88c:	010d7a40 	call	1010d7a4 <alt_get_errno>
1010d890:	1007883a 	mov	r3,r2
1010d894:	e0bffc17 	ldw	r2,-16(fp)
1010d898:	0085c83a 	sub	r2,zero,r2
1010d89c:	18800015 	stw	r2,0(r3)
        return -1;
1010d8a0:	00bfffc4 	movi	r2,-1
1010d8a4:	00000c06 	br	1010d8d8 <write+0xe4>
      }
      return rval;
1010d8a8:	e0bffc17 	ldw	r2,-16(fp)
1010d8ac:	00000a06 	br	1010d8d8 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
1010d8b0:	010d7a40 	call	1010d7a4 <alt_get_errno>
1010d8b4:	1007883a 	mov	r3,r2
1010d8b8:	00800344 	movi	r2,13
1010d8bc:	18800015 	stw	r2,0(r3)
1010d8c0:	00000406 	br	1010d8d4 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
1010d8c4:	010d7a40 	call	1010d7a4 <alt_get_errno>
1010d8c8:	1007883a 	mov	r3,r2
1010d8cc:	00801444 	movi	r2,81
1010d8d0:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010d8d4:	00bfffc4 	movi	r2,-1
}
1010d8d8:	e037883a 	mov	sp,fp
1010d8dc:	dfc00117 	ldw	ra,4(sp)
1010d8e0:	df000017 	ldw	fp,0(sp)
1010d8e4:	dec00204 	addi	sp,sp,8
1010d8e8:	f800283a 	ret

1010d8ec <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
1010d8ec:	defffd04 	addi	sp,sp,-12
1010d8f0:	dfc00215 	stw	ra,8(sp)
1010d8f4:	df000115 	stw	fp,4(sp)
1010d8f8:	df000104 	addi	fp,sp,4
1010d8fc:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
1010d900:	01440474 	movhi	r5,4113
1010d904:	29453204 	addi	r5,r5,5320
1010d908:	e13fff17 	ldw	r4,-4(fp)
1010d90c:	010e5f40 	call	1010e5f4 <alt_dev_llist_insert>
}
1010d910:	e037883a 	mov	sp,fp
1010d914:	dfc00117 	ldw	ra,4(sp)
1010d918:	df000017 	ldw	fp,0(sp)
1010d91c:	dec00204 	addi	sp,sp,8
1010d920:	f800283a 	ret

1010d924 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
1010d924:	defffd04 	addi	sp,sp,-12
1010d928:	dfc00215 	stw	ra,8(sp)
1010d92c:	df000115 	stw	fp,4(sp)
1010d930:	df000104 	addi	fp,sp,4
1010d934:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
1010d938:	010efb40 	call	1010efb4 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
1010d93c:	00800044 	movi	r2,1
1010d940:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
1010d944:	0001883a 	nop
1010d948:	e037883a 	mov	sp,fp
1010d94c:	dfc00117 	ldw	ra,4(sp)
1010d950:	df000017 	ldw	fp,0(sp)
1010d954:	dec00204 	addi	sp,sp,8
1010d958:	f800283a 	ret

1010d95c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
1010d95c:	defffe04 	addi	sp,sp,-8
1010d960:	dfc00115 	stw	ra,4(sp)
1010d964:	df000015 	stw	fp,0(sp)
1010d968:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1010d96c:	000d883a 	mov	r6,zero
1010d970:	000b883a 	mov	r5,zero
1010d974:	01040474 	movhi	r4,4113
1010d978:	21011c04 	addi	r4,r4,1136
1010d97c:	010db080 	call	1010db08 <altera_avalon_jtag_uart_init>
1010d980:	01040474 	movhi	r4,4113
1010d984:	21011204 	addi	r4,r4,1096
1010d988:	010d8ec0 	call	1010d8ec <alt_dev_reg>
}
1010d98c:	0001883a 	nop
1010d990:	e037883a 	mov	sp,fp
1010d994:	dfc00117 	ldw	ra,4(sp)
1010d998:	df000017 	ldw	fp,0(sp)
1010d99c:	dec00204 	addi	sp,sp,8
1010d9a0:	f800283a 	ret

1010d9a4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
1010d9a4:	defffa04 	addi	sp,sp,-24
1010d9a8:	dfc00515 	stw	ra,20(sp)
1010d9ac:	df000415 	stw	fp,16(sp)
1010d9b0:	df000404 	addi	fp,sp,16
1010d9b4:	e13ffd15 	stw	r4,-12(fp)
1010d9b8:	e17ffe15 	stw	r5,-8(fp)
1010d9bc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010d9c0:	e0bffd17 	ldw	r2,-12(fp)
1010d9c4:	10800017 	ldw	r2,0(r2)
1010d9c8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
1010d9cc:	e0bffc17 	ldw	r2,-16(fp)
1010d9d0:	10c00a04 	addi	r3,r2,40
1010d9d4:	e0bffd17 	ldw	r2,-12(fp)
1010d9d8:	10800217 	ldw	r2,8(r2)
1010d9dc:	100f883a 	mov	r7,r2
1010d9e0:	e1bfff17 	ldw	r6,-4(fp)
1010d9e4:	e17ffe17 	ldw	r5,-8(fp)
1010d9e8:	1809883a 	mov	r4,r3
1010d9ec:	010dfdc0 	call	1010dfdc <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1010d9f0:	e037883a 	mov	sp,fp
1010d9f4:	dfc00117 	ldw	ra,4(sp)
1010d9f8:	df000017 	ldw	fp,0(sp)
1010d9fc:	dec00204 	addi	sp,sp,8
1010da00:	f800283a 	ret

1010da04 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
1010da04:	defffa04 	addi	sp,sp,-24
1010da08:	dfc00515 	stw	ra,20(sp)
1010da0c:	df000415 	stw	fp,16(sp)
1010da10:	df000404 	addi	fp,sp,16
1010da14:	e13ffd15 	stw	r4,-12(fp)
1010da18:	e17ffe15 	stw	r5,-8(fp)
1010da1c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010da20:	e0bffd17 	ldw	r2,-12(fp)
1010da24:	10800017 	ldw	r2,0(r2)
1010da28:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
1010da2c:	e0bffc17 	ldw	r2,-16(fp)
1010da30:	10c00a04 	addi	r3,r2,40
1010da34:	e0bffd17 	ldw	r2,-12(fp)
1010da38:	10800217 	ldw	r2,8(r2)
1010da3c:	100f883a 	mov	r7,r2
1010da40:	e1bfff17 	ldw	r6,-4(fp)
1010da44:	e17ffe17 	ldw	r5,-8(fp)
1010da48:	1809883a 	mov	r4,r3
1010da4c:	010e1f80 	call	1010e1f8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1010da50:	e037883a 	mov	sp,fp
1010da54:	dfc00117 	ldw	ra,4(sp)
1010da58:	df000017 	ldw	fp,0(sp)
1010da5c:	dec00204 	addi	sp,sp,8
1010da60:	f800283a 	ret

1010da64 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
1010da64:	defffc04 	addi	sp,sp,-16
1010da68:	dfc00315 	stw	ra,12(sp)
1010da6c:	df000215 	stw	fp,8(sp)
1010da70:	df000204 	addi	fp,sp,8
1010da74:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010da78:	e0bfff17 	ldw	r2,-4(fp)
1010da7c:	10800017 	ldw	r2,0(r2)
1010da80:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
1010da84:	e0bffe17 	ldw	r2,-8(fp)
1010da88:	10c00a04 	addi	r3,r2,40
1010da8c:	e0bfff17 	ldw	r2,-4(fp)
1010da90:	10800217 	ldw	r2,8(r2)
1010da94:	100b883a 	mov	r5,r2
1010da98:	1809883a 	mov	r4,r3
1010da9c:	010de840 	call	1010de84 <altera_avalon_jtag_uart_close>
}
1010daa0:	e037883a 	mov	sp,fp
1010daa4:	dfc00117 	ldw	ra,4(sp)
1010daa8:	df000017 	ldw	fp,0(sp)
1010daac:	dec00204 	addi	sp,sp,8
1010dab0:	f800283a 	ret

1010dab4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
1010dab4:	defffa04 	addi	sp,sp,-24
1010dab8:	dfc00515 	stw	ra,20(sp)
1010dabc:	df000415 	stw	fp,16(sp)
1010dac0:	df000404 	addi	fp,sp,16
1010dac4:	e13ffd15 	stw	r4,-12(fp)
1010dac8:	e17ffe15 	stw	r5,-8(fp)
1010dacc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1010dad0:	e0bffd17 	ldw	r2,-12(fp)
1010dad4:	10800017 	ldw	r2,0(r2)
1010dad8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
1010dadc:	e0bffc17 	ldw	r2,-16(fp)
1010dae0:	10800a04 	addi	r2,r2,40
1010dae4:	e1bfff17 	ldw	r6,-4(fp)
1010dae8:	e17ffe17 	ldw	r5,-8(fp)
1010daec:	1009883a 	mov	r4,r2
1010daf0:	010deec0 	call	1010deec <altera_avalon_jtag_uart_ioctl>
}
1010daf4:	e037883a 	mov	sp,fp
1010daf8:	dfc00117 	ldw	ra,4(sp)
1010dafc:	df000017 	ldw	fp,0(sp)
1010db00:	dec00204 	addi	sp,sp,8
1010db04:	f800283a 	ret

1010db08 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
1010db08:	defffa04 	addi	sp,sp,-24
1010db0c:	dfc00515 	stw	ra,20(sp)
1010db10:	df000415 	stw	fp,16(sp)
1010db14:	df000404 	addi	fp,sp,16
1010db18:	e13ffd15 	stw	r4,-12(fp)
1010db1c:	e17ffe15 	stw	r5,-8(fp)
1010db20:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010db24:	e0bffd17 	ldw	r2,-12(fp)
1010db28:	00c00044 	movi	r3,1
1010db2c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1010db30:	e0bffd17 	ldw	r2,-12(fp)
1010db34:	10800017 	ldw	r2,0(r2)
1010db38:	10800104 	addi	r2,r2,4
1010db3c:	1007883a 	mov	r3,r2
1010db40:	e0bffd17 	ldw	r2,-12(fp)
1010db44:	10800817 	ldw	r2,32(r2)
1010db48:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
1010db4c:	e0bffe17 	ldw	r2,-8(fp)
1010db50:	e0ffff17 	ldw	r3,-4(fp)
1010db54:	d8000015 	stw	zero,0(sp)
1010db58:	e1fffd17 	ldw	r7,-12(fp)
1010db5c:	01840474 	movhi	r6,4113
1010db60:	31b6f404 	addi	r6,r6,-9264
1010db64:	180b883a 	mov	r5,r3
1010db68:	1009883a 	mov	r4,r2
1010db6c:	010e78c0 	call	1010e78c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1010db70:	e0bffd17 	ldw	r2,-12(fp)
1010db74:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
1010db78:	e0bffd17 	ldw	r2,-12(fp)
1010db7c:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1010db80:	00840474 	movhi	r2,4113
1010db84:	108c0004 	addi	r2,r2,12288
1010db88:	10800017 	ldw	r2,0(r2)
1010db8c:	e1fffd17 	ldw	r7,-12(fp)
1010db90:	01840474 	movhi	r6,4113
1010db94:	31b77704 	addi	r6,r6,-8740
1010db98:	100b883a 	mov	r5,r2
1010db9c:	1809883a 	mov	r4,r3
1010dba0:	010e41c0 	call	1010e41c <alt_alarm_start>
1010dba4:	1000040e 	bge	r2,zero,1010dbb8 <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
1010dba8:	e0fffd17 	ldw	r3,-12(fp)
1010dbac:	00a00034 	movhi	r2,32768
1010dbb0:	10bfffc4 	addi	r2,r2,-1
1010dbb4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
1010dbb8:	0001883a 	nop
1010dbbc:	e037883a 	mov	sp,fp
1010dbc0:	dfc00117 	ldw	ra,4(sp)
1010dbc4:	df000017 	ldw	fp,0(sp)
1010dbc8:	dec00204 	addi	sp,sp,8
1010dbcc:	f800283a 	ret

1010dbd0 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
1010dbd0:	defff804 	addi	sp,sp,-32
1010dbd4:	df000715 	stw	fp,28(sp)
1010dbd8:	df000704 	addi	fp,sp,28
1010dbdc:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
1010dbe0:	e0bfff17 	ldw	r2,-4(fp)
1010dbe4:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
1010dbe8:	e0bffb17 	ldw	r2,-20(fp)
1010dbec:	10800017 	ldw	r2,0(r2)
1010dbf0:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010dbf4:	e0bffc17 	ldw	r2,-16(fp)
1010dbf8:	10800104 	addi	r2,r2,4
1010dbfc:	10800037 	ldwio	r2,0(r2)
1010dc00:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
1010dc04:	e0bffd17 	ldw	r2,-12(fp)
1010dc08:	1080c00c 	andi	r2,r2,768
1010dc0c:	10006d26 	beq	r2,zero,1010ddc4 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
1010dc10:	e0bffd17 	ldw	r2,-12(fp)
1010dc14:	1080400c 	andi	r2,r2,256
1010dc18:	10003526 	beq	r2,zero,1010dcf0 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
1010dc1c:	00800074 	movhi	r2,1
1010dc20:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010dc24:	e0bffb17 	ldw	r2,-20(fp)
1010dc28:	10800a17 	ldw	r2,40(r2)
1010dc2c:	10800044 	addi	r2,r2,1
1010dc30:	1081ffcc 	andi	r2,r2,2047
1010dc34:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
1010dc38:	e0bffb17 	ldw	r2,-20(fp)
1010dc3c:	10c00b17 	ldw	r3,44(r2)
1010dc40:	e0bffe17 	ldw	r2,-8(fp)
1010dc44:	18801526 	beq	r3,r2,1010dc9c <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
1010dc48:	e0bffc17 	ldw	r2,-16(fp)
1010dc4c:	10800037 	ldwio	r2,0(r2)
1010dc50:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
1010dc54:	e0bff917 	ldw	r2,-28(fp)
1010dc58:	10a0000c 	andi	r2,r2,32768
1010dc5c:	10001126 	beq	r2,zero,1010dca4 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
1010dc60:	e0bffb17 	ldw	r2,-20(fp)
1010dc64:	10800a17 	ldw	r2,40(r2)
1010dc68:	e0fff917 	ldw	r3,-28(fp)
1010dc6c:	1809883a 	mov	r4,r3
1010dc70:	e0fffb17 	ldw	r3,-20(fp)
1010dc74:	1885883a 	add	r2,r3,r2
1010dc78:	10800e04 	addi	r2,r2,56
1010dc7c:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010dc80:	e0bffb17 	ldw	r2,-20(fp)
1010dc84:	10800a17 	ldw	r2,40(r2)
1010dc88:	10800044 	addi	r2,r2,1
1010dc8c:	10c1ffcc 	andi	r3,r2,2047
1010dc90:	e0bffb17 	ldw	r2,-20(fp)
1010dc94:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
1010dc98:	003fe206 	br	1010dc24 <__alt_data_end+0xfffedc24>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
1010dc9c:	0001883a 	nop
1010dca0:	00000106 	br	1010dca8 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
1010dca4:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1010dca8:	e0bff917 	ldw	r2,-28(fp)
1010dcac:	10bfffec 	andhi	r2,r2,65535
1010dcb0:	10000f26 	beq	r2,zero,1010dcf0 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010dcb4:	e0bffb17 	ldw	r2,-20(fp)
1010dcb8:	10c00817 	ldw	r3,32(r2)
1010dcbc:	00bfff84 	movi	r2,-2
1010dcc0:	1886703a 	and	r3,r3,r2
1010dcc4:	e0bffb17 	ldw	r2,-20(fp)
1010dcc8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
1010dccc:	e0bffc17 	ldw	r2,-16(fp)
1010dcd0:	10800104 	addi	r2,r2,4
1010dcd4:	1007883a 	mov	r3,r2
1010dcd8:	e0bffb17 	ldw	r2,-20(fp)
1010dcdc:	10800817 	ldw	r2,32(r2)
1010dce0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010dce4:	e0bffc17 	ldw	r2,-16(fp)
1010dce8:	10800104 	addi	r2,r2,4
1010dcec:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
1010dcf0:	e0bffd17 	ldw	r2,-12(fp)
1010dcf4:	1080800c 	andi	r2,r2,512
1010dcf8:	103fbe26 	beq	r2,zero,1010dbf4 <__alt_data_end+0xfffedbf4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
1010dcfc:	e0bffd17 	ldw	r2,-12(fp)
1010dd00:	1004d43a 	srli	r2,r2,16
1010dd04:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
1010dd08:	00001406 	br	1010dd5c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
1010dd0c:	e0bffc17 	ldw	r2,-16(fp)
1010dd10:	e0fffb17 	ldw	r3,-20(fp)
1010dd14:	18c00d17 	ldw	r3,52(r3)
1010dd18:	e13ffb17 	ldw	r4,-20(fp)
1010dd1c:	20c7883a 	add	r3,r4,r3
1010dd20:	18c20e04 	addi	r3,r3,2104
1010dd24:	18c00003 	ldbu	r3,0(r3)
1010dd28:	18c03fcc 	andi	r3,r3,255
1010dd2c:	18c0201c 	xori	r3,r3,128
1010dd30:	18ffe004 	addi	r3,r3,-128
1010dd34:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010dd38:	e0bffb17 	ldw	r2,-20(fp)
1010dd3c:	10800d17 	ldw	r2,52(r2)
1010dd40:	10800044 	addi	r2,r2,1
1010dd44:	10c1ffcc 	andi	r3,r2,2047
1010dd48:	e0bffb17 	ldw	r2,-20(fp)
1010dd4c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
1010dd50:	e0bffa17 	ldw	r2,-24(fp)
1010dd54:	10bfffc4 	addi	r2,r2,-1
1010dd58:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
1010dd5c:	e0bffa17 	ldw	r2,-24(fp)
1010dd60:	10000526 	beq	r2,zero,1010dd78 <altera_avalon_jtag_uart_irq+0x1a8>
1010dd64:	e0bffb17 	ldw	r2,-20(fp)
1010dd68:	10c00d17 	ldw	r3,52(r2)
1010dd6c:	e0bffb17 	ldw	r2,-20(fp)
1010dd70:	10800c17 	ldw	r2,48(r2)
1010dd74:	18bfe51e 	bne	r3,r2,1010dd0c <__alt_data_end+0xfffedd0c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1010dd78:	e0bffa17 	ldw	r2,-24(fp)
1010dd7c:	103f9d26 	beq	r2,zero,1010dbf4 <__alt_data_end+0xfffedbf4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010dd80:	e0bffb17 	ldw	r2,-20(fp)
1010dd84:	10c00817 	ldw	r3,32(r2)
1010dd88:	00bfff44 	movi	r2,-3
1010dd8c:	1886703a 	and	r3,r3,r2
1010dd90:	e0bffb17 	ldw	r2,-20(fp)
1010dd94:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010dd98:	e0bffb17 	ldw	r2,-20(fp)
1010dd9c:	10800017 	ldw	r2,0(r2)
1010dda0:	10800104 	addi	r2,r2,4
1010dda4:	1007883a 	mov	r3,r2
1010dda8:	e0bffb17 	ldw	r2,-20(fp)
1010ddac:	10800817 	ldw	r2,32(r2)
1010ddb0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010ddb4:	e0bffc17 	ldw	r2,-16(fp)
1010ddb8:	10800104 	addi	r2,r2,4
1010ddbc:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
1010ddc0:	003f8c06 	br	1010dbf4 <__alt_data_end+0xfffedbf4>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
1010ddc4:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
1010ddc8:	0001883a 	nop
1010ddcc:	e037883a 	mov	sp,fp
1010ddd0:	df000017 	ldw	fp,0(sp)
1010ddd4:	dec00104 	addi	sp,sp,4
1010ddd8:	f800283a 	ret

1010dddc <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
1010dddc:	defff804 	addi	sp,sp,-32
1010dde0:	df000715 	stw	fp,28(sp)
1010dde4:	df000704 	addi	fp,sp,28
1010dde8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
1010ddec:	e0bffb17 	ldw	r2,-20(fp)
1010ddf0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
1010ddf4:	e0bff917 	ldw	r2,-28(fp)
1010ddf8:	10800017 	ldw	r2,0(r2)
1010ddfc:	10800104 	addi	r2,r2,4
1010de00:	10800037 	ldwio	r2,0(r2)
1010de04:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
1010de08:	e0bffa17 	ldw	r2,-24(fp)
1010de0c:	1081000c 	andi	r2,r2,1024
1010de10:	10000b26 	beq	r2,zero,1010de40 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
1010de14:	e0bff917 	ldw	r2,-28(fp)
1010de18:	10800017 	ldw	r2,0(r2)
1010de1c:	10800104 	addi	r2,r2,4
1010de20:	1007883a 	mov	r3,r2
1010de24:	e0bff917 	ldw	r2,-28(fp)
1010de28:	10800817 	ldw	r2,32(r2)
1010de2c:	10810014 	ori	r2,r2,1024
1010de30:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
1010de34:	e0bff917 	ldw	r2,-28(fp)
1010de38:	10000915 	stw	zero,36(r2)
1010de3c:	00000a06 	br	1010de68 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
1010de40:	e0bff917 	ldw	r2,-28(fp)
1010de44:	10c00917 	ldw	r3,36(r2)
1010de48:	00a00034 	movhi	r2,32768
1010de4c:	10bfff04 	addi	r2,r2,-4
1010de50:	10c00536 	bltu	r2,r3,1010de68 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
1010de54:	e0bff917 	ldw	r2,-28(fp)
1010de58:	10800917 	ldw	r2,36(r2)
1010de5c:	10c00044 	addi	r3,r2,1
1010de60:	e0bff917 	ldw	r2,-28(fp)
1010de64:	10c00915 	stw	r3,36(r2)
1010de68:	00840474 	movhi	r2,4113
1010de6c:	108c0004 	addi	r2,r2,12288
1010de70:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
1010de74:	e037883a 	mov	sp,fp
1010de78:	df000017 	ldw	fp,0(sp)
1010de7c:	dec00104 	addi	sp,sp,4
1010de80:	f800283a 	ret

1010de84 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
1010de84:	defffd04 	addi	sp,sp,-12
1010de88:	df000215 	stw	fp,8(sp)
1010de8c:	df000204 	addi	fp,sp,8
1010de90:	e13ffe15 	stw	r4,-8(fp)
1010de94:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010de98:	00000506 	br	1010deb0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
1010de9c:	e0bfff17 	ldw	r2,-4(fp)
1010dea0:	1090000c 	andi	r2,r2,16384
1010dea4:	10000226 	beq	r2,zero,1010deb0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1010dea8:	00bffd44 	movi	r2,-11
1010deac:	00000b06 	br	1010dedc <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010deb0:	e0bffe17 	ldw	r2,-8(fp)
1010deb4:	10c00d17 	ldw	r3,52(r2)
1010deb8:	e0bffe17 	ldw	r2,-8(fp)
1010debc:	10800c17 	ldw	r2,48(r2)
1010dec0:	18800526 	beq	r3,r2,1010ded8 <altera_avalon_jtag_uart_close+0x54>
1010dec4:	e0bffe17 	ldw	r2,-8(fp)
1010dec8:	10c00917 	ldw	r3,36(r2)
1010decc:	e0bffe17 	ldw	r2,-8(fp)
1010ded0:	10800117 	ldw	r2,4(r2)
1010ded4:	18bff136 	bltu	r3,r2,1010de9c <__alt_data_end+0xfffede9c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
1010ded8:	0005883a 	mov	r2,zero
}
1010dedc:	e037883a 	mov	sp,fp
1010dee0:	df000017 	ldw	fp,0(sp)
1010dee4:	dec00104 	addi	sp,sp,4
1010dee8:	f800283a 	ret

1010deec <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
1010deec:	defffa04 	addi	sp,sp,-24
1010def0:	df000515 	stw	fp,20(sp)
1010def4:	df000504 	addi	fp,sp,20
1010def8:	e13ffd15 	stw	r4,-12(fp)
1010defc:	e17ffe15 	stw	r5,-8(fp)
1010df00:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
1010df04:	00bff9c4 	movi	r2,-25
1010df08:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
1010df0c:	e0bffe17 	ldw	r2,-8(fp)
1010df10:	10da8060 	cmpeqi	r3,r2,27137
1010df14:	1800031e 	bne	r3,zero,1010df24 <altera_avalon_jtag_uart_ioctl+0x38>
1010df18:	109a80a0 	cmpeqi	r2,r2,27138
1010df1c:	1000181e 	bne	r2,zero,1010df80 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
1010df20:	00002906 	br	1010dfc8 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
1010df24:	e0bffd17 	ldw	r2,-12(fp)
1010df28:	10c00117 	ldw	r3,4(r2)
1010df2c:	00a00034 	movhi	r2,32768
1010df30:	10bfffc4 	addi	r2,r2,-1
1010df34:	18802126 	beq	r3,r2,1010dfbc <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
1010df38:	e0bfff17 	ldw	r2,-4(fp)
1010df3c:	10800017 	ldw	r2,0(r2)
1010df40:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
1010df44:	e0bffc17 	ldw	r2,-16(fp)
1010df48:	10800090 	cmplti	r2,r2,2
1010df4c:	1000061e 	bne	r2,zero,1010df68 <altera_avalon_jtag_uart_ioctl+0x7c>
1010df50:	e0fffc17 	ldw	r3,-16(fp)
1010df54:	00a00034 	movhi	r2,32768
1010df58:	10bfffc4 	addi	r2,r2,-1
1010df5c:	18800226 	beq	r3,r2,1010df68 <altera_avalon_jtag_uart_ioctl+0x7c>
1010df60:	e0bffc17 	ldw	r2,-16(fp)
1010df64:	00000206 	br	1010df70 <altera_avalon_jtag_uart_ioctl+0x84>
1010df68:	00a00034 	movhi	r2,32768
1010df6c:	10bfff84 	addi	r2,r2,-2
1010df70:	e0fffd17 	ldw	r3,-12(fp)
1010df74:	18800115 	stw	r2,4(r3)
      rc = 0;
1010df78:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010df7c:	00000f06 	br	1010dfbc <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1010df80:	e0bffd17 	ldw	r2,-12(fp)
1010df84:	10c00117 	ldw	r3,4(r2)
1010df88:	00a00034 	movhi	r2,32768
1010df8c:	10bfffc4 	addi	r2,r2,-1
1010df90:	18800c26 	beq	r3,r2,1010dfc4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
1010df94:	e0bffd17 	ldw	r2,-12(fp)
1010df98:	10c00917 	ldw	r3,36(r2)
1010df9c:	e0bffd17 	ldw	r2,-12(fp)
1010dfa0:	10800117 	ldw	r2,4(r2)
1010dfa4:	1885803a 	cmpltu	r2,r3,r2
1010dfa8:	10c03fcc 	andi	r3,r2,255
1010dfac:	e0bfff17 	ldw	r2,-4(fp)
1010dfb0:	10c00015 	stw	r3,0(r2)
      rc = 0;
1010dfb4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010dfb8:	00000206 	br	1010dfc4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
1010dfbc:	0001883a 	nop
1010dfc0:	00000106 	br	1010dfc8 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
1010dfc4:	0001883a 	nop

  default:
    break;
  }

  return rc;
1010dfc8:	e0bffb17 	ldw	r2,-20(fp)
}
1010dfcc:	e037883a 	mov	sp,fp
1010dfd0:	df000017 	ldw	fp,0(sp)
1010dfd4:	dec00104 	addi	sp,sp,4
1010dfd8:	f800283a 	ret

1010dfdc <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
1010dfdc:	defff304 	addi	sp,sp,-52
1010dfe0:	dfc00c15 	stw	ra,48(sp)
1010dfe4:	df000b15 	stw	fp,44(sp)
1010dfe8:	df000b04 	addi	fp,sp,44
1010dfec:	e13ffc15 	stw	r4,-16(fp)
1010dff0:	e17ffd15 	stw	r5,-12(fp)
1010dff4:	e1bffe15 	stw	r6,-8(fp)
1010dff8:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
1010dffc:	e0bffd17 	ldw	r2,-12(fp)
1010e000:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010e004:	00004706 	br	1010e124 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
1010e008:	e0bffc17 	ldw	r2,-16(fp)
1010e00c:	10800a17 	ldw	r2,40(r2)
1010e010:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
1010e014:	e0bffc17 	ldw	r2,-16(fp)
1010e018:	10800b17 	ldw	r2,44(r2)
1010e01c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
1010e020:	e0fff717 	ldw	r3,-36(fp)
1010e024:	e0bff817 	ldw	r2,-32(fp)
1010e028:	18800536 	bltu	r3,r2,1010e040 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
1010e02c:	e0fff717 	ldw	r3,-36(fp)
1010e030:	e0bff817 	ldw	r2,-32(fp)
1010e034:	1885c83a 	sub	r2,r3,r2
1010e038:	e0bff615 	stw	r2,-40(fp)
1010e03c:	00000406 	br	1010e050 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
1010e040:	00c20004 	movi	r3,2048
1010e044:	e0bff817 	ldw	r2,-32(fp)
1010e048:	1885c83a 	sub	r2,r3,r2
1010e04c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010e050:	e0bff617 	ldw	r2,-40(fp)
1010e054:	10001e26 	beq	r2,zero,1010e0d0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
1010e058:	e0fffe17 	ldw	r3,-8(fp)
1010e05c:	e0bff617 	ldw	r2,-40(fp)
1010e060:	1880022e 	bgeu	r3,r2,1010e06c <altera_avalon_jtag_uart_read+0x90>
        n = space;
1010e064:	e0bffe17 	ldw	r2,-8(fp)
1010e068:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
1010e06c:	e0bffc17 	ldw	r2,-16(fp)
1010e070:	10c00e04 	addi	r3,r2,56
1010e074:	e0bff817 	ldw	r2,-32(fp)
1010e078:	1885883a 	add	r2,r3,r2
1010e07c:	e1bff617 	ldw	r6,-40(fp)
1010e080:	100b883a 	mov	r5,r2
1010e084:	e13ff517 	ldw	r4,-44(fp)
1010e088:	0105b880 	call	10105b88 <memcpy>
      ptr   += n;
1010e08c:	e0fff517 	ldw	r3,-44(fp)
1010e090:	e0bff617 	ldw	r2,-40(fp)
1010e094:	1885883a 	add	r2,r3,r2
1010e098:	e0bff515 	stw	r2,-44(fp)
      space -= n;
1010e09c:	e0fffe17 	ldw	r3,-8(fp)
1010e0a0:	e0bff617 	ldw	r2,-40(fp)
1010e0a4:	1885c83a 	sub	r2,r3,r2
1010e0a8:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e0ac:	e0fff817 	ldw	r3,-32(fp)
1010e0b0:	e0bff617 	ldw	r2,-40(fp)
1010e0b4:	1885883a 	add	r2,r3,r2
1010e0b8:	10c1ffcc 	andi	r3,r2,2047
1010e0bc:	e0bffc17 	ldw	r2,-16(fp)
1010e0c0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
1010e0c4:	e0bffe17 	ldw	r2,-8(fp)
1010e0c8:	00bfcf16 	blt	zero,r2,1010e008 <__alt_data_end+0xfffee008>
1010e0cc:	00000106 	br	1010e0d4 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
1010e0d0:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
1010e0d4:	e0fff517 	ldw	r3,-44(fp)
1010e0d8:	e0bffd17 	ldw	r2,-12(fp)
1010e0dc:	1880141e 	bne	r3,r2,1010e130 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
1010e0e0:	e0bfff17 	ldw	r2,-4(fp)
1010e0e4:	1090000c 	andi	r2,r2,16384
1010e0e8:	1000131e 	bne	r2,zero,1010e138 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
1010e0ec:	0001883a 	nop
1010e0f0:	e0bffc17 	ldw	r2,-16(fp)
1010e0f4:	10c00a17 	ldw	r3,40(r2)
1010e0f8:	e0bff717 	ldw	r2,-36(fp)
1010e0fc:	1880051e 	bne	r3,r2,1010e114 <altera_avalon_jtag_uart_read+0x138>
1010e100:	e0bffc17 	ldw	r2,-16(fp)
1010e104:	10c00917 	ldw	r3,36(r2)
1010e108:	e0bffc17 	ldw	r2,-16(fp)
1010e10c:	10800117 	ldw	r2,4(r2)
1010e110:	18bff736 	bltu	r3,r2,1010e0f0 <__alt_data_end+0xfffee0f0>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
1010e114:	e0bffc17 	ldw	r2,-16(fp)
1010e118:	10c00a17 	ldw	r3,40(r2)
1010e11c:	e0bff717 	ldw	r2,-36(fp)
1010e120:	18800726 	beq	r3,r2,1010e140 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010e124:	e0bffe17 	ldw	r2,-8(fp)
1010e128:	00bfb716 	blt	zero,r2,1010e008 <__alt_data_end+0xfffee008>
1010e12c:	00000506 	br	1010e144 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
1010e130:	0001883a 	nop
1010e134:	00000306 	br	1010e144 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
1010e138:	0001883a 	nop
1010e13c:	00000106 	br	1010e144 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
1010e140:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
1010e144:	e0fff517 	ldw	r3,-44(fp)
1010e148:	e0bffd17 	ldw	r2,-12(fp)
1010e14c:	18801826 	beq	r3,r2,1010e1b0 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e150:	0005303a 	rdctl	r2,status
1010e154:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e158:	e0fffb17 	ldw	r3,-20(fp)
1010e15c:	00bfff84 	movi	r2,-2
1010e160:	1884703a 	and	r2,r3,r2
1010e164:	1001703a 	wrctl	status,r2
  
  return context;
1010e168:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
1010e16c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e170:	e0bffc17 	ldw	r2,-16(fp)
1010e174:	10800817 	ldw	r2,32(r2)
1010e178:	10c00054 	ori	r3,r2,1
1010e17c:	e0bffc17 	ldw	r2,-16(fp)
1010e180:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010e184:	e0bffc17 	ldw	r2,-16(fp)
1010e188:	10800017 	ldw	r2,0(r2)
1010e18c:	10800104 	addi	r2,r2,4
1010e190:	1007883a 	mov	r3,r2
1010e194:	e0bffc17 	ldw	r2,-16(fp)
1010e198:	10800817 	ldw	r2,32(r2)
1010e19c:	18800035 	stwio	r2,0(r3)
1010e1a0:	e0bffa17 	ldw	r2,-24(fp)
1010e1a4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e1a8:	e0bff917 	ldw	r2,-28(fp)
1010e1ac:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
1010e1b0:	e0fff517 	ldw	r3,-44(fp)
1010e1b4:	e0bffd17 	ldw	r2,-12(fp)
1010e1b8:	18800426 	beq	r3,r2,1010e1cc <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
1010e1bc:	e0fff517 	ldw	r3,-44(fp)
1010e1c0:	e0bffd17 	ldw	r2,-12(fp)
1010e1c4:	1885c83a 	sub	r2,r3,r2
1010e1c8:	00000606 	br	1010e1e4 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
1010e1cc:	e0bfff17 	ldw	r2,-4(fp)
1010e1d0:	1090000c 	andi	r2,r2,16384
1010e1d4:	10000226 	beq	r2,zero,1010e1e0 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
1010e1d8:	00bffd44 	movi	r2,-11
1010e1dc:	00000106 	br	1010e1e4 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
1010e1e0:	00bffec4 	movi	r2,-5
}
1010e1e4:	e037883a 	mov	sp,fp
1010e1e8:	dfc00117 	ldw	ra,4(sp)
1010e1ec:	df000017 	ldw	fp,0(sp)
1010e1f0:	dec00204 	addi	sp,sp,8
1010e1f4:	f800283a 	ret

1010e1f8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
1010e1f8:	defff304 	addi	sp,sp,-52
1010e1fc:	dfc00c15 	stw	ra,48(sp)
1010e200:	df000b15 	stw	fp,44(sp)
1010e204:	df000b04 	addi	fp,sp,44
1010e208:	e13ffc15 	stw	r4,-16(fp)
1010e20c:	e17ffd15 	stw	r5,-12(fp)
1010e210:	e1bffe15 	stw	r6,-8(fp)
1010e214:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
1010e218:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
1010e21c:	e0bffd17 	ldw	r2,-12(fp)
1010e220:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010e224:	00003706 	br	1010e304 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
1010e228:	e0bffc17 	ldw	r2,-16(fp)
1010e22c:	10800c17 	ldw	r2,48(r2)
1010e230:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
1010e234:	e0bffc17 	ldw	r2,-16(fp)
1010e238:	10800d17 	ldw	r2,52(r2)
1010e23c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
1010e240:	e0fff917 	ldw	r3,-28(fp)
1010e244:	e0bff517 	ldw	r2,-44(fp)
1010e248:	1880062e 	bgeu	r3,r2,1010e264 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
1010e24c:	e0fff517 	ldw	r3,-44(fp)
1010e250:	e0bff917 	ldw	r2,-28(fp)
1010e254:	1885c83a 	sub	r2,r3,r2
1010e258:	10bfffc4 	addi	r2,r2,-1
1010e25c:	e0bff615 	stw	r2,-40(fp)
1010e260:	00000b06 	br	1010e290 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1010e264:	e0bff517 	ldw	r2,-44(fp)
1010e268:	10000526 	beq	r2,zero,1010e280 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
1010e26c:	00c20004 	movi	r3,2048
1010e270:	e0bff917 	ldw	r2,-28(fp)
1010e274:	1885c83a 	sub	r2,r3,r2
1010e278:	e0bff615 	stw	r2,-40(fp)
1010e27c:	00000406 	br	1010e290 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
1010e280:	00c1ffc4 	movi	r3,2047
1010e284:	e0bff917 	ldw	r2,-28(fp)
1010e288:	1885c83a 	sub	r2,r3,r2
1010e28c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010e290:	e0bff617 	ldw	r2,-40(fp)
1010e294:	10001e26 	beq	r2,zero,1010e310 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
1010e298:	e0fffe17 	ldw	r3,-8(fp)
1010e29c:	e0bff617 	ldw	r2,-40(fp)
1010e2a0:	1880022e 	bgeu	r3,r2,1010e2ac <altera_avalon_jtag_uart_write+0xb4>
        n = count;
1010e2a4:	e0bffe17 	ldw	r2,-8(fp)
1010e2a8:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
1010e2ac:	e0bffc17 	ldw	r2,-16(fp)
1010e2b0:	10c20e04 	addi	r3,r2,2104
1010e2b4:	e0bff917 	ldw	r2,-28(fp)
1010e2b8:	1885883a 	add	r2,r3,r2
1010e2bc:	e1bff617 	ldw	r6,-40(fp)
1010e2c0:	e17ffd17 	ldw	r5,-12(fp)
1010e2c4:	1009883a 	mov	r4,r2
1010e2c8:	0105b880 	call	10105b88 <memcpy>
      ptr   += n;
1010e2cc:	e0fffd17 	ldw	r3,-12(fp)
1010e2d0:	e0bff617 	ldw	r2,-40(fp)
1010e2d4:	1885883a 	add	r2,r3,r2
1010e2d8:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
1010e2dc:	e0fffe17 	ldw	r3,-8(fp)
1010e2e0:	e0bff617 	ldw	r2,-40(fp)
1010e2e4:	1885c83a 	sub	r2,r3,r2
1010e2e8:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e2ec:	e0fff917 	ldw	r3,-28(fp)
1010e2f0:	e0bff617 	ldw	r2,-40(fp)
1010e2f4:	1885883a 	add	r2,r3,r2
1010e2f8:	10c1ffcc 	andi	r3,r2,2047
1010e2fc:	e0bffc17 	ldw	r2,-16(fp)
1010e300:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010e304:	e0bffe17 	ldw	r2,-8(fp)
1010e308:	00bfc716 	blt	zero,r2,1010e228 <__alt_data_end+0xfffee228>
1010e30c:	00000106 	br	1010e314 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
1010e310:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e314:	0005303a 	rdctl	r2,status
1010e318:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e31c:	e0fffb17 	ldw	r3,-20(fp)
1010e320:	00bfff84 	movi	r2,-2
1010e324:	1884703a 	and	r2,r3,r2
1010e328:	1001703a 	wrctl	status,r2
  
  return context;
1010e32c:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
1010e330:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010e334:	e0bffc17 	ldw	r2,-16(fp)
1010e338:	10800817 	ldw	r2,32(r2)
1010e33c:	10c00094 	ori	r3,r2,2
1010e340:	e0bffc17 	ldw	r2,-16(fp)
1010e344:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010e348:	e0bffc17 	ldw	r2,-16(fp)
1010e34c:	10800017 	ldw	r2,0(r2)
1010e350:	10800104 	addi	r2,r2,4
1010e354:	1007883a 	mov	r3,r2
1010e358:	e0bffc17 	ldw	r2,-16(fp)
1010e35c:	10800817 	ldw	r2,32(r2)
1010e360:	18800035 	stwio	r2,0(r3)
1010e364:	e0bffa17 	ldw	r2,-24(fp)
1010e368:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e36c:	e0bff817 	ldw	r2,-32(fp)
1010e370:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
1010e374:	e0bffe17 	ldw	r2,-8(fp)
1010e378:	0080100e 	bge	zero,r2,1010e3bc <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
1010e37c:	e0bfff17 	ldw	r2,-4(fp)
1010e380:	1090000c 	andi	r2,r2,16384
1010e384:	1000101e 	bne	r2,zero,1010e3c8 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
1010e388:	0001883a 	nop
1010e38c:	e0bffc17 	ldw	r2,-16(fp)
1010e390:	10c00d17 	ldw	r3,52(r2)
1010e394:	e0bff517 	ldw	r2,-44(fp)
1010e398:	1880051e 	bne	r3,r2,1010e3b0 <altera_avalon_jtag_uart_write+0x1b8>
1010e39c:	e0bffc17 	ldw	r2,-16(fp)
1010e3a0:	10c00917 	ldw	r3,36(r2)
1010e3a4:	e0bffc17 	ldw	r2,-16(fp)
1010e3a8:	10800117 	ldw	r2,4(r2)
1010e3ac:	18bff736 	bltu	r3,r2,1010e38c <__alt_data_end+0xfffee38c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
1010e3b0:	e0bffc17 	ldw	r2,-16(fp)
1010e3b4:	10800917 	ldw	r2,36(r2)
1010e3b8:	1000051e 	bne	r2,zero,1010e3d0 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
1010e3bc:	e0bffe17 	ldw	r2,-8(fp)
1010e3c0:	00bfd016 	blt	zero,r2,1010e304 <__alt_data_end+0xfffee304>
1010e3c4:	00000306 	br	1010e3d4 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
1010e3c8:	0001883a 	nop
1010e3cc:	00000106 	br	1010e3d4 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
1010e3d0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
1010e3d4:	e0fffd17 	ldw	r3,-12(fp)
1010e3d8:	e0bff717 	ldw	r2,-36(fp)
1010e3dc:	18800426 	beq	r3,r2,1010e3f0 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
1010e3e0:	e0fffd17 	ldw	r3,-12(fp)
1010e3e4:	e0bff717 	ldw	r2,-36(fp)
1010e3e8:	1885c83a 	sub	r2,r3,r2
1010e3ec:	00000606 	br	1010e408 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
1010e3f0:	e0bfff17 	ldw	r2,-4(fp)
1010e3f4:	1090000c 	andi	r2,r2,16384
1010e3f8:	10000226 	beq	r2,zero,1010e404 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
1010e3fc:	00bffd44 	movi	r2,-11
1010e400:	00000106 	br	1010e408 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
1010e404:	00bffec4 	movi	r2,-5
}
1010e408:	e037883a 	mov	sp,fp
1010e40c:	dfc00117 	ldw	ra,4(sp)
1010e410:	df000017 	ldw	fp,0(sp)
1010e414:	dec00204 	addi	sp,sp,8
1010e418:	f800283a 	ret

1010e41c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
1010e41c:	defff504 	addi	sp,sp,-44
1010e420:	df000a15 	stw	fp,40(sp)
1010e424:	df000a04 	addi	fp,sp,40
1010e428:	e13ffc15 	stw	r4,-16(fp)
1010e42c:	e17ffd15 	stw	r5,-12(fp)
1010e430:	e1bffe15 	stw	r6,-8(fp)
1010e434:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
1010e438:	e03ff615 	stw	zero,-40(fp)
1010e43c:	00840474 	movhi	r2,4113
1010e440:	108c0004 	addi	r2,r2,12288
1010e444:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
1010e448:	10003f26 	beq	r2,zero,1010e548 <alt_alarm_start+0x12c>
  {
    if (alarm)
1010e44c:	e0bffc17 	ldw	r2,-16(fp)
1010e450:	10003b26 	beq	r2,zero,1010e540 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
1010e454:	e0bffc17 	ldw	r2,-16(fp)
1010e458:	e0fffe17 	ldw	r3,-8(fp)
1010e45c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
1010e460:	e0bffc17 	ldw	r2,-16(fp)
1010e464:	e0ffff17 	ldw	r3,-4(fp)
1010e468:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e46c:	0005303a 	rdctl	r2,status
1010e470:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e474:	e0fff917 	ldw	r3,-28(fp)
1010e478:	00bfff84 	movi	r2,-2
1010e47c:	1884703a 	and	r2,r3,r2
1010e480:	1001703a 	wrctl	status,r2
  
  return context;
1010e484:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
1010e488:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1010e48c:	00840474 	movhi	r2,4113
1010e490:	108c0104 	addi	r2,r2,12292
1010e494:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
1010e498:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
1010e49c:	e0fffd17 	ldw	r3,-12(fp)
1010e4a0:	e0bff617 	ldw	r2,-40(fp)
1010e4a4:	1885883a 	add	r2,r3,r2
1010e4a8:	10c00044 	addi	r3,r2,1
1010e4ac:	e0bffc17 	ldw	r2,-16(fp)
1010e4b0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
1010e4b4:	e0bffc17 	ldw	r2,-16(fp)
1010e4b8:	10c00217 	ldw	r3,8(r2)
1010e4bc:	e0bff617 	ldw	r2,-40(fp)
1010e4c0:	1880042e 	bgeu	r3,r2,1010e4d4 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
1010e4c4:	e0bffc17 	ldw	r2,-16(fp)
1010e4c8:	00c00044 	movi	r3,1
1010e4cc:	10c00405 	stb	r3,16(r2)
1010e4d0:	00000206 	br	1010e4dc <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
1010e4d4:	e0bffc17 	ldw	r2,-16(fp)
1010e4d8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
1010e4dc:	e0fffc17 	ldw	r3,-16(fp)
1010e4e0:	00840474 	movhi	r2,4113
1010e4e4:	10853804 	addi	r2,r2,5344
1010e4e8:	e0bffa15 	stw	r2,-24(fp)
1010e4ec:	e0fffb15 	stw	r3,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010e4f0:	e0bffb17 	ldw	r2,-20(fp)
1010e4f4:	e0fffa17 	ldw	r3,-24(fp)
1010e4f8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010e4fc:	e0bffa17 	ldw	r2,-24(fp)
1010e500:	10c00017 	ldw	r3,0(r2)
1010e504:	e0bffb17 	ldw	r2,-20(fp)
1010e508:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010e50c:	e0bffa17 	ldw	r2,-24(fp)
1010e510:	10800017 	ldw	r2,0(r2)
1010e514:	e0fffb17 	ldw	r3,-20(fp)
1010e518:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010e51c:	e0bffa17 	ldw	r2,-24(fp)
1010e520:	e0fffb17 	ldw	r3,-20(fp)
1010e524:	10c00015 	stw	r3,0(r2)
1010e528:	e0bff817 	ldw	r2,-32(fp)
1010e52c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e530:	e0bff717 	ldw	r2,-36(fp)
1010e534:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1010e538:	0005883a 	mov	r2,zero
1010e53c:	00000306 	br	1010e54c <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
1010e540:	00bffa84 	movi	r2,-22
1010e544:	00000106 	br	1010e54c <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
1010e548:	00bfde84 	movi	r2,-134
  }
}
1010e54c:	e037883a 	mov	sp,fp
1010e550:	df000017 	ldw	fp,0(sp)
1010e554:	dec00104 	addi	sp,sp,4
1010e558:	f800283a 	ret

1010e55c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1010e55c:	defffe04 	addi	sp,sp,-8
1010e560:	df000115 	stw	fp,4(sp)
1010e564:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
1010e568:	e03fff15 	stw	zero,-4(fp)
1010e56c:	00000506 	br	1010e584 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
1010e570:	e0bfff17 	ldw	r2,-4(fp)
1010e574:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
1010e578:	e0bfff17 	ldw	r2,-4(fp)
1010e57c:	10800804 	addi	r2,r2,32
1010e580:	e0bfff15 	stw	r2,-4(fp)
1010e584:	e0bfff17 	ldw	r2,-4(fp)
1010e588:	10820030 	cmpltui	r2,r2,2048
1010e58c:	103ff81e 	bne	r2,zero,1010e570 <__alt_data_end+0xfffee570>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1010e590:	0001883a 	nop
1010e594:	e037883a 	mov	sp,fp
1010e598:	df000017 	ldw	fp,0(sp)
1010e59c:	dec00104 	addi	sp,sp,4
1010e5a0:	f800283a 	ret

1010e5a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010e5a4:	defffe04 	addi	sp,sp,-8
1010e5a8:	dfc00115 	stw	ra,4(sp)
1010e5ac:	df000015 	stw	fp,0(sp)
1010e5b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010e5b4:	00840474 	movhi	r2,4113
1010e5b8:	10853504 	addi	r2,r2,5332
1010e5bc:	10800017 	ldw	r2,0(r2)
1010e5c0:	10000526 	beq	r2,zero,1010e5d8 <alt_get_errno+0x34>
1010e5c4:	00840474 	movhi	r2,4113
1010e5c8:	10853504 	addi	r2,r2,5332
1010e5cc:	10800017 	ldw	r2,0(r2)
1010e5d0:	103ee83a 	callr	r2
1010e5d4:	00000206 	br	1010e5e0 <alt_get_errno+0x3c>
1010e5d8:	00840474 	movhi	r2,4113
1010e5dc:	108bfb04 	addi	r2,r2,12268
}
1010e5e0:	e037883a 	mov	sp,fp
1010e5e4:	dfc00117 	ldw	ra,4(sp)
1010e5e8:	df000017 	ldw	fp,0(sp)
1010e5ec:	dec00204 	addi	sp,sp,8
1010e5f0:	f800283a 	ret

1010e5f4 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
1010e5f4:	defffa04 	addi	sp,sp,-24
1010e5f8:	dfc00515 	stw	ra,20(sp)
1010e5fc:	df000415 	stw	fp,16(sp)
1010e600:	df000404 	addi	fp,sp,16
1010e604:	e13ffe15 	stw	r4,-8(fp)
1010e608:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
1010e60c:	e0bffe17 	ldw	r2,-8(fp)
1010e610:	10000326 	beq	r2,zero,1010e620 <alt_dev_llist_insert+0x2c>
1010e614:	e0bffe17 	ldw	r2,-8(fp)
1010e618:	10800217 	ldw	r2,8(r2)
1010e61c:	1000061e 	bne	r2,zero,1010e638 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
1010e620:	010e5a40 	call	1010e5a4 <alt_get_errno>
1010e624:	1007883a 	mov	r3,r2
1010e628:	00800584 	movi	r2,22
1010e62c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
1010e630:	00bffa84 	movi	r2,-22
1010e634:	00001306 	br	1010e684 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
1010e638:	e0bffe17 	ldw	r2,-8(fp)
1010e63c:	e0ffff17 	ldw	r3,-4(fp)
1010e640:	e0fffc15 	stw	r3,-16(fp)
1010e644:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010e648:	e0bffd17 	ldw	r2,-12(fp)
1010e64c:	e0fffc17 	ldw	r3,-16(fp)
1010e650:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010e654:	e0bffc17 	ldw	r2,-16(fp)
1010e658:	10c00017 	ldw	r3,0(r2)
1010e65c:	e0bffd17 	ldw	r2,-12(fp)
1010e660:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010e664:	e0bffc17 	ldw	r2,-16(fp)
1010e668:	10800017 	ldw	r2,0(r2)
1010e66c:	e0fffd17 	ldw	r3,-12(fp)
1010e670:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010e674:	e0bffc17 	ldw	r2,-16(fp)
1010e678:	e0fffd17 	ldw	r3,-12(fp)
1010e67c:	10c00015 	stw	r3,0(r2)

  return 0;  
1010e680:	0005883a 	mov	r2,zero
}
1010e684:	e037883a 	mov	sp,fp
1010e688:	dfc00117 	ldw	ra,4(sp)
1010e68c:	df000017 	ldw	fp,0(sp)
1010e690:	dec00204 	addi	sp,sp,8
1010e694:	f800283a 	ret

1010e698 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1010e698:	defffd04 	addi	sp,sp,-12
1010e69c:	dfc00215 	stw	ra,8(sp)
1010e6a0:	df000115 	stw	fp,4(sp)
1010e6a4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010e6a8:	00840474 	movhi	r2,4113
1010e6ac:	10bdbb04 	addi	r2,r2,-2324
1010e6b0:	e0bfff15 	stw	r2,-4(fp)
1010e6b4:	00000606 	br	1010e6d0 <_do_ctors+0x38>
        (*ctor) (); 
1010e6b8:	e0bfff17 	ldw	r2,-4(fp)
1010e6bc:	10800017 	ldw	r2,0(r2)
1010e6c0:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010e6c4:	e0bfff17 	ldw	r2,-4(fp)
1010e6c8:	10bfff04 	addi	r2,r2,-4
1010e6cc:	e0bfff15 	stw	r2,-4(fp)
1010e6d0:	e0ffff17 	ldw	r3,-4(fp)
1010e6d4:	00840474 	movhi	r2,4113
1010e6d8:	10bdbc04 	addi	r2,r2,-2320
1010e6dc:	18bff62e 	bgeu	r3,r2,1010e6b8 <__alt_data_end+0xfffee6b8>
        (*ctor) (); 
}
1010e6e0:	0001883a 	nop
1010e6e4:	e037883a 	mov	sp,fp
1010e6e8:	dfc00117 	ldw	ra,4(sp)
1010e6ec:	df000017 	ldw	fp,0(sp)
1010e6f0:	dec00204 	addi	sp,sp,8
1010e6f4:	f800283a 	ret

1010e6f8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1010e6f8:	defffd04 	addi	sp,sp,-12
1010e6fc:	dfc00215 	stw	ra,8(sp)
1010e700:	df000115 	stw	fp,4(sp)
1010e704:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010e708:	00840474 	movhi	r2,4113
1010e70c:	10bdbb04 	addi	r2,r2,-2324
1010e710:	e0bfff15 	stw	r2,-4(fp)
1010e714:	00000606 	br	1010e730 <_do_dtors+0x38>
        (*dtor) (); 
1010e718:	e0bfff17 	ldw	r2,-4(fp)
1010e71c:	10800017 	ldw	r2,0(r2)
1010e720:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010e724:	e0bfff17 	ldw	r2,-4(fp)
1010e728:	10bfff04 	addi	r2,r2,-4
1010e72c:	e0bfff15 	stw	r2,-4(fp)
1010e730:	e0ffff17 	ldw	r3,-4(fp)
1010e734:	00840474 	movhi	r2,4113
1010e738:	10bdbc04 	addi	r2,r2,-2320
1010e73c:	18bff62e 	bgeu	r3,r2,1010e718 <__alt_data_end+0xfffee718>
        (*dtor) (); 
}
1010e740:	0001883a 	nop
1010e744:	e037883a 	mov	sp,fp
1010e748:	dfc00117 	ldw	ra,4(sp)
1010e74c:	df000017 	ldw	fp,0(sp)
1010e750:	dec00204 	addi	sp,sp,8
1010e754:	f800283a 	ret

1010e758 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1010e758:	defffe04 	addi	sp,sp,-8
1010e75c:	dfc00115 	stw	ra,4(sp)
1010e760:	df000015 	stw	fp,0(sp)
1010e764:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
1010e768:	01440004 	movi	r5,4096
1010e76c:	0009883a 	mov	r4,zero
1010e770:	010f2300 	call	1010f230 <alt_icache_flush>
#endif
}
1010e774:	0001883a 	nop
1010e778:	e037883a 	mov	sp,fp
1010e77c:	dfc00117 	ldw	ra,4(sp)
1010e780:	df000017 	ldw	fp,0(sp)
1010e784:	dec00204 	addi	sp,sp,8
1010e788:	f800283a 	ret

1010e78c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010e78c:	defff904 	addi	sp,sp,-28
1010e790:	dfc00615 	stw	ra,24(sp)
1010e794:	df000515 	stw	fp,20(sp)
1010e798:	df000504 	addi	fp,sp,20
1010e79c:	e13ffc15 	stw	r4,-16(fp)
1010e7a0:	e17ffd15 	stw	r5,-12(fp)
1010e7a4:	e1bffe15 	stw	r6,-8(fp)
1010e7a8:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
1010e7ac:	e0800217 	ldw	r2,8(fp)
1010e7b0:	d8800015 	stw	r2,0(sp)
1010e7b4:	e1ffff17 	ldw	r7,-4(fp)
1010e7b8:	e1bffe17 	ldw	r6,-8(fp)
1010e7bc:	e17ffd17 	ldw	r5,-12(fp)
1010e7c0:	e13ffc17 	ldw	r4,-16(fp)
1010e7c4:	010e96c0 	call	1010e96c <alt_iic_isr_register>
}  
1010e7c8:	e037883a 	mov	sp,fp
1010e7cc:	dfc00117 	ldw	ra,4(sp)
1010e7d0:	df000017 	ldw	fp,0(sp)
1010e7d4:	dec00204 	addi	sp,sp,8
1010e7d8:	f800283a 	ret

1010e7dc <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
1010e7dc:	defff904 	addi	sp,sp,-28
1010e7e0:	df000615 	stw	fp,24(sp)
1010e7e4:	df000604 	addi	fp,sp,24
1010e7e8:	e13ffe15 	stw	r4,-8(fp)
1010e7ec:	e17fff15 	stw	r5,-4(fp)
1010e7f0:	e0bfff17 	ldw	r2,-4(fp)
1010e7f4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e7f8:	0005303a 	rdctl	r2,status
1010e7fc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e800:	e0fffb17 	ldw	r3,-20(fp)
1010e804:	00bfff84 	movi	r2,-2
1010e808:	1884703a 	and	r2,r3,r2
1010e80c:	1001703a 	wrctl	status,r2
  
  return context;
1010e810:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010e814:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
1010e818:	00c00044 	movi	r3,1
1010e81c:	e0bffa17 	ldw	r2,-24(fp)
1010e820:	1884983a 	sll	r2,r3,r2
1010e824:	1007883a 	mov	r3,r2
1010e828:	00840474 	movhi	r2,4113
1010e82c:	108bff04 	addi	r2,r2,12284
1010e830:	10800017 	ldw	r2,0(r2)
1010e834:	1886b03a 	or	r3,r3,r2
1010e838:	00840474 	movhi	r2,4113
1010e83c:	108bff04 	addi	r2,r2,12284
1010e840:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010e844:	00840474 	movhi	r2,4113
1010e848:	108bff04 	addi	r2,r2,12284
1010e84c:	10800017 	ldw	r2,0(r2)
1010e850:	100170fa 	wrctl	ienable,r2
1010e854:	e0bffc17 	ldw	r2,-16(fp)
1010e858:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e85c:	e0bffd17 	ldw	r2,-12(fp)
1010e860:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010e864:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
1010e868:	0001883a 	nop
}
1010e86c:	e037883a 	mov	sp,fp
1010e870:	df000017 	ldw	fp,0(sp)
1010e874:	dec00104 	addi	sp,sp,4
1010e878:	f800283a 	ret

1010e87c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
1010e87c:	defff904 	addi	sp,sp,-28
1010e880:	df000615 	stw	fp,24(sp)
1010e884:	df000604 	addi	fp,sp,24
1010e888:	e13ffe15 	stw	r4,-8(fp)
1010e88c:	e17fff15 	stw	r5,-4(fp)
1010e890:	e0bfff17 	ldw	r2,-4(fp)
1010e894:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e898:	0005303a 	rdctl	r2,status
1010e89c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e8a0:	e0fffb17 	ldw	r3,-20(fp)
1010e8a4:	00bfff84 	movi	r2,-2
1010e8a8:	1884703a 	and	r2,r3,r2
1010e8ac:	1001703a 	wrctl	status,r2
  
  return context;
1010e8b0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010e8b4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
1010e8b8:	00c00044 	movi	r3,1
1010e8bc:	e0bffa17 	ldw	r2,-24(fp)
1010e8c0:	1884983a 	sll	r2,r3,r2
1010e8c4:	0084303a 	nor	r2,zero,r2
1010e8c8:	1007883a 	mov	r3,r2
1010e8cc:	00840474 	movhi	r2,4113
1010e8d0:	108bff04 	addi	r2,r2,12284
1010e8d4:	10800017 	ldw	r2,0(r2)
1010e8d8:	1886703a 	and	r3,r3,r2
1010e8dc:	00840474 	movhi	r2,4113
1010e8e0:	108bff04 	addi	r2,r2,12284
1010e8e4:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010e8e8:	00840474 	movhi	r2,4113
1010e8ec:	108bff04 	addi	r2,r2,12284
1010e8f0:	10800017 	ldw	r2,0(r2)
1010e8f4:	100170fa 	wrctl	ienable,r2
1010e8f8:	e0bffc17 	ldw	r2,-16(fp)
1010e8fc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e900:	e0bffd17 	ldw	r2,-12(fp)
1010e904:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010e908:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
1010e90c:	0001883a 	nop
}
1010e910:	e037883a 	mov	sp,fp
1010e914:	df000017 	ldw	fp,0(sp)
1010e918:	dec00104 	addi	sp,sp,4
1010e91c:	f800283a 	ret

1010e920 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
1010e920:	defffc04 	addi	sp,sp,-16
1010e924:	df000315 	stw	fp,12(sp)
1010e928:	df000304 	addi	fp,sp,12
1010e92c:	e13ffe15 	stw	r4,-8(fp)
1010e930:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
1010e934:	000530fa 	rdctl	r2,ienable
1010e938:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1010e93c:	00c00044 	movi	r3,1
1010e940:	e0bfff17 	ldw	r2,-4(fp)
1010e944:	1884983a 	sll	r2,r3,r2
1010e948:	1007883a 	mov	r3,r2
1010e94c:	e0bffd17 	ldw	r2,-12(fp)
1010e950:	1884703a 	and	r2,r3,r2
1010e954:	1004c03a 	cmpne	r2,r2,zero
1010e958:	10803fcc 	andi	r2,r2,255
}
1010e95c:	e037883a 	mov	sp,fp
1010e960:	df000017 	ldw	fp,0(sp)
1010e964:	dec00104 	addi	sp,sp,4
1010e968:	f800283a 	ret

1010e96c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010e96c:	defff504 	addi	sp,sp,-44
1010e970:	dfc00a15 	stw	ra,40(sp)
1010e974:	df000915 	stw	fp,36(sp)
1010e978:	df000904 	addi	fp,sp,36
1010e97c:	e13ffc15 	stw	r4,-16(fp)
1010e980:	e17ffd15 	stw	r5,-12(fp)
1010e984:	e1bffe15 	stw	r6,-8(fp)
1010e988:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
1010e98c:	00bffa84 	movi	r2,-22
1010e990:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
1010e994:	e0bffd17 	ldw	r2,-12(fp)
1010e998:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
1010e99c:	e0bff817 	ldw	r2,-32(fp)
1010e9a0:	10800808 	cmpgei	r2,r2,32
1010e9a4:	1000271e 	bne	r2,zero,1010ea44 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e9a8:	0005303a 	rdctl	r2,status
1010e9ac:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e9b0:	e0fffb17 	ldw	r3,-20(fp)
1010e9b4:	00bfff84 	movi	r2,-2
1010e9b8:	1884703a 	and	r2,r3,r2
1010e9bc:	1001703a 	wrctl	status,r2
  
  return context;
1010e9c0:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
1010e9c4:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
1010e9c8:	00840474 	movhi	r2,4113
1010e9cc:	108c0d04 	addi	r2,r2,12340
1010e9d0:	e0fff817 	ldw	r3,-32(fp)
1010e9d4:	180690fa 	slli	r3,r3,3
1010e9d8:	10c5883a 	add	r2,r2,r3
1010e9dc:	e0fffe17 	ldw	r3,-8(fp)
1010e9e0:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
1010e9e4:	00840474 	movhi	r2,4113
1010e9e8:	108c0d04 	addi	r2,r2,12340
1010e9ec:	e0fff817 	ldw	r3,-32(fp)
1010e9f0:	180690fa 	slli	r3,r3,3
1010e9f4:	10c5883a 	add	r2,r2,r3
1010e9f8:	10800104 	addi	r2,r2,4
1010e9fc:	e0ffff17 	ldw	r3,-4(fp)
1010ea00:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
1010ea04:	e0bffe17 	ldw	r2,-8(fp)
1010ea08:	10000526 	beq	r2,zero,1010ea20 <alt_iic_isr_register+0xb4>
1010ea0c:	e0bff817 	ldw	r2,-32(fp)
1010ea10:	100b883a 	mov	r5,r2
1010ea14:	e13ffc17 	ldw	r4,-16(fp)
1010ea18:	010e7dc0 	call	1010e7dc <alt_ic_irq_enable>
1010ea1c:	00000406 	br	1010ea30 <alt_iic_isr_register+0xc4>
1010ea20:	e0bff817 	ldw	r2,-32(fp)
1010ea24:	100b883a 	mov	r5,r2
1010ea28:	e13ffc17 	ldw	r4,-16(fp)
1010ea2c:	010e87c0 	call	1010e87c <alt_ic_irq_disable>
1010ea30:	e0bff715 	stw	r2,-36(fp)
1010ea34:	e0bffa17 	ldw	r2,-24(fp)
1010ea38:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010ea3c:	e0bff917 	ldw	r2,-28(fp)
1010ea40:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1010ea44:	e0bff717 	ldw	r2,-36(fp)
}
1010ea48:	e037883a 	mov	sp,fp
1010ea4c:	dfc00117 	ldw	ra,4(sp)
1010ea50:	df000017 	ldw	fp,0(sp)
1010ea54:	dec00204 	addi	sp,sp,8
1010ea58:	f800283a 	ret

1010ea5c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
1010ea5c:	defff904 	addi	sp,sp,-28
1010ea60:	dfc00615 	stw	ra,24(sp)
1010ea64:	df000515 	stw	fp,20(sp)
1010ea68:	df000504 	addi	fp,sp,20
1010ea6c:	e13ffc15 	stw	r4,-16(fp)
1010ea70:	e17ffd15 	stw	r5,-12(fp)
1010ea74:	e1bffe15 	stw	r6,-8(fp)
1010ea78:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
1010ea7c:	e1bfff17 	ldw	r6,-4(fp)
1010ea80:	e17ffe17 	ldw	r5,-8(fp)
1010ea84:	e13ffd17 	ldw	r4,-12(fp)
1010ea88:	010ecb80 	call	1010ecb8 <open>
1010ea8c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
1010ea90:	e0bffb17 	ldw	r2,-20(fp)
1010ea94:	10001c16 	blt	r2,zero,1010eb08 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
1010ea98:	00840474 	movhi	r2,4113
1010ea9c:	1080b204 	addi	r2,r2,712
1010eaa0:	e0fffb17 	ldw	r3,-20(fp)
1010eaa4:	18c00324 	muli	r3,r3,12
1010eaa8:	10c5883a 	add	r2,r2,r3
1010eaac:	10c00017 	ldw	r3,0(r2)
1010eab0:	e0bffc17 	ldw	r2,-16(fp)
1010eab4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1010eab8:	00840474 	movhi	r2,4113
1010eabc:	1080b204 	addi	r2,r2,712
1010eac0:	e0fffb17 	ldw	r3,-20(fp)
1010eac4:	18c00324 	muli	r3,r3,12
1010eac8:	10c5883a 	add	r2,r2,r3
1010eacc:	10800104 	addi	r2,r2,4
1010ead0:	10c00017 	ldw	r3,0(r2)
1010ead4:	e0bffc17 	ldw	r2,-16(fp)
1010ead8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
1010eadc:	00840474 	movhi	r2,4113
1010eae0:	1080b204 	addi	r2,r2,712
1010eae4:	e0fffb17 	ldw	r3,-20(fp)
1010eae8:	18c00324 	muli	r3,r3,12
1010eaec:	10c5883a 	add	r2,r2,r3
1010eaf0:	10800204 	addi	r2,r2,8
1010eaf4:	10c00017 	ldw	r3,0(r2)
1010eaf8:	e0bffc17 	ldw	r2,-16(fp)
1010eafc:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
1010eb00:	e13ffb17 	ldw	r4,-20(fp)
1010eb04:	010d6900 	call	1010d690 <alt_release_fd>
  }
} 
1010eb08:	0001883a 	nop
1010eb0c:	e037883a 	mov	sp,fp
1010eb10:	dfc00117 	ldw	ra,4(sp)
1010eb14:	df000017 	ldw	fp,0(sp)
1010eb18:	dec00204 	addi	sp,sp,8
1010eb1c:	f800283a 	ret

1010eb20 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
1010eb20:	defffb04 	addi	sp,sp,-20
1010eb24:	dfc00415 	stw	ra,16(sp)
1010eb28:	df000315 	stw	fp,12(sp)
1010eb2c:	df000304 	addi	fp,sp,12
1010eb30:	e13ffd15 	stw	r4,-12(fp)
1010eb34:	e17ffe15 	stw	r5,-8(fp)
1010eb38:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
1010eb3c:	01c07fc4 	movi	r7,511
1010eb40:	01800044 	movi	r6,1
1010eb44:	e17ffd17 	ldw	r5,-12(fp)
1010eb48:	01040474 	movhi	r4,4113
1010eb4c:	2100b504 	addi	r4,r4,724
1010eb50:	010ea5c0 	call	1010ea5c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1010eb54:	01c07fc4 	movi	r7,511
1010eb58:	000d883a 	mov	r6,zero
1010eb5c:	e17ffe17 	ldw	r5,-8(fp)
1010eb60:	01040474 	movhi	r4,4113
1010eb64:	2100b204 	addi	r4,r4,712
1010eb68:	010ea5c0 	call	1010ea5c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
1010eb6c:	01c07fc4 	movi	r7,511
1010eb70:	01800044 	movi	r6,1
1010eb74:	e17fff17 	ldw	r5,-4(fp)
1010eb78:	01040474 	movhi	r4,4113
1010eb7c:	2100b804 	addi	r4,r4,736
1010eb80:	010ea5c0 	call	1010ea5c <alt_open_fd>
}  
1010eb84:	0001883a 	nop
1010eb88:	e037883a 	mov	sp,fp
1010eb8c:	dfc00117 	ldw	ra,4(sp)
1010eb90:	df000017 	ldw	fp,0(sp)
1010eb94:	dec00204 	addi	sp,sp,8
1010eb98:	f800283a 	ret

1010eb9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010eb9c:	defffe04 	addi	sp,sp,-8
1010eba0:	dfc00115 	stw	ra,4(sp)
1010eba4:	df000015 	stw	fp,0(sp)
1010eba8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010ebac:	00840474 	movhi	r2,4113
1010ebb0:	10853504 	addi	r2,r2,5332
1010ebb4:	10800017 	ldw	r2,0(r2)
1010ebb8:	10000526 	beq	r2,zero,1010ebd0 <alt_get_errno+0x34>
1010ebbc:	00840474 	movhi	r2,4113
1010ebc0:	10853504 	addi	r2,r2,5332
1010ebc4:	10800017 	ldw	r2,0(r2)
1010ebc8:	103ee83a 	callr	r2
1010ebcc:	00000206 	br	1010ebd8 <alt_get_errno+0x3c>
1010ebd0:	00840474 	movhi	r2,4113
1010ebd4:	108bfb04 	addi	r2,r2,12268
}
1010ebd8:	e037883a 	mov	sp,fp
1010ebdc:	dfc00117 	ldw	ra,4(sp)
1010ebe0:	df000017 	ldw	fp,0(sp)
1010ebe4:	dec00204 	addi	sp,sp,8
1010ebe8:	f800283a 	ret

1010ebec <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
1010ebec:	defffd04 	addi	sp,sp,-12
1010ebf0:	df000215 	stw	fp,8(sp)
1010ebf4:	df000204 	addi	fp,sp,8
1010ebf8:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
1010ebfc:	e0bfff17 	ldw	r2,-4(fp)
1010ec00:	10800217 	ldw	r2,8(r2)
1010ec04:	10d00034 	orhi	r3,r2,16384
1010ec08:	e0bfff17 	ldw	r2,-4(fp)
1010ec0c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010ec10:	e03ffe15 	stw	zero,-8(fp)
1010ec14:	00001d06 	br	1010ec8c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010ec18:	00840474 	movhi	r2,4113
1010ec1c:	1080b204 	addi	r2,r2,712
1010ec20:	e0fffe17 	ldw	r3,-8(fp)
1010ec24:	18c00324 	muli	r3,r3,12
1010ec28:	10c5883a 	add	r2,r2,r3
1010ec2c:	10c00017 	ldw	r3,0(r2)
1010ec30:	e0bfff17 	ldw	r2,-4(fp)
1010ec34:	10800017 	ldw	r2,0(r2)
1010ec38:	1880111e 	bne	r3,r2,1010ec80 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010ec3c:	00840474 	movhi	r2,4113
1010ec40:	1080b204 	addi	r2,r2,712
1010ec44:	e0fffe17 	ldw	r3,-8(fp)
1010ec48:	18c00324 	muli	r3,r3,12
1010ec4c:	10c5883a 	add	r2,r2,r3
1010ec50:	10800204 	addi	r2,r2,8
1010ec54:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010ec58:	1000090e 	bge	r2,zero,1010ec80 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
1010ec5c:	e0bffe17 	ldw	r2,-8(fp)
1010ec60:	10c00324 	muli	r3,r2,12
1010ec64:	00840474 	movhi	r2,4113
1010ec68:	1080b204 	addi	r2,r2,712
1010ec6c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010ec70:	e0bfff17 	ldw	r2,-4(fp)
1010ec74:	18800226 	beq	r3,r2,1010ec80 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
1010ec78:	00bffcc4 	movi	r2,-13
1010ec7c:	00000a06 	br	1010eca8 <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010ec80:	e0bffe17 	ldw	r2,-8(fp)
1010ec84:	10800044 	addi	r2,r2,1
1010ec88:	e0bffe15 	stw	r2,-8(fp)
1010ec8c:	00840474 	movhi	r2,4113
1010ec90:	10853404 	addi	r2,r2,5328
1010ec94:	10800017 	ldw	r2,0(r2)
1010ec98:	1007883a 	mov	r3,r2
1010ec9c:	e0bffe17 	ldw	r2,-8(fp)
1010eca0:	18bfdd2e 	bgeu	r3,r2,1010ec18 <__alt_data_end+0xfffeec18>
    }
  }
  
  /* The device is not locked */
 
  return 0;
1010eca4:	0005883a 	mov	r2,zero
}
1010eca8:	e037883a 	mov	sp,fp
1010ecac:	df000017 	ldw	fp,0(sp)
1010ecb0:	dec00104 	addi	sp,sp,4
1010ecb4:	f800283a 	ret

1010ecb8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
1010ecb8:	defff604 	addi	sp,sp,-40
1010ecbc:	dfc00915 	stw	ra,36(sp)
1010ecc0:	df000815 	stw	fp,32(sp)
1010ecc4:	df000804 	addi	fp,sp,32
1010ecc8:	e13ffd15 	stw	r4,-12(fp)
1010eccc:	e17ffe15 	stw	r5,-8(fp)
1010ecd0:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
1010ecd4:	00bfffc4 	movi	r2,-1
1010ecd8:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
1010ecdc:	00bffb44 	movi	r2,-19
1010ece0:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
1010ece4:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
1010ece8:	01440474 	movhi	r5,4113
1010ecec:	29453204 	addi	r5,r5,5320
1010ecf0:	e13ffd17 	ldw	r4,-12(fp)
1010ecf4:	010efd80 	call	1010efd8 <alt_find_dev>
1010ecf8:	e0bff815 	stw	r2,-32(fp)
1010ecfc:	e0bff817 	ldw	r2,-32(fp)
1010ed00:	1000051e 	bne	r2,zero,1010ed18 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1010ed04:	e13ffd17 	ldw	r4,-12(fp)
1010ed08:	010f0680 	call	1010f068 <alt_find_file>
1010ed0c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
1010ed10:	00800044 	movi	r2,1
1010ed14:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
1010ed18:	e0bff817 	ldw	r2,-32(fp)
1010ed1c:	10002926 	beq	r2,zero,1010edc4 <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
1010ed20:	e13ff817 	ldw	r4,-32(fp)
1010ed24:	010f17c0 	call	1010f17c <alt_get_fd>
1010ed28:	e0bff915 	stw	r2,-28(fp)
1010ed2c:	e0bff917 	ldw	r2,-28(fp)
1010ed30:	1000030e 	bge	r2,zero,1010ed40 <open+0x88>
    {
      status = index;
1010ed34:	e0bff917 	ldw	r2,-28(fp)
1010ed38:	e0bffa15 	stw	r2,-24(fp)
1010ed3c:	00002306 	br	1010edcc <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
1010ed40:	e0bff917 	ldw	r2,-28(fp)
1010ed44:	10c00324 	muli	r3,r2,12
1010ed48:	00840474 	movhi	r2,4113
1010ed4c:	1080b204 	addi	r2,r2,712
1010ed50:	1885883a 	add	r2,r3,r2
1010ed54:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
1010ed58:	e0fffe17 	ldw	r3,-8(fp)
1010ed5c:	00900034 	movhi	r2,16384
1010ed60:	10bfffc4 	addi	r2,r2,-1
1010ed64:	1886703a 	and	r3,r3,r2
1010ed68:	e0bffc17 	ldw	r2,-16(fp)
1010ed6c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
1010ed70:	e0bffb17 	ldw	r2,-20(fp)
1010ed74:	1000051e 	bne	r2,zero,1010ed8c <open+0xd4>
1010ed78:	e13ffc17 	ldw	r4,-16(fp)
1010ed7c:	010ebec0 	call	1010ebec <alt_file_locked>
1010ed80:	e0bffa15 	stw	r2,-24(fp)
1010ed84:	e0bffa17 	ldw	r2,-24(fp)
1010ed88:	10001016 	blt	r2,zero,1010edcc <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1010ed8c:	e0bff817 	ldw	r2,-32(fp)
1010ed90:	10800317 	ldw	r2,12(r2)
1010ed94:	10000826 	beq	r2,zero,1010edb8 <open+0x100>
1010ed98:	e0bff817 	ldw	r2,-32(fp)
1010ed9c:	10800317 	ldw	r2,12(r2)
1010eda0:	e1ffff17 	ldw	r7,-4(fp)
1010eda4:	e1bffe17 	ldw	r6,-8(fp)
1010eda8:	e17ffd17 	ldw	r5,-12(fp)
1010edac:	e13ffc17 	ldw	r4,-16(fp)
1010edb0:	103ee83a 	callr	r2
1010edb4:	00000106 	br	1010edbc <open+0x104>
1010edb8:	0005883a 	mov	r2,zero
1010edbc:	e0bffa15 	stw	r2,-24(fp)
1010edc0:	00000206 	br	1010edcc <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
1010edc4:	00bffb44 	movi	r2,-19
1010edc8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
1010edcc:	e0bffa17 	ldw	r2,-24(fp)
1010edd0:	1000090e 	bge	r2,zero,1010edf8 <open+0x140>
  {
    alt_release_fd (index);  
1010edd4:	e13ff917 	ldw	r4,-28(fp)
1010edd8:	010d6900 	call	1010d690 <alt_release_fd>
    ALT_ERRNO = -status;
1010eddc:	010eb9c0 	call	1010eb9c <alt_get_errno>
1010ede0:	1007883a 	mov	r3,r2
1010ede4:	e0bffa17 	ldw	r2,-24(fp)
1010ede8:	0085c83a 	sub	r2,zero,r2
1010edec:	18800015 	stw	r2,0(r3)
    return -1;
1010edf0:	00bfffc4 	movi	r2,-1
1010edf4:	00000106 	br	1010edfc <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
1010edf8:	e0bff917 	ldw	r2,-28(fp)
}
1010edfc:	e037883a 	mov	sp,fp
1010ee00:	dfc00117 	ldw	ra,4(sp)
1010ee04:	df000017 	ldw	fp,0(sp)
1010ee08:	dec00204 	addi	sp,sp,8
1010ee0c:	f800283a 	ret

1010ee10 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
1010ee10:	defffa04 	addi	sp,sp,-24
1010ee14:	df000515 	stw	fp,20(sp)
1010ee18:	df000504 	addi	fp,sp,20
1010ee1c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010ee20:	0005303a 	rdctl	r2,status
1010ee24:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010ee28:	e0fffc17 	ldw	r3,-16(fp)
1010ee2c:	00bfff84 	movi	r2,-2
1010ee30:	1884703a 	and	r2,r3,r2
1010ee34:	1001703a 	wrctl	status,r2
  
  return context;
1010ee38:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1010ee3c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
1010ee40:	e0bfff17 	ldw	r2,-4(fp)
1010ee44:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
1010ee48:	e0bffd17 	ldw	r2,-12(fp)
1010ee4c:	10800017 	ldw	r2,0(r2)
1010ee50:	e0fffd17 	ldw	r3,-12(fp)
1010ee54:	18c00117 	ldw	r3,4(r3)
1010ee58:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1010ee5c:	e0bffd17 	ldw	r2,-12(fp)
1010ee60:	10800117 	ldw	r2,4(r2)
1010ee64:	e0fffd17 	ldw	r3,-12(fp)
1010ee68:	18c00017 	ldw	r3,0(r3)
1010ee6c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
1010ee70:	e0bffd17 	ldw	r2,-12(fp)
1010ee74:	e0fffd17 	ldw	r3,-12(fp)
1010ee78:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1010ee7c:	e0bffd17 	ldw	r2,-12(fp)
1010ee80:	e0fffd17 	ldw	r3,-12(fp)
1010ee84:	10c00015 	stw	r3,0(r2)
1010ee88:	e0bffb17 	ldw	r2,-20(fp)
1010ee8c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010ee90:	e0bffe17 	ldw	r2,-8(fp)
1010ee94:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
1010ee98:	0001883a 	nop
1010ee9c:	e037883a 	mov	sp,fp
1010eea0:	df000017 	ldw	fp,0(sp)
1010eea4:	dec00104 	addi	sp,sp,4
1010eea8:	f800283a 	ret

1010eeac <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1010eeac:	defffb04 	addi	sp,sp,-20
1010eeb0:	dfc00415 	stw	ra,16(sp)
1010eeb4:	df000315 	stw	fp,12(sp)
1010eeb8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1010eebc:	d0a00e17 	ldw	r2,-32712(gp)
1010eec0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1010eec4:	d0a6d717 	ldw	r2,-25764(gp)
1010eec8:	10800044 	addi	r2,r2,1
1010eecc:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010eed0:	00002e06 	br	1010ef8c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1010eed4:	e0bffd17 	ldw	r2,-12(fp)
1010eed8:	10800017 	ldw	r2,0(r2)
1010eedc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
1010eee0:	e0bffd17 	ldw	r2,-12(fp)
1010eee4:	10800403 	ldbu	r2,16(r2)
1010eee8:	10803fcc 	andi	r2,r2,255
1010eeec:	10000426 	beq	r2,zero,1010ef00 <alt_tick+0x54>
1010eef0:	d0a6d717 	ldw	r2,-25764(gp)
1010eef4:	1000021e 	bne	r2,zero,1010ef00 <alt_tick+0x54>
    {
      alarm->rollover = 0;
1010eef8:	e0bffd17 	ldw	r2,-12(fp)
1010eefc:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
1010ef00:	e0bffd17 	ldw	r2,-12(fp)
1010ef04:	10800217 	ldw	r2,8(r2)
1010ef08:	d0e6d717 	ldw	r3,-25764(gp)
1010ef0c:	18801d36 	bltu	r3,r2,1010ef84 <alt_tick+0xd8>
1010ef10:	e0bffd17 	ldw	r2,-12(fp)
1010ef14:	10800403 	ldbu	r2,16(r2)
1010ef18:	10803fcc 	andi	r2,r2,255
1010ef1c:	1000191e 	bne	r2,zero,1010ef84 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
1010ef20:	e0bffd17 	ldw	r2,-12(fp)
1010ef24:	10800317 	ldw	r2,12(r2)
1010ef28:	e0fffd17 	ldw	r3,-12(fp)
1010ef2c:	18c00517 	ldw	r3,20(r3)
1010ef30:	1809883a 	mov	r4,r3
1010ef34:	103ee83a 	callr	r2
1010ef38:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1010ef3c:	e0bfff17 	ldw	r2,-4(fp)
1010ef40:	1000031e 	bne	r2,zero,1010ef50 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
1010ef44:	e13ffd17 	ldw	r4,-12(fp)
1010ef48:	010ee100 	call	1010ee10 <alt_alarm_stop>
1010ef4c:	00000d06 	br	1010ef84 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
1010ef50:	e0bffd17 	ldw	r2,-12(fp)
1010ef54:	10c00217 	ldw	r3,8(r2)
1010ef58:	e0bfff17 	ldw	r2,-4(fp)
1010ef5c:	1887883a 	add	r3,r3,r2
1010ef60:	e0bffd17 	ldw	r2,-12(fp)
1010ef64:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
1010ef68:	e0bffd17 	ldw	r2,-12(fp)
1010ef6c:	10c00217 	ldw	r3,8(r2)
1010ef70:	d0a6d717 	ldw	r2,-25764(gp)
1010ef74:	1880032e 	bgeu	r3,r2,1010ef84 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
1010ef78:	e0bffd17 	ldw	r2,-12(fp)
1010ef7c:	00c00044 	movi	r3,1
1010ef80:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1010ef84:	e0bffe17 	ldw	r2,-8(fp)
1010ef88:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010ef8c:	e0fffd17 	ldw	r3,-12(fp)
1010ef90:	d0a00e04 	addi	r2,gp,-32712
1010ef94:	18bfcf1e 	bne	r3,r2,1010eed4 <__alt_data_end+0xfffeeed4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
1010ef98:	0001883a 	nop
}
1010ef9c:	0001883a 	nop
1010efa0:	e037883a 	mov	sp,fp
1010efa4:	dfc00117 	ldw	ra,4(sp)
1010efa8:	df000017 	ldw	fp,0(sp)
1010efac:	dec00204 	addi	sp,sp,8
1010efb0:	f800283a 	ret

1010efb4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1010efb4:	deffff04 	addi	sp,sp,-4
1010efb8:	df000015 	stw	fp,0(sp)
1010efbc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
1010efc0:	000170fa 	wrctl	ienable,zero
}
1010efc4:	0001883a 	nop
1010efc8:	e037883a 	mov	sp,fp
1010efcc:	df000017 	ldw	fp,0(sp)
1010efd0:	dec00104 	addi	sp,sp,4
1010efd4:	f800283a 	ret

1010efd8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
1010efd8:	defffa04 	addi	sp,sp,-24
1010efdc:	dfc00515 	stw	ra,20(sp)
1010efe0:	df000415 	stw	fp,16(sp)
1010efe4:	df000404 	addi	fp,sp,16
1010efe8:	e13ffe15 	stw	r4,-8(fp)
1010efec:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
1010eff0:	e0bfff17 	ldw	r2,-4(fp)
1010eff4:	10800017 	ldw	r2,0(r2)
1010eff8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
1010effc:	e13ffe17 	ldw	r4,-8(fp)
1010f000:	01070d40 	call	101070d4 <strlen>
1010f004:	10800044 	addi	r2,r2,1
1010f008:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010f00c:	00000d06 	br	1010f044 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
1010f010:	e0bffc17 	ldw	r2,-16(fp)
1010f014:	10800217 	ldw	r2,8(r2)
1010f018:	e0fffd17 	ldw	r3,-12(fp)
1010f01c:	180d883a 	mov	r6,r3
1010f020:	e17ffe17 	ldw	r5,-8(fp)
1010f024:	1009883a 	mov	r4,r2
1010f028:	010f3a80 	call	1010f3a8 <memcmp>
1010f02c:	1000021e 	bne	r2,zero,1010f038 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
1010f030:	e0bffc17 	ldw	r2,-16(fp)
1010f034:	00000706 	br	1010f054 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
1010f038:	e0bffc17 	ldw	r2,-16(fp)
1010f03c:	10800017 	ldw	r2,0(r2)
1010f040:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010f044:	e0fffc17 	ldw	r3,-16(fp)
1010f048:	e0bfff17 	ldw	r2,-4(fp)
1010f04c:	18bff01e 	bne	r3,r2,1010f010 <__alt_data_end+0xfffef010>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
1010f050:	0005883a 	mov	r2,zero
}
1010f054:	e037883a 	mov	sp,fp
1010f058:	dfc00117 	ldw	ra,4(sp)
1010f05c:	df000017 	ldw	fp,0(sp)
1010f060:	dec00204 	addi	sp,sp,8
1010f064:	f800283a 	ret

1010f068 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
1010f068:	defffb04 	addi	sp,sp,-20
1010f06c:	dfc00415 	stw	ra,16(sp)
1010f070:	df000315 	stw	fp,12(sp)
1010f074:	df000304 	addi	fp,sp,12
1010f078:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
1010f07c:	00840474 	movhi	r2,4113
1010f080:	10853004 	addi	r2,r2,5312
1010f084:	10800017 	ldw	r2,0(r2)
1010f088:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010f08c:	00003106 	br	1010f154 <alt_find_file+0xec>
  {
    len = strlen(next->name);
1010f090:	e0bffd17 	ldw	r2,-12(fp)
1010f094:	10800217 	ldw	r2,8(r2)
1010f098:	1009883a 	mov	r4,r2
1010f09c:	01070d40 	call	101070d4 <strlen>
1010f0a0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
1010f0a4:	e0bffd17 	ldw	r2,-12(fp)
1010f0a8:	10c00217 	ldw	r3,8(r2)
1010f0ac:	e0bffe17 	ldw	r2,-8(fp)
1010f0b0:	10bfffc4 	addi	r2,r2,-1
1010f0b4:	1885883a 	add	r2,r3,r2
1010f0b8:	10800003 	ldbu	r2,0(r2)
1010f0bc:	10803fcc 	andi	r2,r2,255
1010f0c0:	1080201c 	xori	r2,r2,128
1010f0c4:	10bfe004 	addi	r2,r2,-128
1010f0c8:	10800bd8 	cmpnei	r2,r2,47
1010f0cc:	1000031e 	bne	r2,zero,1010f0dc <alt_find_file+0x74>
    {
      len -= 1;
1010f0d0:	e0bffe17 	ldw	r2,-8(fp)
1010f0d4:	10bfffc4 	addi	r2,r2,-1
1010f0d8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1010f0dc:	e0bffe17 	ldw	r2,-8(fp)
1010f0e0:	e0ffff17 	ldw	r3,-4(fp)
1010f0e4:	1885883a 	add	r2,r3,r2
1010f0e8:	10800003 	ldbu	r2,0(r2)
1010f0ec:	10803fcc 	andi	r2,r2,255
1010f0f0:	1080201c 	xori	r2,r2,128
1010f0f4:	10bfe004 	addi	r2,r2,-128
1010f0f8:	10800be0 	cmpeqi	r2,r2,47
1010f0fc:	1000081e 	bne	r2,zero,1010f120 <alt_find_file+0xb8>
1010f100:	e0bffe17 	ldw	r2,-8(fp)
1010f104:	e0ffff17 	ldw	r3,-4(fp)
1010f108:	1885883a 	add	r2,r3,r2
1010f10c:	10800003 	ldbu	r2,0(r2)
1010f110:	10803fcc 	andi	r2,r2,255
1010f114:	1080201c 	xori	r2,r2,128
1010f118:	10bfe004 	addi	r2,r2,-128
1010f11c:	10000a1e 	bne	r2,zero,1010f148 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
1010f120:	e0bffd17 	ldw	r2,-12(fp)
1010f124:	10800217 	ldw	r2,8(r2)
1010f128:	e0fffe17 	ldw	r3,-8(fp)
1010f12c:	180d883a 	mov	r6,r3
1010f130:	e17fff17 	ldw	r5,-4(fp)
1010f134:	1009883a 	mov	r4,r2
1010f138:	010f3a80 	call	1010f3a8 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1010f13c:	1000021e 	bne	r2,zero,1010f148 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
1010f140:	e0bffd17 	ldw	r2,-12(fp)
1010f144:	00000806 	br	1010f168 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
1010f148:	e0bffd17 	ldw	r2,-12(fp)
1010f14c:	10800017 	ldw	r2,0(r2)
1010f150:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010f154:	e0fffd17 	ldw	r3,-12(fp)
1010f158:	00840474 	movhi	r2,4113
1010f15c:	10853004 	addi	r2,r2,5312
1010f160:	18bfcb1e 	bne	r3,r2,1010f090 <__alt_data_end+0xfffef090>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
1010f164:	0005883a 	mov	r2,zero
}
1010f168:	e037883a 	mov	sp,fp
1010f16c:	dfc00117 	ldw	ra,4(sp)
1010f170:	df000017 	ldw	fp,0(sp)
1010f174:	dec00204 	addi	sp,sp,8
1010f178:	f800283a 	ret

1010f17c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
1010f17c:	defffc04 	addi	sp,sp,-16
1010f180:	df000315 	stw	fp,12(sp)
1010f184:	df000304 	addi	fp,sp,12
1010f188:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
1010f18c:	00bffa04 	movi	r2,-24
1010f190:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1010f194:	e03ffd15 	stw	zero,-12(fp)
1010f198:	00001d06 	br	1010f210 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
1010f19c:	00840474 	movhi	r2,4113
1010f1a0:	1080b204 	addi	r2,r2,712
1010f1a4:	e0fffd17 	ldw	r3,-12(fp)
1010f1a8:	18c00324 	muli	r3,r3,12
1010f1ac:	10c5883a 	add	r2,r2,r3
1010f1b0:	10800017 	ldw	r2,0(r2)
1010f1b4:	1000131e 	bne	r2,zero,1010f204 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
1010f1b8:	00840474 	movhi	r2,4113
1010f1bc:	1080b204 	addi	r2,r2,712
1010f1c0:	e0fffd17 	ldw	r3,-12(fp)
1010f1c4:	18c00324 	muli	r3,r3,12
1010f1c8:	10c5883a 	add	r2,r2,r3
1010f1cc:	e0ffff17 	ldw	r3,-4(fp)
1010f1d0:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
1010f1d4:	00840474 	movhi	r2,4113
1010f1d8:	10853404 	addi	r2,r2,5328
1010f1dc:	10c00017 	ldw	r3,0(r2)
1010f1e0:	e0bffd17 	ldw	r2,-12(fp)
1010f1e4:	1880040e 	bge	r3,r2,1010f1f8 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
1010f1e8:	00840474 	movhi	r2,4113
1010f1ec:	10853404 	addi	r2,r2,5328
1010f1f0:	e0fffd17 	ldw	r3,-12(fp)
1010f1f4:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
1010f1f8:	e0bffd17 	ldw	r2,-12(fp)
1010f1fc:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
1010f200:	00000606 	br	1010f21c <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1010f204:	e0bffd17 	ldw	r2,-12(fp)
1010f208:	10800044 	addi	r2,r2,1
1010f20c:	e0bffd15 	stw	r2,-12(fp)
1010f210:	e0bffd17 	ldw	r2,-12(fp)
1010f214:	10800810 	cmplti	r2,r2,32
1010f218:	103fe01e 	bne	r2,zero,1010f19c <__alt_data_end+0xfffef19c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
1010f21c:	e0bffe17 	ldw	r2,-8(fp)
}
1010f220:	e037883a 	mov	sp,fp
1010f224:	df000017 	ldw	fp,0(sp)
1010f228:	dec00104 	addi	sp,sp,4
1010f22c:	f800283a 	ret

1010f230 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
1010f230:	defffb04 	addi	sp,sp,-20
1010f234:	df000415 	stw	fp,16(sp)
1010f238:	df000404 	addi	fp,sp,16
1010f23c:	e13ffe15 	stw	r4,-8(fp)
1010f240:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
1010f244:	e0bfff17 	ldw	r2,-4(fp)
1010f248:	10840070 	cmpltui	r2,r2,4097
1010f24c:	1000021e 	bne	r2,zero,1010f258 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
1010f250:	00840004 	movi	r2,4096
1010f254:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
1010f258:	e0fffe17 	ldw	r3,-8(fp)
1010f25c:	e0bfff17 	ldw	r2,-4(fp)
1010f260:	1885883a 	add	r2,r3,r2
1010f264:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
1010f268:	e0bffe17 	ldw	r2,-8(fp)
1010f26c:	e0bffc15 	stw	r2,-16(fp)
1010f270:	00000506 	br	1010f288 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
1010f274:	e0bffc17 	ldw	r2,-16(fp)
1010f278:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
1010f27c:	e0bffc17 	ldw	r2,-16(fp)
1010f280:	10800804 	addi	r2,r2,32
1010f284:	e0bffc15 	stw	r2,-16(fp)
1010f288:	e0fffc17 	ldw	r3,-16(fp)
1010f28c:	e0bffd17 	ldw	r2,-12(fp)
1010f290:	18bff836 	bltu	r3,r2,1010f274 <__alt_data_end+0xfffef274>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
1010f294:	e0bffe17 	ldw	r2,-8(fp)
1010f298:	108007cc 	andi	r2,r2,31
1010f29c:	10000226 	beq	r2,zero,1010f2a8 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
1010f2a0:	e0bffc17 	ldw	r2,-16(fp)
1010f2a4:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
1010f2a8:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
1010f2ac:	0001883a 	nop
1010f2b0:	e037883a 	mov	sp,fp
1010f2b4:	df000017 	ldw	fp,0(sp)
1010f2b8:	dec00104 	addi	sp,sp,4
1010f2bc:	f800283a 	ret

1010f2c0 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
1010f2c0:	defffe04 	addi	sp,sp,-8
1010f2c4:	df000115 	stw	fp,4(sp)
1010f2c8:	df000104 	addi	fp,sp,4
1010f2cc:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
1010f2d0:	e0bfff17 	ldw	r2,-4(fp)
1010f2d4:	10bffe84 	addi	r2,r2,-6
1010f2d8:	10c00428 	cmpgeui	r3,r2,16
1010f2dc:	18001a1e 	bne	r3,zero,1010f348 <alt_exception_cause_generated_bad_addr+0x88>
1010f2e0:	100690ba 	slli	r3,r2,2
1010f2e4:	00840474 	movhi	r2,4113
1010f2e8:	10bcbe04 	addi	r2,r2,-3336
1010f2ec:	1885883a 	add	r2,r3,r2
1010f2f0:	10800017 	ldw	r2,0(r2)
1010f2f4:	1000683a 	jmp	r2
1010f2f8:	1010f338 	rdprs	zero,r2,17356
1010f2fc:	1010f338 	rdprs	zero,r2,17356
1010f300:	1010f348 	cmpgei	zero,r2,17357
1010f304:	1010f348 	cmpgei	zero,r2,17357
1010f308:	1010f348 	cmpgei	zero,r2,17357
1010f30c:	1010f338 	rdprs	zero,r2,17356
1010f310:	1010f340 	call	11010f34 <__alt_data_end+0xef0f34>
1010f314:	1010f348 	cmpgei	zero,r2,17357
1010f318:	1010f338 	rdprs	zero,r2,17356
1010f31c:	1010f338 	rdprs	zero,r2,17356
1010f320:	1010f348 	cmpgei	zero,r2,17357
1010f324:	1010f338 	rdprs	zero,r2,17356
1010f328:	1010f340 	call	11010f34 <__alt_data_end+0xef0f34>
1010f32c:	1010f348 	cmpgei	zero,r2,17357
1010f330:	1010f348 	cmpgei	zero,r2,17357
1010f334:	1010f338 	rdprs	zero,r2,17356
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
1010f338:	00800044 	movi	r2,1
1010f33c:	00000306 	br	1010f34c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
1010f340:	0005883a 	mov	r2,zero
1010f344:	00000106 	br	1010f34c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
1010f348:	0005883a 	mov	r2,zero
  }
}
1010f34c:	e037883a 	mov	sp,fp
1010f350:	df000017 	ldw	fp,0(sp)
1010f354:	dec00104 	addi	sp,sp,4
1010f358:	f800283a 	ret

1010f35c <atexit>:
1010f35c:	200b883a 	mov	r5,r4
1010f360:	000f883a 	mov	r7,zero
1010f364:	000d883a 	mov	r6,zero
1010f368:	0009883a 	mov	r4,zero
1010f36c:	010f4241 	jmpi	1010f424 <__register_exitproc>

1010f370 <exit>:
1010f370:	defffe04 	addi	sp,sp,-8
1010f374:	000b883a 	mov	r5,zero
1010f378:	dc000015 	stw	r16,0(sp)
1010f37c:	dfc00115 	stw	ra,4(sp)
1010f380:	2021883a 	mov	r16,r4
1010f384:	010f53c0 	call	1010f53c <__call_exitprocs>
1010f388:	00840474 	movhi	r2,4113
1010f38c:	10852a04 	addi	r2,r2,5288
1010f390:	11000017 	ldw	r4,0(r2)
1010f394:	20800f17 	ldw	r2,60(r4)
1010f398:	10000126 	beq	r2,zero,1010f3a0 <exit+0x30>
1010f39c:	103ee83a 	callr	r2
1010f3a0:	8009883a 	mov	r4,r16
1010f3a4:	010f6bc0 	call	1010f6bc <_exit>

1010f3a8 <memcmp>:
1010f3a8:	01c000c4 	movi	r7,3
1010f3ac:	3980192e 	bgeu	r7,r6,1010f414 <memcmp+0x6c>
1010f3b0:	2144b03a 	or	r2,r4,r5
1010f3b4:	11c4703a 	and	r2,r2,r7
1010f3b8:	10000f26 	beq	r2,zero,1010f3f8 <memcmp+0x50>
1010f3bc:	20800003 	ldbu	r2,0(r4)
1010f3c0:	28c00003 	ldbu	r3,0(r5)
1010f3c4:	10c0151e 	bne	r2,r3,1010f41c <memcmp+0x74>
1010f3c8:	31bfff84 	addi	r6,r6,-2
1010f3cc:	01ffffc4 	movi	r7,-1
1010f3d0:	00000406 	br	1010f3e4 <memcmp+0x3c>
1010f3d4:	20800003 	ldbu	r2,0(r4)
1010f3d8:	28c00003 	ldbu	r3,0(r5)
1010f3dc:	31bfffc4 	addi	r6,r6,-1
1010f3e0:	10c00e1e 	bne	r2,r3,1010f41c <memcmp+0x74>
1010f3e4:	21000044 	addi	r4,r4,1
1010f3e8:	29400044 	addi	r5,r5,1
1010f3ec:	31fff91e 	bne	r6,r7,1010f3d4 <__alt_data_end+0xfffef3d4>
1010f3f0:	0005883a 	mov	r2,zero
1010f3f4:	f800283a 	ret
1010f3f8:	20c00017 	ldw	r3,0(r4)
1010f3fc:	28800017 	ldw	r2,0(r5)
1010f400:	18bfee1e 	bne	r3,r2,1010f3bc <__alt_data_end+0xfffef3bc>
1010f404:	31bfff04 	addi	r6,r6,-4
1010f408:	21000104 	addi	r4,r4,4
1010f40c:	29400104 	addi	r5,r5,4
1010f410:	39bff936 	bltu	r7,r6,1010f3f8 <__alt_data_end+0xfffef3f8>
1010f414:	303fe91e 	bne	r6,zero,1010f3bc <__alt_data_end+0xfffef3bc>
1010f418:	003ff506 	br	1010f3f0 <__alt_data_end+0xfffef3f0>
1010f41c:	10c5c83a 	sub	r2,r2,r3
1010f420:	f800283a 	ret

1010f424 <__register_exitproc>:
1010f424:	defffa04 	addi	sp,sp,-24
1010f428:	dc000315 	stw	r16,12(sp)
1010f42c:	04040474 	movhi	r16,4113
1010f430:	84052a04 	addi	r16,r16,5288
1010f434:	80c00017 	ldw	r3,0(r16)
1010f438:	dc400415 	stw	r17,16(sp)
1010f43c:	dfc00515 	stw	ra,20(sp)
1010f440:	18805217 	ldw	r2,328(r3)
1010f444:	2023883a 	mov	r17,r4
1010f448:	10003726 	beq	r2,zero,1010f528 <__register_exitproc+0x104>
1010f44c:	10c00117 	ldw	r3,4(r2)
1010f450:	010007c4 	movi	r4,31
1010f454:	20c00e16 	blt	r4,r3,1010f490 <__register_exitproc+0x6c>
1010f458:	1a000044 	addi	r8,r3,1
1010f45c:	8800221e 	bne	r17,zero,1010f4e8 <__register_exitproc+0xc4>
1010f460:	18c00084 	addi	r3,r3,2
1010f464:	18c7883a 	add	r3,r3,r3
1010f468:	18c7883a 	add	r3,r3,r3
1010f46c:	12000115 	stw	r8,4(r2)
1010f470:	10c7883a 	add	r3,r2,r3
1010f474:	19400015 	stw	r5,0(r3)
1010f478:	0005883a 	mov	r2,zero
1010f47c:	dfc00517 	ldw	ra,20(sp)
1010f480:	dc400417 	ldw	r17,16(sp)
1010f484:	dc000317 	ldw	r16,12(sp)
1010f488:	dec00604 	addi	sp,sp,24
1010f48c:	f800283a 	ret
1010f490:	00800034 	movhi	r2,0
1010f494:	10800004 	addi	r2,r2,0
1010f498:	10002626 	beq	r2,zero,1010f534 <__register_exitproc+0x110>
1010f49c:	01006404 	movi	r4,400
1010f4a0:	d9400015 	stw	r5,0(sp)
1010f4a4:	d9800115 	stw	r6,4(sp)
1010f4a8:	d9c00215 	stw	r7,8(sp)
1010f4ac:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>
1010f4b0:	d9400017 	ldw	r5,0(sp)
1010f4b4:	d9800117 	ldw	r6,4(sp)
1010f4b8:	d9c00217 	ldw	r7,8(sp)
1010f4bc:	10001d26 	beq	r2,zero,1010f534 <__register_exitproc+0x110>
1010f4c0:	81000017 	ldw	r4,0(r16)
1010f4c4:	10000115 	stw	zero,4(r2)
1010f4c8:	02000044 	movi	r8,1
1010f4cc:	22405217 	ldw	r9,328(r4)
1010f4d0:	0007883a 	mov	r3,zero
1010f4d4:	12400015 	stw	r9,0(r2)
1010f4d8:	20805215 	stw	r2,328(r4)
1010f4dc:	10006215 	stw	zero,392(r2)
1010f4e0:	10006315 	stw	zero,396(r2)
1010f4e4:	883fde26 	beq	r17,zero,1010f460 <__alt_data_end+0xfffef460>
1010f4e8:	18c9883a 	add	r4,r3,r3
1010f4ec:	2109883a 	add	r4,r4,r4
1010f4f0:	1109883a 	add	r4,r2,r4
1010f4f4:	21802215 	stw	r6,136(r4)
1010f4f8:	01800044 	movi	r6,1
1010f4fc:	12406217 	ldw	r9,392(r2)
1010f500:	30cc983a 	sll	r6,r6,r3
1010f504:	4992b03a 	or	r9,r9,r6
1010f508:	12406215 	stw	r9,392(r2)
1010f50c:	21c04215 	stw	r7,264(r4)
1010f510:	01000084 	movi	r4,2
1010f514:	893fd21e 	bne	r17,r4,1010f460 <__alt_data_end+0xfffef460>
1010f518:	11006317 	ldw	r4,396(r2)
1010f51c:	218cb03a 	or	r6,r4,r6
1010f520:	11806315 	stw	r6,396(r2)
1010f524:	003fce06 	br	1010f460 <__alt_data_end+0xfffef460>
1010f528:	18805304 	addi	r2,r3,332
1010f52c:	18805215 	stw	r2,328(r3)
1010f530:	003fc606 	br	1010f44c <__alt_data_end+0xfffef44c>
1010f534:	00bfffc4 	movi	r2,-1
1010f538:	003fd006 	br	1010f47c <__alt_data_end+0xfffef47c>

1010f53c <__call_exitprocs>:
1010f53c:	defff504 	addi	sp,sp,-44
1010f540:	df000915 	stw	fp,36(sp)
1010f544:	dd400615 	stw	r21,24(sp)
1010f548:	dc800315 	stw	r18,12(sp)
1010f54c:	dfc00a15 	stw	ra,40(sp)
1010f550:	ddc00815 	stw	r23,32(sp)
1010f554:	dd800715 	stw	r22,28(sp)
1010f558:	dd000515 	stw	r20,20(sp)
1010f55c:	dcc00415 	stw	r19,16(sp)
1010f560:	dc400215 	stw	r17,8(sp)
1010f564:	dc000115 	stw	r16,4(sp)
1010f568:	d9000015 	stw	r4,0(sp)
1010f56c:	2839883a 	mov	fp,r5
1010f570:	04800044 	movi	r18,1
1010f574:	057fffc4 	movi	r21,-1
1010f578:	00840474 	movhi	r2,4113
1010f57c:	10852a04 	addi	r2,r2,5288
1010f580:	12000017 	ldw	r8,0(r2)
1010f584:	45005217 	ldw	r20,328(r8)
1010f588:	44c05204 	addi	r19,r8,328
1010f58c:	a0001c26 	beq	r20,zero,1010f600 <__call_exitprocs+0xc4>
1010f590:	a0800117 	ldw	r2,4(r20)
1010f594:	15ffffc4 	addi	r23,r2,-1
1010f598:	b8000d16 	blt	r23,zero,1010f5d0 <__call_exitprocs+0x94>
1010f59c:	14000044 	addi	r16,r2,1
1010f5a0:	8421883a 	add	r16,r16,r16
1010f5a4:	8421883a 	add	r16,r16,r16
1010f5a8:	84402004 	addi	r17,r16,128
1010f5ac:	a463883a 	add	r17,r20,r17
1010f5b0:	a421883a 	add	r16,r20,r16
1010f5b4:	e0001e26 	beq	fp,zero,1010f630 <__call_exitprocs+0xf4>
1010f5b8:	80804017 	ldw	r2,256(r16)
1010f5bc:	e0801c26 	beq	fp,r2,1010f630 <__call_exitprocs+0xf4>
1010f5c0:	bdffffc4 	addi	r23,r23,-1
1010f5c4:	843fff04 	addi	r16,r16,-4
1010f5c8:	8c7fff04 	addi	r17,r17,-4
1010f5cc:	bd7ff91e 	bne	r23,r21,1010f5b4 <__alt_data_end+0xfffef5b4>
1010f5d0:	00800034 	movhi	r2,0
1010f5d4:	10800004 	addi	r2,r2,0
1010f5d8:	10000926 	beq	r2,zero,1010f600 <__call_exitprocs+0xc4>
1010f5dc:	a0800117 	ldw	r2,4(r20)
1010f5e0:	1000301e 	bne	r2,zero,1010f6a4 <__call_exitprocs+0x168>
1010f5e4:	a0800017 	ldw	r2,0(r20)
1010f5e8:	10003226 	beq	r2,zero,1010f6b4 <__call_exitprocs+0x178>
1010f5ec:	a009883a 	mov	r4,r20
1010f5f0:	98800015 	stw	r2,0(r19)
1010f5f4:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>
1010f5f8:	9d000017 	ldw	r20,0(r19)
1010f5fc:	a03fe41e 	bne	r20,zero,1010f590 <__alt_data_end+0xfffef590>
1010f600:	dfc00a17 	ldw	ra,40(sp)
1010f604:	df000917 	ldw	fp,36(sp)
1010f608:	ddc00817 	ldw	r23,32(sp)
1010f60c:	dd800717 	ldw	r22,28(sp)
1010f610:	dd400617 	ldw	r21,24(sp)
1010f614:	dd000517 	ldw	r20,20(sp)
1010f618:	dcc00417 	ldw	r19,16(sp)
1010f61c:	dc800317 	ldw	r18,12(sp)
1010f620:	dc400217 	ldw	r17,8(sp)
1010f624:	dc000117 	ldw	r16,4(sp)
1010f628:	dec00b04 	addi	sp,sp,44
1010f62c:	f800283a 	ret
1010f630:	a0800117 	ldw	r2,4(r20)
1010f634:	80c00017 	ldw	r3,0(r16)
1010f638:	10bfffc4 	addi	r2,r2,-1
1010f63c:	15c01426 	beq	r2,r23,1010f690 <__call_exitprocs+0x154>
1010f640:	80000015 	stw	zero,0(r16)
1010f644:	183fde26 	beq	r3,zero,1010f5c0 <__alt_data_end+0xfffef5c0>
1010f648:	95c8983a 	sll	r4,r18,r23
1010f64c:	a0806217 	ldw	r2,392(r20)
1010f650:	a5800117 	ldw	r22,4(r20)
1010f654:	2084703a 	and	r2,r4,r2
1010f658:	10000b26 	beq	r2,zero,1010f688 <__call_exitprocs+0x14c>
1010f65c:	a0806317 	ldw	r2,396(r20)
1010f660:	2088703a 	and	r4,r4,r2
1010f664:	20000c1e 	bne	r4,zero,1010f698 <__call_exitprocs+0x15c>
1010f668:	89400017 	ldw	r5,0(r17)
1010f66c:	d9000017 	ldw	r4,0(sp)
1010f670:	183ee83a 	callr	r3
1010f674:	a0800117 	ldw	r2,4(r20)
1010f678:	15bfbf1e 	bne	r2,r22,1010f578 <__alt_data_end+0xfffef578>
1010f67c:	98800017 	ldw	r2,0(r19)
1010f680:	153fcf26 	beq	r2,r20,1010f5c0 <__alt_data_end+0xfffef5c0>
1010f684:	003fbc06 	br	1010f578 <__alt_data_end+0xfffef578>
1010f688:	183ee83a 	callr	r3
1010f68c:	003ff906 	br	1010f674 <__alt_data_end+0xfffef674>
1010f690:	a5c00115 	stw	r23,4(r20)
1010f694:	003feb06 	br	1010f644 <__alt_data_end+0xfffef644>
1010f698:	89000017 	ldw	r4,0(r17)
1010f69c:	183ee83a 	callr	r3
1010f6a0:	003ff406 	br	1010f674 <__alt_data_end+0xfffef674>
1010f6a4:	a0800017 	ldw	r2,0(r20)
1010f6a8:	a027883a 	mov	r19,r20
1010f6ac:	1029883a 	mov	r20,r2
1010f6b0:	003fb606 	br	1010f58c <__alt_data_end+0xfffef58c>
1010f6b4:	0005883a 	mov	r2,zero
1010f6b8:	003ffb06 	br	1010f6a8 <__alt_data_end+0xfffef6a8>

1010f6bc <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
1010f6bc:	defffd04 	addi	sp,sp,-12
1010f6c0:	df000215 	stw	fp,8(sp)
1010f6c4:	df000204 	addi	fp,sp,8
1010f6c8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
1010f6cc:	0001883a 	nop
1010f6d0:	e0bfff17 	ldw	r2,-4(fp)
1010f6d4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
1010f6d8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
1010f6dc:	10000226 	beq	r2,zero,1010f6e8 <_exit+0x2c>
    ALT_SIM_FAIL();
1010f6e0:	002af070 	cmpltui	zero,zero,43969
1010f6e4:	00000106 	br	1010f6ec <_exit+0x30>
  } else {
    ALT_SIM_PASS();
1010f6e8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
1010f6ec:	003fff06 	br	1010f6ec <__alt_data_end+0xfffef6ec>
