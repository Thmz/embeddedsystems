
ParallelPort.elf:     file format elf32-littlenios2
ParallelPort.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020244

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x0000f70c memsz 0x0000f70c flags r-x
    LOAD off    0x0001072c vaddr 0x0002f72c paddr 0x00031218 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00012d04 vaddr 0x00032d04 paddr 0x00032d04 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f1d0  00020244  00020244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000318  0002f414  0002f414  00010414  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0002f72c  00031218  0001072c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00032d04  00032d04  00012d04  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00032e64  00032e64  00012218  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012218  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e98  00000000  00000000  00012240  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00023227  00000000  00000000  000130d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008e8e  00000000  00000000  000362ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b34f  00000000  00000000  0003f18d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002008  00000000  00000000  0004a4dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000373e  00000000  00000000  0004c4e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017b46  00000000  00000000  0004fc22  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00067768  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018c0  00000000  00000000  00067798  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006c052  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006c055  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006c061  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006c062  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006c063  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006c06e  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006c079  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000007  00000000  00000000  0006c084  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000002e  00000000  00000000  0006c08b  2**0
                  CONTENTS, READONLY
 26 .jdi          00003f45  00000000  00000000  0006c0b9  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     000359a2  00000000  00000000  0006fffe  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020244 l    d  .text	00000000 .text
0002f414 l    d  .rodata	00000000 .rodata
0002f72c l    d  .rwdata	00000000 .rwdata
00032d04 l    d  .bss	00000000 .bss
00032e64 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 C:/Users/verelst/Desktop/fpga_intro/sw/nios/ParallelPort_bsp//obj/HAL/src/crt0.o
0002028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0002f472 l     O .rodata	00000010 zeroes.4404
00022720 l     F .text	000000bc __sbprintf
0002f482 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00022930 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00024460 l     F .text	00000008 __fp_unlock
00024474 l     F .text	0000019c __sinit.part.1
00024610 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0002f72c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0002fb70 l     O .rwdata	00000020 lc_ctype_charset
0002fb50 l     O .rwdata	00000020 lc_message_charset
0002fb90 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0002f4b4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00027a0c l     F .text	000000fc __sprint_r.part.0
0002f5e8 l     O .rodata	00000010 blanks.4348
0002f5d8 l     O .rodata	00000010 zeroes.4349
00028f98 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0002cc54 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002cd74 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002cda0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0002cea0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002cf94 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002d080 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0002d268 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00031208 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0002d4c8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002d610 l     F .text	00000038 alt_dev_reg
00030178 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002d8f4 l     F .text	0000020c altera_avalon_jtag_uart_irq
0002db00 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0002e2c8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0002e780 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0002e8c0 l     F .text	00000050 alt_get_errno
0002e910 l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00032d38 g     O .bss	00000004 alt_instruction_exception_handler
00027050 g     F .text	00000074 _mprec_log10
0002713c g     F .text	0000008c __any_on
00029534 g     F .text	00000054 _isatty_r
0002f4c0 g     O .rodata	00000028 __mprec_tinytens
0002d1a4 g     F .text	0000007c alt_main
000203a0 g     F .text	000000c0 _puts_r
00032d64 g     O .bss	00000100 alt_irq
00029588 g     F .text	00000060 _lseek_r
00031218 g       *ABS*	00000000 __flash_rwdata_start
0002b780 g     F .text	00000088 .hidden __eqdf2
00032e64 g       *ABS*	00000000 __alt_heap_start
00020364 g     F .text	0000003c printf
000297a0 g     F .text	0000009c _wcrtomb_r
000278cc g     F .text	0000005c __sseek
000247b0 g     F .text	00000010 __sinit
00029648 g     F .text	00000140 __swbuf_r
00025278 g     F .text	0000007c _setlocale_r
00024618 g     F .text	00000068 __sfmoreglue
0002d244 g     F .text	00000024 __malloc_unlock
00025f48 g     F .text	0000015c memmove
00024798 g     F .text	00000018 _cleanup
000261cc g     F .text	000000a8 _Balloc
0002b808 g     F .text	000000dc .hidden __gtdf2
0002ecd8 g     F .text	00000024 altera_nios2_gen2_irq_init
00020000 g     F .entry	0000001c __reset
00020020 g       *ABS*	00000000 __flash_exceptions_start
000294d8 g     F .text	0000005c _fstat_r
00032d1c g     O .bss	00000004 errno
00027848 g     F .text	00000008 __seofread
00032d24 g     O .bss	00000004 alt_argv
000391d8 g       *ABS*	00000000 _gp
0002fff8 g     O .rwdata	00000180 alt_fd_list
0002ecfc g     F .text	00000090 alt_find_dev
00025e00 g     F .text	00000148 memcpy
00024468 g     F .text	0000000c _cleanup_r
0002ca6c g     F .text	000000dc .hidden __floatsidf
0002e844 g     F .text	0000007c alt_io_redirect
0002b8e4 g     F .text	000000f4 .hidden __ltdf2
0002f414 g       *ABS*	00000000 __DTOR_END__
00020460 g     F .text	00000014 puts
0002efe4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0002772c g     F .text	00000074 __fpclassifyd
00026fac g     F .text	000000a4 __ratio
00028f7c g     F .text	0000001c __vfiprintf_internal
0002dd00 g     F .text	0000021c altera_avalon_jtag_uart_read
00020334 g     F .text	00000030 _printf_r
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0002a530 g     F .text	00000064 .hidden __udivsi3
0002cef0 g     F .text	000000a4 isatty
0002f510 g     O .rodata	000000c8 __mprec_tens
000252f4 g     F .text	0000000c __locale_charset
0002ef54 g     F .text	00000090 alt_icache_flush
00032d18 g     O .bss	00000004 __malloc_top_pad
000311e0 g     O .rwdata	00000004 __mb_cur_max
00025324 g     F .text	0000000c _localeconv_r
000265d8 g     F .text	0000003c __i2b
00024c34 g     F .text	000004bc __sfvwrite_r
000277a0 g     F .text	00000054 _sbrk_r
000295e8 g     F .text	00000060 _read_r
00031200 g     O .rwdata	00000004 alt_max_fd
000291cc g     F .text	000000f0 _fclose_r
00024430 g     F .text	00000030 fflush
00032d14 g     O .bss	00000004 __malloc_max_sbrked_mem
0002a5ec g     F .text	000008ac .hidden __adddf3
00026d54 g     F .text	0000010c __b2d
00029f00 g     F .text	00000538 .hidden __umoddi3
0002d0d0 g     F .text	000000d4 lseek
000311d8 g     O .rwdata	00000004 _global_impure_ptr
000271c8 g     F .text	00000564 _realloc_r
00032e64 g       *ABS*	00000000 __bss_end
0002e690 g     F .text	000000f0 alt_iic_isr_register
0002ebd0 g     F .text	00000108 alt_tick
00029988 g     F .text	00000578 .hidden __udivdi3
00029434 g     F .text	00000024 _fputwc_r
0002f4e8 g     O .rodata	00000028 __mprec_bigtens
000263bc g     F .text	00000104 __s2b
0002cb48 g     F .text	000000a8 .hidden __floatunsidf
00026a94 g     F .text	00000060 __mcmp
000247d0 g     F .text	00000018 __fp_lock_all
0002e644 g     F .text	0000004c alt_ic_irq_enabled
0002eb34 g     F .text	0000009c alt_alarm_stop
00032d2c g     O .bss	00000004 alt_irq_active
000200fc g     F .exceptions	000000d4 alt_irq_handler
0002ffd0 g     O .rwdata	00000028 alt_dev_null
0002e280 g     F .text	00000048 alt_dcache_flush_all
000264c0 g     F .text	00000068 __hi0bits
0002c9ec g     F .text	00000080 .hidden __fixdfsi
00031218 g       *ABS*	00000000 __ram_rwdata_end
000311f8 g     O .rwdata	00000008 alt_dev_list
0002d518 g     F .text	000000f8 write
0002f72c g       *ABS*	00000000 __ram_rodata_end
0002cdf0 g     F .text	000000b0 fstat
0002b8e4 g     F .text	000000f4 .hidden __ledf2
0002680c g     F .text	00000140 __pow5mult
00027b20 g     F .text	0000145c ___vfiprintf_internal_r
00032d0c g     O .bss	00000004 __nlocale_changed
0002a594 g     F .text	00000058 .hidden __umodsi3
00032e64 g       *ABS*	00000000 end
0002d82c g     F .text	000000c8 altera_avalon_jtag_uart_init
000201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0002f414 g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
0002cbf0 g     F .text	00000064 .hidden __clzsi2
0002df1c g     F .text	00000224 altera_avalon_jtag_uart_write
000247c0 g     F .text	00000004 __sfp_lock_acquire
00025d1c g     F .text	000000e4 memchr
0002050c g     F .text	000021f8 ___vfprintf_internal_r
00024924 g     F .text	00000310 _free_r
00025300 g     F .text	00000010 __locale_mb_cur_max
0002f260 g     F .text	00000180 __call_exitprocs
00032d08 g     O .bss	00000004 __mlocale_changed
000311e4 g     O .rwdata	00000004 __malloc_sbrk_base
00020244 g     F .text	0000004c _start
00032d30 g     O .bss	00000004 _alt_tick_rate
0002694c g     F .text	00000148 __lshift
00032d34 g     O .bss	00000004 _alt_nticks
0002d2b8 g     F .text	000000fc read
0002d680 g     F .text	00000048 alt_sys_init
0002f148 g     F .text	00000118 __register_exitproc
00026614 g     F .text	000001f8 __multiply
0002dba8 g     F .text	00000068 altera_avalon_jtag_uart_close
0002f72c g       *ABS*	00000000 __ram_rwdata_start
0002f414 g       *ABS*	00000000 __ram_rodata_start
00032d3c g     O .bss	00000028 __malloc_current_mallinfo
00026e60 g     F .text	0000014c __d2b
0002d6c8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0002eea0 g     F .text	000000b4 alt_get_fd
000290b4 g     F .text	00000054 _close_r
0002f0cc g     F .text	0000007c memcmp
0002d788 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00032e64 g       *ABS*	00000000 __alt_stack_base
0002d7d8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000227dc g     F .text	00000154 __swsetup_r
0002ae98 g     F .text	000008e8 .hidden __divdf3
00024680 g     F .text	00000118 __sfp
000270c4 g     F .text	00000078 __copybits
0002fbc8 g     O .rwdata	00000408 __malloc_av_
000247cc g     F .text	00000004 __sinit_lock_release
0002b9d8 g     F .text	00000718 .hidden __muldf3
000277f4 g     F .text	00000054 __sread
0002ed8c g     F .text	00000114 alt_find_file
0002e318 g     F .text	000000a4 alt_dev_llist_insert
0002d220 g     F .text	00000024 __malloc_lock
0002d418 g     F .text	000000b0 sbrk
000243d4 g     F .text	0000005c _fflush_r
00029108 g     F .text	000000c4 _calloc_r
00032d04 g       *ABS*	00000000 __bss_start
000260a4 g     F .text	00000128 memset
00020290 g     F .text	000000a4 main
00032d28 g     O .bss	00000004 alt_envp
00032d10 g     O .bss	00000004 __malloc_max_total_mem
0002d728 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00029788 g     F .text	00000018 __swbuf
00027928 g     F .text	00000008 __sclose
00040000 g       *ABS*	00000000 __alt_heap_limit
000292bc g     F .text	00000014 fclose
00022b30 g     F .text	00001688 _dtoa_r
00025510 g     F .text	0000080c _malloc_r
000298fc g     F .text	00000030 __ascii_wctomb
00031204 g     O .rwdata	00000004 alt_errno
000250f0 g     F .text	000000c4 _fwalk
0002a438 g     F .text	00000084 .hidden __divsi3
00024800 g     F .text	00000124 _malloc_trim_r
0002f414 g       *ABS*	00000000 __CTOR_END__
00027930 g     F .text	000000dc strcmp
0002f414 g       *ABS*	00000000 __flash_rodata_start
0002f414 g       *ABS*	00000000 __DTOR_LIST__
0002b780 g     F .text	00000088 .hidden __nedf2
0002d648 g     F .text	00000038 alt_irq_init
0002d3b4 g     F .text	00000064 alt_release_fd
0002f5f8 g     O .rodata	00000100 .hidden __clz_tab
00032d04 g     O .bss	00000004 _PathLocale
0002f080 g     F .text	00000014 atexit
00029054 g     F .text	00000060 _write_r
00025330 g     F .text	00000018 setlocale
000311dc g     O .rwdata	00000004 _impure_ptr
00032d20 g     O .bss	00000004 alt_argc
000241b8 g     F .text	0000021c __sflush_r
0002e41c g     F .text	00000060 _do_dtors
0002531c g     F .text	00000008 __locale_cjk_lang
00020020 g       .exceptions	00000000 alt_irq_entry
00026cf0 g     F .text	00000064 __ulp
000247e8 g     F .text	00000018 __fp_unlock_all
000311f0 g     O .rwdata	00000008 alt_fs_list
00020020 g       *ABS*	00000000 __ram_exceptions_start
00025348 g     F .text	0000000c localeconv
0002e4b0 g     F .text	00000050 alt_ic_isr_register
00031218 g       *ABS*	00000000 _edata
00032e64 g       *ABS*	00000000 _end
000292d0 g     F .text	00000164 __fputwc
00020244 g       *ABS*	00000000 __ram_exceptions_end
0002dc10 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0002e5a0 g     F .text	000000a4 alt_ic_irq_disable
00027850 g     F .text	0000007c __swrite
000311e8 g     O .rwdata	00000004 __malloc_trim_threshold
00025310 g     F .text	0000000c __locale_msgcharset
0002f094 g     F .text	00000038 exit
000251b4 g     F .text	000000c4 _fwalk_reent
00026af4 g     F .text	000001fc __mdiff
0002a4bc g     F .text	00000074 .hidden __modsi3
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
000247c4 g     F .text	00000004 __sfp_lock_release
0002f3e0 g     F .text	00000034 _exit
0002e140 g     F .text	00000140 alt_alarm_start
00025354 g     F .text	000001bc __smakebuf_r
00020474 g     F .text	00000098 strlen
0002e9dc g     F .text	00000158 open
0002b808 g     F .text	000000dc .hidden __gedf2
000311ec g     O .rwdata	00000004 __wctomb
00027b08 g     F .text	00000018 __sprint_r
0002e47c g     F .text	00000034 alt_icache_flush_all
0003120c g     O .rwdata	00000004 alt_priority_mask
0002e500 g     F .text	000000a0 alt_ic_irq_enable
00022704 g     F .text	0000001c __vfprintf_internal
0002992c g     F .text	0000005c _wctomb_r
0002c0f0 g     F .text	000008fc .hidden __subdf3
00026528 g     F .text	000000b0 __lo0bits
00031210 g     O .rwdata	00000008 alt_alarm_list
0002e3bc g     F .text	00000060 _do_ctors
0002983c g     F .text	000000c0 wcrtomb
0002cca4 g     F .text	000000d0 close
0002cffc g     F .text	00000084 alt_load
00029458 g     F .text	00000080 fputwc
000247c8 g     F .text	00000004 __sinit_lock_acquire
0002629c g     F .text	00000120 __multadd
00026274 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <__alt_data_end+0xfffe0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08409114 	ori	at,at,580
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__reset-0x20000>

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201d00 	call	201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0fffb17 	ldw	r3,-20(fp)
   20130:	e0bffc17 	ldw	r2,-16(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001426 	beq	r2,zero,2018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2013c:	008000f4 	movhi	r2,3
   20140:	108b5904 	addi	r2,r2,11620
   20144:	e0fffd17 	ldw	r3,-12(fp)
   20148:	180690fa 	slli	r3,r3,3
   2014c:	10c5883a 	add	r2,r2,r3
   20150:	10c00017 	ldw	r3,0(r2)
   20154:	008000f4 	movhi	r2,3
   20158:	108b5904 	addi	r2,r2,11620
   2015c:	e13ffd17 	ldw	r4,-12(fp)
   20160:	200890fa 	slli	r4,r4,3
   20164:	1105883a 	add	r2,r2,r4
   20168:	10800104 	addi	r2,r2,4
   2016c:	10800017 	ldw	r2,0(r2)
   20170:	1009883a 	mov	r4,r2
   20174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   20178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   2017c:	0005313a 	rdctl	r2,ipending
   20180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20184:	e0bfff17 	ldw	r2,-4(fp)
   20188:	00000706 	br	201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   2018c:	e0bffc17 	ldw	r2,-16(fp)
   20190:	1085883a 	add	r2,r2,r2
   20194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   20198:	e0bffd17 	ldw	r2,-12(fp)
   2019c:	10800044 	addi	r2,r2,1
   201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a4:	003fe106 	br	2012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
   201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   201ac:	e0bffb17 	ldw	r2,-20(fp)
   201b0:	103fdb1e 	bne	r2,zero,20120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201b4:	0001883a 	nop
}
   201b8:	0001883a 	nop
   201bc:	e037883a 	mov	sp,fp
   201c0:	dfc00117 	ldw	ra,4(sp)
   201c4:	df000017 	ldw	fp,0(sp)
   201c8:	dec00204 	addi	sp,sp,8
   201cc:	f800283a 	ret

000201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201d0:	defffb04 	addi	sp,sp,-20
   201d4:	dfc00415 	stw	ra,16(sp)
   201d8:	df000315 	stw	fp,12(sp)
   201dc:	df000304 	addi	fp,sp,12
   201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201e4:	000531fa 	rdctl	r2,exception
   201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201ec:	e0bffd17 	ldw	r2,-12(fp)
   201f0:	10801f0c 	andi	r2,r2,124
   201f4:	1004d0ba 	srli	r2,r2,2
   201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   201fc:	0005333a 	rdctl	r2,badaddr
   20200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   20204:	d0a6d817 	ldw	r2,-25760(gp)
   20208:	10000726 	beq	r2,zero,20228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   2020c:	d0a6d817 	ldw	r2,-25760(gp)
   20210:	e0fffd17 	ldw	r3,-12(fp)
   20214:	e1bffe17 	ldw	r6,-8(fp)
   20218:	e17fff17 	ldw	r5,-4(fp)
   2021c:	1809883a 	mov	r4,r3
   20220:	103ee83a 	callr	r2
   20224:	00000206 	br	20230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   20228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   2022c:	0005883a 	mov	r2,zero
}
   20230:	e037883a 	mov	sp,fp
   20234:	dfc00117 	ldw	ra,4(sp)
   20238:	df000017 	ldw	fp,0(sp)
   2023c:	dec00204 	addi	sp,sp,8
   20240:	f800283a 	ret

Disassembly of section .text:

00020244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   20244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   20248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   2024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   20250:	00bffd16 	blt	zero,r2,20248 <__alt_data_end+0xfffe0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20254:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   20258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   2025c:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20260:	d6a47614 	ori	gp,gp,37336
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20264:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   20268:	108b4114 	ori	r2,r2,11524

    movhi r3, %hi(__bss_end)
   2026c:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20270:	18cb9914 	ori	r3,r3,11876

    beq r2, r3, 1f
   20274:	10c00326 	beq	r2,r3,20284 <_start+0x40>

0:
    stw zero, (r2)
   20278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   2027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20280:	10fffd36 	bltu	r2,r3,20278 <__alt_data_end+0xfffe0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20284:	002cffc0 	call	2cffc <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   20288:	002d1a40 	call	2d1a4 <alt_main>

0002028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   2028c:	003fff06 	br	2028c <__alt_data_end+0xfffe028c>

00020290 <main>:
#include <inttypes.h>
#include <stdio.h>
#include "system.h"
#include "io.h"

int main() {
   20290:	defffc04 	addi	sp,sp,-16
   20294:	dfc00315 	stw	ra,12(sp)
   20298:	df000215 	stw	fp,8(sp)
   2029c:	df000204 	addi	fp,sp,8
//  printf("Hello from Nios II!\n");
//  uint32_t pio_data = IORD_ALTERA_AVALON_PIO_DATA(PIO_0_BASE);
//  return 0;
	uint8_t count = 0x01;
   202a0:	00800044 	movi	r2,1
   202a4:	e0bfff05 	stb	r2,-4(fp)
	int delay;
	printf("Hello from Nios II!\n");
   202a8:	010000f4 	movhi	r4,3
   202ac:	213d0504 	addi	r4,r4,-3052
   202b0:	00204600 	call	20460 <puts>


	// Switch
	IOWR_8DIRECT(PARALLELPORT2_0_BASE, 0x0, 0x0);
   202b4:	0007883a 	mov	r3,zero
   202b8:	00800134 	movhi	r2,4
   202bc:	10840604 	addi	r2,r2,4120
   202c0:	10c00025 	stbio	r3,0(r2)

	// LED
	IOWR_8DIRECT(PARALLELPORT2_1_BASE, 0x0, 0xFF);
   202c4:	00ffffc4 	movi	r3,-1
   202c8:	00800134 	movhi	r2,4
   202cc:	10840404 	addi	r2,r2,4112
   202d0:	10c00025 	stbio	r3,0(r2)

	while (1) {
//		IOWR(PARALLELPORT2_1_BASE, 0x0, count);
		delay = 0;
   202d4:	e03ffe15 	stw	zero,-8(fp)
		while (delay < 800000) {
   202d8:	00000306 	br	202e8 <main+0x58>
			delay++;
   202dc:	e0bffe17 	ldw	r2,-8(fp)
   202e0:	10800044 	addi	r2,r2,1
   202e4:	e0bffe15 	stw	r2,-8(fp)
	IOWR_8DIRECT(PARALLELPORT2_1_BASE, 0x0, 0xFF);

	while (1) {
//		IOWR(PARALLELPORT2_1_BASE, 0x0, count);
		delay = 0;
		while (delay < 800000) {
   202e8:	e0fffe17 	ldw	r3,-8(fp)
   202ec:	00800334 	movhi	r2,12
   202f0:	108d3fc4 	addi	r2,r2,13567
   202f4:	10fff90e 	bge	r2,r3,202dc <__alt_data_end+0xfffe02dc>
		}
//		count = count << 1;
//		if(count == 0x0) count = 0x01;

		// 0 is switch
		uint8_t pio_data = IORD_8DIRECT(PARALLELPORT2_0_BASE, 0x1);
   202f8:	00800134 	movhi	r2,4
   202fc:	10840644 	addi	r2,r2,4121
   20300:	10800023 	ldbuio	r2,0(r2)
   20304:	10803fcc 	andi	r2,r2,255
   20308:	e0bfff45 	stb	r2,-3(fp)

		IOWR_8DIRECT(PARALLELPORT2_1_BASE, 0x2, pio_data);
   2030c:	e0ffff43 	ldbu	r3,-3(fp)
   20310:	00800134 	movhi	r2,4
   20314:	10840484 	addi	r2,r2,4114
   20318:	10c00025 	stbio	r3,0(r2)
		printf( " %d", pio_data);
   2031c:	e0bfff43 	ldbu	r2,-3(fp)
   20320:	100b883a 	mov	r5,r2
   20324:	010000f4 	movhi	r4,3
   20328:	213d0a04 	addi	r4,r4,-3032
   2032c:	00203640 	call	20364 <printf>
	}
   20330:	003fe806 	br	202d4 <__alt_data_end+0xfffe02d4>

00020334 <_printf_r>:
   20334:	defffd04 	addi	sp,sp,-12
   20338:	2805883a 	mov	r2,r5
   2033c:	dfc00015 	stw	ra,0(sp)
   20340:	d9800115 	stw	r6,4(sp)
   20344:	d9c00215 	stw	r7,8(sp)
   20348:	21400217 	ldw	r5,8(r4)
   2034c:	d9c00104 	addi	r7,sp,4
   20350:	100d883a 	mov	r6,r2
   20354:	002050c0 	call	2050c <___vfprintf_internal_r>
   20358:	dfc00017 	ldw	ra,0(sp)
   2035c:	dec00304 	addi	sp,sp,12
   20360:	f800283a 	ret

00020364 <printf>:
   20364:	defffc04 	addi	sp,sp,-16
   20368:	dfc00015 	stw	ra,0(sp)
   2036c:	d9400115 	stw	r5,4(sp)
   20370:	d9800215 	stw	r6,8(sp)
   20374:	d9c00315 	stw	r7,12(sp)
   20378:	008000f4 	movhi	r2,3
   2037c:	10847704 	addi	r2,r2,4572
   20380:	10800017 	ldw	r2,0(r2)
   20384:	200b883a 	mov	r5,r4
   20388:	d9800104 	addi	r6,sp,4
   2038c:	11000217 	ldw	r4,8(r2)
   20390:	00227040 	call	22704 <__vfprintf_internal>
   20394:	dfc00017 	ldw	ra,0(sp)
   20398:	dec00404 	addi	sp,sp,16
   2039c:	f800283a 	ret

000203a0 <_puts_r>:
   203a0:	defff604 	addi	sp,sp,-40
   203a4:	dc000715 	stw	r16,28(sp)
   203a8:	2021883a 	mov	r16,r4
   203ac:	2809883a 	mov	r4,r5
   203b0:	dc400815 	stw	r17,32(sp)
   203b4:	dfc00915 	stw	ra,36(sp)
   203b8:	2823883a 	mov	r17,r5
   203bc:	00204740 	call	20474 <strlen>
   203c0:	10c00044 	addi	r3,r2,1
   203c4:	d8800115 	stw	r2,4(sp)
   203c8:	008000f4 	movhi	r2,3
   203cc:	10bd0b04 	addi	r2,r2,-3028
   203d0:	d8800215 	stw	r2,8(sp)
   203d4:	00800044 	movi	r2,1
   203d8:	d8800315 	stw	r2,12(sp)
   203dc:	00800084 	movi	r2,2
   203e0:	dc400015 	stw	r17,0(sp)
   203e4:	d8c00615 	stw	r3,24(sp)
   203e8:	dec00415 	stw	sp,16(sp)
   203ec:	d8800515 	stw	r2,20(sp)
   203f0:	80000226 	beq	r16,zero,203fc <_puts_r+0x5c>
   203f4:	80800e17 	ldw	r2,56(r16)
   203f8:	10001426 	beq	r2,zero,2044c <_puts_r+0xac>
   203fc:	81400217 	ldw	r5,8(r16)
   20400:	2880030b 	ldhu	r2,12(r5)
   20404:	10c8000c 	andi	r3,r2,8192
   20408:	1800061e 	bne	r3,zero,20424 <_puts_r+0x84>
   2040c:	29001917 	ldw	r4,100(r5)
   20410:	00f7ffc4 	movi	r3,-8193
   20414:	10880014 	ori	r2,r2,8192
   20418:	20c6703a 	and	r3,r4,r3
   2041c:	2880030d 	sth	r2,12(r5)
   20420:	28c01915 	stw	r3,100(r5)
   20424:	d9800404 	addi	r6,sp,16
   20428:	8009883a 	mov	r4,r16
   2042c:	0024c340 	call	24c34 <__sfvwrite_r>
   20430:	1000091e 	bne	r2,zero,20458 <_puts_r+0xb8>
   20434:	00800284 	movi	r2,10
   20438:	dfc00917 	ldw	ra,36(sp)
   2043c:	dc400817 	ldw	r17,32(sp)
   20440:	dc000717 	ldw	r16,28(sp)
   20444:	dec00a04 	addi	sp,sp,40
   20448:	f800283a 	ret
   2044c:	8009883a 	mov	r4,r16
   20450:	00247b00 	call	247b0 <__sinit>
   20454:	003fe906 	br	203fc <__alt_data_end+0xfffe03fc>
   20458:	00bfffc4 	movi	r2,-1
   2045c:	003ff606 	br	20438 <__alt_data_end+0xfffe0438>

00020460 <puts>:
   20460:	008000f4 	movhi	r2,3
   20464:	10847704 	addi	r2,r2,4572
   20468:	200b883a 	mov	r5,r4
   2046c:	11000017 	ldw	r4,0(r2)
   20470:	00203a01 	jmpi	203a0 <_puts_r>

00020474 <strlen>:
   20474:	208000cc 	andi	r2,r4,3
   20478:	10002026 	beq	r2,zero,204fc <strlen+0x88>
   2047c:	20800007 	ldb	r2,0(r4)
   20480:	10002026 	beq	r2,zero,20504 <strlen+0x90>
   20484:	2005883a 	mov	r2,r4
   20488:	00000206 	br	20494 <strlen+0x20>
   2048c:	10c00007 	ldb	r3,0(r2)
   20490:	18001826 	beq	r3,zero,204f4 <strlen+0x80>
   20494:	10800044 	addi	r2,r2,1
   20498:	10c000cc 	andi	r3,r2,3
   2049c:	183ffb1e 	bne	r3,zero,2048c <__alt_data_end+0xfffe048c>
   204a0:	10c00017 	ldw	r3,0(r2)
   204a4:	01ffbff4 	movhi	r7,65279
   204a8:	39ffbfc4 	addi	r7,r7,-257
   204ac:	00ca303a 	nor	r5,zero,r3
   204b0:	01a02074 	movhi	r6,32897
   204b4:	19c7883a 	add	r3,r3,r7
   204b8:	31a02004 	addi	r6,r6,-32640
   204bc:	1946703a 	and	r3,r3,r5
   204c0:	1986703a 	and	r3,r3,r6
   204c4:	1800091e 	bne	r3,zero,204ec <strlen+0x78>
   204c8:	10800104 	addi	r2,r2,4
   204cc:	10c00017 	ldw	r3,0(r2)
   204d0:	19cb883a 	add	r5,r3,r7
   204d4:	00c6303a 	nor	r3,zero,r3
   204d8:	28c6703a 	and	r3,r5,r3
   204dc:	1986703a 	and	r3,r3,r6
   204e0:	183ff926 	beq	r3,zero,204c8 <__alt_data_end+0xfffe04c8>
   204e4:	00000106 	br	204ec <strlen+0x78>
   204e8:	10800044 	addi	r2,r2,1
   204ec:	10c00007 	ldb	r3,0(r2)
   204f0:	183ffd1e 	bne	r3,zero,204e8 <__alt_data_end+0xfffe04e8>
   204f4:	1105c83a 	sub	r2,r2,r4
   204f8:	f800283a 	ret
   204fc:	2005883a 	mov	r2,r4
   20500:	003fe706 	br	204a0 <__alt_data_end+0xfffe04a0>
   20504:	0005883a 	mov	r2,zero
   20508:	f800283a 	ret

0002050c <___vfprintf_internal_r>:
   2050c:	deffb804 	addi	sp,sp,-288
   20510:	dfc04715 	stw	ra,284(sp)
   20514:	ddc04515 	stw	r23,276(sp)
   20518:	dd404315 	stw	r21,268(sp)
   2051c:	d9002c15 	stw	r4,176(sp)
   20520:	282f883a 	mov	r23,r5
   20524:	302b883a 	mov	r21,r6
   20528:	d9c02d15 	stw	r7,180(sp)
   2052c:	df004615 	stw	fp,280(sp)
   20530:	dd804415 	stw	r22,272(sp)
   20534:	dd004215 	stw	r20,264(sp)
   20538:	dcc04115 	stw	r19,260(sp)
   2053c:	dc804015 	stw	r18,256(sp)
   20540:	dc403f15 	stw	r17,252(sp)
   20544:	dc003e15 	stw	r16,248(sp)
   20548:	00253240 	call	25324 <_localeconv_r>
   2054c:	10800017 	ldw	r2,0(r2)
   20550:	1009883a 	mov	r4,r2
   20554:	d8803415 	stw	r2,208(sp)
   20558:	00204740 	call	20474 <strlen>
   2055c:	d8803715 	stw	r2,220(sp)
   20560:	d8802c17 	ldw	r2,176(sp)
   20564:	10000226 	beq	r2,zero,20570 <___vfprintf_internal_r+0x64>
   20568:	10800e17 	ldw	r2,56(r2)
   2056c:	1000f926 	beq	r2,zero,20954 <___vfprintf_internal_r+0x448>
   20570:	b880030b 	ldhu	r2,12(r23)
   20574:	10c8000c 	andi	r3,r2,8192
   20578:	1800061e 	bne	r3,zero,20594 <___vfprintf_internal_r+0x88>
   2057c:	b9001917 	ldw	r4,100(r23)
   20580:	00f7ffc4 	movi	r3,-8193
   20584:	10880014 	ori	r2,r2,8192
   20588:	20c6703a 	and	r3,r4,r3
   2058c:	b880030d 	sth	r2,12(r23)
   20590:	b8c01915 	stw	r3,100(r23)
   20594:	10c0020c 	andi	r3,r2,8
   20598:	1800c126 	beq	r3,zero,208a0 <___vfprintf_internal_r+0x394>
   2059c:	b8c00417 	ldw	r3,16(r23)
   205a0:	1800bf26 	beq	r3,zero,208a0 <___vfprintf_internal_r+0x394>
   205a4:	1080068c 	andi	r2,r2,26
   205a8:	00c00284 	movi	r3,10
   205ac:	10c0c426 	beq	r2,r3,208c0 <___vfprintf_internal_r+0x3b4>
   205b0:	d8c00404 	addi	r3,sp,16
   205b4:	050000f4 	movhi	r20,3
   205b8:	d9001e04 	addi	r4,sp,120
   205bc:	a53d1c84 	addi	r20,r20,-2958
   205c0:	d8c01e15 	stw	r3,120(sp)
   205c4:	d8002015 	stw	zero,128(sp)
   205c8:	d8001f15 	stw	zero,124(sp)
   205cc:	d8003315 	stw	zero,204(sp)
   205d0:	d8003615 	stw	zero,216(sp)
   205d4:	d8003815 	stw	zero,224(sp)
   205d8:	1811883a 	mov	r8,r3
   205dc:	d8003915 	stw	zero,228(sp)
   205e0:	d8003a15 	stw	zero,232(sp)
   205e4:	d8002f15 	stw	zero,188(sp)
   205e8:	d9002815 	stw	r4,160(sp)
   205ec:	a8800007 	ldb	r2,0(r21)
   205f0:	10027b26 	beq	r2,zero,20fe0 <___vfprintf_internal_r+0xad4>
   205f4:	00c00944 	movi	r3,37
   205f8:	a821883a 	mov	r16,r21
   205fc:	10c0021e 	bne	r2,r3,20608 <___vfprintf_internal_r+0xfc>
   20600:	00001406 	br	20654 <___vfprintf_internal_r+0x148>
   20604:	10c00326 	beq	r2,r3,20614 <___vfprintf_internal_r+0x108>
   20608:	84000044 	addi	r16,r16,1
   2060c:	80800007 	ldb	r2,0(r16)
   20610:	103ffc1e 	bne	r2,zero,20604 <__alt_data_end+0xfffe0604>
   20614:	8563c83a 	sub	r17,r16,r21
   20618:	88000e26 	beq	r17,zero,20654 <___vfprintf_internal_r+0x148>
   2061c:	d8c02017 	ldw	r3,128(sp)
   20620:	d8801f17 	ldw	r2,124(sp)
   20624:	45400015 	stw	r21,0(r8)
   20628:	1c47883a 	add	r3,r3,r17
   2062c:	10800044 	addi	r2,r2,1
   20630:	d8c02015 	stw	r3,128(sp)
   20634:	44400115 	stw	r17,4(r8)
   20638:	d8801f15 	stw	r2,124(sp)
   2063c:	00c001c4 	movi	r3,7
   20640:	1880a716 	blt	r3,r2,208e0 <___vfprintf_internal_r+0x3d4>
   20644:	42000204 	addi	r8,r8,8
   20648:	d9402f17 	ldw	r5,188(sp)
   2064c:	2c4b883a 	add	r5,r5,r17
   20650:	d9402f15 	stw	r5,188(sp)
   20654:	80800007 	ldb	r2,0(r16)
   20658:	1000a826 	beq	r2,zero,208fc <___vfprintf_internal_r+0x3f0>
   2065c:	84400047 	ldb	r17,1(r16)
   20660:	00bfffc4 	movi	r2,-1
   20664:	85400044 	addi	r21,r16,1
   20668:	d8002785 	stb	zero,158(sp)
   2066c:	0007883a 	mov	r3,zero
   20670:	000f883a 	mov	r7,zero
   20674:	d8802915 	stw	r2,164(sp)
   20678:	d8003115 	stw	zero,196(sp)
   2067c:	0025883a 	mov	r18,zero
   20680:	01401604 	movi	r5,88
   20684:	01800244 	movi	r6,9
   20688:	02800a84 	movi	r10,42
   2068c:	02401b04 	movi	r9,108
   20690:	ad400044 	addi	r21,r21,1
   20694:	88bff804 	addi	r2,r17,-32
   20698:	28830436 	bltu	r5,r2,212ac <___vfprintf_internal_r+0xda0>
   2069c:	100490ba 	slli	r2,r2,2
   206a0:	010000b4 	movhi	r4,2
   206a4:	2101ad04 	addi	r4,r4,1716
   206a8:	1105883a 	add	r2,r2,r4
   206ac:	10800017 	ldw	r2,0(r2)
   206b0:	1000683a 	jmp	r2
   206b4:	000211cc 	andi	zero,zero,2119
   206b8:	000212ac 	andhi	zero,zero,2122
   206bc:	000212ac 	andhi	zero,zero,2122
   206c0:	000211ec 	andhi	zero,zero,2119
   206c4:	000212ac 	andhi	zero,zero,2122
   206c8:	000212ac 	andhi	zero,zero,2122
   206cc:	000212ac 	andhi	zero,zero,2122
   206d0:	000212ac 	andhi	zero,zero,2122
   206d4:	000212ac 	andhi	zero,zero,2122
   206d8:	000212ac 	andhi	zero,zero,2122
   206dc:	00020960 	cmpeqi	zero,zero,2085
   206e0:	00021108 	cmpgei	zero,zero,2116
   206e4:	000212ac 	andhi	zero,zero,2122
   206e8:	00020828 	cmpgeui	zero,zero,2080
   206ec:	00020988 	cmpgei	zero,zero,2086
   206f0:	000212ac 	andhi	zero,zero,2122
   206f4:	000209c8 	cmpgei	zero,zero,2087
   206f8:	000209d4 	movui	zero,2087
   206fc:	000209d4 	movui	zero,2087
   20700:	000209d4 	movui	zero,2087
   20704:	000209d4 	movui	zero,2087
   20708:	000209d4 	movui	zero,2087
   2070c:	000209d4 	movui	zero,2087
   20710:	000209d4 	movui	zero,2087
   20714:	000209d4 	movui	zero,2087
   20718:	000209d4 	movui	zero,2087
   2071c:	000212ac 	andhi	zero,zero,2122
   20720:	000212ac 	andhi	zero,zero,2122
   20724:	000212ac 	andhi	zero,zero,2122
   20728:	000212ac 	andhi	zero,zero,2122
   2072c:	000212ac 	andhi	zero,zero,2122
   20730:	000212ac 	andhi	zero,zero,2122
   20734:	000212ac 	andhi	zero,zero,2122
   20738:	000212ac 	andhi	zero,zero,2122
   2073c:	000212ac 	andhi	zero,zero,2122
   20740:	000212ac 	andhi	zero,zero,2122
   20744:	00020a08 	cmpgei	zero,zero,2088
   20748:	00020ac4 	movi	zero,2091
   2074c:	000212ac 	andhi	zero,zero,2122
   20750:	00020ac4 	movi	zero,2091
   20754:	000212ac 	andhi	zero,zero,2122
   20758:	000212ac 	andhi	zero,zero,2122
   2075c:	000212ac 	andhi	zero,zero,2122
   20760:	000212ac 	andhi	zero,zero,2122
   20764:	00020b64 	muli	zero,zero,2093
   20768:	000212ac 	andhi	zero,zero,2122
   2076c:	000212ac 	andhi	zero,zero,2122
   20770:	00020b70 	cmpltui	zero,zero,2093
   20774:	000212ac 	andhi	zero,zero,2122
   20778:	000212ac 	andhi	zero,zero,2122
   2077c:	000212ac 	andhi	zero,zero,2122
   20780:	000212ac 	andhi	zero,zero,2122
   20784:	000212ac 	andhi	zero,zero,2122
   20788:	00020fe8 	cmpgeui	zero,zero,2111
   2078c:	000212ac 	andhi	zero,zero,2122
   20790:	000212ac 	andhi	zero,zero,2122
   20794:	00021048 	cmpgei	zero,zero,2113
   20798:	000212ac 	andhi	zero,zero,2122
   2079c:	000212ac 	andhi	zero,zero,2122
   207a0:	000212ac 	andhi	zero,zero,2122
   207a4:	000212ac 	andhi	zero,zero,2122
   207a8:	000212ac 	andhi	zero,zero,2122
   207ac:	000212ac 	andhi	zero,zero,2122
   207b0:	000212ac 	andhi	zero,zero,2122
   207b4:	000212ac 	andhi	zero,zero,2122
   207b8:	000212ac 	andhi	zero,zero,2122
   207bc:	000212ac 	andhi	zero,zero,2122
   207c0:	00021258 	cmpnei	zero,zero,2121
   207c4:	000211f8 	rdprs	zero,zero,2119
   207c8:	00020ac4 	movi	zero,2091
   207cc:	00020ac4 	movi	zero,2091
   207d0:	00020ac4 	movi	zero,2091
   207d4:	00021208 	cmpgei	zero,zero,2120
   207d8:	000211f8 	rdprs	zero,zero,2119
   207dc:	000212ac 	andhi	zero,zero,2122
   207e0:	000212ac 	andhi	zero,zero,2122
   207e4:	00021214 	movui	zero,2120
   207e8:	000212ac 	andhi	zero,zero,2122
   207ec:	00021224 	muli	zero,zero,2120
   207f0:	000210f8 	rdprs	zero,zero,2115
   207f4:	00020834 	movhi	zero,2080
   207f8:	00021118 	cmpnei	zero,zero,2116
   207fc:	000212ac 	andhi	zero,zero,2122
   20800:	00021124 	muli	zero,zero,2116
   20804:	000212ac 	andhi	zero,zero,2122
   20808:	00021180 	call	2118 <__reset-0x1dee8>
   2080c:	000212ac 	andhi	zero,zero,2122
   20810:	000212ac 	andhi	zero,zero,2122
   20814:	00021190 	cmplti	zero,zero,2118
   20818:	d9003117 	ldw	r4,196(sp)
   2081c:	d8802d15 	stw	r2,180(sp)
   20820:	0109c83a 	sub	r4,zero,r4
   20824:	d9003115 	stw	r4,196(sp)
   20828:	94800114 	ori	r18,r18,4
   2082c:	ac400007 	ldb	r17,0(r21)
   20830:	003f9706 	br	20690 <__alt_data_end+0xfffe0690>
   20834:	00800c04 	movi	r2,48
   20838:	d9002d17 	ldw	r4,180(sp)
   2083c:	d9402917 	ldw	r5,164(sp)
   20840:	d8802705 	stb	r2,156(sp)
   20844:	00801e04 	movi	r2,120
   20848:	d8802745 	stb	r2,157(sp)
   2084c:	d8002785 	stb	zero,158(sp)
   20850:	20c00104 	addi	r3,r4,4
   20854:	24c00017 	ldw	r19,0(r4)
   20858:	002d883a 	mov	r22,zero
   2085c:	90800094 	ori	r2,r18,2
   20860:	28029a16 	blt	r5,zero,212cc <___vfprintf_internal_r+0xdc0>
   20864:	00bfdfc4 	movi	r2,-129
   20868:	90a4703a 	and	r18,r18,r2
   2086c:	d8c02d15 	stw	r3,180(sp)
   20870:	94800094 	ori	r18,r18,2
   20874:	9802871e 	bne	r19,zero,21294 <___vfprintf_internal_r+0xd88>
   20878:	008000f4 	movhi	r2,3
   2087c:	10bd1504 	addi	r2,r2,-2988
   20880:	d8803915 	stw	r2,228(sp)
   20884:	04401e04 	movi	r17,120
   20888:	d8802917 	ldw	r2,164(sp)
   2088c:	0039883a 	mov	fp,zero
   20890:	1001e926 	beq	r2,zero,21038 <___vfprintf_internal_r+0xb2c>
   20894:	0027883a 	mov	r19,zero
   20898:	002d883a 	mov	r22,zero
   2089c:	00020506 	br	210b4 <___vfprintf_internal_r+0xba8>
   208a0:	d9002c17 	ldw	r4,176(sp)
   208a4:	b80b883a 	mov	r5,r23
   208a8:	00227dc0 	call	227dc <__swsetup_r>
   208ac:	1005ac1e 	bne	r2,zero,21f60 <___vfprintf_internal_r+0x1a54>
   208b0:	b880030b 	ldhu	r2,12(r23)
   208b4:	00c00284 	movi	r3,10
   208b8:	1080068c 	andi	r2,r2,26
   208bc:	10ff3c1e 	bne	r2,r3,205b0 <__alt_data_end+0xfffe05b0>
   208c0:	b880038f 	ldh	r2,14(r23)
   208c4:	103f3a16 	blt	r2,zero,205b0 <__alt_data_end+0xfffe05b0>
   208c8:	d9c02d17 	ldw	r7,180(sp)
   208cc:	d9002c17 	ldw	r4,176(sp)
   208d0:	a80d883a 	mov	r6,r21
   208d4:	b80b883a 	mov	r5,r23
   208d8:	00227200 	call	22720 <__sbprintf>
   208dc:	00001106 	br	20924 <___vfprintf_internal_r+0x418>
   208e0:	d9002c17 	ldw	r4,176(sp)
   208e4:	d9801e04 	addi	r6,sp,120
   208e8:	b80b883a 	mov	r5,r23
   208ec:	0027b080 	call	27b08 <__sprint_r>
   208f0:	1000081e 	bne	r2,zero,20914 <___vfprintf_internal_r+0x408>
   208f4:	da000404 	addi	r8,sp,16
   208f8:	003f5306 	br	20648 <__alt_data_end+0xfffe0648>
   208fc:	d8802017 	ldw	r2,128(sp)
   20900:	10000426 	beq	r2,zero,20914 <___vfprintf_internal_r+0x408>
   20904:	d9002c17 	ldw	r4,176(sp)
   20908:	d9801e04 	addi	r6,sp,120
   2090c:	b80b883a 	mov	r5,r23
   20910:	0027b080 	call	27b08 <__sprint_r>
   20914:	b880030b 	ldhu	r2,12(r23)
   20918:	1080100c 	andi	r2,r2,64
   2091c:	1005901e 	bne	r2,zero,21f60 <___vfprintf_internal_r+0x1a54>
   20920:	d8802f17 	ldw	r2,188(sp)
   20924:	dfc04717 	ldw	ra,284(sp)
   20928:	df004617 	ldw	fp,280(sp)
   2092c:	ddc04517 	ldw	r23,276(sp)
   20930:	dd804417 	ldw	r22,272(sp)
   20934:	dd404317 	ldw	r21,268(sp)
   20938:	dd004217 	ldw	r20,264(sp)
   2093c:	dcc04117 	ldw	r19,260(sp)
   20940:	dc804017 	ldw	r18,256(sp)
   20944:	dc403f17 	ldw	r17,252(sp)
   20948:	dc003e17 	ldw	r16,248(sp)
   2094c:	dec04804 	addi	sp,sp,288
   20950:	f800283a 	ret
   20954:	d9002c17 	ldw	r4,176(sp)
   20958:	00247b00 	call	247b0 <__sinit>
   2095c:	003f0406 	br	20570 <__alt_data_end+0xfffe0570>
   20960:	d8802d17 	ldw	r2,180(sp)
   20964:	d9002d17 	ldw	r4,180(sp)
   20968:	10800017 	ldw	r2,0(r2)
   2096c:	d8803115 	stw	r2,196(sp)
   20970:	20800104 	addi	r2,r4,4
   20974:	d9003117 	ldw	r4,196(sp)
   20978:	203fa716 	blt	r4,zero,20818 <__alt_data_end+0xfffe0818>
   2097c:	d8802d15 	stw	r2,180(sp)
   20980:	ac400007 	ldb	r17,0(r21)
   20984:	003f4206 	br	20690 <__alt_data_end+0xfffe0690>
   20988:	ac400007 	ldb	r17,0(r21)
   2098c:	aac00044 	addi	r11,r21,1
   20990:	8a872826 	beq	r17,r10,22634 <___vfprintf_internal_r+0x2128>
   20994:	88bff404 	addi	r2,r17,-48
   20998:	0009883a 	mov	r4,zero
   2099c:	30867d36 	bltu	r6,r2,22394 <___vfprintf_internal_r+0x1e88>
   209a0:	5c400007 	ldb	r17,0(r11)
   209a4:	210002a4 	muli	r4,r4,10
   209a8:	5d400044 	addi	r21,r11,1
   209ac:	a817883a 	mov	r11,r21
   209b0:	2089883a 	add	r4,r4,r2
   209b4:	88bff404 	addi	r2,r17,-48
   209b8:	30bff92e 	bgeu	r6,r2,209a0 <__alt_data_end+0xfffe09a0>
   209bc:	2005c916 	blt	r4,zero,220e4 <___vfprintf_internal_r+0x1bd8>
   209c0:	d9002915 	stw	r4,164(sp)
   209c4:	003f3306 	br	20694 <__alt_data_end+0xfffe0694>
   209c8:	94802014 	ori	r18,r18,128
   209cc:	ac400007 	ldb	r17,0(r21)
   209d0:	003f2f06 	br	20690 <__alt_data_end+0xfffe0690>
   209d4:	a809883a 	mov	r4,r21
   209d8:	d8003115 	stw	zero,196(sp)
   209dc:	88bff404 	addi	r2,r17,-48
   209e0:	0017883a 	mov	r11,zero
   209e4:	24400007 	ldb	r17,0(r4)
   209e8:	5ac002a4 	muli	r11,r11,10
   209ec:	ad400044 	addi	r21,r21,1
   209f0:	a809883a 	mov	r4,r21
   209f4:	12d7883a 	add	r11,r2,r11
   209f8:	88bff404 	addi	r2,r17,-48
   209fc:	30bff92e 	bgeu	r6,r2,209e4 <__alt_data_end+0xfffe09e4>
   20a00:	dac03115 	stw	r11,196(sp)
   20a04:	003f2306 	br	20694 <__alt_data_end+0xfffe0694>
   20a08:	18c03fcc 	andi	r3,r3,255
   20a0c:	18072b1e 	bne	r3,zero,226bc <___vfprintf_internal_r+0x21b0>
   20a10:	94800414 	ori	r18,r18,16
   20a14:	9080080c 	andi	r2,r18,32
   20a18:	10037b26 	beq	r2,zero,21808 <___vfprintf_internal_r+0x12fc>
   20a1c:	d9402d17 	ldw	r5,180(sp)
   20a20:	28800117 	ldw	r2,4(r5)
   20a24:	2cc00017 	ldw	r19,0(r5)
   20a28:	29400204 	addi	r5,r5,8
   20a2c:	d9402d15 	stw	r5,180(sp)
   20a30:	102d883a 	mov	r22,r2
   20a34:	10044b16 	blt	r2,zero,21b64 <___vfprintf_internal_r+0x1658>
   20a38:	d9402917 	ldw	r5,164(sp)
   20a3c:	df002783 	ldbu	fp,158(sp)
   20a40:	2803bc16 	blt	r5,zero,21934 <___vfprintf_internal_r+0x1428>
   20a44:	00ffdfc4 	movi	r3,-129
   20a48:	9d84b03a 	or	r2,r19,r22
   20a4c:	90e4703a 	and	r18,r18,r3
   20a50:	10017726 	beq	r2,zero,21030 <___vfprintf_internal_r+0xb24>
   20a54:	b0038326 	beq	r22,zero,21864 <___vfprintf_internal_r+0x1358>
   20a58:	dc402a15 	stw	r17,168(sp)
   20a5c:	dc001e04 	addi	r16,sp,120
   20a60:	b023883a 	mov	r17,r22
   20a64:	402d883a 	mov	r22,r8
   20a68:	9809883a 	mov	r4,r19
   20a6c:	880b883a 	mov	r5,r17
   20a70:	01800284 	movi	r6,10
   20a74:	000f883a 	mov	r7,zero
   20a78:	0029f000 	call	29f00 <__umoddi3>
   20a7c:	10800c04 	addi	r2,r2,48
   20a80:	843fffc4 	addi	r16,r16,-1
   20a84:	9809883a 	mov	r4,r19
   20a88:	880b883a 	mov	r5,r17
   20a8c:	80800005 	stb	r2,0(r16)
   20a90:	01800284 	movi	r6,10
   20a94:	000f883a 	mov	r7,zero
   20a98:	00299880 	call	29988 <__udivdi3>
   20a9c:	1027883a 	mov	r19,r2
   20aa0:	10c4b03a 	or	r2,r2,r3
   20aa4:	1823883a 	mov	r17,r3
   20aa8:	103fef1e 	bne	r2,zero,20a68 <__alt_data_end+0xfffe0a68>
   20aac:	d8c02817 	ldw	r3,160(sp)
   20ab0:	dc402a17 	ldw	r17,168(sp)
   20ab4:	b011883a 	mov	r8,r22
   20ab8:	1c07c83a 	sub	r3,r3,r16
   20abc:	d8c02e15 	stw	r3,184(sp)
   20ac0:	00005906 	br	20c28 <___vfprintf_internal_r+0x71c>
   20ac4:	18c03fcc 	andi	r3,r3,255
   20ac8:	1806fa1e 	bne	r3,zero,226b4 <___vfprintf_internal_r+0x21a8>
   20acc:	9080020c 	andi	r2,r18,8
   20ad0:	10048a26 	beq	r2,zero,21cfc <___vfprintf_internal_r+0x17f0>
   20ad4:	d8c02d17 	ldw	r3,180(sp)
   20ad8:	d9002d17 	ldw	r4,180(sp)
   20adc:	d9402d17 	ldw	r5,180(sp)
   20ae0:	18c00017 	ldw	r3,0(r3)
   20ae4:	21000117 	ldw	r4,4(r4)
   20ae8:	29400204 	addi	r5,r5,8
   20aec:	d8c03615 	stw	r3,216(sp)
   20af0:	d9003815 	stw	r4,224(sp)
   20af4:	d9402d15 	stw	r5,180(sp)
   20af8:	d9003617 	ldw	r4,216(sp)
   20afc:	d9403817 	ldw	r5,224(sp)
   20b00:	da003d15 	stw	r8,244(sp)
   20b04:	04000044 	movi	r16,1
   20b08:	002772c0 	call	2772c <__fpclassifyd>
   20b0c:	da003d17 	ldw	r8,244(sp)
   20b10:	14041f1e 	bne	r2,r16,21b90 <___vfprintf_internal_r+0x1684>
   20b14:	d9003617 	ldw	r4,216(sp)
   20b18:	d9403817 	ldw	r5,224(sp)
   20b1c:	000d883a 	mov	r6,zero
   20b20:	000f883a 	mov	r7,zero
   20b24:	002b8e40 	call	2b8e4 <__ledf2>
   20b28:	da003d17 	ldw	r8,244(sp)
   20b2c:	1005be16 	blt	r2,zero,22228 <___vfprintf_internal_r+0x1d1c>
   20b30:	df002783 	ldbu	fp,158(sp)
   20b34:	008011c4 	movi	r2,71
   20b38:	1445330e 	bge	r2,r17,22008 <___vfprintf_internal_r+0x1afc>
   20b3c:	040000f4 	movhi	r16,3
   20b40:	843d0d04 	addi	r16,r16,-3020
   20b44:	00c000c4 	movi	r3,3
   20b48:	00bfdfc4 	movi	r2,-129
   20b4c:	d8c02a15 	stw	r3,168(sp)
   20b50:	90a4703a 	and	r18,r18,r2
   20b54:	d8c02e15 	stw	r3,184(sp)
   20b58:	d8002915 	stw	zero,164(sp)
   20b5c:	d8003215 	stw	zero,200(sp)
   20b60:	00003706 	br	20c40 <___vfprintf_internal_r+0x734>
   20b64:	94800214 	ori	r18,r18,8
   20b68:	ac400007 	ldb	r17,0(r21)
   20b6c:	003ec806 	br	20690 <__alt_data_end+0xfffe0690>
   20b70:	18c03fcc 	andi	r3,r3,255
   20b74:	1806db1e 	bne	r3,zero,226e4 <___vfprintf_internal_r+0x21d8>
   20b78:	94800414 	ori	r18,r18,16
   20b7c:	9080080c 	andi	r2,r18,32
   20b80:	1002d826 	beq	r2,zero,216e4 <___vfprintf_internal_r+0x11d8>
   20b84:	d9402d17 	ldw	r5,180(sp)
   20b88:	d8c02917 	ldw	r3,164(sp)
   20b8c:	d8002785 	stb	zero,158(sp)
   20b90:	28800204 	addi	r2,r5,8
   20b94:	2cc00017 	ldw	r19,0(r5)
   20b98:	2d800117 	ldw	r22,4(r5)
   20b9c:	18048f16 	blt	r3,zero,21ddc <___vfprintf_internal_r+0x18d0>
   20ba0:	013fdfc4 	movi	r4,-129
   20ba4:	9d86b03a 	or	r3,r19,r22
   20ba8:	d8802d15 	stw	r2,180(sp)
   20bac:	9124703a 	and	r18,r18,r4
   20bb0:	1802d91e 	bne	r3,zero,21718 <___vfprintf_internal_r+0x120c>
   20bb4:	d8c02917 	ldw	r3,164(sp)
   20bb8:	0039883a 	mov	fp,zero
   20bbc:	1805c326 	beq	r3,zero,222cc <___vfprintf_internal_r+0x1dc0>
   20bc0:	0027883a 	mov	r19,zero
   20bc4:	002d883a 	mov	r22,zero
   20bc8:	dc001e04 	addi	r16,sp,120
   20bcc:	9806d0fa 	srli	r3,r19,3
   20bd0:	b008977a 	slli	r4,r22,29
   20bd4:	b02cd0fa 	srli	r22,r22,3
   20bd8:	9cc001cc 	andi	r19,r19,7
   20bdc:	98800c04 	addi	r2,r19,48
   20be0:	843fffc4 	addi	r16,r16,-1
   20be4:	20e6b03a 	or	r19,r4,r3
   20be8:	80800005 	stb	r2,0(r16)
   20bec:	9d86b03a 	or	r3,r19,r22
   20bf0:	183ff61e 	bne	r3,zero,20bcc <__alt_data_end+0xfffe0bcc>
   20bf4:	90c0004c 	andi	r3,r18,1
   20bf8:	18013b26 	beq	r3,zero,210e8 <___vfprintf_internal_r+0xbdc>
   20bfc:	10803fcc 	andi	r2,r2,255
   20c00:	1080201c 	xori	r2,r2,128
   20c04:	10bfe004 	addi	r2,r2,-128
   20c08:	00c00c04 	movi	r3,48
   20c0c:	10c13626 	beq	r2,r3,210e8 <___vfprintf_internal_r+0xbdc>
   20c10:	80ffffc5 	stb	r3,-1(r16)
   20c14:	d8c02817 	ldw	r3,160(sp)
   20c18:	80bfffc4 	addi	r2,r16,-1
   20c1c:	1021883a 	mov	r16,r2
   20c20:	1887c83a 	sub	r3,r3,r2
   20c24:	d8c02e15 	stw	r3,184(sp)
   20c28:	d8802e17 	ldw	r2,184(sp)
   20c2c:	d9002917 	ldw	r4,164(sp)
   20c30:	1100010e 	bge	r2,r4,20c38 <___vfprintf_internal_r+0x72c>
   20c34:	2005883a 	mov	r2,r4
   20c38:	d8802a15 	stw	r2,168(sp)
   20c3c:	d8003215 	stw	zero,200(sp)
   20c40:	e7003fcc 	andi	fp,fp,255
   20c44:	e700201c 	xori	fp,fp,128
   20c48:	e73fe004 	addi	fp,fp,-128
   20c4c:	e0000326 	beq	fp,zero,20c5c <___vfprintf_internal_r+0x750>
   20c50:	d8c02a17 	ldw	r3,168(sp)
   20c54:	18c00044 	addi	r3,r3,1
   20c58:	d8c02a15 	stw	r3,168(sp)
   20c5c:	90c0008c 	andi	r3,r18,2
   20c60:	d8c02b15 	stw	r3,172(sp)
   20c64:	18000326 	beq	r3,zero,20c74 <___vfprintf_internal_r+0x768>
   20c68:	d8c02a17 	ldw	r3,168(sp)
   20c6c:	18c00084 	addi	r3,r3,2
   20c70:	d8c02a15 	stw	r3,168(sp)
   20c74:	90c0210c 	andi	r3,r18,132
   20c78:	d8c03015 	stw	r3,192(sp)
   20c7c:	1801a31e 	bne	r3,zero,2130c <___vfprintf_internal_r+0xe00>
   20c80:	d9003117 	ldw	r4,196(sp)
   20c84:	d8c02a17 	ldw	r3,168(sp)
   20c88:	20e7c83a 	sub	r19,r4,r3
   20c8c:	04c19f0e 	bge	zero,r19,2130c <___vfprintf_internal_r+0xe00>
   20c90:	02400404 	movi	r9,16
   20c94:	d8c02017 	ldw	r3,128(sp)
   20c98:	d8801f17 	ldw	r2,124(sp)
   20c9c:	4cc50d0e 	bge	r9,r19,220d4 <___vfprintf_internal_r+0x1bc8>
   20ca0:	014000f4 	movhi	r5,3
   20ca4:	297d2084 	addi	r5,r5,-2942
   20ca8:	dc403b15 	stw	r17,236(sp)
   20cac:	d9403515 	stw	r5,212(sp)
   20cb0:	9823883a 	mov	r17,r19
   20cb4:	482d883a 	mov	r22,r9
   20cb8:	9027883a 	mov	r19,r18
   20cbc:	070001c4 	movi	fp,7
   20cc0:	8025883a 	mov	r18,r16
   20cc4:	dc002c17 	ldw	r16,176(sp)
   20cc8:	00000306 	br	20cd8 <___vfprintf_internal_r+0x7cc>
   20ccc:	8c7ffc04 	addi	r17,r17,-16
   20cd0:	42000204 	addi	r8,r8,8
   20cd4:	b440130e 	bge	r22,r17,20d24 <___vfprintf_internal_r+0x818>
   20cd8:	010000f4 	movhi	r4,3
   20cdc:	18c00404 	addi	r3,r3,16
   20ce0:	10800044 	addi	r2,r2,1
   20ce4:	213d2084 	addi	r4,r4,-2942
   20ce8:	41000015 	stw	r4,0(r8)
   20cec:	45800115 	stw	r22,4(r8)
   20cf0:	d8c02015 	stw	r3,128(sp)
   20cf4:	d8801f15 	stw	r2,124(sp)
   20cf8:	e0bff40e 	bge	fp,r2,20ccc <__alt_data_end+0xfffe0ccc>
   20cfc:	d9801e04 	addi	r6,sp,120
   20d00:	b80b883a 	mov	r5,r23
   20d04:	8009883a 	mov	r4,r16
   20d08:	0027b080 	call	27b08 <__sprint_r>
   20d0c:	103f011e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   20d10:	8c7ffc04 	addi	r17,r17,-16
   20d14:	d8c02017 	ldw	r3,128(sp)
   20d18:	d8801f17 	ldw	r2,124(sp)
   20d1c:	da000404 	addi	r8,sp,16
   20d20:	b47fed16 	blt	r22,r17,20cd8 <__alt_data_end+0xfffe0cd8>
   20d24:	9021883a 	mov	r16,r18
   20d28:	9825883a 	mov	r18,r19
   20d2c:	8827883a 	mov	r19,r17
   20d30:	dc403b17 	ldw	r17,236(sp)
   20d34:	d9403517 	ldw	r5,212(sp)
   20d38:	98c7883a 	add	r3,r19,r3
   20d3c:	10800044 	addi	r2,r2,1
   20d40:	41400015 	stw	r5,0(r8)
   20d44:	44c00115 	stw	r19,4(r8)
   20d48:	d8c02015 	stw	r3,128(sp)
   20d4c:	d8801f15 	stw	r2,124(sp)
   20d50:	010001c4 	movi	r4,7
   20d54:	2082a316 	blt	r4,r2,217e4 <___vfprintf_internal_r+0x12d8>
   20d58:	df002787 	ldb	fp,158(sp)
   20d5c:	42000204 	addi	r8,r8,8
   20d60:	e0000c26 	beq	fp,zero,20d94 <___vfprintf_internal_r+0x888>
   20d64:	d8801f17 	ldw	r2,124(sp)
   20d68:	d9002784 	addi	r4,sp,158
   20d6c:	18c00044 	addi	r3,r3,1
   20d70:	10800044 	addi	r2,r2,1
   20d74:	41000015 	stw	r4,0(r8)
   20d78:	01000044 	movi	r4,1
   20d7c:	41000115 	stw	r4,4(r8)
   20d80:	d8c02015 	stw	r3,128(sp)
   20d84:	d8801f15 	stw	r2,124(sp)
   20d88:	010001c4 	movi	r4,7
   20d8c:	20823c16 	blt	r4,r2,21680 <___vfprintf_internal_r+0x1174>
   20d90:	42000204 	addi	r8,r8,8
   20d94:	d8802b17 	ldw	r2,172(sp)
   20d98:	10000c26 	beq	r2,zero,20dcc <___vfprintf_internal_r+0x8c0>
   20d9c:	d8801f17 	ldw	r2,124(sp)
   20da0:	d9002704 	addi	r4,sp,156
   20da4:	18c00084 	addi	r3,r3,2
   20da8:	10800044 	addi	r2,r2,1
   20dac:	41000015 	stw	r4,0(r8)
   20db0:	01000084 	movi	r4,2
   20db4:	41000115 	stw	r4,4(r8)
   20db8:	d8c02015 	stw	r3,128(sp)
   20dbc:	d8801f15 	stw	r2,124(sp)
   20dc0:	010001c4 	movi	r4,7
   20dc4:	20823616 	blt	r4,r2,216a0 <___vfprintf_internal_r+0x1194>
   20dc8:	42000204 	addi	r8,r8,8
   20dcc:	d9003017 	ldw	r4,192(sp)
   20dd0:	00802004 	movi	r2,128
   20dd4:	20819926 	beq	r4,r2,2143c <___vfprintf_internal_r+0xf30>
   20dd8:	d9402917 	ldw	r5,164(sp)
   20ddc:	d8802e17 	ldw	r2,184(sp)
   20de0:	28adc83a 	sub	r22,r5,r2
   20de4:	0580310e 	bge	zero,r22,20eac <___vfprintf_internal_r+0x9a0>
   20de8:	07000404 	movi	fp,16
   20dec:	d8801f17 	ldw	r2,124(sp)
   20df0:	e584140e 	bge	fp,r22,21e44 <___vfprintf_internal_r+0x1938>
   20df4:	014000f4 	movhi	r5,3
   20df8:	297d1c84 	addi	r5,r5,-2958
   20dfc:	dc402915 	stw	r17,164(sp)
   20e00:	d9402b15 	stw	r5,172(sp)
   20e04:	b023883a 	mov	r17,r22
   20e08:	04c001c4 	movi	r19,7
   20e0c:	a82d883a 	mov	r22,r21
   20e10:	902b883a 	mov	r21,r18
   20e14:	8025883a 	mov	r18,r16
   20e18:	dc002c17 	ldw	r16,176(sp)
   20e1c:	00000306 	br	20e2c <___vfprintf_internal_r+0x920>
   20e20:	8c7ffc04 	addi	r17,r17,-16
   20e24:	42000204 	addi	r8,r8,8
   20e28:	e440110e 	bge	fp,r17,20e70 <___vfprintf_internal_r+0x964>
   20e2c:	18c00404 	addi	r3,r3,16
   20e30:	10800044 	addi	r2,r2,1
   20e34:	45000015 	stw	r20,0(r8)
   20e38:	47000115 	stw	fp,4(r8)
   20e3c:	d8c02015 	stw	r3,128(sp)
   20e40:	d8801f15 	stw	r2,124(sp)
   20e44:	98bff60e 	bge	r19,r2,20e20 <__alt_data_end+0xfffe0e20>
   20e48:	d9801e04 	addi	r6,sp,120
   20e4c:	b80b883a 	mov	r5,r23
   20e50:	8009883a 	mov	r4,r16
   20e54:	0027b080 	call	27b08 <__sprint_r>
   20e58:	103eae1e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   20e5c:	8c7ffc04 	addi	r17,r17,-16
   20e60:	d8c02017 	ldw	r3,128(sp)
   20e64:	d8801f17 	ldw	r2,124(sp)
   20e68:	da000404 	addi	r8,sp,16
   20e6c:	e47fef16 	blt	fp,r17,20e2c <__alt_data_end+0xfffe0e2c>
   20e70:	9021883a 	mov	r16,r18
   20e74:	a825883a 	mov	r18,r21
   20e78:	b02b883a 	mov	r21,r22
   20e7c:	882d883a 	mov	r22,r17
   20e80:	dc402917 	ldw	r17,164(sp)
   20e84:	d9002b17 	ldw	r4,172(sp)
   20e88:	1d87883a 	add	r3,r3,r22
   20e8c:	10800044 	addi	r2,r2,1
   20e90:	41000015 	stw	r4,0(r8)
   20e94:	45800115 	stw	r22,4(r8)
   20e98:	d8c02015 	stw	r3,128(sp)
   20e9c:	d8801f15 	stw	r2,124(sp)
   20ea0:	010001c4 	movi	r4,7
   20ea4:	2081ee16 	blt	r4,r2,21660 <___vfprintf_internal_r+0x1154>
   20ea8:	42000204 	addi	r8,r8,8
   20eac:	9080400c 	andi	r2,r18,256
   20eb0:	1001181e 	bne	r2,zero,21314 <___vfprintf_internal_r+0xe08>
   20eb4:	d9402e17 	ldw	r5,184(sp)
   20eb8:	d8801f17 	ldw	r2,124(sp)
   20ebc:	44000015 	stw	r16,0(r8)
   20ec0:	1947883a 	add	r3,r3,r5
   20ec4:	10800044 	addi	r2,r2,1
   20ec8:	41400115 	stw	r5,4(r8)
   20ecc:	d8c02015 	stw	r3,128(sp)
   20ed0:	d8801f15 	stw	r2,124(sp)
   20ed4:	010001c4 	movi	r4,7
   20ed8:	2081d316 	blt	r4,r2,21628 <___vfprintf_internal_r+0x111c>
   20edc:	42000204 	addi	r8,r8,8
   20ee0:	9480010c 	andi	r18,r18,4
   20ee4:	90003226 	beq	r18,zero,20fb0 <___vfprintf_internal_r+0xaa4>
   20ee8:	d9403117 	ldw	r5,196(sp)
   20eec:	d8802a17 	ldw	r2,168(sp)
   20ef0:	28a1c83a 	sub	r16,r5,r2
   20ef4:	04002e0e 	bge	zero,r16,20fb0 <___vfprintf_internal_r+0xaa4>
   20ef8:	04400404 	movi	r17,16
   20efc:	d8801f17 	ldw	r2,124(sp)
   20f00:	8c04a20e 	bge	r17,r16,2218c <___vfprintf_internal_r+0x1c80>
   20f04:	014000f4 	movhi	r5,3
   20f08:	297d2084 	addi	r5,r5,-2942
   20f0c:	d9403515 	stw	r5,212(sp)
   20f10:	048001c4 	movi	r18,7
   20f14:	dcc02c17 	ldw	r19,176(sp)
   20f18:	00000306 	br	20f28 <___vfprintf_internal_r+0xa1c>
   20f1c:	843ffc04 	addi	r16,r16,-16
   20f20:	42000204 	addi	r8,r8,8
   20f24:	8c00130e 	bge	r17,r16,20f74 <___vfprintf_internal_r+0xa68>
   20f28:	010000f4 	movhi	r4,3
   20f2c:	18c00404 	addi	r3,r3,16
   20f30:	10800044 	addi	r2,r2,1
   20f34:	213d2084 	addi	r4,r4,-2942
   20f38:	41000015 	stw	r4,0(r8)
   20f3c:	44400115 	stw	r17,4(r8)
   20f40:	d8c02015 	stw	r3,128(sp)
   20f44:	d8801f15 	stw	r2,124(sp)
   20f48:	90bff40e 	bge	r18,r2,20f1c <__alt_data_end+0xfffe0f1c>
   20f4c:	d9801e04 	addi	r6,sp,120
   20f50:	b80b883a 	mov	r5,r23
   20f54:	9809883a 	mov	r4,r19
   20f58:	0027b080 	call	27b08 <__sprint_r>
   20f5c:	103e6d1e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   20f60:	843ffc04 	addi	r16,r16,-16
   20f64:	d8c02017 	ldw	r3,128(sp)
   20f68:	d8801f17 	ldw	r2,124(sp)
   20f6c:	da000404 	addi	r8,sp,16
   20f70:	8c3fed16 	blt	r17,r16,20f28 <__alt_data_end+0xfffe0f28>
   20f74:	d9403517 	ldw	r5,212(sp)
   20f78:	1c07883a 	add	r3,r3,r16
   20f7c:	10800044 	addi	r2,r2,1
   20f80:	41400015 	stw	r5,0(r8)
   20f84:	44000115 	stw	r16,4(r8)
   20f88:	d8c02015 	stw	r3,128(sp)
   20f8c:	d8801f15 	stw	r2,124(sp)
   20f90:	010001c4 	movi	r4,7
   20f94:	2080060e 	bge	r4,r2,20fb0 <___vfprintf_internal_r+0xaa4>
   20f98:	d9002c17 	ldw	r4,176(sp)
   20f9c:	d9801e04 	addi	r6,sp,120
   20fa0:	b80b883a 	mov	r5,r23
   20fa4:	0027b080 	call	27b08 <__sprint_r>
   20fa8:	103e5a1e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   20fac:	d8c02017 	ldw	r3,128(sp)
   20fb0:	d8803117 	ldw	r2,196(sp)
   20fb4:	d9002a17 	ldw	r4,168(sp)
   20fb8:	1100010e 	bge	r2,r4,20fc0 <___vfprintf_internal_r+0xab4>
   20fbc:	2005883a 	mov	r2,r4
   20fc0:	d9402f17 	ldw	r5,188(sp)
   20fc4:	288b883a 	add	r5,r5,r2
   20fc8:	d9402f15 	stw	r5,188(sp)
   20fcc:	18019e1e 	bne	r3,zero,21648 <___vfprintf_internal_r+0x113c>
   20fd0:	a8800007 	ldb	r2,0(r21)
   20fd4:	d8001f15 	stw	zero,124(sp)
   20fd8:	da000404 	addi	r8,sp,16
   20fdc:	103d851e 	bne	r2,zero,205f4 <__alt_data_end+0xfffe05f4>
   20fe0:	a821883a 	mov	r16,r21
   20fe4:	003d9b06 	br	20654 <__alt_data_end+0xfffe0654>
   20fe8:	18c03fcc 	andi	r3,r3,255
   20fec:	1805c11e 	bne	r3,zero,226f4 <___vfprintf_internal_r+0x21e8>
   20ff0:	94800414 	ori	r18,r18,16
   20ff4:	9080080c 	andi	r2,r18,32
   20ff8:	10020c26 	beq	r2,zero,2182c <___vfprintf_internal_r+0x1320>
   20ffc:	d8802d17 	ldw	r2,180(sp)
   21000:	d9002917 	ldw	r4,164(sp)
   21004:	d8002785 	stb	zero,158(sp)
   21008:	10c00204 	addi	r3,r2,8
   2100c:	14c00017 	ldw	r19,0(r2)
   21010:	15800117 	ldw	r22,4(r2)
   21014:	20040f16 	blt	r4,zero,22054 <___vfprintf_internal_r+0x1b48>
   21018:	013fdfc4 	movi	r4,-129
   2101c:	9d84b03a 	or	r2,r19,r22
   21020:	d8c02d15 	stw	r3,180(sp)
   21024:	9124703a 	and	r18,r18,r4
   21028:	0039883a 	mov	fp,zero
   2102c:	103e891e 	bne	r2,zero,20a54 <__alt_data_end+0xfffe0a54>
   21030:	d9002917 	ldw	r4,164(sp)
   21034:	2002c11e 	bne	r4,zero,21b3c <___vfprintf_internal_r+0x1630>
   21038:	d8002915 	stw	zero,164(sp)
   2103c:	d8002e15 	stw	zero,184(sp)
   21040:	dc001e04 	addi	r16,sp,120
   21044:	003ef806 	br	20c28 <__alt_data_end+0xfffe0c28>
   21048:	18c03fcc 	andi	r3,r3,255
   2104c:	18059d1e 	bne	r3,zero,226c4 <___vfprintf_internal_r+0x21b8>
   21050:	014000f4 	movhi	r5,3
   21054:	297d1004 	addi	r5,r5,-3008
   21058:	d9403915 	stw	r5,228(sp)
   2105c:	9080080c 	andi	r2,r18,32
   21060:	10005226 	beq	r2,zero,211ac <___vfprintf_internal_r+0xca0>
   21064:	d8802d17 	ldw	r2,180(sp)
   21068:	14c00017 	ldw	r19,0(r2)
   2106c:	15800117 	ldw	r22,4(r2)
   21070:	10800204 	addi	r2,r2,8
   21074:	d8802d15 	stw	r2,180(sp)
   21078:	9080004c 	andi	r2,r18,1
   2107c:	10019026 	beq	r2,zero,216c0 <___vfprintf_internal_r+0x11b4>
   21080:	9d84b03a 	or	r2,r19,r22
   21084:	10036926 	beq	r2,zero,21e2c <___vfprintf_internal_r+0x1920>
   21088:	d8c02917 	ldw	r3,164(sp)
   2108c:	00800c04 	movi	r2,48
   21090:	d8802705 	stb	r2,156(sp)
   21094:	dc402745 	stb	r17,157(sp)
   21098:	d8002785 	stb	zero,158(sp)
   2109c:	90800094 	ori	r2,r18,2
   210a0:	18045d16 	blt	r3,zero,22218 <___vfprintf_internal_r+0x1d0c>
   210a4:	00bfdfc4 	movi	r2,-129
   210a8:	90a4703a 	and	r18,r18,r2
   210ac:	94800094 	ori	r18,r18,2
   210b0:	0039883a 	mov	fp,zero
   210b4:	d9003917 	ldw	r4,228(sp)
   210b8:	dc001e04 	addi	r16,sp,120
   210bc:	988003cc 	andi	r2,r19,15
   210c0:	b006973a 	slli	r3,r22,28
   210c4:	2085883a 	add	r2,r4,r2
   210c8:	9826d13a 	srli	r19,r19,4
   210cc:	10800003 	ldbu	r2,0(r2)
   210d0:	b02cd13a 	srli	r22,r22,4
   210d4:	843fffc4 	addi	r16,r16,-1
   210d8:	1ce6b03a 	or	r19,r3,r19
   210dc:	80800005 	stb	r2,0(r16)
   210e0:	9d84b03a 	or	r2,r19,r22
   210e4:	103ff51e 	bne	r2,zero,210bc <__alt_data_end+0xfffe10bc>
   210e8:	d8c02817 	ldw	r3,160(sp)
   210ec:	1c07c83a 	sub	r3,r3,r16
   210f0:	d8c02e15 	stw	r3,184(sp)
   210f4:	003ecc06 	br	20c28 <__alt_data_end+0xfffe0c28>
   210f8:	18c03fcc 	andi	r3,r3,255
   210fc:	183e9f26 	beq	r3,zero,20b7c <__alt_data_end+0xfffe0b7c>
   21100:	d9c02785 	stb	r7,158(sp)
   21104:	003e9d06 	br	20b7c <__alt_data_end+0xfffe0b7c>
   21108:	00c00044 	movi	r3,1
   2110c:	01c00ac4 	movi	r7,43
   21110:	ac400007 	ldb	r17,0(r21)
   21114:	003d5e06 	br	20690 <__alt_data_end+0xfffe0690>
   21118:	94800814 	ori	r18,r18,32
   2111c:	ac400007 	ldb	r17,0(r21)
   21120:	003d5b06 	br	20690 <__alt_data_end+0xfffe0690>
   21124:	d8c02d17 	ldw	r3,180(sp)
   21128:	d8002785 	stb	zero,158(sp)
   2112c:	1c000017 	ldw	r16,0(r3)
   21130:	1cc00104 	addi	r19,r3,4
   21134:	80041926 	beq	r16,zero,2219c <___vfprintf_internal_r+0x1c90>
   21138:	d9002917 	ldw	r4,164(sp)
   2113c:	2003d016 	blt	r4,zero,22080 <___vfprintf_internal_r+0x1b74>
   21140:	200d883a 	mov	r6,r4
   21144:	000b883a 	mov	r5,zero
   21148:	8009883a 	mov	r4,r16
   2114c:	da003d15 	stw	r8,244(sp)
   21150:	0025d1c0 	call	25d1c <memchr>
   21154:	da003d17 	ldw	r8,244(sp)
   21158:	10045426 	beq	r2,zero,222ac <___vfprintf_internal_r+0x1da0>
   2115c:	1405c83a 	sub	r2,r2,r16
   21160:	d8802e15 	stw	r2,184(sp)
   21164:	1003cc16 	blt	r2,zero,22098 <___vfprintf_internal_r+0x1b8c>
   21168:	df002783 	ldbu	fp,158(sp)
   2116c:	d8802a15 	stw	r2,168(sp)
   21170:	dcc02d15 	stw	r19,180(sp)
   21174:	d8002915 	stw	zero,164(sp)
   21178:	d8003215 	stw	zero,200(sp)
   2117c:	003eb006 	br	20c40 <__alt_data_end+0xfffe0c40>
   21180:	18c03fcc 	andi	r3,r3,255
   21184:	183f9b26 	beq	r3,zero,20ff4 <__alt_data_end+0xfffe0ff4>
   21188:	d9c02785 	stb	r7,158(sp)
   2118c:	003f9906 	br	20ff4 <__alt_data_end+0xfffe0ff4>
   21190:	18c03fcc 	andi	r3,r3,255
   21194:	1805551e 	bne	r3,zero,226ec <___vfprintf_internal_r+0x21e0>
   21198:	014000f4 	movhi	r5,3
   2119c:	297d1504 	addi	r5,r5,-2988
   211a0:	d9403915 	stw	r5,228(sp)
   211a4:	9080080c 	andi	r2,r18,32
   211a8:	103fae1e 	bne	r2,zero,21064 <__alt_data_end+0xfffe1064>
   211ac:	9080040c 	andi	r2,r18,16
   211b0:	1002de26 	beq	r2,zero,21d2c <___vfprintf_internal_r+0x1820>
   211b4:	d8c02d17 	ldw	r3,180(sp)
   211b8:	002d883a 	mov	r22,zero
   211bc:	1cc00017 	ldw	r19,0(r3)
   211c0:	18c00104 	addi	r3,r3,4
   211c4:	d8c02d15 	stw	r3,180(sp)
   211c8:	003fab06 	br	21078 <__alt_data_end+0xfffe1078>
   211cc:	38803fcc 	andi	r2,r7,255
   211d0:	1080201c 	xori	r2,r2,128
   211d4:	10bfe004 	addi	r2,r2,-128
   211d8:	1002d21e 	bne	r2,zero,21d24 <___vfprintf_internal_r+0x1818>
   211dc:	00c00044 	movi	r3,1
   211e0:	01c00804 	movi	r7,32
   211e4:	ac400007 	ldb	r17,0(r21)
   211e8:	003d2906 	br	20690 <__alt_data_end+0xfffe0690>
   211ec:	94800054 	ori	r18,r18,1
   211f0:	ac400007 	ldb	r17,0(r21)
   211f4:	003d2606 	br	20690 <__alt_data_end+0xfffe0690>
   211f8:	18c03fcc 	andi	r3,r3,255
   211fc:	183e0526 	beq	r3,zero,20a14 <__alt_data_end+0xfffe0a14>
   21200:	d9c02785 	stb	r7,158(sp)
   21204:	003e0306 	br	20a14 <__alt_data_end+0xfffe0a14>
   21208:	94801014 	ori	r18,r18,64
   2120c:	ac400007 	ldb	r17,0(r21)
   21210:	003d1f06 	br	20690 <__alt_data_end+0xfffe0690>
   21214:	ac400007 	ldb	r17,0(r21)
   21218:	8a438726 	beq	r17,r9,22038 <___vfprintf_internal_r+0x1b2c>
   2121c:	94800414 	ori	r18,r18,16
   21220:	003d1b06 	br	20690 <__alt_data_end+0xfffe0690>
   21224:	18c03fcc 	andi	r3,r3,255
   21228:	1805341e 	bne	r3,zero,226fc <___vfprintf_internal_r+0x21f0>
   2122c:	9080080c 	andi	r2,r18,32
   21230:	1002cd26 	beq	r2,zero,21d68 <___vfprintf_internal_r+0x185c>
   21234:	d9402d17 	ldw	r5,180(sp)
   21238:	d9002f17 	ldw	r4,188(sp)
   2123c:	28800017 	ldw	r2,0(r5)
   21240:	2007d7fa 	srai	r3,r4,31
   21244:	29400104 	addi	r5,r5,4
   21248:	d9402d15 	stw	r5,180(sp)
   2124c:	11000015 	stw	r4,0(r2)
   21250:	10c00115 	stw	r3,4(r2)
   21254:	003ce506 	br	205ec <__alt_data_end+0xfffe05ec>
   21258:	d8c02d17 	ldw	r3,180(sp)
   2125c:	d9002d17 	ldw	r4,180(sp)
   21260:	d8002785 	stb	zero,158(sp)
   21264:	18800017 	ldw	r2,0(r3)
   21268:	21000104 	addi	r4,r4,4
   2126c:	00c00044 	movi	r3,1
   21270:	d8c02a15 	stw	r3,168(sp)
   21274:	d8801405 	stb	r2,80(sp)
   21278:	d9002d15 	stw	r4,180(sp)
   2127c:	d8c02e15 	stw	r3,184(sp)
   21280:	d8002915 	stw	zero,164(sp)
   21284:	d8003215 	stw	zero,200(sp)
   21288:	dc001404 	addi	r16,sp,80
   2128c:	0039883a 	mov	fp,zero
   21290:	003e7206 	br	20c5c <__alt_data_end+0xfffe0c5c>
   21294:	010000f4 	movhi	r4,3
   21298:	213d1504 	addi	r4,r4,-2988
   2129c:	0039883a 	mov	fp,zero
   212a0:	d9003915 	stw	r4,228(sp)
   212a4:	04401e04 	movi	r17,120
   212a8:	003f8206 	br	210b4 <__alt_data_end+0xfffe10b4>
   212ac:	18c03fcc 	andi	r3,r3,255
   212b0:	1805061e 	bne	r3,zero,226cc <___vfprintf_internal_r+0x21c0>
   212b4:	883d9126 	beq	r17,zero,208fc <__alt_data_end+0xfffe08fc>
   212b8:	00c00044 	movi	r3,1
   212bc:	d8c02a15 	stw	r3,168(sp)
   212c0:	dc401405 	stb	r17,80(sp)
   212c4:	d8002785 	stb	zero,158(sp)
   212c8:	003fec06 	br	2127c <__alt_data_end+0xfffe127c>
   212cc:	014000f4 	movhi	r5,3
   212d0:	297d1504 	addi	r5,r5,-2988
   212d4:	d9403915 	stw	r5,228(sp)
   212d8:	d8c02d15 	stw	r3,180(sp)
   212dc:	1025883a 	mov	r18,r2
   212e0:	04401e04 	movi	r17,120
   212e4:	9d84b03a 	or	r2,r19,r22
   212e8:	1000fc1e 	bne	r2,zero,216dc <___vfprintf_internal_r+0x11d0>
   212ec:	0039883a 	mov	fp,zero
   212f0:	00800084 	movi	r2,2
   212f4:	10803fcc 	andi	r2,r2,255
   212f8:	00c00044 	movi	r3,1
   212fc:	10c20f26 	beq	r2,r3,21b3c <___vfprintf_internal_r+0x1630>
   21300:	00c00084 	movi	r3,2
   21304:	10fd6326 	beq	r2,r3,20894 <__alt_data_end+0xfffe0894>
   21308:	003e2d06 	br	20bc0 <__alt_data_end+0xfffe0bc0>
   2130c:	d8c02017 	ldw	r3,128(sp)
   21310:	003e9306 	br	20d60 <__alt_data_end+0xfffe0d60>
   21314:	00801944 	movi	r2,101
   21318:	14407e0e 	bge	r2,r17,21514 <___vfprintf_internal_r+0x1008>
   2131c:	d9003617 	ldw	r4,216(sp)
   21320:	d9403817 	ldw	r5,224(sp)
   21324:	000d883a 	mov	r6,zero
   21328:	000f883a 	mov	r7,zero
   2132c:	d8c03c15 	stw	r3,240(sp)
   21330:	da003d15 	stw	r8,244(sp)
   21334:	002b7800 	call	2b780 <__eqdf2>
   21338:	d8c03c17 	ldw	r3,240(sp)
   2133c:	da003d17 	ldw	r8,244(sp)
   21340:	1000f71e 	bne	r2,zero,21720 <___vfprintf_internal_r+0x1214>
   21344:	d8801f17 	ldw	r2,124(sp)
   21348:	010000f4 	movhi	r4,3
   2134c:	213d1c04 	addi	r4,r4,-2960
   21350:	18c00044 	addi	r3,r3,1
   21354:	10800044 	addi	r2,r2,1
   21358:	41000015 	stw	r4,0(r8)
   2135c:	01000044 	movi	r4,1
   21360:	41000115 	stw	r4,4(r8)
   21364:	d8c02015 	stw	r3,128(sp)
   21368:	d8801f15 	stw	r2,124(sp)
   2136c:	010001c4 	movi	r4,7
   21370:	2082b816 	blt	r4,r2,21e54 <___vfprintf_internal_r+0x1948>
   21374:	42000204 	addi	r8,r8,8
   21378:	d8802617 	ldw	r2,152(sp)
   2137c:	d9403317 	ldw	r5,204(sp)
   21380:	11400216 	blt	r2,r5,2138c <___vfprintf_internal_r+0xe80>
   21384:	9080004c 	andi	r2,r18,1
   21388:	103ed526 	beq	r2,zero,20ee0 <__alt_data_end+0xfffe0ee0>
   2138c:	d8803717 	ldw	r2,220(sp)
   21390:	d9003417 	ldw	r4,208(sp)
   21394:	d9403717 	ldw	r5,220(sp)
   21398:	1887883a 	add	r3,r3,r2
   2139c:	d8801f17 	ldw	r2,124(sp)
   213a0:	41000015 	stw	r4,0(r8)
   213a4:	41400115 	stw	r5,4(r8)
   213a8:	10800044 	addi	r2,r2,1
   213ac:	d8c02015 	stw	r3,128(sp)
   213b0:	d8801f15 	stw	r2,124(sp)
   213b4:	010001c4 	movi	r4,7
   213b8:	20832916 	blt	r4,r2,22060 <___vfprintf_internal_r+0x1b54>
   213bc:	42000204 	addi	r8,r8,8
   213c0:	d8803317 	ldw	r2,204(sp)
   213c4:	143fffc4 	addi	r16,r2,-1
   213c8:	043ec50e 	bge	zero,r16,20ee0 <__alt_data_end+0xfffe0ee0>
   213cc:	04400404 	movi	r17,16
   213d0:	d8801f17 	ldw	r2,124(sp)
   213d4:	8c00880e 	bge	r17,r16,215f8 <___vfprintf_internal_r+0x10ec>
   213d8:	014000f4 	movhi	r5,3
   213dc:	297d1c84 	addi	r5,r5,-2958
   213e0:	d9402b15 	stw	r5,172(sp)
   213e4:	058001c4 	movi	r22,7
   213e8:	dcc02c17 	ldw	r19,176(sp)
   213ec:	00000306 	br	213fc <___vfprintf_internal_r+0xef0>
   213f0:	42000204 	addi	r8,r8,8
   213f4:	843ffc04 	addi	r16,r16,-16
   213f8:	8c00820e 	bge	r17,r16,21604 <___vfprintf_internal_r+0x10f8>
   213fc:	18c00404 	addi	r3,r3,16
   21400:	10800044 	addi	r2,r2,1
   21404:	45000015 	stw	r20,0(r8)
   21408:	44400115 	stw	r17,4(r8)
   2140c:	d8c02015 	stw	r3,128(sp)
   21410:	d8801f15 	stw	r2,124(sp)
   21414:	b0bff60e 	bge	r22,r2,213f0 <__alt_data_end+0xfffe13f0>
   21418:	d9801e04 	addi	r6,sp,120
   2141c:	b80b883a 	mov	r5,r23
   21420:	9809883a 	mov	r4,r19
   21424:	0027b080 	call	27b08 <__sprint_r>
   21428:	103d3a1e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   2142c:	d8c02017 	ldw	r3,128(sp)
   21430:	d8801f17 	ldw	r2,124(sp)
   21434:	da000404 	addi	r8,sp,16
   21438:	003fee06 	br	213f4 <__alt_data_end+0xfffe13f4>
   2143c:	d9403117 	ldw	r5,196(sp)
   21440:	d8802a17 	ldw	r2,168(sp)
   21444:	28adc83a 	sub	r22,r5,r2
   21448:	05be630e 	bge	zero,r22,20dd8 <__alt_data_end+0xfffe0dd8>
   2144c:	07000404 	movi	fp,16
   21450:	d8801f17 	ldw	r2,124(sp)
   21454:	e5838f0e 	bge	fp,r22,22294 <___vfprintf_internal_r+0x1d88>
   21458:	014000f4 	movhi	r5,3
   2145c:	297d1c84 	addi	r5,r5,-2958
   21460:	dc403015 	stw	r17,192(sp)
   21464:	d9402b15 	stw	r5,172(sp)
   21468:	b023883a 	mov	r17,r22
   2146c:	04c001c4 	movi	r19,7
   21470:	a82d883a 	mov	r22,r21
   21474:	902b883a 	mov	r21,r18
   21478:	8025883a 	mov	r18,r16
   2147c:	dc002c17 	ldw	r16,176(sp)
   21480:	00000306 	br	21490 <___vfprintf_internal_r+0xf84>
   21484:	8c7ffc04 	addi	r17,r17,-16
   21488:	42000204 	addi	r8,r8,8
   2148c:	e440110e 	bge	fp,r17,214d4 <___vfprintf_internal_r+0xfc8>
   21490:	18c00404 	addi	r3,r3,16
   21494:	10800044 	addi	r2,r2,1
   21498:	45000015 	stw	r20,0(r8)
   2149c:	47000115 	stw	fp,4(r8)
   214a0:	d8c02015 	stw	r3,128(sp)
   214a4:	d8801f15 	stw	r2,124(sp)
   214a8:	98bff60e 	bge	r19,r2,21484 <__alt_data_end+0xfffe1484>
   214ac:	d9801e04 	addi	r6,sp,120
   214b0:	b80b883a 	mov	r5,r23
   214b4:	8009883a 	mov	r4,r16
   214b8:	0027b080 	call	27b08 <__sprint_r>
   214bc:	103d151e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   214c0:	8c7ffc04 	addi	r17,r17,-16
   214c4:	d8c02017 	ldw	r3,128(sp)
   214c8:	d8801f17 	ldw	r2,124(sp)
   214cc:	da000404 	addi	r8,sp,16
   214d0:	e47fef16 	blt	fp,r17,21490 <__alt_data_end+0xfffe1490>
   214d4:	9021883a 	mov	r16,r18
   214d8:	a825883a 	mov	r18,r21
   214dc:	b02b883a 	mov	r21,r22
   214e0:	882d883a 	mov	r22,r17
   214e4:	dc403017 	ldw	r17,192(sp)
   214e8:	d9002b17 	ldw	r4,172(sp)
   214ec:	1d87883a 	add	r3,r3,r22
   214f0:	10800044 	addi	r2,r2,1
   214f4:	41000015 	stw	r4,0(r8)
   214f8:	45800115 	stw	r22,4(r8)
   214fc:	d8c02015 	stw	r3,128(sp)
   21500:	d8801f15 	stw	r2,124(sp)
   21504:	010001c4 	movi	r4,7
   21508:	20818e16 	blt	r4,r2,21b44 <___vfprintf_internal_r+0x1638>
   2150c:	42000204 	addi	r8,r8,8
   21510:	003e3106 	br	20dd8 <__alt_data_end+0xfffe0dd8>
   21514:	d9403317 	ldw	r5,204(sp)
   21518:	00800044 	movi	r2,1
   2151c:	18c00044 	addi	r3,r3,1
   21520:	1141530e 	bge	r2,r5,21a70 <___vfprintf_internal_r+0x1564>
   21524:	dc401f17 	ldw	r17,124(sp)
   21528:	00800044 	movi	r2,1
   2152c:	40800115 	stw	r2,4(r8)
   21530:	8c400044 	addi	r17,r17,1
   21534:	44000015 	stw	r16,0(r8)
   21538:	d8c02015 	stw	r3,128(sp)
   2153c:	dc401f15 	stw	r17,124(sp)
   21540:	008001c4 	movi	r2,7
   21544:	14416b16 	blt	r2,r17,21af4 <___vfprintf_internal_r+0x15e8>
   21548:	42000204 	addi	r8,r8,8
   2154c:	d8803717 	ldw	r2,220(sp)
   21550:	d9003417 	ldw	r4,208(sp)
   21554:	8c400044 	addi	r17,r17,1
   21558:	10c7883a 	add	r3,r2,r3
   2155c:	40800115 	stw	r2,4(r8)
   21560:	41000015 	stw	r4,0(r8)
   21564:	d8c02015 	stw	r3,128(sp)
   21568:	dc401f15 	stw	r17,124(sp)
   2156c:	008001c4 	movi	r2,7
   21570:	14416916 	blt	r2,r17,21b18 <___vfprintf_internal_r+0x160c>
   21574:	45800204 	addi	r22,r8,8
   21578:	d9003617 	ldw	r4,216(sp)
   2157c:	d9403817 	ldw	r5,224(sp)
   21580:	000d883a 	mov	r6,zero
   21584:	000f883a 	mov	r7,zero
   21588:	d8c03c15 	stw	r3,240(sp)
   2158c:	002b7800 	call	2b780 <__eqdf2>
   21590:	d8c03c17 	ldw	r3,240(sp)
   21594:	1000bc26 	beq	r2,zero,21888 <___vfprintf_internal_r+0x137c>
   21598:	d9403317 	ldw	r5,204(sp)
   2159c:	84000044 	addi	r16,r16,1
   215a0:	8c400044 	addi	r17,r17,1
   215a4:	28bfffc4 	addi	r2,r5,-1
   215a8:	1887883a 	add	r3,r3,r2
   215ac:	b0800115 	stw	r2,4(r22)
   215b0:	b4000015 	stw	r16,0(r22)
   215b4:	d8c02015 	stw	r3,128(sp)
   215b8:	dc401f15 	stw	r17,124(sp)
   215bc:	008001c4 	movi	r2,7
   215c0:	14414316 	blt	r2,r17,21ad0 <___vfprintf_internal_r+0x15c4>
   215c4:	b5800204 	addi	r22,r22,8
   215c8:	d9003a17 	ldw	r4,232(sp)
   215cc:	df0022c4 	addi	fp,sp,139
   215d0:	8c400044 	addi	r17,r17,1
   215d4:	20c7883a 	add	r3,r4,r3
   215d8:	b7000015 	stw	fp,0(r22)
   215dc:	b1000115 	stw	r4,4(r22)
   215e0:	d8c02015 	stw	r3,128(sp)
   215e4:	dc401f15 	stw	r17,124(sp)
   215e8:	008001c4 	movi	r2,7
   215ec:	14400e16 	blt	r2,r17,21628 <___vfprintf_internal_r+0x111c>
   215f0:	b2000204 	addi	r8,r22,8
   215f4:	003e3a06 	br	20ee0 <__alt_data_end+0xfffe0ee0>
   215f8:	010000f4 	movhi	r4,3
   215fc:	213d1c84 	addi	r4,r4,-2958
   21600:	d9002b15 	stw	r4,172(sp)
   21604:	d9002b17 	ldw	r4,172(sp)
   21608:	1c07883a 	add	r3,r3,r16
   2160c:	44000115 	stw	r16,4(r8)
   21610:	41000015 	stw	r4,0(r8)
   21614:	10800044 	addi	r2,r2,1
   21618:	d8c02015 	stw	r3,128(sp)
   2161c:	d8801f15 	stw	r2,124(sp)
   21620:	010001c4 	movi	r4,7
   21624:	20be2d0e 	bge	r4,r2,20edc <__alt_data_end+0xfffe0edc>
   21628:	d9002c17 	ldw	r4,176(sp)
   2162c:	d9801e04 	addi	r6,sp,120
   21630:	b80b883a 	mov	r5,r23
   21634:	0027b080 	call	27b08 <__sprint_r>
   21638:	103cb61e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   2163c:	d8c02017 	ldw	r3,128(sp)
   21640:	da000404 	addi	r8,sp,16
   21644:	003e2606 	br	20ee0 <__alt_data_end+0xfffe0ee0>
   21648:	d9002c17 	ldw	r4,176(sp)
   2164c:	d9801e04 	addi	r6,sp,120
   21650:	b80b883a 	mov	r5,r23
   21654:	0027b080 	call	27b08 <__sprint_r>
   21658:	103e5d26 	beq	r2,zero,20fd0 <__alt_data_end+0xfffe0fd0>
   2165c:	003cad06 	br	20914 <__alt_data_end+0xfffe0914>
   21660:	d9002c17 	ldw	r4,176(sp)
   21664:	d9801e04 	addi	r6,sp,120
   21668:	b80b883a 	mov	r5,r23
   2166c:	0027b080 	call	27b08 <__sprint_r>
   21670:	103ca81e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   21674:	d8c02017 	ldw	r3,128(sp)
   21678:	da000404 	addi	r8,sp,16
   2167c:	003e0b06 	br	20eac <__alt_data_end+0xfffe0eac>
   21680:	d9002c17 	ldw	r4,176(sp)
   21684:	d9801e04 	addi	r6,sp,120
   21688:	b80b883a 	mov	r5,r23
   2168c:	0027b080 	call	27b08 <__sprint_r>
   21690:	103ca01e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   21694:	d8c02017 	ldw	r3,128(sp)
   21698:	da000404 	addi	r8,sp,16
   2169c:	003dbd06 	br	20d94 <__alt_data_end+0xfffe0d94>
   216a0:	d9002c17 	ldw	r4,176(sp)
   216a4:	d9801e04 	addi	r6,sp,120
   216a8:	b80b883a 	mov	r5,r23
   216ac:	0027b080 	call	27b08 <__sprint_r>
   216b0:	103c981e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   216b4:	d8c02017 	ldw	r3,128(sp)
   216b8:	da000404 	addi	r8,sp,16
   216bc:	003dc306 	br	20dcc <__alt_data_end+0xfffe0dcc>
   216c0:	d8802917 	ldw	r2,164(sp)
   216c4:	d8002785 	stb	zero,158(sp)
   216c8:	103f0616 	blt	r2,zero,212e4 <__alt_data_end+0xfffe12e4>
   216cc:	00ffdfc4 	movi	r3,-129
   216d0:	9d84b03a 	or	r2,r19,r22
   216d4:	90e4703a 	and	r18,r18,r3
   216d8:	103c6b26 	beq	r2,zero,20888 <__alt_data_end+0xfffe0888>
   216dc:	0039883a 	mov	fp,zero
   216e0:	003e7406 	br	210b4 <__alt_data_end+0xfffe10b4>
   216e4:	9080040c 	andi	r2,r18,16
   216e8:	1001b326 	beq	r2,zero,21db8 <___vfprintf_internal_r+0x18ac>
   216ec:	d9002d17 	ldw	r4,180(sp)
   216f0:	d9402917 	ldw	r5,164(sp)
   216f4:	d8002785 	stb	zero,158(sp)
   216f8:	20800104 	addi	r2,r4,4
   216fc:	24c00017 	ldw	r19,0(r4)
   21700:	002d883a 	mov	r22,zero
   21704:	2801b516 	blt	r5,zero,21ddc <___vfprintf_internal_r+0x18d0>
   21708:	00ffdfc4 	movi	r3,-129
   2170c:	d8802d15 	stw	r2,180(sp)
   21710:	90e4703a 	and	r18,r18,r3
   21714:	983d2726 	beq	r19,zero,20bb4 <__alt_data_end+0xfffe0bb4>
   21718:	0039883a 	mov	fp,zero
   2171c:	003d2a06 	br	20bc8 <__alt_data_end+0xfffe0bc8>
   21720:	dc402617 	ldw	r17,152(sp)
   21724:	0441d30e 	bge	zero,r17,21e74 <___vfprintf_internal_r+0x1968>
   21728:	dc403217 	ldw	r17,200(sp)
   2172c:	d8803317 	ldw	r2,204(sp)
   21730:	1440010e 	bge	r2,r17,21738 <___vfprintf_internal_r+0x122c>
   21734:	1023883a 	mov	r17,r2
   21738:	04400a0e 	bge	zero,r17,21764 <___vfprintf_internal_r+0x1258>
   2173c:	d8801f17 	ldw	r2,124(sp)
   21740:	1c47883a 	add	r3,r3,r17
   21744:	44000015 	stw	r16,0(r8)
   21748:	10800044 	addi	r2,r2,1
   2174c:	44400115 	stw	r17,4(r8)
   21750:	d8c02015 	stw	r3,128(sp)
   21754:	d8801f15 	stw	r2,124(sp)
   21758:	010001c4 	movi	r4,7
   2175c:	20826516 	blt	r4,r2,220f4 <___vfprintf_internal_r+0x1be8>
   21760:	42000204 	addi	r8,r8,8
   21764:	88026116 	blt	r17,zero,220ec <___vfprintf_internal_r+0x1be0>
   21768:	d9003217 	ldw	r4,200(sp)
   2176c:	2463c83a 	sub	r17,r4,r17
   21770:	04407b0e 	bge	zero,r17,21960 <___vfprintf_internal_r+0x1454>
   21774:	05800404 	movi	r22,16
   21778:	d8801f17 	ldw	r2,124(sp)
   2177c:	b4419d0e 	bge	r22,r17,21df4 <___vfprintf_internal_r+0x18e8>
   21780:	010000f4 	movhi	r4,3
   21784:	213d1c84 	addi	r4,r4,-2958
   21788:	d9002b15 	stw	r4,172(sp)
   2178c:	070001c4 	movi	fp,7
   21790:	dcc02c17 	ldw	r19,176(sp)
   21794:	00000306 	br	217a4 <___vfprintf_internal_r+0x1298>
   21798:	42000204 	addi	r8,r8,8
   2179c:	8c7ffc04 	addi	r17,r17,-16
   217a0:	b441970e 	bge	r22,r17,21e00 <___vfprintf_internal_r+0x18f4>
   217a4:	18c00404 	addi	r3,r3,16
   217a8:	10800044 	addi	r2,r2,1
   217ac:	45000015 	stw	r20,0(r8)
   217b0:	45800115 	stw	r22,4(r8)
   217b4:	d8c02015 	stw	r3,128(sp)
   217b8:	d8801f15 	stw	r2,124(sp)
   217bc:	e0bff60e 	bge	fp,r2,21798 <__alt_data_end+0xfffe1798>
   217c0:	d9801e04 	addi	r6,sp,120
   217c4:	b80b883a 	mov	r5,r23
   217c8:	9809883a 	mov	r4,r19
   217cc:	0027b080 	call	27b08 <__sprint_r>
   217d0:	103c501e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   217d4:	d8c02017 	ldw	r3,128(sp)
   217d8:	d8801f17 	ldw	r2,124(sp)
   217dc:	da000404 	addi	r8,sp,16
   217e0:	003fee06 	br	2179c <__alt_data_end+0xfffe179c>
   217e4:	d9002c17 	ldw	r4,176(sp)
   217e8:	d9801e04 	addi	r6,sp,120
   217ec:	b80b883a 	mov	r5,r23
   217f0:	0027b080 	call	27b08 <__sprint_r>
   217f4:	103c471e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   217f8:	d8c02017 	ldw	r3,128(sp)
   217fc:	df002787 	ldb	fp,158(sp)
   21800:	da000404 	addi	r8,sp,16
   21804:	003d5606 	br	20d60 <__alt_data_end+0xfffe0d60>
   21808:	9080040c 	andi	r2,r18,16
   2180c:	10016126 	beq	r2,zero,21d94 <___vfprintf_internal_r+0x1888>
   21810:	d8802d17 	ldw	r2,180(sp)
   21814:	14c00017 	ldw	r19,0(r2)
   21818:	10800104 	addi	r2,r2,4
   2181c:	d8802d15 	stw	r2,180(sp)
   21820:	982dd7fa 	srai	r22,r19,31
   21824:	b005883a 	mov	r2,r22
   21828:	003c8206 	br	20a34 <__alt_data_end+0xfffe0a34>
   2182c:	9080040c 	andi	r2,r18,16
   21830:	10003526 	beq	r2,zero,21908 <___vfprintf_internal_r+0x13fc>
   21834:	d9402d17 	ldw	r5,180(sp)
   21838:	d8c02917 	ldw	r3,164(sp)
   2183c:	d8002785 	stb	zero,158(sp)
   21840:	28800104 	addi	r2,r5,4
   21844:	2cc00017 	ldw	r19,0(r5)
   21848:	002d883a 	mov	r22,zero
   2184c:	18003716 	blt	r3,zero,2192c <___vfprintf_internal_r+0x1420>
   21850:	00ffdfc4 	movi	r3,-129
   21854:	d8802d15 	stw	r2,180(sp)
   21858:	90e4703a 	and	r18,r18,r3
   2185c:	0039883a 	mov	fp,zero
   21860:	983df326 	beq	r19,zero,21030 <__alt_data_end+0xfffe1030>
   21864:	00800244 	movi	r2,9
   21868:	14fc7b36 	bltu	r2,r19,20a58 <__alt_data_end+0xfffe0a58>
   2186c:	d8c02817 	ldw	r3,160(sp)
   21870:	dc001dc4 	addi	r16,sp,119
   21874:	9cc00c04 	addi	r19,r19,48
   21878:	1c07c83a 	sub	r3,r3,r16
   2187c:	dcc01dc5 	stb	r19,119(sp)
   21880:	d8c02e15 	stw	r3,184(sp)
   21884:	003ce806 	br	20c28 <__alt_data_end+0xfffe0c28>
   21888:	d8803317 	ldw	r2,204(sp)
   2188c:	143fffc4 	addi	r16,r2,-1
   21890:	043f4d0e 	bge	zero,r16,215c8 <__alt_data_end+0xfffe15c8>
   21894:	07000404 	movi	fp,16
   21898:	e400810e 	bge	fp,r16,21aa0 <___vfprintf_internal_r+0x1594>
   2189c:	014000f4 	movhi	r5,3
   218a0:	297d1c84 	addi	r5,r5,-2958
   218a4:	d9402b15 	stw	r5,172(sp)
   218a8:	01c001c4 	movi	r7,7
   218ac:	dcc02c17 	ldw	r19,176(sp)
   218b0:	00000306 	br	218c0 <___vfprintf_internal_r+0x13b4>
   218b4:	b5800204 	addi	r22,r22,8
   218b8:	843ffc04 	addi	r16,r16,-16
   218bc:	e4007b0e 	bge	fp,r16,21aac <___vfprintf_internal_r+0x15a0>
   218c0:	18c00404 	addi	r3,r3,16
   218c4:	8c400044 	addi	r17,r17,1
   218c8:	b5000015 	stw	r20,0(r22)
   218cc:	b7000115 	stw	fp,4(r22)
   218d0:	d8c02015 	stw	r3,128(sp)
   218d4:	dc401f15 	stw	r17,124(sp)
   218d8:	3c7ff60e 	bge	r7,r17,218b4 <__alt_data_end+0xfffe18b4>
   218dc:	d9801e04 	addi	r6,sp,120
   218e0:	b80b883a 	mov	r5,r23
   218e4:	9809883a 	mov	r4,r19
   218e8:	d9c03c15 	stw	r7,240(sp)
   218ec:	0027b080 	call	27b08 <__sprint_r>
   218f0:	d9c03c17 	ldw	r7,240(sp)
   218f4:	103c071e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   218f8:	d8c02017 	ldw	r3,128(sp)
   218fc:	dc401f17 	ldw	r17,124(sp)
   21900:	dd800404 	addi	r22,sp,16
   21904:	003fec06 	br	218b8 <__alt_data_end+0xfffe18b8>
   21908:	9080100c 	andi	r2,r18,64
   2190c:	d8002785 	stb	zero,158(sp)
   21910:	10010e26 	beq	r2,zero,21d4c <___vfprintf_internal_r+0x1840>
   21914:	d9002d17 	ldw	r4,180(sp)
   21918:	d9402917 	ldw	r5,164(sp)
   2191c:	002d883a 	mov	r22,zero
   21920:	20800104 	addi	r2,r4,4
   21924:	24c0000b 	ldhu	r19,0(r4)
   21928:	283fc90e 	bge	r5,zero,21850 <__alt_data_end+0xfffe1850>
   2192c:	d8802d15 	stw	r2,180(sp)
   21930:	0039883a 	mov	fp,zero
   21934:	9d84b03a 	or	r2,r19,r22
   21938:	103c461e 	bne	r2,zero,20a54 <__alt_data_end+0xfffe0a54>
   2193c:	00800044 	movi	r2,1
   21940:	003e6c06 	br	212f4 <__alt_data_end+0xfffe12f4>
   21944:	d9002c17 	ldw	r4,176(sp)
   21948:	d9801e04 	addi	r6,sp,120
   2194c:	b80b883a 	mov	r5,r23
   21950:	0027b080 	call	27b08 <__sprint_r>
   21954:	103bef1e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   21958:	d8c02017 	ldw	r3,128(sp)
   2195c:	da000404 	addi	r8,sp,16
   21960:	d9003217 	ldw	r4,200(sp)
   21964:	d8802617 	ldw	r2,152(sp)
   21968:	d9403317 	ldw	r5,204(sp)
   2196c:	8123883a 	add	r17,r16,r4
   21970:	11400216 	blt	r2,r5,2197c <___vfprintf_internal_r+0x1470>
   21974:	9100004c 	andi	r4,r18,1
   21978:	20000d26 	beq	r4,zero,219b0 <___vfprintf_internal_r+0x14a4>
   2197c:	d9003717 	ldw	r4,220(sp)
   21980:	d9403417 	ldw	r5,208(sp)
   21984:	1907883a 	add	r3,r3,r4
   21988:	d9001f17 	ldw	r4,124(sp)
   2198c:	41400015 	stw	r5,0(r8)
   21990:	d9403717 	ldw	r5,220(sp)
   21994:	21000044 	addi	r4,r4,1
   21998:	d8c02015 	stw	r3,128(sp)
   2199c:	41400115 	stw	r5,4(r8)
   219a0:	d9001f15 	stw	r4,124(sp)
   219a4:	014001c4 	movi	r5,7
   219a8:	2901e816 	blt	r5,r4,2214c <___vfprintf_internal_r+0x1c40>
   219ac:	42000204 	addi	r8,r8,8
   219b0:	d9003317 	ldw	r4,204(sp)
   219b4:	8121883a 	add	r16,r16,r4
   219b8:	2085c83a 	sub	r2,r4,r2
   219bc:	8461c83a 	sub	r16,r16,r17
   219c0:	1400010e 	bge	r2,r16,219c8 <___vfprintf_internal_r+0x14bc>
   219c4:	1021883a 	mov	r16,r2
   219c8:	04000a0e 	bge	zero,r16,219f4 <___vfprintf_internal_r+0x14e8>
   219cc:	d9001f17 	ldw	r4,124(sp)
   219d0:	1c07883a 	add	r3,r3,r16
   219d4:	44400015 	stw	r17,0(r8)
   219d8:	21000044 	addi	r4,r4,1
   219dc:	44000115 	stw	r16,4(r8)
   219e0:	d8c02015 	stw	r3,128(sp)
   219e4:	d9001f15 	stw	r4,124(sp)
   219e8:	014001c4 	movi	r5,7
   219ec:	2901fb16 	blt	r5,r4,221dc <___vfprintf_internal_r+0x1cd0>
   219f0:	42000204 	addi	r8,r8,8
   219f4:	8001f716 	blt	r16,zero,221d4 <___vfprintf_internal_r+0x1cc8>
   219f8:	1421c83a 	sub	r16,r2,r16
   219fc:	043d380e 	bge	zero,r16,20ee0 <__alt_data_end+0xfffe0ee0>
   21a00:	04400404 	movi	r17,16
   21a04:	d8801f17 	ldw	r2,124(sp)
   21a08:	8c3efb0e 	bge	r17,r16,215f8 <__alt_data_end+0xfffe15f8>
   21a0c:	014000f4 	movhi	r5,3
   21a10:	297d1c84 	addi	r5,r5,-2958
   21a14:	d9402b15 	stw	r5,172(sp)
   21a18:	058001c4 	movi	r22,7
   21a1c:	dcc02c17 	ldw	r19,176(sp)
   21a20:	00000306 	br	21a30 <___vfprintf_internal_r+0x1524>
   21a24:	42000204 	addi	r8,r8,8
   21a28:	843ffc04 	addi	r16,r16,-16
   21a2c:	8c3ef50e 	bge	r17,r16,21604 <__alt_data_end+0xfffe1604>
   21a30:	18c00404 	addi	r3,r3,16
   21a34:	10800044 	addi	r2,r2,1
   21a38:	45000015 	stw	r20,0(r8)
   21a3c:	44400115 	stw	r17,4(r8)
   21a40:	d8c02015 	stw	r3,128(sp)
   21a44:	d8801f15 	stw	r2,124(sp)
   21a48:	b0bff60e 	bge	r22,r2,21a24 <__alt_data_end+0xfffe1a24>
   21a4c:	d9801e04 	addi	r6,sp,120
   21a50:	b80b883a 	mov	r5,r23
   21a54:	9809883a 	mov	r4,r19
   21a58:	0027b080 	call	27b08 <__sprint_r>
   21a5c:	103bad1e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   21a60:	d8c02017 	ldw	r3,128(sp)
   21a64:	d8801f17 	ldw	r2,124(sp)
   21a68:	da000404 	addi	r8,sp,16
   21a6c:	003fee06 	br	21a28 <__alt_data_end+0xfffe1a28>
   21a70:	9088703a 	and	r4,r18,r2
   21a74:	203eab1e 	bne	r4,zero,21524 <__alt_data_end+0xfffe1524>
   21a78:	dc401f17 	ldw	r17,124(sp)
   21a7c:	40800115 	stw	r2,4(r8)
   21a80:	44000015 	stw	r16,0(r8)
   21a84:	8c400044 	addi	r17,r17,1
   21a88:	d8c02015 	stw	r3,128(sp)
   21a8c:	dc401f15 	stw	r17,124(sp)
   21a90:	008001c4 	movi	r2,7
   21a94:	14400e16 	blt	r2,r17,21ad0 <___vfprintf_internal_r+0x15c4>
   21a98:	45800204 	addi	r22,r8,8
   21a9c:	003eca06 	br	215c8 <__alt_data_end+0xfffe15c8>
   21aa0:	010000f4 	movhi	r4,3
   21aa4:	213d1c84 	addi	r4,r4,-2958
   21aa8:	d9002b15 	stw	r4,172(sp)
   21aac:	d8802b17 	ldw	r2,172(sp)
   21ab0:	1c07883a 	add	r3,r3,r16
   21ab4:	8c400044 	addi	r17,r17,1
   21ab8:	b0800015 	stw	r2,0(r22)
   21abc:	b4000115 	stw	r16,4(r22)
   21ac0:	d8c02015 	stw	r3,128(sp)
   21ac4:	dc401f15 	stw	r17,124(sp)
   21ac8:	008001c4 	movi	r2,7
   21acc:	147ebd0e 	bge	r2,r17,215c4 <__alt_data_end+0xfffe15c4>
   21ad0:	d9002c17 	ldw	r4,176(sp)
   21ad4:	d9801e04 	addi	r6,sp,120
   21ad8:	b80b883a 	mov	r5,r23
   21adc:	0027b080 	call	27b08 <__sprint_r>
   21ae0:	103b8c1e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   21ae4:	d8c02017 	ldw	r3,128(sp)
   21ae8:	dc401f17 	ldw	r17,124(sp)
   21aec:	dd800404 	addi	r22,sp,16
   21af0:	003eb506 	br	215c8 <__alt_data_end+0xfffe15c8>
   21af4:	d9002c17 	ldw	r4,176(sp)
   21af8:	d9801e04 	addi	r6,sp,120
   21afc:	b80b883a 	mov	r5,r23
   21b00:	0027b080 	call	27b08 <__sprint_r>
   21b04:	103b831e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   21b08:	d8c02017 	ldw	r3,128(sp)
   21b0c:	dc401f17 	ldw	r17,124(sp)
   21b10:	da000404 	addi	r8,sp,16
   21b14:	003e8d06 	br	2154c <__alt_data_end+0xfffe154c>
   21b18:	d9002c17 	ldw	r4,176(sp)
   21b1c:	d9801e04 	addi	r6,sp,120
   21b20:	b80b883a 	mov	r5,r23
   21b24:	0027b080 	call	27b08 <__sprint_r>
   21b28:	103b7a1e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   21b2c:	d8c02017 	ldw	r3,128(sp)
   21b30:	dc401f17 	ldw	r17,124(sp)
   21b34:	dd800404 	addi	r22,sp,16
   21b38:	003e8f06 	br	21578 <__alt_data_end+0xfffe1578>
   21b3c:	0027883a 	mov	r19,zero
   21b40:	003f4a06 	br	2186c <__alt_data_end+0xfffe186c>
   21b44:	d9002c17 	ldw	r4,176(sp)
   21b48:	d9801e04 	addi	r6,sp,120
   21b4c:	b80b883a 	mov	r5,r23
   21b50:	0027b080 	call	27b08 <__sprint_r>
   21b54:	103b6f1e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   21b58:	d8c02017 	ldw	r3,128(sp)
   21b5c:	da000404 	addi	r8,sp,16
   21b60:	003c9d06 	br	20dd8 <__alt_data_end+0xfffe0dd8>
   21b64:	04e7c83a 	sub	r19,zero,r19
   21b68:	9804c03a 	cmpne	r2,r19,zero
   21b6c:	05adc83a 	sub	r22,zero,r22
   21b70:	b0adc83a 	sub	r22,r22,r2
   21b74:	d8802917 	ldw	r2,164(sp)
   21b78:	07000b44 	movi	fp,45
   21b7c:	df002785 	stb	fp,158(sp)
   21b80:	10017b16 	blt	r2,zero,22170 <___vfprintf_internal_r+0x1c64>
   21b84:	00bfdfc4 	movi	r2,-129
   21b88:	90a4703a 	and	r18,r18,r2
   21b8c:	003bb106 	br	20a54 <__alt_data_end+0xfffe0a54>
   21b90:	d9003617 	ldw	r4,216(sp)
   21b94:	d9403817 	ldw	r5,224(sp)
   21b98:	da003d15 	stw	r8,244(sp)
   21b9c:	002772c0 	call	2772c <__fpclassifyd>
   21ba0:	da003d17 	ldw	r8,244(sp)
   21ba4:	1000f026 	beq	r2,zero,21f68 <___vfprintf_internal_r+0x1a5c>
   21ba8:	d9002917 	ldw	r4,164(sp)
   21bac:	05bff7c4 	movi	r22,-33
   21bb0:	00bfffc4 	movi	r2,-1
   21bb4:	8dac703a 	and	r22,r17,r22
   21bb8:	20820026 	beq	r4,r2,223bc <___vfprintf_internal_r+0x1eb0>
   21bbc:	008011c4 	movi	r2,71
   21bc0:	b081f726 	beq	r22,r2,223a0 <___vfprintf_internal_r+0x1e94>
   21bc4:	d9003817 	ldw	r4,224(sp)
   21bc8:	90c04014 	ori	r3,r18,256
   21bcc:	d8c02b15 	stw	r3,172(sp)
   21bd0:	20021516 	blt	r4,zero,22428 <___vfprintf_internal_r+0x1f1c>
   21bd4:	dcc03817 	ldw	r19,224(sp)
   21bd8:	d8002a05 	stb	zero,168(sp)
   21bdc:	00801984 	movi	r2,102
   21be0:	8881f926 	beq	r17,r2,223c8 <___vfprintf_internal_r+0x1ebc>
   21be4:	00801184 	movi	r2,70
   21be8:	88821c26 	beq	r17,r2,2245c <___vfprintf_internal_r+0x1f50>
   21bec:	00801144 	movi	r2,69
   21bf0:	b081ef26 	beq	r22,r2,223b0 <___vfprintf_internal_r+0x1ea4>
   21bf4:	d8c02917 	ldw	r3,164(sp)
   21bf8:	d8802104 	addi	r2,sp,132
   21bfc:	d8800315 	stw	r2,12(sp)
   21c00:	d9403617 	ldw	r5,216(sp)
   21c04:	d8802504 	addi	r2,sp,148
   21c08:	d9002c17 	ldw	r4,176(sp)
   21c0c:	d8800215 	stw	r2,8(sp)
   21c10:	d8802604 	addi	r2,sp,152
   21c14:	d8c00015 	stw	r3,0(sp)
   21c18:	d8800115 	stw	r2,4(sp)
   21c1c:	01c00084 	movi	r7,2
   21c20:	980d883a 	mov	r6,r19
   21c24:	d8c03c15 	stw	r3,240(sp)
   21c28:	da003d15 	stw	r8,244(sp)
   21c2c:	0022b300 	call	22b30 <_dtoa_r>
   21c30:	1021883a 	mov	r16,r2
   21c34:	008019c4 	movi	r2,103
   21c38:	d8c03c17 	ldw	r3,240(sp)
   21c3c:	da003d17 	ldw	r8,244(sp)
   21c40:	88817126 	beq	r17,r2,22208 <___vfprintf_internal_r+0x1cfc>
   21c44:	008011c4 	movi	r2,71
   21c48:	88829226 	beq	r17,r2,22694 <___vfprintf_internal_r+0x2188>
   21c4c:	80f9883a 	add	fp,r16,r3
   21c50:	d9003617 	ldw	r4,216(sp)
   21c54:	000d883a 	mov	r6,zero
   21c58:	000f883a 	mov	r7,zero
   21c5c:	980b883a 	mov	r5,r19
   21c60:	da003d15 	stw	r8,244(sp)
   21c64:	002b7800 	call	2b780 <__eqdf2>
   21c68:	da003d17 	ldw	r8,244(sp)
   21c6c:	10018d26 	beq	r2,zero,222a4 <___vfprintf_internal_r+0x1d98>
   21c70:	d8802117 	ldw	r2,132(sp)
   21c74:	1700062e 	bgeu	r2,fp,21c90 <___vfprintf_internal_r+0x1784>
   21c78:	01000c04 	movi	r4,48
   21c7c:	10c00044 	addi	r3,r2,1
   21c80:	d8c02115 	stw	r3,132(sp)
   21c84:	11000005 	stb	r4,0(r2)
   21c88:	d8802117 	ldw	r2,132(sp)
   21c8c:	173ffb36 	bltu	r2,fp,21c7c <__alt_data_end+0xfffe1c7c>
   21c90:	1405c83a 	sub	r2,r2,r16
   21c94:	d8803315 	stw	r2,204(sp)
   21c98:	008011c4 	movi	r2,71
   21c9c:	b0817626 	beq	r22,r2,22278 <___vfprintf_internal_r+0x1d6c>
   21ca0:	00801944 	movi	r2,101
   21ca4:	1442810e 	bge	r2,r17,226ac <___vfprintf_internal_r+0x21a0>
   21ca8:	d8c02617 	ldw	r3,152(sp)
   21cac:	00801984 	movi	r2,102
   21cb0:	d8c03215 	stw	r3,200(sp)
   21cb4:	8881fe26 	beq	r17,r2,224b0 <___vfprintf_internal_r+0x1fa4>
   21cb8:	d8c03217 	ldw	r3,200(sp)
   21cbc:	d9003317 	ldw	r4,204(sp)
   21cc0:	1901dd16 	blt	r3,r4,22438 <___vfprintf_internal_r+0x1f2c>
   21cc4:	9480004c 	andi	r18,r18,1
   21cc8:	90022b1e 	bne	r18,zero,22578 <___vfprintf_internal_r+0x206c>
   21ccc:	1805883a 	mov	r2,r3
   21cd0:	18028016 	blt	r3,zero,226d4 <___vfprintf_internal_r+0x21c8>
   21cd4:	d8c03217 	ldw	r3,200(sp)
   21cd8:	044019c4 	movi	r17,103
   21cdc:	d8c02e15 	stw	r3,184(sp)
   21ce0:	df002a07 	ldb	fp,168(sp)
   21ce4:	e001531e 	bne	fp,zero,22234 <___vfprintf_internal_r+0x1d28>
   21ce8:	df002783 	ldbu	fp,158(sp)
   21cec:	d8802a15 	stw	r2,168(sp)
   21cf0:	dc802b17 	ldw	r18,172(sp)
   21cf4:	d8002915 	stw	zero,164(sp)
   21cf8:	003bd106 	br	20c40 <__alt_data_end+0xfffe0c40>
   21cfc:	d8802d17 	ldw	r2,180(sp)
   21d00:	d8c02d17 	ldw	r3,180(sp)
   21d04:	d9002d17 	ldw	r4,180(sp)
   21d08:	10800017 	ldw	r2,0(r2)
   21d0c:	18c00117 	ldw	r3,4(r3)
   21d10:	21000204 	addi	r4,r4,8
   21d14:	d8803615 	stw	r2,216(sp)
   21d18:	d8c03815 	stw	r3,224(sp)
   21d1c:	d9002d15 	stw	r4,180(sp)
   21d20:	003b7506 	br	20af8 <__alt_data_end+0xfffe0af8>
   21d24:	ac400007 	ldb	r17,0(r21)
   21d28:	003a5906 	br	20690 <__alt_data_end+0xfffe0690>
   21d2c:	9080100c 	andi	r2,r18,64
   21d30:	1000a826 	beq	r2,zero,21fd4 <___vfprintf_internal_r+0x1ac8>
   21d34:	d9002d17 	ldw	r4,180(sp)
   21d38:	002d883a 	mov	r22,zero
   21d3c:	24c0000b 	ldhu	r19,0(r4)
   21d40:	21000104 	addi	r4,r4,4
   21d44:	d9002d15 	stw	r4,180(sp)
   21d48:	003ccb06 	br	21078 <__alt_data_end+0xfffe1078>
   21d4c:	d8c02d17 	ldw	r3,180(sp)
   21d50:	d9002917 	ldw	r4,164(sp)
   21d54:	002d883a 	mov	r22,zero
   21d58:	18800104 	addi	r2,r3,4
   21d5c:	1cc00017 	ldw	r19,0(r3)
   21d60:	203ebb0e 	bge	r4,zero,21850 <__alt_data_end+0xfffe1850>
   21d64:	003ef106 	br	2192c <__alt_data_end+0xfffe192c>
   21d68:	9080040c 	andi	r2,r18,16
   21d6c:	1000921e 	bne	r2,zero,21fb8 <___vfprintf_internal_r+0x1aac>
   21d70:	9480100c 	andi	r18,r18,64
   21d74:	90013926 	beq	r18,zero,2225c <___vfprintf_internal_r+0x1d50>
   21d78:	d9002d17 	ldw	r4,180(sp)
   21d7c:	d9402f17 	ldw	r5,188(sp)
   21d80:	20800017 	ldw	r2,0(r4)
   21d84:	21000104 	addi	r4,r4,4
   21d88:	d9002d15 	stw	r4,180(sp)
   21d8c:	1140000d 	sth	r5,0(r2)
   21d90:	003a1606 	br	205ec <__alt_data_end+0xfffe05ec>
   21d94:	9080100c 	andi	r2,r18,64
   21d98:	10008026 	beq	r2,zero,21f9c <___vfprintf_internal_r+0x1a90>
   21d9c:	d8c02d17 	ldw	r3,180(sp)
   21da0:	1cc0000f 	ldh	r19,0(r3)
   21da4:	18c00104 	addi	r3,r3,4
   21da8:	d8c02d15 	stw	r3,180(sp)
   21dac:	982dd7fa 	srai	r22,r19,31
   21db0:	b005883a 	mov	r2,r22
   21db4:	003b1f06 	br	20a34 <__alt_data_end+0xfffe0a34>
   21db8:	9080100c 	andi	r2,r18,64
   21dbc:	d8002785 	stb	zero,158(sp)
   21dc0:	10008a1e 	bne	r2,zero,21fec <___vfprintf_internal_r+0x1ae0>
   21dc4:	d9402d17 	ldw	r5,180(sp)
   21dc8:	d8c02917 	ldw	r3,164(sp)
   21dcc:	002d883a 	mov	r22,zero
   21dd0:	28800104 	addi	r2,r5,4
   21dd4:	2cc00017 	ldw	r19,0(r5)
   21dd8:	183e4b0e 	bge	r3,zero,21708 <__alt_data_end+0xfffe1708>
   21ddc:	9d86b03a 	or	r3,r19,r22
   21de0:	d8802d15 	stw	r2,180(sp)
   21de4:	183e4c1e 	bne	r3,zero,21718 <__alt_data_end+0xfffe1718>
   21de8:	0039883a 	mov	fp,zero
   21dec:	0005883a 	mov	r2,zero
   21df0:	003d4006 	br	212f4 <__alt_data_end+0xfffe12f4>
   21df4:	014000f4 	movhi	r5,3
   21df8:	297d1c84 	addi	r5,r5,-2958
   21dfc:	d9402b15 	stw	r5,172(sp)
   21e00:	d9402b17 	ldw	r5,172(sp)
   21e04:	1c47883a 	add	r3,r3,r17
   21e08:	10800044 	addi	r2,r2,1
   21e0c:	41400015 	stw	r5,0(r8)
   21e10:	44400115 	stw	r17,4(r8)
   21e14:	d8c02015 	stw	r3,128(sp)
   21e18:	d8801f15 	stw	r2,124(sp)
   21e1c:	010001c4 	movi	r4,7
   21e20:	20bec816 	blt	r4,r2,21944 <__alt_data_end+0xfffe1944>
   21e24:	42000204 	addi	r8,r8,8
   21e28:	003ecd06 	br	21960 <__alt_data_end+0xfffe1960>
   21e2c:	d9002917 	ldw	r4,164(sp)
   21e30:	d8002785 	stb	zero,158(sp)
   21e34:	203d2d16 	blt	r4,zero,212ec <__alt_data_end+0xfffe12ec>
   21e38:	00bfdfc4 	movi	r2,-129
   21e3c:	90a4703a 	and	r18,r18,r2
   21e40:	003a9106 	br	20888 <__alt_data_end+0xfffe0888>
   21e44:	010000f4 	movhi	r4,3
   21e48:	213d1c84 	addi	r4,r4,-2958
   21e4c:	d9002b15 	stw	r4,172(sp)
   21e50:	003c0c06 	br	20e84 <__alt_data_end+0xfffe0e84>
   21e54:	d9002c17 	ldw	r4,176(sp)
   21e58:	d9801e04 	addi	r6,sp,120
   21e5c:	b80b883a 	mov	r5,r23
   21e60:	0027b080 	call	27b08 <__sprint_r>
   21e64:	103aab1e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   21e68:	d8c02017 	ldw	r3,128(sp)
   21e6c:	da000404 	addi	r8,sp,16
   21e70:	003d4106 	br	21378 <__alt_data_end+0xfffe1378>
   21e74:	d8801f17 	ldw	r2,124(sp)
   21e78:	014000f4 	movhi	r5,3
   21e7c:	01000044 	movi	r4,1
   21e80:	18c00044 	addi	r3,r3,1
   21e84:	10800044 	addi	r2,r2,1
   21e88:	297d1c04 	addi	r5,r5,-2960
   21e8c:	41000115 	stw	r4,4(r8)
   21e90:	41400015 	stw	r5,0(r8)
   21e94:	d8c02015 	stw	r3,128(sp)
   21e98:	d8801f15 	stw	r2,124(sp)
   21e9c:	010001c4 	movi	r4,7
   21ea0:	20805c16 	blt	r4,r2,22014 <___vfprintf_internal_r+0x1b08>
   21ea4:	42000204 	addi	r8,r8,8
   21ea8:	8800041e 	bne	r17,zero,21ebc <___vfprintf_internal_r+0x19b0>
   21eac:	d8803317 	ldw	r2,204(sp)
   21eb0:	1000021e 	bne	r2,zero,21ebc <___vfprintf_internal_r+0x19b0>
   21eb4:	9080004c 	andi	r2,r18,1
   21eb8:	103c0926 	beq	r2,zero,20ee0 <__alt_data_end+0xfffe0ee0>
   21ebc:	d9003717 	ldw	r4,220(sp)
   21ec0:	d8801f17 	ldw	r2,124(sp)
   21ec4:	d9403417 	ldw	r5,208(sp)
   21ec8:	20c7883a 	add	r3,r4,r3
   21ecc:	10800044 	addi	r2,r2,1
   21ed0:	41000115 	stw	r4,4(r8)
   21ed4:	41400015 	stw	r5,0(r8)
   21ed8:	d8c02015 	stw	r3,128(sp)
   21edc:	d8801f15 	stw	r2,124(sp)
   21ee0:	010001c4 	movi	r4,7
   21ee4:	20812116 	blt	r4,r2,2236c <___vfprintf_internal_r+0x1e60>
   21ee8:	42000204 	addi	r8,r8,8
   21eec:	0463c83a 	sub	r17,zero,r17
   21ef0:	0440730e 	bge	zero,r17,220c0 <___vfprintf_internal_r+0x1bb4>
   21ef4:	05800404 	movi	r22,16
   21ef8:	b440860e 	bge	r22,r17,22114 <___vfprintf_internal_r+0x1c08>
   21efc:	014000f4 	movhi	r5,3
   21f00:	297d1c84 	addi	r5,r5,-2958
   21f04:	d9402b15 	stw	r5,172(sp)
   21f08:	070001c4 	movi	fp,7
   21f0c:	dcc02c17 	ldw	r19,176(sp)
   21f10:	00000306 	br	21f20 <___vfprintf_internal_r+0x1a14>
   21f14:	42000204 	addi	r8,r8,8
   21f18:	8c7ffc04 	addi	r17,r17,-16
   21f1c:	b440800e 	bge	r22,r17,22120 <___vfprintf_internal_r+0x1c14>
   21f20:	18c00404 	addi	r3,r3,16
   21f24:	10800044 	addi	r2,r2,1
   21f28:	45000015 	stw	r20,0(r8)
   21f2c:	45800115 	stw	r22,4(r8)
   21f30:	d8c02015 	stw	r3,128(sp)
   21f34:	d8801f15 	stw	r2,124(sp)
   21f38:	e0bff60e 	bge	fp,r2,21f14 <__alt_data_end+0xfffe1f14>
   21f3c:	d9801e04 	addi	r6,sp,120
   21f40:	b80b883a 	mov	r5,r23
   21f44:	9809883a 	mov	r4,r19
   21f48:	0027b080 	call	27b08 <__sprint_r>
   21f4c:	103a711e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   21f50:	d8c02017 	ldw	r3,128(sp)
   21f54:	d8801f17 	ldw	r2,124(sp)
   21f58:	da000404 	addi	r8,sp,16
   21f5c:	003fee06 	br	21f18 <__alt_data_end+0xfffe1f18>
   21f60:	00bfffc4 	movi	r2,-1
   21f64:	003a6f06 	br	20924 <__alt_data_end+0xfffe0924>
   21f68:	008011c4 	movi	r2,71
   21f6c:	1440b816 	blt	r2,r17,22250 <___vfprintf_internal_r+0x1d44>
   21f70:	040000f4 	movhi	r16,3
   21f74:	843d0e04 	addi	r16,r16,-3016
   21f78:	00c000c4 	movi	r3,3
   21f7c:	00bfdfc4 	movi	r2,-129
   21f80:	d8c02a15 	stw	r3,168(sp)
   21f84:	90a4703a 	and	r18,r18,r2
   21f88:	df002783 	ldbu	fp,158(sp)
   21f8c:	d8c02e15 	stw	r3,184(sp)
   21f90:	d8002915 	stw	zero,164(sp)
   21f94:	d8003215 	stw	zero,200(sp)
   21f98:	003b2906 	br	20c40 <__alt_data_end+0xfffe0c40>
   21f9c:	d9002d17 	ldw	r4,180(sp)
   21fa0:	24c00017 	ldw	r19,0(r4)
   21fa4:	21000104 	addi	r4,r4,4
   21fa8:	d9002d15 	stw	r4,180(sp)
   21fac:	982dd7fa 	srai	r22,r19,31
   21fb0:	b005883a 	mov	r2,r22
   21fb4:	003a9f06 	br	20a34 <__alt_data_end+0xfffe0a34>
   21fb8:	d9402d17 	ldw	r5,180(sp)
   21fbc:	d8c02f17 	ldw	r3,188(sp)
   21fc0:	28800017 	ldw	r2,0(r5)
   21fc4:	29400104 	addi	r5,r5,4
   21fc8:	d9402d15 	stw	r5,180(sp)
   21fcc:	10c00015 	stw	r3,0(r2)
   21fd0:	00398606 	br	205ec <__alt_data_end+0xfffe05ec>
   21fd4:	d9402d17 	ldw	r5,180(sp)
   21fd8:	002d883a 	mov	r22,zero
   21fdc:	2cc00017 	ldw	r19,0(r5)
   21fe0:	29400104 	addi	r5,r5,4
   21fe4:	d9402d15 	stw	r5,180(sp)
   21fe8:	003c2306 	br	21078 <__alt_data_end+0xfffe1078>
   21fec:	d8c02d17 	ldw	r3,180(sp)
   21ff0:	d9002917 	ldw	r4,164(sp)
   21ff4:	002d883a 	mov	r22,zero
   21ff8:	18800104 	addi	r2,r3,4
   21ffc:	1cc0000b 	ldhu	r19,0(r3)
   22000:	203dc10e 	bge	r4,zero,21708 <__alt_data_end+0xfffe1708>
   22004:	003f7506 	br	21ddc <__alt_data_end+0xfffe1ddc>
   22008:	040000f4 	movhi	r16,3
   2200c:	843d0c04 	addi	r16,r16,-3024
   22010:	003acc06 	br	20b44 <__alt_data_end+0xfffe0b44>
   22014:	d9002c17 	ldw	r4,176(sp)
   22018:	d9801e04 	addi	r6,sp,120
   2201c:	b80b883a 	mov	r5,r23
   22020:	0027b080 	call	27b08 <__sprint_r>
   22024:	103a3b1e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   22028:	dc402617 	ldw	r17,152(sp)
   2202c:	d8c02017 	ldw	r3,128(sp)
   22030:	da000404 	addi	r8,sp,16
   22034:	003f9c06 	br	21ea8 <__alt_data_end+0xfffe1ea8>
   22038:	ac400043 	ldbu	r17,1(r21)
   2203c:	94800814 	ori	r18,r18,32
   22040:	ad400044 	addi	r21,r21,1
   22044:	8c403fcc 	andi	r17,r17,255
   22048:	8c40201c 	xori	r17,r17,128
   2204c:	8c7fe004 	addi	r17,r17,-128
   22050:	00398f06 	br	20690 <__alt_data_end+0xfffe0690>
   22054:	d8c02d15 	stw	r3,180(sp)
   22058:	0039883a 	mov	fp,zero
   2205c:	003e3506 	br	21934 <__alt_data_end+0xfffe1934>
   22060:	d9002c17 	ldw	r4,176(sp)
   22064:	d9801e04 	addi	r6,sp,120
   22068:	b80b883a 	mov	r5,r23
   2206c:	0027b080 	call	27b08 <__sprint_r>
   22070:	103a281e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   22074:	d8c02017 	ldw	r3,128(sp)
   22078:	da000404 	addi	r8,sp,16
   2207c:	003cd006 	br	213c0 <__alt_data_end+0xfffe13c0>
   22080:	8009883a 	mov	r4,r16
   22084:	da003d15 	stw	r8,244(sp)
   22088:	00204740 	call	20474 <strlen>
   2208c:	d8802e15 	stw	r2,184(sp)
   22090:	da003d17 	ldw	r8,244(sp)
   22094:	103c340e 	bge	r2,zero,21168 <__alt_data_end+0xfffe1168>
   22098:	0005883a 	mov	r2,zero
   2209c:	003c3206 	br	21168 <__alt_data_end+0xfffe1168>
   220a0:	d9002c17 	ldw	r4,176(sp)
   220a4:	d9801e04 	addi	r6,sp,120
   220a8:	b80b883a 	mov	r5,r23
   220ac:	0027b080 	call	27b08 <__sprint_r>
   220b0:	103a181e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   220b4:	d8c02017 	ldw	r3,128(sp)
   220b8:	d8801f17 	ldw	r2,124(sp)
   220bc:	da000404 	addi	r8,sp,16
   220c0:	d9403317 	ldw	r5,204(sp)
   220c4:	10800044 	addi	r2,r2,1
   220c8:	44000015 	stw	r16,0(r8)
   220cc:	28c7883a 	add	r3,r5,r3
   220d0:	003b7d06 	br	20ec8 <__alt_data_end+0xfffe0ec8>
   220d4:	010000f4 	movhi	r4,3
   220d8:	213d2084 	addi	r4,r4,-2942
   220dc:	d9003515 	stw	r4,212(sp)
   220e0:	003b1406 	br	20d34 <__alt_data_end+0xfffe0d34>
   220e4:	013fffc4 	movi	r4,-1
   220e8:	003a3506 	br	209c0 <__alt_data_end+0xfffe09c0>
   220ec:	0023883a 	mov	r17,zero
   220f0:	003d9d06 	br	21768 <__alt_data_end+0xfffe1768>
   220f4:	d9002c17 	ldw	r4,176(sp)
   220f8:	d9801e04 	addi	r6,sp,120
   220fc:	b80b883a 	mov	r5,r23
   22100:	0027b080 	call	27b08 <__sprint_r>
   22104:	103a031e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   22108:	d8c02017 	ldw	r3,128(sp)
   2210c:	da000404 	addi	r8,sp,16
   22110:	003d9406 	br	21764 <__alt_data_end+0xfffe1764>
   22114:	010000f4 	movhi	r4,3
   22118:	213d1c84 	addi	r4,r4,-2958
   2211c:	d9002b15 	stw	r4,172(sp)
   22120:	d9002b17 	ldw	r4,172(sp)
   22124:	1c47883a 	add	r3,r3,r17
   22128:	10800044 	addi	r2,r2,1
   2212c:	41000015 	stw	r4,0(r8)
   22130:	44400115 	stw	r17,4(r8)
   22134:	d8c02015 	stw	r3,128(sp)
   22138:	d8801f15 	stw	r2,124(sp)
   2213c:	010001c4 	movi	r4,7
   22140:	20bfd716 	blt	r4,r2,220a0 <__alt_data_end+0xfffe20a0>
   22144:	42000204 	addi	r8,r8,8
   22148:	003fdd06 	br	220c0 <__alt_data_end+0xfffe20c0>
   2214c:	d9002c17 	ldw	r4,176(sp)
   22150:	d9801e04 	addi	r6,sp,120
   22154:	b80b883a 	mov	r5,r23
   22158:	0027b080 	call	27b08 <__sprint_r>
   2215c:	1039ed1e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   22160:	d8802617 	ldw	r2,152(sp)
   22164:	d8c02017 	ldw	r3,128(sp)
   22168:	da000404 	addi	r8,sp,16
   2216c:	003e1006 	br	219b0 <__alt_data_end+0xfffe19b0>
   22170:	00800044 	movi	r2,1
   22174:	10803fcc 	andi	r2,r2,255
   22178:	00c00044 	movi	r3,1
   2217c:	10fa3526 	beq	r2,r3,20a54 <__alt_data_end+0xfffe0a54>
   22180:	00c00084 	movi	r3,2
   22184:	10fbcb26 	beq	r2,r3,210b4 <__alt_data_end+0xfffe10b4>
   22188:	003a8f06 	br	20bc8 <__alt_data_end+0xfffe0bc8>
   2218c:	010000f4 	movhi	r4,3
   22190:	213d2084 	addi	r4,r4,-2942
   22194:	d9003515 	stw	r4,212(sp)
   22198:	003b7606 	br	20f74 <__alt_data_end+0xfffe0f74>
   2219c:	d8802917 	ldw	r2,164(sp)
   221a0:	00c00184 	movi	r3,6
   221a4:	1880012e 	bgeu	r3,r2,221ac <___vfprintf_internal_r+0x1ca0>
   221a8:	1805883a 	mov	r2,r3
   221ac:	d8802e15 	stw	r2,184(sp)
   221b0:	1000ef16 	blt	r2,zero,22570 <___vfprintf_internal_r+0x2064>
   221b4:	040000f4 	movhi	r16,3
   221b8:	d8802a15 	stw	r2,168(sp)
   221bc:	dcc02d15 	stw	r19,180(sp)
   221c0:	d8002915 	stw	zero,164(sp)
   221c4:	d8003215 	stw	zero,200(sp)
   221c8:	843d1a04 	addi	r16,r16,-2968
   221cc:	0039883a 	mov	fp,zero
   221d0:	003aa206 	br	20c5c <__alt_data_end+0xfffe0c5c>
   221d4:	0021883a 	mov	r16,zero
   221d8:	003e0706 	br	219f8 <__alt_data_end+0xfffe19f8>
   221dc:	d9002c17 	ldw	r4,176(sp)
   221e0:	d9801e04 	addi	r6,sp,120
   221e4:	b80b883a 	mov	r5,r23
   221e8:	0027b080 	call	27b08 <__sprint_r>
   221ec:	1039c91e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   221f0:	d8802617 	ldw	r2,152(sp)
   221f4:	d9403317 	ldw	r5,204(sp)
   221f8:	d8c02017 	ldw	r3,128(sp)
   221fc:	da000404 	addi	r8,sp,16
   22200:	2885c83a 	sub	r2,r5,r2
   22204:	003dfb06 	br	219f4 <__alt_data_end+0xfffe19f4>
   22208:	9080004c 	andi	r2,r18,1
   2220c:	103e8f1e 	bne	r2,zero,21c4c <__alt_data_end+0xfffe1c4c>
   22210:	d8802117 	ldw	r2,132(sp)
   22214:	003e9e06 	br	21c90 <__alt_data_end+0xfffe1c90>
   22218:	1025883a 	mov	r18,r2
   2221c:	0039883a 	mov	fp,zero
   22220:	00800084 	movi	r2,2
   22224:	003fd306 	br	22174 <__alt_data_end+0xfffe2174>
   22228:	07000b44 	movi	fp,45
   2222c:	df002785 	stb	fp,158(sp)
   22230:	003a4006 	br	20b34 <__alt_data_end+0xfffe0b34>
   22234:	00c00b44 	movi	r3,45
   22238:	d8c02785 	stb	r3,158(sp)
   2223c:	d8802a15 	stw	r2,168(sp)
   22240:	dc802b17 	ldw	r18,172(sp)
   22244:	d8002915 	stw	zero,164(sp)
   22248:	07000b44 	movi	fp,45
   2224c:	003a8006 	br	20c50 <__alt_data_end+0xfffe0c50>
   22250:	040000f4 	movhi	r16,3
   22254:	843d0f04 	addi	r16,r16,-3012
   22258:	003f4706 	br	21f78 <__alt_data_end+0xfffe1f78>
   2225c:	d8c02d17 	ldw	r3,180(sp)
   22260:	d9002f17 	ldw	r4,188(sp)
   22264:	18800017 	ldw	r2,0(r3)
   22268:	18c00104 	addi	r3,r3,4
   2226c:	d8c02d15 	stw	r3,180(sp)
   22270:	11000015 	stw	r4,0(r2)
   22274:	0038dd06 	br	205ec <__alt_data_end+0xfffe05ec>
   22278:	dd802617 	ldw	r22,152(sp)
   2227c:	00bfff44 	movi	r2,-3
   22280:	b0801c16 	blt	r22,r2,222f4 <___vfprintf_internal_r+0x1de8>
   22284:	d9402917 	ldw	r5,164(sp)
   22288:	2d801a16 	blt	r5,r22,222f4 <___vfprintf_internal_r+0x1de8>
   2228c:	dd803215 	stw	r22,200(sp)
   22290:	003e8906 	br	21cb8 <__alt_data_end+0xfffe1cb8>
   22294:	010000f4 	movhi	r4,3
   22298:	213d1c84 	addi	r4,r4,-2958
   2229c:	d9002b15 	stw	r4,172(sp)
   222a0:	003c9106 	br	214e8 <__alt_data_end+0xfffe14e8>
   222a4:	e005883a 	mov	r2,fp
   222a8:	003e7906 	br	21c90 <__alt_data_end+0xfffe1c90>
   222ac:	d9402917 	ldw	r5,164(sp)
   222b0:	df002783 	ldbu	fp,158(sp)
   222b4:	dcc02d15 	stw	r19,180(sp)
   222b8:	d9402a15 	stw	r5,168(sp)
   222bc:	d9402e15 	stw	r5,184(sp)
   222c0:	d8002915 	stw	zero,164(sp)
   222c4:	d8003215 	stw	zero,200(sp)
   222c8:	003a5d06 	br	20c40 <__alt_data_end+0xfffe0c40>
   222cc:	9080004c 	andi	r2,r18,1
   222d0:	0039883a 	mov	fp,zero
   222d4:	10000426 	beq	r2,zero,222e8 <___vfprintf_internal_r+0x1ddc>
   222d8:	00800c04 	movi	r2,48
   222dc:	dc001dc4 	addi	r16,sp,119
   222e0:	d8801dc5 	stb	r2,119(sp)
   222e4:	003b8006 	br	210e8 <__alt_data_end+0xfffe10e8>
   222e8:	d8002e15 	stw	zero,184(sp)
   222ec:	dc001e04 	addi	r16,sp,120
   222f0:	003a4d06 	br	20c28 <__alt_data_end+0xfffe0c28>
   222f4:	8c7fff84 	addi	r17,r17,-2
   222f8:	b5bfffc4 	addi	r22,r22,-1
   222fc:	dd802615 	stw	r22,152(sp)
   22300:	dc4022c5 	stb	r17,139(sp)
   22304:	b000bf16 	blt	r22,zero,22604 <___vfprintf_internal_r+0x20f8>
   22308:	00800ac4 	movi	r2,43
   2230c:	d8802305 	stb	r2,140(sp)
   22310:	00800244 	movi	r2,9
   22314:	15807016 	blt	r2,r22,224d8 <___vfprintf_internal_r+0x1fcc>
   22318:	00800c04 	movi	r2,48
   2231c:	b5800c04 	addi	r22,r22,48
   22320:	d8802345 	stb	r2,141(sp)
   22324:	dd802385 	stb	r22,142(sp)
   22328:	d88023c4 	addi	r2,sp,143
   2232c:	df0022c4 	addi	fp,sp,139
   22330:	d8c03317 	ldw	r3,204(sp)
   22334:	1739c83a 	sub	fp,r2,fp
   22338:	d9003317 	ldw	r4,204(sp)
   2233c:	e0c7883a 	add	r3,fp,r3
   22340:	df003a15 	stw	fp,232(sp)
   22344:	d8c02e15 	stw	r3,184(sp)
   22348:	00800044 	movi	r2,1
   2234c:	1100b30e 	bge	r2,r4,2261c <___vfprintf_internal_r+0x2110>
   22350:	d8c02e17 	ldw	r3,184(sp)
   22354:	18c00044 	addi	r3,r3,1
   22358:	d8c02e15 	stw	r3,184(sp)
   2235c:	1805883a 	mov	r2,r3
   22360:	1800ac16 	blt	r3,zero,22614 <___vfprintf_internal_r+0x2108>
   22364:	d8003215 	stw	zero,200(sp)
   22368:	003e5d06 	br	21ce0 <__alt_data_end+0xfffe1ce0>
   2236c:	d9002c17 	ldw	r4,176(sp)
   22370:	d9801e04 	addi	r6,sp,120
   22374:	b80b883a 	mov	r5,r23
   22378:	0027b080 	call	27b08 <__sprint_r>
   2237c:	1039651e 	bne	r2,zero,20914 <__alt_data_end+0xfffe0914>
   22380:	dc402617 	ldw	r17,152(sp)
   22384:	d8c02017 	ldw	r3,128(sp)
   22388:	d8801f17 	ldw	r2,124(sp)
   2238c:	da000404 	addi	r8,sp,16
   22390:	003ed606 	br	21eec <__alt_data_end+0xfffe1eec>
   22394:	582b883a 	mov	r21,r11
   22398:	d8002915 	stw	zero,164(sp)
   2239c:	0038bd06 	br	20694 <__alt_data_end+0xfffe0694>
   223a0:	d8802917 	ldw	r2,164(sp)
   223a4:	103e071e 	bne	r2,zero,21bc4 <__alt_data_end+0xfffe1bc4>
   223a8:	dc002915 	stw	r16,164(sp)
   223ac:	003e0506 	br	21bc4 <__alt_data_end+0xfffe1bc4>
   223b0:	d9002917 	ldw	r4,164(sp)
   223b4:	20c00044 	addi	r3,r4,1
   223b8:	003e0f06 	br	21bf8 <__alt_data_end+0xfffe1bf8>
   223bc:	01400184 	movi	r5,6
   223c0:	d9402915 	stw	r5,164(sp)
   223c4:	003dff06 	br	21bc4 <__alt_data_end+0xfffe1bc4>
   223c8:	d8802104 	addi	r2,sp,132
   223cc:	d8800315 	stw	r2,12(sp)
   223d0:	d8802504 	addi	r2,sp,148
   223d4:	d8800215 	stw	r2,8(sp)
   223d8:	d8802604 	addi	r2,sp,152
   223dc:	d8800115 	stw	r2,4(sp)
   223e0:	d8802917 	ldw	r2,164(sp)
   223e4:	d9403617 	ldw	r5,216(sp)
   223e8:	d9002c17 	ldw	r4,176(sp)
   223ec:	d8800015 	stw	r2,0(sp)
   223f0:	01c000c4 	movi	r7,3
   223f4:	980d883a 	mov	r6,r19
   223f8:	da003d15 	stw	r8,244(sp)
   223fc:	0022b300 	call	22b30 <_dtoa_r>
   22400:	d8c02917 	ldw	r3,164(sp)
   22404:	da003d17 	ldw	r8,244(sp)
   22408:	1021883a 	mov	r16,r2
   2240c:	10f9883a 	add	fp,r2,r3
   22410:	81000007 	ldb	r4,0(r16)
   22414:	00800c04 	movi	r2,48
   22418:	20805e26 	beq	r4,r2,22594 <___vfprintf_internal_r+0x2088>
   2241c:	d8c02617 	ldw	r3,152(sp)
   22420:	e0f9883a 	add	fp,fp,r3
   22424:	003e0a06 	br	21c50 <__alt_data_end+0xfffe1c50>
   22428:	00c00b44 	movi	r3,45
   2242c:	24e0003c 	xorhi	r19,r4,32768
   22430:	d8c02a05 	stb	r3,168(sp)
   22434:	003de906 	br	21bdc <__alt_data_end+0xfffe1bdc>
   22438:	d8c03217 	ldw	r3,200(sp)
   2243c:	00c07a0e 	bge	zero,r3,22628 <___vfprintf_internal_r+0x211c>
   22440:	00800044 	movi	r2,1
   22444:	d9003317 	ldw	r4,204(sp)
   22448:	1105883a 	add	r2,r2,r4
   2244c:	d8802e15 	stw	r2,184(sp)
   22450:	10004e16 	blt	r2,zero,2258c <___vfprintf_internal_r+0x2080>
   22454:	044019c4 	movi	r17,103
   22458:	003e2106 	br	21ce0 <__alt_data_end+0xfffe1ce0>
   2245c:	d9002917 	ldw	r4,164(sp)
   22460:	d8802104 	addi	r2,sp,132
   22464:	d8800315 	stw	r2,12(sp)
   22468:	d9000015 	stw	r4,0(sp)
   2246c:	d8802504 	addi	r2,sp,148
   22470:	d9403617 	ldw	r5,216(sp)
   22474:	d9002c17 	ldw	r4,176(sp)
   22478:	d8800215 	stw	r2,8(sp)
   2247c:	d8802604 	addi	r2,sp,152
   22480:	d8800115 	stw	r2,4(sp)
   22484:	01c000c4 	movi	r7,3
   22488:	980d883a 	mov	r6,r19
   2248c:	da003d15 	stw	r8,244(sp)
   22490:	0022b300 	call	22b30 <_dtoa_r>
   22494:	d8c02917 	ldw	r3,164(sp)
   22498:	da003d17 	ldw	r8,244(sp)
   2249c:	1021883a 	mov	r16,r2
   224a0:	00801184 	movi	r2,70
   224a4:	80f9883a 	add	fp,r16,r3
   224a8:	88bfd926 	beq	r17,r2,22410 <__alt_data_end+0xfffe2410>
   224ac:	003de806 	br	21c50 <__alt_data_end+0xfffe1c50>
   224b0:	d9002917 	ldw	r4,164(sp)
   224b4:	00c04d0e 	bge	zero,r3,225ec <___vfprintf_internal_r+0x20e0>
   224b8:	2000441e 	bne	r4,zero,225cc <___vfprintf_internal_r+0x20c0>
   224bc:	9480004c 	andi	r18,r18,1
   224c0:	9000421e 	bne	r18,zero,225cc <___vfprintf_internal_r+0x20c0>
   224c4:	1805883a 	mov	r2,r3
   224c8:	18007016 	blt	r3,zero,2268c <___vfprintf_internal_r+0x2180>
   224cc:	d8c03217 	ldw	r3,200(sp)
   224d0:	d8c02e15 	stw	r3,184(sp)
   224d4:	003e0206 	br	21ce0 <__alt_data_end+0xfffe1ce0>
   224d8:	df0022c4 	addi	fp,sp,139
   224dc:	dc002915 	stw	r16,164(sp)
   224e0:	4027883a 	mov	r19,r8
   224e4:	e021883a 	mov	r16,fp
   224e8:	b009883a 	mov	r4,r22
   224ec:	01400284 	movi	r5,10
   224f0:	002a4bc0 	call	2a4bc <__modsi3>
   224f4:	10800c04 	addi	r2,r2,48
   224f8:	843fffc4 	addi	r16,r16,-1
   224fc:	b009883a 	mov	r4,r22
   22500:	01400284 	movi	r5,10
   22504:	80800005 	stb	r2,0(r16)
   22508:	002a4380 	call	2a438 <__divsi3>
   2250c:	102d883a 	mov	r22,r2
   22510:	00800244 	movi	r2,9
   22514:	15bff416 	blt	r2,r22,224e8 <__alt_data_end+0xfffe24e8>
   22518:	9811883a 	mov	r8,r19
   2251c:	b0800c04 	addi	r2,r22,48
   22520:	8027883a 	mov	r19,r16
   22524:	997fffc4 	addi	r5,r19,-1
   22528:	98bfffc5 	stb	r2,-1(r19)
   2252c:	dc002917 	ldw	r16,164(sp)
   22530:	2f006a2e 	bgeu	r5,fp,226dc <___vfprintf_internal_r+0x21d0>
   22534:	d9c02384 	addi	r7,sp,142
   22538:	3ccfc83a 	sub	r7,r7,r19
   2253c:	d9002344 	addi	r4,sp,141
   22540:	e1cf883a 	add	r7,fp,r7
   22544:	00000106 	br	2254c <___vfprintf_internal_r+0x2040>
   22548:	28800003 	ldbu	r2,0(r5)
   2254c:	20800005 	stb	r2,0(r4)
   22550:	21000044 	addi	r4,r4,1
   22554:	29400044 	addi	r5,r5,1
   22558:	393ffb1e 	bne	r7,r4,22548 <__alt_data_end+0xfffe2548>
   2255c:	d8802304 	addi	r2,sp,140
   22560:	14c5c83a 	sub	r2,r2,r19
   22564:	d8c02344 	addi	r3,sp,141
   22568:	1885883a 	add	r2,r3,r2
   2256c:	003f7006 	br	22330 <__alt_data_end+0xfffe2330>
   22570:	0005883a 	mov	r2,zero
   22574:	003f0f06 	br	221b4 <__alt_data_end+0xfffe21b4>
   22578:	d8c03217 	ldw	r3,200(sp)
   2257c:	18c00044 	addi	r3,r3,1
   22580:	d8c02e15 	stw	r3,184(sp)
   22584:	1805883a 	mov	r2,r3
   22588:	183fb20e 	bge	r3,zero,22454 <__alt_data_end+0xfffe2454>
   2258c:	0005883a 	mov	r2,zero
   22590:	003fb006 	br	22454 <__alt_data_end+0xfffe2454>
   22594:	d9003617 	ldw	r4,216(sp)
   22598:	000d883a 	mov	r6,zero
   2259c:	000f883a 	mov	r7,zero
   225a0:	980b883a 	mov	r5,r19
   225a4:	d8c03c15 	stw	r3,240(sp)
   225a8:	da003d15 	stw	r8,244(sp)
   225ac:	002b7800 	call	2b780 <__eqdf2>
   225b0:	d8c03c17 	ldw	r3,240(sp)
   225b4:	da003d17 	ldw	r8,244(sp)
   225b8:	103f9826 	beq	r2,zero,2241c <__alt_data_end+0xfffe241c>
   225bc:	00800044 	movi	r2,1
   225c0:	10c7c83a 	sub	r3,r2,r3
   225c4:	d8c02615 	stw	r3,152(sp)
   225c8:	003f9506 	br	22420 <__alt_data_end+0xfffe2420>
   225cc:	d9002917 	ldw	r4,164(sp)
   225d0:	d8c03217 	ldw	r3,200(sp)
   225d4:	20800044 	addi	r2,r4,1
   225d8:	1885883a 	add	r2,r3,r2
   225dc:	d8802e15 	stw	r2,184(sp)
   225e0:	103dbf0e 	bge	r2,zero,21ce0 <__alt_data_end+0xfffe1ce0>
   225e4:	0005883a 	mov	r2,zero
   225e8:	003dbd06 	br	21ce0 <__alt_data_end+0xfffe1ce0>
   225ec:	2000211e 	bne	r4,zero,22674 <___vfprintf_internal_r+0x2168>
   225f0:	9480004c 	andi	r18,r18,1
   225f4:	90001f1e 	bne	r18,zero,22674 <___vfprintf_internal_r+0x2168>
   225f8:	00800044 	movi	r2,1
   225fc:	d8802e15 	stw	r2,184(sp)
   22600:	003db706 	br	21ce0 <__alt_data_end+0xfffe1ce0>
   22604:	00800b44 	movi	r2,45
   22608:	05adc83a 	sub	r22,zero,r22
   2260c:	d8802305 	stb	r2,140(sp)
   22610:	003f3f06 	br	22310 <__alt_data_end+0xfffe2310>
   22614:	0005883a 	mov	r2,zero
   22618:	003f5206 	br	22364 <__alt_data_end+0xfffe2364>
   2261c:	90a4703a 	and	r18,r18,r2
   22620:	903f4e26 	beq	r18,zero,2235c <__alt_data_end+0xfffe235c>
   22624:	003f4a06 	br	22350 <__alt_data_end+0xfffe2350>
   22628:	00800084 	movi	r2,2
   2262c:	10c5c83a 	sub	r2,r2,r3
   22630:	003f8406 	br	22444 <__alt_data_end+0xfffe2444>
   22634:	d8802d17 	ldw	r2,180(sp)
   22638:	d9002d17 	ldw	r4,180(sp)
   2263c:	ac400043 	ldbu	r17,1(r21)
   22640:	10800017 	ldw	r2,0(r2)
   22644:	582b883a 	mov	r21,r11
   22648:	d8802915 	stw	r2,164(sp)
   2264c:	20800104 	addi	r2,r4,4
   22650:	d9002917 	ldw	r4,164(sp)
   22654:	d8802d15 	stw	r2,180(sp)
   22658:	203e7a0e 	bge	r4,zero,22044 <__alt_data_end+0xfffe2044>
   2265c:	8c403fcc 	andi	r17,r17,255
   22660:	00bfffc4 	movi	r2,-1
   22664:	8c40201c 	xori	r17,r17,128
   22668:	d8802915 	stw	r2,164(sp)
   2266c:	8c7fe004 	addi	r17,r17,-128
   22670:	00380706 	br	20690 <__alt_data_end+0xfffe0690>
   22674:	d8c02917 	ldw	r3,164(sp)
   22678:	18c00084 	addi	r3,r3,2
   2267c:	d8c02e15 	stw	r3,184(sp)
   22680:	1805883a 	mov	r2,r3
   22684:	183d960e 	bge	r3,zero,21ce0 <__alt_data_end+0xfffe1ce0>
   22688:	003fd606 	br	225e4 <__alt_data_end+0xfffe25e4>
   2268c:	0005883a 	mov	r2,zero
   22690:	003f8e06 	br	224cc <__alt_data_end+0xfffe24cc>
   22694:	9080004c 	andi	r2,r18,1
   22698:	103f811e 	bne	r2,zero,224a0 <__alt_data_end+0xfffe24a0>
   2269c:	d8802117 	ldw	r2,132(sp)
   226a0:	1405c83a 	sub	r2,r2,r16
   226a4:	d8803315 	stw	r2,204(sp)
   226a8:	b47ef326 	beq	r22,r17,22278 <__alt_data_end+0xfffe2278>
   226ac:	dd802617 	ldw	r22,152(sp)
   226b0:	003f1106 	br	222f8 <__alt_data_end+0xfffe22f8>
   226b4:	d9c02785 	stb	r7,158(sp)
   226b8:	00390406 	br	20acc <__alt_data_end+0xfffe0acc>
   226bc:	d9c02785 	stb	r7,158(sp)
   226c0:	0038d306 	br	20a10 <__alt_data_end+0xfffe0a10>
   226c4:	d9c02785 	stb	r7,158(sp)
   226c8:	003a6106 	br	21050 <__alt_data_end+0xfffe1050>
   226cc:	d9c02785 	stb	r7,158(sp)
   226d0:	003af806 	br	212b4 <__alt_data_end+0xfffe12b4>
   226d4:	0005883a 	mov	r2,zero
   226d8:	003d7e06 	br	21cd4 <__alt_data_end+0xfffe1cd4>
   226dc:	d8802344 	addi	r2,sp,141
   226e0:	003f1306 	br	22330 <__alt_data_end+0xfffe2330>
   226e4:	d9c02785 	stb	r7,158(sp)
   226e8:	00392306 	br	20b78 <__alt_data_end+0xfffe0b78>
   226ec:	d9c02785 	stb	r7,158(sp)
   226f0:	003aa906 	br	21198 <__alt_data_end+0xfffe1198>
   226f4:	d9c02785 	stb	r7,158(sp)
   226f8:	003a3d06 	br	20ff0 <__alt_data_end+0xfffe0ff0>
   226fc:	d9c02785 	stb	r7,158(sp)
   22700:	003aca06 	br	2122c <__alt_data_end+0xfffe122c>

00022704 <__vfprintf_internal>:
   22704:	008000f4 	movhi	r2,3
   22708:	10847704 	addi	r2,r2,4572
   2270c:	300f883a 	mov	r7,r6
   22710:	280d883a 	mov	r6,r5
   22714:	200b883a 	mov	r5,r4
   22718:	11000017 	ldw	r4,0(r2)
   2271c:	002050c1 	jmpi	2050c <___vfprintf_internal_r>

00022720 <__sbprintf>:
   22720:	2880030b 	ldhu	r2,12(r5)
   22724:	2ac01917 	ldw	r11,100(r5)
   22728:	2a80038b 	ldhu	r10,14(r5)
   2272c:	2a400717 	ldw	r9,28(r5)
   22730:	2a000917 	ldw	r8,36(r5)
   22734:	defee204 	addi	sp,sp,-1144
   22738:	00c10004 	movi	r3,1024
   2273c:	dc011a15 	stw	r16,1128(sp)
   22740:	10bfff4c 	andi	r2,r2,65533
   22744:	2821883a 	mov	r16,r5
   22748:	d8cb883a 	add	r5,sp,r3
   2274c:	dc811c15 	stw	r18,1136(sp)
   22750:	dc411b15 	stw	r17,1132(sp)
   22754:	dfc11d15 	stw	ra,1140(sp)
   22758:	2025883a 	mov	r18,r4
   2275c:	d881030d 	sth	r2,1036(sp)
   22760:	dac11915 	stw	r11,1124(sp)
   22764:	da81038d 	sth	r10,1038(sp)
   22768:	da410715 	stw	r9,1052(sp)
   2276c:	da010915 	stw	r8,1060(sp)
   22770:	dec10015 	stw	sp,1024(sp)
   22774:	dec10415 	stw	sp,1040(sp)
   22778:	d8c10215 	stw	r3,1032(sp)
   2277c:	d8c10515 	stw	r3,1044(sp)
   22780:	d8010615 	stw	zero,1048(sp)
   22784:	002050c0 	call	2050c <___vfprintf_internal_r>
   22788:	1023883a 	mov	r17,r2
   2278c:	10000416 	blt	r2,zero,227a0 <__sbprintf+0x80>
   22790:	d9410004 	addi	r5,sp,1024
   22794:	9009883a 	mov	r4,r18
   22798:	00243d40 	call	243d4 <_fflush_r>
   2279c:	10000d1e 	bne	r2,zero,227d4 <__sbprintf+0xb4>
   227a0:	d881030b 	ldhu	r2,1036(sp)
   227a4:	1080100c 	andi	r2,r2,64
   227a8:	10000326 	beq	r2,zero,227b8 <__sbprintf+0x98>
   227ac:	8080030b 	ldhu	r2,12(r16)
   227b0:	10801014 	ori	r2,r2,64
   227b4:	8080030d 	sth	r2,12(r16)
   227b8:	8805883a 	mov	r2,r17
   227bc:	dfc11d17 	ldw	ra,1140(sp)
   227c0:	dc811c17 	ldw	r18,1136(sp)
   227c4:	dc411b17 	ldw	r17,1132(sp)
   227c8:	dc011a17 	ldw	r16,1128(sp)
   227cc:	dec11e04 	addi	sp,sp,1144
   227d0:	f800283a 	ret
   227d4:	047fffc4 	movi	r17,-1
   227d8:	003ff106 	br	227a0 <__alt_data_end+0xfffe27a0>

000227dc <__swsetup_r>:
   227dc:	008000f4 	movhi	r2,3
   227e0:	defffd04 	addi	sp,sp,-12
   227e4:	10847704 	addi	r2,r2,4572
   227e8:	dc400115 	stw	r17,4(sp)
   227ec:	2023883a 	mov	r17,r4
   227f0:	11000017 	ldw	r4,0(r2)
   227f4:	dc000015 	stw	r16,0(sp)
   227f8:	dfc00215 	stw	ra,8(sp)
   227fc:	2821883a 	mov	r16,r5
   22800:	20000226 	beq	r4,zero,2280c <__swsetup_r+0x30>
   22804:	20800e17 	ldw	r2,56(r4)
   22808:	10003126 	beq	r2,zero,228d0 <__swsetup_r+0xf4>
   2280c:	8080030b 	ldhu	r2,12(r16)
   22810:	10c0020c 	andi	r3,r2,8
   22814:	1009883a 	mov	r4,r2
   22818:	18000f26 	beq	r3,zero,22858 <__swsetup_r+0x7c>
   2281c:	80c00417 	ldw	r3,16(r16)
   22820:	18001526 	beq	r3,zero,22878 <__swsetup_r+0x9c>
   22824:	1100004c 	andi	r4,r2,1
   22828:	20001c1e 	bne	r4,zero,2289c <__swsetup_r+0xc0>
   2282c:	1080008c 	andi	r2,r2,2
   22830:	1000291e 	bne	r2,zero,228d8 <__swsetup_r+0xfc>
   22834:	80800517 	ldw	r2,20(r16)
   22838:	80800215 	stw	r2,8(r16)
   2283c:	18001c26 	beq	r3,zero,228b0 <__swsetup_r+0xd4>
   22840:	0005883a 	mov	r2,zero
   22844:	dfc00217 	ldw	ra,8(sp)
   22848:	dc400117 	ldw	r17,4(sp)
   2284c:	dc000017 	ldw	r16,0(sp)
   22850:	dec00304 	addi	sp,sp,12
   22854:	f800283a 	ret
   22858:	2080040c 	andi	r2,r4,16
   2285c:	10002e26 	beq	r2,zero,22918 <__swsetup_r+0x13c>
   22860:	2080010c 	andi	r2,r4,4
   22864:	10001e1e 	bne	r2,zero,228e0 <__swsetup_r+0x104>
   22868:	80c00417 	ldw	r3,16(r16)
   2286c:	20800214 	ori	r2,r4,8
   22870:	8080030d 	sth	r2,12(r16)
   22874:	183feb1e 	bne	r3,zero,22824 <__alt_data_end+0xfffe2824>
   22878:	1100a00c 	andi	r4,r2,640
   2287c:	01408004 	movi	r5,512
   22880:	217fe826 	beq	r4,r5,22824 <__alt_data_end+0xfffe2824>
   22884:	800b883a 	mov	r5,r16
   22888:	8809883a 	mov	r4,r17
   2288c:	00253540 	call	25354 <__smakebuf_r>
   22890:	8080030b 	ldhu	r2,12(r16)
   22894:	80c00417 	ldw	r3,16(r16)
   22898:	003fe206 	br	22824 <__alt_data_end+0xfffe2824>
   2289c:	80800517 	ldw	r2,20(r16)
   228a0:	80000215 	stw	zero,8(r16)
   228a4:	0085c83a 	sub	r2,zero,r2
   228a8:	80800615 	stw	r2,24(r16)
   228ac:	183fe41e 	bne	r3,zero,22840 <__alt_data_end+0xfffe2840>
   228b0:	80c0030b 	ldhu	r3,12(r16)
   228b4:	0005883a 	mov	r2,zero
   228b8:	1900200c 	andi	r4,r3,128
   228bc:	203fe126 	beq	r4,zero,22844 <__alt_data_end+0xfffe2844>
   228c0:	18c01014 	ori	r3,r3,64
   228c4:	80c0030d 	sth	r3,12(r16)
   228c8:	00bfffc4 	movi	r2,-1
   228cc:	003fdd06 	br	22844 <__alt_data_end+0xfffe2844>
   228d0:	00247b00 	call	247b0 <__sinit>
   228d4:	003fcd06 	br	2280c <__alt_data_end+0xfffe280c>
   228d8:	0005883a 	mov	r2,zero
   228dc:	003fd606 	br	22838 <__alt_data_end+0xfffe2838>
   228e0:	81400c17 	ldw	r5,48(r16)
   228e4:	28000626 	beq	r5,zero,22900 <__swsetup_r+0x124>
   228e8:	80801004 	addi	r2,r16,64
   228ec:	28800326 	beq	r5,r2,228fc <__swsetup_r+0x120>
   228f0:	8809883a 	mov	r4,r17
   228f4:	00249240 	call	24924 <_free_r>
   228f8:	8100030b 	ldhu	r4,12(r16)
   228fc:	80000c15 	stw	zero,48(r16)
   22900:	80c00417 	ldw	r3,16(r16)
   22904:	00bff6c4 	movi	r2,-37
   22908:	1108703a 	and	r4,r2,r4
   2290c:	80000115 	stw	zero,4(r16)
   22910:	80c00015 	stw	r3,0(r16)
   22914:	003fd506 	br	2286c <__alt_data_end+0xfffe286c>
   22918:	00800244 	movi	r2,9
   2291c:	88800015 	stw	r2,0(r17)
   22920:	20801014 	ori	r2,r4,64
   22924:	8080030d 	sth	r2,12(r16)
   22928:	00bfffc4 	movi	r2,-1
   2292c:	003fc506 	br	22844 <__alt_data_end+0xfffe2844>

00022930 <quorem>:
   22930:	defff704 	addi	sp,sp,-36
   22934:	dc800215 	stw	r18,8(sp)
   22938:	20800417 	ldw	r2,16(r4)
   2293c:	2c800417 	ldw	r18,16(r5)
   22940:	dfc00815 	stw	ra,32(sp)
   22944:	ddc00715 	stw	r23,28(sp)
   22948:	dd800615 	stw	r22,24(sp)
   2294c:	dd400515 	stw	r21,20(sp)
   22950:	dd000415 	stw	r20,16(sp)
   22954:	dcc00315 	stw	r19,12(sp)
   22958:	dc400115 	stw	r17,4(sp)
   2295c:	dc000015 	stw	r16,0(sp)
   22960:	14807116 	blt	r2,r18,22b28 <quorem+0x1f8>
   22964:	94bfffc4 	addi	r18,r18,-1
   22968:	94ad883a 	add	r22,r18,r18
   2296c:	b5ad883a 	add	r22,r22,r22
   22970:	2c400504 	addi	r17,r5,20
   22974:	8da9883a 	add	r20,r17,r22
   22978:	25400504 	addi	r21,r4,20
   2297c:	282f883a 	mov	r23,r5
   22980:	adad883a 	add	r22,r21,r22
   22984:	a1400017 	ldw	r5,0(r20)
   22988:	2021883a 	mov	r16,r4
   2298c:	b1000017 	ldw	r4,0(r22)
   22990:	29400044 	addi	r5,r5,1
   22994:	002a5300 	call	2a530 <__udivsi3>
   22998:	1027883a 	mov	r19,r2
   2299c:	10002c26 	beq	r2,zero,22a50 <quorem+0x120>
   229a0:	a813883a 	mov	r9,r21
   229a4:	880b883a 	mov	r5,r17
   229a8:	0009883a 	mov	r4,zero
   229ac:	000d883a 	mov	r6,zero
   229b0:	2a000017 	ldw	r8,0(r5)
   229b4:	49c00017 	ldw	r7,0(r9)
   229b8:	29400104 	addi	r5,r5,4
   229bc:	40bfffcc 	andi	r2,r8,65535
   229c0:	14c5383a 	mul	r2,r2,r19
   229c4:	4010d43a 	srli	r8,r8,16
   229c8:	38ffffcc 	andi	r3,r7,65535
   229cc:	1105883a 	add	r2,r2,r4
   229d0:	1008d43a 	srli	r4,r2,16
   229d4:	44d1383a 	mul	r8,r8,r19
   229d8:	198d883a 	add	r6,r3,r6
   229dc:	10ffffcc 	andi	r3,r2,65535
   229e0:	30c7c83a 	sub	r3,r6,r3
   229e4:	380ed43a 	srli	r7,r7,16
   229e8:	4105883a 	add	r2,r8,r4
   229ec:	180dd43a 	srai	r6,r3,16
   229f0:	113fffcc 	andi	r4,r2,65535
   229f4:	390fc83a 	sub	r7,r7,r4
   229f8:	398d883a 	add	r6,r7,r6
   229fc:	300e943a 	slli	r7,r6,16
   22a00:	18ffffcc 	andi	r3,r3,65535
   22a04:	1008d43a 	srli	r4,r2,16
   22a08:	38ceb03a 	or	r7,r7,r3
   22a0c:	49c00015 	stw	r7,0(r9)
   22a10:	300dd43a 	srai	r6,r6,16
   22a14:	4a400104 	addi	r9,r9,4
   22a18:	a17fe52e 	bgeu	r20,r5,229b0 <__alt_data_end+0xfffe29b0>
   22a1c:	b0800017 	ldw	r2,0(r22)
   22a20:	10000b1e 	bne	r2,zero,22a50 <quorem+0x120>
   22a24:	b0bfff04 	addi	r2,r22,-4
   22a28:	a880082e 	bgeu	r21,r2,22a4c <quorem+0x11c>
   22a2c:	b0ffff17 	ldw	r3,-4(r22)
   22a30:	18000326 	beq	r3,zero,22a40 <quorem+0x110>
   22a34:	00000506 	br	22a4c <quorem+0x11c>
   22a38:	10c00017 	ldw	r3,0(r2)
   22a3c:	1800031e 	bne	r3,zero,22a4c <quorem+0x11c>
   22a40:	10bfff04 	addi	r2,r2,-4
   22a44:	94bfffc4 	addi	r18,r18,-1
   22a48:	a8bffb36 	bltu	r21,r2,22a38 <__alt_data_end+0xfffe2a38>
   22a4c:	84800415 	stw	r18,16(r16)
   22a50:	b80b883a 	mov	r5,r23
   22a54:	8009883a 	mov	r4,r16
   22a58:	0026a940 	call	26a94 <__mcmp>
   22a5c:	10002616 	blt	r2,zero,22af8 <quorem+0x1c8>
   22a60:	9cc00044 	addi	r19,r19,1
   22a64:	a805883a 	mov	r2,r21
   22a68:	000b883a 	mov	r5,zero
   22a6c:	11000017 	ldw	r4,0(r2)
   22a70:	89800017 	ldw	r6,0(r17)
   22a74:	10800104 	addi	r2,r2,4
   22a78:	20ffffcc 	andi	r3,r4,65535
   22a7c:	194b883a 	add	r5,r3,r5
   22a80:	30ffffcc 	andi	r3,r6,65535
   22a84:	28c7c83a 	sub	r3,r5,r3
   22a88:	300cd43a 	srli	r6,r6,16
   22a8c:	2008d43a 	srli	r4,r4,16
   22a90:	180bd43a 	srai	r5,r3,16
   22a94:	18ffffcc 	andi	r3,r3,65535
   22a98:	2189c83a 	sub	r4,r4,r6
   22a9c:	2149883a 	add	r4,r4,r5
   22aa0:	200c943a 	slli	r6,r4,16
   22aa4:	8c400104 	addi	r17,r17,4
   22aa8:	200bd43a 	srai	r5,r4,16
   22aac:	30c6b03a 	or	r3,r6,r3
   22ab0:	10ffff15 	stw	r3,-4(r2)
   22ab4:	a47fed2e 	bgeu	r20,r17,22a6c <__alt_data_end+0xfffe2a6c>
   22ab8:	9485883a 	add	r2,r18,r18
   22abc:	1085883a 	add	r2,r2,r2
   22ac0:	a887883a 	add	r3,r21,r2
   22ac4:	18800017 	ldw	r2,0(r3)
   22ac8:	10000b1e 	bne	r2,zero,22af8 <quorem+0x1c8>
   22acc:	18bfff04 	addi	r2,r3,-4
   22ad0:	a880082e 	bgeu	r21,r2,22af4 <quorem+0x1c4>
   22ad4:	18ffff17 	ldw	r3,-4(r3)
   22ad8:	18000326 	beq	r3,zero,22ae8 <quorem+0x1b8>
   22adc:	00000506 	br	22af4 <quorem+0x1c4>
   22ae0:	10c00017 	ldw	r3,0(r2)
   22ae4:	1800031e 	bne	r3,zero,22af4 <quorem+0x1c4>
   22ae8:	10bfff04 	addi	r2,r2,-4
   22aec:	94bfffc4 	addi	r18,r18,-1
   22af0:	a8bffb36 	bltu	r21,r2,22ae0 <__alt_data_end+0xfffe2ae0>
   22af4:	84800415 	stw	r18,16(r16)
   22af8:	9805883a 	mov	r2,r19
   22afc:	dfc00817 	ldw	ra,32(sp)
   22b00:	ddc00717 	ldw	r23,28(sp)
   22b04:	dd800617 	ldw	r22,24(sp)
   22b08:	dd400517 	ldw	r21,20(sp)
   22b0c:	dd000417 	ldw	r20,16(sp)
   22b10:	dcc00317 	ldw	r19,12(sp)
   22b14:	dc800217 	ldw	r18,8(sp)
   22b18:	dc400117 	ldw	r17,4(sp)
   22b1c:	dc000017 	ldw	r16,0(sp)
   22b20:	dec00904 	addi	sp,sp,36
   22b24:	f800283a 	ret
   22b28:	0005883a 	mov	r2,zero
   22b2c:	003ff306 	br	22afc <__alt_data_end+0xfffe2afc>

00022b30 <_dtoa_r>:
   22b30:	20801017 	ldw	r2,64(r4)
   22b34:	deffde04 	addi	sp,sp,-136
   22b38:	df002015 	stw	fp,128(sp)
   22b3c:	dcc01b15 	stw	r19,108(sp)
   22b40:	dc801a15 	stw	r18,104(sp)
   22b44:	dc401915 	stw	r17,100(sp)
   22b48:	dc001815 	stw	r16,96(sp)
   22b4c:	dfc02115 	stw	ra,132(sp)
   22b50:	ddc01f15 	stw	r23,124(sp)
   22b54:	dd801e15 	stw	r22,120(sp)
   22b58:	dd401d15 	stw	r21,116(sp)
   22b5c:	dd001c15 	stw	r20,112(sp)
   22b60:	d9c00315 	stw	r7,12(sp)
   22b64:	2039883a 	mov	fp,r4
   22b68:	3023883a 	mov	r17,r6
   22b6c:	2825883a 	mov	r18,r5
   22b70:	dc002417 	ldw	r16,144(sp)
   22b74:	3027883a 	mov	r19,r6
   22b78:	10000826 	beq	r2,zero,22b9c <_dtoa_r+0x6c>
   22b7c:	21801117 	ldw	r6,68(r4)
   22b80:	00c00044 	movi	r3,1
   22b84:	100b883a 	mov	r5,r2
   22b88:	1986983a 	sll	r3,r3,r6
   22b8c:	11800115 	stw	r6,4(r2)
   22b90:	10c00215 	stw	r3,8(r2)
   22b94:	00262740 	call	26274 <_Bfree>
   22b98:	e0001015 	stw	zero,64(fp)
   22b9c:	88002e16 	blt	r17,zero,22c58 <_dtoa_r+0x128>
   22ba0:	80000015 	stw	zero,0(r16)
   22ba4:	889ffc2c 	andhi	r2,r17,32752
   22ba8:	00dffc34 	movhi	r3,32752
   22bac:	10c01c26 	beq	r2,r3,22c20 <_dtoa_r+0xf0>
   22bb0:	000d883a 	mov	r6,zero
   22bb4:	000f883a 	mov	r7,zero
   22bb8:	9009883a 	mov	r4,r18
   22bbc:	980b883a 	mov	r5,r19
   22bc0:	002b7800 	call	2b780 <__eqdf2>
   22bc4:	10002b1e 	bne	r2,zero,22c74 <_dtoa_r+0x144>
   22bc8:	d9c02317 	ldw	r7,140(sp)
   22bcc:	00800044 	movi	r2,1
   22bd0:	38800015 	stw	r2,0(r7)
   22bd4:	d8802517 	ldw	r2,148(sp)
   22bd8:	10019e26 	beq	r2,zero,23254 <_dtoa_r+0x724>
   22bdc:	d8c02517 	ldw	r3,148(sp)
   22be0:	008000f4 	movhi	r2,3
   22be4:	10bd1c44 	addi	r2,r2,-2959
   22be8:	18800015 	stw	r2,0(r3)
   22bec:	10bfffc4 	addi	r2,r2,-1
   22bf0:	dfc02117 	ldw	ra,132(sp)
   22bf4:	df002017 	ldw	fp,128(sp)
   22bf8:	ddc01f17 	ldw	r23,124(sp)
   22bfc:	dd801e17 	ldw	r22,120(sp)
   22c00:	dd401d17 	ldw	r21,116(sp)
   22c04:	dd001c17 	ldw	r20,112(sp)
   22c08:	dcc01b17 	ldw	r19,108(sp)
   22c0c:	dc801a17 	ldw	r18,104(sp)
   22c10:	dc401917 	ldw	r17,100(sp)
   22c14:	dc001817 	ldw	r16,96(sp)
   22c18:	dec02204 	addi	sp,sp,136
   22c1c:	f800283a 	ret
   22c20:	d8c02317 	ldw	r3,140(sp)
   22c24:	0089c3c4 	movi	r2,9999
   22c28:	18800015 	stw	r2,0(r3)
   22c2c:	90017726 	beq	r18,zero,2320c <_dtoa_r+0x6dc>
   22c30:	008000f4 	movhi	r2,3
   22c34:	10bd2804 	addi	r2,r2,-2912
   22c38:	d9002517 	ldw	r4,148(sp)
   22c3c:	203fec26 	beq	r4,zero,22bf0 <__alt_data_end+0xfffe2bf0>
   22c40:	10c000c7 	ldb	r3,3(r2)
   22c44:	1801781e 	bne	r3,zero,23228 <_dtoa_r+0x6f8>
   22c48:	10c000c4 	addi	r3,r2,3
   22c4c:	d9802517 	ldw	r6,148(sp)
   22c50:	30c00015 	stw	r3,0(r6)
   22c54:	003fe606 	br	22bf0 <__alt_data_end+0xfffe2bf0>
   22c58:	04e00034 	movhi	r19,32768
   22c5c:	9cffffc4 	addi	r19,r19,-1
   22c60:	00800044 	movi	r2,1
   22c64:	8ce6703a 	and	r19,r17,r19
   22c68:	80800015 	stw	r2,0(r16)
   22c6c:	9823883a 	mov	r17,r19
   22c70:	003fcc06 	br	22ba4 <__alt_data_end+0xfffe2ba4>
   22c74:	d8800204 	addi	r2,sp,8
   22c78:	d8800015 	stw	r2,0(sp)
   22c7c:	d9c00104 	addi	r7,sp,4
   22c80:	900b883a 	mov	r5,r18
   22c84:	980d883a 	mov	r6,r19
   22c88:	e009883a 	mov	r4,fp
   22c8c:	8820d53a 	srli	r16,r17,20
   22c90:	0026e600 	call	26e60 <__d2b>
   22c94:	d8800915 	stw	r2,36(sp)
   22c98:	8001651e 	bne	r16,zero,23230 <_dtoa_r+0x700>
   22c9c:	dd800217 	ldw	r22,8(sp)
   22ca0:	dc000117 	ldw	r16,4(sp)
   22ca4:	00800804 	movi	r2,32
   22ca8:	b421883a 	add	r16,r22,r16
   22cac:	80c10c84 	addi	r3,r16,1074
   22cb0:	10c2d10e 	bge	r2,r3,237f8 <_dtoa_r+0xcc8>
   22cb4:	00801004 	movi	r2,64
   22cb8:	81010484 	addi	r4,r16,1042
   22cbc:	10c7c83a 	sub	r3,r2,r3
   22cc0:	9108d83a 	srl	r4,r18,r4
   22cc4:	88e2983a 	sll	r17,r17,r3
   22cc8:	2448b03a 	or	r4,r4,r17
   22ccc:	002cb480 	call	2cb48 <__floatunsidf>
   22cd0:	017f8434 	movhi	r5,65040
   22cd4:	01800044 	movi	r6,1
   22cd8:	1009883a 	mov	r4,r2
   22cdc:	194b883a 	add	r5,r3,r5
   22ce0:	843fffc4 	addi	r16,r16,-1
   22ce4:	d9801115 	stw	r6,68(sp)
   22ce8:	000d883a 	mov	r6,zero
   22cec:	01cffe34 	movhi	r7,16376
   22cf0:	002c0f00 	call	2c0f0 <__subdf3>
   22cf4:	0198dbf4 	movhi	r6,25455
   22cf8:	01cff4f4 	movhi	r7,16339
   22cfc:	3190d844 	addi	r6,r6,17249
   22d00:	39e1e9c4 	addi	r7,r7,-30809
   22d04:	1009883a 	mov	r4,r2
   22d08:	180b883a 	mov	r5,r3
   22d0c:	002b9d80 	call	2b9d8 <__muldf3>
   22d10:	01a2d874 	movhi	r6,35681
   22d14:	01cff1f4 	movhi	r7,16327
   22d18:	31b22cc4 	addi	r6,r6,-14157
   22d1c:	39e28a04 	addi	r7,r7,-30168
   22d20:	180b883a 	mov	r5,r3
   22d24:	1009883a 	mov	r4,r2
   22d28:	002a5ec0 	call	2a5ec <__adddf3>
   22d2c:	8009883a 	mov	r4,r16
   22d30:	1029883a 	mov	r20,r2
   22d34:	1823883a 	mov	r17,r3
   22d38:	002ca6c0 	call	2ca6c <__floatsidf>
   22d3c:	019427f4 	movhi	r6,20639
   22d40:	01cff4f4 	movhi	r7,16339
   22d44:	319e7ec4 	addi	r6,r6,31227
   22d48:	39d104c4 	addi	r7,r7,17427
   22d4c:	1009883a 	mov	r4,r2
   22d50:	180b883a 	mov	r5,r3
   22d54:	002b9d80 	call	2b9d8 <__muldf3>
   22d58:	100d883a 	mov	r6,r2
   22d5c:	180f883a 	mov	r7,r3
   22d60:	a009883a 	mov	r4,r20
   22d64:	880b883a 	mov	r5,r17
   22d68:	002a5ec0 	call	2a5ec <__adddf3>
   22d6c:	1009883a 	mov	r4,r2
   22d70:	180b883a 	mov	r5,r3
   22d74:	1029883a 	mov	r20,r2
   22d78:	1823883a 	mov	r17,r3
   22d7c:	002c9ec0 	call	2c9ec <__fixdfsi>
   22d80:	000d883a 	mov	r6,zero
   22d84:	000f883a 	mov	r7,zero
   22d88:	a009883a 	mov	r4,r20
   22d8c:	880b883a 	mov	r5,r17
   22d90:	d8800515 	stw	r2,20(sp)
   22d94:	002b8e40 	call	2b8e4 <__ledf2>
   22d98:	10028716 	blt	r2,zero,237b8 <_dtoa_r+0xc88>
   22d9c:	d8c00517 	ldw	r3,20(sp)
   22da0:	00800584 	movi	r2,22
   22da4:	10c27536 	bltu	r2,r3,2377c <_dtoa_r+0xc4c>
   22da8:	180490fa 	slli	r2,r3,3
   22dac:	00c000f4 	movhi	r3,3
   22db0:	18fd4404 	addi	r3,r3,-2800
   22db4:	1885883a 	add	r2,r3,r2
   22db8:	11000017 	ldw	r4,0(r2)
   22dbc:	11400117 	ldw	r5,4(r2)
   22dc0:	900d883a 	mov	r6,r18
   22dc4:	980f883a 	mov	r7,r19
   22dc8:	002b8080 	call	2b808 <__gedf2>
   22dcc:	00828d0e 	bge	zero,r2,23804 <_dtoa_r+0xcd4>
   22dd0:	d9000517 	ldw	r4,20(sp)
   22dd4:	d8000e15 	stw	zero,56(sp)
   22dd8:	213fffc4 	addi	r4,r4,-1
   22ddc:	d9000515 	stw	r4,20(sp)
   22de0:	b42dc83a 	sub	r22,r22,r16
   22de4:	b5bfffc4 	addi	r22,r22,-1
   22de8:	b0026f16 	blt	r22,zero,237a8 <_dtoa_r+0xc78>
   22dec:	d8000815 	stw	zero,32(sp)
   22df0:	d9c00517 	ldw	r7,20(sp)
   22df4:	38026416 	blt	r7,zero,23788 <_dtoa_r+0xc58>
   22df8:	b1ed883a 	add	r22,r22,r7
   22dfc:	d9c00d15 	stw	r7,52(sp)
   22e00:	d8000a15 	stw	zero,40(sp)
   22e04:	d9800317 	ldw	r6,12(sp)
   22e08:	00800244 	movi	r2,9
   22e0c:	11811436 	bltu	r2,r6,23260 <_dtoa_r+0x730>
   22e10:	00800144 	movi	r2,5
   22e14:	1184e10e 	bge	r2,r6,2419c <_dtoa_r+0x166c>
   22e18:	31bfff04 	addi	r6,r6,-4
   22e1c:	d9800315 	stw	r6,12(sp)
   22e20:	0023883a 	mov	r17,zero
   22e24:	d9800317 	ldw	r6,12(sp)
   22e28:	008000c4 	movi	r2,3
   22e2c:	30836726 	beq	r6,r2,23bcc <_dtoa_r+0x109c>
   22e30:	1183410e 	bge	r2,r6,23b38 <_dtoa_r+0x1008>
   22e34:	d9c00317 	ldw	r7,12(sp)
   22e38:	00800104 	movi	r2,4
   22e3c:	38827c26 	beq	r7,r2,23830 <_dtoa_r+0xd00>
   22e40:	00800144 	movi	r2,5
   22e44:	3884c41e 	bne	r7,r2,24158 <_dtoa_r+0x1628>
   22e48:	00800044 	movi	r2,1
   22e4c:	d8800b15 	stw	r2,44(sp)
   22e50:	d8c00517 	ldw	r3,20(sp)
   22e54:	d9002217 	ldw	r4,136(sp)
   22e58:	1907883a 	add	r3,r3,r4
   22e5c:	19800044 	addi	r6,r3,1
   22e60:	d8c00c15 	stw	r3,48(sp)
   22e64:	d9800615 	stw	r6,24(sp)
   22e68:	0183a40e 	bge	zero,r6,23cfc <_dtoa_r+0x11cc>
   22e6c:	d9800617 	ldw	r6,24(sp)
   22e70:	3021883a 	mov	r16,r6
   22e74:	e0001115 	stw	zero,68(fp)
   22e78:	008005c4 	movi	r2,23
   22e7c:	1184c92e 	bgeu	r2,r6,241a4 <_dtoa_r+0x1674>
   22e80:	00c00044 	movi	r3,1
   22e84:	00800104 	movi	r2,4
   22e88:	1085883a 	add	r2,r2,r2
   22e8c:	11000504 	addi	r4,r2,20
   22e90:	180b883a 	mov	r5,r3
   22e94:	18c00044 	addi	r3,r3,1
   22e98:	313ffb2e 	bgeu	r6,r4,22e88 <__alt_data_end+0xfffe2e88>
   22e9c:	e1401115 	stw	r5,68(fp)
   22ea0:	e009883a 	mov	r4,fp
   22ea4:	00261cc0 	call	261cc <_Balloc>
   22ea8:	d8800715 	stw	r2,28(sp)
   22eac:	e0801015 	stw	r2,64(fp)
   22eb0:	00800384 	movi	r2,14
   22eb4:	1400f736 	bltu	r2,r16,23294 <_dtoa_r+0x764>
   22eb8:	8800f626 	beq	r17,zero,23294 <_dtoa_r+0x764>
   22ebc:	d9c00517 	ldw	r7,20(sp)
   22ec0:	01c39a0e 	bge	zero,r7,23d2c <_dtoa_r+0x11fc>
   22ec4:	388003cc 	andi	r2,r7,15
   22ec8:	100490fa 	slli	r2,r2,3
   22ecc:	382bd13a 	srai	r21,r7,4
   22ed0:	00c000f4 	movhi	r3,3
   22ed4:	18fd4404 	addi	r3,r3,-2800
   22ed8:	1885883a 	add	r2,r3,r2
   22edc:	a8c0040c 	andi	r3,r21,16
   22ee0:	12400017 	ldw	r9,0(r2)
   22ee4:	12000117 	ldw	r8,4(r2)
   22ee8:	18037926 	beq	r3,zero,23cd0 <_dtoa_r+0x11a0>
   22eec:	008000f4 	movhi	r2,3
   22ef0:	10bd3a04 	addi	r2,r2,-2840
   22ef4:	11800817 	ldw	r6,32(r2)
   22ef8:	11c00917 	ldw	r7,36(r2)
   22efc:	9009883a 	mov	r4,r18
   22f00:	980b883a 	mov	r5,r19
   22f04:	da001715 	stw	r8,92(sp)
   22f08:	da401615 	stw	r9,88(sp)
   22f0c:	002ae980 	call	2ae98 <__divdf3>
   22f10:	da001717 	ldw	r8,92(sp)
   22f14:	da401617 	ldw	r9,88(sp)
   22f18:	ad4003cc 	andi	r21,r21,15
   22f1c:	040000c4 	movi	r16,3
   22f20:	1023883a 	mov	r17,r2
   22f24:	1829883a 	mov	r20,r3
   22f28:	a8001126 	beq	r21,zero,22f70 <_dtoa_r+0x440>
   22f2c:	05c000f4 	movhi	r23,3
   22f30:	bdfd3a04 	addi	r23,r23,-2840
   22f34:	4805883a 	mov	r2,r9
   22f38:	4007883a 	mov	r3,r8
   22f3c:	a980004c 	andi	r6,r21,1
   22f40:	1009883a 	mov	r4,r2
   22f44:	a82bd07a 	srai	r21,r21,1
   22f48:	180b883a 	mov	r5,r3
   22f4c:	30000426 	beq	r6,zero,22f60 <_dtoa_r+0x430>
   22f50:	b9800017 	ldw	r6,0(r23)
   22f54:	b9c00117 	ldw	r7,4(r23)
   22f58:	84000044 	addi	r16,r16,1
   22f5c:	002b9d80 	call	2b9d8 <__muldf3>
   22f60:	bdc00204 	addi	r23,r23,8
   22f64:	a83ff51e 	bne	r21,zero,22f3c <__alt_data_end+0xfffe2f3c>
   22f68:	1013883a 	mov	r9,r2
   22f6c:	1811883a 	mov	r8,r3
   22f70:	480d883a 	mov	r6,r9
   22f74:	400f883a 	mov	r7,r8
   22f78:	8809883a 	mov	r4,r17
   22f7c:	a00b883a 	mov	r5,r20
   22f80:	002ae980 	call	2ae98 <__divdf3>
   22f84:	d8800f15 	stw	r2,60(sp)
   22f88:	d8c01015 	stw	r3,64(sp)
   22f8c:	d8c00e17 	ldw	r3,56(sp)
   22f90:	18000626 	beq	r3,zero,22fac <_dtoa_r+0x47c>
   22f94:	d9000f17 	ldw	r4,60(sp)
   22f98:	d9401017 	ldw	r5,64(sp)
   22f9c:	000d883a 	mov	r6,zero
   22fa0:	01cffc34 	movhi	r7,16368
   22fa4:	002b8e40 	call	2b8e4 <__ledf2>
   22fa8:	10040b16 	blt	r2,zero,23fd8 <_dtoa_r+0x14a8>
   22fac:	8009883a 	mov	r4,r16
   22fb0:	002ca6c0 	call	2ca6c <__floatsidf>
   22fb4:	d9800f17 	ldw	r6,60(sp)
   22fb8:	d9c01017 	ldw	r7,64(sp)
   22fbc:	1009883a 	mov	r4,r2
   22fc0:	180b883a 	mov	r5,r3
   22fc4:	002b9d80 	call	2b9d8 <__muldf3>
   22fc8:	000d883a 	mov	r6,zero
   22fcc:	01d00734 	movhi	r7,16412
   22fd0:	1009883a 	mov	r4,r2
   22fd4:	180b883a 	mov	r5,r3
   22fd8:	002a5ec0 	call	2a5ec <__adddf3>
   22fdc:	1021883a 	mov	r16,r2
   22fe0:	d8800617 	ldw	r2,24(sp)
   22fe4:	047f3034 	movhi	r17,64704
   22fe8:	1c63883a 	add	r17,r3,r17
   22fec:	10031826 	beq	r2,zero,23c50 <_dtoa_r+0x1120>
   22ff0:	d8c00517 	ldw	r3,20(sp)
   22ff4:	db000617 	ldw	r12,24(sp)
   22ff8:	d8c01315 	stw	r3,76(sp)
   22ffc:	d9000b17 	ldw	r4,44(sp)
   23000:	20038f26 	beq	r4,zero,23e40 <_dtoa_r+0x1310>
   23004:	60bfffc4 	addi	r2,r12,-1
   23008:	100490fa 	slli	r2,r2,3
   2300c:	00c000f4 	movhi	r3,3
   23010:	18fd4404 	addi	r3,r3,-2800
   23014:	1885883a 	add	r2,r3,r2
   23018:	11800017 	ldw	r6,0(r2)
   2301c:	11c00117 	ldw	r7,4(r2)
   23020:	d8800717 	ldw	r2,28(sp)
   23024:	0009883a 	mov	r4,zero
   23028:	014ff834 	movhi	r5,16352
   2302c:	db001615 	stw	r12,88(sp)
   23030:	15c00044 	addi	r23,r2,1
   23034:	002ae980 	call	2ae98 <__divdf3>
   23038:	800d883a 	mov	r6,r16
   2303c:	880f883a 	mov	r7,r17
   23040:	1009883a 	mov	r4,r2
   23044:	180b883a 	mov	r5,r3
   23048:	002c0f00 	call	2c0f0 <__subdf3>
   2304c:	d9401017 	ldw	r5,64(sp)
   23050:	d9000f17 	ldw	r4,60(sp)
   23054:	102b883a 	mov	r21,r2
   23058:	d8c01215 	stw	r3,72(sp)
   2305c:	002c9ec0 	call	2c9ec <__fixdfsi>
   23060:	1009883a 	mov	r4,r2
   23064:	1029883a 	mov	r20,r2
   23068:	002ca6c0 	call	2ca6c <__floatsidf>
   2306c:	d9000f17 	ldw	r4,60(sp)
   23070:	d9401017 	ldw	r5,64(sp)
   23074:	100d883a 	mov	r6,r2
   23078:	180f883a 	mov	r7,r3
   2307c:	002c0f00 	call	2c0f0 <__subdf3>
   23080:	1823883a 	mov	r17,r3
   23084:	d8c00717 	ldw	r3,28(sp)
   23088:	d9401217 	ldw	r5,72(sp)
   2308c:	a2000c04 	addi	r8,r20,48
   23090:	1021883a 	mov	r16,r2
   23094:	1a000005 	stb	r8,0(r3)
   23098:	800d883a 	mov	r6,r16
   2309c:	880f883a 	mov	r7,r17
   230a0:	a809883a 	mov	r4,r21
   230a4:	4029883a 	mov	r20,r8
   230a8:	002b8080 	call	2b808 <__gedf2>
   230ac:	00841d16 	blt	zero,r2,24124 <_dtoa_r+0x15f4>
   230b0:	800d883a 	mov	r6,r16
   230b4:	880f883a 	mov	r7,r17
   230b8:	0009883a 	mov	r4,zero
   230bc:	014ffc34 	movhi	r5,16368
   230c0:	002c0f00 	call	2c0f0 <__subdf3>
   230c4:	d9401217 	ldw	r5,72(sp)
   230c8:	100d883a 	mov	r6,r2
   230cc:	180f883a 	mov	r7,r3
   230d0:	a809883a 	mov	r4,r21
   230d4:	002b8080 	call	2b808 <__gedf2>
   230d8:	db001617 	ldw	r12,88(sp)
   230dc:	00840e16 	blt	zero,r2,24118 <_dtoa_r+0x15e8>
   230e0:	00800044 	movi	r2,1
   230e4:	13006b0e 	bge	r2,r12,23294 <_dtoa_r+0x764>
   230e8:	d9000717 	ldw	r4,28(sp)
   230ec:	dd800f15 	stw	r22,60(sp)
   230f0:	dcc01015 	stw	r19,64(sp)
   230f4:	2319883a 	add	r12,r4,r12
   230f8:	dcc01217 	ldw	r19,72(sp)
   230fc:	602d883a 	mov	r22,r12
   23100:	dc801215 	stw	r18,72(sp)
   23104:	b825883a 	mov	r18,r23
   23108:	00000906 	br	23130 <_dtoa_r+0x600>
   2310c:	002c0f00 	call	2c0f0 <__subdf3>
   23110:	a80d883a 	mov	r6,r21
   23114:	980f883a 	mov	r7,r19
   23118:	1009883a 	mov	r4,r2
   2311c:	180b883a 	mov	r5,r3
   23120:	002b8e40 	call	2b8e4 <__ledf2>
   23124:	1003e816 	blt	r2,zero,240c8 <_dtoa_r+0x1598>
   23128:	b825883a 	mov	r18,r23
   2312c:	bd83e926 	beq	r23,r22,240d4 <_dtoa_r+0x15a4>
   23130:	a809883a 	mov	r4,r21
   23134:	980b883a 	mov	r5,r19
   23138:	000d883a 	mov	r6,zero
   2313c:	01d00934 	movhi	r7,16420
   23140:	002b9d80 	call	2b9d8 <__muldf3>
   23144:	000d883a 	mov	r6,zero
   23148:	01d00934 	movhi	r7,16420
   2314c:	8009883a 	mov	r4,r16
   23150:	880b883a 	mov	r5,r17
   23154:	102b883a 	mov	r21,r2
   23158:	1827883a 	mov	r19,r3
   2315c:	002b9d80 	call	2b9d8 <__muldf3>
   23160:	180b883a 	mov	r5,r3
   23164:	1009883a 	mov	r4,r2
   23168:	1821883a 	mov	r16,r3
   2316c:	1023883a 	mov	r17,r2
   23170:	002c9ec0 	call	2c9ec <__fixdfsi>
   23174:	1009883a 	mov	r4,r2
   23178:	1029883a 	mov	r20,r2
   2317c:	002ca6c0 	call	2ca6c <__floatsidf>
   23180:	8809883a 	mov	r4,r17
   23184:	800b883a 	mov	r5,r16
   23188:	100d883a 	mov	r6,r2
   2318c:	180f883a 	mov	r7,r3
   23190:	002c0f00 	call	2c0f0 <__subdf3>
   23194:	a5000c04 	addi	r20,r20,48
   23198:	a80d883a 	mov	r6,r21
   2319c:	980f883a 	mov	r7,r19
   231a0:	1009883a 	mov	r4,r2
   231a4:	180b883a 	mov	r5,r3
   231a8:	95000005 	stb	r20,0(r18)
   231ac:	1021883a 	mov	r16,r2
   231b0:	1823883a 	mov	r17,r3
   231b4:	002b8e40 	call	2b8e4 <__ledf2>
   231b8:	bdc00044 	addi	r23,r23,1
   231bc:	800d883a 	mov	r6,r16
   231c0:	880f883a 	mov	r7,r17
   231c4:	0009883a 	mov	r4,zero
   231c8:	014ffc34 	movhi	r5,16368
   231cc:	103fcf0e 	bge	r2,zero,2310c <__alt_data_end+0xfffe310c>
   231d0:	d8c01317 	ldw	r3,76(sp)
   231d4:	d8c00515 	stw	r3,20(sp)
   231d8:	d9400917 	ldw	r5,36(sp)
   231dc:	e009883a 	mov	r4,fp
   231e0:	00262740 	call	26274 <_Bfree>
   231e4:	d9000517 	ldw	r4,20(sp)
   231e8:	d9802317 	ldw	r6,140(sp)
   231ec:	d9c02517 	ldw	r7,148(sp)
   231f0:	b8000005 	stb	zero,0(r23)
   231f4:	20800044 	addi	r2,r4,1
   231f8:	30800015 	stw	r2,0(r6)
   231fc:	3802aa26 	beq	r7,zero,23ca8 <_dtoa_r+0x1178>
   23200:	3dc00015 	stw	r23,0(r7)
   23204:	d8800717 	ldw	r2,28(sp)
   23208:	003e7906 	br	22bf0 <__alt_data_end+0xfffe2bf0>
   2320c:	00800434 	movhi	r2,16
   23210:	10bfffc4 	addi	r2,r2,-1
   23214:	88a2703a 	and	r17,r17,r2
   23218:	883e851e 	bne	r17,zero,22c30 <__alt_data_end+0xfffe2c30>
   2321c:	008000f4 	movhi	r2,3
   23220:	10bd2504 	addi	r2,r2,-2924
   23224:	003e8406 	br	22c38 <__alt_data_end+0xfffe2c38>
   23228:	10c00204 	addi	r3,r2,8
   2322c:	003e8706 	br	22c4c <__alt_data_end+0xfffe2c4c>
   23230:	01400434 	movhi	r5,16
   23234:	297fffc4 	addi	r5,r5,-1
   23238:	994a703a 	and	r5,r19,r5
   2323c:	9009883a 	mov	r4,r18
   23240:	843f0044 	addi	r16,r16,-1023
   23244:	294ffc34 	orhi	r5,r5,16368
   23248:	dd800217 	ldw	r22,8(sp)
   2324c:	d8001115 	stw	zero,68(sp)
   23250:	003ea506 	br	22ce8 <__alt_data_end+0xfffe2ce8>
   23254:	008000f4 	movhi	r2,3
   23258:	10bd1c04 	addi	r2,r2,-2960
   2325c:	003e6406 	br	22bf0 <__alt_data_end+0xfffe2bf0>
   23260:	e0001115 	stw	zero,68(fp)
   23264:	000b883a 	mov	r5,zero
   23268:	e009883a 	mov	r4,fp
   2326c:	00261cc0 	call	261cc <_Balloc>
   23270:	01bfffc4 	movi	r6,-1
   23274:	01c00044 	movi	r7,1
   23278:	d8800715 	stw	r2,28(sp)
   2327c:	d9800c15 	stw	r6,48(sp)
   23280:	e0801015 	stw	r2,64(fp)
   23284:	d8000315 	stw	zero,12(sp)
   23288:	d9c00b15 	stw	r7,44(sp)
   2328c:	d9800615 	stw	r6,24(sp)
   23290:	d8002215 	stw	zero,136(sp)
   23294:	d8800117 	ldw	r2,4(sp)
   23298:	10008916 	blt	r2,zero,234c0 <_dtoa_r+0x990>
   2329c:	d9000517 	ldw	r4,20(sp)
   232a0:	00c00384 	movi	r3,14
   232a4:	19008616 	blt	r3,r4,234c0 <_dtoa_r+0x990>
   232a8:	200490fa 	slli	r2,r4,3
   232ac:	00c000f4 	movhi	r3,3
   232b0:	d9802217 	ldw	r6,136(sp)
   232b4:	18fd4404 	addi	r3,r3,-2800
   232b8:	1885883a 	add	r2,r3,r2
   232bc:	14000017 	ldw	r16,0(r2)
   232c0:	14400117 	ldw	r17,4(r2)
   232c4:	30016316 	blt	r6,zero,23854 <_dtoa_r+0xd24>
   232c8:	800d883a 	mov	r6,r16
   232cc:	880f883a 	mov	r7,r17
   232d0:	9009883a 	mov	r4,r18
   232d4:	980b883a 	mov	r5,r19
   232d8:	002ae980 	call	2ae98 <__divdf3>
   232dc:	180b883a 	mov	r5,r3
   232e0:	1009883a 	mov	r4,r2
   232e4:	002c9ec0 	call	2c9ec <__fixdfsi>
   232e8:	1009883a 	mov	r4,r2
   232ec:	102b883a 	mov	r21,r2
   232f0:	002ca6c0 	call	2ca6c <__floatsidf>
   232f4:	800d883a 	mov	r6,r16
   232f8:	880f883a 	mov	r7,r17
   232fc:	1009883a 	mov	r4,r2
   23300:	180b883a 	mov	r5,r3
   23304:	002b9d80 	call	2b9d8 <__muldf3>
   23308:	100d883a 	mov	r6,r2
   2330c:	180f883a 	mov	r7,r3
   23310:	9009883a 	mov	r4,r18
   23314:	980b883a 	mov	r5,r19
   23318:	002c0f00 	call	2c0f0 <__subdf3>
   2331c:	d9c00717 	ldw	r7,28(sp)
   23320:	1009883a 	mov	r4,r2
   23324:	a8800c04 	addi	r2,r21,48
   23328:	38800005 	stb	r2,0(r7)
   2332c:	3dc00044 	addi	r23,r7,1
   23330:	d9c00617 	ldw	r7,24(sp)
   23334:	01800044 	movi	r6,1
   23338:	180b883a 	mov	r5,r3
   2333c:	2005883a 	mov	r2,r4
   23340:	39803826 	beq	r7,r6,23424 <_dtoa_r+0x8f4>
   23344:	000d883a 	mov	r6,zero
   23348:	01d00934 	movhi	r7,16420
   2334c:	002b9d80 	call	2b9d8 <__muldf3>
   23350:	000d883a 	mov	r6,zero
   23354:	000f883a 	mov	r7,zero
   23358:	1009883a 	mov	r4,r2
   2335c:	180b883a 	mov	r5,r3
   23360:	1025883a 	mov	r18,r2
   23364:	1827883a 	mov	r19,r3
   23368:	002b7800 	call	2b780 <__eqdf2>
   2336c:	103f9a26 	beq	r2,zero,231d8 <__alt_data_end+0xfffe31d8>
   23370:	d9c00617 	ldw	r7,24(sp)
   23374:	d8c00717 	ldw	r3,28(sp)
   23378:	b829883a 	mov	r20,r23
   2337c:	38bfffc4 	addi	r2,r7,-1
   23380:	18ad883a 	add	r22,r3,r2
   23384:	00000a06 	br	233b0 <_dtoa_r+0x880>
   23388:	002b9d80 	call	2b9d8 <__muldf3>
   2338c:	000d883a 	mov	r6,zero
   23390:	000f883a 	mov	r7,zero
   23394:	1009883a 	mov	r4,r2
   23398:	180b883a 	mov	r5,r3
   2339c:	1025883a 	mov	r18,r2
   233a0:	1827883a 	mov	r19,r3
   233a4:	b829883a 	mov	r20,r23
   233a8:	002b7800 	call	2b780 <__eqdf2>
   233ac:	103f8a26 	beq	r2,zero,231d8 <__alt_data_end+0xfffe31d8>
   233b0:	800d883a 	mov	r6,r16
   233b4:	880f883a 	mov	r7,r17
   233b8:	9009883a 	mov	r4,r18
   233bc:	980b883a 	mov	r5,r19
   233c0:	002ae980 	call	2ae98 <__divdf3>
   233c4:	180b883a 	mov	r5,r3
   233c8:	1009883a 	mov	r4,r2
   233cc:	002c9ec0 	call	2c9ec <__fixdfsi>
   233d0:	1009883a 	mov	r4,r2
   233d4:	102b883a 	mov	r21,r2
   233d8:	002ca6c0 	call	2ca6c <__floatsidf>
   233dc:	800d883a 	mov	r6,r16
   233e0:	880f883a 	mov	r7,r17
   233e4:	1009883a 	mov	r4,r2
   233e8:	180b883a 	mov	r5,r3
   233ec:	002b9d80 	call	2b9d8 <__muldf3>
   233f0:	100d883a 	mov	r6,r2
   233f4:	180f883a 	mov	r7,r3
   233f8:	9009883a 	mov	r4,r18
   233fc:	980b883a 	mov	r5,r19
   23400:	002c0f00 	call	2c0f0 <__subdf3>
   23404:	aa000c04 	addi	r8,r21,48
   23408:	a2000005 	stb	r8,0(r20)
   2340c:	000d883a 	mov	r6,zero
   23410:	01d00934 	movhi	r7,16420
   23414:	1009883a 	mov	r4,r2
   23418:	180b883a 	mov	r5,r3
   2341c:	a5c00044 	addi	r23,r20,1
   23420:	b53fd91e 	bne	r22,r20,23388 <__alt_data_end+0xfffe3388>
   23424:	100d883a 	mov	r6,r2
   23428:	180f883a 	mov	r7,r3
   2342c:	1009883a 	mov	r4,r2
   23430:	180b883a 	mov	r5,r3
   23434:	002a5ec0 	call	2a5ec <__adddf3>
   23438:	100d883a 	mov	r6,r2
   2343c:	180f883a 	mov	r7,r3
   23440:	8009883a 	mov	r4,r16
   23444:	880b883a 	mov	r5,r17
   23448:	1027883a 	mov	r19,r2
   2344c:	1825883a 	mov	r18,r3
   23450:	002b8e40 	call	2b8e4 <__ledf2>
   23454:	10000816 	blt	r2,zero,23478 <_dtoa_r+0x948>
   23458:	980d883a 	mov	r6,r19
   2345c:	900f883a 	mov	r7,r18
   23460:	8009883a 	mov	r4,r16
   23464:	880b883a 	mov	r5,r17
   23468:	002b7800 	call	2b780 <__eqdf2>
   2346c:	103f5a1e 	bne	r2,zero,231d8 <__alt_data_end+0xfffe31d8>
   23470:	ad40004c 	andi	r21,r21,1
   23474:	a83f5826 	beq	r21,zero,231d8 <__alt_data_end+0xfffe31d8>
   23478:	bd3fffc3 	ldbu	r20,-1(r23)
   2347c:	b8bfffc4 	addi	r2,r23,-1
   23480:	1007883a 	mov	r3,r2
   23484:	01400e44 	movi	r5,57
   23488:	d9800717 	ldw	r6,28(sp)
   2348c:	00000506 	br	234a4 <_dtoa_r+0x974>
   23490:	18ffffc4 	addi	r3,r3,-1
   23494:	11824726 	beq	r2,r6,23db4 <_dtoa_r+0x1284>
   23498:	1d000003 	ldbu	r20,0(r3)
   2349c:	102f883a 	mov	r23,r2
   234a0:	10bfffc4 	addi	r2,r2,-1
   234a4:	a1003fcc 	andi	r4,r20,255
   234a8:	2100201c 	xori	r4,r4,128
   234ac:	213fe004 	addi	r4,r4,-128
   234b0:	217ff726 	beq	r4,r5,23490 <__alt_data_end+0xfffe3490>
   234b4:	a2000044 	addi	r8,r20,1
   234b8:	12000005 	stb	r8,0(r2)
   234bc:	003f4606 	br	231d8 <__alt_data_end+0xfffe31d8>
   234c0:	d9000b17 	ldw	r4,44(sp)
   234c4:	2000c826 	beq	r4,zero,237e8 <_dtoa_r+0xcb8>
   234c8:	d9800317 	ldw	r6,12(sp)
   234cc:	00c00044 	movi	r3,1
   234d0:	1980f90e 	bge	r3,r6,238b8 <_dtoa_r+0xd88>
   234d4:	d8800617 	ldw	r2,24(sp)
   234d8:	d8c00a17 	ldw	r3,40(sp)
   234dc:	157fffc4 	addi	r21,r2,-1
   234e0:	1d41f316 	blt	r3,r21,23cb0 <_dtoa_r+0x1180>
   234e4:	1d6bc83a 	sub	r21,r3,r21
   234e8:	d9c00617 	ldw	r7,24(sp)
   234ec:	3802aa16 	blt	r7,zero,23f98 <_dtoa_r+0x1468>
   234f0:	dd000817 	ldw	r20,32(sp)
   234f4:	d8800617 	ldw	r2,24(sp)
   234f8:	d8c00817 	ldw	r3,32(sp)
   234fc:	01400044 	movi	r5,1
   23500:	e009883a 	mov	r4,fp
   23504:	1887883a 	add	r3,r3,r2
   23508:	d8c00815 	stw	r3,32(sp)
   2350c:	b0ad883a 	add	r22,r22,r2
   23510:	00265d80 	call	265d8 <__i2b>
   23514:	1023883a 	mov	r17,r2
   23518:	a0000826 	beq	r20,zero,2353c <_dtoa_r+0xa0c>
   2351c:	0580070e 	bge	zero,r22,2353c <_dtoa_r+0xa0c>
   23520:	a005883a 	mov	r2,r20
   23524:	b500b916 	blt	r22,r20,2380c <_dtoa_r+0xcdc>
   23528:	d9000817 	ldw	r4,32(sp)
   2352c:	a0a9c83a 	sub	r20,r20,r2
   23530:	b0adc83a 	sub	r22,r22,r2
   23534:	2089c83a 	sub	r4,r4,r2
   23538:	d9000815 	stw	r4,32(sp)
   2353c:	d9800a17 	ldw	r6,40(sp)
   23540:	0181810e 	bge	zero,r6,23b48 <_dtoa_r+0x1018>
   23544:	d9c00b17 	ldw	r7,44(sp)
   23548:	3800b326 	beq	r7,zero,23818 <_dtoa_r+0xce8>
   2354c:	a800b226 	beq	r21,zero,23818 <_dtoa_r+0xce8>
   23550:	880b883a 	mov	r5,r17
   23554:	a80d883a 	mov	r6,r21
   23558:	e009883a 	mov	r4,fp
   2355c:	002680c0 	call	2680c <__pow5mult>
   23560:	d9800917 	ldw	r6,36(sp)
   23564:	100b883a 	mov	r5,r2
   23568:	e009883a 	mov	r4,fp
   2356c:	1023883a 	mov	r17,r2
   23570:	00266140 	call	26614 <__multiply>
   23574:	1021883a 	mov	r16,r2
   23578:	d8800a17 	ldw	r2,40(sp)
   2357c:	d9400917 	ldw	r5,36(sp)
   23580:	e009883a 	mov	r4,fp
   23584:	1545c83a 	sub	r2,r2,r21
   23588:	d8800a15 	stw	r2,40(sp)
   2358c:	00262740 	call	26274 <_Bfree>
   23590:	d8c00a17 	ldw	r3,40(sp)
   23594:	18009f1e 	bne	r3,zero,23814 <_dtoa_r+0xce4>
   23598:	05c00044 	movi	r23,1
   2359c:	e009883a 	mov	r4,fp
   235a0:	b80b883a 	mov	r5,r23
   235a4:	00265d80 	call	265d8 <__i2b>
   235a8:	d9000d17 	ldw	r4,52(sp)
   235ac:	102b883a 	mov	r21,r2
   235b0:	2000ce26 	beq	r4,zero,238ec <_dtoa_r+0xdbc>
   235b4:	200d883a 	mov	r6,r4
   235b8:	100b883a 	mov	r5,r2
   235bc:	e009883a 	mov	r4,fp
   235c0:	002680c0 	call	2680c <__pow5mult>
   235c4:	d9800317 	ldw	r6,12(sp)
   235c8:	102b883a 	mov	r21,r2
   235cc:	b981810e 	bge	r23,r6,23bd4 <_dtoa_r+0x10a4>
   235d0:	0027883a 	mov	r19,zero
   235d4:	a8800417 	ldw	r2,16(r21)
   235d8:	05c00804 	movi	r23,32
   235dc:	10800104 	addi	r2,r2,4
   235e0:	1085883a 	add	r2,r2,r2
   235e4:	1085883a 	add	r2,r2,r2
   235e8:	a885883a 	add	r2,r21,r2
   235ec:	11000017 	ldw	r4,0(r2)
   235f0:	00264c00 	call	264c0 <__hi0bits>
   235f4:	b885c83a 	sub	r2,r23,r2
   235f8:	1585883a 	add	r2,r2,r22
   235fc:	108007cc 	andi	r2,r2,31
   23600:	1000b326 	beq	r2,zero,238d0 <_dtoa_r+0xda0>
   23604:	00c00804 	movi	r3,32
   23608:	1887c83a 	sub	r3,r3,r2
   2360c:	01000104 	movi	r4,4
   23610:	20c2cd0e 	bge	r4,r3,24148 <_dtoa_r+0x1618>
   23614:	00c00704 	movi	r3,28
   23618:	1885c83a 	sub	r2,r3,r2
   2361c:	d8c00817 	ldw	r3,32(sp)
   23620:	a0a9883a 	add	r20,r20,r2
   23624:	b0ad883a 	add	r22,r22,r2
   23628:	1887883a 	add	r3,r3,r2
   2362c:	d8c00815 	stw	r3,32(sp)
   23630:	d9800817 	ldw	r6,32(sp)
   23634:	0180040e 	bge	zero,r6,23648 <_dtoa_r+0xb18>
   23638:	800b883a 	mov	r5,r16
   2363c:	e009883a 	mov	r4,fp
   23640:	002694c0 	call	2694c <__lshift>
   23644:	1021883a 	mov	r16,r2
   23648:	0580050e 	bge	zero,r22,23660 <_dtoa_r+0xb30>
   2364c:	a80b883a 	mov	r5,r21
   23650:	b00d883a 	mov	r6,r22
   23654:	e009883a 	mov	r4,fp
   23658:	002694c0 	call	2694c <__lshift>
   2365c:	102b883a 	mov	r21,r2
   23660:	d9c00e17 	ldw	r7,56(sp)
   23664:	3801211e 	bne	r7,zero,23aec <_dtoa_r+0xfbc>
   23668:	d9800617 	ldw	r6,24(sp)
   2366c:	0181380e 	bge	zero,r6,23b50 <_dtoa_r+0x1020>
   23670:	d8c00b17 	ldw	r3,44(sp)
   23674:	1800ab1e 	bne	r3,zero,23924 <_dtoa_r+0xdf4>
   23678:	dc800717 	ldw	r18,28(sp)
   2367c:	dcc00617 	ldw	r19,24(sp)
   23680:	9029883a 	mov	r20,r18
   23684:	00000206 	br	23690 <_dtoa_r+0xb60>
   23688:	002629c0 	call	2629c <__multadd>
   2368c:	1021883a 	mov	r16,r2
   23690:	a80b883a 	mov	r5,r21
   23694:	8009883a 	mov	r4,r16
   23698:	00229300 	call	22930 <quorem>
   2369c:	10800c04 	addi	r2,r2,48
   236a0:	90800005 	stb	r2,0(r18)
   236a4:	94800044 	addi	r18,r18,1
   236a8:	9507c83a 	sub	r3,r18,r20
   236ac:	000f883a 	mov	r7,zero
   236b0:	01800284 	movi	r6,10
   236b4:	800b883a 	mov	r5,r16
   236b8:	e009883a 	mov	r4,fp
   236bc:	1cfff216 	blt	r3,r19,23688 <__alt_data_end+0xfffe3688>
   236c0:	1011883a 	mov	r8,r2
   236c4:	d8800617 	ldw	r2,24(sp)
   236c8:	0082370e 	bge	zero,r2,23fa8 <_dtoa_r+0x1478>
   236cc:	d9000717 	ldw	r4,28(sp)
   236d0:	0025883a 	mov	r18,zero
   236d4:	20af883a 	add	r23,r4,r2
   236d8:	01800044 	movi	r6,1
   236dc:	800b883a 	mov	r5,r16
   236e0:	e009883a 	mov	r4,fp
   236e4:	da001715 	stw	r8,92(sp)
   236e8:	002694c0 	call	2694c <__lshift>
   236ec:	a80b883a 	mov	r5,r21
   236f0:	1009883a 	mov	r4,r2
   236f4:	d8800915 	stw	r2,36(sp)
   236f8:	0026a940 	call	26a94 <__mcmp>
   236fc:	da001717 	ldw	r8,92(sp)
   23700:	0081800e 	bge	zero,r2,23d04 <_dtoa_r+0x11d4>
   23704:	b93fffc3 	ldbu	r4,-1(r23)
   23708:	b8bfffc4 	addi	r2,r23,-1
   2370c:	1007883a 	mov	r3,r2
   23710:	01800e44 	movi	r6,57
   23714:	d9c00717 	ldw	r7,28(sp)
   23718:	00000506 	br	23730 <_dtoa_r+0xc00>
   2371c:	18ffffc4 	addi	r3,r3,-1
   23720:	11c12326 	beq	r2,r7,23bb0 <_dtoa_r+0x1080>
   23724:	19000003 	ldbu	r4,0(r3)
   23728:	102f883a 	mov	r23,r2
   2372c:	10bfffc4 	addi	r2,r2,-1
   23730:	21403fcc 	andi	r5,r4,255
   23734:	2940201c 	xori	r5,r5,128
   23738:	297fe004 	addi	r5,r5,-128
   2373c:	29bff726 	beq	r5,r6,2371c <__alt_data_end+0xfffe371c>
   23740:	21000044 	addi	r4,r4,1
   23744:	11000005 	stb	r4,0(r2)
   23748:	a80b883a 	mov	r5,r21
   2374c:	e009883a 	mov	r4,fp
   23750:	00262740 	call	26274 <_Bfree>
   23754:	883ea026 	beq	r17,zero,231d8 <__alt_data_end+0xfffe31d8>
   23758:	90000426 	beq	r18,zero,2376c <_dtoa_r+0xc3c>
   2375c:	94400326 	beq	r18,r17,2376c <_dtoa_r+0xc3c>
   23760:	900b883a 	mov	r5,r18
   23764:	e009883a 	mov	r4,fp
   23768:	00262740 	call	26274 <_Bfree>
   2376c:	880b883a 	mov	r5,r17
   23770:	e009883a 	mov	r4,fp
   23774:	00262740 	call	26274 <_Bfree>
   23778:	003e9706 	br	231d8 <__alt_data_end+0xfffe31d8>
   2377c:	01800044 	movi	r6,1
   23780:	d9800e15 	stw	r6,56(sp)
   23784:	003d9606 	br	22de0 <__alt_data_end+0xfffe2de0>
   23788:	d8800817 	ldw	r2,32(sp)
   2378c:	d8c00517 	ldw	r3,20(sp)
   23790:	d8000d15 	stw	zero,52(sp)
   23794:	10c5c83a 	sub	r2,r2,r3
   23798:	00c9c83a 	sub	r4,zero,r3
   2379c:	d8800815 	stw	r2,32(sp)
   237a0:	d9000a15 	stw	r4,40(sp)
   237a4:	003d9706 	br	22e04 <__alt_data_end+0xfffe2e04>
   237a8:	05adc83a 	sub	r22,zero,r22
   237ac:	dd800815 	stw	r22,32(sp)
   237b0:	002d883a 	mov	r22,zero
   237b4:	003d8e06 	br	22df0 <__alt_data_end+0xfffe2df0>
   237b8:	d9000517 	ldw	r4,20(sp)
   237bc:	002ca6c0 	call	2ca6c <__floatsidf>
   237c0:	100d883a 	mov	r6,r2
   237c4:	180f883a 	mov	r7,r3
   237c8:	a009883a 	mov	r4,r20
   237cc:	880b883a 	mov	r5,r17
   237d0:	002b7800 	call	2b780 <__eqdf2>
   237d4:	103d7126 	beq	r2,zero,22d9c <__alt_data_end+0xfffe2d9c>
   237d8:	d9c00517 	ldw	r7,20(sp)
   237dc:	39ffffc4 	addi	r7,r7,-1
   237e0:	d9c00515 	stw	r7,20(sp)
   237e4:	003d6d06 	br	22d9c <__alt_data_end+0xfffe2d9c>
   237e8:	dd400a17 	ldw	r21,40(sp)
   237ec:	dd000817 	ldw	r20,32(sp)
   237f0:	0023883a 	mov	r17,zero
   237f4:	003f4806 	br	23518 <__alt_data_end+0xfffe3518>
   237f8:	10e3c83a 	sub	r17,r2,r3
   237fc:	9448983a 	sll	r4,r18,r17
   23800:	003d3206 	br	22ccc <__alt_data_end+0xfffe2ccc>
   23804:	d8000e15 	stw	zero,56(sp)
   23808:	003d7506 	br	22de0 <__alt_data_end+0xfffe2de0>
   2380c:	b005883a 	mov	r2,r22
   23810:	003f4506 	br	23528 <__alt_data_end+0xfffe3528>
   23814:	dc000915 	stw	r16,36(sp)
   23818:	d9800a17 	ldw	r6,40(sp)
   2381c:	d9400917 	ldw	r5,36(sp)
   23820:	e009883a 	mov	r4,fp
   23824:	002680c0 	call	2680c <__pow5mult>
   23828:	1021883a 	mov	r16,r2
   2382c:	003f5a06 	br	23598 <__alt_data_end+0xfffe3598>
   23830:	01c00044 	movi	r7,1
   23834:	d9c00b15 	stw	r7,44(sp)
   23838:	d8802217 	ldw	r2,136(sp)
   2383c:	0081280e 	bge	zero,r2,23ce0 <_dtoa_r+0x11b0>
   23840:	100d883a 	mov	r6,r2
   23844:	1021883a 	mov	r16,r2
   23848:	d8800c15 	stw	r2,48(sp)
   2384c:	d8800615 	stw	r2,24(sp)
   23850:	003d8806 	br	22e74 <__alt_data_end+0xfffe2e74>
   23854:	d8800617 	ldw	r2,24(sp)
   23858:	00be9b16 	blt	zero,r2,232c8 <__alt_data_end+0xfffe32c8>
   2385c:	10010f1e 	bne	r2,zero,23c9c <_dtoa_r+0x116c>
   23860:	880b883a 	mov	r5,r17
   23864:	000d883a 	mov	r6,zero
   23868:	01d00534 	movhi	r7,16404
   2386c:	8009883a 	mov	r4,r16
   23870:	002b9d80 	call	2b9d8 <__muldf3>
   23874:	900d883a 	mov	r6,r18
   23878:	980f883a 	mov	r7,r19
   2387c:	1009883a 	mov	r4,r2
   23880:	180b883a 	mov	r5,r3
   23884:	002b8080 	call	2b808 <__gedf2>
   23888:	002b883a 	mov	r21,zero
   2388c:	0023883a 	mov	r17,zero
   23890:	1000bf16 	blt	r2,zero,23b90 <_dtoa_r+0x1060>
   23894:	d9802217 	ldw	r6,136(sp)
   23898:	ddc00717 	ldw	r23,28(sp)
   2389c:	018c303a 	nor	r6,zero,r6
   238a0:	d9800515 	stw	r6,20(sp)
   238a4:	a80b883a 	mov	r5,r21
   238a8:	e009883a 	mov	r4,fp
   238ac:	00262740 	call	26274 <_Bfree>
   238b0:	883e4926 	beq	r17,zero,231d8 <__alt_data_end+0xfffe31d8>
   238b4:	003fad06 	br	2376c <__alt_data_end+0xfffe376c>
   238b8:	d9c01117 	ldw	r7,68(sp)
   238bc:	3801bc26 	beq	r7,zero,23fb0 <_dtoa_r+0x1480>
   238c0:	10810cc4 	addi	r2,r2,1075
   238c4:	dd400a17 	ldw	r21,40(sp)
   238c8:	dd000817 	ldw	r20,32(sp)
   238cc:	003f0a06 	br	234f8 <__alt_data_end+0xfffe34f8>
   238d0:	00800704 	movi	r2,28
   238d4:	d9000817 	ldw	r4,32(sp)
   238d8:	a0a9883a 	add	r20,r20,r2
   238dc:	b0ad883a 	add	r22,r22,r2
   238e0:	2089883a 	add	r4,r4,r2
   238e4:	d9000815 	stw	r4,32(sp)
   238e8:	003f5106 	br	23630 <__alt_data_end+0xfffe3630>
   238ec:	d8c00317 	ldw	r3,12(sp)
   238f0:	b8c1fc0e 	bge	r23,r3,240e4 <_dtoa_r+0x15b4>
   238f4:	0027883a 	mov	r19,zero
   238f8:	b805883a 	mov	r2,r23
   238fc:	003f3e06 	br	235f8 <__alt_data_end+0xfffe35f8>
   23900:	880b883a 	mov	r5,r17
   23904:	e009883a 	mov	r4,fp
   23908:	000f883a 	mov	r7,zero
   2390c:	01800284 	movi	r6,10
   23910:	002629c0 	call	2629c <__multadd>
   23914:	d9000c17 	ldw	r4,48(sp)
   23918:	1023883a 	mov	r17,r2
   2391c:	0102040e 	bge	zero,r4,24130 <_dtoa_r+0x1600>
   23920:	d9000615 	stw	r4,24(sp)
   23924:	0500050e 	bge	zero,r20,2393c <_dtoa_r+0xe0c>
   23928:	880b883a 	mov	r5,r17
   2392c:	a00d883a 	mov	r6,r20
   23930:	e009883a 	mov	r4,fp
   23934:	002694c0 	call	2694c <__lshift>
   23938:	1023883a 	mov	r17,r2
   2393c:	9801241e 	bne	r19,zero,23dd0 <_dtoa_r+0x12a0>
   23940:	8829883a 	mov	r20,r17
   23944:	d9000617 	ldw	r4,24(sp)
   23948:	dcc00717 	ldw	r19,28(sp)
   2394c:	9480004c 	andi	r18,r18,1
   23950:	20bfffc4 	addi	r2,r4,-1
   23954:	9885883a 	add	r2,r19,r2
   23958:	d8800415 	stw	r2,16(sp)
   2395c:	dc800615 	stw	r18,24(sp)
   23960:	a80b883a 	mov	r5,r21
   23964:	8009883a 	mov	r4,r16
   23968:	00229300 	call	22930 <quorem>
   2396c:	880b883a 	mov	r5,r17
   23970:	8009883a 	mov	r4,r16
   23974:	102f883a 	mov	r23,r2
   23978:	0026a940 	call	26a94 <__mcmp>
   2397c:	a80b883a 	mov	r5,r21
   23980:	a00d883a 	mov	r6,r20
   23984:	e009883a 	mov	r4,fp
   23988:	102d883a 	mov	r22,r2
   2398c:	0026af40 	call	26af4 <__mdiff>
   23990:	1007883a 	mov	r3,r2
   23994:	10800317 	ldw	r2,12(r2)
   23998:	bc800c04 	addi	r18,r23,48
   2399c:	180b883a 	mov	r5,r3
   239a0:	10004e1e 	bne	r2,zero,23adc <_dtoa_r+0xfac>
   239a4:	8009883a 	mov	r4,r16
   239a8:	d8c01615 	stw	r3,88(sp)
   239ac:	0026a940 	call	26a94 <__mcmp>
   239b0:	d8c01617 	ldw	r3,88(sp)
   239b4:	e009883a 	mov	r4,fp
   239b8:	d8801615 	stw	r2,88(sp)
   239bc:	180b883a 	mov	r5,r3
   239c0:	00262740 	call	26274 <_Bfree>
   239c4:	d8801617 	ldw	r2,88(sp)
   239c8:	1000041e 	bne	r2,zero,239dc <_dtoa_r+0xeac>
   239cc:	d9800317 	ldw	r6,12(sp)
   239d0:	3000021e 	bne	r6,zero,239dc <_dtoa_r+0xeac>
   239d4:	d8c00617 	ldw	r3,24(sp)
   239d8:	18003726 	beq	r3,zero,23ab8 <_dtoa_r+0xf88>
   239dc:	b0002016 	blt	r22,zero,23a60 <_dtoa_r+0xf30>
   239e0:	b000041e 	bne	r22,zero,239f4 <_dtoa_r+0xec4>
   239e4:	d9000317 	ldw	r4,12(sp)
   239e8:	2000021e 	bne	r4,zero,239f4 <_dtoa_r+0xec4>
   239ec:	d8c00617 	ldw	r3,24(sp)
   239f0:	18001b26 	beq	r3,zero,23a60 <_dtoa_r+0xf30>
   239f4:	00810716 	blt	zero,r2,23e14 <_dtoa_r+0x12e4>
   239f8:	d8c00417 	ldw	r3,16(sp)
   239fc:	9d800044 	addi	r22,r19,1
   23a00:	9c800005 	stb	r18,0(r19)
   23a04:	b02f883a 	mov	r23,r22
   23a08:	98c10626 	beq	r19,r3,23e24 <_dtoa_r+0x12f4>
   23a0c:	800b883a 	mov	r5,r16
   23a10:	000f883a 	mov	r7,zero
   23a14:	01800284 	movi	r6,10
   23a18:	e009883a 	mov	r4,fp
   23a1c:	002629c0 	call	2629c <__multadd>
   23a20:	1021883a 	mov	r16,r2
   23a24:	000f883a 	mov	r7,zero
   23a28:	01800284 	movi	r6,10
   23a2c:	880b883a 	mov	r5,r17
   23a30:	e009883a 	mov	r4,fp
   23a34:	8d002526 	beq	r17,r20,23acc <_dtoa_r+0xf9c>
   23a38:	002629c0 	call	2629c <__multadd>
   23a3c:	a00b883a 	mov	r5,r20
   23a40:	000f883a 	mov	r7,zero
   23a44:	01800284 	movi	r6,10
   23a48:	e009883a 	mov	r4,fp
   23a4c:	1023883a 	mov	r17,r2
   23a50:	002629c0 	call	2629c <__multadd>
   23a54:	1029883a 	mov	r20,r2
   23a58:	b027883a 	mov	r19,r22
   23a5c:	003fc006 	br	23960 <__alt_data_end+0xfffe3960>
   23a60:	9011883a 	mov	r8,r18
   23a64:	00800e0e 	bge	zero,r2,23aa0 <_dtoa_r+0xf70>
   23a68:	800b883a 	mov	r5,r16
   23a6c:	01800044 	movi	r6,1
   23a70:	e009883a 	mov	r4,fp
   23a74:	da001715 	stw	r8,92(sp)
   23a78:	002694c0 	call	2694c <__lshift>
   23a7c:	a80b883a 	mov	r5,r21
   23a80:	1009883a 	mov	r4,r2
   23a84:	1021883a 	mov	r16,r2
   23a88:	0026a940 	call	26a94 <__mcmp>
   23a8c:	da001717 	ldw	r8,92(sp)
   23a90:	0081960e 	bge	zero,r2,240ec <_dtoa_r+0x15bc>
   23a94:	00800e44 	movi	r2,57
   23a98:	40817026 	beq	r8,r2,2405c <_dtoa_r+0x152c>
   23a9c:	ba000c44 	addi	r8,r23,49
   23aa0:	8825883a 	mov	r18,r17
   23aa4:	9dc00044 	addi	r23,r19,1
   23aa8:	9a000005 	stb	r8,0(r19)
   23aac:	a023883a 	mov	r17,r20
   23ab0:	dc000915 	stw	r16,36(sp)
   23ab4:	003f2406 	br	23748 <__alt_data_end+0xfffe3748>
   23ab8:	00800e44 	movi	r2,57
   23abc:	9011883a 	mov	r8,r18
   23ac0:	90816626 	beq	r18,r2,2405c <_dtoa_r+0x152c>
   23ac4:	05bff516 	blt	zero,r22,23a9c <__alt_data_end+0xfffe3a9c>
   23ac8:	003ff506 	br	23aa0 <__alt_data_end+0xfffe3aa0>
   23acc:	002629c0 	call	2629c <__multadd>
   23ad0:	1023883a 	mov	r17,r2
   23ad4:	1029883a 	mov	r20,r2
   23ad8:	003fdf06 	br	23a58 <__alt_data_end+0xfffe3a58>
   23adc:	e009883a 	mov	r4,fp
   23ae0:	00262740 	call	26274 <_Bfree>
   23ae4:	00800044 	movi	r2,1
   23ae8:	003fbc06 	br	239dc <__alt_data_end+0xfffe39dc>
   23aec:	a80b883a 	mov	r5,r21
   23af0:	8009883a 	mov	r4,r16
   23af4:	0026a940 	call	26a94 <__mcmp>
   23af8:	103edb0e 	bge	r2,zero,23668 <__alt_data_end+0xfffe3668>
   23afc:	800b883a 	mov	r5,r16
   23b00:	000f883a 	mov	r7,zero
   23b04:	01800284 	movi	r6,10
   23b08:	e009883a 	mov	r4,fp
   23b0c:	002629c0 	call	2629c <__multadd>
   23b10:	1021883a 	mov	r16,r2
   23b14:	d8800517 	ldw	r2,20(sp)
   23b18:	d8c00b17 	ldw	r3,44(sp)
   23b1c:	10bfffc4 	addi	r2,r2,-1
   23b20:	d8800515 	stw	r2,20(sp)
   23b24:	183f761e 	bne	r3,zero,23900 <__alt_data_end+0xfffe3900>
   23b28:	d9000c17 	ldw	r4,48(sp)
   23b2c:	0101730e 	bge	zero,r4,240fc <_dtoa_r+0x15cc>
   23b30:	d9000615 	stw	r4,24(sp)
   23b34:	003ed006 	br	23678 <__alt_data_end+0xfffe3678>
   23b38:	00800084 	movi	r2,2
   23b3c:	3081861e 	bne	r6,r2,24158 <_dtoa_r+0x1628>
   23b40:	d8000b15 	stw	zero,44(sp)
   23b44:	003f3c06 	br	23838 <__alt_data_end+0xfffe3838>
   23b48:	dc000917 	ldw	r16,36(sp)
   23b4c:	003e9206 	br	23598 <__alt_data_end+0xfffe3598>
   23b50:	d9c00317 	ldw	r7,12(sp)
   23b54:	00800084 	movi	r2,2
   23b58:	11fec50e 	bge	r2,r7,23670 <__alt_data_end+0xfffe3670>
   23b5c:	d9000617 	ldw	r4,24(sp)
   23b60:	20013c1e 	bne	r4,zero,24054 <_dtoa_r+0x1524>
   23b64:	a80b883a 	mov	r5,r21
   23b68:	000f883a 	mov	r7,zero
   23b6c:	01800144 	movi	r6,5
   23b70:	e009883a 	mov	r4,fp
   23b74:	002629c0 	call	2629c <__multadd>
   23b78:	100b883a 	mov	r5,r2
   23b7c:	8009883a 	mov	r4,r16
   23b80:	102b883a 	mov	r21,r2
   23b84:	0026a940 	call	26a94 <__mcmp>
   23b88:	dc000915 	stw	r16,36(sp)
   23b8c:	00bf410e 	bge	zero,r2,23894 <__alt_data_end+0xfffe3894>
   23b90:	d9c00717 	ldw	r7,28(sp)
   23b94:	00800c44 	movi	r2,49
   23b98:	38800005 	stb	r2,0(r7)
   23b9c:	d8800517 	ldw	r2,20(sp)
   23ba0:	3dc00044 	addi	r23,r7,1
   23ba4:	10800044 	addi	r2,r2,1
   23ba8:	d8800515 	stw	r2,20(sp)
   23bac:	003f3d06 	br	238a4 <__alt_data_end+0xfffe38a4>
   23bb0:	d9800517 	ldw	r6,20(sp)
   23bb4:	d9c00717 	ldw	r7,28(sp)
   23bb8:	00800c44 	movi	r2,49
   23bbc:	31800044 	addi	r6,r6,1
   23bc0:	d9800515 	stw	r6,20(sp)
   23bc4:	38800005 	stb	r2,0(r7)
   23bc8:	003edf06 	br	23748 <__alt_data_end+0xfffe3748>
   23bcc:	d8000b15 	stw	zero,44(sp)
   23bd0:	003c9f06 	br	22e50 <__alt_data_end+0xfffe2e50>
   23bd4:	903e7e1e 	bne	r18,zero,235d0 <__alt_data_end+0xfffe35d0>
   23bd8:	00800434 	movhi	r2,16
   23bdc:	10bfffc4 	addi	r2,r2,-1
   23be0:	9884703a 	and	r2,r19,r2
   23be4:	1000ea1e 	bne	r2,zero,23f90 <_dtoa_r+0x1460>
   23be8:	9cdffc2c 	andhi	r19,r19,32752
   23bec:	9800e826 	beq	r19,zero,23f90 <_dtoa_r+0x1460>
   23bf0:	d9c00817 	ldw	r7,32(sp)
   23bf4:	b5800044 	addi	r22,r22,1
   23bf8:	04c00044 	movi	r19,1
   23bfc:	39c00044 	addi	r7,r7,1
   23c00:	d9c00815 	stw	r7,32(sp)
   23c04:	d8800d17 	ldw	r2,52(sp)
   23c08:	103e721e 	bne	r2,zero,235d4 <__alt_data_end+0xfffe35d4>
   23c0c:	00800044 	movi	r2,1
   23c10:	003e7906 	br	235f8 <__alt_data_end+0xfffe35f8>
   23c14:	8009883a 	mov	r4,r16
   23c18:	002ca6c0 	call	2ca6c <__floatsidf>
   23c1c:	d9800f17 	ldw	r6,60(sp)
   23c20:	d9c01017 	ldw	r7,64(sp)
   23c24:	1009883a 	mov	r4,r2
   23c28:	180b883a 	mov	r5,r3
   23c2c:	002b9d80 	call	2b9d8 <__muldf3>
   23c30:	000d883a 	mov	r6,zero
   23c34:	01d00734 	movhi	r7,16412
   23c38:	1009883a 	mov	r4,r2
   23c3c:	180b883a 	mov	r5,r3
   23c40:	002a5ec0 	call	2a5ec <__adddf3>
   23c44:	047f3034 	movhi	r17,64704
   23c48:	1021883a 	mov	r16,r2
   23c4c:	1c63883a 	add	r17,r3,r17
   23c50:	d9000f17 	ldw	r4,60(sp)
   23c54:	d9401017 	ldw	r5,64(sp)
   23c58:	000d883a 	mov	r6,zero
   23c5c:	01d00534 	movhi	r7,16404
   23c60:	002c0f00 	call	2c0f0 <__subdf3>
   23c64:	800d883a 	mov	r6,r16
   23c68:	880f883a 	mov	r7,r17
   23c6c:	1009883a 	mov	r4,r2
   23c70:	180b883a 	mov	r5,r3
   23c74:	102b883a 	mov	r21,r2
   23c78:	1829883a 	mov	r20,r3
   23c7c:	002b8080 	call	2b808 <__gedf2>
   23c80:	00806c16 	blt	zero,r2,23e34 <_dtoa_r+0x1304>
   23c84:	89e0003c 	xorhi	r7,r17,32768
   23c88:	800d883a 	mov	r6,r16
   23c8c:	a809883a 	mov	r4,r21
   23c90:	a00b883a 	mov	r5,r20
   23c94:	002b8e40 	call	2b8e4 <__ledf2>
   23c98:	103d7e0e 	bge	r2,zero,23294 <__alt_data_end+0xfffe3294>
   23c9c:	002b883a 	mov	r21,zero
   23ca0:	0023883a 	mov	r17,zero
   23ca4:	003efb06 	br	23894 <__alt_data_end+0xfffe3894>
   23ca8:	d8800717 	ldw	r2,28(sp)
   23cac:	003bd006 	br	22bf0 <__alt_data_end+0xfffe2bf0>
   23cb0:	d9000a17 	ldw	r4,40(sp)
   23cb4:	d9800d17 	ldw	r6,52(sp)
   23cb8:	dd400a15 	stw	r21,40(sp)
   23cbc:	a905c83a 	sub	r2,r21,r4
   23cc0:	308d883a 	add	r6,r6,r2
   23cc4:	d9800d15 	stw	r6,52(sp)
   23cc8:	002b883a 	mov	r21,zero
   23ccc:	003e0606 	br	234e8 <__alt_data_end+0xfffe34e8>
   23cd0:	9023883a 	mov	r17,r18
   23cd4:	9829883a 	mov	r20,r19
   23cd8:	04000084 	movi	r16,2
   23cdc:	003c9206 	br	22f28 <__alt_data_end+0xfffe2f28>
   23ce0:	04000044 	movi	r16,1
   23ce4:	dc000c15 	stw	r16,48(sp)
   23ce8:	dc000615 	stw	r16,24(sp)
   23cec:	dc002215 	stw	r16,136(sp)
   23cf0:	e0001115 	stw	zero,68(fp)
   23cf4:	000b883a 	mov	r5,zero
   23cf8:	003c6906 	br	22ea0 <__alt_data_end+0xfffe2ea0>
   23cfc:	3021883a 	mov	r16,r6
   23d00:	003ffb06 	br	23cf0 <__alt_data_end+0xfffe3cf0>
   23d04:	1000021e 	bne	r2,zero,23d10 <_dtoa_r+0x11e0>
   23d08:	4200004c 	andi	r8,r8,1
   23d0c:	403e7d1e 	bne	r8,zero,23704 <__alt_data_end+0xfffe3704>
   23d10:	01000c04 	movi	r4,48
   23d14:	00000106 	br	23d1c <_dtoa_r+0x11ec>
   23d18:	102f883a 	mov	r23,r2
   23d1c:	b8bfffc4 	addi	r2,r23,-1
   23d20:	10c00007 	ldb	r3,0(r2)
   23d24:	193ffc26 	beq	r3,r4,23d18 <__alt_data_end+0xfffe3d18>
   23d28:	003e8706 	br	23748 <__alt_data_end+0xfffe3748>
   23d2c:	d8800517 	ldw	r2,20(sp)
   23d30:	00a3c83a 	sub	r17,zero,r2
   23d34:	8800a426 	beq	r17,zero,23fc8 <_dtoa_r+0x1498>
   23d38:	888003cc 	andi	r2,r17,15
   23d3c:	100490fa 	slli	r2,r2,3
   23d40:	00c000f4 	movhi	r3,3
   23d44:	18fd4404 	addi	r3,r3,-2800
   23d48:	1885883a 	add	r2,r3,r2
   23d4c:	11800017 	ldw	r6,0(r2)
   23d50:	11c00117 	ldw	r7,4(r2)
   23d54:	9009883a 	mov	r4,r18
   23d58:	980b883a 	mov	r5,r19
   23d5c:	8823d13a 	srai	r17,r17,4
   23d60:	002b9d80 	call	2b9d8 <__muldf3>
   23d64:	d8800f15 	stw	r2,60(sp)
   23d68:	d8c01015 	stw	r3,64(sp)
   23d6c:	8800e826 	beq	r17,zero,24110 <_dtoa_r+0x15e0>
   23d70:	050000f4 	movhi	r20,3
   23d74:	a53d3a04 	addi	r20,r20,-2840
   23d78:	04000084 	movi	r16,2
   23d7c:	8980004c 	andi	r6,r17,1
   23d80:	1009883a 	mov	r4,r2
   23d84:	8823d07a 	srai	r17,r17,1
   23d88:	180b883a 	mov	r5,r3
   23d8c:	30000426 	beq	r6,zero,23da0 <_dtoa_r+0x1270>
   23d90:	a1800017 	ldw	r6,0(r20)
   23d94:	a1c00117 	ldw	r7,4(r20)
   23d98:	84000044 	addi	r16,r16,1
   23d9c:	002b9d80 	call	2b9d8 <__muldf3>
   23da0:	a5000204 	addi	r20,r20,8
   23da4:	883ff51e 	bne	r17,zero,23d7c <__alt_data_end+0xfffe3d7c>
   23da8:	d8800f15 	stw	r2,60(sp)
   23dac:	d8c01015 	stw	r3,64(sp)
   23db0:	003c7606 	br	22f8c <__alt_data_end+0xfffe2f8c>
   23db4:	00c00c04 	movi	r3,48
   23db8:	10c00005 	stb	r3,0(r2)
   23dbc:	d8c00517 	ldw	r3,20(sp)
   23dc0:	bd3fffc3 	ldbu	r20,-1(r23)
   23dc4:	18c00044 	addi	r3,r3,1
   23dc8:	d8c00515 	stw	r3,20(sp)
   23dcc:	003db906 	br	234b4 <__alt_data_end+0xfffe34b4>
   23dd0:	89400117 	ldw	r5,4(r17)
   23dd4:	e009883a 	mov	r4,fp
   23dd8:	00261cc0 	call	261cc <_Balloc>
   23ddc:	89800417 	ldw	r6,16(r17)
   23de0:	89400304 	addi	r5,r17,12
   23de4:	11000304 	addi	r4,r2,12
   23de8:	31800084 	addi	r6,r6,2
   23dec:	318d883a 	add	r6,r6,r6
   23df0:	318d883a 	add	r6,r6,r6
   23df4:	1027883a 	mov	r19,r2
   23df8:	0025e000 	call	25e00 <memcpy>
   23dfc:	01800044 	movi	r6,1
   23e00:	980b883a 	mov	r5,r19
   23e04:	e009883a 	mov	r4,fp
   23e08:	002694c0 	call	2694c <__lshift>
   23e0c:	1029883a 	mov	r20,r2
   23e10:	003ecc06 	br	23944 <__alt_data_end+0xfffe3944>
   23e14:	00800e44 	movi	r2,57
   23e18:	90809026 	beq	r18,r2,2405c <_dtoa_r+0x152c>
   23e1c:	92000044 	addi	r8,r18,1
   23e20:	003f1f06 	br	23aa0 <__alt_data_end+0xfffe3aa0>
   23e24:	9011883a 	mov	r8,r18
   23e28:	8825883a 	mov	r18,r17
   23e2c:	a023883a 	mov	r17,r20
   23e30:	003e2906 	br	236d8 <__alt_data_end+0xfffe36d8>
   23e34:	002b883a 	mov	r21,zero
   23e38:	0023883a 	mov	r17,zero
   23e3c:	003f5406 	br	23b90 <__alt_data_end+0xfffe3b90>
   23e40:	61bfffc4 	addi	r6,r12,-1
   23e44:	300490fa 	slli	r2,r6,3
   23e48:	00c000f4 	movhi	r3,3
   23e4c:	18fd4404 	addi	r3,r3,-2800
   23e50:	1885883a 	add	r2,r3,r2
   23e54:	11000017 	ldw	r4,0(r2)
   23e58:	11400117 	ldw	r5,4(r2)
   23e5c:	d8800717 	ldw	r2,28(sp)
   23e60:	880f883a 	mov	r7,r17
   23e64:	d9801215 	stw	r6,72(sp)
   23e68:	800d883a 	mov	r6,r16
   23e6c:	db001615 	stw	r12,88(sp)
   23e70:	15c00044 	addi	r23,r2,1
   23e74:	002b9d80 	call	2b9d8 <__muldf3>
   23e78:	d9401017 	ldw	r5,64(sp)
   23e7c:	d9000f17 	ldw	r4,60(sp)
   23e80:	d8c01515 	stw	r3,84(sp)
   23e84:	d8801415 	stw	r2,80(sp)
   23e88:	002c9ec0 	call	2c9ec <__fixdfsi>
   23e8c:	1009883a 	mov	r4,r2
   23e90:	1021883a 	mov	r16,r2
   23e94:	002ca6c0 	call	2ca6c <__floatsidf>
   23e98:	d9000f17 	ldw	r4,60(sp)
   23e9c:	d9401017 	ldw	r5,64(sp)
   23ea0:	100d883a 	mov	r6,r2
   23ea4:	180f883a 	mov	r7,r3
   23ea8:	002c0f00 	call	2c0f0 <__subdf3>
   23eac:	1829883a 	mov	r20,r3
   23eb0:	d8c00717 	ldw	r3,28(sp)
   23eb4:	84000c04 	addi	r16,r16,48
   23eb8:	1023883a 	mov	r17,r2
   23ebc:	1c000005 	stb	r16,0(r3)
   23ec0:	db001617 	ldw	r12,88(sp)
   23ec4:	00800044 	movi	r2,1
   23ec8:	60802226 	beq	r12,r2,23f54 <_dtoa_r+0x1424>
   23ecc:	d9c00717 	ldw	r7,28(sp)
   23ed0:	8805883a 	mov	r2,r17
   23ed4:	b82b883a 	mov	r21,r23
   23ed8:	3b19883a 	add	r12,r7,r12
   23edc:	6023883a 	mov	r17,r12
   23ee0:	a007883a 	mov	r3,r20
   23ee4:	dc800f15 	stw	r18,60(sp)
   23ee8:	000d883a 	mov	r6,zero
   23eec:	01d00934 	movhi	r7,16420
   23ef0:	1009883a 	mov	r4,r2
   23ef4:	180b883a 	mov	r5,r3
   23ef8:	002b9d80 	call	2b9d8 <__muldf3>
   23efc:	180b883a 	mov	r5,r3
   23f00:	1009883a 	mov	r4,r2
   23f04:	1829883a 	mov	r20,r3
   23f08:	1025883a 	mov	r18,r2
   23f0c:	002c9ec0 	call	2c9ec <__fixdfsi>
   23f10:	1009883a 	mov	r4,r2
   23f14:	1021883a 	mov	r16,r2
   23f18:	002ca6c0 	call	2ca6c <__floatsidf>
   23f1c:	100d883a 	mov	r6,r2
   23f20:	180f883a 	mov	r7,r3
   23f24:	9009883a 	mov	r4,r18
   23f28:	a00b883a 	mov	r5,r20
   23f2c:	84000c04 	addi	r16,r16,48
   23f30:	002c0f00 	call	2c0f0 <__subdf3>
   23f34:	ad400044 	addi	r21,r21,1
   23f38:	ac3fffc5 	stb	r16,-1(r21)
   23f3c:	ac7fea1e 	bne	r21,r17,23ee8 <__alt_data_end+0xfffe3ee8>
   23f40:	1023883a 	mov	r17,r2
   23f44:	d8801217 	ldw	r2,72(sp)
   23f48:	dc800f17 	ldw	r18,60(sp)
   23f4c:	1829883a 	mov	r20,r3
   23f50:	b8af883a 	add	r23,r23,r2
   23f54:	d9001417 	ldw	r4,80(sp)
   23f58:	d9401517 	ldw	r5,84(sp)
   23f5c:	000d883a 	mov	r6,zero
   23f60:	01cff834 	movhi	r7,16352
   23f64:	002a5ec0 	call	2a5ec <__adddf3>
   23f68:	880d883a 	mov	r6,r17
   23f6c:	a00f883a 	mov	r7,r20
   23f70:	1009883a 	mov	r4,r2
   23f74:	180b883a 	mov	r5,r3
   23f78:	002b8e40 	call	2b8e4 <__ledf2>
   23f7c:	10003e0e 	bge	r2,zero,24078 <_dtoa_r+0x1548>
   23f80:	d9001317 	ldw	r4,76(sp)
   23f84:	bd3fffc3 	ldbu	r20,-1(r23)
   23f88:	d9000515 	stw	r4,20(sp)
   23f8c:	003d3b06 	br	2347c <__alt_data_end+0xfffe347c>
   23f90:	0027883a 	mov	r19,zero
   23f94:	003f1b06 	br	23c04 <__alt_data_end+0xfffe3c04>
   23f98:	d8800817 	ldw	r2,32(sp)
   23f9c:	11e9c83a 	sub	r20,r2,r7
   23fa0:	0005883a 	mov	r2,zero
   23fa4:	003d5406 	br	234f8 <__alt_data_end+0xfffe34f8>
   23fa8:	00800044 	movi	r2,1
   23fac:	003dc706 	br	236cc <__alt_data_end+0xfffe36cc>
   23fb0:	d8c00217 	ldw	r3,8(sp)
   23fb4:	00800d84 	movi	r2,54
   23fb8:	dd400a17 	ldw	r21,40(sp)
   23fbc:	10c5c83a 	sub	r2,r2,r3
   23fc0:	dd000817 	ldw	r20,32(sp)
   23fc4:	003d4c06 	br	234f8 <__alt_data_end+0xfffe34f8>
   23fc8:	dc800f15 	stw	r18,60(sp)
   23fcc:	dcc01015 	stw	r19,64(sp)
   23fd0:	04000084 	movi	r16,2
   23fd4:	003bed06 	br	22f8c <__alt_data_end+0xfffe2f8c>
   23fd8:	d9000617 	ldw	r4,24(sp)
   23fdc:	203f0d26 	beq	r4,zero,23c14 <__alt_data_end+0xfffe3c14>
   23fe0:	d9800c17 	ldw	r6,48(sp)
   23fe4:	01bcab0e 	bge	zero,r6,23294 <__alt_data_end+0xfffe3294>
   23fe8:	d9401017 	ldw	r5,64(sp)
   23fec:	d9000f17 	ldw	r4,60(sp)
   23ff0:	000d883a 	mov	r6,zero
   23ff4:	01d00934 	movhi	r7,16420
   23ff8:	002b9d80 	call	2b9d8 <__muldf3>
   23ffc:	81000044 	addi	r4,r16,1
   24000:	d8800f15 	stw	r2,60(sp)
   24004:	d8c01015 	stw	r3,64(sp)
   24008:	002ca6c0 	call	2ca6c <__floatsidf>
   2400c:	d9800f17 	ldw	r6,60(sp)
   24010:	d9c01017 	ldw	r7,64(sp)
   24014:	1009883a 	mov	r4,r2
   24018:	180b883a 	mov	r5,r3
   2401c:	002b9d80 	call	2b9d8 <__muldf3>
   24020:	01d00734 	movhi	r7,16412
   24024:	000d883a 	mov	r6,zero
   24028:	1009883a 	mov	r4,r2
   2402c:	180b883a 	mov	r5,r3
   24030:	002a5ec0 	call	2a5ec <__adddf3>
   24034:	d9c00517 	ldw	r7,20(sp)
   24038:	047f3034 	movhi	r17,64704
   2403c:	1021883a 	mov	r16,r2
   24040:	39ffffc4 	addi	r7,r7,-1
   24044:	d9c01315 	stw	r7,76(sp)
   24048:	1c63883a 	add	r17,r3,r17
   2404c:	db000c17 	ldw	r12,48(sp)
   24050:	003bea06 	br	22ffc <__alt_data_end+0xfffe2ffc>
   24054:	dc000915 	stw	r16,36(sp)
   24058:	003e0e06 	br	23894 <__alt_data_end+0xfffe3894>
   2405c:	01000e44 	movi	r4,57
   24060:	8825883a 	mov	r18,r17
   24064:	9dc00044 	addi	r23,r19,1
   24068:	99000005 	stb	r4,0(r19)
   2406c:	a023883a 	mov	r17,r20
   24070:	dc000915 	stw	r16,36(sp)
   24074:	003da406 	br	23708 <__alt_data_end+0xfffe3708>
   24078:	d9801417 	ldw	r6,80(sp)
   2407c:	d9c01517 	ldw	r7,84(sp)
   24080:	0009883a 	mov	r4,zero
   24084:	014ff834 	movhi	r5,16352
   24088:	002c0f00 	call	2c0f0 <__subdf3>
   2408c:	880d883a 	mov	r6,r17
   24090:	a00f883a 	mov	r7,r20
   24094:	1009883a 	mov	r4,r2
   24098:	180b883a 	mov	r5,r3
   2409c:	002b8080 	call	2b808 <__gedf2>
   240a0:	00bc7c0e 	bge	zero,r2,23294 <__alt_data_end+0xfffe3294>
   240a4:	01000c04 	movi	r4,48
   240a8:	00000106 	br	240b0 <_dtoa_r+0x1580>
   240ac:	102f883a 	mov	r23,r2
   240b0:	b8bfffc4 	addi	r2,r23,-1
   240b4:	10c00007 	ldb	r3,0(r2)
   240b8:	193ffc26 	beq	r3,r4,240ac <__alt_data_end+0xfffe40ac>
   240bc:	d9801317 	ldw	r6,76(sp)
   240c0:	d9800515 	stw	r6,20(sp)
   240c4:	003c4406 	br	231d8 <__alt_data_end+0xfffe31d8>
   240c8:	d9801317 	ldw	r6,76(sp)
   240cc:	d9800515 	stw	r6,20(sp)
   240d0:	003cea06 	br	2347c <__alt_data_end+0xfffe347c>
   240d4:	dd800f17 	ldw	r22,60(sp)
   240d8:	dcc01017 	ldw	r19,64(sp)
   240dc:	dc801217 	ldw	r18,72(sp)
   240e0:	003c6c06 	br	23294 <__alt_data_end+0xfffe3294>
   240e4:	903e031e 	bne	r18,zero,238f4 <__alt_data_end+0xfffe38f4>
   240e8:	003ebb06 	br	23bd8 <__alt_data_end+0xfffe3bd8>
   240ec:	103e6c1e 	bne	r2,zero,23aa0 <__alt_data_end+0xfffe3aa0>
   240f0:	4080004c 	andi	r2,r8,1
   240f4:	103e6a26 	beq	r2,zero,23aa0 <__alt_data_end+0xfffe3aa0>
   240f8:	003e6606 	br	23a94 <__alt_data_end+0xfffe3a94>
   240fc:	d8c00317 	ldw	r3,12(sp)
   24100:	00800084 	movi	r2,2
   24104:	10c02916 	blt	r2,r3,241ac <_dtoa_r+0x167c>
   24108:	d9000c17 	ldw	r4,48(sp)
   2410c:	003e8806 	br	23b30 <__alt_data_end+0xfffe3b30>
   24110:	04000084 	movi	r16,2
   24114:	003b9d06 	br	22f8c <__alt_data_end+0xfffe2f8c>
   24118:	d9001317 	ldw	r4,76(sp)
   2411c:	d9000515 	stw	r4,20(sp)
   24120:	003cd606 	br	2347c <__alt_data_end+0xfffe347c>
   24124:	d8801317 	ldw	r2,76(sp)
   24128:	d8800515 	stw	r2,20(sp)
   2412c:	003c2a06 	br	231d8 <__alt_data_end+0xfffe31d8>
   24130:	d9800317 	ldw	r6,12(sp)
   24134:	00800084 	movi	r2,2
   24138:	11801516 	blt	r2,r6,24190 <_dtoa_r+0x1660>
   2413c:	d9c00c17 	ldw	r7,48(sp)
   24140:	d9c00615 	stw	r7,24(sp)
   24144:	003df706 	br	23924 <__alt_data_end+0xfffe3924>
   24148:	193d3926 	beq	r3,r4,23630 <__alt_data_end+0xfffe3630>
   2414c:	00c00f04 	movi	r3,60
   24150:	1885c83a 	sub	r2,r3,r2
   24154:	003ddf06 	br	238d4 <__alt_data_end+0xfffe38d4>
   24158:	e009883a 	mov	r4,fp
   2415c:	e0001115 	stw	zero,68(fp)
   24160:	000b883a 	mov	r5,zero
   24164:	00261cc0 	call	261cc <_Balloc>
   24168:	d8800715 	stw	r2,28(sp)
   2416c:	d8c00717 	ldw	r3,28(sp)
   24170:	00bfffc4 	movi	r2,-1
   24174:	01000044 	movi	r4,1
   24178:	d8800c15 	stw	r2,48(sp)
   2417c:	e0c01015 	stw	r3,64(fp)
   24180:	d9000b15 	stw	r4,44(sp)
   24184:	d8800615 	stw	r2,24(sp)
   24188:	d8002215 	stw	zero,136(sp)
   2418c:	003c4106 	br	23294 <__alt_data_end+0xfffe3294>
   24190:	d8c00c17 	ldw	r3,48(sp)
   24194:	d8c00615 	stw	r3,24(sp)
   24198:	003e7006 	br	23b5c <__alt_data_end+0xfffe3b5c>
   2419c:	04400044 	movi	r17,1
   241a0:	003b2006 	br	22e24 <__alt_data_end+0xfffe2e24>
   241a4:	000b883a 	mov	r5,zero
   241a8:	003b3d06 	br	22ea0 <__alt_data_end+0xfffe2ea0>
   241ac:	d8800c17 	ldw	r2,48(sp)
   241b0:	d8800615 	stw	r2,24(sp)
   241b4:	003e6906 	br	23b5c <__alt_data_end+0xfffe3b5c>

000241b8 <__sflush_r>:
   241b8:	2880030b 	ldhu	r2,12(r5)
   241bc:	defffb04 	addi	sp,sp,-20
   241c0:	dcc00315 	stw	r19,12(sp)
   241c4:	dc400115 	stw	r17,4(sp)
   241c8:	dfc00415 	stw	ra,16(sp)
   241cc:	dc800215 	stw	r18,8(sp)
   241d0:	dc000015 	stw	r16,0(sp)
   241d4:	10c0020c 	andi	r3,r2,8
   241d8:	2823883a 	mov	r17,r5
   241dc:	2027883a 	mov	r19,r4
   241e0:	1800311e 	bne	r3,zero,242a8 <__sflush_r+0xf0>
   241e4:	28c00117 	ldw	r3,4(r5)
   241e8:	10820014 	ori	r2,r2,2048
   241ec:	2880030d 	sth	r2,12(r5)
   241f0:	00c04b0e 	bge	zero,r3,24320 <__sflush_r+0x168>
   241f4:	8a000a17 	ldw	r8,40(r17)
   241f8:	40002326 	beq	r8,zero,24288 <__sflush_r+0xd0>
   241fc:	9c000017 	ldw	r16,0(r19)
   24200:	10c4000c 	andi	r3,r2,4096
   24204:	98000015 	stw	zero,0(r19)
   24208:	18004826 	beq	r3,zero,2432c <__sflush_r+0x174>
   2420c:	89801417 	ldw	r6,80(r17)
   24210:	10c0010c 	andi	r3,r2,4
   24214:	18000626 	beq	r3,zero,24230 <__sflush_r+0x78>
   24218:	88c00117 	ldw	r3,4(r17)
   2421c:	88800c17 	ldw	r2,48(r17)
   24220:	30cdc83a 	sub	r6,r6,r3
   24224:	10000226 	beq	r2,zero,24230 <__sflush_r+0x78>
   24228:	88800f17 	ldw	r2,60(r17)
   2422c:	308dc83a 	sub	r6,r6,r2
   24230:	89400717 	ldw	r5,28(r17)
   24234:	000f883a 	mov	r7,zero
   24238:	9809883a 	mov	r4,r19
   2423c:	403ee83a 	callr	r8
   24240:	00ffffc4 	movi	r3,-1
   24244:	10c04426 	beq	r2,r3,24358 <__sflush_r+0x1a0>
   24248:	88c0030b 	ldhu	r3,12(r17)
   2424c:	89000417 	ldw	r4,16(r17)
   24250:	88000115 	stw	zero,4(r17)
   24254:	197dffcc 	andi	r5,r3,63487
   24258:	8940030d 	sth	r5,12(r17)
   2425c:	89000015 	stw	r4,0(r17)
   24260:	18c4000c 	andi	r3,r3,4096
   24264:	18002c1e 	bne	r3,zero,24318 <__sflush_r+0x160>
   24268:	89400c17 	ldw	r5,48(r17)
   2426c:	9c000015 	stw	r16,0(r19)
   24270:	28000526 	beq	r5,zero,24288 <__sflush_r+0xd0>
   24274:	88801004 	addi	r2,r17,64
   24278:	28800226 	beq	r5,r2,24284 <__sflush_r+0xcc>
   2427c:	9809883a 	mov	r4,r19
   24280:	00249240 	call	24924 <_free_r>
   24284:	88000c15 	stw	zero,48(r17)
   24288:	0005883a 	mov	r2,zero
   2428c:	dfc00417 	ldw	ra,16(sp)
   24290:	dcc00317 	ldw	r19,12(sp)
   24294:	dc800217 	ldw	r18,8(sp)
   24298:	dc400117 	ldw	r17,4(sp)
   2429c:	dc000017 	ldw	r16,0(sp)
   242a0:	dec00504 	addi	sp,sp,20
   242a4:	f800283a 	ret
   242a8:	2c800417 	ldw	r18,16(r5)
   242ac:	903ff626 	beq	r18,zero,24288 <__alt_data_end+0xfffe4288>
   242b0:	2c000017 	ldw	r16,0(r5)
   242b4:	108000cc 	andi	r2,r2,3
   242b8:	2c800015 	stw	r18,0(r5)
   242bc:	84a1c83a 	sub	r16,r16,r18
   242c0:	1000131e 	bne	r2,zero,24310 <__sflush_r+0x158>
   242c4:	28800517 	ldw	r2,20(r5)
   242c8:	88800215 	stw	r2,8(r17)
   242cc:	04000316 	blt	zero,r16,242dc <__sflush_r+0x124>
   242d0:	003fed06 	br	24288 <__alt_data_end+0xfffe4288>
   242d4:	90a5883a 	add	r18,r18,r2
   242d8:	043feb0e 	bge	zero,r16,24288 <__alt_data_end+0xfffe4288>
   242dc:	88800917 	ldw	r2,36(r17)
   242e0:	89400717 	ldw	r5,28(r17)
   242e4:	800f883a 	mov	r7,r16
   242e8:	900d883a 	mov	r6,r18
   242ec:	9809883a 	mov	r4,r19
   242f0:	103ee83a 	callr	r2
   242f4:	80a1c83a 	sub	r16,r16,r2
   242f8:	00bff616 	blt	zero,r2,242d4 <__alt_data_end+0xfffe42d4>
   242fc:	88c0030b 	ldhu	r3,12(r17)
   24300:	00bfffc4 	movi	r2,-1
   24304:	18c01014 	ori	r3,r3,64
   24308:	88c0030d 	sth	r3,12(r17)
   2430c:	003fdf06 	br	2428c <__alt_data_end+0xfffe428c>
   24310:	0005883a 	mov	r2,zero
   24314:	003fec06 	br	242c8 <__alt_data_end+0xfffe42c8>
   24318:	88801415 	stw	r2,80(r17)
   2431c:	003fd206 	br	24268 <__alt_data_end+0xfffe4268>
   24320:	28c00f17 	ldw	r3,60(r5)
   24324:	00ffb316 	blt	zero,r3,241f4 <__alt_data_end+0xfffe41f4>
   24328:	003fd706 	br	24288 <__alt_data_end+0xfffe4288>
   2432c:	89400717 	ldw	r5,28(r17)
   24330:	000d883a 	mov	r6,zero
   24334:	01c00044 	movi	r7,1
   24338:	9809883a 	mov	r4,r19
   2433c:	403ee83a 	callr	r8
   24340:	100d883a 	mov	r6,r2
   24344:	00bfffc4 	movi	r2,-1
   24348:	30801426 	beq	r6,r2,2439c <__sflush_r+0x1e4>
   2434c:	8880030b 	ldhu	r2,12(r17)
   24350:	8a000a17 	ldw	r8,40(r17)
   24354:	003fae06 	br	24210 <__alt_data_end+0xfffe4210>
   24358:	98c00017 	ldw	r3,0(r19)
   2435c:	183fba26 	beq	r3,zero,24248 <__alt_data_end+0xfffe4248>
   24360:	01000744 	movi	r4,29
   24364:	19000626 	beq	r3,r4,24380 <__sflush_r+0x1c8>
   24368:	01000584 	movi	r4,22
   2436c:	19000426 	beq	r3,r4,24380 <__sflush_r+0x1c8>
   24370:	88c0030b 	ldhu	r3,12(r17)
   24374:	18c01014 	ori	r3,r3,64
   24378:	88c0030d 	sth	r3,12(r17)
   2437c:	003fc306 	br	2428c <__alt_data_end+0xfffe428c>
   24380:	8880030b 	ldhu	r2,12(r17)
   24384:	88c00417 	ldw	r3,16(r17)
   24388:	88000115 	stw	zero,4(r17)
   2438c:	10bdffcc 	andi	r2,r2,63487
   24390:	8880030d 	sth	r2,12(r17)
   24394:	88c00015 	stw	r3,0(r17)
   24398:	003fb306 	br	24268 <__alt_data_end+0xfffe4268>
   2439c:	98800017 	ldw	r2,0(r19)
   243a0:	103fea26 	beq	r2,zero,2434c <__alt_data_end+0xfffe434c>
   243a4:	00c00744 	movi	r3,29
   243a8:	10c00226 	beq	r2,r3,243b4 <__sflush_r+0x1fc>
   243ac:	00c00584 	movi	r3,22
   243b0:	10c0031e 	bne	r2,r3,243c0 <__sflush_r+0x208>
   243b4:	9c000015 	stw	r16,0(r19)
   243b8:	0005883a 	mov	r2,zero
   243bc:	003fb306 	br	2428c <__alt_data_end+0xfffe428c>
   243c0:	88c0030b 	ldhu	r3,12(r17)
   243c4:	3005883a 	mov	r2,r6
   243c8:	18c01014 	ori	r3,r3,64
   243cc:	88c0030d 	sth	r3,12(r17)
   243d0:	003fae06 	br	2428c <__alt_data_end+0xfffe428c>

000243d4 <_fflush_r>:
   243d4:	defffd04 	addi	sp,sp,-12
   243d8:	dc000115 	stw	r16,4(sp)
   243dc:	dfc00215 	stw	ra,8(sp)
   243e0:	2021883a 	mov	r16,r4
   243e4:	20000226 	beq	r4,zero,243f0 <_fflush_r+0x1c>
   243e8:	20800e17 	ldw	r2,56(r4)
   243ec:	10000c26 	beq	r2,zero,24420 <_fflush_r+0x4c>
   243f0:	2880030f 	ldh	r2,12(r5)
   243f4:	1000051e 	bne	r2,zero,2440c <_fflush_r+0x38>
   243f8:	0005883a 	mov	r2,zero
   243fc:	dfc00217 	ldw	ra,8(sp)
   24400:	dc000117 	ldw	r16,4(sp)
   24404:	dec00304 	addi	sp,sp,12
   24408:	f800283a 	ret
   2440c:	8009883a 	mov	r4,r16
   24410:	dfc00217 	ldw	ra,8(sp)
   24414:	dc000117 	ldw	r16,4(sp)
   24418:	dec00304 	addi	sp,sp,12
   2441c:	00241b81 	jmpi	241b8 <__sflush_r>
   24420:	d9400015 	stw	r5,0(sp)
   24424:	00247b00 	call	247b0 <__sinit>
   24428:	d9400017 	ldw	r5,0(sp)
   2442c:	003ff006 	br	243f0 <__alt_data_end+0xfffe43f0>

00024430 <fflush>:
   24430:	20000526 	beq	r4,zero,24448 <fflush+0x18>
   24434:	008000f4 	movhi	r2,3
   24438:	10847704 	addi	r2,r2,4572
   2443c:	200b883a 	mov	r5,r4
   24440:	11000017 	ldw	r4,0(r2)
   24444:	00243d41 	jmpi	243d4 <_fflush_r>
   24448:	008000f4 	movhi	r2,3
   2444c:	10847604 	addi	r2,r2,4568
   24450:	11000017 	ldw	r4,0(r2)
   24454:	014000b4 	movhi	r5,2
   24458:	2950f504 	addi	r5,r5,17364
   2445c:	00251b41 	jmpi	251b4 <_fwalk_reent>

00024460 <__fp_unlock>:
   24460:	0005883a 	mov	r2,zero
   24464:	f800283a 	ret

00024468 <_cleanup_r>:
   24468:	014000f4 	movhi	r5,3
   2446c:	29647304 	addi	r5,r5,-28212
   24470:	00251b41 	jmpi	251b4 <_fwalk_reent>

00024474 <__sinit.part.1>:
   24474:	defff704 	addi	sp,sp,-36
   24478:	00c000b4 	movhi	r3,2
   2447c:	dfc00815 	stw	ra,32(sp)
   24480:	ddc00715 	stw	r23,28(sp)
   24484:	dd800615 	stw	r22,24(sp)
   24488:	dd400515 	stw	r21,20(sp)
   2448c:	dd000415 	stw	r20,16(sp)
   24490:	dcc00315 	stw	r19,12(sp)
   24494:	dc800215 	stw	r18,8(sp)
   24498:	dc400115 	stw	r17,4(sp)
   2449c:	dc000015 	stw	r16,0(sp)
   244a0:	18d11a04 	addi	r3,r3,17512
   244a4:	24000117 	ldw	r16,4(r4)
   244a8:	20c00f15 	stw	r3,60(r4)
   244ac:	2080bb04 	addi	r2,r4,748
   244b0:	00c000c4 	movi	r3,3
   244b4:	20c0b915 	stw	r3,740(r4)
   244b8:	2080ba15 	stw	r2,744(r4)
   244bc:	2000b815 	stw	zero,736(r4)
   244c0:	05c00204 	movi	r23,8
   244c4:	00800104 	movi	r2,4
   244c8:	2025883a 	mov	r18,r4
   244cc:	b80d883a 	mov	r6,r23
   244d0:	81001704 	addi	r4,r16,92
   244d4:	000b883a 	mov	r5,zero
   244d8:	80000015 	stw	zero,0(r16)
   244dc:	80000115 	stw	zero,4(r16)
   244e0:	80000215 	stw	zero,8(r16)
   244e4:	8080030d 	sth	r2,12(r16)
   244e8:	80001915 	stw	zero,100(r16)
   244ec:	8000038d 	sth	zero,14(r16)
   244f0:	80000415 	stw	zero,16(r16)
   244f4:	80000515 	stw	zero,20(r16)
   244f8:	80000615 	stw	zero,24(r16)
   244fc:	00260a40 	call	260a4 <memset>
   24500:	058000b4 	movhi	r22,2
   24504:	94400217 	ldw	r17,8(r18)
   24508:	054000b4 	movhi	r21,2
   2450c:	050000b4 	movhi	r20,2
   24510:	04c000b4 	movhi	r19,2
   24514:	b59dfd04 	addi	r22,r22,30708
   24518:	ad5e1404 	addi	r21,r21,30800
   2451c:	a51e3304 	addi	r20,r20,30924
   24520:	9cde4a04 	addi	r19,r19,31016
   24524:	85800815 	stw	r22,32(r16)
   24528:	85400915 	stw	r21,36(r16)
   2452c:	85000a15 	stw	r20,40(r16)
   24530:	84c00b15 	stw	r19,44(r16)
   24534:	84000715 	stw	r16,28(r16)
   24538:	00800284 	movi	r2,10
   2453c:	8880030d 	sth	r2,12(r17)
   24540:	00800044 	movi	r2,1
   24544:	b80d883a 	mov	r6,r23
   24548:	89001704 	addi	r4,r17,92
   2454c:	000b883a 	mov	r5,zero
   24550:	88000015 	stw	zero,0(r17)
   24554:	88000115 	stw	zero,4(r17)
   24558:	88000215 	stw	zero,8(r17)
   2455c:	88001915 	stw	zero,100(r17)
   24560:	8880038d 	sth	r2,14(r17)
   24564:	88000415 	stw	zero,16(r17)
   24568:	88000515 	stw	zero,20(r17)
   2456c:	88000615 	stw	zero,24(r17)
   24570:	00260a40 	call	260a4 <memset>
   24574:	94000317 	ldw	r16,12(r18)
   24578:	00800484 	movi	r2,18
   2457c:	8c400715 	stw	r17,28(r17)
   24580:	8d800815 	stw	r22,32(r17)
   24584:	8d400915 	stw	r21,36(r17)
   24588:	8d000a15 	stw	r20,40(r17)
   2458c:	8cc00b15 	stw	r19,44(r17)
   24590:	8080030d 	sth	r2,12(r16)
   24594:	00800084 	movi	r2,2
   24598:	80000015 	stw	zero,0(r16)
   2459c:	80000115 	stw	zero,4(r16)
   245a0:	80000215 	stw	zero,8(r16)
   245a4:	80001915 	stw	zero,100(r16)
   245a8:	8080038d 	sth	r2,14(r16)
   245ac:	80000415 	stw	zero,16(r16)
   245b0:	80000515 	stw	zero,20(r16)
   245b4:	80000615 	stw	zero,24(r16)
   245b8:	b80d883a 	mov	r6,r23
   245bc:	000b883a 	mov	r5,zero
   245c0:	81001704 	addi	r4,r16,92
   245c4:	00260a40 	call	260a4 <memset>
   245c8:	00800044 	movi	r2,1
   245cc:	84000715 	stw	r16,28(r16)
   245d0:	85800815 	stw	r22,32(r16)
   245d4:	85400915 	stw	r21,36(r16)
   245d8:	85000a15 	stw	r20,40(r16)
   245dc:	84c00b15 	stw	r19,44(r16)
   245e0:	90800e15 	stw	r2,56(r18)
   245e4:	dfc00817 	ldw	ra,32(sp)
   245e8:	ddc00717 	ldw	r23,28(sp)
   245ec:	dd800617 	ldw	r22,24(sp)
   245f0:	dd400517 	ldw	r21,20(sp)
   245f4:	dd000417 	ldw	r20,16(sp)
   245f8:	dcc00317 	ldw	r19,12(sp)
   245fc:	dc800217 	ldw	r18,8(sp)
   24600:	dc400117 	ldw	r17,4(sp)
   24604:	dc000017 	ldw	r16,0(sp)
   24608:	dec00904 	addi	sp,sp,36
   2460c:	f800283a 	ret

00024610 <__fp_lock>:
   24610:	0005883a 	mov	r2,zero
   24614:	f800283a 	ret

00024618 <__sfmoreglue>:
   24618:	defffc04 	addi	sp,sp,-16
   2461c:	dc400115 	stw	r17,4(sp)
   24620:	2c7fffc4 	addi	r17,r5,-1
   24624:	8c401a24 	muli	r17,r17,104
   24628:	dc800215 	stw	r18,8(sp)
   2462c:	2825883a 	mov	r18,r5
   24630:	89401d04 	addi	r5,r17,116
   24634:	dc000015 	stw	r16,0(sp)
   24638:	dfc00315 	stw	ra,12(sp)
   2463c:	00255100 	call	25510 <_malloc_r>
   24640:	1021883a 	mov	r16,r2
   24644:	10000726 	beq	r2,zero,24664 <__sfmoreglue+0x4c>
   24648:	11000304 	addi	r4,r2,12
   2464c:	10000015 	stw	zero,0(r2)
   24650:	14800115 	stw	r18,4(r2)
   24654:	11000215 	stw	r4,8(r2)
   24658:	89801a04 	addi	r6,r17,104
   2465c:	000b883a 	mov	r5,zero
   24660:	00260a40 	call	260a4 <memset>
   24664:	8005883a 	mov	r2,r16
   24668:	dfc00317 	ldw	ra,12(sp)
   2466c:	dc800217 	ldw	r18,8(sp)
   24670:	dc400117 	ldw	r17,4(sp)
   24674:	dc000017 	ldw	r16,0(sp)
   24678:	dec00404 	addi	sp,sp,16
   2467c:	f800283a 	ret

00024680 <__sfp>:
   24680:	defffb04 	addi	sp,sp,-20
   24684:	dc000015 	stw	r16,0(sp)
   24688:	040000f4 	movhi	r16,3
   2468c:	84047604 	addi	r16,r16,4568
   24690:	dcc00315 	stw	r19,12(sp)
   24694:	2027883a 	mov	r19,r4
   24698:	81000017 	ldw	r4,0(r16)
   2469c:	dfc00415 	stw	ra,16(sp)
   246a0:	dc800215 	stw	r18,8(sp)
   246a4:	20800e17 	ldw	r2,56(r4)
   246a8:	dc400115 	stw	r17,4(sp)
   246ac:	1000021e 	bne	r2,zero,246b8 <__sfp+0x38>
   246b0:	00244740 	call	24474 <__sinit.part.1>
   246b4:	81000017 	ldw	r4,0(r16)
   246b8:	2480b804 	addi	r18,r4,736
   246bc:	047fffc4 	movi	r17,-1
   246c0:	91000117 	ldw	r4,4(r18)
   246c4:	94000217 	ldw	r16,8(r18)
   246c8:	213fffc4 	addi	r4,r4,-1
   246cc:	20000a16 	blt	r4,zero,246f8 <__sfp+0x78>
   246d0:	8080030f 	ldh	r2,12(r16)
   246d4:	10000c26 	beq	r2,zero,24708 <__sfp+0x88>
   246d8:	80c01d04 	addi	r3,r16,116
   246dc:	00000206 	br	246e8 <__sfp+0x68>
   246e0:	18bfe60f 	ldh	r2,-104(r3)
   246e4:	10000826 	beq	r2,zero,24708 <__sfp+0x88>
   246e8:	213fffc4 	addi	r4,r4,-1
   246ec:	1c3ffd04 	addi	r16,r3,-12
   246f0:	18c01a04 	addi	r3,r3,104
   246f4:	247ffa1e 	bne	r4,r17,246e0 <__alt_data_end+0xfffe46e0>
   246f8:	90800017 	ldw	r2,0(r18)
   246fc:	10001d26 	beq	r2,zero,24774 <__sfp+0xf4>
   24700:	1025883a 	mov	r18,r2
   24704:	003fee06 	br	246c0 <__alt_data_end+0xfffe46c0>
   24708:	00bfffc4 	movi	r2,-1
   2470c:	8080038d 	sth	r2,14(r16)
   24710:	00800044 	movi	r2,1
   24714:	8080030d 	sth	r2,12(r16)
   24718:	80001915 	stw	zero,100(r16)
   2471c:	80000015 	stw	zero,0(r16)
   24720:	80000215 	stw	zero,8(r16)
   24724:	80000115 	stw	zero,4(r16)
   24728:	80000415 	stw	zero,16(r16)
   2472c:	80000515 	stw	zero,20(r16)
   24730:	80000615 	stw	zero,24(r16)
   24734:	01800204 	movi	r6,8
   24738:	000b883a 	mov	r5,zero
   2473c:	81001704 	addi	r4,r16,92
   24740:	00260a40 	call	260a4 <memset>
   24744:	8005883a 	mov	r2,r16
   24748:	80000c15 	stw	zero,48(r16)
   2474c:	80000d15 	stw	zero,52(r16)
   24750:	80001115 	stw	zero,68(r16)
   24754:	80001215 	stw	zero,72(r16)
   24758:	dfc00417 	ldw	ra,16(sp)
   2475c:	dcc00317 	ldw	r19,12(sp)
   24760:	dc800217 	ldw	r18,8(sp)
   24764:	dc400117 	ldw	r17,4(sp)
   24768:	dc000017 	ldw	r16,0(sp)
   2476c:	dec00504 	addi	sp,sp,20
   24770:	f800283a 	ret
   24774:	01400104 	movi	r5,4
   24778:	9809883a 	mov	r4,r19
   2477c:	00246180 	call	24618 <__sfmoreglue>
   24780:	90800015 	stw	r2,0(r18)
   24784:	103fde1e 	bne	r2,zero,24700 <__alt_data_end+0xfffe4700>
   24788:	00800304 	movi	r2,12
   2478c:	98800015 	stw	r2,0(r19)
   24790:	0005883a 	mov	r2,zero
   24794:	003ff006 	br	24758 <__alt_data_end+0xfffe4758>

00024798 <_cleanup>:
   24798:	008000f4 	movhi	r2,3
   2479c:	10847604 	addi	r2,r2,4568
   247a0:	11000017 	ldw	r4,0(r2)
   247a4:	014000f4 	movhi	r5,3
   247a8:	29647304 	addi	r5,r5,-28212
   247ac:	00251b41 	jmpi	251b4 <_fwalk_reent>

000247b0 <__sinit>:
   247b0:	20800e17 	ldw	r2,56(r4)
   247b4:	10000126 	beq	r2,zero,247bc <__sinit+0xc>
   247b8:	f800283a 	ret
   247bc:	00244741 	jmpi	24474 <__sinit.part.1>

000247c0 <__sfp_lock_acquire>:
   247c0:	f800283a 	ret

000247c4 <__sfp_lock_release>:
   247c4:	f800283a 	ret

000247c8 <__sinit_lock_acquire>:
   247c8:	f800283a 	ret

000247cc <__sinit_lock_release>:
   247cc:	f800283a 	ret

000247d0 <__fp_lock_all>:
   247d0:	008000f4 	movhi	r2,3
   247d4:	10847704 	addi	r2,r2,4572
   247d8:	11000017 	ldw	r4,0(r2)
   247dc:	014000b4 	movhi	r5,2
   247e0:	29518404 	addi	r5,r5,17936
   247e4:	00250f01 	jmpi	250f0 <_fwalk>

000247e8 <__fp_unlock_all>:
   247e8:	008000f4 	movhi	r2,3
   247ec:	10847704 	addi	r2,r2,4572
   247f0:	11000017 	ldw	r4,0(r2)
   247f4:	014000b4 	movhi	r5,2
   247f8:	29511804 	addi	r5,r5,17504
   247fc:	00250f01 	jmpi	250f0 <_fwalk>

00024800 <_malloc_trim_r>:
   24800:	defffb04 	addi	sp,sp,-20
   24804:	dcc00315 	stw	r19,12(sp)
   24808:	04c000f4 	movhi	r19,3
   2480c:	dc800215 	stw	r18,8(sp)
   24810:	dc400115 	stw	r17,4(sp)
   24814:	dc000015 	stw	r16,0(sp)
   24818:	dfc00415 	stw	ra,16(sp)
   2481c:	2821883a 	mov	r16,r5
   24820:	9cfef204 	addi	r19,r19,-1080
   24824:	2025883a 	mov	r18,r4
   24828:	002d2200 	call	2d220 <__malloc_lock>
   2482c:	98800217 	ldw	r2,8(r19)
   24830:	14400117 	ldw	r17,4(r2)
   24834:	00bfff04 	movi	r2,-4
   24838:	88a2703a 	and	r17,r17,r2
   2483c:	8c21c83a 	sub	r16,r17,r16
   24840:	8403fbc4 	addi	r16,r16,4079
   24844:	8020d33a 	srli	r16,r16,12
   24848:	0083ffc4 	movi	r2,4095
   2484c:	843fffc4 	addi	r16,r16,-1
   24850:	8020933a 	slli	r16,r16,12
   24854:	1400060e 	bge	r2,r16,24870 <_malloc_trim_r+0x70>
   24858:	000b883a 	mov	r5,zero
   2485c:	9009883a 	mov	r4,r18
   24860:	00277a00 	call	277a0 <_sbrk_r>
   24864:	98c00217 	ldw	r3,8(r19)
   24868:	1c47883a 	add	r3,r3,r17
   2486c:	10c00a26 	beq	r2,r3,24898 <_malloc_trim_r+0x98>
   24870:	9009883a 	mov	r4,r18
   24874:	002d2440 	call	2d244 <__malloc_unlock>
   24878:	0005883a 	mov	r2,zero
   2487c:	dfc00417 	ldw	ra,16(sp)
   24880:	dcc00317 	ldw	r19,12(sp)
   24884:	dc800217 	ldw	r18,8(sp)
   24888:	dc400117 	ldw	r17,4(sp)
   2488c:	dc000017 	ldw	r16,0(sp)
   24890:	dec00504 	addi	sp,sp,20
   24894:	f800283a 	ret
   24898:	040bc83a 	sub	r5,zero,r16
   2489c:	9009883a 	mov	r4,r18
   248a0:	00277a00 	call	277a0 <_sbrk_r>
   248a4:	00ffffc4 	movi	r3,-1
   248a8:	10c00d26 	beq	r2,r3,248e0 <_malloc_trim_r+0xe0>
   248ac:	00c000f4 	movhi	r3,3
   248b0:	18cb4f04 	addi	r3,r3,11580
   248b4:	18800017 	ldw	r2,0(r3)
   248b8:	99000217 	ldw	r4,8(r19)
   248bc:	8c23c83a 	sub	r17,r17,r16
   248c0:	8c400054 	ori	r17,r17,1
   248c4:	1421c83a 	sub	r16,r2,r16
   248c8:	24400115 	stw	r17,4(r4)
   248cc:	9009883a 	mov	r4,r18
   248d0:	1c000015 	stw	r16,0(r3)
   248d4:	002d2440 	call	2d244 <__malloc_unlock>
   248d8:	00800044 	movi	r2,1
   248dc:	003fe706 	br	2487c <__alt_data_end+0xfffe487c>
   248e0:	000b883a 	mov	r5,zero
   248e4:	9009883a 	mov	r4,r18
   248e8:	00277a00 	call	277a0 <_sbrk_r>
   248ec:	99000217 	ldw	r4,8(r19)
   248f0:	014003c4 	movi	r5,15
   248f4:	1107c83a 	sub	r3,r2,r4
   248f8:	28ffdd0e 	bge	r5,r3,24870 <__alt_data_end+0xfffe4870>
   248fc:	014000f4 	movhi	r5,3
   24900:	29447904 	addi	r5,r5,4580
   24904:	29400017 	ldw	r5,0(r5)
   24908:	18c00054 	ori	r3,r3,1
   2490c:	20c00115 	stw	r3,4(r4)
   24910:	00c000f4 	movhi	r3,3
   24914:	1145c83a 	sub	r2,r2,r5
   24918:	18cb4f04 	addi	r3,r3,11580
   2491c:	18800015 	stw	r2,0(r3)
   24920:	003fd306 	br	24870 <__alt_data_end+0xfffe4870>

00024924 <_free_r>:
   24924:	28004126 	beq	r5,zero,24a2c <_free_r+0x108>
   24928:	defffd04 	addi	sp,sp,-12
   2492c:	dc400115 	stw	r17,4(sp)
   24930:	dc000015 	stw	r16,0(sp)
   24934:	2023883a 	mov	r17,r4
   24938:	2821883a 	mov	r16,r5
   2493c:	dfc00215 	stw	ra,8(sp)
   24940:	002d2200 	call	2d220 <__malloc_lock>
   24944:	81ffff17 	ldw	r7,-4(r16)
   24948:	00bfff84 	movi	r2,-2
   2494c:	010000f4 	movhi	r4,3
   24950:	81bffe04 	addi	r6,r16,-8
   24954:	3884703a 	and	r2,r7,r2
   24958:	213ef204 	addi	r4,r4,-1080
   2495c:	308b883a 	add	r5,r6,r2
   24960:	2a400117 	ldw	r9,4(r5)
   24964:	22000217 	ldw	r8,8(r4)
   24968:	00ffff04 	movi	r3,-4
   2496c:	48c6703a 	and	r3,r9,r3
   24970:	2a005726 	beq	r5,r8,24ad0 <_free_r+0x1ac>
   24974:	28c00115 	stw	r3,4(r5)
   24978:	39c0004c 	andi	r7,r7,1
   2497c:	3800091e 	bne	r7,zero,249a4 <_free_r+0x80>
   24980:	823ffe17 	ldw	r8,-8(r16)
   24984:	22400204 	addi	r9,r4,8
   24988:	320dc83a 	sub	r6,r6,r8
   2498c:	31c00217 	ldw	r7,8(r6)
   24990:	1205883a 	add	r2,r2,r8
   24994:	3a406526 	beq	r7,r9,24b2c <_free_r+0x208>
   24998:	32000317 	ldw	r8,12(r6)
   2499c:	3a000315 	stw	r8,12(r7)
   249a0:	41c00215 	stw	r7,8(r8)
   249a4:	28cf883a 	add	r7,r5,r3
   249a8:	39c00117 	ldw	r7,4(r7)
   249ac:	39c0004c 	andi	r7,r7,1
   249b0:	38003a26 	beq	r7,zero,24a9c <_free_r+0x178>
   249b4:	10c00054 	ori	r3,r2,1
   249b8:	30c00115 	stw	r3,4(r6)
   249bc:	3087883a 	add	r3,r6,r2
   249c0:	18800015 	stw	r2,0(r3)
   249c4:	00c07fc4 	movi	r3,511
   249c8:	18801936 	bltu	r3,r2,24a30 <_free_r+0x10c>
   249cc:	1004d0fa 	srli	r2,r2,3
   249d0:	01c00044 	movi	r7,1
   249d4:	21400117 	ldw	r5,4(r4)
   249d8:	10c00044 	addi	r3,r2,1
   249dc:	18c7883a 	add	r3,r3,r3
   249e0:	1005d0ba 	srai	r2,r2,2
   249e4:	18c7883a 	add	r3,r3,r3
   249e8:	18c7883a 	add	r3,r3,r3
   249ec:	1907883a 	add	r3,r3,r4
   249f0:	3884983a 	sll	r2,r7,r2
   249f4:	19c00017 	ldw	r7,0(r3)
   249f8:	1a3ffe04 	addi	r8,r3,-8
   249fc:	1144b03a 	or	r2,r2,r5
   24a00:	32000315 	stw	r8,12(r6)
   24a04:	31c00215 	stw	r7,8(r6)
   24a08:	20800115 	stw	r2,4(r4)
   24a0c:	19800015 	stw	r6,0(r3)
   24a10:	39800315 	stw	r6,12(r7)
   24a14:	8809883a 	mov	r4,r17
   24a18:	dfc00217 	ldw	ra,8(sp)
   24a1c:	dc400117 	ldw	r17,4(sp)
   24a20:	dc000017 	ldw	r16,0(sp)
   24a24:	dec00304 	addi	sp,sp,12
   24a28:	002d2441 	jmpi	2d244 <__malloc_unlock>
   24a2c:	f800283a 	ret
   24a30:	100ad27a 	srli	r5,r2,9
   24a34:	00c00104 	movi	r3,4
   24a38:	19404a36 	bltu	r3,r5,24b64 <_free_r+0x240>
   24a3c:	100ad1ba 	srli	r5,r2,6
   24a40:	28c00e44 	addi	r3,r5,57
   24a44:	18c7883a 	add	r3,r3,r3
   24a48:	29400e04 	addi	r5,r5,56
   24a4c:	18c7883a 	add	r3,r3,r3
   24a50:	18c7883a 	add	r3,r3,r3
   24a54:	1909883a 	add	r4,r3,r4
   24a58:	20c00017 	ldw	r3,0(r4)
   24a5c:	01c000f4 	movhi	r7,3
   24a60:	213ffe04 	addi	r4,r4,-8
   24a64:	39fef204 	addi	r7,r7,-1080
   24a68:	20c04426 	beq	r4,r3,24b7c <_free_r+0x258>
   24a6c:	01ffff04 	movi	r7,-4
   24a70:	19400117 	ldw	r5,4(r3)
   24a74:	29ca703a 	and	r5,r5,r7
   24a78:	1140022e 	bgeu	r2,r5,24a84 <_free_r+0x160>
   24a7c:	18c00217 	ldw	r3,8(r3)
   24a80:	20fffb1e 	bne	r4,r3,24a70 <__alt_data_end+0xfffe4a70>
   24a84:	19000317 	ldw	r4,12(r3)
   24a88:	31000315 	stw	r4,12(r6)
   24a8c:	30c00215 	stw	r3,8(r6)
   24a90:	21800215 	stw	r6,8(r4)
   24a94:	19800315 	stw	r6,12(r3)
   24a98:	003fde06 	br	24a14 <__alt_data_end+0xfffe4a14>
   24a9c:	29c00217 	ldw	r7,8(r5)
   24aa0:	10c5883a 	add	r2,r2,r3
   24aa4:	00c000f4 	movhi	r3,3
   24aa8:	18fef404 	addi	r3,r3,-1072
   24aac:	38c03b26 	beq	r7,r3,24b9c <_free_r+0x278>
   24ab0:	2a000317 	ldw	r8,12(r5)
   24ab4:	11400054 	ori	r5,r2,1
   24ab8:	3087883a 	add	r3,r6,r2
   24abc:	3a000315 	stw	r8,12(r7)
   24ac0:	41c00215 	stw	r7,8(r8)
   24ac4:	31400115 	stw	r5,4(r6)
   24ac8:	18800015 	stw	r2,0(r3)
   24acc:	003fbd06 	br	249c4 <__alt_data_end+0xfffe49c4>
   24ad0:	39c0004c 	andi	r7,r7,1
   24ad4:	10c5883a 	add	r2,r2,r3
   24ad8:	3800071e 	bne	r7,zero,24af8 <_free_r+0x1d4>
   24adc:	81fffe17 	ldw	r7,-8(r16)
   24ae0:	31cdc83a 	sub	r6,r6,r7
   24ae4:	30c00317 	ldw	r3,12(r6)
   24ae8:	31400217 	ldw	r5,8(r6)
   24aec:	11c5883a 	add	r2,r2,r7
   24af0:	28c00315 	stw	r3,12(r5)
   24af4:	19400215 	stw	r5,8(r3)
   24af8:	10c00054 	ori	r3,r2,1
   24afc:	30c00115 	stw	r3,4(r6)
   24b00:	00c000f4 	movhi	r3,3
   24b04:	18c47a04 	addi	r3,r3,4584
   24b08:	18c00017 	ldw	r3,0(r3)
   24b0c:	21800215 	stw	r6,8(r4)
   24b10:	10ffc036 	bltu	r2,r3,24a14 <__alt_data_end+0xfffe4a14>
   24b14:	008000f4 	movhi	r2,3
   24b18:	108b4604 	addi	r2,r2,11544
   24b1c:	11400017 	ldw	r5,0(r2)
   24b20:	8809883a 	mov	r4,r17
   24b24:	00248000 	call	24800 <_malloc_trim_r>
   24b28:	003fba06 	br	24a14 <__alt_data_end+0xfffe4a14>
   24b2c:	28c9883a 	add	r4,r5,r3
   24b30:	21000117 	ldw	r4,4(r4)
   24b34:	2100004c 	andi	r4,r4,1
   24b38:	2000391e 	bne	r4,zero,24c20 <_free_r+0x2fc>
   24b3c:	29c00217 	ldw	r7,8(r5)
   24b40:	29000317 	ldw	r4,12(r5)
   24b44:	1885883a 	add	r2,r3,r2
   24b48:	10c00054 	ori	r3,r2,1
   24b4c:	39000315 	stw	r4,12(r7)
   24b50:	21c00215 	stw	r7,8(r4)
   24b54:	30c00115 	stw	r3,4(r6)
   24b58:	308d883a 	add	r6,r6,r2
   24b5c:	30800015 	stw	r2,0(r6)
   24b60:	003fac06 	br	24a14 <__alt_data_end+0xfffe4a14>
   24b64:	00c00504 	movi	r3,20
   24b68:	19401536 	bltu	r3,r5,24bc0 <_free_r+0x29c>
   24b6c:	28c01704 	addi	r3,r5,92
   24b70:	18c7883a 	add	r3,r3,r3
   24b74:	294016c4 	addi	r5,r5,91
   24b78:	003fb406 	br	24a4c <__alt_data_end+0xfffe4a4c>
   24b7c:	280bd0ba 	srai	r5,r5,2
   24b80:	00c00044 	movi	r3,1
   24b84:	38800117 	ldw	r2,4(r7)
   24b88:	194a983a 	sll	r5,r3,r5
   24b8c:	2007883a 	mov	r3,r4
   24b90:	2884b03a 	or	r2,r5,r2
   24b94:	38800115 	stw	r2,4(r7)
   24b98:	003fbb06 	br	24a88 <__alt_data_end+0xfffe4a88>
   24b9c:	21800515 	stw	r6,20(r4)
   24ba0:	21800415 	stw	r6,16(r4)
   24ba4:	10c00054 	ori	r3,r2,1
   24ba8:	31c00315 	stw	r7,12(r6)
   24bac:	31c00215 	stw	r7,8(r6)
   24bb0:	30c00115 	stw	r3,4(r6)
   24bb4:	308d883a 	add	r6,r6,r2
   24bb8:	30800015 	stw	r2,0(r6)
   24bbc:	003f9506 	br	24a14 <__alt_data_end+0xfffe4a14>
   24bc0:	00c01504 	movi	r3,84
   24bc4:	19400536 	bltu	r3,r5,24bdc <_free_r+0x2b8>
   24bc8:	100ad33a 	srli	r5,r2,12
   24bcc:	28c01bc4 	addi	r3,r5,111
   24bd0:	18c7883a 	add	r3,r3,r3
   24bd4:	29401b84 	addi	r5,r5,110
   24bd8:	003f9c06 	br	24a4c <__alt_data_end+0xfffe4a4c>
   24bdc:	00c05504 	movi	r3,340
   24be0:	19400536 	bltu	r3,r5,24bf8 <_free_r+0x2d4>
   24be4:	100ad3fa 	srli	r5,r2,15
   24be8:	28c01e04 	addi	r3,r5,120
   24bec:	18c7883a 	add	r3,r3,r3
   24bf0:	29401dc4 	addi	r5,r5,119
   24bf4:	003f9506 	br	24a4c <__alt_data_end+0xfffe4a4c>
   24bf8:	00c15504 	movi	r3,1364
   24bfc:	19400536 	bltu	r3,r5,24c14 <_free_r+0x2f0>
   24c00:	100ad4ba 	srli	r5,r2,18
   24c04:	28c01f44 	addi	r3,r5,125
   24c08:	18c7883a 	add	r3,r3,r3
   24c0c:	29401f04 	addi	r5,r5,124
   24c10:	003f8e06 	br	24a4c <__alt_data_end+0xfffe4a4c>
   24c14:	00c03f84 	movi	r3,254
   24c18:	01401f84 	movi	r5,126
   24c1c:	003f8b06 	br	24a4c <__alt_data_end+0xfffe4a4c>
   24c20:	10c00054 	ori	r3,r2,1
   24c24:	30c00115 	stw	r3,4(r6)
   24c28:	308d883a 	add	r6,r6,r2
   24c2c:	30800015 	stw	r2,0(r6)
   24c30:	003f7806 	br	24a14 <__alt_data_end+0xfffe4a14>

00024c34 <__sfvwrite_r>:
   24c34:	30800217 	ldw	r2,8(r6)
   24c38:	10006726 	beq	r2,zero,24dd8 <__sfvwrite_r+0x1a4>
   24c3c:	28c0030b 	ldhu	r3,12(r5)
   24c40:	defff404 	addi	sp,sp,-48
   24c44:	dd400715 	stw	r21,28(sp)
   24c48:	dd000615 	stw	r20,24(sp)
   24c4c:	dc000215 	stw	r16,8(sp)
   24c50:	dfc00b15 	stw	ra,44(sp)
   24c54:	df000a15 	stw	fp,40(sp)
   24c58:	ddc00915 	stw	r23,36(sp)
   24c5c:	dd800815 	stw	r22,32(sp)
   24c60:	dcc00515 	stw	r19,20(sp)
   24c64:	dc800415 	stw	r18,16(sp)
   24c68:	dc400315 	stw	r17,12(sp)
   24c6c:	1880020c 	andi	r2,r3,8
   24c70:	2821883a 	mov	r16,r5
   24c74:	202b883a 	mov	r21,r4
   24c78:	3029883a 	mov	r20,r6
   24c7c:	10002726 	beq	r2,zero,24d1c <__sfvwrite_r+0xe8>
   24c80:	28800417 	ldw	r2,16(r5)
   24c84:	10002526 	beq	r2,zero,24d1c <__sfvwrite_r+0xe8>
   24c88:	1880008c 	andi	r2,r3,2
   24c8c:	a4400017 	ldw	r17,0(r20)
   24c90:	10002a26 	beq	r2,zero,24d3c <__sfvwrite_r+0x108>
   24c94:	05a00034 	movhi	r22,32768
   24c98:	0027883a 	mov	r19,zero
   24c9c:	0025883a 	mov	r18,zero
   24ca0:	b5bf0004 	addi	r22,r22,-1024
   24ca4:	980d883a 	mov	r6,r19
   24ca8:	a809883a 	mov	r4,r21
   24cac:	90004626 	beq	r18,zero,24dc8 <__sfvwrite_r+0x194>
   24cb0:	900f883a 	mov	r7,r18
   24cb4:	b480022e 	bgeu	r22,r18,24cc0 <__sfvwrite_r+0x8c>
   24cb8:	01e00034 	movhi	r7,32768
   24cbc:	39ff0004 	addi	r7,r7,-1024
   24cc0:	80800917 	ldw	r2,36(r16)
   24cc4:	81400717 	ldw	r5,28(r16)
   24cc8:	103ee83a 	callr	r2
   24ccc:	0080570e 	bge	zero,r2,24e2c <__sfvwrite_r+0x1f8>
   24cd0:	a0c00217 	ldw	r3,8(r20)
   24cd4:	98a7883a 	add	r19,r19,r2
   24cd8:	90a5c83a 	sub	r18,r18,r2
   24cdc:	1885c83a 	sub	r2,r3,r2
   24ce0:	a0800215 	stw	r2,8(r20)
   24ce4:	103fef1e 	bne	r2,zero,24ca4 <__alt_data_end+0xfffe4ca4>
   24ce8:	0005883a 	mov	r2,zero
   24cec:	dfc00b17 	ldw	ra,44(sp)
   24cf0:	df000a17 	ldw	fp,40(sp)
   24cf4:	ddc00917 	ldw	r23,36(sp)
   24cf8:	dd800817 	ldw	r22,32(sp)
   24cfc:	dd400717 	ldw	r21,28(sp)
   24d00:	dd000617 	ldw	r20,24(sp)
   24d04:	dcc00517 	ldw	r19,20(sp)
   24d08:	dc800417 	ldw	r18,16(sp)
   24d0c:	dc400317 	ldw	r17,12(sp)
   24d10:	dc000217 	ldw	r16,8(sp)
   24d14:	dec00c04 	addi	sp,sp,48
   24d18:	f800283a 	ret
   24d1c:	800b883a 	mov	r5,r16
   24d20:	a809883a 	mov	r4,r21
   24d24:	00227dc0 	call	227dc <__swsetup_r>
   24d28:	1000eb1e 	bne	r2,zero,250d8 <__sfvwrite_r+0x4a4>
   24d2c:	80c0030b 	ldhu	r3,12(r16)
   24d30:	a4400017 	ldw	r17,0(r20)
   24d34:	1880008c 	andi	r2,r3,2
   24d38:	103fd61e 	bne	r2,zero,24c94 <__alt_data_end+0xfffe4c94>
   24d3c:	1880004c 	andi	r2,r3,1
   24d40:	10003f1e 	bne	r2,zero,24e40 <__sfvwrite_r+0x20c>
   24d44:	0039883a 	mov	fp,zero
   24d48:	0025883a 	mov	r18,zero
   24d4c:	90001a26 	beq	r18,zero,24db8 <__sfvwrite_r+0x184>
   24d50:	1880800c 	andi	r2,r3,512
   24d54:	84c00217 	ldw	r19,8(r16)
   24d58:	10002126 	beq	r2,zero,24de0 <__sfvwrite_r+0x1ac>
   24d5c:	982f883a 	mov	r23,r19
   24d60:	94c09336 	bltu	r18,r19,24fb0 <__sfvwrite_r+0x37c>
   24d64:	1881200c 	andi	r2,r3,1152
   24d68:	10009e1e 	bne	r2,zero,24fe4 <__sfvwrite_r+0x3b0>
   24d6c:	81000017 	ldw	r4,0(r16)
   24d70:	b80d883a 	mov	r6,r23
   24d74:	e00b883a 	mov	r5,fp
   24d78:	0025f480 	call	25f48 <memmove>
   24d7c:	80c00217 	ldw	r3,8(r16)
   24d80:	81000017 	ldw	r4,0(r16)
   24d84:	9005883a 	mov	r2,r18
   24d88:	1ce7c83a 	sub	r19,r3,r19
   24d8c:	25cf883a 	add	r7,r4,r23
   24d90:	84c00215 	stw	r19,8(r16)
   24d94:	81c00015 	stw	r7,0(r16)
   24d98:	a0c00217 	ldw	r3,8(r20)
   24d9c:	e0b9883a 	add	fp,fp,r2
   24da0:	90a5c83a 	sub	r18,r18,r2
   24da4:	18a7c83a 	sub	r19,r3,r2
   24da8:	a4c00215 	stw	r19,8(r20)
   24dac:	983fce26 	beq	r19,zero,24ce8 <__alt_data_end+0xfffe4ce8>
   24db0:	80c0030b 	ldhu	r3,12(r16)
   24db4:	903fe61e 	bne	r18,zero,24d50 <__alt_data_end+0xfffe4d50>
   24db8:	8f000017 	ldw	fp,0(r17)
   24dbc:	8c800117 	ldw	r18,4(r17)
   24dc0:	8c400204 	addi	r17,r17,8
   24dc4:	003fe106 	br	24d4c <__alt_data_end+0xfffe4d4c>
   24dc8:	8cc00017 	ldw	r19,0(r17)
   24dcc:	8c800117 	ldw	r18,4(r17)
   24dd0:	8c400204 	addi	r17,r17,8
   24dd4:	003fb306 	br	24ca4 <__alt_data_end+0xfffe4ca4>
   24dd8:	0005883a 	mov	r2,zero
   24ddc:	f800283a 	ret
   24de0:	81000017 	ldw	r4,0(r16)
   24de4:	80800417 	ldw	r2,16(r16)
   24de8:	11005736 	bltu	r2,r4,24f48 <__sfvwrite_r+0x314>
   24dec:	85c00517 	ldw	r23,20(r16)
   24df0:	95c05536 	bltu	r18,r23,24f48 <__sfvwrite_r+0x314>
   24df4:	00a00034 	movhi	r2,32768
   24df8:	10bfffc4 	addi	r2,r2,-1
   24dfc:	9009883a 	mov	r4,r18
   24e00:	1480012e 	bgeu	r2,r18,24e08 <__sfvwrite_r+0x1d4>
   24e04:	1009883a 	mov	r4,r2
   24e08:	b80b883a 	mov	r5,r23
   24e0c:	002a4380 	call	2a438 <__divsi3>
   24e10:	15cf383a 	mul	r7,r2,r23
   24e14:	81400717 	ldw	r5,28(r16)
   24e18:	80800917 	ldw	r2,36(r16)
   24e1c:	e00d883a 	mov	r6,fp
   24e20:	a809883a 	mov	r4,r21
   24e24:	103ee83a 	callr	r2
   24e28:	00bfdb16 	blt	zero,r2,24d98 <__alt_data_end+0xfffe4d98>
   24e2c:	8080030b 	ldhu	r2,12(r16)
   24e30:	10801014 	ori	r2,r2,64
   24e34:	8080030d 	sth	r2,12(r16)
   24e38:	00bfffc4 	movi	r2,-1
   24e3c:	003fab06 	br	24cec <__alt_data_end+0xfffe4cec>
   24e40:	0027883a 	mov	r19,zero
   24e44:	0011883a 	mov	r8,zero
   24e48:	0039883a 	mov	fp,zero
   24e4c:	0025883a 	mov	r18,zero
   24e50:	90001f26 	beq	r18,zero,24ed0 <__sfvwrite_r+0x29c>
   24e54:	40005a26 	beq	r8,zero,24fc0 <__sfvwrite_r+0x38c>
   24e58:	982d883a 	mov	r22,r19
   24e5c:	94c0012e 	bgeu	r18,r19,24e64 <__sfvwrite_r+0x230>
   24e60:	902d883a 	mov	r22,r18
   24e64:	81000017 	ldw	r4,0(r16)
   24e68:	80800417 	ldw	r2,16(r16)
   24e6c:	b02f883a 	mov	r23,r22
   24e70:	81c00517 	ldw	r7,20(r16)
   24e74:	1100032e 	bgeu	r2,r4,24e84 <__sfvwrite_r+0x250>
   24e78:	80c00217 	ldw	r3,8(r16)
   24e7c:	38c7883a 	add	r3,r7,r3
   24e80:	1d801816 	blt	r3,r22,24ee4 <__sfvwrite_r+0x2b0>
   24e84:	b1c03e16 	blt	r22,r7,24f80 <__sfvwrite_r+0x34c>
   24e88:	80800917 	ldw	r2,36(r16)
   24e8c:	81400717 	ldw	r5,28(r16)
   24e90:	e00d883a 	mov	r6,fp
   24e94:	da000115 	stw	r8,4(sp)
   24e98:	a809883a 	mov	r4,r21
   24e9c:	103ee83a 	callr	r2
   24ea0:	102f883a 	mov	r23,r2
   24ea4:	da000117 	ldw	r8,4(sp)
   24ea8:	00bfe00e 	bge	zero,r2,24e2c <__alt_data_end+0xfffe4e2c>
   24eac:	9de7c83a 	sub	r19,r19,r23
   24eb0:	98001f26 	beq	r19,zero,24f30 <__sfvwrite_r+0x2fc>
   24eb4:	a0800217 	ldw	r2,8(r20)
   24eb8:	e5f9883a 	add	fp,fp,r23
   24ebc:	95e5c83a 	sub	r18,r18,r23
   24ec0:	15efc83a 	sub	r23,r2,r23
   24ec4:	a5c00215 	stw	r23,8(r20)
   24ec8:	b83f8726 	beq	r23,zero,24ce8 <__alt_data_end+0xfffe4ce8>
   24ecc:	903fe11e 	bne	r18,zero,24e54 <__alt_data_end+0xfffe4e54>
   24ed0:	8f000017 	ldw	fp,0(r17)
   24ed4:	8c800117 	ldw	r18,4(r17)
   24ed8:	0011883a 	mov	r8,zero
   24edc:	8c400204 	addi	r17,r17,8
   24ee0:	003fdb06 	br	24e50 <__alt_data_end+0xfffe4e50>
   24ee4:	180d883a 	mov	r6,r3
   24ee8:	e00b883a 	mov	r5,fp
   24eec:	da000115 	stw	r8,4(sp)
   24ef0:	d8c00015 	stw	r3,0(sp)
   24ef4:	0025f480 	call	25f48 <memmove>
   24ef8:	d8c00017 	ldw	r3,0(sp)
   24efc:	80800017 	ldw	r2,0(r16)
   24f00:	800b883a 	mov	r5,r16
   24f04:	a809883a 	mov	r4,r21
   24f08:	10c5883a 	add	r2,r2,r3
   24f0c:	80800015 	stw	r2,0(r16)
   24f10:	d8c00015 	stw	r3,0(sp)
   24f14:	00243d40 	call	243d4 <_fflush_r>
   24f18:	d8c00017 	ldw	r3,0(sp)
   24f1c:	da000117 	ldw	r8,4(sp)
   24f20:	103fc21e 	bne	r2,zero,24e2c <__alt_data_end+0xfffe4e2c>
   24f24:	182f883a 	mov	r23,r3
   24f28:	9de7c83a 	sub	r19,r19,r23
   24f2c:	983fe11e 	bne	r19,zero,24eb4 <__alt_data_end+0xfffe4eb4>
   24f30:	800b883a 	mov	r5,r16
   24f34:	a809883a 	mov	r4,r21
   24f38:	00243d40 	call	243d4 <_fflush_r>
   24f3c:	103fbb1e 	bne	r2,zero,24e2c <__alt_data_end+0xfffe4e2c>
   24f40:	0011883a 	mov	r8,zero
   24f44:	003fdb06 	br	24eb4 <__alt_data_end+0xfffe4eb4>
   24f48:	94c0012e 	bgeu	r18,r19,24f50 <__sfvwrite_r+0x31c>
   24f4c:	9027883a 	mov	r19,r18
   24f50:	980d883a 	mov	r6,r19
   24f54:	e00b883a 	mov	r5,fp
   24f58:	0025f480 	call	25f48 <memmove>
   24f5c:	80800217 	ldw	r2,8(r16)
   24f60:	80c00017 	ldw	r3,0(r16)
   24f64:	14c5c83a 	sub	r2,r2,r19
   24f68:	1cc7883a 	add	r3,r3,r19
   24f6c:	80800215 	stw	r2,8(r16)
   24f70:	80c00015 	stw	r3,0(r16)
   24f74:	10004326 	beq	r2,zero,25084 <__sfvwrite_r+0x450>
   24f78:	9805883a 	mov	r2,r19
   24f7c:	003f8606 	br	24d98 <__alt_data_end+0xfffe4d98>
   24f80:	b00d883a 	mov	r6,r22
   24f84:	e00b883a 	mov	r5,fp
   24f88:	da000115 	stw	r8,4(sp)
   24f8c:	0025f480 	call	25f48 <memmove>
   24f90:	80800217 	ldw	r2,8(r16)
   24f94:	80c00017 	ldw	r3,0(r16)
   24f98:	da000117 	ldw	r8,4(sp)
   24f9c:	1585c83a 	sub	r2,r2,r22
   24fa0:	1dad883a 	add	r22,r3,r22
   24fa4:	80800215 	stw	r2,8(r16)
   24fa8:	85800015 	stw	r22,0(r16)
   24fac:	003fbf06 	br	24eac <__alt_data_end+0xfffe4eac>
   24fb0:	81000017 	ldw	r4,0(r16)
   24fb4:	9027883a 	mov	r19,r18
   24fb8:	902f883a 	mov	r23,r18
   24fbc:	003f6c06 	br	24d70 <__alt_data_end+0xfffe4d70>
   24fc0:	900d883a 	mov	r6,r18
   24fc4:	01400284 	movi	r5,10
   24fc8:	e009883a 	mov	r4,fp
   24fcc:	0025d1c0 	call	25d1c <memchr>
   24fd0:	10003e26 	beq	r2,zero,250cc <__sfvwrite_r+0x498>
   24fd4:	10800044 	addi	r2,r2,1
   24fd8:	1727c83a 	sub	r19,r2,fp
   24fdc:	02000044 	movi	r8,1
   24fe0:	003f9d06 	br	24e58 <__alt_data_end+0xfffe4e58>
   24fe4:	80800517 	ldw	r2,20(r16)
   24fe8:	81400417 	ldw	r5,16(r16)
   24fec:	81c00017 	ldw	r7,0(r16)
   24ff0:	10a7883a 	add	r19,r2,r2
   24ff4:	9885883a 	add	r2,r19,r2
   24ff8:	1026d7fa 	srli	r19,r2,31
   24ffc:	396dc83a 	sub	r22,r7,r5
   25000:	b1000044 	addi	r4,r22,1
   25004:	9885883a 	add	r2,r19,r2
   25008:	1027d07a 	srai	r19,r2,1
   2500c:	2485883a 	add	r2,r4,r18
   25010:	980d883a 	mov	r6,r19
   25014:	9880022e 	bgeu	r19,r2,25020 <__sfvwrite_r+0x3ec>
   25018:	1027883a 	mov	r19,r2
   2501c:	100d883a 	mov	r6,r2
   25020:	18c1000c 	andi	r3,r3,1024
   25024:	18001c26 	beq	r3,zero,25098 <__sfvwrite_r+0x464>
   25028:	300b883a 	mov	r5,r6
   2502c:	a809883a 	mov	r4,r21
   25030:	00255100 	call	25510 <_malloc_r>
   25034:	102f883a 	mov	r23,r2
   25038:	10002926 	beq	r2,zero,250e0 <__sfvwrite_r+0x4ac>
   2503c:	81400417 	ldw	r5,16(r16)
   25040:	b00d883a 	mov	r6,r22
   25044:	1009883a 	mov	r4,r2
   25048:	0025e000 	call	25e00 <memcpy>
   2504c:	8080030b 	ldhu	r2,12(r16)
   25050:	00fedfc4 	movi	r3,-1153
   25054:	10c4703a 	and	r2,r2,r3
   25058:	10802014 	ori	r2,r2,128
   2505c:	8080030d 	sth	r2,12(r16)
   25060:	bd89883a 	add	r4,r23,r22
   25064:	9d8fc83a 	sub	r7,r19,r22
   25068:	85c00415 	stw	r23,16(r16)
   2506c:	84c00515 	stw	r19,20(r16)
   25070:	81000015 	stw	r4,0(r16)
   25074:	9027883a 	mov	r19,r18
   25078:	81c00215 	stw	r7,8(r16)
   2507c:	902f883a 	mov	r23,r18
   25080:	003f3b06 	br	24d70 <__alt_data_end+0xfffe4d70>
   25084:	800b883a 	mov	r5,r16
   25088:	a809883a 	mov	r4,r21
   2508c:	00243d40 	call	243d4 <_fflush_r>
   25090:	103fb926 	beq	r2,zero,24f78 <__alt_data_end+0xfffe4f78>
   25094:	003f6506 	br	24e2c <__alt_data_end+0xfffe4e2c>
   25098:	a809883a 	mov	r4,r21
   2509c:	00271c80 	call	271c8 <_realloc_r>
   250a0:	102f883a 	mov	r23,r2
   250a4:	103fee1e 	bne	r2,zero,25060 <__alt_data_end+0xfffe5060>
   250a8:	81400417 	ldw	r5,16(r16)
   250ac:	a809883a 	mov	r4,r21
   250b0:	00249240 	call	24924 <_free_r>
   250b4:	8080030b 	ldhu	r2,12(r16)
   250b8:	00ffdfc4 	movi	r3,-129
   250bc:	1884703a 	and	r2,r3,r2
   250c0:	00c00304 	movi	r3,12
   250c4:	a8c00015 	stw	r3,0(r21)
   250c8:	003f5906 	br	24e30 <__alt_data_end+0xfffe4e30>
   250cc:	94c00044 	addi	r19,r18,1
   250d0:	02000044 	movi	r8,1
   250d4:	003f6006 	br	24e58 <__alt_data_end+0xfffe4e58>
   250d8:	00bfffc4 	movi	r2,-1
   250dc:	003f0306 	br	24cec <__alt_data_end+0xfffe4cec>
   250e0:	00800304 	movi	r2,12
   250e4:	a8800015 	stw	r2,0(r21)
   250e8:	8080030b 	ldhu	r2,12(r16)
   250ec:	003f5006 	br	24e30 <__alt_data_end+0xfffe4e30>

000250f0 <_fwalk>:
   250f0:	defff704 	addi	sp,sp,-36
   250f4:	dd000415 	stw	r20,16(sp)
   250f8:	dfc00815 	stw	ra,32(sp)
   250fc:	ddc00715 	stw	r23,28(sp)
   25100:	dd800615 	stw	r22,24(sp)
   25104:	dd400515 	stw	r21,20(sp)
   25108:	dcc00315 	stw	r19,12(sp)
   2510c:	dc800215 	stw	r18,8(sp)
   25110:	dc400115 	stw	r17,4(sp)
   25114:	dc000015 	stw	r16,0(sp)
   25118:	2500b804 	addi	r20,r4,736
   2511c:	a0002326 	beq	r20,zero,251ac <_fwalk+0xbc>
   25120:	282b883a 	mov	r21,r5
   25124:	002f883a 	mov	r23,zero
   25128:	05800044 	movi	r22,1
   2512c:	04ffffc4 	movi	r19,-1
   25130:	a4400117 	ldw	r17,4(r20)
   25134:	a4800217 	ldw	r18,8(r20)
   25138:	8c7fffc4 	addi	r17,r17,-1
   2513c:	88000d16 	blt	r17,zero,25174 <_fwalk+0x84>
   25140:	94000304 	addi	r16,r18,12
   25144:	94800384 	addi	r18,r18,14
   25148:	8080000b 	ldhu	r2,0(r16)
   2514c:	8c7fffc4 	addi	r17,r17,-1
   25150:	813ffd04 	addi	r4,r16,-12
   25154:	b080042e 	bgeu	r22,r2,25168 <_fwalk+0x78>
   25158:	9080000f 	ldh	r2,0(r18)
   2515c:	14c00226 	beq	r2,r19,25168 <_fwalk+0x78>
   25160:	a83ee83a 	callr	r21
   25164:	b8aeb03a 	or	r23,r23,r2
   25168:	84001a04 	addi	r16,r16,104
   2516c:	94801a04 	addi	r18,r18,104
   25170:	8cfff51e 	bne	r17,r19,25148 <__alt_data_end+0xfffe5148>
   25174:	a5000017 	ldw	r20,0(r20)
   25178:	a03fed1e 	bne	r20,zero,25130 <__alt_data_end+0xfffe5130>
   2517c:	b805883a 	mov	r2,r23
   25180:	dfc00817 	ldw	ra,32(sp)
   25184:	ddc00717 	ldw	r23,28(sp)
   25188:	dd800617 	ldw	r22,24(sp)
   2518c:	dd400517 	ldw	r21,20(sp)
   25190:	dd000417 	ldw	r20,16(sp)
   25194:	dcc00317 	ldw	r19,12(sp)
   25198:	dc800217 	ldw	r18,8(sp)
   2519c:	dc400117 	ldw	r17,4(sp)
   251a0:	dc000017 	ldw	r16,0(sp)
   251a4:	dec00904 	addi	sp,sp,36
   251a8:	f800283a 	ret
   251ac:	002f883a 	mov	r23,zero
   251b0:	003ff206 	br	2517c <__alt_data_end+0xfffe517c>

000251b4 <_fwalk_reent>:
   251b4:	defff704 	addi	sp,sp,-36
   251b8:	dd000415 	stw	r20,16(sp)
   251bc:	dfc00815 	stw	ra,32(sp)
   251c0:	ddc00715 	stw	r23,28(sp)
   251c4:	dd800615 	stw	r22,24(sp)
   251c8:	dd400515 	stw	r21,20(sp)
   251cc:	dcc00315 	stw	r19,12(sp)
   251d0:	dc800215 	stw	r18,8(sp)
   251d4:	dc400115 	stw	r17,4(sp)
   251d8:	dc000015 	stw	r16,0(sp)
   251dc:	2500b804 	addi	r20,r4,736
   251e0:	a0002326 	beq	r20,zero,25270 <_fwalk_reent+0xbc>
   251e4:	282b883a 	mov	r21,r5
   251e8:	2027883a 	mov	r19,r4
   251ec:	002f883a 	mov	r23,zero
   251f0:	05800044 	movi	r22,1
   251f4:	04bfffc4 	movi	r18,-1
   251f8:	a4400117 	ldw	r17,4(r20)
   251fc:	a4000217 	ldw	r16,8(r20)
   25200:	8c7fffc4 	addi	r17,r17,-1
   25204:	88000c16 	blt	r17,zero,25238 <_fwalk_reent+0x84>
   25208:	84000304 	addi	r16,r16,12
   2520c:	8080000b 	ldhu	r2,0(r16)
   25210:	8c7fffc4 	addi	r17,r17,-1
   25214:	817ffd04 	addi	r5,r16,-12
   25218:	b080052e 	bgeu	r22,r2,25230 <_fwalk_reent+0x7c>
   2521c:	8080008f 	ldh	r2,2(r16)
   25220:	9809883a 	mov	r4,r19
   25224:	14800226 	beq	r2,r18,25230 <_fwalk_reent+0x7c>
   25228:	a83ee83a 	callr	r21
   2522c:	b8aeb03a 	or	r23,r23,r2
   25230:	84001a04 	addi	r16,r16,104
   25234:	8cbff51e 	bne	r17,r18,2520c <__alt_data_end+0xfffe520c>
   25238:	a5000017 	ldw	r20,0(r20)
   2523c:	a03fee1e 	bne	r20,zero,251f8 <__alt_data_end+0xfffe51f8>
   25240:	b805883a 	mov	r2,r23
   25244:	dfc00817 	ldw	ra,32(sp)
   25248:	ddc00717 	ldw	r23,28(sp)
   2524c:	dd800617 	ldw	r22,24(sp)
   25250:	dd400517 	ldw	r21,20(sp)
   25254:	dd000417 	ldw	r20,16(sp)
   25258:	dcc00317 	ldw	r19,12(sp)
   2525c:	dc800217 	ldw	r18,8(sp)
   25260:	dc400117 	ldw	r17,4(sp)
   25264:	dc000017 	ldw	r16,0(sp)
   25268:	dec00904 	addi	sp,sp,36
   2526c:	f800283a 	ret
   25270:	002f883a 	mov	r23,zero
   25274:	003ff206 	br	25240 <__alt_data_end+0xfffe5240>

00025278 <_setlocale_r>:
   25278:	30001b26 	beq	r6,zero,252e8 <_setlocale_r+0x70>
   2527c:	014000f4 	movhi	r5,3
   25280:	defffe04 	addi	sp,sp,-8
   25284:	297d2a04 	addi	r5,r5,-2904
   25288:	3009883a 	mov	r4,r6
   2528c:	dc000015 	stw	r16,0(sp)
   25290:	dfc00115 	stw	ra,4(sp)
   25294:	3021883a 	mov	r16,r6
   25298:	00279300 	call	27930 <strcmp>
   2529c:	1000061e 	bne	r2,zero,252b8 <_setlocale_r+0x40>
   252a0:	008000f4 	movhi	r2,3
   252a4:	10bd2904 	addi	r2,r2,-2908
   252a8:	dfc00117 	ldw	ra,4(sp)
   252ac:	dc000017 	ldw	r16,0(sp)
   252b0:	dec00204 	addi	sp,sp,8
   252b4:	f800283a 	ret
   252b8:	014000f4 	movhi	r5,3
   252bc:	297d2904 	addi	r5,r5,-2908
   252c0:	8009883a 	mov	r4,r16
   252c4:	00279300 	call	27930 <strcmp>
   252c8:	103ff526 	beq	r2,zero,252a0 <__alt_data_end+0xfffe52a0>
   252cc:	014000f4 	movhi	r5,3
   252d0:	297d1404 	addi	r5,r5,-2992
   252d4:	8009883a 	mov	r4,r16
   252d8:	00279300 	call	27930 <strcmp>
   252dc:	103ff026 	beq	r2,zero,252a0 <__alt_data_end+0xfffe52a0>
   252e0:	0005883a 	mov	r2,zero
   252e4:	003ff006 	br	252a8 <__alt_data_end+0xfffe52a8>
   252e8:	008000f4 	movhi	r2,3
   252ec:	10bd2904 	addi	r2,r2,-2908
   252f0:	f800283a 	ret

000252f4 <__locale_charset>:
   252f4:	008000f4 	movhi	r2,3
   252f8:	10bedc04 	addi	r2,r2,-1168
   252fc:	f800283a 	ret

00025300 <__locale_mb_cur_max>:
   25300:	008000f4 	movhi	r2,3
   25304:	10847804 	addi	r2,r2,4576
   25308:	10800017 	ldw	r2,0(r2)
   2530c:	f800283a 	ret

00025310 <__locale_msgcharset>:
   25310:	008000f4 	movhi	r2,3
   25314:	10bed404 	addi	r2,r2,-1200
   25318:	f800283a 	ret

0002531c <__locale_cjk_lang>:
   2531c:	0005883a 	mov	r2,zero
   25320:	f800283a 	ret

00025324 <_localeconv_r>:
   25324:	008000f4 	movhi	r2,3
   25328:	10bee404 	addi	r2,r2,-1136
   2532c:	f800283a 	ret

00025330 <setlocale>:
   25330:	008000f4 	movhi	r2,3
   25334:	10847704 	addi	r2,r2,4572
   25338:	280d883a 	mov	r6,r5
   2533c:	200b883a 	mov	r5,r4
   25340:	11000017 	ldw	r4,0(r2)
   25344:	00252781 	jmpi	25278 <_setlocale_r>

00025348 <localeconv>:
   25348:	008000f4 	movhi	r2,3
   2534c:	10bee404 	addi	r2,r2,-1136
   25350:	f800283a 	ret

00025354 <__smakebuf_r>:
   25354:	2880030b 	ldhu	r2,12(r5)
   25358:	10c0008c 	andi	r3,r2,2
   2535c:	1800411e 	bne	r3,zero,25464 <__smakebuf_r+0x110>
   25360:	deffec04 	addi	sp,sp,-80
   25364:	dc000f15 	stw	r16,60(sp)
   25368:	2821883a 	mov	r16,r5
   2536c:	2940038f 	ldh	r5,14(r5)
   25370:	dc401015 	stw	r17,64(sp)
   25374:	dfc01315 	stw	ra,76(sp)
   25378:	dcc01215 	stw	r19,72(sp)
   2537c:	dc801115 	stw	r18,68(sp)
   25380:	2023883a 	mov	r17,r4
   25384:	28001c16 	blt	r5,zero,253f8 <__smakebuf_r+0xa4>
   25388:	d80d883a 	mov	r6,sp
   2538c:	00294d80 	call	294d8 <_fstat_r>
   25390:	10001816 	blt	r2,zero,253f4 <__smakebuf_r+0xa0>
   25394:	d8800117 	ldw	r2,4(sp)
   25398:	00e00014 	movui	r3,32768
   2539c:	10bc000c 	andi	r2,r2,61440
   253a0:	14c80020 	cmpeqi	r19,r2,8192
   253a4:	10c03726 	beq	r2,r3,25484 <__smakebuf_r+0x130>
   253a8:	80c0030b 	ldhu	r3,12(r16)
   253ac:	18c20014 	ori	r3,r3,2048
   253b0:	80c0030d 	sth	r3,12(r16)
   253b4:	00c80004 	movi	r3,8192
   253b8:	10c0521e 	bne	r2,r3,25504 <__smakebuf_r+0x1b0>
   253bc:	8140038f 	ldh	r5,14(r16)
   253c0:	8809883a 	mov	r4,r17
   253c4:	00295340 	call	29534 <_isatty_r>
   253c8:	10004c26 	beq	r2,zero,254fc <__smakebuf_r+0x1a8>
   253cc:	8080030b 	ldhu	r2,12(r16)
   253d0:	80c010c4 	addi	r3,r16,67
   253d4:	80c00015 	stw	r3,0(r16)
   253d8:	10800054 	ori	r2,r2,1
   253dc:	8080030d 	sth	r2,12(r16)
   253e0:	00800044 	movi	r2,1
   253e4:	80c00415 	stw	r3,16(r16)
   253e8:	80800515 	stw	r2,20(r16)
   253ec:	04810004 	movi	r18,1024
   253f0:	00000706 	br	25410 <__smakebuf_r+0xbc>
   253f4:	8080030b 	ldhu	r2,12(r16)
   253f8:	10c0200c 	andi	r3,r2,128
   253fc:	18001f1e 	bne	r3,zero,2547c <__smakebuf_r+0x128>
   25400:	04810004 	movi	r18,1024
   25404:	10820014 	ori	r2,r2,2048
   25408:	8080030d 	sth	r2,12(r16)
   2540c:	0027883a 	mov	r19,zero
   25410:	900b883a 	mov	r5,r18
   25414:	8809883a 	mov	r4,r17
   25418:	00255100 	call	25510 <_malloc_r>
   2541c:	10002c26 	beq	r2,zero,254d0 <__smakebuf_r+0x17c>
   25420:	80c0030b 	ldhu	r3,12(r16)
   25424:	010000b4 	movhi	r4,2
   25428:	21111a04 	addi	r4,r4,17512
   2542c:	89000f15 	stw	r4,60(r17)
   25430:	18c02014 	ori	r3,r3,128
   25434:	80c0030d 	sth	r3,12(r16)
   25438:	80800015 	stw	r2,0(r16)
   2543c:	80800415 	stw	r2,16(r16)
   25440:	84800515 	stw	r18,20(r16)
   25444:	98001a1e 	bne	r19,zero,254b0 <__smakebuf_r+0x15c>
   25448:	dfc01317 	ldw	ra,76(sp)
   2544c:	dcc01217 	ldw	r19,72(sp)
   25450:	dc801117 	ldw	r18,68(sp)
   25454:	dc401017 	ldw	r17,64(sp)
   25458:	dc000f17 	ldw	r16,60(sp)
   2545c:	dec01404 	addi	sp,sp,80
   25460:	f800283a 	ret
   25464:	288010c4 	addi	r2,r5,67
   25468:	28800015 	stw	r2,0(r5)
   2546c:	28800415 	stw	r2,16(r5)
   25470:	00800044 	movi	r2,1
   25474:	28800515 	stw	r2,20(r5)
   25478:	f800283a 	ret
   2547c:	04801004 	movi	r18,64
   25480:	003fe006 	br	25404 <__alt_data_end+0xfffe5404>
   25484:	81000a17 	ldw	r4,40(r16)
   25488:	00c000b4 	movhi	r3,2
   2548c:	18de3304 	addi	r3,r3,30924
   25490:	20ffc51e 	bne	r4,r3,253a8 <__alt_data_end+0xfffe53a8>
   25494:	8080030b 	ldhu	r2,12(r16)
   25498:	04810004 	movi	r18,1024
   2549c:	84801315 	stw	r18,76(r16)
   254a0:	1484b03a 	or	r2,r2,r18
   254a4:	8080030d 	sth	r2,12(r16)
   254a8:	0027883a 	mov	r19,zero
   254ac:	003fd806 	br	25410 <__alt_data_end+0xfffe5410>
   254b0:	8140038f 	ldh	r5,14(r16)
   254b4:	8809883a 	mov	r4,r17
   254b8:	00295340 	call	29534 <_isatty_r>
   254bc:	103fe226 	beq	r2,zero,25448 <__alt_data_end+0xfffe5448>
   254c0:	8080030b 	ldhu	r2,12(r16)
   254c4:	10800054 	ori	r2,r2,1
   254c8:	8080030d 	sth	r2,12(r16)
   254cc:	003fde06 	br	25448 <__alt_data_end+0xfffe5448>
   254d0:	8080030b 	ldhu	r2,12(r16)
   254d4:	10c0800c 	andi	r3,r2,512
   254d8:	183fdb1e 	bne	r3,zero,25448 <__alt_data_end+0xfffe5448>
   254dc:	10800094 	ori	r2,r2,2
   254e0:	80c010c4 	addi	r3,r16,67
   254e4:	8080030d 	sth	r2,12(r16)
   254e8:	00800044 	movi	r2,1
   254ec:	80c00015 	stw	r3,0(r16)
   254f0:	80c00415 	stw	r3,16(r16)
   254f4:	80800515 	stw	r2,20(r16)
   254f8:	003fd306 	br	25448 <__alt_data_end+0xfffe5448>
   254fc:	04810004 	movi	r18,1024
   25500:	003fc306 	br	25410 <__alt_data_end+0xfffe5410>
   25504:	0027883a 	mov	r19,zero
   25508:	04810004 	movi	r18,1024
   2550c:	003fc006 	br	25410 <__alt_data_end+0xfffe5410>

00025510 <_malloc_r>:
   25510:	defff504 	addi	sp,sp,-44
   25514:	dc800315 	stw	r18,12(sp)
   25518:	dfc00a15 	stw	ra,40(sp)
   2551c:	df000915 	stw	fp,36(sp)
   25520:	ddc00815 	stw	r23,32(sp)
   25524:	dd800715 	stw	r22,28(sp)
   25528:	dd400615 	stw	r21,24(sp)
   2552c:	dd000515 	stw	r20,20(sp)
   25530:	dcc00415 	stw	r19,16(sp)
   25534:	dc400215 	stw	r17,8(sp)
   25538:	dc000115 	stw	r16,4(sp)
   2553c:	288002c4 	addi	r2,r5,11
   25540:	00c00584 	movi	r3,22
   25544:	2025883a 	mov	r18,r4
   25548:	18807f2e 	bgeu	r3,r2,25748 <_malloc_r+0x238>
   2554c:	047ffe04 	movi	r17,-8
   25550:	1462703a 	and	r17,r2,r17
   25554:	8800a316 	blt	r17,zero,257e4 <_malloc_r+0x2d4>
   25558:	8940a236 	bltu	r17,r5,257e4 <_malloc_r+0x2d4>
   2555c:	002d2200 	call	2d220 <__malloc_lock>
   25560:	00807dc4 	movi	r2,503
   25564:	1441e92e 	bgeu	r2,r17,25d0c <_malloc_r+0x7fc>
   25568:	8804d27a 	srli	r2,r17,9
   2556c:	1000a126 	beq	r2,zero,257f4 <_malloc_r+0x2e4>
   25570:	00c00104 	movi	r3,4
   25574:	18811e36 	bltu	r3,r2,259f0 <_malloc_r+0x4e0>
   25578:	8804d1ba 	srli	r2,r17,6
   2557c:	12000e44 	addi	r8,r2,57
   25580:	11c00e04 	addi	r7,r2,56
   25584:	4209883a 	add	r4,r8,r8
   25588:	04c000f4 	movhi	r19,3
   2558c:	2109883a 	add	r4,r4,r4
   25590:	9cfef204 	addi	r19,r19,-1080
   25594:	2109883a 	add	r4,r4,r4
   25598:	9909883a 	add	r4,r19,r4
   2559c:	24000117 	ldw	r16,4(r4)
   255a0:	213ffe04 	addi	r4,r4,-8
   255a4:	24009726 	beq	r4,r16,25804 <_malloc_r+0x2f4>
   255a8:	80800117 	ldw	r2,4(r16)
   255ac:	01bfff04 	movi	r6,-4
   255b0:	014003c4 	movi	r5,15
   255b4:	1184703a 	and	r2,r2,r6
   255b8:	1447c83a 	sub	r3,r2,r17
   255bc:	28c00716 	blt	r5,r3,255dc <_malloc_r+0xcc>
   255c0:	1800920e 	bge	r3,zero,2580c <_malloc_r+0x2fc>
   255c4:	84000317 	ldw	r16,12(r16)
   255c8:	24008e26 	beq	r4,r16,25804 <_malloc_r+0x2f4>
   255cc:	80800117 	ldw	r2,4(r16)
   255d0:	1184703a 	and	r2,r2,r6
   255d4:	1447c83a 	sub	r3,r2,r17
   255d8:	28fff90e 	bge	r5,r3,255c0 <__alt_data_end+0xfffe55c0>
   255dc:	3809883a 	mov	r4,r7
   255e0:	018000f4 	movhi	r6,3
   255e4:	9c000417 	ldw	r16,16(r19)
   255e8:	31bef204 	addi	r6,r6,-1080
   255ec:	32000204 	addi	r8,r6,8
   255f0:	82013426 	beq	r16,r8,25ac4 <_malloc_r+0x5b4>
   255f4:	80c00117 	ldw	r3,4(r16)
   255f8:	00bfff04 	movi	r2,-4
   255fc:	188e703a 	and	r7,r3,r2
   25600:	3c45c83a 	sub	r2,r7,r17
   25604:	00c003c4 	movi	r3,15
   25608:	18811f16 	blt	r3,r2,25a88 <_malloc_r+0x578>
   2560c:	32000515 	stw	r8,20(r6)
   25610:	32000415 	stw	r8,16(r6)
   25614:	10007f0e 	bge	r2,zero,25814 <_malloc_r+0x304>
   25618:	00807fc4 	movi	r2,511
   2561c:	11c0fd36 	bltu	r2,r7,25a14 <_malloc_r+0x504>
   25620:	3806d0fa 	srli	r3,r7,3
   25624:	01c00044 	movi	r7,1
   25628:	30800117 	ldw	r2,4(r6)
   2562c:	19400044 	addi	r5,r3,1
   25630:	294b883a 	add	r5,r5,r5
   25634:	1807d0ba 	srai	r3,r3,2
   25638:	294b883a 	add	r5,r5,r5
   2563c:	294b883a 	add	r5,r5,r5
   25640:	298b883a 	add	r5,r5,r6
   25644:	38c6983a 	sll	r3,r7,r3
   25648:	29c00017 	ldw	r7,0(r5)
   2564c:	2a7ffe04 	addi	r9,r5,-8
   25650:	1886b03a 	or	r3,r3,r2
   25654:	82400315 	stw	r9,12(r16)
   25658:	81c00215 	stw	r7,8(r16)
   2565c:	30c00115 	stw	r3,4(r6)
   25660:	2c000015 	stw	r16,0(r5)
   25664:	3c000315 	stw	r16,12(r7)
   25668:	2005d0ba 	srai	r2,r4,2
   2566c:	01400044 	movi	r5,1
   25670:	288a983a 	sll	r5,r5,r2
   25674:	19406f36 	bltu	r3,r5,25834 <_malloc_r+0x324>
   25678:	28c4703a 	and	r2,r5,r3
   2567c:	10000a1e 	bne	r2,zero,256a8 <_malloc_r+0x198>
   25680:	00bfff04 	movi	r2,-4
   25684:	294b883a 	add	r5,r5,r5
   25688:	2088703a 	and	r4,r4,r2
   2568c:	28c4703a 	and	r2,r5,r3
   25690:	21000104 	addi	r4,r4,4
   25694:	1000041e 	bne	r2,zero,256a8 <_malloc_r+0x198>
   25698:	294b883a 	add	r5,r5,r5
   2569c:	28c4703a 	and	r2,r5,r3
   256a0:	21000104 	addi	r4,r4,4
   256a4:	103ffc26 	beq	r2,zero,25698 <__alt_data_end+0xfffe5698>
   256a8:	02bfff04 	movi	r10,-4
   256ac:	024003c4 	movi	r9,15
   256b0:	21800044 	addi	r6,r4,1
   256b4:	318d883a 	add	r6,r6,r6
   256b8:	318d883a 	add	r6,r6,r6
   256bc:	318d883a 	add	r6,r6,r6
   256c0:	998d883a 	add	r6,r19,r6
   256c4:	333ffe04 	addi	r12,r6,-8
   256c8:	2017883a 	mov	r11,r4
   256cc:	31800104 	addi	r6,r6,4
   256d0:	34000017 	ldw	r16,0(r6)
   256d4:	31fffd04 	addi	r7,r6,-12
   256d8:	81c0041e 	bne	r16,r7,256ec <_malloc_r+0x1dc>
   256dc:	0000fb06 	br	25acc <_malloc_r+0x5bc>
   256e0:	1801030e 	bge	r3,zero,25af0 <_malloc_r+0x5e0>
   256e4:	84000317 	ldw	r16,12(r16)
   256e8:	81c0f826 	beq	r16,r7,25acc <_malloc_r+0x5bc>
   256ec:	80800117 	ldw	r2,4(r16)
   256f0:	1284703a 	and	r2,r2,r10
   256f4:	1447c83a 	sub	r3,r2,r17
   256f8:	48fff90e 	bge	r9,r3,256e0 <__alt_data_end+0xfffe56e0>
   256fc:	80800317 	ldw	r2,12(r16)
   25700:	81000217 	ldw	r4,8(r16)
   25704:	89400054 	ori	r5,r17,1
   25708:	81400115 	stw	r5,4(r16)
   2570c:	20800315 	stw	r2,12(r4)
   25710:	11000215 	stw	r4,8(r2)
   25714:	8463883a 	add	r17,r16,r17
   25718:	9c400515 	stw	r17,20(r19)
   2571c:	9c400415 	stw	r17,16(r19)
   25720:	18800054 	ori	r2,r3,1
   25724:	88800115 	stw	r2,4(r17)
   25728:	8a000315 	stw	r8,12(r17)
   2572c:	8a000215 	stw	r8,8(r17)
   25730:	88e3883a 	add	r17,r17,r3
   25734:	88c00015 	stw	r3,0(r17)
   25738:	9009883a 	mov	r4,r18
   2573c:	002d2440 	call	2d244 <__malloc_unlock>
   25740:	80800204 	addi	r2,r16,8
   25744:	00001b06 	br	257b4 <_malloc_r+0x2a4>
   25748:	04400404 	movi	r17,16
   2574c:	89402536 	bltu	r17,r5,257e4 <_malloc_r+0x2d4>
   25750:	002d2200 	call	2d220 <__malloc_lock>
   25754:	00800184 	movi	r2,6
   25758:	01000084 	movi	r4,2
   2575c:	04c000f4 	movhi	r19,3
   25760:	1085883a 	add	r2,r2,r2
   25764:	9cfef204 	addi	r19,r19,-1080
   25768:	1085883a 	add	r2,r2,r2
   2576c:	9885883a 	add	r2,r19,r2
   25770:	14000117 	ldw	r16,4(r2)
   25774:	10fffe04 	addi	r3,r2,-8
   25778:	80c0d926 	beq	r16,r3,25ae0 <_malloc_r+0x5d0>
   2577c:	80c00117 	ldw	r3,4(r16)
   25780:	81000317 	ldw	r4,12(r16)
   25784:	00bfff04 	movi	r2,-4
   25788:	1884703a 	and	r2,r3,r2
   2578c:	81400217 	ldw	r5,8(r16)
   25790:	8085883a 	add	r2,r16,r2
   25794:	10c00117 	ldw	r3,4(r2)
   25798:	29000315 	stw	r4,12(r5)
   2579c:	21400215 	stw	r5,8(r4)
   257a0:	18c00054 	ori	r3,r3,1
   257a4:	10c00115 	stw	r3,4(r2)
   257a8:	9009883a 	mov	r4,r18
   257ac:	002d2440 	call	2d244 <__malloc_unlock>
   257b0:	80800204 	addi	r2,r16,8
   257b4:	dfc00a17 	ldw	ra,40(sp)
   257b8:	df000917 	ldw	fp,36(sp)
   257bc:	ddc00817 	ldw	r23,32(sp)
   257c0:	dd800717 	ldw	r22,28(sp)
   257c4:	dd400617 	ldw	r21,24(sp)
   257c8:	dd000517 	ldw	r20,20(sp)
   257cc:	dcc00417 	ldw	r19,16(sp)
   257d0:	dc800317 	ldw	r18,12(sp)
   257d4:	dc400217 	ldw	r17,8(sp)
   257d8:	dc000117 	ldw	r16,4(sp)
   257dc:	dec00b04 	addi	sp,sp,44
   257e0:	f800283a 	ret
   257e4:	00800304 	movi	r2,12
   257e8:	90800015 	stw	r2,0(r18)
   257ec:	0005883a 	mov	r2,zero
   257f0:	003ff006 	br	257b4 <__alt_data_end+0xfffe57b4>
   257f4:	01002004 	movi	r4,128
   257f8:	02001004 	movi	r8,64
   257fc:	01c00fc4 	movi	r7,63
   25800:	003f6106 	br	25588 <__alt_data_end+0xfffe5588>
   25804:	4009883a 	mov	r4,r8
   25808:	003f7506 	br	255e0 <__alt_data_end+0xfffe55e0>
   2580c:	81000317 	ldw	r4,12(r16)
   25810:	003fde06 	br	2578c <__alt_data_end+0xfffe578c>
   25814:	81c5883a 	add	r2,r16,r7
   25818:	11400117 	ldw	r5,4(r2)
   2581c:	9009883a 	mov	r4,r18
   25820:	29400054 	ori	r5,r5,1
   25824:	11400115 	stw	r5,4(r2)
   25828:	002d2440 	call	2d244 <__malloc_unlock>
   2582c:	80800204 	addi	r2,r16,8
   25830:	003fe006 	br	257b4 <__alt_data_end+0xfffe57b4>
   25834:	9c000217 	ldw	r16,8(r19)
   25838:	00bfff04 	movi	r2,-4
   2583c:	85800117 	ldw	r22,4(r16)
   25840:	b0ac703a 	and	r22,r22,r2
   25844:	b4400336 	bltu	r22,r17,25854 <_malloc_r+0x344>
   25848:	b445c83a 	sub	r2,r22,r17
   2584c:	00c003c4 	movi	r3,15
   25850:	18805d16 	blt	r3,r2,259c8 <_malloc_r+0x4b8>
   25854:	05c000f4 	movhi	r23,3
   25858:	008000f4 	movhi	r2,3
   2585c:	108b4604 	addi	r2,r2,11544
   25860:	bdc47904 	addi	r23,r23,4580
   25864:	15400017 	ldw	r21,0(r2)
   25868:	b8c00017 	ldw	r3,0(r23)
   2586c:	00bfffc4 	movi	r2,-1
   25870:	858d883a 	add	r6,r16,r22
   25874:	8d6b883a 	add	r21,r17,r21
   25878:	1880ea26 	beq	r3,r2,25c24 <_malloc_r+0x714>
   2587c:	ad4403c4 	addi	r21,r21,4111
   25880:	00bc0004 	movi	r2,-4096
   25884:	a8aa703a 	and	r21,r21,r2
   25888:	a80b883a 	mov	r5,r21
   2588c:	9009883a 	mov	r4,r18
   25890:	d9800015 	stw	r6,0(sp)
   25894:	00277a00 	call	277a0 <_sbrk_r>
   25898:	1029883a 	mov	r20,r2
   2589c:	00bfffc4 	movi	r2,-1
   258a0:	d9800017 	ldw	r6,0(sp)
   258a4:	a080e826 	beq	r20,r2,25c48 <_malloc_r+0x738>
   258a8:	a180a636 	bltu	r20,r6,25b44 <_malloc_r+0x634>
   258ac:	070000f4 	movhi	fp,3
   258b0:	e70b4f04 	addi	fp,fp,11580
   258b4:	e0800017 	ldw	r2,0(fp)
   258b8:	a887883a 	add	r3,r21,r2
   258bc:	e0c00015 	stw	r3,0(fp)
   258c0:	3500e626 	beq	r6,r20,25c5c <_malloc_r+0x74c>
   258c4:	b9000017 	ldw	r4,0(r23)
   258c8:	00bfffc4 	movi	r2,-1
   258cc:	2080ee26 	beq	r4,r2,25c88 <_malloc_r+0x778>
   258d0:	a185c83a 	sub	r2,r20,r6
   258d4:	10c5883a 	add	r2,r2,r3
   258d8:	e0800015 	stw	r2,0(fp)
   258dc:	a0c001cc 	andi	r3,r20,7
   258e0:	1800bc26 	beq	r3,zero,25bd4 <_malloc_r+0x6c4>
   258e4:	a0e9c83a 	sub	r20,r20,r3
   258e8:	00840204 	movi	r2,4104
   258ec:	a5000204 	addi	r20,r20,8
   258f0:	10c7c83a 	sub	r3,r2,r3
   258f4:	a545883a 	add	r2,r20,r21
   258f8:	1083ffcc 	andi	r2,r2,4095
   258fc:	18abc83a 	sub	r21,r3,r2
   25900:	a80b883a 	mov	r5,r21
   25904:	9009883a 	mov	r4,r18
   25908:	00277a00 	call	277a0 <_sbrk_r>
   2590c:	00ffffc4 	movi	r3,-1
   25910:	10c0e126 	beq	r2,r3,25c98 <_malloc_r+0x788>
   25914:	1505c83a 	sub	r2,r2,r20
   25918:	1545883a 	add	r2,r2,r21
   2591c:	10800054 	ori	r2,r2,1
   25920:	e0c00017 	ldw	r3,0(fp)
   25924:	9d000215 	stw	r20,8(r19)
   25928:	a0800115 	stw	r2,4(r20)
   2592c:	a8c7883a 	add	r3,r21,r3
   25930:	e0c00015 	stw	r3,0(fp)
   25934:	84c00e26 	beq	r16,r19,25970 <_malloc_r+0x460>
   25938:	018003c4 	movi	r6,15
   2593c:	3580a72e 	bgeu	r6,r22,25bdc <_malloc_r+0x6cc>
   25940:	81400117 	ldw	r5,4(r16)
   25944:	013ffe04 	movi	r4,-8
   25948:	b0bffd04 	addi	r2,r22,-12
   2594c:	1104703a 	and	r2,r2,r4
   25950:	2900004c 	andi	r4,r5,1
   25954:	2088b03a 	or	r4,r4,r2
   25958:	81000115 	stw	r4,4(r16)
   2595c:	01400144 	movi	r5,5
   25960:	8089883a 	add	r4,r16,r2
   25964:	21400115 	stw	r5,4(r4)
   25968:	21400215 	stw	r5,8(r4)
   2596c:	3080cd36 	bltu	r6,r2,25ca4 <_malloc_r+0x794>
   25970:	008000f4 	movhi	r2,3
   25974:	108b4504 	addi	r2,r2,11540
   25978:	11000017 	ldw	r4,0(r2)
   2597c:	20c0012e 	bgeu	r4,r3,25984 <_malloc_r+0x474>
   25980:	10c00015 	stw	r3,0(r2)
   25984:	008000f4 	movhi	r2,3
   25988:	108b4404 	addi	r2,r2,11536
   2598c:	11000017 	ldw	r4,0(r2)
   25990:	9c000217 	ldw	r16,8(r19)
   25994:	20c0012e 	bgeu	r4,r3,2599c <_malloc_r+0x48c>
   25998:	10c00015 	stw	r3,0(r2)
   2599c:	80c00117 	ldw	r3,4(r16)
   259a0:	00bfff04 	movi	r2,-4
   259a4:	1886703a 	and	r3,r3,r2
   259a8:	1c45c83a 	sub	r2,r3,r17
   259ac:	1c400236 	bltu	r3,r17,259b8 <_malloc_r+0x4a8>
   259b0:	00c003c4 	movi	r3,15
   259b4:	18800416 	blt	r3,r2,259c8 <_malloc_r+0x4b8>
   259b8:	9009883a 	mov	r4,r18
   259bc:	002d2440 	call	2d244 <__malloc_unlock>
   259c0:	0005883a 	mov	r2,zero
   259c4:	003f7b06 	br	257b4 <__alt_data_end+0xfffe57b4>
   259c8:	88c00054 	ori	r3,r17,1
   259cc:	80c00115 	stw	r3,4(r16)
   259d0:	8463883a 	add	r17,r16,r17
   259d4:	10800054 	ori	r2,r2,1
   259d8:	9c400215 	stw	r17,8(r19)
   259dc:	88800115 	stw	r2,4(r17)
   259e0:	9009883a 	mov	r4,r18
   259e4:	002d2440 	call	2d244 <__malloc_unlock>
   259e8:	80800204 	addi	r2,r16,8
   259ec:	003f7106 	br	257b4 <__alt_data_end+0xfffe57b4>
   259f0:	00c00504 	movi	r3,20
   259f4:	18804a2e 	bgeu	r3,r2,25b20 <_malloc_r+0x610>
   259f8:	00c01504 	movi	r3,84
   259fc:	18806e36 	bltu	r3,r2,25bb8 <_malloc_r+0x6a8>
   25a00:	8804d33a 	srli	r2,r17,12
   25a04:	12001bc4 	addi	r8,r2,111
   25a08:	11c01b84 	addi	r7,r2,110
   25a0c:	4209883a 	add	r4,r8,r8
   25a10:	003edd06 	br	25588 <__alt_data_end+0xfffe5588>
   25a14:	3804d27a 	srli	r2,r7,9
   25a18:	00c00104 	movi	r3,4
   25a1c:	1880442e 	bgeu	r3,r2,25b30 <_malloc_r+0x620>
   25a20:	00c00504 	movi	r3,20
   25a24:	18808136 	bltu	r3,r2,25c2c <_malloc_r+0x71c>
   25a28:	11401704 	addi	r5,r2,92
   25a2c:	10c016c4 	addi	r3,r2,91
   25a30:	294b883a 	add	r5,r5,r5
   25a34:	294b883a 	add	r5,r5,r5
   25a38:	294b883a 	add	r5,r5,r5
   25a3c:	994b883a 	add	r5,r19,r5
   25a40:	28800017 	ldw	r2,0(r5)
   25a44:	018000f4 	movhi	r6,3
   25a48:	297ffe04 	addi	r5,r5,-8
   25a4c:	31bef204 	addi	r6,r6,-1080
   25a50:	28806526 	beq	r5,r2,25be8 <_malloc_r+0x6d8>
   25a54:	01bfff04 	movi	r6,-4
   25a58:	10c00117 	ldw	r3,4(r2)
   25a5c:	1986703a 	and	r3,r3,r6
   25a60:	38c0022e 	bgeu	r7,r3,25a6c <_malloc_r+0x55c>
   25a64:	10800217 	ldw	r2,8(r2)
   25a68:	28bffb1e 	bne	r5,r2,25a58 <__alt_data_end+0xfffe5a58>
   25a6c:	11400317 	ldw	r5,12(r2)
   25a70:	98c00117 	ldw	r3,4(r19)
   25a74:	81400315 	stw	r5,12(r16)
   25a78:	80800215 	stw	r2,8(r16)
   25a7c:	2c000215 	stw	r16,8(r5)
   25a80:	14000315 	stw	r16,12(r2)
   25a84:	003ef806 	br	25668 <__alt_data_end+0xfffe5668>
   25a88:	88c00054 	ori	r3,r17,1
   25a8c:	80c00115 	stw	r3,4(r16)
   25a90:	8463883a 	add	r17,r16,r17
   25a94:	34400515 	stw	r17,20(r6)
   25a98:	34400415 	stw	r17,16(r6)
   25a9c:	10c00054 	ori	r3,r2,1
   25aa0:	8a000315 	stw	r8,12(r17)
   25aa4:	8a000215 	stw	r8,8(r17)
   25aa8:	88c00115 	stw	r3,4(r17)
   25aac:	88a3883a 	add	r17,r17,r2
   25ab0:	88800015 	stw	r2,0(r17)
   25ab4:	9009883a 	mov	r4,r18
   25ab8:	002d2440 	call	2d244 <__malloc_unlock>
   25abc:	80800204 	addi	r2,r16,8
   25ac0:	003f3c06 	br	257b4 <__alt_data_end+0xfffe57b4>
   25ac4:	30c00117 	ldw	r3,4(r6)
   25ac8:	003ee706 	br	25668 <__alt_data_end+0xfffe5668>
   25acc:	5ac00044 	addi	r11,r11,1
   25ad0:	588000cc 	andi	r2,r11,3
   25ad4:	31800204 	addi	r6,r6,8
   25ad8:	103efd1e 	bne	r2,zero,256d0 <__alt_data_end+0xfffe56d0>
   25adc:	00002406 	br	25b70 <_malloc_r+0x660>
   25ae0:	14000317 	ldw	r16,12(r2)
   25ae4:	143f251e 	bne	r2,r16,2577c <__alt_data_end+0xfffe577c>
   25ae8:	21000084 	addi	r4,r4,2
   25aec:	003ebc06 	br	255e0 <__alt_data_end+0xfffe55e0>
   25af0:	8085883a 	add	r2,r16,r2
   25af4:	10c00117 	ldw	r3,4(r2)
   25af8:	81000317 	ldw	r4,12(r16)
   25afc:	81400217 	ldw	r5,8(r16)
   25b00:	18c00054 	ori	r3,r3,1
   25b04:	10c00115 	stw	r3,4(r2)
   25b08:	29000315 	stw	r4,12(r5)
   25b0c:	21400215 	stw	r5,8(r4)
   25b10:	9009883a 	mov	r4,r18
   25b14:	002d2440 	call	2d244 <__malloc_unlock>
   25b18:	80800204 	addi	r2,r16,8
   25b1c:	003f2506 	br	257b4 <__alt_data_end+0xfffe57b4>
   25b20:	12001704 	addi	r8,r2,92
   25b24:	11c016c4 	addi	r7,r2,91
   25b28:	4209883a 	add	r4,r8,r8
   25b2c:	003e9606 	br	25588 <__alt_data_end+0xfffe5588>
   25b30:	3804d1ba 	srli	r2,r7,6
   25b34:	11400e44 	addi	r5,r2,57
   25b38:	10c00e04 	addi	r3,r2,56
   25b3c:	294b883a 	add	r5,r5,r5
   25b40:	003fbc06 	br	25a34 <__alt_data_end+0xfffe5a34>
   25b44:	84ff5926 	beq	r16,r19,258ac <__alt_data_end+0xfffe58ac>
   25b48:	008000f4 	movhi	r2,3
   25b4c:	10bef204 	addi	r2,r2,-1080
   25b50:	14000217 	ldw	r16,8(r2)
   25b54:	00bfff04 	movi	r2,-4
   25b58:	80c00117 	ldw	r3,4(r16)
   25b5c:	1886703a 	and	r3,r3,r2
   25b60:	003f9106 	br	259a8 <__alt_data_end+0xfffe59a8>
   25b64:	60800217 	ldw	r2,8(r12)
   25b68:	213fffc4 	addi	r4,r4,-1
   25b6c:	1300651e 	bne	r2,r12,25d04 <_malloc_r+0x7f4>
   25b70:	208000cc 	andi	r2,r4,3
   25b74:	633ffe04 	addi	r12,r12,-8
   25b78:	103ffa1e 	bne	r2,zero,25b64 <__alt_data_end+0xfffe5b64>
   25b7c:	98800117 	ldw	r2,4(r19)
   25b80:	0146303a 	nor	r3,zero,r5
   25b84:	1884703a 	and	r2,r3,r2
   25b88:	98800115 	stw	r2,4(r19)
   25b8c:	294b883a 	add	r5,r5,r5
   25b90:	117f2836 	bltu	r2,r5,25834 <__alt_data_end+0xfffe5834>
   25b94:	283f2726 	beq	r5,zero,25834 <__alt_data_end+0xfffe5834>
   25b98:	2886703a 	and	r3,r5,r2
   25b9c:	5809883a 	mov	r4,r11
   25ba0:	183ec31e 	bne	r3,zero,256b0 <__alt_data_end+0xfffe56b0>
   25ba4:	294b883a 	add	r5,r5,r5
   25ba8:	2886703a 	and	r3,r5,r2
   25bac:	21000104 	addi	r4,r4,4
   25bb0:	183ffc26 	beq	r3,zero,25ba4 <__alt_data_end+0xfffe5ba4>
   25bb4:	003ebe06 	br	256b0 <__alt_data_end+0xfffe56b0>
   25bb8:	00c05504 	movi	r3,340
   25bbc:	18801236 	bltu	r3,r2,25c08 <_malloc_r+0x6f8>
   25bc0:	8804d3fa 	srli	r2,r17,15
   25bc4:	12001e04 	addi	r8,r2,120
   25bc8:	11c01dc4 	addi	r7,r2,119
   25bcc:	4209883a 	add	r4,r8,r8
   25bd0:	003e6d06 	br	25588 <__alt_data_end+0xfffe5588>
   25bd4:	00c40004 	movi	r3,4096
   25bd8:	003f4606 	br	258f4 <__alt_data_end+0xfffe58f4>
   25bdc:	00800044 	movi	r2,1
   25be0:	a0800115 	stw	r2,4(r20)
   25be4:	003f7406 	br	259b8 <__alt_data_end+0xfffe59b8>
   25be8:	1805d0ba 	srai	r2,r3,2
   25bec:	01c00044 	movi	r7,1
   25bf0:	30c00117 	ldw	r3,4(r6)
   25bf4:	388e983a 	sll	r7,r7,r2
   25bf8:	2805883a 	mov	r2,r5
   25bfc:	38c6b03a 	or	r3,r7,r3
   25c00:	30c00115 	stw	r3,4(r6)
   25c04:	003f9b06 	br	25a74 <__alt_data_end+0xfffe5a74>
   25c08:	00c15504 	movi	r3,1364
   25c0c:	18801a36 	bltu	r3,r2,25c78 <_malloc_r+0x768>
   25c10:	8804d4ba 	srli	r2,r17,18
   25c14:	12001f44 	addi	r8,r2,125
   25c18:	11c01f04 	addi	r7,r2,124
   25c1c:	4209883a 	add	r4,r8,r8
   25c20:	003e5906 	br	25588 <__alt_data_end+0xfffe5588>
   25c24:	ad400404 	addi	r21,r21,16
   25c28:	003f1706 	br	25888 <__alt_data_end+0xfffe5888>
   25c2c:	00c01504 	movi	r3,84
   25c30:	18802336 	bltu	r3,r2,25cc0 <_malloc_r+0x7b0>
   25c34:	3804d33a 	srli	r2,r7,12
   25c38:	11401bc4 	addi	r5,r2,111
   25c3c:	10c01b84 	addi	r3,r2,110
   25c40:	294b883a 	add	r5,r5,r5
   25c44:	003f7b06 	br	25a34 <__alt_data_end+0xfffe5a34>
   25c48:	9c000217 	ldw	r16,8(r19)
   25c4c:	00bfff04 	movi	r2,-4
   25c50:	80c00117 	ldw	r3,4(r16)
   25c54:	1886703a 	and	r3,r3,r2
   25c58:	003f5306 	br	259a8 <__alt_data_end+0xfffe59a8>
   25c5c:	3083ffcc 	andi	r2,r6,4095
   25c60:	103f181e 	bne	r2,zero,258c4 <__alt_data_end+0xfffe58c4>
   25c64:	99000217 	ldw	r4,8(r19)
   25c68:	b545883a 	add	r2,r22,r21
   25c6c:	10800054 	ori	r2,r2,1
   25c70:	20800115 	stw	r2,4(r4)
   25c74:	003f3e06 	br	25970 <__alt_data_end+0xfffe5970>
   25c78:	01003f84 	movi	r4,254
   25c7c:	02001fc4 	movi	r8,127
   25c80:	01c01f84 	movi	r7,126
   25c84:	003e4006 	br	25588 <__alt_data_end+0xfffe5588>
   25c88:	008000f4 	movhi	r2,3
   25c8c:	10847904 	addi	r2,r2,4580
   25c90:	15000015 	stw	r20,0(r2)
   25c94:	003f1106 	br	258dc <__alt_data_end+0xfffe58dc>
   25c98:	00800044 	movi	r2,1
   25c9c:	002b883a 	mov	r21,zero
   25ca0:	003f1f06 	br	25920 <__alt_data_end+0xfffe5920>
   25ca4:	81400204 	addi	r5,r16,8
   25ca8:	9009883a 	mov	r4,r18
   25cac:	00249240 	call	24924 <_free_r>
   25cb0:	008000f4 	movhi	r2,3
   25cb4:	108b4f04 	addi	r2,r2,11580
   25cb8:	10c00017 	ldw	r3,0(r2)
   25cbc:	003f2c06 	br	25970 <__alt_data_end+0xfffe5970>
   25cc0:	00c05504 	movi	r3,340
   25cc4:	18800536 	bltu	r3,r2,25cdc <_malloc_r+0x7cc>
   25cc8:	3804d3fa 	srli	r2,r7,15
   25ccc:	11401e04 	addi	r5,r2,120
   25cd0:	10c01dc4 	addi	r3,r2,119
   25cd4:	294b883a 	add	r5,r5,r5
   25cd8:	003f5606 	br	25a34 <__alt_data_end+0xfffe5a34>
   25cdc:	00c15504 	movi	r3,1364
   25ce0:	18800536 	bltu	r3,r2,25cf8 <_malloc_r+0x7e8>
   25ce4:	3804d4ba 	srli	r2,r7,18
   25ce8:	11401f44 	addi	r5,r2,125
   25cec:	10c01f04 	addi	r3,r2,124
   25cf0:	294b883a 	add	r5,r5,r5
   25cf4:	003f4f06 	br	25a34 <__alt_data_end+0xfffe5a34>
   25cf8:	01403f84 	movi	r5,254
   25cfc:	00c01f84 	movi	r3,126
   25d00:	003f4c06 	br	25a34 <__alt_data_end+0xfffe5a34>
   25d04:	98800117 	ldw	r2,4(r19)
   25d08:	003fa006 	br	25b8c <__alt_data_end+0xfffe5b8c>
   25d0c:	8808d0fa 	srli	r4,r17,3
   25d10:	20800044 	addi	r2,r4,1
   25d14:	1085883a 	add	r2,r2,r2
   25d18:	003e9006 	br	2575c <__alt_data_end+0xfffe575c>

00025d1c <memchr>:
   25d1c:	208000cc 	andi	r2,r4,3
   25d20:	280f883a 	mov	r7,r5
   25d24:	10003426 	beq	r2,zero,25df8 <memchr+0xdc>
   25d28:	30bfffc4 	addi	r2,r6,-1
   25d2c:	30001a26 	beq	r6,zero,25d98 <memchr+0x7c>
   25d30:	20c00003 	ldbu	r3,0(r4)
   25d34:	29803fcc 	andi	r6,r5,255
   25d38:	30c0051e 	bne	r6,r3,25d50 <memchr+0x34>
   25d3c:	00001806 	br	25da0 <memchr+0x84>
   25d40:	10001526 	beq	r2,zero,25d98 <memchr+0x7c>
   25d44:	20c00003 	ldbu	r3,0(r4)
   25d48:	10bfffc4 	addi	r2,r2,-1
   25d4c:	30c01426 	beq	r6,r3,25da0 <memchr+0x84>
   25d50:	21000044 	addi	r4,r4,1
   25d54:	20c000cc 	andi	r3,r4,3
   25d58:	183ff91e 	bne	r3,zero,25d40 <__alt_data_end+0xfffe5d40>
   25d5c:	020000c4 	movi	r8,3
   25d60:	40801136 	bltu	r8,r2,25da8 <memchr+0x8c>
   25d64:	10000c26 	beq	r2,zero,25d98 <memchr+0x7c>
   25d68:	20c00003 	ldbu	r3,0(r4)
   25d6c:	29403fcc 	andi	r5,r5,255
   25d70:	28c00b26 	beq	r5,r3,25da0 <memchr+0x84>
   25d74:	20c00044 	addi	r3,r4,1
   25d78:	39803fcc 	andi	r6,r7,255
   25d7c:	2089883a 	add	r4,r4,r2
   25d80:	00000306 	br	25d90 <memchr+0x74>
   25d84:	18c00044 	addi	r3,r3,1
   25d88:	197fffc3 	ldbu	r5,-1(r3)
   25d8c:	31400526 	beq	r6,r5,25da4 <memchr+0x88>
   25d90:	1805883a 	mov	r2,r3
   25d94:	20fffb1e 	bne	r4,r3,25d84 <__alt_data_end+0xfffe5d84>
   25d98:	0005883a 	mov	r2,zero
   25d9c:	f800283a 	ret
   25da0:	2005883a 	mov	r2,r4
   25da4:	f800283a 	ret
   25da8:	28c03fcc 	andi	r3,r5,255
   25dac:	1812923a 	slli	r9,r3,8
   25db0:	02ffbff4 	movhi	r11,65279
   25db4:	02a02074 	movhi	r10,32897
   25db8:	48d2b03a 	or	r9,r9,r3
   25dbc:	4806943a 	slli	r3,r9,16
   25dc0:	5affbfc4 	addi	r11,r11,-257
   25dc4:	52a02004 	addi	r10,r10,-32640
   25dc8:	48d2b03a 	or	r9,r9,r3
   25dcc:	20c00017 	ldw	r3,0(r4)
   25dd0:	48c6f03a 	xor	r3,r9,r3
   25dd4:	1acd883a 	add	r6,r3,r11
   25dd8:	00c6303a 	nor	r3,zero,r3
   25ddc:	30c6703a 	and	r3,r6,r3
   25de0:	1a86703a 	and	r3,r3,r10
   25de4:	183fe01e 	bne	r3,zero,25d68 <__alt_data_end+0xfffe5d68>
   25de8:	10bfff04 	addi	r2,r2,-4
   25dec:	21000104 	addi	r4,r4,4
   25df0:	40bff636 	bltu	r8,r2,25dcc <__alt_data_end+0xfffe5dcc>
   25df4:	003fdb06 	br	25d64 <__alt_data_end+0xfffe5d64>
   25df8:	3005883a 	mov	r2,r6
   25dfc:	003fd706 	br	25d5c <__alt_data_end+0xfffe5d5c>

00025e00 <memcpy>:
   25e00:	defffd04 	addi	sp,sp,-12
   25e04:	dfc00215 	stw	ra,8(sp)
   25e08:	dc400115 	stw	r17,4(sp)
   25e0c:	dc000015 	stw	r16,0(sp)
   25e10:	00c003c4 	movi	r3,15
   25e14:	2005883a 	mov	r2,r4
   25e18:	1980452e 	bgeu	r3,r6,25f30 <memcpy+0x130>
   25e1c:	2906b03a 	or	r3,r5,r4
   25e20:	18c000cc 	andi	r3,r3,3
   25e24:	1800441e 	bne	r3,zero,25f38 <memcpy+0x138>
   25e28:	347ffc04 	addi	r17,r6,-16
   25e2c:	8822d13a 	srli	r17,r17,4
   25e30:	28c00104 	addi	r3,r5,4
   25e34:	23400104 	addi	r13,r4,4
   25e38:	8820913a 	slli	r16,r17,4
   25e3c:	2b000204 	addi	r12,r5,8
   25e40:	22c00204 	addi	r11,r4,8
   25e44:	84000504 	addi	r16,r16,20
   25e48:	2a800304 	addi	r10,r5,12
   25e4c:	22400304 	addi	r9,r4,12
   25e50:	2c21883a 	add	r16,r5,r16
   25e54:	2811883a 	mov	r8,r5
   25e58:	200f883a 	mov	r7,r4
   25e5c:	41000017 	ldw	r4,0(r8)
   25e60:	1fc00017 	ldw	ra,0(r3)
   25e64:	63c00017 	ldw	r15,0(r12)
   25e68:	39000015 	stw	r4,0(r7)
   25e6c:	53800017 	ldw	r14,0(r10)
   25e70:	6fc00015 	stw	ra,0(r13)
   25e74:	5bc00015 	stw	r15,0(r11)
   25e78:	4b800015 	stw	r14,0(r9)
   25e7c:	18c00404 	addi	r3,r3,16
   25e80:	39c00404 	addi	r7,r7,16
   25e84:	42000404 	addi	r8,r8,16
   25e88:	6b400404 	addi	r13,r13,16
   25e8c:	63000404 	addi	r12,r12,16
   25e90:	5ac00404 	addi	r11,r11,16
   25e94:	52800404 	addi	r10,r10,16
   25e98:	4a400404 	addi	r9,r9,16
   25e9c:	1c3fef1e 	bne	r3,r16,25e5c <__alt_data_end+0xfffe5e5c>
   25ea0:	89c00044 	addi	r7,r17,1
   25ea4:	380e913a 	slli	r7,r7,4
   25ea8:	310003cc 	andi	r4,r6,15
   25eac:	02c000c4 	movi	r11,3
   25eb0:	11c7883a 	add	r3,r2,r7
   25eb4:	29cb883a 	add	r5,r5,r7
   25eb8:	5900212e 	bgeu	r11,r4,25f40 <memcpy+0x140>
   25ebc:	1813883a 	mov	r9,r3
   25ec0:	2811883a 	mov	r8,r5
   25ec4:	200f883a 	mov	r7,r4
   25ec8:	42800017 	ldw	r10,0(r8)
   25ecc:	4a400104 	addi	r9,r9,4
   25ed0:	39ffff04 	addi	r7,r7,-4
   25ed4:	4abfff15 	stw	r10,-4(r9)
   25ed8:	42000104 	addi	r8,r8,4
   25edc:	59fffa36 	bltu	r11,r7,25ec8 <__alt_data_end+0xfffe5ec8>
   25ee0:	213fff04 	addi	r4,r4,-4
   25ee4:	2008d0ba 	srli	r4,r4,2
   25ee8:	318000cc 	andi	r6,r6,3
   25eec:	21000044 	addi	r4,r4,1
   25ef0:	2109883a 	add	r4,r4,r4
   25ef4:	2109883a 	add	r4,r4,r4
   25ef8:	1907883a 	add	r3,r3,r4
   25efc:	290b883a 	add	r5,r5,r4
   25f00:	30000626 	beq	r6,zero,25f1c <memcpy+0x11c>
   25f04:	198d883a 	add	r6,r3,r6
   25f08:	29c00003 	ldbu	r7,0(r5)
   25f0c:	18c00044 	addi	r3,r3,1
   25f10:	29400044 	addi	r5,r5,1
   25f14:	19ffffc5 	stb	r7,-1(r3)
   25f18:	19bffb1e 	bne	r3,r6,25f08 <__alt_data_end+0xfffe5f08>
   25f1c:	dfc00217 	ldw	ra,8(sp)
   25f20:	dc400117 	ldw	r17,4(sp)
   25f24:	dc000017 	ldw	r16,0(sp)
   25f28:	dec00304 	addi	sp,sp,12
   25f2c:	f800283a 	ret
   25f30:	2007883a 	mov	r3,r4
   25f34:	003ff206 	br	25f00 <__alt_data_end+0xfffe5f00>
   25f38:	2007883a 	mov	r3,r4
   25f3c:	003ff106 	br	25f04 <__alt_data_end+0xfffe5f04>
   25f40:	200d883a 	mov	r6,r4
   25f44:	003fee06 	br	25f00 <__alt_data_end+0xfffe5f00>

00025f48 <memmove>:
   25f48:	2005883a 	mov	r2,r4
   25f4c:	29000b2e 	bgeu	r5,r4,25f7c <memmove+0x34>
   25f50:	298f883a 	add	r7,r5,r6
   25f54:	21c0092e 	bgeu	r4,r7,25f7c <memmove+0x34>
   25f58:	2187883a 	add	r3,r4,r6
   25f5c:	198bc83a 	sub	r5,r3,r6
   25f60:	30004826 	beq	r6,zero,26084 <memmove+0x13c>
   25f64:	39ffffc4 	addi	r7,r7,-1
   25f68:	39000003 	ldbu	r4,0(r7)
   25f6c:	18ffffc4 	addi	r3,r3,-1
   25f70:	19000005 	stb	r4,0(r3)
   25f74:	28fffb1e 	bne	r5,r3,25f64 <__alt_data_end+0xfffe5f64>
   25f78:	f800283a 	ret
   25f7c:	00c003c4 	movi	r3,15
   25f80:	1980412e 	bgeu	r3,r6,26088 <memmove+0x140>
   25f84:	2886b03a 	or	r3,r5,r2
   25f88:	18c000cc 	andi	r3,r3,3
   25f8c:	1800401e 	bne	r3,zero,26090 <memmove+0x148>
   25f90:	33fffc04 	addi	r15,r6,-16
   25f94:	781ed13a 	srli	r15,r15,4
   25f98:	28c00104 	addi	r3,r5,4
   25f9c:	13400104 	addi	r13,r2,4
   25fa0:	781c913a 	slli	r14,r15,4
   25fa4:	2b000204 	addi	r12,r5,8
   25fa8:	12c00204 	addi	r11,r2,8
   25fac:	73800504 	addi	r14,r14,20
   25fb0:	2a800304 	addi	r10,r5,12
   25fb4:	12400304 	addi	r9,r2,12
   25fb8:	2b9d883a 	add	r14,r5,r14
   25fbc:	2811883a 	mov	r8,r5
   25fc0:	100f883a 	mov	r7,r2
   25fc4:	41000017 	ldw	r4,0(r8)
   25fc8:	39c00404 	addi	r7,r7,16
   25fcc:	18c00404 	addi	r3,r3,16
   25fd0:	393ffc15 	stw	r4,-16(r7)
   25fd4:	193ffc17 	ldw	r4,-16(r3)
   25fd8:	6b400404 	addi	r13,r13,16
   25fdc:	5ac00404 	addi	r11,r11,16
   25fe0:	693ffc15 	stw	r4,-16(r13)
   25fe4:	61000017 	ldw	r4,0(r12)
   25fe8:	4a400404 	addi	r9,r9,16
   25fec:	42000404 	addi	r8,r8,16
   25ff0:	593ffc15 	stw	r4,-16(r11)
   25ff4:	51000017 	ldw	r4,0(r10)
   25ff8:	63000404 	addi	r12,r12,16
   25ffc:	52800404 	addi	r10,r10,16
   26000:	493ffc15 	stw	r4,-16(r9)
   26004:	1bbfef1e 	bne	r3,r14,25fc4 <__alt_data_end+0xfffe5fc4>
   26008:	79000044 	addi	r4,r15,1
   2600c:	2008913a 	slli	r4,r4,4
   26010:	328003cc 	andi	r10,r6,15
   26014:	02c000c4 	movi	r11,3
   26018:	1107883a 	add	r3,r2,r4
   2601c:	290b883a 	add	r5,r5,r4
   26020:	5a801e2e 	bgeu	r11,r10,2609c <memmove+0x154>
   26024:	1813883a 	mov	r9,r3
   26028:	2811883a 	mov	r8,r5
   2602c:	500f883a 	mov	r7,r10
   26030:	41000017 	ldw	r4,0(r8)
   26034:	4a400104 	addi	r9,r9,4
   26038:	39ffff04 	addi	r7,r7,-4
   2603c:	493fff15 	stw	r4,-4(r9)
   26040:	42000104 	addi	r8,r8,4
   26044:	59fffa36 	bltu	r11,r7,26030 <__alt_data_end+0xfffe6030>
   26048:	513fff04 	addi	r4,r10,-4
   2604c:	2008d0ba 	srli	r4,r4,2
   26050:	318000cc 	andi	r6,r6,3
   26054:	21000044 	addi	r4,r4,1
   26058:	2109883a 	add	r4,r4,r4
   2605c:	2109883a 	add	r4,r4,r4
   26060:	1907883a 	add	r3,r3,r4
   26064:	290b883a 	add	r5,r5,r4
   26068:	30000b26 	beq	r6,zero,26098 <memmove+0x150>
   2606c:	198d883a 	add	r6,r3,r6
   26070:	29c00003 	ldbu	r7,0(r5)
   26074:	18c00044 	addi	r3,r3,1
   26078:	29400044 	addi	r5,r5,1
   2607c:	19ffffc5 	stb	r7,-1(r3)
   26080:	19bffb1e 	bne	r3,r6,26070 <__alt_data_end+0xfffe6070>
   26084:	f800283a 	ret
   26088:	1007883a 	mov	r3,r2
   2608c:	003ff606 	br	26068 <__alt_data_end+0xfffe6068>
   26090:	1007883a 	mov	r3,r2
   26094:	003ff506 	br	2606c <__alt_data_end+0xfffe606c>
   26098:	f800283a 	ret
   2609c:	500d883a 	mov	r6,r10
   260a0:	003ff106 	br	26068 <__alt_data_end+0xfffe6068>

000260a4 <memset>:
   260a4:	20c000cc 	andi	r3,r4,3
   260a8:	2005883a 	mov	r2,r4
   260ac:	18004426 	beq	r3,zero,261c0 <memset+0x11c>
   260b0:	31ffffc4 	addi	r7,r6,-1
   260b4:	30004026 	beq	r6,zero,261b8 <memset+0x114>
   260b8:	2813883a 	mov	r9,r5
   260bc:	200d883a 	mov	r6,r4
   260c0:	2007883a 	mov	r3,r4
   260c4:	00000406 	br	260d8 <memset+0x34>
   260c8:	3a3fffc4 	addi	r8,r7,-1
   260cc:	31800044 	addi	r6,r6,1
   260d0:	38003926 	beq	r7,zero,261b8 <memset+0x114>
   260d4:	400f883a 	mov	r7,r8
   260d8:	18c00044 	addi	r3,r3,1
   260dc:	32400005 	stb	r9,0(r6)
   260e0:	1a0000cc 	andi	r8,r3,3
   260e4:	403ff81e 	bne	r8,zero,260c8 <__alt_data_end+0xfffe60c8>
   260e8:	010000c4 	movi	r4,3
   260ec:	21c02d2e 	bgeu	r4,r7,261a4 <memset+0x100>
   260f0:	29003fcc 	andi	r4,r5,255
   260f4:	200c923a 	slli	r6,r4,8
   260f8:	3108b03a 	or	r4,r6,r4
   260fc:	200c943a 	slli	r6,r4,16
   26100:	218cb03a 	or	r6,r4,r6
   26104:	010003c4 	movi	r4,15
   26108:	21c0182e 	bgeu	r4,r7,2616c <memset+0xc8>
   2610c:	3b3ffc04 	addi	r12,r7,-16
   26110:	6018d13a 	srli	r12,r12,4
   26114:	1a000104 	addi	r8,r3,4
   26118:	1ac00204 	addi	r11,r3,8
   2611c:	6008913a 	slli	r4,r12,4
   26120:	1a800304 	addi	r10,r3,12
   26124:	1813883a 	mov	r9,r3
   26128:	21000504 	addi	r4,r4,20
   2612c:	1909883a 	add	r4,r3,r4
   26130:	49800015 	stw	r6,0(r9)
   26134:	41800015 	stw	r6,0(r8)
   26138:	59800015 	stw	r6,0(r11)
   2613c:	51800015 	stw	r6,0(r10)
   26140:	42000404 	addi	r8,r8,16
   26144:	4a400404 	addi	r9,r9,16
   26148:	5ac00404 	addi	r11,r11,16
   2614c:	52800404 	addi	r10,r10,16
   26150:	413ff71e 	bne	r8,r4,26130 <__alt_data_end+0xfffe6130>
   26154:	63000044 	addi	r12,r12,1
   26158:	6018913a 	slli	r12,r12,4
   2615c:	39c003cc 	andi	r7,r7,15
   26160:	010000c4 	movi	r4,3
   26164:	1b07883a 	add	r3,r3,r12
   26168:	21c00e2e 	bgeu	r4,r7,261a4 <memset+0x100>
   2616c:	1813883a 	mov	r9,r3
   26170:	3811883a 	mov	r8,r7
   26174:	010000c4 	movi	r4,3
   26178:	49800015 	stw	r6,0(r9)
   2617c:	423fff04 	addi	r8,r8,-4
   26180:	4a400104 	addi	r9,r9,4
   26184:	223ffc36 	bltu	r4,r8,26178 <__alt_data_end+0xfffe6178>
   26188:	393fff04 	addi	r4,r7,-4
   2618c:	2008d0ba 	srli	r4,r4,2
   26190:	39c000cc 	andi	r7,r7,3
   26194:	21000044 	addi	r4,r4,1
   26198:	2109883a 	add	r4,r4,r4
   2619c:	2109883a 	add	r4,r4,r4
   261a0:	1907883a 	add	r3,r3,r4
   261a4:	38000526 	beq	r7,zero,261bc <memset+0x118>
   261a8:	19cf883a 	add	r7,r3,r7
   261ac:	19400005 	stb	r5,0(r3)
   261b0:	18c00044 	addi	r3,r3,1
   261b4:	38fffd1e 	bne	r7,r3,261ac <__alt_data_end+0xfffe61ac>
   261b8:	f800283a 	ret
   261bc:	f800283a 	ret
   261c0:	2007883a 	mov	r3,r4
   261c4:	300f883a 	mov	r7,r6
   261c8:	003fc706 	br	260e8 <__alt_data_end+0xfffe60e8>

000261cc <_Balloc>:
   261cc:	20801317 	ldw	r2,76(r4)
   261d0:	defffc04 	addi	sp,sp,-16
   261d4:	dc400115 	stw	r17,4(sp)
   261d8:	dc000015 	stw	r16,0(sp)
   261dc:	dfc00315 	stw	ra,12(sp)
   261e0:	dc800215 	stw	r18,8(sp)
   261e4:	2023883a 	mov	r17,r4
   261e8:	2821883a 	mov	r16,r5
   261ec:	10000f26 	beq	r2,zero,2622c <_Balloc+0x60>
   261f0:	8407883a 	add	r3,r16,r16
   261f4:	18c7883a 	add	r3,r3,r3
   261f8:	10c7883a 	add	r3,r2,r3
   261fc:	18800017 	ldw	r2,0(r3)
   26200:	10001126 	beq	r2,zero,26248 <_Balloc+0x7c>
   26204:	11000017 	ldw	r4,0(r2)
   26208:	19000015 	stw	r4,0(r3)
   2620c:	10000415 	stw	zero,16(r2)
   26210:	10000315 	stw	zero,12(r2)
   26214:	dfc00317 	ldw	ra,12(sp)
   26218:	dc800217 	ldw	r18,8(sp)
   2621c:	dc400117 	ldw	r17,4(sp)
   26220:	dc000017 	ldw	r16,0(sp)
   26224:	dec00404 	addi	sp,sp,16
   26228:	f800283a 	ret
   2622c:	01800844 	movi	r6,33
   26230:	01400104 	movi	r5,4
   26234:	00291080 	call	29108 <_calloc_r>
   26238:	88801315 	stw	r2,76(r17)
   2623c:	103fec1e 	bne	r2,zero,261f0 <__alt_data_end+0xfffe61f0>
   26240:	0005883a 	mov	r2,zero
   26244:	003ff306 	br	26214 <__alt_data_end+0xfffe6214>
   26248:	01400044 	movi	r5,1
   2624c:	2c24983a 	sll	r18,r5,r16
   26250:	8809883a 	mov	r4,r17
   26254:	91800144 	addi	r6,r18,5
   26258:	318d883a 	add	r6,r6,r6
   2625c:	318d883a 	add	r6,r6,r6
   26260:	00291080 	call	29108 <_calloc_r>
   26264:	103ff626 	beq	r2,zero,26240 <__alt_data_end+0xfffe6240>
   26268:	14000115 	stw	r16,4(r2)
   2626c:	14800215 	stw	r18,8(r2)
   26270:	003fe606 	br	2620c <__alt_data_end+0xfffe620c>

00026274 <_Bfree>:
   26274:	28000826 	beq	r5,zero,26298 <_Bfree+0x24>
   26278:	28c00117 	ldw	r3,4(r5)
   2627c:	20801317 	ldw	r2,76(r4)
   26280:	18c7883a 	add	r3,r3,r3
   26284:	18c7883a 	add	r3,r3,r3
   26288:	10c5883a 	add	r2,r2,r3
   2628c:	10c00017 	ldw	r3,0(r2)
   26290:	28c00015 	stw	r3,0(r5)
   26294:	11400015 	stw	r5,0(r2)
   26298:	f800283a 	ret

0002629c <__multadd>:
   2629c:	defffa04 	addi	sp,sp,-24
   262a0:	dc800315 	stw	r18,12(sp)
   262a4:	dc400215 	stw	r17,8(sp)
   262a8:	dc000115 	stw	r16,4(sp)
   262ac:	2823883a 	mov	r17,r5
   262b0:	2c000417 	ldw	r16,16(r5)
   262b4:	dfc00515 	stw	ra,20(sp)
   262b8:	dcc00415 	stw	r19,16(sp)
   262bc:	2025883a 	mov	r18,r4
   262c0:	29400504 	addi	r5,r5,20
   262c4:	0011883a 	mov	r8,zero
   262c8:	28c00017 	ldw	r3,0(r5)
   262cc:	29400104 	addi	r5,r5,4
   262d0:	42000044 	addi	r8,r8,1
   262d4:	18bfffcc 	andi	r2,r3,65535
   262d8:	1185383a 	mul	r2,r2,r6
   262dc:	1806d43a 	srli	r3,r3,16
   262e0:	11cf883a 	add	r7,r2,r7
   262e4:	3808d43a 	srli	r4,r7,16
   262e8:	1987383a 	mul	r3,r3,r6
   262ec:	38bfffcc 	andi	r2,r7,65535
   262f0:	1907883a 	add	r3,r3,r4
   262f4:	1808943a 	slli	r4,r3,16
   262f8:	180ed43a 	srli	r7,r3,16
   262fc:	2085883a 	add	r2,r4,r2
   26300:	28bfff15 	stw	r2,-4(r5)
   26304:	443ff016 	blt	r8,r16,262c8 <__alt_data_end+0xfffe62c8>
   26308:	38000926 	beq	r7,zero,26330 <__multadd+0x94>
   2630c:	88800217 	ldw	r2,8(r17)
   26310:	80800f0e 	bge	r16,r2,26350 <__multadd+0xb4>
   26314:	80800144 	addi	r2,r16,5
   26318:	1085883a 	add	r2,r2,r2
   2631c:	1085883a 	add	r2,r2,r2
   26320:	8885883a 	add	r2,r17,r2
   26324:	11c00015 	stw	r7,0(r2)
   26328:	84000044 	addi	r16,r16,1
   2632c:	8c000415 	stw	r16,16(r17)
   26330:	8805883a 	mov	r2,r17
   26334:	dfc00517 	ldw	ra,20(sp)
   26338:	dcc00417 	ldw	r19,16(sp)
   2633c:	dc800317 	ldw	r18,12(sp)
   26340:	dc400217 	ldw	r17,8(sp)
   26344:	dc000117 	ldw	r16,4(sp)
   26348:	dec00604 	addi	sp,sp,24
   2634c:	f800283a 	ret
   26350:	89400117 	ldw	r5,4(r17)
   26354:	9009883a 	mov	r4,r18
   26358:	d9c00015 	stw	r7,0(sp)
   2635c:	29400044 	addi	r5,r5,1
   26360:	00261cc0 	call	261cc <_Balloc>
   26364:	89800417 	ldw	r6,16(r17)
   26368:	89400304 	addi	r5,r17,12
   2636c:	11000304 	addi	r4,r2,12
   26370:	31800084 	addi	r6,r6,2
   26374:	318d883a 	add	r6,r6,r6
   26378:	318d883a 	add	r6,r6,r6
   2637c:	1027883a 	mov	r19,r2
   26380:	0025e000 	call	25e00 <memcpy>
   26384:	d9c00017 	ldw	r7,0(sp)
   26388:	88000a26 	beq	r17,zero,263b4 <__multadd+0x118>
   2638c:	88c00117 	ldw	r3,4(r17)
   26390:	90801317 	ldw	r2,76(r18)
   26394:	18c7883a 	add	r3,r3,r3
   26398:	18c7883a 	add	r3,r3,r3
   2639c:	10c5883a 	add	r2,r2,r3
   263a0:	10c00017 	ldw	r3,0(r2)
   263a4:	88c00015 	stw	r3,0(r17)
   263a8:	14400015 	stw	r17,0(r2)
   263ac:	9823883a 	mov	r17,r19
   263b0:	003fd806 	br	26314 <__alt_data_end+0xfffe6314>
   263b4:	9823883a 	mov	r17,r19
   263b8:	003fd606 	br	26314 <__alt_data_end+0xfffe6314>

000263bc <__s2b>:
   263bc:	defff904 	addi	sp,sp,-28
   263c0:	dc400115 	stw	r17,4(sp)
   263c4:	dc000015 	stw	r16,0(sp)
   263c8:	2023883a 	mov	r17,r4
   263cc:	2821883a 	mov	r16,r5
   263d0:	39000204 	addi	r4,r7,8
   263d4:	01400244 	movi	r5,9
   263d8:	dcc00315 	stw	r19,12(sp)
   263dc:	dc800215 	stw	r18,8(sp)
   263e0:	dfc00615 	stw	ra,24(sp)
   263e4:	dd400515 	stw	r21,20(sp)
   263e8:	dd000415 	stw	r20,16(sp)
   263ec:	3825883a 	mov	r18,r7
   263f0:	3027883a 	mov	r19,r6
   263f4:	002a4380 	call	2a438 <__divsi3>
   263f8:	00c00044 	movi	r3,1
   263fc:	000b883a 	mov	r5,zero
   26400:	1880030e 	bge	r3,r2,26410 <__s2b+0x54>
   26404:	18c7883a 	add	r3,r3,r3
   26408:	29400044 	addi	r5,r5,1
   2640c:	18bffd16 	blt	r3,r2,26404 <__alt_data_end+0xfffe6404>
   26410:	8809883a 	mov	r4,r17
   26414:	00261cc0 	call	261cc <_Balloc>
   26418:	d8c00717 	ldw	r3,28(sp)
   2641c:	10c00515 	stw	r3,20(r2)
   26420:	00c00044 	movi	r3,1
   26424:	10c00415 	stw	r3,16(r2)
   26428:	00c00244 	movi	r3,9
   2642c:	1cc0210e 	bge	r3,r19,264b4 <__s2b+0xf8>
   26430:	80eb883a 	add	r21,r16,r3
   26434:	a829883a 	mov	r20,r21
   26438:	84e1883a 	add	r16,r16,r19
   2643c:	a1c00007 	ldb	r7,0(r20)
   26440:	01800284 	movi	r6,10
   26444:	a5000044 	addi	r20,r20,1
   26448:	100b883a 	mov	r5,r2
   2644c:	39fff404 	addi	r7,r7,-48
   26450:	8809883a 	mov	r4,r17
   26454:	002629c0 	call	2629c <__multadd>
   26458:	a43ff81e 	bne	r20,r16,2643c <__alt_data_end+0xfffe643c>
   2645c:	ace1883a 	add	r16,r21,r19
   26460:	843ffe04 	addi	r16,r16,-8
   26464:	9c800a0e 	bge	r19,r18,26490 <__s2b+0xd4>
   26468:	94e5c83a 	sub	r18,r18,r19
   2646c:	84a5883a 	add	r18,r16,r18
   26470:	81c00007 	ldb	r7,0(r16)
   26474:	01800284 	movi	r6,10
   26478:	84000044 	addi	r16,r16,1
   2647c:	100b883a 	mov	r5,r2
   26480:	39fff404 	addi	r7,r7,-48
   26484:	8809883a 	mov	r4,r17
   26488:	002629c0 	call	2629c <__multadd>
   2648c:	84bff81e 	bne	r16,r18,26470 <__alt_data_end+0xfffe6470>
   26490:	dfc00617 	ldw	ra,24(sp)
   26494:	dd400517 	ldw	r21,20(sp)
   26498:	dd000417 	ldw	r20,16(sp)
   2649c:	dcc00317 	ldw	r19,12(sp)
   264a0:	dc800217 	ldw	r18,8(sp)
   264a4:	dc400117 	ldw	r17,4(sp)
   264a8:	dc000017 	ldw	r16,0(sp)
   264ac:	dec00704 	addi	sp,sp,28
   264b0:	f800283a 	ret
   264b4:	84000284 	addi	r16,r16,10
   264b8:	1827883a 	mov	r19,r3
   264bc:	003fe906 	br	26464 <__alt_data_end+0xfffe6464>

000264c0 <__hi0bits>:
   264c0:	20bfffec 	andhi	r2,r4,65535
   264c4:	1000141e 	bne	r2,zero,26518 <__hi0bits+0x58>
   264c8:	2008943a 	slli	r4,r4,16
   264cc:	00800404 	movi	r2,16
   264d0:	20ffc02c 	andhi	r3,r4,65280
   264d4:	1800021e 	bne	r3,zero,264e0 <__hi0bits+0x20>
   264d8:	2008923a 	slli	r4,r4,8
   264dc:	10800204 	addi	r2,r2,8
   264e0:	20fc002c 	andhi	r3,r4,61440
   264e4:	1800021e 	bne	r3,zero,264f0 <__hi0bits+0x30>
   264e8:	2008913a 	slli	r4,r4,4
   264ec:	10800104 	addi	r2,r2,4
   264f0:	20f0002c 	andhi	r3,r4,49152
   264f4:	1800031e 	bne	r3,zero,26504 <__hi0bits+0x44>
   264f8:	2109883a 	add	r4,r4,r4
   264fc:	10800084 	addi	r2,r2,2
   26500:	2109883a 	add	r4,r4,r4
   26504:	20000316 	blt	r4,zero,26514 <__hi0bits+0x54>
   26508:	2110002c 	andhi	r4,r4,16384
   2650c:	2000041e 	bne	r4,zero,26520 <__hi0bits+0x60>
   26510:	00800804 	movi	r2,32
   26514:	f800283a 	ret
   26518:	0005883a 	mov	r2,zero
   2651c:	003fec06 	br	264d0 <__alt_data_end+0xfffe64d0>
   26520:	10800044 	addi	r2,r2,1
   26524:	f800283a 	ret

00026528 <__lo0bits>:
   26528:	20c00017 	ldw	r3,0(r4)
   2652c:	188001cc 	andi	r2,r3,7
   26530:	10000826 	beq	r2,zero,26554 <__lo0bits+0x2c>
   26534:	1880004c 	andi	r2,r3,1
   26538:	1000211e 	bne	r2,zero,265c0 <__lo0bits+0x98>
   2653c:	1880008c 	andi	r2,r3,2
   26540:	1000211e 	bne	r2,zero,265c8 <__lo0bits+0xa0>
   26544:	1806d0ba 	srli	r3,r3,2
   26548:	00800084 	movi	r2,2
   2654c:	20c00015 	stw	r3,0(r4)
   26550:	f800283a 	ret
   26554:	18bfffcc 	andi	r2,r3,65535
   26558:	10001326 	beq	r2,zero,265a8 <__lo0bits+0x80>
   2655c:	0005883a 	mov	r2,zero
   26560:	19403fcc 	andi	r5,r3,255
   26564:	2800021e 	bne	r5,zero,26570 <__lo0bits+0x48>
   26568:	1806d23a 	srli	r3,r3,8
   2656c:	10800204 	addi	r2,r2,8
   26570:	194003cc 	andi	r5,r3,15
   26574:	2800021e 	bne	r5,zero,26580 <__lo0bits+0x58>
   26578:	1806d13a 	srli	r3,r3,4
   2657c:	10800104 	addi	r2,r2,4
   26580:	194000cc 	andi	r5,r3,3
   26584:	2800021e 	bne	r5,zero,26590 <__lo0bits+0x68>
   26588:	1806d0ba 	srli	r3,r3,2
   2658c:	10800084 	addi	r2,r2,2
   26590:	1940004c 	andi	r5,r3,1
   26594:	2800081e 	bne	r5,zero,265b8 <__lo0bits+0x90>
   26598:	1806d07a 	srli	r3,r3,1
   2659c:	1800051e 	bne	r3,zero,265b4 <__lo0bits+0x8c>
   265a0:	00800804 	movi	r2,32
   265a4:	f800283a 	ret
   265a8:	1806d43a 	srli	r3,r3,16
   265ac:	00800404 	movi	r2,16
   265b0:	003feb06 	br	26560 <__alt_data_end+0xfffe6560>
   265b4:	10800044 	addi	r2,r2,1
   265b8:	20c00015 	stw	r3,0(r4)
   265bc:	f800283a 	ret
   265c0:	0005883a 	mov	r2,zero
   265c4:	f800283a 	ret
   265c8:	1806d07a 	srli	r3,r3,1
   265cc:	00800044 	movi	r2,1
   265d0:	20c00015 	stw	r3,0(r4)
   265d4:	f800283a 	ret

000265d8 <__i2b>:
   265d8:	defffd04 	addi	sp,sp,-12
   265dc:	dc000015 	stw	r16,0(sp)
   265e0:	04000044 	movi	r16,1
   265e4:	dc400115 	stw	r17,4(sp)
   265e8:	2823883a 	mov	r17,r5
   265ec:	800b883a 	mov	r5,r16
   265f0:	dfc00215 	stw	ra,8(sp)
   265f4:	00261cc0 	call	261cc <_Balloc>
   265f8:	14400515 	stw	r17,20(r2)
   265fc:	14000415 	stw	r16,16(r2)
   26600:	dfc00217 	ldw	ra,8(sp)
   26604:	dc400117 	ldw	r17,4(sp)
   26608:	dc000017 	ldw	r16,0(sp)
   2660c:	dec00304 	addi	sp,sp,12
   26610:	f800283a 	ret

00026614 <__multiply>:
   26614:	defffa04 	addi	sp,sp,-24
   26618:	dcc00315 	stw	r19,12(sp)
   2661c:	dc800215 	stw	r18,8(sp)
   26620:	34c00417 	ldw	r19,16(r6)
   26624:	2c800417 	ldw	r18,16(r5)
   26628:	dd000415 	stw	r20,16(sp)
   2662c:	dc400115 	stw	r17,4(sp)
   26630:	dfc00515 	stw	ra,20(sp)
   26634:	dc000015 	stw	r16,0(sp)
   26638:	2829883a 	mov	r20,r5
   2663c:	3023883a 	mov	r17,r6
   26640:	94c0050e 	bge	r18,r19,26658 <__multiply+0x44>
   26644:	9007883a 	mov	r3,r18
   26648:	3029883a 	mov	r20,r6
   2664c:	9825883a 	mov	r18,r19
   26650:	2823883a 	mov	r17,r5
   26654:	1827883a 	mov	r19,r3
   26658:	a0800217 	ldw	r2,8(r20)
   2665c:	94e1883a 	add	r16,r18,r19
   26660:	a1400117 	ldw	r5,4(r20)
   26664:	1400010e 	bge	r2,r16,2666c <__multiply+0x58>
   26668:	29400044 	addi	r5,r5,1
   2666c:	00261cc0 	call	261cc <_Balloc>
   26670:	8415883a 	add	r10,r16,r16
   26674:	12c00504 	addi	r11,r2,20
   26678:	5295883a 	add	r10,r10,r10
   2667c:	5a95883a 	add	r10,r11,r10
   26680:	5807883a 	mov	r3,r11
   26684:	5a80032e 	bgeu	r11,r10,26694 <__multiply+0x80>
   26688:	18000015 	stw	zero,0(r3)
   2668c:	18c00104 	addi	r3,r3,4
   26690:	1abffd36 	bltu	r3,r10,26688 <__alt_data_end+0xfffe6688>
   26694:	9ce7883a 	add	r19,r19,r19
   26698:	94a5883a 	add	r18,r18,r18
   2669c:	89800504 	addi	r6,r17,20
   266a0:	9ce7883a 	add	r19,r19,r19
   266a4:	a3400504 	addi	r13,r20,20
   266a8:	94a5883a 	add	r18,r18,r18
   266ac:	34d9883a 	add	r12,r6,r19
   266b0:	6c93883a 	add	r9,r13,r18
   266b4:	3300422e 	bgeu	r6,r12,267c0 <__multiply+0x1ac>
   266b8:	37c00017 	ldw	ra,0(r6)
   266bc:	fbffffcc 	andi	r15,ra,65535
   266c0:	78001b26 	beq	r15,zero,26730 <__multiply+0x11c>
   266c4:	5811883a 	mov	r8,r11
   266c8:	681d883a 	mov	r14,r13
   266cc:	000f883a 	mov	r7,zero
   266d0:	71000017 	ldw	r4,0(r14)
   266d4:	40c00017 	ldw	r3,0(r8)
   266d8:	73800104 	addi	r14,r14,4
   266dc:	217fffcc 	andi	r5,r4,65535
   266e0:	2bcb383a 	mul	r5,r5,r15
   266e4:	2008d43a 	srli	r4,r4,16
   266e8:	1c7fffcc 	andi	r17,r3,65535
   266ec:	2c4b883a 	add	r5,r5,r17
   266f0:	29cb883a 	add	r5,r5,r7
   266f4:	23c9383a 	mul	r4,r4,r15
   266f8:	1806d43a 	srli	r3,r3,16
   266fc:	280ed43a 	srli	r7,r5,16
   26700:	297fffcc 	andi	r5,r5,65535
   26704:	20c7883a 	add	r3,r4,r3
   26708:	19c7883a 	add	r3,r3,r7
   2670c:	1808943a 	slli	r4,r3,16
   26710:	4023883a 	mov	r17,r8
   26714:	180ed43a 	srli	r7,r3,16
   26718:	214ab03a 	or	r5,r4,r5
   2671c:	41400015 	stw	r5,0(r8)
   26720:	42000104 	addi	r8,r8,4
   26724:	727fea36 	bltu	r14,r9,266d0 <__alt_data_end+0xfffe66d0>
   26728:	89c00115 	stw	r7,4(r17)
   2672c:	37c00017 	ldw	ra,0(r6)
   26730:	f83ed43a 	srli	ra,ra,16
   26734:	f8001f26 	beq	ra,zero,267b4 <__multiply+0x1a0>
   26738:	58c00017 	ldw	r3,0(r11)
   2673c:	681d883a 	mov	r14,r13
   26740:	581f883a 	mov	r15,r11
   26744:	1811883a 	mov	r8,r3
   26748:	5825883a 	mov	r18,r11
   2674c:	000f883a 	mov	r7,zero
   26750:	00000106 	br	26758 <__multiply+0x144>
   26754:	8825883a 	mov	r18,r17
   26758:	7140000b 	ldhu	r5,0(r14)
   2675c:	4010d43a 	srli	r8,r8,16
   26760:	193fffcc 	andi	r4,r3,65535
   26764:	2fcb383a 	mul	r5,r5,ra
   26768:	7bc00104 	addi	r15,r15,4
   2676c:	73800104 	addi	r14,r14,4
   26770:	2a0b883a 	add	r5,r5,r8
   26774:	29cb883a 	add	r5,r5,r7
   26778:	2806943a 	slli	r3,r5,16
   2677c:	94400104 	addi	r17,r18,4
   26780:	280ad43a 	srli	r5,r5,16
   26784:	1908b03a 	or	r4,r3,r4
   26788:	793fff15 	stw	r4,-4(r15)
   2678c:	70ffff17 	ldw	r3,-4(r14)
   26790:	8a000017 	ldw	r8,0(r17)
   26794:	1806d43a 	srli	r3,r3,16
   26798:	413fffcc 	andi	r4,r8,65535
   2679c:	1fc7383a 	mul	r3,r3,ra
   267a0:	1907883a 	add	r3,r3,r4
   267a4:	1947883a 	add	r3,r3,r5
   267a8:	180ed43a 	srli	r7,r3,16
   267ac:	727fe936 	bltu	r14,r9,26754 <__alt_data_end+0xfffe6754>
   267b0:	90c00115 	stw	r3,4(r18)
   267b4:	31800104 	addi	r6,r6,4
   267b8:	5ac00104 	addi	r11,r11,4
   267bc:	333fbe36 	bltu	r6,r12,266b8 <__alt_data_end+0xfffe66b8>
   267c0:	0400090e 	bge	zero,r16,267e8 <__multiply+0x1d4>
   267c4:	50ffff17 	ldw	r3,-4(r10)
   267c8:	52bfff04 	addi	r10,r10,-4
   267cc:	18000326 	beq	r3,zero,267dc <__multiply+0x1c8>
   267d0:	00000506 	br	267e8 <__multiply+0x1d4>
   267d4:	50c00017 	ldw	r3,0(r10)
   267d8:	1800031e 	bne	r3,zero,267e8 <__multiply+0x1d4>
   267dc:	843fffc4 	addi	r16,r16,-1
   267e0:	52bfff04 	addi	r10,r10,-4
   267e4:	803ffb1e 	bne	r16,zero,267d4 <__alt_data_end+0xfffe67d4>
   267e8:	14000415 	stw	r16,16(r2)
   267ec:	dfc00517 	ldw	ra,20(sp)
   267f0:	dd000417 	ldw	r20,16(sp)
   267f4:	dcc00317 	ldw	r19,12(sp)
   267f8:	dc800217 	ldw	r18,8(sp)
   267fc:	dc400117 	ldw	r17,4(sp)
   26800:	dc000017 	ldw	r16,0(sp)
   26804:	dec00604 	addi	sp,sp,24
   26808:	f800283a 	ret

0002680c <__pow5mult>:
   2680c:	defffa04 	addi	sp,sp,-24
   26810:	dcc00315 	stw	r19,12(sp)
   26814:	dc000015 	stw	r16,0(sp)
   26818:	dfc00515 	stw	ra,20(sp)
   2681c:	dd000415 	stw	r20,16(sp)
   26820:	dc800215 	stw	r18,8(sp)
   26824:	dc400115 	stw	r17,4(sp)
   26828:	308000cc 	andi	r2,r6,3
   2682c:	3021883a 	mov	r16,r6
   26830:	2027883a 	mov	r19,r4
   26834:	10002f1e 	bne	r2,zero,268f4 <__pow5mult+0xe8>
   26838:	2825883a 	mov	r18,r5
   2683c:	8021d0ba 	srai	r16,r16,2
   26840:	80001a26 	beq	r16,zero,268ac <__pow5mult+0xa0>
   26844:	9c401217 	ldw	r17,72(r19)
   26848:	8800061e 	bne	r17,zero,26864 <__pow5mult+0x58>
   2684c:	00003406 	br	26920 <__pow5mult+0x114>
   26850:	8021d07a 	srai	r16,r16,1
   26854:	80001526 	beq	r16,zero,268ac <__pow5mult+0xa0>
   26858:	88800017 	ldw	r2,0(r17)
   2685c:	10001c26 	beq	r2,zero,268d0 <__pow5mult+0xc4>
   26860:	1023883a 	mov	r17,r2
   26864:	8080004c 	andi	r2,r16,1
   26868:	103ff926 	beq	r2,zero,26850 <__alt_data_end+0xfffe6850>
   2686c:	880d883a 	mov	r6,r17
   26870:	900b883a 	mov	r5,r18
   26874:	9809883a 	mov	r4,r19
   26878:	00266140 	call	26614 <__multiply>
   2687c:	90001b26 	beq	r18,zero,268ec <__pow5mult+0xe0>
   26880:	91000117 	ldw	r4,4(r18)
   26884:	98c01317 	ldw	r3,76(r19)
   26888:	8021d07a 	srai	r16,r16,1
   2688c:	2109883a 	add	r4,r4,r4
   26890:	2109883a 	add	r4,r4,r4
   26894:	1907883a 	add	r3,r3,r4
   26898:	19000017 	ldw	r4,0(r3)
   2689c:	91000015 	stw	r4,0(r18)
   268a0:	1c800015 	stw	r18,0(r3)
   268a4:	1025883a 	mov	r18,r2
   268a8:	803feb1e 	bne	r16,zero,26858 <__alt_data_end+0xfffe6858>
   268ac:	9005883a 	mov	r2,r18
   268b0:	dfc00517 	ldw	ra,20(sp)
   268b4:	dd000417 	ldw	r20,16(sp)
   268b8:	dcc00317 	ldw	r19,12(sp)
   268bc:	dc800217 	ldw	r18,8(sp)
   268c0:	dc400117 	ldw	r17,4(sp)
   268c4:	dc000017 	ldw	r16,0(sp)
   268c8:	dec00604 	addi	sp,sp,24
   268cc:	f800283a 	ret
   268d0:	880d883a 	mov	r6,r17
   268d4:	880b883a 	mov	r5,r17
   268d8:	9809883a 	mov	r4,r19
   268dc:	00266140 	call	26614 <__multiply>
   268e0:	88800015 	stw	r2,0(r17)
   268e4:	10000015 	stw	zero,0(r2)
   268e8:	003fdd06 	br	26860 <__alt_data_end+0xfffe6860>
   268ec:	1025883a 	mov	r18,r2
   268f0:	003fd706 	br	26850 <__alt_data_end+0xfffe6850>
   268f4:	10bfffc4 	addi	r2,r2,-1
   268f8:	1085883a 	add	r2,r2,r2
   268fc:	00c000f4 	movhi	r3,3
   26900:	18fd2d04 	addi	r3,r3,-2892
   26904:	1085883a 	add	r2,r2,r2
   26908:	1885883a 	add	r2,r3,r2
   2690c:	11800017 	ldw	r6,0(r2)
   26910:	000f883a 	mov	r7,zero
   26914:	002629c0 	call	2629c <__multadd>
   26918:	1025883a 	mov	r18,r2
   2691c:	003fc706 	br	2683c <__alt_data_end+0xfffe683c>
   26920:	05000044 	movi	r20,1
   26924:	a00b883a 	mov	r5,r20
   26928:	9809883a 	mov	r4,r19
   2692c:	00261cc0 	call	261cc <_Balloc>
   26930:	1023883a 	mov	r17,r2
   26934:	00809c44 	movi	r2,625
   26938:	88800515 	stw	r2,20(r17)
   2693c:	8d000415 	stw	r20,16(r17)
   26940:	9c401215 	stw	r17,72(r19)
   26944:	88000015 	stw	zero,0(r17)
   26948:	003fc606 	br	26864 <__alt_data_end+0xfffe6864>

0002694c <__lshift>:
   2694c:	defff904 	addi	sp,sp,-28
   26950:	dd400515 	stw	r21,20(sp)
   26954:	dcc00315 	stw	r19,12(sp)
   26958:	302bd17a 	srai	r21,r6,5
   2695c:	2cc00417 	ldw	r19,16(r5)
   26960:	28800217 	ldw	r2,8(r5)
   26964:	dd000415 	stw	r20,16(sp)
   26968:	ace7883a 	add	r19,r21,r19
   2696c:	dc800215 	stw	r18,8(sp)
   26970:	dc400115 	stw	r17,4(sp)
   26974:	dc000015 	stw	r16,0(sp)
   26978:	dfc00615 	stw	ra,24(sp)
   2697c:	9c000044 	addi	r16,r19,1
   26980:	2823883a 	mov	r17,r5
   26984:	3029883a 	mov	r20,r6
   26988:	2025883a 	mov	r18,r4
   2698c:	29400117 	ldw	r5,4(r5)
   26990:	1400030e 	bge	r2,r16,269a0 <__lshift+0x54>
   26994:	1085883a 	add	r2,r2,r2
   26998:	29400044 	addi	r5,r5,1
   2699c:	143ffd16 	blt	r2,r16,26994 <__alt_data_end+0xfffe6994>
   269a0:	9009883a 	mov	r4,r18
   269a4:	00261cc0 	call	261cc <_Balloc>
   269a8:	10c00504 	addi	r3,r2,20
   269ac:	0540070e 	bge	zero,r21,269cc <__lshift+0x80>
   269b0:	ad6b883a 	add	r21,r21,r21
   269b4:	ad6b883a 	add	r21,r21,r21
   269b8:	1809883a 	mov	r4,r3
   269bc:	1d47883a 	add	r3,r3,r21
   269c0:	20000015 	stw	zero,0(r4)
   269c4:	21000104 	addi	r4,r4,4
   269c8:	193ffd1e 	bne	r3,r4,269c0 <__alt_data_end+0xfffe69c0>
   269cc:	8a000417 	ldw	r8,16(r17)
   269d0:	89000504 	addi	r4,r17,20
   269d4:	a18007cc 	andi	r6,r20,31
   269d8:	4211883a 	add	r8,r8,r8
   269dc:	4211883a 	add	r8,r8,r8
   269e0:	2211883a 	add	r8,r4,r8
   269e4:	30002326 	beq	r6,zero,26a74 <__lshift+0x128>
   269e8:	02400804 	movi	r9,32
   269ec:	4993c83a 	sub	r9,r9,r6
   269f0:	000b883a 	mov	r5,zero
   269f4:	21c00017 	ldw	r7,0(r4)
   269f8:	1815883a 	mov	r10,r3
   269fc:	18c00104 	addi	r3,r3,4
   26a00:	398e983a 	sll	r7,r7,r6
   26a04:	21000104 	addi	r4,r4,4
   26a08:	394ab03a 	or	r5,r7,r5
   26a0c:	197fff15 	stw	r5,-4(r3)
   26a10:	217fff17 	ldw	r5,-4(r4)
   26a14:	2a4ad83a 	srl	r5,r5,r9
   26a18:	223ff636 	bltu	r4,r8,269f4 <__alt_data_end+0xfffe69f4>
   26a1c:	51400115 	stw	r5,4(r10)
   26a20:	28001a1e 	bne	r5,zero,26a8c <__lshift+0x140>
   26a24:	843fffc4 	addi	r16,r16,-1
   26a28:	14000415 	stw	r16,16(r2)
   26a2c:	88000826 	beq	r17,zero,26a50 <__lshift+0x104>
   26a30:	89000117 	ldw	r4,4(r17)
   26a34:	90c01317 	ldw	r3,76(r18)
   26a38:	2109883a 	add	r4,r4,r4
   26a3c:	2109883a 	add	r4,r4,r4
   26a40:	1907883a 	add	r3,r3,r4
   26a44:	19000017 	ldw	r4,0(r3)
   26a48:	89000015 	stw	r4,0(r17)
   26a4c:	1c400015 	stw	r17,0(r3)
   26a50:	dfc00617 	ldw	ra,24(sp)
   26a54:	dd400517 	ldw	r21,20(sp)
   26a58:	dd000417 	ldw	r20,16(sp)
   26a5c:	dcc00317 	ldw	r19,12(sp)
   26a60:	dc800217 	ldw	r18,8(sp)
   26a64:	dc400117 	ldw	r17,4(sp)
   26a68:	dc000017 	ldw	r16,0(sp)
   26a6c:	dec00704 	addi	sp,sp,28
   26a70:	f800283a 	ret
   26a74:	21400017 	ldw	r5,0(r4)
   26a78:	18c00104 	addi	r3,r3,4
   26a7c:	21000104 	addi	r4,r4,4
   26a80:	197fff15 	stw	r5,-4(r3)
   26a84:	223ffb36 	bltu	r4,r8,26a74 <__alt_data_end+0xfffe6a74>
   26a88:	003fe606 	br	26a24 <__alt_data_end+0xfffe6a24>
   26a8c:	9c000084 	addi	r16,r19,2
   26a90:	003fe406 	br	26a24 <__alt_data_end+0xfffe6a24>

00026a94 <__mcmp>:
   26a94:	20800417 	ldw	r2,16(r4)
   26a98:	28c00417 	ldw	r3,16(r5)
   26a9c:	10c5c83a 	sub	r2,r2,r3
   26aa0:	1000111e 	bne	r2,zero,26ae8 <__mcmp+0x54>
   26aa4:	18c7883a 	add	r3,r3,r3
   26aa8:	18c7883a 	add	r3,r3,r3
   26aac:	21000504 	addi	r4,r4,20
   26ab0:	29400504 	addi	r5,r5,20
   26ab4:	20c5883a 	add	r2,r4,r3
   26ab8:	28cb883a 	add	r5,r5,r3
   26abc:	00000106 	br	26ac4 <__mcmp+0x30>
   26ac0:	20800a2e 	bgeu	r4,r2,26aec <__mcmp+0x58>
   26ac4:	10bfff04 	addi	r2,r2,-4
   26ac8:	297fff04 	addi	r5,r5,-4
   26acc:	11800017 	ldw	r6,0(r2)
   26ad0:	28c00017 	ldw	r3,0(r5)
   26ad4:	30fffa26 	beq	r6,r3,26ac0 <__alt_data_end+0xfffe6ac0>
   26ad8:	30c00236 	bltu	r6,r3,26ae4 <__mcmp+0x50>
   26adc:	00800044 	movi	r2,1
   26ae0:	f800283a 	ret
   26ae4:	00bfffc4 	movi	r2,-1
   26ae8:	f800283a 	ret
   26aec:	0005883a 	mov	r2,zero
   26af0:	f800283a 	ret

00026af4 <__mdiff>:
   26af4:	28c00417 	ldw	r3,16(r5)
   26af8:	30800417 	ldw	r2,16(r6)
   26afc:	defffa04 	addi	sp,sp,-24
   26b00:	dcc00315 	stw	r19,12(sp)
   26b04:	dc800215 	stw	r18,8(sp)
   26b08:	dfc00515 	stw	ra,20(sp)
   26b0c:	dd000415 	stw	r20,16(sp)
   26b10:	dc400115 	stw	r17,4(sp)
   26b14:	dc000015 	stw	r16,0(sp)
   26b18:	1887c83a 	sub	r3,r3,r2
   26b1c:	2825883a 	mov	r18,r5
   26b20:	3027883a 	mov	r19,r6
   26b24:	1800141e 	bne	r3,zero,26b78 <__mdiff+0x84>
   26b28:	1085883a 	add	r2,r2,r2
   26b2c:	1085883a 	add	r2,r2,r2
   26b30:	2a000504 	addi	r8,r5,20
   26b34:	34000504 	addi	r16,r6,20
   26b38:	4087883a 	add	r3,r8,r2
   26b3c:	8085883a 	add	r2,r16,r2
   26b40:	00000106 	br	26b48 <__mdiff+0x54>
   26b44:	40c0592e 	bgeu	r8,r3,26cac <__mdiff+0x1b8>
   26b48:	18ffff04 	addi	r3,r3,-4
   26b4c:	10bfff04 	addi	r2,r2,-4
   26b50:	19c00017 	ldw	r7,0(r3)
   26b54:	11400017 	ldw	r5,0(r2)
   26b58:	397ffa26 	beq	r7,r5,26b44 <__alt_data_end+0xfffe6b44>
   26b5c:	3940592e 	bgeu	r7,r5,26cc4 <__mdiff+0x1d0>
   26b60:	9005883a 	mov	r2,r18
   26b64:	4023883a 	mov	r17,r8
   26b68:	9825883a 	mov	r18,r19
   26b6c:	05000044 	movi	r20,1
   26b70:	1027883a 	mov	r19,r2
   26b74:	00000406 	br	26b88 <__mdiff+0x94>
   26b78:	18005616 	blt	r3,zero,26cd4 <__mdiff+0x1e0>
   26b7c:	34400504 	addi	r17,r6,20
   26b80:	2c000504 	addi	r16,r5,20
   26b84:	0029883a 	mov	r20,zero
   26b88:	91400117 	ldw	r5,4(r18)
   26b8c:	00261cc0 	call	261cc <_Balloc>
   26b90:	92400417 	ldw	r9,16(r18)
   26b94:	9b000417 	ldw	r12,16(r19)
   26b98:	12c00504 	addi	r11,r2,20
   26b9c:	4a51883a 	add	r8,r9,r9
   26ba0:	6319883a 	add	r12,r12,r12
   26ba4:	4211883a 	add	r8,r8,r8
   26ba8:	6319883a 	add	r12,r12,r12
   26bac:	15000315 	stw	r20,12(r2)
   26bb0:	8211883a 	add	r8,r16,r8
   26bb4:	8b19883a 	add	r12,r17,r12
   26bb8:	0007883a 	mov	r3,zero
   26bbc:	81400017 	ldw	r5,0(r16)
   26bc0:	89c00017 	ldw	r7,0(r17)
   26bc4:	59800104 	addi	r6,r11,4
   26bc8:	293fffcc 	andi	r4,r5,65535
   26bcc:	20c7883a 	add	r3,r4,r3
   26bd0:	393fffcc 	andi	r4,r7,65535
   26bd4:	1909c83a 	sub	r4,r3,r4
   26bd8:	280ad43a 	srli	r5,r5,16
   26bdc:	380ed43a 	srli	r7,r7,16
   26be0:	2007d43a 	srai	r3,r4,16
   26be4:	213fffcc 	andi	r4,r4,65535
   26be8:	29cbc83a 	sub	r5,r5,r7
   26bec:	28c7883a 	add	r3,r5,r3
   26bf0:	180a943a 	slli	r5,r3,16
   26bf4:	8c400104 	addi	r17,r17,4
   26bf8:	84000104 	addi	r16,r16,4
   26bfc:	2908b03a 	or	r4,r5,r4
   26c00:	59000015 	stw	r4,0(r11)
   26c04:	1807d43a 	srai	r3,r3,16
   26c08:	3015883a 	mov	r10,r6
   26c0c:	3017883a 	mov	r11,r6
   26c10:	8b3fea36 	bltu	r17,r12,26bbc <__alt_data_end+0xfffe6bbc>
   26c14:	8200162e 	bgeu	r16,r8,26c70 <__mdiff+0x17c>
   26c18:	8017883a 	mov	r11,r16
   26c1c:	59400017 	ldw	r5,0(r11)
   26c20:	31800104 	addi	r6,r6,4
   26c24:	5ac00104 	addi	r11,r11,4
   26c28:	293fffcc 	andi	r4,r5,65535
   26c2c:	20c7883a 	add	r3,r4,r3
   26c30:	280ed43a 	srli	r7,r5,16
   26c34:	180bd43a 	srai	r5,r3,16
   26c38:	193fffcc 	andi	r4,r3,65535
   26c3c:	3947883a 	add	r3,r7,r5
   26c40:	180a943a 	slli	r5,r3,16
   26c44:	1807d43a 	srai	r3,r3,16
   26c48:	2908b03a 	or	r4,r5,r4
   26c4c:	313fff15 	stw	r4,-4(r6)
   26c50:	5a3ff236 	bltu	r11,r8,26c1c <__alt_data_end+0xfffe6c1c>
   26c54:	0406303a 	nor	r3,zero,r16
   26c58:	1a07883a 	add	r3,r3,r8
   26c5c:	1806d0ba 	srli	r3,r3,2
   26c60:	18c00044 	addi	r3,r3,1
   26c64:	18c7883a 	add	r3,r3,r3
   26c68:	18c7883a 	add	r3,r3,r3
   26c6c:	50d5883a 	add	r10,r10,r3
   26c70:	50ffff04 	addi	r3,r10,-4
   26c74:	2000041e 	bne	r4,zero,26c88 <__mdiff+0x194>
   26c78:	18ffff04 	addi	r3,r3,-4
   26c7c:	19000017 	ldw	r4,0(r3)
   26c80:	4a7fffc4 	addi	r9,r9,-1
   26c84:	203ffc26 	beq	r4,zero,26c78 <__alt_data_end+0xfffe6c78>
   26c88:	12400415 	stw	r9,16(r2)
   26c8c:	dfc00517 	ldw	ra,20(sp)
   26c90:	dd000417 	ldw	r20,16(sp)
   26c94:	dcc00317 	ldw	r19,12(sp)
   26c98:	dc800217 	ldw	r18,8(sp)
   26c9c:	dc400117 	ldw	r17,4(sp)
   26ca0:	dc000017 	ldw	r16,0(sp)
   26ca4:	dec00604 	addi	sp,sp,24
   26ca8:	f800283a 	ret
   26cac:	000b883a 	mov	r5,zero
   26cb0:	00261cc0 	call	261cc <_Balloc>
   26cb4:	00c00044 	movi	r3,1
   26cb8:	10c00415 	stw	r3,16(r2)
   26cbc:	10000515 	stw	zero,20(r2)
   26cc0:	003ff206 	br	26c8c <__alt_data_end+0xfffe6c8c>
   26cc4:	8023883a 	mov	r17,r16
   26cc8:	0029883a 	mov	r20,zero
   26ccc:	4021883a 	mov	r16,r8
   26cd0:	003fad06 	br	26b88 <__alt_data_end+0xfffe6b88>
   26cd4:	9005883a 	mov	r2,r18
   26cd8:	94400504 	addi	r17,r18,20
   26cdc:	9c000504 	addi	r16,r19,20
   26ce0:	9825883a 	mov	r18,r19
   26ce4:	05000044 	movi	r20,1
   26ce8:	1027883a 	mov	r19,r2
   26cec:	003fa606 	br	26b88 <__alt_data_end+0xfffe6b88>

00026cf0 <__ulp>:
   26cf0:	295ffc2c 	andhi	r5,r5,32752
   26cf4:	00bf3034 	movhi	r2,64704
   26cf8:	2887883a 	add	r3,r5,r2
   26cfc:	00c0020e 	bge	zero,r3,26d08 <__ulp+0x18>
   26d00:	0005883a 	mov	r2,zero
   26d04:	f800283a 	ret
   26d08:	00c7c83a 	sub	r3,zero,r3
   26d0c:	1807d53a 	srai	r3,r3,20
   26d10:	008004c4 	movi	r2,19
   26d14:	10c00b0e 	bge	r2,r3,26d44 <__ulp+0x54>
   26d18:	18bffb04 	addi	r2,r3,-20
   26d1c:	01000784 	movi	r4,30
   26d20:	0007883a 	mov	r3,zero
   26d24:	20800516 	blt	r4,r2,26d3c <__ulp+0x4c>
   26d28:	010007c4 	movi	r4,31
   26d2c:	2089c83a 	sub	r4,r4,r2
   26d30:	00800044 	movi	r2,1
   26d34:	1104983a 	sll	r2,r2,r4
   26d38:	f800283a 	ret
   26d3c:	00800044 	movi	r2,1
   26d40:	f800283a 	ret
   26d44:	01400234 	movhi	r5,8
   26d48:	28c7d83a 	sra	r3,r5,r3
   26d4c:	0005883a 	mov	r2,zero
   26d50:	f800283a 	ret

00026d54 <__b2d>:
   26d54:	defffa04 	addi	sp,sp,-24
   26d58:	dc000015 	stw	r16,0(sp)
   26d5c:	24000417 	ldw	r16,16(r4)
   26d60:	dc400115 	stw	r17,4(sp)
   26d64:	24400504 	addi	r17,r4,20
   26d68:	8421883a 	add	r16,r16,r16
   26d6c:	8421883a 	add	r16,r16,r16
   26d70:	8c21883a 	add	r16,r17,r16
   26d74:	dc800215 	stw	r18,8(sp)
   26d78:	84bfff17 	ldw	r18,-4(r16)
   26d7c:	dd000415 	stw	r20,16(sp)
   26d80:	dcc00315 	stw	r19,12(sp)
   26d84:	9009883a 	mov	r4,r18
   26d88:	2829883a 	mov	r20,r5
   26d8c:	dfc00515 	stw	ra,20(sp)
   26d90:	00264c00 	call	264c0 <__hi0bits>
   26d94:	00c00804 	movi	r3,32
   26d98:	1889c83a 	sub	r4,r3,r2
   26d9c:	a1000015 	stw	r4,0(r20)
   26da0:	01000284 	movi	r4,10
   26da4:	84ffff04 	addi	r19,r16,-4
   26da8:	20801216 	blt	r4,r2,26df4 <__b2d+0xa0>
   26dac:	018002c4 	movi	r6,11
   26db0:	308dc83a 	sub	r6,r6,r2
   26db4:	9186d83a 	srl	r3,r18,r6
   26db8:	18cffc34 	orhi	r3,r3,16368
   26dbc:	8cc0212e 	bgeu	r17,r19,26e44 <__b2d+0xf0>
   26dc0:	813ffe17 	ldw	r4,-8(r16)
   26dc4:	218cd83a 	srl	r6,r4,r6
   26dc8:	10800544 	addi	r2,r2,21
   26dcc:	9084983a 	sll	r2,r18,r2
   26dd0:	1184b03a 	or	r2,r2,r6
   26dd4:	dfc00517 	ldw	ra,20(sp)
   26dd8:	dd000417 	ldw	r20,16(sp)
   26ddc:	dcc00317 	ldw	r19,12(sp)
   26de0:	dc800217 	ldw	r18,8(sp)
   26de4:	dc400117 	ldw	r17,4(sp)
   26de8:	dc000017 	ldw	r16,0(sp)
   26dec:	dec00604 	addi	sp,sp,24
   26df0:	f800283a 	ret
   26df4:	8cc00f2e 	bgeu	r17,r19,26e34 <__b2d+0xe0>
   26df8:	117ffd44 	addi	r5,r2,-11
   26dfc:	80bffe17 	ldw	r2,-8(r16)
   26e00:	28000e26 	beq	r5,zero,26e3c <__b2d+0xe8>
   26e04:	1949c83a 	sub	r4,r3,r5
   26e08:	9164983a 	sll	r18,r18,r5
   26e0c:	1106d83a 	srl	r3,r2,r4
   26e10:	81bffe04 	addi	r6,r16,-8
   26e14:	948ffc34 	orhi	r18,r18,16368
   26e18:	90c6b03a 	or	r3,r18,r3
   26e1c:	89800e2e 	bgeu	r17,r6,26e58 <__b2d+0x104>
   26e20:	81bffd17 	ldw	r6,-12(r16)
   26e24:	1144983a 	sll	r2,r2,r5
   26e28:	310ad83a 	srl	r5,r6,r4
   26e2c:	2884b03a 	or	r2,r5,r2
   26e30:	003fe806 	br	26dd4 <__alt_data_end+0xfffe6dd4>
   26e34:	10bffd44 	addi	r2,r2,-11
   26e38:	1000041e 	bne	r2,zero,26e4c <__b2d+0xf8>
   26e3c:	90cffc34 	orhi	r3,r18,16368
   26e40:	003fe406 	br	26dd4 <__alt_data_end+0xfffe6dd4>
   26e44:	000d883a 	mov	r6,zero
   26e48:	003fdf06 	br	26dc8 <__alt_data_end+0xfffe6dc8>
   26e4c:	90a4983a 	sll	r18,r18,r2
   26e50:	0005883a 	mov	r2,zero
   26e54:	003ff906 	br	26e3c <__alt_data_end+0xfffe6e3c>
   26e58:	1144983a 	sll	r2,r2,r5
   26e5c:	003fdd06 	br	26dd4 <__alt_data_end+0xfffe6dd4>

00026e60 <__d2b>:
   26e60:	defff804 	addi	sp,sp,-32
   26e64:	dc000215 	stw	r16,8(sp)
   26e68:	3021883a 	mov	r16,r6
   26e6c:	dc400315 	stw	r17,12(sp)
   26e70:	8022907a 	slli	r17,r16,1
   26e74:	dd000615 	stw	r20,24(sp)
   26e78:	2829883a 	mov	r20,r5
   26e7c:	01400044 	movi	r5,1
   26e80:	dcc00515 	stw	r19,20(sp)
   26e84:	dc800415 	stw	r18,16(sp)
   26e88:	dfc00715 	stw	ra,28(sp)
   26e8c:	3825883a 	mov	r18,r7
   26e90:	8822d57a 	srli	r17,r17,21
   26e94:	00261cc0 	call	261cc <_Balloc>
   26e98:	1027883a 	mov	r19,r2
   26e9c:	00800434 	movhi	r2,16
   26ea0:	10bfffc4 	addi	r2,r2,-1
   26ea4:	808c703a 	and	r6,r16,r2
   26ea8:	88000126 	beq	r17,zero,26eb0 <__d2b+0x50>
   26eac:	31800434 	orhi	r6,r6,16
   26eb0:	d9800015 	stw	r6,0(sp)
   26eb4:	a0002426 	beq	r20,zero,26f48 <__d2b+0xe8>
   26eb8:	d9000104 	addi	r4,sp,4
   26ebc:	dd000115 	stw	r20,4(sp)
   26ec0:	00265280 	call	26528 <__lo0bits>
   26ec4:	d8c00017 	ldw	r3,0(sp)
   26ec8:	10002f1e 	bne	r2,zero,26f88 <__d2b+0x128>
   26ecc:	d9000117 	ldw	r4,4(sp)
   26ed0:	99000515 	stw	r4,20(r19)
   26ed4:	1821003a 	cmpeq	r16,r3,zero
   26ed8:	01000084 	movi	r4,2
   26edc:	2421c83a 	sub	r16,r4,r16
   26ee0:	98c00615 	stw	r3,24(r19)
   26ee4:	9c000415 	stw	r16,16(r19)
   26ee8:	88001f1e 	bne	r17,zero,26f68 <__d2b+0x108>
   26eec:	10bef384 	addi	r2,r2,-1074
   26ef0:	90800015 	stw	r2,0(r18)
   26ef4:	00900034 	movhi	r2,16384
   26ef8:	10bfffc4 	addi	r2,r2,-1
   26efc:	8085883a 	add	r2,r16,r2
   26f00:	1085883a 	add	r2,r2,r2
   26f04:	1085883a 	add	r2,r2,r2
   26f08:	9885883a 	add	r2,r19,r2
   26f0c:	11000517 	ldw	r4,20(r2)
   26f10:	8020917a 	slli	r16,r16,5
   26f14:	00264c00 	call	264c0 <__hi0bits>
   26f18:	d8c00817 	ldw	r3,32(sp)
   26f1c:	8085c83a 	sub	r2,r16,r2
   26f20:	18800015 	stw	r2,0(r3)
   26f24:	9805883a 	mov	r2,r19
   26f28:	dfc00717 	ldw	ra,28(sp)
   26f2c:	dd000617 	ldw	r20,24(sp)
   26f30:	dcc00517 	ldw	r19,20(sp)
   26f34:	dc800417 	ldw	r18,16(sp)
   26f38:	dc400317 	ldw	r17,12(sp)
   26f3c:	dc000217 	ldw	r16,8(sp)
   26f40:	dec00804 	addi	sp,sp,32
   26f44:	f800283a 	ret
   26f48:	d809883a 	mov	r4,sp
   26f4c:	00265280 	call	26528 <__lo0bits>
   26f50:	d8c00017 	ldw	r3,0(sp)
   26f54:	04000044 	movi	r16,1
   26f58:	9c000415 	stw	r16,16(r19)
   26f5c:	98c00515 	stw	r3,20(r19)
   26f60:	10800804 	addi	r2,r2,32
   26f64:	883fe126 	beq	r17,zero,26eec <__alt_data_end+0xfffe6eec>
   26f68:	00c00d44 	movi	r3,53
   26f6c:	8c7ef344 	addi	r17,r17,-1075
   26f70:	88a3883a 	add	r17,r17,r2
   26f74:	1885c83a 	sub	r2,r3,r2
   26f78:	d8c00817 	ldw	r3,32(sp)
   26f7c:	94400015 	stw	r17,0(r18)
   26f80:	18800015 	stw	r2,0(r3)
   26f84:	003fe706 	br	26f24 <__alt_data_end+0xfffe6f24>
   26f88:	01000804 	movi	r4,32
   26f8c:	2089c83a 	sub	r4,r4,r2
   26f90:	1908983a 	sll	r4,r3,r4
   26f94:	d9400117 	ldw	r5,4(sp)
   26f98:	1886d83a 	srl	r3,r3,r2
   26f9c:	2148b03a 	or	r4,r4,r5
   26fa0:	99000515 	stw	r4,20(r19)
   26fa4:	d8c00015 	stw	r3,0(sp)
   26fa8:	003fca06 	br	26ed4 <__alt_data_end+0xfffe6ed4>

00026fac <__ratio>:
   26fac:	defff904 	addi	sp,sp,-28
   26fb0:	dc400315 	stw	r17,12(sp)
   26fb4:	2823883a 	mov	r17,r5
   26fb8:	d9400104 	addi	r5,sp,4
   26fbc:	dfc00615 	stw	ra,24(sp)
   26fc0:	dcc00515 	stw	r19,20(sp)
   26fc4:	dc800415 	stw	r18,16(sp)
   26fc8:	2027883a 	mov	r19,r4
   26fcc:	dc000215 	stw	r16,8(sp)
   26fd0:	0026d540 	call	26d54 <__b2d>
   26fd4:	d80b883a 	mov	r5,sp
   26fd8:	8809883a 	mov	r4,r17
   26fdc:	1025883a 	mov	r18,r2
   26fe0:	1821883a 	mov	r16,r3
   26fe4:	0026d540 	call	26d54 <__b2d>
   26fe8:	8a000417 	ldw	r8,16(r17)
   26fec:	99000417 	ldw	r4,16(r19)
   26ff0:	d9400117 	ldw	r5,4(sp)
   26ff4:	2209c83a 	sub	r4,r4,r8
   26ff8:	2010917a 	slli	r8,r4,5
   26ffc:	d9000017 	ldw	r4,0(sp)
   27000:	2909c83a 	sub	r4,r5,r4
   27004:	4109883a 	add	r4,r8,r4
   27008:	01000e0e 	bge	zero,r4,27044 <__ratio+0x98>
   2700c:	2008953a 	slli	r4,r4,20
   27010:	2421883a 	add	r16,r4,r16
   27014:	100d883a 	mov	r6,r2
   27018:	180f883a 	mov	r7,r3
   2701c:	9009883a 	mov	r4,r18
   27020:	800b883a 	mov	r5,r16
   27024:	002ae980 	call	2ae98 <__divdf3>
   27028:	dfc00617 	ldw	ra,24(sp)
   2702c:	dcc00517 	ldw	r19,20(sp)
   27030:	dc800417 	ldw	r18,16(sp)
   27034:	dc400317 	ldw	r17,12(sp)
   27038:	dc000217 	ldw	r16,8(sp)
   2703c:	dec00704 	addi	sp,sp,28
   27040:	f800283a 	ret
   27044:	2008953a 	slli	r4,r4,20
   27048:	1907c83a 	sub	r3,r3,r4
   2704c:	003ff106 	br	27014 <__alt_data_end+0xfffe7014>

00027050 <_mprec_log10>:
   27050:	defffe04 	addi	sp,sp,-8
   27054:	dc000015 	stw	r16,0(sp)
   27058:	dfc00115 	stw	ra,4(sp)
   2705c:	008005c4 	movi	r2,23
   27060:	2021883a 	mov	r16,r4
   27064:	11000d0e 	bge	r2,r4,2709c <_mprec_log10+0x4c>
   27068:	0005883a 	mov	r2,zero
   2706c:	00cffc34 	movhi	r3,16368
   27070:	843fffc4 	addi	r16,r16,-1
   27074:	000d883a 	mov	r6,zero
   27078:	01d00934 	movhi	r7,16420
   2707c:	1009883a 	mov	r4,r2
   27080:	180b883a 	mov	r5,r3
   27084:	002b9d80 	call	2b9d8 <__muldf3>
   27088:	803ff91e 	bne	r16,zero,27070 <__alt_data_end+0xfffe7070>
   2708c:	dfc00117 	ldw	ra,4(sp)
   27090:	dc000017 	ldw	r16,0(sp)
   27094:	dec00204 	addi	sp,sp,8
   27098:	f800283a 	ret
   2709c:	202090fa 	slli	r16,r4,3
   270a0:	008000f4 	movhi	r2,3
   270a4:	10bd4404 	addi	r2,r2,-2800
   270a8:	1421883a 	add	r16,r2,r16
   270ac:	80800017 	ldw	r2,0(r16)
   270b0:	80c00117 	ldw	r3,4(r16)
   270b4:	dfc00117 	ldw	ra,4(sp)
   270b8:	dc000017 	ldw	r16,0(sp)
   270bc:	dec00204 	addi	sp,sp,8
   270c0:	f800283a 	ret

000270c4 <__copybits>:
   270c4:	297fffc4 	addi	r5,r5,-1
   270c8:	280fd17a 	srai	r7,r5,5
   270cc:	30c00417 	ldw	r3,16(r6)
   270d0:	30800504 	addi	r2,r6,20
   270d4:	39c00044 	addi	r7,r7,1
   270d8:	18c7883a 	add	r3,r3,r3
   270dc:	39cf883a 	add	r7,r7,r7
   270e0:	18c7883a 	add	r3,r3,r3
   270e4:	39cf883a 	add	r7,r7,r7
   270e8:	10c7883a 	add	r3,r2,r3
   270ec:	21cf883a 	add	r7,r4,r7
   270f0:	10c00d2e 	bgeu	r2,r3,27128 <__copybits+0x64>
   270f4:	200b883a 	mov	r5,r4
   270f8:	12000017 	ldw	r8,0(r2)
   270fc:	29400104 	addi	r5,r5,4
   27100:	10800104 	addi	r2,r2,4
   27104:	2a3fff15 	stw	r8,-4(r5)
   27108:	10fffb36 	bltu	r2,r3,270f8 <__alt_data_end+0xfffe70f8>
   2710c:	1985c83a 	sub	r2,r3,r6
   27110:	10bffac4 	addi	r2,r2,-21
   27114:	1004d0ba 	srli	r2,r2,2
   27118:	10800044 	addi	r2,r2,1
   2711c:	1085883a 	add	r2,r2,r2
   27120:	1085883a 	add	r2,r2,r2
   27124:	2089883a 	add	r4,r4,r2
   27128:	21c0032e 	bgeu	r4,r7,27138 <__copybits+0x74>
   2712c:	20000015 	stw	zero,0(r4)
   27130:	21000104 	addi	r4,r4,4
   27134:	21fffd36 	bltu	r4,r7,2712c <__alt_data_end+0xfffe712c>
   27138:	f800283a 	ret

0002713c <__any_on>:
   2713c:	20c00417 	ldw	r3,16(r4)
   27140:	2805d17a 	srai	r2,r5,5
   27144:	21000504 	addi	r4,r4,20
   27148:	18800d0e 	bge	r3,r2,27180 <__any_on+0x44>
   2714c:	18c7883a 	add	r3,r3,r3
   27150:	18c7883a 	add	r3,r3,r3
   27154:	20c7883a 	add	r3,r4,r3
   27158:	20c0192e 	bgeu	r4,r3,271c0 <__any_on+0x84>
   2715c:	18bfff17 	ldw	r2,-4(r3)
   27160:	18ffff04 	addi	r3,r3,-4
   27164:	1000041e 	bne	r2,zero,27178 <__any_on+0x3c>
   27168:	20c0142e 	bgeu	r4,r3,271bc <__any_on+0x80>
   2716c:	18ffff04 	addi	r3,r3,-4
   27170:	19400017 	ldw	r5,0(r3)
   27174:	283ffc26 	beq	r5,zero,27168 <__alt_data_end+0xfffe7168>
   27178:	00800044 	movi	r2,1
   2717c:	f800283a 	ret
   27180:	10c00a0e 	bge	r2,r3,271ac <__any_on+0x70>
   27184:	1085883a 	add	r2,r2,r2
   27188:	1085883a 	add	r2,r2,r2
   2718c:	294007cc 	andi	r5,r5,31
   27190:	2087883a 	add	r3,r4,r2
   27194:	283ff026 	beq	r5,zero,27158 <__alt_data_end+0xfffe7158>
   27198:	19800017 	ldw	r6,0(r3)
   2719c:	3144d83a 	srl	r2,r6,r5
   271a0:	114a983a 	sll	r5,r2,r5
   271a4:	317ff41e 	bne	r6,r5,27178 <__alt_data_end+0xfffe7178>
   271a8:	003feb06 	br	27158 <__alt_data_end+0xfffe7158>
   271ac:	1085883a 	add	r2,r2,r2
   271b0:	1085883a 	add	r2,r2,r2
   271b4:	2087883a 	add	r3,r4,r2
   271b8:	003fe706 	br	27158 <__alt_data_end+0xfffe7158>
   271bc:	f800283a 	ret
   271c0:	0005883a 	mov	r2,zero
   271c4:	f800283a 	ret

000271c8 <_realloc_r>:
   271c8:	defff604 	addi	sp,sp,-40
   271cc:	dc400115 	stw	r17,4(sp)
   271d0:	dfc00915 	stw	ra,36(sp)
   271d4:	df000815 	stw	fp,32(sp)
   271d8:	ddc00715 	stw	r23,28(sp)
   271dc:	dd800615 	stw	r22,24(sp)
   271e0:	dd400515 	stw	r21,20(sp)
   271e4:	dd000415 	stw	r20,16(sp)
   271e8:	dcc00315 	stw	r19,12(sp)
   271ec:	dc800215 	stw	r18,8(sp)
   271f0:	dc000015 	stw	r16,0(sp)
   271f4:	3023883a 	mov	r17,r6
   271f8:	2800b626 	beq	r5,zero,274d4 <_realloc_r+0x30c>
   271fc:	2829883a 	mov	r20,r5
   27200:	2025883a 	mov	r18,r4
   27204:	002d2200 	call	2d220 <__malloc_lock>
   27208:	a0ffff17 	ldw	r3,-4(r20)
   2720c:	043fff04 	movi	r16,-4
   27210:	888002c4 	addi	r2,r17,11
   27214:	01000584 	movi	r4,22
   27218:	a57ffe04 	addi	r21,r20,-8
   2721c:	1c20703a 	and	r16,r3,r16
   27220:	2080332e 	bgeu	r4,r2,272f0 <_realloc_r+0x128>
   27224:	05bffe04 	movi	r22,-8
   27228:	15ac703a 	and	r22,r2,r22
   2722c:	b005883a 	mov	r2,r22
   27230:	b0005716 	blt	r22,zero,27390 <_realloc_r+0x1c8>
   27234:	b4405636 	bltu	r22,r17,27390 <_realloc_r+0x1c8>
   27238:	8080300e 	bge	r16,r2,272fc <_realloc_r+0x134>
   2723c:	070000f4 	movhi	fp,3
   27240:	e73ef204 	addi	fp,fp,-1080
   27244:	e2000217 	ldw	r8,8(fp)
   27248:	ac09883a 	add	r4,r21,r16
   2724c:	22006126 	beq	r4,r8,273d4 <_realloc_r+0x20c>
   27250:	22400117 	ldw	r9,4(r4)
   27254:	01ffff84 	movi	r7,-2
   27258:	49ce703a 	and	r7,r9,r7
   2725c:	21cf883a 	add	r7,r4,r7
   27260:	39800117 	ldw	r6,4(r7)
   27264:	3180004c 	andi	r6,r6,1
   27268:	30003e26 	beq	r6,zero,27364 <_realloc_r+0x19c>
   2726c:	18c0004c 	andi	r3,r3,1
   27270:	18008126 	beq	r3,zero,27478 <_realloc_r+0x2b0>
   27274:	880b883a 	mov	r5,r17
   27278:	9009883a 	mov	r4,r18
   2727c:	00255100 	call	25510 <_malloc_r>
   27280:	1023883a 	mov	r17,r2
   27284:	10011e26 	beq	r2,zero,27700 <_realloc_r+0x538>
   27288:	a0ffff17 	ldw	r3,-4(r20)
   2728c:	113ffe04 	addi	r4,r2,-8
   27290:	00bfff84 	movi	r2,-2
   27294:	1884703a 	and	r2,r3,r2
   27298:	a885883a 	add	r2,r21,r2
   2729c:	2080ee26 	beq	r4,r2,27658 <_realloc_r+0x490>
   272a0:	81bfff04 	addi	r6,r16,-4
   272a4:	00800904 	movi	r2,36
   272a8:	1180b836 	bltu	r2,r6,2758c <_realloc_r+0x3c4>
   272ac:	00c004c4 	movi	r3,19
   272b0:	19809536 	bltu	r3,r6,27508 <_realloc_r+0x340>
   272b4:	8805883a 	mov	r2,r17
   272b8:	a007883a 	mov	r3,r20
   272bc:	19000017 	ldw	r4,0(r3)
   272c0:	11000015 	stw	r4,0(r2)
   272c4:	19000117 	ldw	r4,4(r3)
   272c8:	11000115 	stw	r4,4(r2)
   272cc:	18c00217 	ldw	r3,8(r3)
   272d0:	10c00215 	stw	r3,8(r2)
   272d4:	a00b883a 	mov	r5,r20
   272d8:	9009883a 	mov	r4,r18
   272dc:	00249240 	call	24924 <_free_r>
   272e0:	9009883a 	mov	r4,r18
   272e4:	002d2440 	call	2d244 <__malloc_unlock>
   272e8:	8805883a 	mov	r2,r17
   272ec:	00001106 	br	27334 <_realloc_r+0x16c>
   272f0:	00800404 	movi	r2,16
   272f4:	102d883a 	mov	r22,r2
   272f8:	003fce06 	br	27234 <__alt_data_end+0xfffe7234>
   272fc:	a023883a 	mov	r17,r20
   27300:	858fc83a 	sub	r7,r16,r22
   27304:	008003c4 	movi	r2,15
   27308:	18c0004c 	andi	r3,r3,1
   2730c:	11c02436 	bltu	r2,r7,273a0 <_realloc_r+0x1d8>
   27310:	1c06b03a 	or	r3,r3,r16
   27314:	a8c00115 	stw	r3,4(r21)
   27318:	ac21883a 	add	r16,r21,r16
   2731c:	80800117 	ldw	r2,4(r16)
   27320:	10800054 	ori	r2,r2,1
   27324:	80800115 	stw	r2,4(r16)
   27328:	9009883a 	mov	r4,r18
   2732c:	002d2440 	call	2d244 <__malloc_unlock>
   27330:	8805883a 	mov	r2,r17
   27334:	dfc00917 	ldw	ra,36(sp)
   27338:	df000817 	ldw	fp,32(sp)
   2733c:	ddc00717 	ldw	r23,28(sp)
   27340:	dd800617 	ldw	r22,24(sp)
   27344:	dd400517 	ldw	r21,20(sp)
   27348:	dd000417 	ldw	r20,16(sp)
   2734c:	dcc00317 	ldw	r19,12(sp)
   27350:	dc800217 	ldw	r18,8(sp)
   27354:	dc400117 	ldw	r17,4(sp)
   27358:	dc000017 	ldw	r16,0(sp)
   2735c:	dec00a04 	addi	sp,sp,40
   27360:	f800283a 	ret
   27364:	017fff04 	movi	r5,-4
   27368:	494a703a 	and	r5,r9,r5
   2736c:	814d883a 	add	r6,r16,r5
   27370:	30801e16 	blt	r6,r2,273ec <_realloc_r+0x224>
   27374:	20800317 	ldw	r2,12(r4)
   27378:	21000217 	ldw	r4,8(r4)
   2737c:	a023883a 	mov	r17,r20
   27380:	3021883a 	mov	r16,r6
   27384:	20800315 	stw	r2,12(r4)
   27388:	11000215 	stw	r4,8(r2)
   2738c:	003fdc06 	br	27300 <__alt_data_end+0xfffe7300>
   27390:	00800304 	movi	r2,12
   27394:	90800015 	stw	r2,0(r18)
   27398:	0005883a 	mov	r2,zero
   2739c:	003fe506 	br	27334 <__alt_data_end+0xfffe7334>
   273a0:	1d86b03a 	or	r3,r3,r22
   273a4:	a8c00115 	stw	r3,4(r21)
   273a8:	ad8b883a 	add	r5,r21,r22
   273ac:	38c00054 	ori	r3,r7,1
   273b0:	28c00115 	stw	r3,4(r5)
   273b4:	29cf883a 	add	r7,r5,r7
   273b8:	38c00117 	ldw	r3,4(r7)
   273bc:	29400204 	addi	r5,r5,8
   273c0:	9009883a 	mov	r4,r18
   273c4:	18800054 	ori	r2,r3,1
   273c8:	38800115 	stw	r2,4(r7)
   273cc:	00249240 	call	24924 <_free_r>
   273d0:	003fd506 	br	27328 <__alt_data_end+0xfffe7328>
   273d4:	21c00117 	ldw	r7,4(r4)
   273d8:	017fff04 	movi	r5,-4
   273dc:	b1800404 	addi	r6,r22,16
   273e0:	394a703a 	and	r5,r7,r5
   273e4:	814f883a 	add	r7,r16,r5
   273e8:	39805b0e 	bge	r7,r6,27558 <_realloc_r+0x390>
   273ec:	18c0004c 	andi	r3,r3,1
   273f0:	183fa01e 	bne	r3,zero,27274 <__alt_data_end+0xfffe7274>
   273f4:	a4fffe17 	ldw	r19,-8(r20)
   273f8:	00ffff04 	movi	r3,-4
   273fc:	ace7c83a 	sub	r19,r21,r19
   27400:	99800117 	ldw	r6,4(r19)
   27404:	30c6703a 	and	r3,r6,r3
   27408:	20002026 	beq	r4,zero,2748c <_realloc_r+0x2c4>
   2740c:	80ef883a 	add	r23,r16,r3
   27410:	b96f883a 	add	r23,r23,r5
   27414:	22006126 	beq	r4,r8,2759c <_realloc_r+0x3d4>
   27418:	b8801c16 	blt	r23,r2,2748c <_realloc_r+0x2c4>
   2741c:	20800317 	ldw	r2,12(r4)
   27420:	20c00217 	ldw	r3,8(r4)
   27424:	81bfff04 	addi	r6,r16,-4
   27428:	01000904 	movi	r4,36
   2742c:	18800315 	stw	r2,12(r3)
   27430:	10c00215 	stw	r3,8(r2)
   27434:	98c00217 	ldw	r3,8(r19)
   27438:	98800317 	ldw	r2,12(r19)
   2743c:	9c400204 	addi	r17,r19,8
   27440:	18800315 	stw	r2,12(r3)
   27444:	10c00215 	stw	r3,8(r2)
   27448:	21801b36 	bltu	r4,r6,274b8 <_realloc_r+0x2f0>
   2744c:	008004c4 	movi	r2,19
   27450:	1180362e 	bgeu	r2,r6,2752c <_realloc_r+0x364>
   27454:	a0800017 	ldw	r2,0(r20)
   27458:	98800215 	stw	r2,8(r19)
   2745c:	a0800117 	ldw	r2,4(r20)
   27460:	98800315 	stw	r2,12(r19)
   27464:	008006c4 	movi	r2,27
   27468:	11808136 	bltu	r2,r6,27670 <_realloc_r+0x4a8>
   2746c:	98800404 	addi	r2,r19,16
   27470:	a5000204 	addi	r20,r20,8
   27474:	00002e06 	br	27530 <_realloc_r+0x368>
   27478:	a4fffe17 	ldw	r19,-8(r20)
   2747c:	00ffff04 	movi	r3,-4
   27480:	ace7c83a 	sub	r19,r21,r19
   27484:	99000117 	ldw	r4,4(r19)
   27488:	20c6703a 	and	r3,r4,r3
   2748c:	983f7926 	beq	r19,zero,27274 <__alt_data_end+0xfffe7274>
   27490:	80ef883a 	add	r23,r16,r3
   27494:	b8bf7716 	blt	r23,r2,27274 <__alt_data_end+0xfffe7274>
   27498:	98800317 	ldw	r2,12(r19)
   2749c:	98c00217 	ldw	r3,8(r19)
   274a0:	81bfff04 	addi	r6,r16,-4
   274a4:	01000904 	movi	r4,36
   274a8:	18800315 	stw	r2,12(r3)
   274ac:	10c00215 	stw	r3,8(r2)
   274b0:	9c400204 	addi	r17,r19,8
   274b4:	21bfe52e 	bgeu	r4,r6,2744c <__alt_data_end+0xfffe744c>
   274b8:	a00b883a 	mov	r5,r20
   274bc:	8809883a 	mov	r4,r17
   274c0:	0025f480 	call	25f48 <memmove>
   274c4:	98c00117 	ldw	r3,4(r19)
   274c8:	b821883a 	mov	r16,r23
   274cc:	982b883a 	mov	r21,r19
   274d0:	003f8b06 	br	27300 <__alt_data_end+0xfffe7300>
   274d4:	300b883a 	mov	r5,r6
   274d8:	dfc00917 	ldw	ra,36(sp)
   274dc:	df000817 	ldw	fp,32(sp)
   274e0:	ddc00717 	ldw	r23,28(sp)
   274e4:	dd800617 	ldw	r22,24(sp)
   274e8:	dd400517 	ldw	r21,20(sp)
   274ec:	dd000417 	ldw	r20,16(sp)
   274f0:	dcc00317 	ldw	r19,12(sp)
   274f4:	dc800217 	ldw	r18,8(sp)
   274f8:	dc400117 	ldw	r17,4(sp)
   274fc:	dc000017 	ldw	r16,0(sp)
   27500:	dec00a04 	addi	sp,sp,40
   27504:	00255101 	jmpi	25510 <_malloc_r>
   27508:	a0c00017 	ldw	r3,0(r20)
   2750c:	88c00015 	stw	r3,0(r17)
   27510:	a0c00117 	ldw	r3,4(r20)
   27514:	88c00115 	stw	r3,4(r17)
   27518:	00c006c4 	movi	r3,27
   2751c:	19804636 	bltu	r3,r6,27638 <_realloc_r+0x470>
   27520:	88800204 	addi	r2,r17,8
   27524:	a0c00204 	addi	r3,r20,8
   27528:	003f6406 	br	272bc <__alt_data_end+0xfffe72bc>
   2752c:	8805883a 	mov	r2,r17
   27530:	a0c00017 	ldw	r3,0(r20)
   27534:	b821883a 	mov	r16,r23
   27538:	982b883a 	mov	r21,r19
   2753c:	10c00015 	stw	r3,0(r2)
   27540:	a0c00117 	ldw	r3,4(r20)
   27544:	10c00115 	stw	r3,4(r2)
   27548:	a0c00217 	ldw	r3,8(r20)
   2754c:	10c00215 	stw	r3,8(r2)
   27550:	98c00117 	ldw	r3,4(r19)
   27554:	003f6a06 	br	27300 <__alt_data_end+0xfffe7300>
   27558:	adab883a 	add	r21,r21,r22
   2755c:	3d85c83a 	sub	r2,r7,r22
   27560:	e5400215 	stw	r21,8(fp)
   27564:	10800054 	ori	r2,r2,1
   27568:	a8800115 	stw	r2,4(r21)
   2756c:	a0bfff17 	ldw	r2,-4(r20)
   27570:	9009883a 	mov	r4,r18
   27574:	1080004c 	andi	r2,r2,1
   27578:	1584b03a 	or	r2,r2,r22
   2757c:	a0bfff15 	stw	r2,-4(r20)
   27580:	002d2440 	call	2d244 <__malloc_unlock>
   27584:	a005883a 	mov	r2,r20
   27588:	003f6a06 	br	27334 <__alt_data_end+0xfffe7334>
   2758c:	a00b883a 	mov	r5,r20
   27590:	8809883a 	mov	r4,r17
   27594:	0025f480 	call	25f48 <memmove>
   27598:	003f4e06 	br	272d4 <__alt_data_end+0xfffe72d4>
   2759c:	b1000404 	addi	r4,r22,16
   275a0:	b93fba16 	blt	r23,r4,2748c <__alt_data_end+0xfffe748c>
   275a4:	98800317 	ldw	r2,12(r19)
   275a8:	98c00217 	ldw	r3,8(r19)
   275ac:	81bfff04 	addi	r6,r16,-4
   275b0:	01000904 	movi	r4,36
   275b4:	18800315 	stw	r2,12(r3)
   275b8:	10c00215 	stw	r3,8(r2)
   275bc:	9c400204 	addi	r17,r19,8
   275c0:	21804336 	bltu	r4,r6,276d0 <_realloc_r+0x508>
   275c4:	008004c4 	movi	r2,19
   275c8:	11803f2e 	bgeu	r2,r6,276c8 <_realloc_r+0x500>
   275cc:	a0800017 	ldw	r2,0(r20)
   275d0:	98800215 	stw	r2,8(r19)
   275d4:	a0800117 	ldw	r2,4(r20)
   275d8:	98800315 	stw	r2,12(r19)
   275dc:	008006c4 	movi	r2,27
   275e0:	11803f36 	bltu	r2,r6,276e0 <_realloc_r+0x518>
   275e4:	98800404 	addi	r2,r19,16
   275e8:	a5000204 	addi	r20,r20,8
   275ec:	a0c00017 	ldw	r3,0(r20)
   275f0:	10c00015 	stw	r3,0(r2)
   275f4:	a0c00117 	ldw	r3,4(r20)
   275f8:	10c00115 	stw	r3,4(r2)
   275fc:	a0c00217 	ldw	r3,8(r20)
   27600:	10c00215 	stw	r3,8(r2)
   27604:	9d87883a 	add	r3,r19,r22
   27608:	bd85c83a 	sub	r2,r23,r22
   2760c:	e0c00215 	stw	r3,8(fp)
   27610:	10800054 	ori	r2,r2,1
   27614:	18800115 	stw	r2,4(r3)
   27618:	98800117 	ldw	r2,4(r19)
   2761c:	9009883a 	mov	r4,r18
   27620:	1080004c 	andi	r2,r2,1
   27624:	1584b03a 	or	r2,r2,r22
   27628:	98800115 	stw	r2,4(r19)
   2762c:	002d2440 	call	2d244 <__malloc_unlock>
   27630:	8805883a 	mov	r2,r17
   27634:	003f3f06 	br	27334 <__alt_data_end+0xfffe7334>
   27638:	a0c00217 	ldw	r3,8(r20)
   2763c:	88c00215 	stw	r3,8(r17)
   27640:	a0c00317 	ldw	r3,12(r20)
   27644:	88c00315 	stw	r3,12(r17)
   27648:	30801126 	beq	r6,r2,27690 <_realloc_r+0x4c8>
   2764c:	88800404 	addi	r2,r17,16
   27650:	a0c00404 	addi	r3,r20,16
   27654:	003f1906 	br	272bc <__alt_data_end+0xfffe72bc>
   27658:	893fff17 	ldw	r4,-4(r17)
   2765c:	00bfff04 	movi	r2,-4
   27660:	a023883a 	mov	r17,r20
   27664:	2084703a 	and	r2,r4,r2
   27668:	80a1883a 	add	r16,r16,r2
   2766c:	003f2406 	br	27300 <__alt_data_end+0xfffe7300>
   27670:	a0800217 	ldw	r2,8(r20)
   27674:	98800415 	stw	r2,16(r19)
   27678:	a0800317 	ldw	r2,12(r20)
   2767c:	98800515 	stw	r2,20(r19)
   27680:	31000a26 	beq	r6,r4,276ac <_realloc_r+0x4e4>
   27684:	98800604 	addi	r2,r19,24
   27688:	a5000404 	addi	r20,r20,16
   2768c:	003fa806 	br	27530 <__alt_data_end+0xfffe7530>
   27690:	a1000417 	ldw	r4,16(r20)
   27694:	88800604 	addi	r2,r17,24
   27698:	a0c00604 	addi	r3,r20,24
   2769c:	89000415 	stw	r4,16(r17)
   276a0:	a1000517 	ldw	r4,20(r20)
   276a4:	89000515 	stw	r4,20(r17)
   276a8:	003f0406 	br	272bc <__alt_data_end+0xfffe72bc>
   276ac:	a0c00417 	ldw	r3,16(r20)
   276b0:	a5000604 	addi	r20,r20,24
   276b4:	98800804 	addi	r2,r19,32
   276b8:	98c00615 	stw	r3,24(r19)
   276bc:	a0ffff17 	ldw	r3,-4(r20)
   276c0:	98c00715 	stw	r3,28(r19)
   276c4:	003f9a06 	br	27530 <__alt_data_end+0xfffe7530>
   276c8:	8805883a 	mov	r2,r17
   276cc:	003fc706 	br	275ec <__alt_data_end+0xfffe75ec>
   276d0:	a00b883a 	mov	r5,r20
   276d4:	8809883a 	mov	r4,r17
   276d8:	0025f480 	call	25f48 <memmove>
   276dc:	003fc906 	br	27604 <__alt_data_end+0xfffe7604>
   276e0:	a0800217 	ldw	r2,8(r20)
   276e4:	98800415 	stw	r2,16(r19)
   276e8:	a0800317 	ldw	r2,12(r20)
   276ec:	98800515 	stw	r2,20(r19)
   276f0:	31000726 	beq	r6,r4,27710 <_realloc_r+0x548>
   276f4:	98800604 	addi	r2,r19,24
   276f8:	a5000404 	addi	r20,r20,16
   276fc:	003fbb06 	br	275ec <__alt_data_end+0xfffe75ec>
   27700:	9009883a 	mov	r4,r18
   27704:	002d2440 	call	2d244 <__malloc_unlock>
   27708:	0005883a 	mov	r2,zero
   2770c:	003f0906 	br	27334 <__alt_data_end+0xfffe7334>
   27710:	a0c00417 	ldw	r3,16(r20)
   27714:	a5000604 	addi	r20,r20,24
   27718:	98800804 	addi	r2,r19,32
   2771c:	98c00615 	stw	r3,24(r19)
   27720:	a0ffff17 	ldw	r3,-4(r20)
   27724:	98c00715 	stw	r3,28(r19)
   27728:	003fb006 	br	275ec <__alt_data_end+0xfffe75ec>

0002772c <__fpclassifyd>:
   2772c:	00a00034 	movhi	r2,32768
   27730:	10bfffc4 	addi	r2,r2,-1
   27734:	2884703a 	and	r2,r5,r2
   27738:	10000726 	beq	r2,zero,27758 <__fpclassifyd+0x2c>
   2773c:	00fffc34 	movhi	r3,65520
   27740:	019ff834 	movhi	r6,32736
   27744:	28c7883a 	add	r3,r5,r3
   27748:	31bfffc4 	addi	r6,r6,-1
   2774c:	30c00536 	bltu	r6,r3,27764 <__fpclassifyd+0x38>
   27750:	00800104 	movi	r2,4
   27754:	f800283a 	ret
   27758:	2000021e 	bne	r4,zero,27764 <__fpclassifyd+0x38>
   2775c:	00800084 	movi	r2,2
   27760:	f800283a 	ret
   27764:	00dffc34 	movhi	r3,32752
   27768:	019ff834 	movhi	r6,32736
   2776c:	28cb883a 	add	r5,r5,r3
   27770:	31bfffc4 	addi	r6,r6,-1
   27774:	317ff62e 	bgeu	r6,r5,27750 <__alt_data_end+0xfffe7750>
   27778:	01400434 	movhi	r5,16
   2777c:	297fffc4 	addi	r5,r5,-1
   27780:	28800236 	bltu	r5,r2,2778c <__fpclassifyd+0x60>
   27784:	008000c4 	movi	r2,3
   27788:	f800283a 	ret
   2778c:	10c00226 	beq	r2,r3,27798 <__fpclassifyd+0x6c>
   27790:	0005883a 	mov	r2,zero
   27794:	f800283a 	ret
   27798:	2005003a 	cmpeq	r2,r4,zero
   2779c:	f800283a 	ret

000277a0 <_sbrk_r>:
   277a0:	defffd04 	addi	sp,sp,-12
   277a4:	dc000015 	stw	r16,0(sp)
   277a8:	040000f4 	movhi	r16,3
   277ac:	dc400115 	stw	r17,4(sp)
   277b0:	840b4704 	addi	r16,r16,11548
   277b4:	2023883a 	mov	r17,r4
   277b8:	2809883a 	mov	r4,r5
   277bc:	dfc00215 	stw	ra,8(sp)
   277c0:	80000015 	stw	zero,0(r16)
   277c4:	002d4180 	call	2d418 <sbrk>
   277c8:	00ffffc4 	movi	r3,-1
   277cc:	10c00526 	beq	r2,r3,277e4 <_sbrk_r+0x44>
   277d0:	dfc00217 	ldw	ra,8(sp)
   277d4:	dc400117 	ldw	r17,4(sp)
   277d8:	dc000017 	ldw	r16,0(sp)
   277dc:	dec00304 	addi	sp,sp,12
   277e0:	f800283a 	ret
   277e4:	80c00017 	ldw	r3,0(r16)
   277e8:	183ff926 	beq	r3,zero,277d0 <__alt_data_end+0xfffe77d0>
   277ec:	88c00015 	stw	r3,0(r17)
   277f0:	003ff706 	br	277d0 <__alt_data_end+0xfffe77d0>

000277f4 <__sread>:
   277f4:	defffe04 	addi	sp,sp,-8
   277f8:	dc000015 	stw	r16,0(sp)
   277fc:	2821883a 	mov	r16,r5
   27800:	2940038f 	ldh	r5,14(r5)
   27804:	dfc00115 	stw	ra,4(sp)
   27808:	00295e80 	call	295e8 <_read_r>
   2780c:	10000716 	blt	r2,zero,2782c <__sread+0x38>
   27810:	80c01417 	ldw	r3,80(r16)
   27814:	1887883a 	add	r3,r3,r2
   27818:	80c01415 	stw	r3,80(r16)
   2781c:	dfc00117 	ldw	ra,4(sp)
   27820:	dc000017 	ldw	r16,0(sp)
   27824:	dec00204 	addi	sp,sp,8
   27828:	f800283a 	ret
   2782c:	80c0030b 	ldhu	r3,12(r16)
   27830:	18fbffcc 	andi	r3,r3,61439
   27834:	80c0030d 	sth	r3,12(r16)
   27838:	dfc00117 	ldw	ra,4(sp)
   2783c:	dc000017 	ldw	r16,0(sp)
   27840:	dec00204 	addi	sp,sp,8
   27844:	f800283a 	ret

00027848 <__seofread>:
   27848:	0005883a 	mov	r2,zero
   2784c:	f800283a 	ret

00027850 <__swrite>:
   27850:	2880030b 	ldhu	r2,12(r5)
   27854:	defffb04 	addi	sp,sp,-20
   27858:	dcc00315 	stw	r19,12(sp)
   2785c:	dc800215 	stw	r18,8(sp)
   27860:	dc400115 	stw	r17,4(sp)
   27864:	dc000015 	stw	r16,0(sp)
   27868:	dfc00415 	stw	ra,16(sp)
   2786c:	10c0400c 	andi	r3,r2,256
   27870:	2821883a 	mov	r16,r5
   27874:	2023883a 	mov	r17,r4
   27878:	3025883a 	mov	r18,r6
   2787c:	3827883a 	mov	r19,r7
   27880:	18000526 	beq	r3,zero,27898 <__swrite+0x48>
   27884:	2940038f 	ldh	r5,14(r5)
   27888:	01c00084 	movi	r7,2
   2788c:	000d883a 	mov	r6,zero
   27890:	00295880 	call	29588 <_lseek_r>
   27894:	8080030b 	ldhu	r2,12(r16)
   27898:	8140038f 	ldh	r5,14(r16)
   2789c:	10bbffcc 	andi	r2,r2,61439
   278a0:	980f883a 	mov	r7,r19
   278a4:	900d883a 	mov	r6,r18
   278a8:	8809883a 	mov	r4,r17
   278ac:	8080030d 	sth	r2,12(r16)
   278b0:	dfc00417 	ldw	ra,16(sp)
   278b4:	dcc00317 	ldw	r19,12(sp)
   278b8:	dc800217 	ldw	r18,8(sp)
   278bc:	dc400117 	ldw	r17,4(sp)
   278c0:	dc000017 	ldw	r16,0(sp)
   278c4:	dec00504 	addi	sp,sp,20
   278c8:	00290541 	jmpi	29054 <_write_r>

000278cc <__sseek>:
   278cc:	defffe04 	addi	sp,sp,-8
   278d0:	dc000015 	stw	r16,0(sp)
   278d4:	2821883a 	mov	r16,r5
   278d8:	2940038f 	ldh	r5,14(r5)
   278dc:	dfc00115 	stw	ra,4(sp)
   278e0:	00295880 	call	29588 <_lseek_r>
   278e4:	00ffffc4 	movi	r3,-1
   278e8:	10c00826 	beq	r2,r3,2790c <__sseek+0x40>
   278ec:	80c0030b 	ldhu	r3,12(r16)
   278f0:	80801415 	stw	r2,80(r16)
   278f4:	18c40014 	ori	r3,r3,4096
   278f8:	80c0030d 	sth	r3,12(r16)
   278fc:	dfc00117 	ldw	ra,4(sp)
   27900:	dc000017 	ldw	r16,0(sp)
   27904:	dec00204 	addi	sp,sp,8
   27908:	f800283a 	ret
   2790c:	80c0030b 	ldhu	r3,12(r16)
   27910:	18fbffcc 	andi	r3,r3,61439
   27914:	80c0030d 	sth	r3,12(r16)
   27918:	dfc00117 	ldw	ra,4(sp)
   2791c:	dc000017 	ldw	r16,0(sp)
   27920:	dec00204 	addi	sp,sp,8
   27924:	f800283a 	ret

00027928 <__sclose>:
   27928:	2940038f 	ldh	r5,14(r5)
   2792c:	00290b41 	jmpi	290b4 <_close_r>

00027930 <strcmp>:
   27930:	2144b03a 	or	r2,r4,r5
   27934:	108000cc 	andi	r2,r2,3
   27938:	1000171e 	bne	r2,zero,27998 <strcmp+0x68>
   2793c:	20800017 	ldw	r2,0(r4)
   27940:	28c00017 	ldw	r3,0(r5)
   27944:	10c0141e 	bne	r2,r3,27998 <strcmp+0x68>
   27948:	027fbff4 	movhi	r9,65279
   2794c:	4a7fbfc4 	addi	r9,r9,-257
   27950:	0086303a 	nor	r3,zero,r2
   27954:	02202074 	movhi	r8,32897
   27958:	1245883a 	add	r2,r2,r9
   2795c:	42202004 	addi	r8,r8,-32640
   27960:	10c4703a 	and	r2,r2,r3
   27964:	1204703a 	and	r2,r2,r8
   27968:	10000226 	beq	r2,zero,27974 <strcmp+0x44>
   2796c:	00002306 	br	279fc <strcmp+0xcc>
   27970:	1000221e 	bne	r2,zero,279fc <strcmp+0xcc>
   27974:	21000104 	addi	r4,r4,4
   27978:	20c00017 	ldw	r3,0(r4)
   2797c:	29400104 	addi	r5,r5,4
   27980:	29800017 	ldw	r6,0(r5)
   27984:	1a4f883a 	add	r7,r3,r9
   27988:	00c4303a 	nor	r2,zero,r3
   2798c:	3884703a 	and	r2,r7,r2
   27990:	1204703a 	and	r2,r2,r8
   27994:	19bff626 	beq	r3,r6,27970 <__alt_data_end+0xfffe7970>
   27998:	20800003 	ldbu	r2,0(r4)
   2799c:	10c03fcc 	andi	r3,r2,255
   279a0:	18c0201c 	xori	r3,r3,128
   279a4:	18ffe004 	addi	r3,r3,-128
   279a8:	18000c26 	beq	r3,zero,279dc <strcmp+0xac>
   279ac:	29800007 	ldb	r6,0(r5)
   279b0:	19800326 	beq	r3,r6,279c0 <strcmp+0x90>
   279b4:	00001306 	br	27a04 <strcmp+0xd4>
   279b8:	29800007 	ldb	r6,0(r5)
   279bc:	11800b1e 	bne	r2,r6,279ec <strcmp+0xbc>
   279c0:	21000044 	addi	r4,r4,1
   279c4:	20c00003 	ldbu	r3,0(r4)
   279c8:	29400044 	addi	r5,r5,1
   279cc:	18803fcc 	andi	r2,r3,255
   279d0:	1080201c 	xori	r2,r2,128
   279d4:	10bfe004 	addi	r2,r2,-128
   279d8:	103ff71e 	bne	r2,zero,279b8 <__alt_data_end+0xfffe79b8>
   279dc:	0007883a 	mov	r3,zero
   279e0:	28800003 	ldbu	r2,0(r5)
   279e4:	1885c83a 	sub	r2,r3,r2
   279e8:	f800283a 	ret
   279ec:	28800003 	ldbu	r2,0(r5)
   279f0:	18c03fcc 	andi	r3,r3,255
   279f4:	1885c83a 	sub	r2,r3,r2
   279f8:	f800283a 	ret
   279fc:	0005883a 	mov	r2,zero
   27a00:	f800283a 	ret
   27a04:	10c03fcc 	andi	r3,r2,255
   27a08:	003ff506 	br	279e0 <__alt_data_end+0xfffe79e0>

00027a0c <__sprint_r.part.0>:
   27a0c:	28801917 	ldw	r2,100(r5)
   27a10:	defff604 	addi	sp,sp,-40
   27a14:	dd400515 	stw	r21,20(sp)
   27a18:	dfc00915 	stw	ra,36(sp)
   27a1c:	df000815 	stw	fp,32(sp)
   27a20:	ddc00715 	stw	r23,28(sp)
   27a24:	dd800615 	stw	r22,24(sp)
   27a28:	dd000415 	stw	r20,16(sp)
   27a2c:	dcc00315 	stw	r19,12(sp)
   27a30:	dc800215 	stw	r18,8(sp)
   27a34:	dc400115 	stw	r17,4(sp)
   27a38:	dc000015 	stw	r16,0(sp)
   27a3c:	1088000c 	andi	r2,r2,8192
   27a40:	302b883a 	mov	r21,r6
   27a44:	10002e26 	beq	r2,zero,27b00 <__sprint_r.part.0+0xf4>
   27a48:	30800217 	ldw	r2,8(r6)
   27a4c:	35800017 	ldw	r22,0(r6)
   27a50:	10002926 	beq	r2,zero,27af8 <__sprint_r.part.0+0xec>
   27a54:	2827883a 	mov	r19,r5
   27a58:	2029883a 	mov	r20,r4
   27a5c:	b5c00104 	addi	r23,r22,4
   27a60:	04bfffc4 	movi	r18,-1
   27a64:	bc400017 	ldw	r17,0(r23)
   27a68:	b4000017 	ldw	r16,0(r22)
   27a6c:	0039883a 	mov	fp,zero
   27a70:	8822d0ba 	srli	r17,r17,2
   27a74:	8800031e 	bne	r17,zero,27a84 <__sprint_r.part.0+0x78>
   27a78:	00001806 	br	27adc <__sprint_r.part.0+0xd0>
   27a7c:	84000104 	addi	r16,r16,4
   27a80:	8f001526 	beq	r17,fp,27ad8 <__sprint_r.part.0+0xcc>
   27a84:	81400017 	ldw	r5,0(r16)
   27a88:	980d883a 	mov	r6,r19
   27a8c:	a009883a 	mov	r4,r20
   27a90:	00294340 	call	29434 <_fputwc_r>
   27a94:	e7000044 	addi	fp,fp,1
   27a98:	14bff81e 	bne	r2,r18,27a7c <__alt_data_end+0xfffe7a7c>
   27a9c:	9005883a 	mov	r2,r18
   27aa0:	a8000215 	stw	zero,8(r21)
   27aa4:	a8000115 	stw	zero,4(r21)
   27aa8:	dfc00917 	ldw	ra,36(sp)
   27aac:	df000817 	ldw	fp,32(sp)
   27ab0:	ddc00717 	ldw	r23,28(sp)
   27ab4:	dd800617 	ldw	r22,24(sp)
   27ab8:	dd400517 	ldw	r21,20(sp)
   27abc:	dd000417 	ldw	r20,16(sp)
   27ac0:	dcc00317 	ldw	r19,12(sp)
   27ac4:	dc800217 	ldw	r18,8(sp)
   27ac8:	dc400117 	ldw	r17,4(sp)
   27acc:	dc000017 	ldw	r16,0(sp)
   27ad0:	dec00a04 	addi	sp,sp,40
   27ad4:	f800283a 	ret
   27ad8:	a8800217 	ldw	r2,8(r21)
   27adc:	8c63883a 	add	r17,r17,r17
   27ae0:	8c63883a 	add	r17,r17,r17
   27ae4:	1445c83a 	sub	r2,r2,r17
   27ae8:	a8800215 	stw	r2,8(r21)
   27aec:	b5800204 	addi	r22,r22,8
   27af0:	bdc00204 	addi	r23,r23,8
   27af4:	103fdb1e 	bne	r2,zero,27a64 <__alt_data_end+0xfffe7a64>
   27af8:	0005883a 	mov	r2,zero
   27afc:	003fe806 	br	27aa0 <__alt_data_end+0xfffe7aa0>
   27b00:	0024c340 	call	24c34 <__sfvwrite_r>
   27b04:	003fe606 	br	27aa0 <__alt_data_end+0xfffe7aa0>

00027b08 <__sprint_r>:
   27b08:	30c00217 	ldw	r3,8(r6)
   27b0c:	18000126 	beq	r3,zero,27b14 <__sprint_r+0xc>
   27b10:	0027a0c1 	jmpi	27a0c <__sprint_r.part.0>
   27b14:	30000115 	stw	zero,4(r6)
   27b18:	0005883a 	mov	r2,zero
   27b1c:	f800283a 	ret

00027b20 <___vfiprintf_internal_r>:
   27b20:	deffc904 	addi	sp,sp,-220
   27b24:	df003515 	stw	fp,212(sp)
   27b28:	dd003115 	stw	r20,196(sp)
   27b2c:	dfc03615 	stw	ra,216(sp)
   27b30:	ddc03415 	stw	r23,208(sp)
   27b34:	dd803315 	stw	r22,204(sp)
   27b38:	dd403215 	stw	r21,200(sp)
   27b3c:	dcc03015 	stw	r19,192(sp)
   27b40:	dc802f15 	stw	r18,188(sp)
   27b44:	dc402e15 	stw	r17,184(sp)
   27b48:	dc002d15 	stw	r16,180(sp)
   27b4c:	d9002015 	stw	r4,128(sp)
   27b50:	d9c02215 	stw	r7,136(sp)
   27b54:	2829883a 	mov	r20,r5
   27b58:	3039883a 	mov	fp,r6
   27b5c:	20000226 	beq	r4,zero,27b68 <___vfiprintf_internal_r+0x48>
   27b60:	20800e17 	ldw	r2,56(r4)
   27b64:	1000cf26 	beq	r2,zero,27ea4 <___vfiprintf_internal_r+0x384>
   27b68:	a080030b 	ldhu	r2,12(r20)
   27b6c:	10c8000c 	andi	r3,r2,8192
   27b70:	1800061e 	bne	r3,zero,27b8c <___vfiprintf_internal_r+0x6c>
   27b74:	a1001917 	ldw	r4,100(r20)
   27b78:	00f7ffc4 	movi	r3,-8193
   27b7c:	10880014 	ori	r2,r2,8192
   27b80:	20c6703a 	and	r3,r4,r3
   27b84:	a080030d 	sth	r2,12(r20)
   27b88:	a0c01915 	stw	r3,100(r20)
   27b8c:	10c0020c 	andi	r3,r2,8
   27b90:	1800a926 	beq	r3,zero,27e38 <___vfiprintf_internal_r+0x318>
   27b94:	a0c00417 	ldw	r3,16(r20)
   27b98:	1800a726 	beq	r3,zero,27e38 <___vfiprintf_internal_r+0x318>
   27b9c:	1080068c 	andi	r2,r2,26
   27ba0:	00c00284 	movi	r3,10
   27ba4:	10c0ac26 	beq	r2,r3,27e58 <___vfiprintf_internal_r+0x338>
   27ba8:	da801a04 	addi	r10,sp,104
   27bac:	da801e15 	stw	r10,120(sp)
   27bb0:	d8801e17 	ldw	r2,120(sp)
   27bb4:	da8019c4 	addi	r10,sp,103
   27bb8:	058000f4 	movhi	r22,3
   27bbc:	05c000f4 	movhi	r23,3
   27bc0:	da801f15 	stw	r10,124(sp)
   27bc4:	1295c83a 	sub	r10,r2,r10
   27bc8:	b5bd7a04 	addi	r22,r22,-2584
   27bcc:	bdfd7604 	addi	r23,r23,-2600
   27bd0:	dec01a15 	stw	sp,104(sp)
   27bd4:	d8001c15 	stw	zero,112(sp)
   27bd8:	d8001b15 	stw	zero,108(sp)
   27bdc:	d8002615 	stw	zero,152(sp)
   27be0:	d8002315 	stw	zero,140(sp)
   27be4:	da802715 	stw	r10,156(sp)
   27be8:	d811883a 	mov	r8,sp
   27bec:	dd002115 	stw	r20,132(sp)
   27bf0:	e021883a 	mov	r16,fp
   27bf4:	80800007 	ldb	r2,0(r16)
   27bf8:	1003ea26 	beq	r2,zero,28ba4 <___vfiprintf_internal_r+0x1084>
   27bfc:	00c00944 	movi	r3,37
   27c00:	8025883a 	mov	r18,r16
   27c04:	10c0021e 	bne	r2,r3,27c10 <___vfiprintf_internal_r+0xf0>
   27c08:	00001606 	br	27c64 <___vfiprintf_internal_r+0x144>
   27c0c:	10c00326 	beq	r2,r3,27c1c <___vfiprintf_internal_r+0xfc>
   27c10:	94800044 	addi	r18,r18,1
   27c14:	90800007 	ldb	r2,0(r18)
   27c18:	103ffc1e 	bne	r2,zero,27c0c <__alt_data_end+0xfffe7c0c>
   27c1c:	9423c83a 	sub	r17,r18,r16
   27c20:	88001026 	beq	r17,zero,27c64 <___vfiprintf_internal_r+0x144>
   27c24:	d8c01c17 	ldw	r3,112(sp)
   27c28:	d8801b17 	ldw	r2,108(sp)
   27c2c:	44000015 	stw	r16,0(r8)
   27c30:	88c7883a 	add	r3,r17,r3
   27c34:	10800044 	addi	r2,r2,1
   27c38:	44400115 	stw	r17,4(r8)
   27c3c:	d8c01c15 	stw	r3,112(sp)
   27c40:	d8801b15 	stw	r2,108(sp)
   27c44:	010001c4 	movi	r4,7
   27c48:	2080760e 	bge	r4,r2,27e24 <___vfiprintf_internal_r+0x304>
   27c4c:	1803821e 	bne	r3,zero,28a58 <___vfiprintf_internal_r+0xf38>
   27c50:	da802317 	ldw	r10,140(sp)
   27c54:	d8001b15 	stw	zero,108(sp)
   27c58:	d811883a 	mov	r8,sp
   27c5c:	5455883a 	add	r10,r10,r17
   27c60:	da802315 	stw	r10,140(sp)
   27c64:	90800007 	ldb	r2,0(r18)
   27c68:	10044626 	beq	r2,zero,28d84 <___vfiprintf_internal_r+0x1264>
   27c6c:	90c00047 	ldb	r3,1(r18)
   27c70:	94000044 	addi	r16,r18,1
   27c74:	d8001d85 	stb	zero,118(sp)
   27c78:	0009883a 	mov	r4,zero
   27c7c:	000f883a 	mov	r7,zero
   27c80:	027fffc4 	movi	r9,-1
   27c84:	0023883a 	mov	r17,zero
   27c88:	0029883a 	mov	r20,zero
   27c8c:	01401604 	movi	r5,88
   27c90:	01800244 	movi	r6,9
   27c94:	03400a84 	movi	r13,42
   27c98:	03001b04 	movi	r12,108
   27c9c:	84000044 	addi	r16,r16,1
   27ca0:	18bff804 	addi	r2,r3,-32
   27ca4:	28827336 	bltu	r5,r2,28674 <___vfiprintf_internal_r+0xb54>
   27ca8:	100490ba 	slli	r2,r2,2
   27cac:	028000b4 	movhi	r10,2
   27cb0:	529f3004 	addi	r10,r10,31936
   27cb4:	1285883a 	add	r2,r2,r10
   27cb8:	10800017 	ldw	r2,0(r2)
   27cbc:	1000683a 	jmp	r2
   27cc0:	000283a8 	cmpgeui	zero,zero,2574
   27cc4:	00028674 	movhi	zero,2585
   27cc8:	00028674 	movhi	zero,2585
   27ccc:	000283c8 	cmpgei	zero,zero,2575
   27cd0:	00028674 	movhi	zero,2585
   27cd4:	00028674 	movhi	zero,2585
   27cd8:	00028674 	movhi	zero,2585
   27cdc:	00028674 	movhi	zero,2585
   27ce0:	00028674 	movhi	zero,2585
   27ce4:	00028674 	movhi	zero,2585
   27ce8:	000285b0 	cmpltui	zero,zero,2582
   27cec:	000285cc 	andi	zero,zero,2583
   27cf0:	00028674 	movhi	zero,2585
   27cf4:	00027eb4 	movhi	zero,2554
   27cf8:	000285dc 	xori	zero,zero,2583
   27cfc:	00028674 	movhi	zero,2585
   27d00:	000283d4 	movui	zero,2575
   27d04:	000283e0 	cmpeqi	zero,zero,2575
   27d08:	000283e0 	cmpeqi	zero,zero,2575
   27d0c:	000283e0 	cmpeqi	zero,zero,2575
   27d10:	000283e0 	cmpeqi	zero,zero,2575
   27d14:	000283e0 	cmpeqi	zero,zero,2575
   27d18:	000283e0 	cmpeqi	zero,zero,2575
   27d1c:	000283e0 	cmpeqi	zero,zero,2575
   27d20:	000283e0 	cmpeqi	zero,zero,2575
   27d24:	000283e0 	cmpeqi	zero,zero,2575
   27d28:	00028674 	movhi	zero,2585
   27d2c:	00028674 	movhi	zero,2585
   27d30:	00028674 	movhi	zero,2585
   27d34:	00028674 	movhi	zero,2585
   27d38:	00028674 	movhi	zero,2585
   27d3c:	00028674 	movhi	zero,2585
   27d40:	00028674 	movhi	zero,2585
   27d44:	00028674 	movhi	zero,2585
   27d48:	00028674 	movhi	zero,2585
   27d4c:	00028674 	movhi	zero,2585
   27d50:	0002840c 	andi	zero,zero,2576
   27d54:	00028674 	movhi	zero,2585
   27d58:	00028674 	movhi	zero,2585
   27d5c:	00028674 	movhi	zero,2585
   27d60:	00028674 	movhi	zero,2585
   27d64:	00028674 	movhi	zero,2585
   27d68:	00028674 	movhi	zero,2585
   27d6c:	00028674 	movhi	zero,2585
   27d70:	00028674 	movhi	zero,2585
   27d74:	00028674 	movhi	zero,2585
   27d78:	00028674 	movhi	zero,2585
   27d7c:	00028444 	movi	zero,2577
   27d80:	00028674 	movhi	zero,2585
   27d84:	00028674 	movhi	zero,2585
   27d88:	00028674 	movhi	zero,2585
   27d8c:	00028674 	movhi	zero,2585
   27d90:	00028674 	movhi	zero,2585
   27d94:	0002849c 	xori	zero,zero,2578
   27d98:	00028674 	movhi	zero,2585
   27d9c:	00028674 	movhi	zero,2585
   27da0:	0002850c 	andi	zero,zero,2580
   27da4:	00028674 	movhi	zero,2585
   27da8:	00028674 	movhi	zero,2585
   27dac:	00028674 	movhi	zero,2585
   27db0:	00028674 	movhi	zero,2585
   27db4:	00028674 	movhi	zero,2585
   27db8:	00028674 	movhi	zero,2585
   27dbc:	00028674 	movhi	zero,2585
   27dc0:	00028674 	movhi	zero,2585
   27dc4:	00028674 	movhi	zero,2585
   27dc8:	00028674 	movhi	zero,2585
   27dcc:	000282b8 	rdprs	zero,zero,2570
   27dd0:	000282e4 	muli	zero,zero,2571
   27dd4:	00028674 	movhi	zero,2585
   27dd8:	00028674 	movhi	zero,2585
   27ddc:	00028674 	movhi	zero,2585
   27de0:	0002861c 	xori	zero,zero,2584
   27de4:	000282e4 	muli	zero,zero,2571
   27de8:	00028674 	movhi	zero,2585
   27dec:	00028674 	movhi	zero,2585
   27df0:	00028178 	rdprs	zero,zero,2565
   27df4:	00028674 	movhi	zero,2585
   27df8:	00028188 	cmpgei	zero,zero,2566
   27dfc:	000281c4 	movi	zero,2567
   27e00:	00027ec0 	call	27ec <__reset-0x1d814>
   27e04:	0002816c 	andhi	zero,zero,2565
   27e08:	00028674 	movhi	zero,2585
   27e0c:	00028548 	cmpgei	zero,zero,2581
   27e10:	00028674 	movhi	zero,2585
   27e14:	000285a0 	cmpeqi	zero,zero,2582
   27e18:	00028674 	movhi	zero,2585
   27e1c:	00028674 	movhi	zero,2585
   27e20:	00028264 	muli	zero,zero,2569
   27e24:	42000204 	addi	r8,r8,8
   27e28:	da802317 	ldw	r10,140(sp)
   27e2c:	5455883a 	add	r10,r10,r17
   27e30:	da802315 	stw	r10,140(sp)
   27e34:	003f8b06 	br	27c64 <__alt_data_end+0xfffe7c64>
   27e38:	d9002017 	ldw	r4,128(sp)
   27e3c:	a00b883a 	mov	r5,r20
   27e40:	00227dc0 	call	227dc <__swsetup_r>
   27e44:	1003b11e 	bne	r2,zero,28d0c <___vfiprintf_internal_r+0x11ec>
   27e48:	a080030b 	ldhu	r2,12(r20)
   27e4c:	00c00284 	movi	r3,10
   27e50:	1080068c 	andi	r2,r2,26
   27e54:	10ff541e 	bne	r2,r3,27ba8 <__alt_data_end+0xfffe7ba8>
   27e58:	a080038f 	ldh	r2,14(r20)
   27e5c:	103f5216 	blt	r2,zero,27ba8 <__alt_data_end+0xfffe7ba8>
   27e60:	d9c02217 	ldw	r7,136(sp)
   27e64:	d9002017 	ldw	r4,128(sp)
   27e68:	e00d883a 	mov	r6,fp
   27e6c:	a00b883a 	mov	r5,r20
   27e70:	0028f980 	call	28f98 <__sbprintf>
   27e74:	dfc03617 	ldw	ra,216(sp)
   27e78:	df003517 	ldw	fp,212(sp)
   27e7c:	ddc03417 	ldw	r23,208(sp)
   27e80:	dd803317 	ldw	r22,204(sp)
   27e84:	dd403217 	ldw	r21,200(sp)
   27e88:	dd003117 	ldw	r20,196(sp)
   27e8c:	dcc03017 	ldw	r19,192(sp)
   27e90:	dc802f17 	ldw	r18,188(sp)
   27e94:	dc402e17 	ldw	r17,184(sp)
   27e98:	dc002d17 	ldw	r16,180(sp)
   27e9c:	dec03704 	addi	sp,sp,220
   27ea0:	f800283a 	ret
   27ea4:	00247b00 	call	247b0 <__sinit>
   27ea8:	003f2f06 	br	27b68 <__alt_data_end+0xfffe7b68>
   27eac:	0463c83a 	sub	r17,zero,r17
   27eb0:	d8802215 	stw	r2,136(sp)
   27eb4:	a5000114 	ori	r20,r20,4
   27eb8:	80c00007 	ldb	r3,0(r16)
   27ebc:	003f7706 	br	27c9c <__alt_data_end+0xfffe7c9c>
   27ec0:	00800c04 	movi	r2,48
   27ec4:	da802217 	ldw	r10,136(sp)
   27ec8:	d8801d05 	stb	r2,116(sp)
   27ecc:	00801e04 	movi	r2,120
   27ed0:	d8801d45 	stb	r2,117(sp)
   27ed4:	d8001d85 	stb	zero,118(sp)
   27ed8:	50c00104 	addi	r3,r10,4
   27edc:	54800017 	ldw	r18,0(r10)
   27ee0:	0027883a 	mov	r19,zero
   27ee4:	a0800094 	ori	r2,r20,2
   27ee8:	48030b16 	blt	r9,zero,28b18 <___vfiprintf_internal_r+0xff8>
   27eec:	00bfdfc4 	movi	r2,-129
   27ef0:	a096703a 	and	r11,r20,r2
   27ef4:	d8c02215 	stw	r3,136(sp)
   27ef8:	5d000094 	ori	r20,r11,2
   27efc:	90032b1e 	bne	r18,zero,28bac <___vfiprintf_internal_r+0x108c>
   27f00:	008000f4 	movhi	r2,3
   27f04:	10bd1504 	addi	r2,r2,-2988
   27f08:	d8802615 	stw	r2,152(sp)
   27f0c:	0039883a 	mov	fp,zero
   27f10:	48017b1e 	bne	r9,zero,28500 <___vfiprintf_internal_r+0x9e0>
   27f14:	0013883a 	mov	r9,zero
   27f18:	0027883a 	mov	r19,zero
   27f1c:	dd401a04 	addi	r21,sp,104
   27f20:	4825883a 	mov	r18,r9
   27f24:	4cc0010e 	bge	r9,r19,27f2c <___vfiprintf_internal_r+0x40c>
   27f28:	9825883a 	mov	r18,r19
   27f2c:	e7003fcc 	andi	fp,fp,255
   27f30:	e700201c 	xori	fp,fp,128
   27f34:	e73fe004 	addi	fp,fp,-128
   27f38:	e0000126 	beq	fp,zero,27f40 <___vfiprintf_internal_r+0x420>
   27f3c:	94800044 	addi	r18,r18,1
   27f40:	a380008c 	andi	r14,r20,2
   27f44:	70000126 	beq	r14,zero,27f4c <___vfiprintf_internal_r+0x42c>
   27f48:	94800084 	addi	r18,r18,2
   27f4c:	a700210c 	andi	fp,r20,132
   27f50:	e001df1e 	bne	fp,zero,286d0 <___vfiprintf_internal_r+0xbb0>
   27f54:	8c87c83a 	sub	r3,r17,r18
   27f58:	00c1dd0e 	bge	zero,r3,286d0 <___vfiprintf_internal_r+0xbb0>
   27f5c:	01c00404 	movi	r7,16
   27f60:	d8801c17 	ldw	r2,112(sp)
   27f64:	38c3ad0e 	bge	r7,r3,28e1c <___vfiprintf_internal_r+0x12fc>
   27f68:	028000f4 	movhi	r10,3
   27f6c:	52bd7a04 	addi	r10,r10,-2584
   27f70:	dc002915 	stw	r16,164(sp)
   27f74:	d9801b17 	ldw	r6,108(sp)
   27f78:	da802415 	stw	r10,144(sp)
   27f7c:	03c001c4 	movi	r15,7
   27f80:	da402515 	stw	r9,148(sp)
   27f84:	db802815 	stw	r14,160(sp)
   27f88:	1821883a 	mov	r16,r3
   27f8c:	00000506 	br	27fa4 <___vfiprintf_internal_r+0x484>
   27f90:	31400084 	addi	r5,r6,2
   27f94:	42000204 	addi	r8,r8,8
   27f98:	200d883a 	mov	r6,r4
   27f9c:	843ffc04 	addi	r16,r16,-16
   27fa0:	3c000d0e 	bge	r7,r16,27fd8 <___vfiprintf_internal_r+0x4b8>
   27fa4:	10800404 	addi	r2,r2,16
   27fa8:	31000044 	addi	r4,r6,1
   27fac:	45800015 	stw	r22,0(r8)
   27fb0:	41c00115 	stw	r7,4(r8)
   27fb4:	d8801c15 	stw	r2,112(sp)
   27fb8:	d9001b15 	stw	r4,108(sp)
   27fbc:	793ff40e 	bge	r15,r4,27f90 <__alt_data_end+0xfffe7f90>
   27fc0:	1001b51e 	bne	r2,zero,28698 <___vfiprintf_internal_r+0xb78>
   27fc4:	843ffc04 	addi	r16,r16,-16
   27fc8:	000d883a 	mov	r6,zero
   27fcc:	01400044 	movi	r5,1
   27fd0:	d811883a 	mov	r8,sp
   27fd4:	3c3ff316 	blt	r7,r16,27fa4 <__alt_data_end+0xfffe7fa4>
   27fd8:	8007883a 	mov	r3,r16
   27fdc:	da402517 	ldw	r9,148(sp)
   27fe0:	db802817 	ldw	r14,160(sp)
   27fe4:	dc002917 	ldw	r16,164(sp)
   27fe8:	da802417 	ldw	r10,144(sp)
   27fec:	1885883a 	add	r2,r3,r2
   27ff0:	40c00115 	stw	r3,4(r8)
   27ff4:	42800015 	stw	r10,0(r8)
   27ff8:	d8801c15 	stw	r2,112(sp)
   27ffc:	d9401b15 	stw	r5,108(sp)
   28000:	00c001c4 	movi	r3,7
   28004:	19426016 	blt	r3,r5,28988 <___vfiprintf_internal_r+0xe68>
   28008:	d8c01d87 	ldb	r3,118(sp)
   2800c:	42000204 	addi	r8,r8,8
   28010:	29000044 	addi	r4,r5,1
   28014:	1801b31e 	bne	r3,zero,286e4 <___vfiprintf_internal_r+0xbc4>
   28018:	7001c026 	beq	r14,zero,2871c <___vfiprintf_internal_r+0xbfc>
   2801c:	d8c01d04 	addi	r3,sp,116
   28020:	10800084 	addi	r2,r2,2
   28024:	40c00015 	stw	r3,0(r8)
   28028:	00c00084 	movi	r3,2
   2802c:	40c00115 	stw	r3,4(r8)
   28030:	d8801c15 	stw	r2,112(sp)
   28034:	d9001b15 	stw	r4,108(sp)
   28038:	00c001c4 	movi	r3,7
   2803c:	1902650e 	bge	r3,r4,289d4 <___vfiprintf_internal_r+0xeb4>
   28040:	10029a1e 	bne	r2,zero,28aac <___vfiprintf_internal_r+0xf8c>
   28044:	00c02004 	movi	r3,128
   28048:	01000044 	movi	r4,1
   2804c:	000b883a 	mov	r5,zero
   28050:	d811883a 	mov	r8,sp
   28054:	e0c1b31e 	bne	fp,r3,28724 <___vfiprintf_internal_r+0xc04>
   28058:	8cb9c83a 	sub	fp,r17,r18
   2805c:	0701b10e 	bge	zero,fp,28724 <___vfiprintf_internal_r+0xc04>
   28060:	01c00404 	movi	r7,16
   28064:	3f03890e 	bge	r7,fp,28e8c <___vfiprintf_internal_r+0x136c>
   28068:	00c000f4 	movhi	r3,3
   2806c:	18fd7604 	addi	r3,r3,-2600
   28070:	d8c02415 	stw	r3,144(sp)
   28074:	8007883a 	mov	r3,r16
   28078:	034001c4 	movi	r13,7
   2807c:	e021883a 	mov	r16,fp
   28080:	da402515 	stw	r9,148(sp)
   28084:	1839883a 	mov	fp,r3
   28088:	00000506 	br	280a0 <___vfiprintf_internal_r+0x580>
   2808c:	29800084 	addi	r6,r5,2
   28090:	42000204 	addi	r8,r8,8
   28094:	180b883a 	mov	r5,r3
   28098:	843ffc04 	addi	r16,r16,-16
   2809c:	3c000d0e 	bge	r7,r16,280d4 <___vfiprintf_internal_r+0x5b4>
   280a0:	10800404 	addi	r2,r2,16
   280a4:	28c00044 	addi	r3,r5,1
   280a8:	45c00015 	stw	r23,0(r8)
   280ac:	41c00115 	stw	r7,4(r8)
   280b0:	d8801c15 	stw	r2,112(sp)
   280b4:	d8c01b15 	stw	r3,108(sp)
   280b8:	68fff40e 	bge	r13,r3,2808c <__alt_data_end+0xfffe808c>
   280bc:	1002241e 	bne	r2,zero,28950 <___vfiprintf_internal_r+0xe30>
   280c0:	843ffc04 	addi	r16,r16,-16
   280c4:	01800044 	movi	r6,1
   280c8:	000b883a 	mov	r5,zero
   280cc:	d811883a 	mov	r8,sp
   280d0:	3c3ff316 	blt	r7,r16,280a0 <__alt_data_end+0xfffe80a0>
   280d4:	da402517 	ldw	r9,148(sp)
   280d8:	e007883a 	mov	r3,fp
   280dc:	8039883a 	mov	fp,r16
   280e0:	1821883a 	mov	r16,r3
   280e4:	d8c02417 	ldw	r3,144(sp)
   280e8:	1705883a 	add	r2,r2,fp
   280ec:	47000115 	stw	fp,4(r8)
   280f0:	40c00015 	stw	r3,0(r8)
   280f4:	d8801c15 	stw	r2,112(sp)
   280f8:	d9801b15 	stw	r6,108(sp)
   280fc:	00c001c4 	movi	r3,7
   28100:	19827616 	blt	r3,r6,28adc <___vfiprintf_internal_r+0xfbc>
   28104:	4cf9c83a 	sub	fp,r9,r19
   28108:	42000204 	addi	r8,r8,8
   2810c:	31000044 	addi	r4,r6,1
   28110:	300b883a 	mov	r5,r6
   28114:	07018516 	blt	zero,fp,2872c <___vfiprintf_internal_r+0xc0c>
   28118:	9885883a 	add	r2,r19,r2
   2811c:	45400015 	stw	r21,0(r8)
   28120:	44c00115 	stw	r19,4(r8)
   28124:	d8801c15 	stw	r2,112(sp)
   28128:	d9001b15 	stw	r4,108(sp)
   2812c:	00c001c4 	movi	r3,7
   28130:	1901dd0e 	bge	r3,r4,288a8 <___vfiprintf_internal_r+0xd88>
   28134:	1002401e 	bne	r2,zero,28a38 <___vfiprintf_internal_r+0xf18>
   28138:	d8001b15 	stw	zero,108(sp)
   2813c:	a2c0010c 	andi	r11,r20,4
   28140:	58000226 	beq	r11,zero,2814c <___vfiprintf_internal_r+0x62c>
   28144:	8ca7c83a 	sub	r19,r17,r18
   28148:	04c2f216 	blt	zero,r19,28d14 <___vfiprintf_internal_r+0x11f4>
   2814c:	8c80010e 	bge	r17,r18,28154 <___vfiprintf_internal_r+0x634>
   28150:	9023883a 	mov	r17,r18
   28154:	da802317 	ldw	r10,140(sp)
   28158:	5455883a 	add	r10,r10,r17
   2815c:	da802315 	stw	r10,140(sp)
   28160:	d8001b15 	stw	zero,108(sp)
   28164:	d811883a 	mov	r8,sp
   28168:	003ea206 	br	27bf4 <__alt_data_end+0xfffe7bf4>
   2816c:	a5000814 	ori	r20,r20,32
   28170:	80c00007 	ldb	r3,0(r16)
   28174:	003ec906 	br	27c9c <__alt_data_end+0xfffe7c9c>
   28178:	80c00007 	ldb	r3,0(r16)
   2817c:	1b030926 	beq	r3,r12,28da4 <___vfiprintf_internal_r+0x1284>
   28180:	a5000414 	ori	r20,r20,16
   28184:	003ec506 	br	27c9c <__alt_data_end+0xfffe7c9c>
   28188:	21003fcc 	andi	r4,r4,255
   2818c:	20035e1e 	bne	r4,zero,28f08 <___vfiprintf_internal_r+0x13e8>
   28190:	a080080c 	andi	r2,r20,32
   28194:	1002a526 	beq	r2,zero,28c2c <___vfiprintf_internal_r+0x110c>
   28198:	da802217 	ldw	r10,136(sp)
   2819c:	50800017 	ldw	r2,0(r10)
   281a0:	da802317 	ldw	r10,140(sp)
   281a4:	5007d7fa 	srai	r3,r10,31
   281a8:	da802217 	ldw	r10,136(sp)
   281ac:	10c00115 	stw	r3,4(r2)
   281b0:	52800104 	addi	r10,r10,4
   281b4:	da802215 	stw	r10,136(sp)
   281b8:	da802317 	ldw	r10,140(sp)
   281bc:	12800015 	stw	r10,0(r2)
   281c0:	003e8c06 	br	27bf4 <__alt_data_end+0xfffe7bf4>
   281c4:	21003fcc 	andi	r4,r4,255
   281c8:	2003511e 	bne	r4,zero,28f10 <___vfiprintf_internal_r+0x13f0>
   281cc:	a080080c 	andi	r2,r20,32
   281d0:	1000a126 	beq	r2,zero,28458 <___vfiprintf_internal_r+0x938>
   281d4:	da802217 	ldw	r10,136(sp)
   281d8:	d8001d85 	stb	zero,118(sp)
   281dc:	50800204 	addi	r2,r10,8
   281e0:	54800017 	ldw	r18,0(r10)
   281e4:	54c00117 	ldw	r19,4(r10)
   281e8:	4802b416 	blt	r9,zero,28cbc <___vfiprintf_internal_r+0x119c>
   281ec:	013fdfc4 	movi	r4,-129
   281f0:	94c6b03a 	or	r3,r18,r19
   281f4:	d8802215 	stw	r2,136(sp)
   281f8:	a128703a 	and	r20,r20,r4
   281fc:	1800a226 	beq	r3,zero,28488 <___vfiprintf_internal_r+0x968>
   28200:	0039883a 	mov	fp,zero
   28204:	dd401a04 	addi	r21,sp,104
   28208:	9006d0fa 	srli	r3,r18,3
   2820c:	9808977a 	slli	r4,r19,29
   28210:	9826d0fa 	srli	r19,r19,3
   28214:	948001cc 	andi	r18,r18,7
   28218:	90800c04 	addi	r2,r18,48
   2821c:	ad7fffc4 	addi	r21,r21,-1
   28220:	20e4b03a 	or	r18,r4,r3
   28224:	a8800005 	stb	r2,0(r21)
   28228:	94c6b03a 	or	r3,r18,r19
   2822c:	183ff61e 	bne	r3,zero,28208 <__alt_data_end+0xfffe8208>
   28230:	a0c0004c 	andi	r3,r20,1
   28234:	18005926 	beq	r3,zero,2839c <___vfiprintf_internal_r+0x87c>
   28238:	10803fcc 	andi	r2,r2,255
   2823c:	1080201c 	xori	r2,r2,128
   28240:	10bfe004 	addi	r2,r2,-128
   28244:	00c00c04 	movi	r3,48
   28248:	10c05426 	beq	r2,r3,2839c <___vfiprintf_internal_r+0x87c>
   2824c:	da801e17 	ldw	r10,120(sp)
   28250:	a8bfffc4 	addi	r2,r21,-1
   28254:	a8ffffc5 	stb	r3,-1(r21)
   28258:	50a7c83a 	sub	r19,r10,r2
   2825c:	102b883a 	mov	r21,r2
   28260:	003f2f06 	br	27f20 <__alt_data_end+0xfffe7f20>
   28264:	21003fcc 	andi	r4,r4,255
   28268:	2003421e 	bne	r4,zero,28f74 <___vfiprintf_internal_r+0x1454>
   2826c:	008000f4 	movhi	r2,3
   28270:	10bd1504 	addi	r2,r2,-2988
   28274:	d8802615 	stw	r2,152(sp)
   28278:	a080080c 	andi	r2,r20,32
   2827c:	1000aa26 	beq	r2,zero,28528 <___vfiprintf_internal_r+0xa08>
   28280:	da802217 	ldw	r10,136(sp)
   28284:	54800017 	ldw	r18,0(r10)
   28288:	54c00117 	ldw	r19,4(r10)
   2828c:	52800204 	addi	r10,r10,8
   28290:	da802215 	stw	r10,136(sp)
   28294:	a080004c 	andi	r2,r20,1
   28298:	1001d226 	beq	r2,zero,289e4 <___vfiprintf_internal_r+0xec4>
   2829c:	94c4b03a 	or	r2,r18,r19
   282a0:	1002351e 	bne	r2,zero,28b78 <___vfiprintf_internal_r+0x1058>
   282a4:	d8001d85 	stb	zero,118(sp)
   282a8:	48022216 	blt	r9,zero,28b34 <___vfiprintf_internal_r+0x1014>
   282ac:	00bfdfc4 	movi	r2,-129
   282b0:	a0a8703a 	and	r20,r20,r2
   282b4:	003f1506 	br	27f0c <__alt_data_end+0xfffe7f0c>
   282b8:	da802217 	ldw	r10,136(sp)
   282bc:	04800044 	movi	r18,1
   282c0:	d8001d85 	stb	zero,118(sp)
   282c4:	50800017 	ldw	r2,0(r10)
   282c8:	52800104 	addi	r10,r10,4
   282cc:	da802215 	stw	r10,136(sp)
   282d0:	d8801005 	stb	r2,64(sp)
   282d4:	9027883a 	mov	r19,r18
   282d8:	dd401004 	addi	r21,sp,64
   282dc:	0013883a 	mov	r9,zero
   282e0:	003f1706 	br	27f40 <__alt_data_end+0xfffe7f40>
   282e4:	21003fcc 	andi	r4,r4,255
   282e8:	2003201e 	bne	r4,zero,28f6c <___vfiprintf_internal_r+0x144c>
   282ec:	a080080c 	andi	r2,r20,32
   282f0:	10004b26 	beq	r2,zero,28420 <___vfiprintf_internal_r+0x900>
   282f4:	da802217 	ldw	r10,136(sp)
   282f8:	50800117 	ldw	r2,4(r10)
   282fc:	54800017 	ldw	r18,0(r10)
   28300:	52800204 	addi	r10,r10,8
   28304:	da802215 	stw	r10,136(sp)
   28308:	1027883a 	mov	r19,r2
   2830c:	10022c16 	blt	r2,zero,28bc0 <___vfiprintf_internal_r+0x10a0>
   28310:	df001d83 	ldbu	fp,118(sp)
   28314:	48007216 	blt	r9,zero,284e0 <___vfiprintf_internal_r+0x9c0>
   28318:	00ffdfc4 	movi	r3,-129
   2831c:	94c4b03a 	or	r2,r18,r19
   28320:	a0e8703a 	and	r20,r20,r3
   28324:	1000cc26 	beq	r2,zero,28658 <___vfiprintf_internal_r+0xb38>
   28328:	98021026 	beq	r19,zero,28b6c <___vfiprintf_internal_r+0x104c>
   2832c:	dc402415 	stw	r17,144(sp)
   28330:	dc002515 	stw	r16,148(sp)
   28334:	9823883a 	mov	r17,r19
   28338:	9021883a 	mov	r16,r18
   2833c:	dd401a04 	addi	r21,sp,104
   28340:	4825883a 	mov	r18,r9
   28344:	4027883a 	mov	r19,r8
   28348:	8009883a 	mov	r4,r16
   2834c:	880b883a 	mov	r5,r17
   28350:	01800284 	movi	r6,10
   28354:	000f883a 	mov	r7,zero
   28358:	0029f000 	call	29f00 <__umoddi3>
   2835c:	10800c04 	addi	r2,r2,48
   28360:	ad7fffc4 	addi	r21,r21,-1
   28364:	8009883a 	mov	r4,r16
   28368:	880b883a 	mov	r5,r17
   2836c:	a8800005 	stb	r2,0(r21)
   28370:	01800284 	movi	r6,10
   28374:	000f883a 	mov	r7,zero
   28378:	00299880 	call	29988 <__udivdi3>
   2837c:	1021883a 	mov	r16,r2
   28380:	10c4b03a 	or	r2,r2,r3
   28384:	1823883a 	mov	r17,r3
   28388:	103fef1e 	bne	r2,zero,28348 <__alt_data_end+0xfffe8348>
   2838c:	dc402417 	ldw	r17,144(sp)
   28390:	dc002517 	ldw	r16,148(sp)
   28394:	9013883a 	mov	r9,r18
   28398:	9811883a 	mov	r8,r19
   2839c:	da801e17 	ldw	r10,120(sp)
   283a0:	5567c83a 	sub	r19,r10,r21
   283a4:	003ede06 	br	27f20 <__alt_data_end+0xfffe7f20>
   283a8:	38803fcc 	andi	r2,r7,255
   283ac:	1080201c 	xori	r2,r2,128
   283b0:	10bfe004 	addi	r2,r2,-128
   283b4:	1002371e 	bne	r2,zero,28c94 <___vfiprintf_internal_r+0x1174>
   283b8:	01000044 	movi	r4,1
   283bc:	01c00804 	movi	r7,32
   283c0:	80c00007 	ldb	r3,0(r16)
   283c4:	003e3506 	br	27c9c <__alt_data_end+0xfffe7c9c>
   283c8:	a5000054 	ori	r20,r20,1
   283cc:	80c00007 	ldb	r3,0(r16)
   283d0:	003e3206 	br	27c9c <__alt_data_end+0xfffe7c9c>
   283d4:	a5002014 	ori	r20,r20,128
   283d8:	80c00007 	ldb	r3,0(r16)
   283dc:	003e2f06 	br	27c9c <__alt_data_end+0xfffe7c9c>
   283e0:	8015883a 	mov	r10,r16
   283e4:	0023883a 	mov	r17,zero
   283e8:	18bff404 	addi	r2,r3,-48
   283ec:	50c00007 	ldb	r3,0(r10)
   283f0:	8c4002a4 	muli	r17,r17,10
   283f4:	84000044 	addi	r16,r16,1
   283f8:	8015883a 	mov	r10,r16
   283fc:	1463883a 	add	r17,r2,r17
   28400:	18bff404 	addi	r2,r3,-48
   28404:	30bff92e 	bgeu	r6,r2,283ec <__alt_data_end+0xfffe83ec>
   28408:	003e2506 	br	27ca0 <__alt_data_end+0xfffe7ca0>
   2840c:	21003fcc 	andi	r4,r4,255
   28410:	2002d41e 	bne	r4,zero,28f64 <___vfiprintf_internal_r+0x1444>
   28414:	a5000414 	ori	r20,r20,16
   28418:	a080080c 	andi	r2,r20,32
   2841c:	103fb51e 	bne	r2,zero,282f4 <__alt_data_end+0xfffe82f4>
   28420:	a080040c 	andi	r2,r20,16
   28424:	1001f826 	beq	r2,zero,28c08 <___vfiprintf_internal_r+0x10e8>
   28428:	da802217 	ldw	r10,136(sp)
   2842c:	54800017 	ldw	r18,0(r10)
   28430:	52800104 	addi	r10,r10,4
   28434:	da802215 	stw	r10,136(sp)
   28438:	9027d7fa 	srai	r19,r18,31
   2843c:	9805883a 	mov	r2,r19
   28440:	003fb206 	br	2830c <__alt_data_end+0xfffe830c>
   28444:	21003fcc 	andi	r4,r4,255
   28448:	2002c41e 	bne	r4,zero,28f5c <___vfiprintf_internal_r+0x143c>
   2844c:	a5000414 	ori	r20,r20,16
   28450:	a080080c 	andi	r2,r20,32
   28454:	103f5f1e 	bne	r2,zero,281d4 <__alt_data_end+0xfffe81d4>
   28458:	a080040c 	andi	r2,r20,16
   2845c:	10020f26 	beq	r2,zero,28c9c <___vfiprintf_internal_r+0x117c>
   28460:	da802217 	ldw	r10,136(sp)
   28464:	d8001d85 	stb	zero,118(sp)
   28468:	0027883a 	mov	r19,zero
   2846c:	50800104 	addi	r2,r10,4
   28470:	54800017 	ldw	r18,0(r10)
   28474:	48021116 	blt	r9,zero,28cbc <___vfiprintf_internal_r+0x119c>
   28478:	00ffdfc4 	movi	r3,-129
   2847c:	d8802215 	stw	r2,136(sp)
   28480:	a0e8703a 	and	r20,r20,r3
   28484:	903f5e1e 	bne	r18,zero,28200 <__alt_data_end+0xfffe8200>
   28488:	0039883a 	mov	fp,zero
   2848c:	4802a626 	beq	r9,zero,28f28 <___vfiprintf_internal_r+0x1408>
   28490:	0025883a 	mov	r18,zero
   28494:	0027883a 	mov	r19,zero
   28498:	003f5a06 	br	28204 <__alt_data_end+0xfffe8204>
   2849c:	21003fcc 	andi	r4,r4,255
   284a0:	20029f1e 	bne	r4,zero,28f20 <___vfiprintf_internal_r+0x1400>
   284a4:	a5000414 	ori	r20,r20,16
   284a8:	a080080c 	andi	r2,r20,32
   284ac:	10005e1e 	bne	r2,zero,28628 <___vfiprintf_internal_r+0xb08>
   284b0:	a080040c 	andi	r2,r20,16
   284b4:	1001a21e 	bne	r2,zero,28b40 <___vfiprintf_internal_r+0x1020>
   284b8:	a080100c 	andi	r2,r20,64
   284bc:	d8001d85 	stb	zero,118(sp)
   284c0:	da802217 	ldw	r10,136(sp)
   284c4:	1002231e 	bne	r2,zero,28d54 <___vfiprintf_internal_r+0x1234>
   284c8:	50800104 	addi	r2,r10,4
   284cc:	54800017 	ldw	r18,0(r10)
   284d0:	0027883a 	mov	r19,zero
   284d4:	4801a00e 	bge	r9,zero,28b58 <___vfiprintf_internal_r+0x1038>
   284d8:	d8802215 	stw	r2,136(sp)
   284dc:	0039883a 	mov	fp,zero
   284e0:	94c4b03a 	or	r2,r18,r19
   284e4:	103f901e 	bne	r2,zero,28328 <__alt_data_end+0xfffe8328>
   284e8:	00800044 	movi	r2,1
   284ec:	10803fcc 	andi	r2,r2,255
   284f0:	00c00044 	movi	r3,1
   284f4:	10c05926 	beq	r2,r3,2865c <___vfiprintf_internal_r+0xb3c>
   284f8:	00c00084 	movi	r3,2
   284fc:	10ffe41e 	bne	r2,r3,28490 <__alt_data_end+0xfffe8490>
   28500:	0025883a 	mov	r18,zero
   28504:	0027883a 	mov	r19,zero
   28508:	00013d06 	br	28a00 <___vfiprintf_internal_r+0xee0>
   2850c:	21003fcc 	andi	r4,r4,255
   28510:	2002811e 	bne	r4,zero,28f18 <___vfiprintf_internal_r+0x13f8>
   28514:	008000f4 	movhi	r2,3
   28518:	10bd1004 	addi	r2,r2,-3008
   2851c:	d8802615 	stw	r2,152(sp)
   28520:	a080080c 	andi	r2,r20,32
   28524:	103f561e 	bne	r2,zero,28280 <__alt_data_end+0xfffe8280>
   28528:	a080040c 	andi	r2,r20,16
   2852c:	1001d126 	beq	r2,zero,28c74 <___vfiprintf_internal_r+0x1154>
   28530:	da802217 	ldw	r10,136(sp)
   28534:	0027883a 	mov	r19,zero
   28538:	54800017 	ldw	r18,0(r10)
   2853c:	52800104 	addi	r10,r10,4
   28540:	da802215 	stw	r10,136(sp)
   28544:	003f5306 	br	28294 <__alt_data_end+0xfffe8294>
   28548:	da802217 	ldw	r10,136(sp)
   2854c:	d8001d85 	stb	zero,118(sp)
   28550:	55400017 	ldw	r21,0(r10)
   28554:	50c00104 	addi	r3,r10,4
   28558:	a8024226 	beq	r21,zero,28e64 <___vfiprintf_internal_r+0x1344>
   2855c:	48021816 	blt	r9,zero,28dc0 <___vfiprintf_internal_r+0x12a0>
   28560:	480d883a 	mov	r6,r9
   28564:	000b883a 	mov	r5,zero
   28568:	a809883a 	mov	r4,r21
   2856c:	d8c02a15 	stw	r3,168(sp)
   28570:	da002b15 	stw	r8,172(sp)
   28574:	da402c15 	stw	r9,176(sp)
   28578:	0025d1c0 	call	25d1c <memchr>
   2857c:	d8c02a17 	ldw	r3,168(sp)
   28580:	da002b17 	ldw	r8,172(sp)
   28584:	da402c17 	ldw	r9,176(sp)
   28588:	10024826 	beq	r2,zero,28eac <___vfiprintf_internal_r+0x138c>
   2858c:	1567c83a 	sub	r19,r2,r21
   28590:	df001d83 	ldbu	fp,118(sp)
   28594:	d8c02215 	stw	r3,136(sp)
   28598:	0013883a 	mov	r9,zero
   2859c:	003e6006 	br	27f20 <__alt_data_end+0xfffe7f20>
   285a0:	21003fcc 	andi	r4,r4,255
   285a4:	203fc026 	beq	r4,zero,284a8 <__alt_data_end+0xfffe84a8>
   285a8:	d9c01d85 	stb	r7,118(sp)
   285ac:	003fbe06 	br	284a8 <__alt_data_end+0xfffe84a8>
   285b0:	da802217 	ldw	r10,136(sp)
   285b4:	54400017 	ldw	r17,0(r10)
   285b8:	50800104 	addi	r2,r10,4
   285bc:	883e3b16 	blt	r17,zero,27eac <__alt_data_end+0xfffe7eac>
   285c0:	d8802215 	stw	r2,136(sp)
   285c4:	80c00007 	ldb	r3,0(r16)
   285c8:	003db406 	br	27c9c <__alt_data_end+0xfffe7c9c>
   285cc:	01000044 	movi	r4,1
   285d0:	01c00ac4 	movi	r7,43
   285d4:	80c00007 	ldb	r3,0(r16)
   285d8:	003db006 	br	27c9c <__alt_data_end+0xfffe7c9c>
   285dc:	80c00007 	ldb	r3,0(r16)
   285e0:	82800044 	addi	r10,r16,1
   285e4:	1b423c26 	beq	r3,r13,28ed8 <___vfiprintf_internal_r+0x13b8>
   285e8:	18bff404 	addi	r2,r3,-48
   285ec:	0013883a 	mov	r9,zero
   285f0:	30822b36 	bltu	r6,r2,28ea0 <___vfiprintf_internal_r+0x1380>
   285f4:	50c00007 	ldb	r3,0(r10)
   285f8:	4a4002a4 	muli	r9,r9,10
   285fc:	54000044 	addi	r16,r10,1
   28600:	8015883a 	mov	r10,r16
   28604:	4893883a 	add	r9,r9,r2
   28608:	18bff404 	addi	r2,r3,-48
   2860c:	30bff92e 	bgeu	r6,r2,285f4 <__alt_data_end+0xfffe85f4>
   28610:	483da30e 	bge	r9,zero,27ca0 <__alt_data_end+0xfffe7ca0>
   28614:	027fffc4 	movi	r9,-1
   28618:	003da106 	br	27ca0 <__alt_data_end+0xfffe7ca0>
   2861c:	a5001014 	ori	r20,r20,64
   28620:	80c00007 	ldb	r3,0(r16)
   28624:	003d9d06 	br	27c9c <__alt_data_end+0xfffe7c9c>
   28628:	da802217 	ldw	r10,136(sp)
   2862c:	d8001d85 	stb	zero,118(sp)
   28630:	50c00204 	addi	r3,r10,8
   28634:	54800017 	ldw	r18,0(r10)
   28638:	54c00117 	ldw	r19,4(r10)
   2863c:	4801ca16 	blt	r9,zero,28d68 <___vfiprintf_internal_r+0x1248>
   28640:	013fdfc4 	movi	r4,-129
   28644:	94c4b03a 	or	r2,r18,r19
   28648:	d8c02215 	stw	r3,136(sp)
   2864c:	a128703a 	and	r20,r20,r4
   28650:	0039883a 	mov	fp,zero
   28654:	103f341e 	bne	r2,zero,28328 <__alt_data_end+0xfffe8328>
   28658:	483e2e26 	beq	r9,zero,27f14 <__alt_data_end+0xfffe7f14>
   2865c:	0025883a 	mov	r18,zero
   28660:	94800c04 	addi	r18,r18,48
   28664:	dc8019c5 	stb	r18,103(sp)
   28668:	dcc02717 	ldw	r19,156(sp)
   2866c:	dd4019c4 	addi	r21,sp,103
   28670:	003e2b06 	br	27f20 <__alt_data_end+0xfffe7f20>
   28674:	21003fcc 	andi	r4,r4,255
   28678:	2002361e 	bne	r4,zero,28f54 <___vfiprintf_internal_r+0x1434>
   2867c:	1801c126 	beq	r3,zero,28d84 <___vfiprintf_internal_r+0x1264>
   28680:	04800044 	movi	r18,1
   28684:	d8c01005 	stb	r3,64(sp)
   28688:	d8001d85 	stb	zero,118(sp)
   2868c:	9027883a 	mov	r19,r18
   28690:	dd401004 	addi	r21,sp,64
   28694:	003f1106 	br	282dc <__alt_data_end+0xfffe82dc>
   28698:	d9402117 	ldw	r5,132(sp)
   2869c:	d9002017 	ldw	r4,128(sp)
   286a0:	d9801a04 	addi	r6,sp,104
   286a4:	d9c02b15 	stw	r7,172(sp)
   286a8:	dbc02a15 	stw	r15,168(sp)
   286ac:	0027a0c0 	call	27a0c <__sprint_r.part.0>
   286b0:	d9c02b17 	ldw	r7,172(sp)
   286b4:	dbc02a17 	ldw	r15,168(sp)
   286b8:	10006d1e 	bne	r2,zero,28870 <___vfiprintf_internal_r+0xd50>
   286bc:	d9801b17 	ldw	r6,108(sp)
   286c0:	d8801c17 	ldw	r2,112(sp)
   286c4:	d811883a 	mov	r8,sp
   286c8:	31400044 	addi	r5,r6,1
   286cc:	003e3306 	br	27f9c <__alt_data_end+0xfffe7f9c>
   286d0:	d9401b17 	ldw	r5,108(sp)
   286d4:	d8801c17 	ldw	r2,112(sp)
   286d8:	29000044 	addi	r4,r5,1
   286dc:	d8c01d87 	ldb	r3,118(sp)
   286e0:	183e4d26 	beq	r3,zero,28018 <__alt_data_end+0xfffe8018>
   286e4:	00c00044 	movi	r3,1
   286e8:	d9401d84 	addi	r5,sp,118
   286ec:	10c5883a 	add	r2,r2,r3
   286f0:	41400015 	stw	r5,0(r8)
   286f4:	40c00115 	stw	r3,4(r8)
   286f8:	d8801c15 	stw	r2,112(sp)
   286fc:	d9001b15 	stw	r4,108(sp)
   28700:	014001c4 	movi	r5,7
   28704:	2900a90e 	bge	r5,r4,289ac <___vfiprintf_internal_r+0xe8c>
   28708:	1000da1e 	bne	r2,zero,28a74 <___vfiprintf_internal_r+0xf54>
   2870c:	7000ab1e 	bne	r14,zero,289bc <___vfiprintf_internal_r+0xe9c>
   28710:	000b883a 	mov	r5,zero
   28714:	1809883a 	mov	r4,r3
   28718:	d811883a 	mov	r8,sp
   2871c:	00c02004 	movi	r3,128
   28720:	e0fe4d26 	beq	fp,r3,28058 <__alt_data_end+0xfffe8058>
   28724:	4cf9c83a 	sub	fp,r9,r19
   28728:	073e7b0e 	bge	zero,fp,28118 <__alt_data_end+0xfffe8118>
   2872c:	01c00404 	movi	r7,16
   28730:	3f01900e 	bge	r7,fp,28d74 <___vfiprintf_internal_r+0x1254>
   28734:	00c000f4 	movhi	r3,3
   28738:	18fd7604 	addi	r3,r3,-2600
   2873c:	d8c02415 	stw	r3,144(sp)
   28740:	034001c4 	movi	r13,7
   28744:	00000506 	br	2875c <___vfiprintf_internal_r+0xc3c>
   28748:	29000084 	addi	r4,r5,2
   2874c:	42000204 	addi	r8,r8,8
   28750:	180b883a 	mov	r5,r3
   28754:	e73ffc04 	addi	fp,fp,-16
   28758:	3f000d0e 	bge	r7,fp,28790 <___vfiprintf_internal_r+0xc70>
   2875c:	10800404 	addi	r2,r2,16
   28760:	28c00044 	addi	r3,r5,1
   28764:	45c00015 	stw	r23,0(r8)
   28768:	41c00115 	stw	r7,4(r8)
   2876c:	d8801c15 	stw	r2,112(sp)
   28770:	d8c01b15 	stw	r3,108(sp)
   28774:	68fff40e 	bge	r13,r3,28748 <__alt_data_end+0xfffe8748>
   28778:	1000101e 	bne	r2,zero,287bc <___vfiprintf_internal_r+0xc9c>
   2877c:	e73ffc04 	addi	fp,fp,-16
   28780:	01000044 	movi	r4,1
   28784:	000b883a 	mov	r5,zero
   28788:	d811883a 	mov	r8,sp
   2878c:	3f3ff316 	blt	r7,fp,2875c <__alt_data_end+0xfffe875c>
   28790:	da802417 	ldw	r10,144(sp)
   28794:	1705883a 	add	r2,r2,fp
   28798:	47000115 	stw	fp,4(r8)
   2879c:	42800015 	stw	r10,0(r8)
   287a0:	d8801c15 	stw	r2,112(sp)
   287a4:	d9001b15 	stw	r4,108(sp)
   287a8:	00c001c4 	movi	r3,7
   287ac:	19003616 	blt	r3,r4,28888 <___vfiprintf_internal_r+0xd68>
   287b0:	42000204 	addi	r8,r8,8
   287b4:	21000044 	addi	r4,r4,1
   287b8:	003e5706 	br	28118 <__alt_data_end+0xfffe8118>
   287bc:	d9402117 	ldw	r5,132(sp)
   287c0:	d9002017 	ldw	r4,128(sp)
   287c4:	d9801a04 	addi	r6,sp,104
   287c8:	d9c02b15 	stw	r7,172(sp)
   287cc:	db402a15 	stw	r13,168(sp)
   287d0:	0027a0c0 	call	27a0c <__sprint_r.part.0>
   287d4:	d9c02b17 	ldw	r7,172(sp)
   287d8:	db402a17 	ldw	r13,168(sp)
   287dc:	1000241e 	bne	r2,zero,28870 <___vfiprintf_internal_r+0xd50>
   287e0:	d9401b17 	ldw	r5,108(sp)
   287e4:	d8801c17 	ldw	r2,112(sp)
   287e8:	d811883a 	mov	r8,sp
   287ec:	29000044 	addi	r4,r5,1
   287f0:	003fd806 	br	28754 <__alt_data_end+0xfffe8754>
   287f4:	d9401b17 	ldw	r5,108(sp)
   287f8:	00c000f4 	movhi	r3,3
   287fc:	18fd7a04 	addi	r3,r3,-2584
   28800:	d8c02415 	stw	r3,144(sp)
   28804:	29400044 	addi	r5,r5,1
   28808:	d8c02417 	ldw	r3,144(sp)
   2880c:	14c5883a 	add	r2,r2,r19
   28810:	44c00115 	stw	r19,4(r8)
   28814:	40c00015 	stw	r3,0(r8)
   28818:	d8801c15 	stw	r2,112(sp)
   2881c:	d9401b15 	stw	r5,108(sp)
   28820:	00c001c4 	movi	r3,7
   28824:	1940070e 	bge	r3,r5,28844 <___vfiprintf_internal_r+0xd24>
   28828:	103e4826 	beq	r2,zero,2814c <__alt_data_end+0xfffe814c>
   2882c:	d9402117 	ldw	r5,132(sp)
   28830:	d9002017 	ldw	r4,128(sp)
   28834:	d9801a04 	addi	r6,sp,104
   28838:	0027a0c0 	call	27a0c <__sprint_r.part.0>
   2883c:	10000c1e 	bne	r2,zero,28870 <___vfiprintf_internal_r+0xd50>
   28840:	d8801c17 	ldw	r2,112(sp)
   28844:	8c80010e 	bge	r17,r18,2884c <___vfiprintf_internal_r+0xd2c>
   28848:	9023883a 	mov	r17,r18
   2884c:	da802317 	ldw	r10,140(sp)
   28850:	5455883a 	add	r10,r10,r17
   28854:	da802315 	stw	r10,140(sp)
   28858:	103e4126 	beq	r2,zero,28160 <__alt_data_end+0xfffe8160>
   2885c:	d9402117 	ldw	r5,132(sp)
   28860:	d9002017 	ldw	r4,128(sp)
   28864:	d9801a04 	addi	r6,sp,104
   28868:	0027a0c0 	call	27a0c <__sprint_r.part.0>
   2886c:	103e3c26 	beq	r2,zero,28160 <__alt_data_end+0xfffe8160>
   28870:	dd002117 	ldw	r20,132(sp)
   28874:	a080030b 	ldhu	r2,12(r20)
   28878:	1080100c 	andi	r2,r2,64
   2887c:	1001231e 	bne	r2,zero,28d0c <___vfiprintf_internal_r+0x11ec>
   28880:	d8802317 	ldw	r2,140(sp)
   28884:	003d7b06 	br	27e74 <__alt_data_end+0xfffe7e74>
   28888:	1000991e 	bne	r2,zero,28af0 <___vfiprintf_internal_r+0xfd0>
   2888c:	00c00044 	movi	r3,1
   28890:	9805883a 	mov	r2,r19
   28894:	dd400015 	stw	r21,0(sp)
   28898:	dcc00115 	stw	r19,4(sp)
   2889c:	dcc01c15 	stw	r19,112(sp)
   288a0:	d8c01b15 	stw	r3,108(sp)
   288a4:	d811883a 	mov	r8,sp
   288a8:	42000204 	addi	r8,r8,8
   288ac:	a2c0010c 	andi	r11,r20,4
   288b0:	583fe426 	beq	r11,zero,28844 <__alt_data_end+0xfffe8844>
   288b4:	8ca7c83a 	sub	r19,r17,r18
   288b8:	04ffe20e 	bge	zero,r19,28844 <__alt_data_end+0xfffe8844>
   288bc:	01c00404 	movi	r7,16
   288c0:	3cffcc0e 	bge	r7,r19,287f4 <__alt_data_end+0xfffe87f4>
   288c4:	028000f4 	movhi	r10,3
   288c8:	52bd7a04 	addi	r10,r10,-2584
   288cc:	d9001b17 	ldw	r4,108(sp)
   288d0:	da802415 	stw	r10,144(sp)
   288d4:	382b883a 	mov	r21,r7
   288d8:	050001c4 	movi	r20,7
   288dc:	df002017 	ldw	fp,128(sp)
   288e0:	00000506 	br	288f8 <___vfiprintf_internal_r+0xdd8>
   288e4:	21400084 	addi	r5,r4,2
   288e8:	42000204 	addi	r8,r8,8
   288ec:	1809883a 	mov	r4,r3
   288f0:	9cfffc04 	addi	r19,r19,-16
   288f4:	acffc40e 	bge	r21,r19,28808 <__alt_data_end+0xfffe8808>
   288f8:	10800404 	addi	r2,r2,16
   288fc:	20c00044 	addi	r3,r4,1
   28900:	45800015 	stw	r22,0(r8)
   28904:	45400115 	stw	r21,4(r8)
   28908:	d8801c15 	stw	r2,112(sp)
   2890c:	d8c01b15 	stw	r3,108(sp)
   28910:	a0fff40e 	bge	r20,r3,288e4 <__alt_data_end+0xfffe88e4>
   28914:	1000041e 	bne	r2,zero,28928 <___vfiprintf_internal_r+0xe08>
   28918:	01400044 	movi	r5,1
   2891c:	0009883a 	mov	r4,zero
   28920:	d811883a 	mov	r8,sp
   28924:	003ff206 	br	288f0 <__alt_data_end+0xfffe88f0>
   28928:	d9402117 	ldw	r5,132(sp)
   2892c:	d9801a04 	addi	r6,sp,104
   28930:	e009883a 	mov	r4,fp
   28934:	0027a0c0 	call	27a0c <__sprint_r.part.0>
   28938:	103fcd1e 	bne	r2,zero,28870 <__alt_data_end+0xfffe8870>
   2893c:	d9001b17 	ldw	r4,108(sp)
   28940:	d8801c17 	ldw	r2,112(sp)
   28944:	d811883a 	mov	r8,sp
   28948:	21400044 	addi	r5,r4,1
   2894c:	003fe806 	br	288f0 <__alt_data_end+0xfffe88f0>
   28950:	d9402117 	ldw	r5,132(sp)
   28954:	d9002017 	ldw	r4,128(sp)
   28958:	d9801a04 	addi	r6,sp,104
   2895c:	d9c02b15 	stw	r7,172(sp)
   28960:	db402a15 	stw	r13,168(sp)
   28964:	0027a0c0 	call	27a0c <__sprint_r.part.0>
   28968:	d9c02b17 	ldw	r7,172(sp)
   2896c:	db402a17 	ldw	r13,168(sp)
   28970:	103fbf1e 	bne	r2,zero,28870 <__alt_data_end+0xfffe8870>
   28974:	d9401b17 	ldw	r5,108(sp)
   28978:	d8801c17 	ldw	r2,112(sp)
   2897c:	d811883a 	mov	r8,sp
   28980:	29800044 	addi	r6,r5,1
   28984:	003dc406 	br	28098 <__alt_data_end+0xfffe8098>
   28988:	1000d21e 	bne	r2,zero,28cd4 <___vfiprintf_internal_r+0x11b4>
   2898c:	d8c01d87 	ldb	r3,118(sp)
   28990:	18009526 	beq	r3,zero,28be8 <___vfiprintf_internal_r+0x10c8>
   28994:	00800044 	movi	r2,1
   28998:	d8c01d84 	addi	r3,sp,118
   2899c:	1009883a 	mov	r4,r2
   289a0:	d8c00015 	stw	r3,0(sp)
   289a4:	d8800115 	stw	r2,4(sp)
   289a8:	d811883a 	mov	r8,sp
   289ac:	200b883a 	mov	r5,r4
   289b0:	42000204 	addi	r8,r8,8
   289b4:	21000044 	addi	r4,r4,1
   289b8:	003d9706 	br	28018 <__alt_data_end+0xfffe8018>
   289bc:	d9001d04 	addi	r4,sp,116
   289c0:	00800084 	movi	r2,2
   289c4:	d9000015 	stw	r4,0(sp)
   289c8:	d8800115 	stw	r2,4(sp)
   289cc:	1809883a 	mov	r4,r3
   289d0:	d811883a 	mov	r8,sp
   289d4:	200b883a 	mov	r5,r4
   289d8:	42000204 	addi	r8,r8,8
   289dc:	21000044 	addi	r4,r4,1
   289e0:	003f4e06 	br	2871c <__alt_data_end+0xfffe871c>
   289e4:	d8001d85 	stb	zero,118(sp)
   289e8:	48005016 	blt	r9,zero,28b2c <___vfiprintf_internal_r+0x100c>
   289ec:	00ffdfc4 	movi	r3,-129
   289f0:	94c4b03a 	or	r2,r18,r19
   289f4:	a0e8703a 	and	r20,r20,r3
   289f8:	103d4426 	beq	r2,zero,27f0c <__alt_data_end+0xfffe7f0c>
   289fc:	0039883a 	mov	fp,zero
   28a00:	d9002617 	ldw	r4,152(sp)
   28a04:	dd401a04 	addi	r21,sp,104
   28a08:	908003cc 	andi	r2,r18,15
   28a0c:	9806973a 	slli	r3,r19,28
   28a10:	2085883a 	add	r2,r4,r2
   28a14:	9024d13a 	srli	r18,r18,4
   28a18:	10800003 	ldbu	r2,0(r2)
   28a1c:	9826d13a 	srli	r19,r19,4
   28a20:	ad7fffc4 	addi	r21,r21,-1
   28a24:	1ca4b03a 	or	r18,r3,r18
   28a28:	a8800005 	stb	r2,0(r21)
   28a2c:	94c4b03a 	or	r2,r18,r19
   28a30:	103ff51e 	bne	r2,zero,28a08 <__alt_data_end+0xfffe8a08>
   28a34:	003e5906 	br	2839c <__alt_data_end+0xfffe839c>
   28a38:	d9402117 	ldw	r5,132(sp)
   28a3c:	d9002017 	ldw	r4,128(sp)
   28a40:	d9801a04 	addi	r6,sp,104
   28a44:	0027a0c0 	call	27a0c <__sprint_r.part.0>
   28a48:	103f891e 	bne	r2,zero,28870 <__alt_data_end+0xfffe8870>
   28a4c:	d8801c17 	ldw	r2,112(sp)
   28a50:	d811883a 	mov	r8,sp
   28a54:	003f9506 	br	288ac <__alt_data_end+0xfffe88ac>
   28a58:	d9402117 	ldw	r5,132(sp)
   28a5c:	d9002017 	ldw	r4,128(sp)
   28a60:	d9801a04 	addi	r6,sp,104
   28a64:	0027a0c0 	call	27a0c <__sprint_r.part.0>
   28a68:	103f811e 	bne	r2,zero,28870 <__alt_data_end+0xfffe8870>
   28a6c:	d811883a 	mov	r8,sp
   28a70:	003ced06 	br	27e28 <__alt_data_end+0xfffe7e28>
   28a74:	d9402117 	ldw	r5,132(sp)
   28a78:	d9002017 	ldw	r4,128(sp)
   28a7c:	d9801a04 	addi	r6,sp,104
   28a80:	da402c15 	stw	r9,176(sp)
   28a84:	db802a15 	stw	r14,168(sp)
   28a88:	0027a0c0 	call	27a0c <__sprint_r.part.0>
   28a8c:	da402c17 	ldw	r9,176(sp)
   28a90:	db802a17 	ldw	r14,168(sp)
   28a94:	103f761e 	bne	r2,zero,28870 <__alt_data_end+0xfffe8870>
   28a98:	d9401b17 	ldw	r5,108(sp)
   28a9c:	d8801c17 	ldw	r2,112(sp)
   28aa0:	d811883a 	mov	r8,sp
   28aa4:	29000044 	addi	r4,r5,1
   28aa8:	003d5b06 	br	28018 <__alt_data_end+0xfffe8018>
   28aac:	d9402117 	ldw	r5,132(sp)
   28ab0:	d9002017 	ldw	r4,128(sp)
   28ab4:	d9801a04 	addi	r6,sp,104
   28ab8:	da402c15 	stw	r9,176(sp)
   28abc:	0027a0c0 	call	27a0c <__sprint_r.part.0>
   28ac0:	da402c17 	ldw	r9,176(sp)
   28ac4:	103f6a1e 	bne	r2,zero,28870 <__alt_data_end+0xfffe8870>
   28ac8:	d9401b17 	ldw	r5,108(sp)
   28acc:	d8801c17 	ldw	r2,112(sp)
   28ad0:	d811883a 	mov	r8,sp
   28ad4:	29000044 	addi	r4,r5,1
   28ad8:	003f1006 	br	2871c <__alt_data_end+0xfffe871c>
   28adc:	1000c31e 	bne	r2,zero,28dec <___vfiprintf_internal_r+0x12cc>
   28ae0:	01000044 	movi	r4,1
   28ae4:	000b883a 	mov	r5,zero
   28ae8:	d811883a 	mov	r8,sp
   28aec:	003f0d06 	br	28724 <__alt_data_end+0xfffe8724>
   28af0:	d9402117 	ldw	r5,132(sp)
   28af4:	d9002017 	ldw	r4,128(sp)
   28af8:	d9801a04 	addi	r6,sp,104
   28afc:	0027a0c0 	call	27a0c <__sprint_r.part.0>
   28b00:	103f5b1e 	bne	r2,zero,28870 <__alt_data_end+0xfffe8870>
   28b04:	d9001b17 	ldw	r4,108(sp)
   28b08:	d8801c17 	ldw	r2,112(sp)
   28b0c:	d811883a 	mov	r8,sp
   28b10:	21000044 	addi	r4,r4,1
   28b14:	003d8006 	br	28118 <__alt_data_end+0xfffe8118>
   28b18:	010000f4 	movhi	r4,3
   28b1c:	213d1504 	addi	r4,r4,-2988
   28b20:	d9002615 	stw	r4,152(sp)
   28b24:	d8c02215 	stw	r3,136(sp)
   28b28:	1029883a 	mov	r20,r2
   28b2c:	94c4b03a 	or	r2,r18,r19
   28b30:	103fb21e 	bne	r2,zero,289fc <__alt_data_end+0xfffe89fc>
   28b34:	0039883a 	mov	fp,zero
   28b38:	00800084 	movi	r2,2
   28b3c:	003e6b06 	br	284ec <__alt_data_end+0xfffe84ec>
   28b40:	da802217 	ldw	r10,136(sp)
   28b44:	d8001d85 	stb	zero,118(sp)
   28b48:	0027883a 	mov	r19,zero
   28b4c:	50800104 	addi	r2,r10,4
   28b50:	54800017 	ldw	r18,0(r10)
   28b54:	483e6016 	blt	r9,zero,284d8 <__alt_data_end+0xfffe84d8>
   28b58:	00ffdfc4 	movi	r3,-129
   28b5c:	d8802215 	stw	r2,136(sp)
   28b60:	a0e8703a 	and	r20,r20,r3
   28b64:	0039883a 	mov	fp,zero
   28b68:	903ebb26 	beq	r18,zero,28658 <__alt_data_end+0xfffe8658>
   28b6c:	00800244 	movi	r2,9
   28b70:	14bdee36 	bltu	r2,r18,2832c <__alt_data_end+0xfffe832c>
   28b74:	003eba06 	br	28660 <__alt_data_end+0xfffe8660>
   28b78:	00800c04 	movi	r2,48
   28b7c:	d8c01d45 	stb	r3,117(sp)
   28b80:	d8801d05 	stb	r2,116(sp)
   28b84:	d8001d85 	stb	zero,118(sp)
   28b88:	a0c00094 	ori	r3,r20,2
   28b8c:	4800a916 	blt	r9,zero,28e34 <___vfiprintf_internal_r+0x1314>
   28b90:	00bfdfc4 	movi	r2,-129
   28b94:	a096703a 	and	r11,r20,r2
   28b98:	5d000094 	ori	r20,r11,2
   28b9c:	0039883a 	mov	fp,zero
   28ba0:	003f9706 	br	28a00 <__alt_data_end+0xfffe8a00>
   28ba4:	8025883a 	mov	r18,r16
   28ba8:	003c2e06 	br	27c64 <__alt_data_end+0xfffe7c64>
   28bac:	008000f4 	movhi	r2,3
   28bb0:	10bd1504 	addi	r2,r2,-2988
   28bb4:	0039883a 	mov	fp,zero
   28bb8:	d8802615 	stw	r2,152(sp)
   28bbc:	003f9006 	br	28a00 <__alt_data_end+0xfffe8a00>
   28bc0:	04a5c83a 	sub	r18,zero,r18
   28bc4:	07000b44 	movi	fp,45
   28bc8:	9004c03a 	cmpne	r2,r18,zero
   28bcc:	04e7c83a 	sub	r19,zero,r19
   28bd0:	df001d85 	stb	fp,118(sp)
   28bd4:	98a7c83a 	sub	r19,r19,r2
   28bd8:	48009f16 	blt	r9,zero,28e58 <___vfiprintf_internal_r+0x1338>
   28bdc:	00bfdfc4 	movi	r2,-129
   28be0:	a0a8703a 	and	r20,r20,r2
   28be4:	003dd006 	br	28328 <__alt_data_end+0xfffe8328>
   28be8:	70004c26 	beq	r14,zero,28d1c <___vfiprintf_internal_r+0x11fc>
   28bec:	00800084 	movi	r2,2
   28bf0:	d8c01d04 	addi	r3,sp,116
   28bf4:	d8c00015 	stw	r3,0(sp)
   28bf8:	d8800115 	stw	r2,4(sp)
   28bfc:	01000044 	movi	r4,1
   28c00:	d811883a 	mov	r8,sp
   28c04:	003f7306 	br	289d4 <__alt_data_end+0xfffe89d4>
   28c08:	a080100c 	andi	r2,r20,64
   28c0c:	da802217 	ldw	r10,136(sp)
   28c10:	103e0626 	beq	r2,zero,2842c <__alt_data_end+0xfffe842c>
   28c14:	5480000f 	ldh	r18,0(r10)
   28c18:	52800104 	addi	r10,r10,4
   28c1c:	da802215 	stw	r10,136(sp)
   28c20:	9027d7fa 	srai	r19,r18,31
   28c24:	9805883a 	mov	r2,r19
   28c28:	003db806 	br	2830c <__alt_data_end+0xfffe830c>
   28c2c:	a080040c 	andi	r2,r20,16
   28c30:	1000091e 	bne	r2,zero,28c58 <___vfiprintf_internal_r+0x1138>
   28c34:	a2c0100c 	andi	r11,r20,64
   28c38:	58000726 	beq	r11,zero,28c58 <___vfiprintf_internal_r+0x1138>
   28c3c:	da802217 	ldw	r10,136(sp)
   28c40:	50800017 	ldw	r2,0(r10)
   28c44:	52800104 	addi	r10,r10,4
   28c48:	da802215 	stw	r10,136(sp)
   28c4c:	da802317 	ldw	r10,140(sp)
   28c50:	1280000d 	sth	r10,0(r2)
   28c54:	003be706 	br	27bf4 <__alt_data_end+0xfffe7bf4>
   28c58:	da802217 	ldw	r10,136(sp)
   28c5c:	50800017 	ldw	r2,0(r10)
   28c60:	52800104 	addi	r10,r10,4
   28c64:	da802215 	stw	r10,136(sp)
   28c68:	da802317 	ldw	r10,140(sp)
   28c6c:	12800015 	stw	r10,0(r2)
   28c70:	003be006 	br	27bf4 <__alt_data_end+0xfffe7bf4>
   28c74:	a080100c 	andi	r2,r20,64
   28c78:	da802217 	ldw	r10,136(sp)
   28c7c:	10003026 	beq	r2,zero,28d40 <___vfiprintf_internal_r+0x1220>
   28c80:	5480000b 	ldhu	r18,0(r10)
   28c84:	52800104 	addi	r10,r10,4
   28c88:	0027883a 	mov	r19,zero
   28c8c:	da802215 	stw	r10,136(sp)
   28c90:	003d8006 	br	28294 <__alt_data_end+0xfffe8294>
   28c94:	80c00007 	ldb	r3,0(r16)
   28c98:	003c0006 	br	27c9c <__alt_data_end+0xfffe7c9c>
   28c9c:	a080100c 	andi	r2,r20,64
   28ca0:	d8001d85 	stb	zero,118(sp)
   28ca4:	da802217 	ldw	r10,136(sp)
   28ca8:	1000201e 	bne	r2,zero,28d2c <___vfiprintf_internal_r+0x120c>
   28cac:	50800104 	addi	r2,r10,4
   28cb0:	54800017 	ldw	r18,0(r10)
   28cb4:	0027883a 	mov	r19,zero
   28cb8:	483def0e 	bge	r9,zero,28478 <__alt_data_end+0xfffe8478>
   28cbc:	94c6b03a 	or	r3,r18,r19
   28cc0:	d8802215 	stw	r2,136(sp)
   28cc4:	183d4e1e 	bne	r3,zero,28200 <__alt_data_end+0xfffe8200>
   28cc8:	0039883a 	mov	fp,zero
   28ccc:	0005883a 	mov	r2,zero
   28cd0:	003e0606 	br	284ec <__alt_data_end+0xfffe84ec>
   28cd4:	d9402117 	ldw	r5,132(sp)
   28cd8:	d9002017 	ldw	r4,128(sp)
   28cdc:	d9801a04 	addi	r6,sp,104
   28ce0:	da402c15 	stw	r9,176(sp)
   28ce4:	db802a15 	stw	r14,168(sp)
   28ce8:	0027a0c0 	call	27a0c <__sprint_r.part.0>
   28cec:	da402c17 	ldw	r9,176(sp)
   28cf0:	db802a17 	ldw	r14,168(sp)
   28cf4:	103ede1e 	bne	r2,zero,28870 <__alt_data_end+0xfffe8870>
   28cf8:	d9401b17 	ldw	r5,108(sp)
   28cfc:	d8801c17 	ldw	r2,112(sp)
   28d00:	d811883a 	mov	r8,sp
   28d04:	29000044 	addi	r4,r5,1
   28d08:	003e7406 	br	286dc <__alt_data_end+0xfffe86dc>
   28d0c:	00bfffc4 	movi	r2,-1
   28d10:	003c5806 	br	27e74 <__alt_data_end+0xfffe7e74>
   28d14:	d811883a 	mov	r8,sp
   28d18:	003ee806 	br	288bc <__alt_data_end+0xfffe88bc>
   28d1c:	000b883a 	mov	r5,zero
   28d20:	01000044 	movi	r4,1
   28d24:	d811883a 	mov	r8,sp
   28d28:	003e7c06 	br	2871c <__alt_data_end+0xfffe871c>
   28d2c:	50800104 	addi	r2,r10,4
   28d30:	5480000b 	ldhu	r18,0(r10)
   28d34:	0027883a 	mov	r19,zero
   28d38:	483dcf0e 	bge	r9,zero,28478 <__alt_data_end+0xfffe8478>
   28d3c:	003fdf06 	br	28cbc <__alt_data_end+0xfffe8cbc>
   28d40:	54800017 	ldw	r18,0(r10)
   28d44:	52800104 	addi	r10,r10,4
   28d48:	0027883a 	mov	r19,zero
   28d4c:	da802215 	stw	r10,136(sp)
   28d50:	003d5006 	br	28294 <__alt_data_end+0xfffe8294>
   28d54:	50800104 	addi	r2,r10,4
   28d58:	5480000b 	ldhu	r18,0(r10)
   28d5c:	0027883a 	mov	r19,zero
   28d60:	483f7d0e 	bge	r9,zero,28b58 <__alt_data_end+0xfffe8b58>
   28d64:	003ddc06 	br	284d8 <__alt_data_end+0xfffe84d8>
   28d68:	d8c02215 	stw	r3,136(sp)
   28d6c:	0039883a 	mov	fp,zero
   28d70:	003ddb06 	br	284e0 <__alt_data_end+0xfffe84e0>
   28d74:	028000f4 	movhi	r10,3
   28d78:	52bd7604 	addi	r10,r10,-2600
   28d7c:	da802415 	stw	r10,144(sp)
   28d80:	003e8306 	br	28790 <__alt_data_end+0xfffe8790>
   28d84:	d8801c17 	ldw	r2,112(sp)
   28d88:	dd002117 	ldw	r20,132(sp)
   28d8c:	103eb926 	beq	r2,zero,28874 <__alt_data_end+0xfffe8874>
   28d90:	d9002017 	ldw	r4,128(sp)
   28d94:	d9801a04 	addi	r6,sp,104
   28d98:	a00b883a 	mov	r5,r20
   28d9c:	0027a0c0 	call	27a0c <__sprint_r.part.0>
   28da0:	003eb406 	br	28874 <__alt_data_end+0xfffe8874>
   28da4:	80c00043 	ldbu	r3,1(r16)
   28da8:	a5000814 	ori	r20,r20,32
   28dac:	84000044 	addi	r16,r16,1
   28db0:	18c03fcc 	andi	r3,r3,255
   28db4:	18c0201c 	xori	r3,r3,128
   28db8:	18ffe004 	addi	r3,r3,-128
   28dbc:	003bb706 	br	27c9c <__alt_data_end+0xfffe7c9c>
   28dc0:	a809883a 	mov	r4,r21
   28dc4:	d8c02a15 	stw	r3,168(sp)
   28dc8:	da002b15 	stw	r8,172(sp)
   28dcc:	00204740 	call	20474 <strlen>
   28dd0:	d8c02a17 	ldw	r3,168(sp)
   28dd4:	1027883a 	mov	r19,r2
   28dd8:	df001d83 	ldbu	fp,118(sp)
   28ddc:	d8c02215 	stw	r3,136(sp)
   28de0:	0013883a 	mov	r9,zero
   28de4:	da002b17 	ldw	r8,172(sp)
   28de8:	003c4d06 	br	27f20 <__alt_data_end+0xfffe7f20>
   28dec:	d9402117 	ldw	r5,132(sp)
   28df0:	d9002017 	ldw	r4,128(sp)
   28df4:	d9801a04 	addi	r6,sp,104
   28df8:	da402c15 	stw	r9,176(sp)
   28dfc:	0027a0c0 	call	27a0c <__sprint_r.part.0>
   28e00:	da402c17 	ldw	r9,176(sp)
   28e04:	103e9a1e 	bne	r2,zero,28870 <__alt_data_end+0xfffe8870>
   28e08:	d9401b17 	ldw	r5,108(sp)
   28e0c:	d8801c17 	ldw	r2,112(sp)
   28e10:	d811883a 	mov	r8,sp
   28e14:	29000044 	addi	r4,r5,1
   28e18:	003e4206 	br	28724 <__alt_data_end+0xfffe8724>
   28e1c:	d9401b17 	ldw	r5,108(sp)
   28e20:	010000f4 	movhi	r4,3
   28e24:	213d7a04 	addi	r4,r4,-2584
   28e28:	d9002415 	stw	r4,144(sp)
   28e2c:	29400044 	addi	r5,r5,1
   28e30:	003c6d06 	br	27fe8 <__alt_data_end+0xfffe7fe8>
   28e34:	0039883a 	mov	fp,zero
   28e38:	00800084 	movi	r2,2
   28e3c:	10803fcc 	andi	r2,r2,255
   28e40:	01000044 	movi	r4,1
   28e44:	11001e26 	beq	r2,r4,28ec0 <___vfiprintf_internal_r+0x13a0>
   28e48:	01000084 	movi	r4,2
   28e4c:	11001e1e 	bne	r2,r4,28ec8 <___vfiprintf_internal_r+0x13a8>
   28e50:	1829883a 	mov	r20,r3
   28e54:	003eea06 	br	28a00 <__alt_data_end+0xfffe8a00>
   28e58:	a007883a 	mov	r3,r20
   28e5c:	00800044 	movi	r2,1
   28e60:	003ff606 	br	28e3c <__alt_data_end+0xfffe8e3c>
   28e64:	00800184 	movi	r2,6
   28e68:	1240012e 	bgeu	r2,r9,28e70 <___vfiprintf_internal_r+0x1350>
   28e6c:	1013883a 	mov	r9,r2
   28e70:	4827883a 	mov	r19,r9
   28e74:	4825883a 	mov	r18,r9
   28e78:	48001516 	blt	r9,zero,28ed0 <___vfiprintf_internal_r+0x13b0>
   28e7c:	054000f4 	movhi	r21,3
   28e80:	d8c02215 	stw	r3,136(sp)
   28e84:	ad7d1a04 	addi	r21,r21,-2968
   28e88:	003d1406 	br	282dc <__alt_data_end+0xfffe82dc>
   28e8c:	028000f4 	movhi	r10,3
   28e90:	52bd7604 	addi	r10,r10,-2600
   28e94:	da802415 	stw	r10,144(sp)
   28e98:	200d883a 	mov	r6,r4
   28e9c:	003c9106 	br	280e4 <__alt_data_end+0xfffe80e4>
   28ea0:	5021883a 	mov	r16,r10
   28ea4:	0013883a 	mov	r9,zero
   28ea8:	003b7d06 	br	27ca0 <__alt_data_end+0xfffe7ca0>
   28eac:	4827883a 	mov	r19,r9
   28eb0:	df001d83 	ldbu	fp,118(sp)
   28eb4:	d8c02215 	stw	r3,136(sp)
   28eb8:	0013883a 	mov	r9,zero
   28ebc:	003c1806 	br	27f20 <__alt_data_end+0xfffe7f20>
   28ec0:	1829883a 	mov	r20,r3
   28ec4:	003d1806 	br	28328 <__alt_data_end+0xfffe8328>
   28ec8:	1829883a 	mov	r20,r3
   28ecc:	003ccd06 	br	28204 <__alt_data_end+0xfffe8204>
   28ed0:	0025883a 	mov	r18,zero
   28ed4:	003fe906 	br	28e7c <__alt_data_end+0xfffe8e7c>
   28ed8:	d8802217 	ldw	r2,136(sp)
   28edc:	80c00043 	ldbu	r3,1(r16)
   28ee0:	5021883a 	mov	r16,r10
   28ee4:	12400017 	ldw	r9,0(r2)
   28ee8:	10800104 	addi	r2,r2,4
   28eec:	d8802215 	stw	r2,136(sp)
   28ef0:	483faf0e 	bge	r9,zero,28db0 <__alt_data_end+0xfffe8db0>
   28ef4:	18c03fcc 	andi	r3,r3,255
   28ef8:	18c0201c 	xori	r3,r3,128
   28efc:	027fffc4 	movi	r9,-1
   28f00:	18ffe004 	addi	r3,r3,-128
   28f04:	003b6506 	br	27c9c <__alt_data_end+0xfffe7c9c>
   28f08:	d9c01d85 	stb	r7,118(sp)
   28f0c:	003ca006 	br	28190 <__alt_data_end+0xfffe8190>
   28f10:	d9c01d85 	stb	r7,118(sp)
   28f14:	003cad06 	br	281cc <__alt_data_end+0xfffe81cc>
   28f18:	d9c01d85 	stb	r7,118(sp)
   28f1c:	003d7d06 	br	28514 <__alt_data_end+0xfffe8514>
   28f20:	d9c01d85 	stb	r7,118(sp)
   28f24:	003d5f06 	br	284a4 <__alt_data_end+0xfffe84a4>
   28f28:	a080004c 	andi	r2,r20,1
   28f2c:	0039883a 	mov	fp,zero
   28f30:	10000526 	beq	r2,zero,28f48 <___vfiprintf_internal_r+0x1428>
   28f34:	00800c04 	movi	r2,48
   28f38:	d88019c5 	stb	r2,103(sp)
   28f3c:	dcc02717 	ldw	r19,156(sp)
   28f40:	dd4019c4 	addi	r21,sp,103
   28f44:	003bf606 	br	27f20 <__alt_data_end+0xfffe7f20>
   28f48:	0027883a 	mov	r19,zero
   28f4c:	dd401a04 	addi	r21,sp,104
   28f50:	003bf306 	br	27f20 <__alt_data_end+0xfffe7f20>
   28f54:	d9c01d85 	stb	r7,118(sp)
   28f58:	003dc806 	br	2867c <__alt_data_end+0xfffe867c>
   28f5c:	d9c01d85 	stb	r7,118(sp)
   28f60:	003d3a06 	br	2844c <__alt_data_end+0xfffe844c>
   28f64:	d9c01d85 	stb	r7,118(sp)
   28f68:	003d2a06 	br	28414 <__alt_data_end+0xfffe8414>
   28f6c:	d9c01d85 	stb	r7,118(sp)
   28f70:	003cde06 	br	282ec <__alt_data_end+0xfffe82ec>
   28f74:	d9c01d85 	stb	r7,118(sp)
   28f78:	003cbc06 	br	2826c <__alt_data_end+0xfffe826c>

00028f7c <__vfiprintf_internal>:
   28f7c:	008000f4 	movhi	r2,3
   28f80:	10847704 	addi	r2,r2,4572
   28f84:	300f883a 	mov	r7,r6
   28f88:	280d883a 	mov	r6,r5
   28f8c:	200b883a 	mov	r5,r4
   28f90:	11000017 	ldw	r4,0(r2)
   28f94:	0027b201 	jmpi	27b20 <___vfiprintf_internal_r>

00028f98 <__sbprintf>:
   28f98:	2880030b 	ldhu	r2,12(r5)
   28f9c:	2ac01917 	ldw	r11,100(r5)
   28fa0:	2a80038b 	ldhu	r10,14(r5)
   28fa4:	2a400717 	ldw	r9,28(r5)
   28fa8:	2a000917 	ldw	r8,36(r5)
   28fac:	defee204 	addi	sp,sp,-1144
   28fb0:	00c10004 	movi	r3,1024
   28fb4:	dc011a15 	stw	r16,1128(sp)
   28fb8:	10bfff4c 	andi	r2,r2,65533
   28fbc:	2821883a 	mov	r16,r5
   28fc0:	d8cb883a 	add	r5,sp,r3
   28fc4:	dc811c15 	stw	r18,1136(sp)
   28fc8:	dc411b15 	stw	r17,1132(sp)
   28fcc:	dfc11d15 	stw	ra,1140(sp)
   28fd0:	2025883a 	mov	r18,r4
   28fd4:	d881030d 	sth	r2,1036(sp)
   28fd8:	dac11915 	stw	r11,1124(sp)
   28fdc:	da81038d 	sth	r10,1038(sp)
   28fe0:	da410715 	stw	r9,1052(sp)
   28fe4:	da010915 	stw	r8,1060(sp)
   28fe8:	dec10015 	stw	sp,1024(sp)
   28fec:	dec10415 	stw	sp,1040(sp)
   28ff0:	d8c10215 	stw	r3,1032(sp)
   28ff4:	d8c10515 	stw	r3,1044(sp)
   28ff8:	d8010615 	stw	zero,1048(sp)
   28ffc:	0027b200 	call	27b20 <___vfiprintf_internal_r>
   29000:	1023883a 	mov	r17,r2
   29004:	10000416 	blt	r2,zero,29018 <__sbprintf+0x80>
   29008:	d9410004 	addi	r5,sp,1024
   2900c:	9009883a 	mov	r4,r18
   29010:	00243d40 	call	243d4 <_fflush_r>
   29014:	10000d1e 	bne	r2,zero,2904c <__sbprintf+0xb4>
   29018:	d881030b 	ldhu	r2,1036(sp)
   2901c:	1080100c 	andi	r2,r2,64
   29020:	10000326 	beq	r2,zero,29030 <__sbprintf+0x98>
   29024:	8080030b 	ldhu	r2,12(r16)
   29028:	10801014 	ori	r2,r2,64
   2902c:	8080030d 	sth	r2,12(r16)
   29030:	8805883a 	mov	r2,r17
   29034:	dfc11d17 	ldw	ra,1140(sp)
   29038:	dc811c17 	ldw	r18,1136(sp)
   2903c:	dc411b17 	ldw	r17,1132(sp)
   29040:	dc011a17 	ldw	r16,1128(sp)
   29044:	dec11e04 	addi	sp,sp,1144
   29048:	f800283a 	ret
   2904c:	047fffc4 	movi	r17,-1
   29050:	003ff106 	br	29018 <__alt_data_end+0xfffe9018>

00029054 <_write_r>:
   29054:	defffd04 	addi	sp,sp,-12
   29058:	2805883a 	mov	r2,r5
   2905c:	dc000015 	stw	r16,0(sp)
   29060:	040000f4 	movhi	r16,3
   29064:	dc400115 	stw	r17,4(sp)
   29068:	300b883a 	mov	r5,r6
   2906c:	840b4704 	addi	r16,r16,11548
   29070:	2023883a 	mov	r17,r4
   29074:	380d883a 	mov	r6,r7
   29078:	1009883a 	mov	r4,r2
   2907c:	dfc00215 	stw	ra,8(sp)
   29080:	80000015 	stw	zero,0(r16)
   29084:	002d5180 	call	2d518 <write>
   29088:	00ffffc4 	movi	r3,-1
   2908c:	10c00526 	beq	r2,r3,290a4 <_write_r+0x50>
   29090:	dfc00217 	ldw	ra,8(sp)
   29094:	dc400117 	ldw	r17,4(sp)
   29098:	dc000017 	ldw	r16,0(sp)
   2909c:	dec00304 	addi	sp,sp,12
   290a0:	f800283a 	ret
   290a4:	80c00017 	ldw	r3,0(r16)
   290a8:	183ff926 	beq	r3,zero,29090 <__alt_data_end+0xfffe9090>
   290ac:	88c00015 	stw	r3,0(r17)
   290b0:	003ff706 	br	29090 <__alt_data_end+0xfffe9090>

000290b4 <_close_r>:
   290b4:	defffd04 	addi	sp,sp,-12
   290b8:	dc000015 	stw	r16,0(sp)
   290bc:	040000f4 	movhi	r16,3
   290c0:	dc400115 	stw	r17,4(sp)
   290c4:	840b4704 	addi	r16,r16,11548
   290c8:	2023883a 	mov	r17,r4
   290cc:	2809883a 	mov	r4,r5
   290d0:	dfc00215 	stw	ra,8(sp)
   290d4:	80000015 	stw	zero,0(r16)
   290d8:	002cca40 	call	2cca4 <close>
   290dc:	00ffffc4 	movi	r3,-1
   290e0:	10c00526 	beq	r2,r3,290f8 <_close_r+0x44>
   290e4:	dfc00217 	ldw	ra,8(sp)
   290e8:	dc400117 	ldw	r17,4(sp)
   290ec:	dc000017 	ldw	r16,0(sp)
   290f0:	dec00304 	addi	sp,sp,12
   290f4:	f800283a 	ret
   290f8:	80c00017 	ldw	r3,0(r16)
   290fc:	183ff926 	beq	r3,zero,290e4 <__alt_data_end+0xfffe90e4>
   29100:	88c00015 	stw	r3,0(r17)
   29104:	003ff706 	br	290e4 <__alt_data_end+0xfffe90e4>

00029108 <_calloc_r>:
   29108:	298b383a 	mul	r5,r5,r6
   2910c:	defffe04 	addi	sp,sp,-8
   29110:	dfc00115 	stw	ra,4(sp)
   29114:	dc000015 	stw	r16,0(sp)
   29118:	00255100 	call	25510 <_malloc_r>
   2911c:	10002926 	beq	r2,zero,291c4 <_calloc_r+0xbc>
   29120:	11bfff17 	ldw	r6,-4(r2)
   29124:	1021883a 	mov	r16,r2
   29128:	00bfff04 	movi	r2,-4
   2912c:	308c703a 	and	r6,r6,r2
   29130:	00c00904 	movi	r3,36
   29134:	308d883a 	add	r6,r6,r2
   29138:	19801636 	bltu	r3,r6,29194 <_calloc_r+0x8c>
   2913c:	008004c4 	movi	r2,19
   29140:	11800b2e 	bgeu	r2,r6,29170 <_calloc_r+0x68>
   29144:	80000015 	stw	zero,0(r16)
   29148:	80000115 	stw	zero,4(r16)
   2914c:	008006c4 	movi	r2,27
   29150:	11801a2e 	bgeu	r2,r6,291bc <_calloc_r+0xb4>
   29154:	80000215 	stw	zero,8(r16)
   29158:	80000315 	stw	zero,12(r16)
   2915c:	30c0151e 	bne	r6,r3,291b4 <_calloc_r+0xac>
   29160:	80000415 	stw	zero,16(r16)
   29164:	80800604 	addi	r2,r16,24
   29168:	80000515 	stw	zero,20(r16)
   2916c:	00000106 	br	29174 <_calloc_r+0x6c>
   29170:	8005883a 	mov	r2,r16
   29174:	10000015 	stw	zero,0(r2)
   29178:	10000115 	stw	zero,4(r2)
   2917c:	10000215 	stw	zero,8(r2)
   29180:	8005883a 	mov	r2,r16
   29184:	dfc00117 	ldw	ra,4(sp)
   29188:	dc000017 	ldw	r16,0(sp)
   2918c:	dec00204 	addi	sp,sp,8
   29190:	f800283a 	ret
   29194:	000b883a 	mov	r5,zero
   29198:	8009883a 	mov	r4,r16
   2919c:	00260a40 	call	260a4 <memset>
   291a0:	8005883a 	mov	r2,r16
   291a4:	dfc00117 	ldw	ra,4(sp)
   291a8:	dc000017 	ldw	r16,0(sp)
   291ac:	dec00204 	addi	sp,sp,8
   291b0:	f800283a 	ret
   291b4:	80800404 	addi	r2,r16,16
   291b8:	003fee06 	br	29174 <__alt_data_end+0xfffe9174>
   291bc:	80800204 	addi	r2,r16,8
   291c0:	003fec06 	br	29174 <__alt_data_end+0xfffe9174>
   291c4:	0005883a 	mov	r2,zero
   291c8:	003fee06 	br	29184 <__alt_data_end+0xfffe9184>

000291cc <_fclose_r>:
   291cc:	28003926 	beq	r5,zero,292b4 <_fclose_r+0xe8>
   291d0:	defffc04 	addi	sp,sp,-16
   291d4:	dc400115 	stw	r17,4(sp)
   291d8:	dc000015 	stw	r16,0(sp)
   291dc:	dfc00315 	stw	ra,12(sp)
   291e0:	dc800215 	stw	r18,8(sp)
   291e4:	2023883a 	mov	r17,r4
   291e8:	2821883a 	mov	r16,r5
   291ec:	20000226 	beq	r4,zero,291f8 <_fclose_r+0x2c>
   291f0:	20800e17 	ldw	r2,56(r4)
   291f4:	10002726 	beq	r2,zero,29294 <_fclose_r+0xc8>
   291f8:	8080030f 	ldh	r2,12(r16)
   291fc:	1000071e 	bne	r2,zero,2921c <_fclose_r+0x50>
   29200:	0005883a 	mov	r2,zero
   29204:	dfc00317 	ldw	ra,12(sp)
   29208:	dc800217 	ldw	r18,8(sp)
   2920c:	dc400117 	ldw	r17,4(sp)
   29210:	dc000017 	ldw	r16,0(sp)
   29214:	dec00404 	addi	sp,sp,16
   29218:	f800283a 	ret
   2921c:	800b883a 	mov	r5,r16
   29220:	8809883a 	mov	r4,r17
   29224:	00241b80 	call	241b8 <__sflush_r>
   29228:	1025883a 	mov	r18,r2
   2922c:	80800b17 	ldw	r2,44(r16)
   29230:	10000426 	beq	r2,zero,29244 <_fclose_r+0x78>
   29234:	81400717 	ldw	r5,28(r16)
   29238:	8809883a 	mov	r4,r17
   2923c:	103ee83a 	callr	r2
   29240:	10001616 	blt	r2,zero,2929c <_fclose_r+0xd0>
   29244:	8080030b 	ldhu	r2,12(r16)
   29248:	1080200c 	andi	r2,r2,128
   2924c:	1000151e 	bne	r2,zero,292a4 <_fclose_r+0xd8>
   29250:	81400c17 	ldw	r5,48(r16)
   29254:	28000526 	beq	r5,zero,2926c <_fclose_r+0xa0>
   29258:	80801004 	addi	r2,r16,64
   2925c:	28800226 	beq	r5,r2,29268 <_fclose_r+0x9c>
   29260:	8809883a 	mov	r4,r17
   29264:	00249240 	call	24924 <_free_r>
   29268:	80000c15 	stw	zero,48(r16)
   2926c:	81401117 	ldw	r5,68(r16)
   29270:	28000326 	beq	r5,zero,29280 <_fclose_r+0xb4>
   29274:	8809883a 	mov	r4,r17
   29278:	00249240 	call	24924 <_free_r>
   2927c:	80001115 	stw	zero,68(r16)
   29280:	00247c00 	call	247c0 <__sfp_lock_acquire>
   29284:	8000030d 	sth	zero,12(r16)
   29288:	00247c40 	call	247c4 <__sfp_lock_release>
   2928c:	9005883a 	mov	r2,r18
   29290:	003fdc06 	br	29204 <__alt_data_end+0xfffe9204>
   29294:	00247b00 	call	247b0 <__sinit>
   29298:	003fd706 	br	291f8 <__alt_data_end+0xfffe91f8>
   2929c:	04bfffc4 	movi	r18,-1
   292a0:	003fe806 	br	29244 <__alt_data_end+0xfffe9244>
   292a4:	81400417 	ldw	r5,16(r16)
   292a8:	8809883a 	mov	r4,r17
   292ac:	00249240 	call	24924 <_free_r>
   292b0:	003fe706 	br	29250 <__alt_data_end+0xfffe9250>
   292b4:	0005883a 	mov	r2,zero
   292b8:	f800283a 	ret

000292bc <fclose>:
   292bc:	008000f4 	movhi	r2,3
   292c0:	10847704 	addi	r2,r2,4572
   292c4:	200b883a 	mov	r5,r4
   292c8:	11000017 	ldw	r4,0(r2)
   292cc:	00291cc1 	jmpi	291cc <_fclose_r>

000292d0 <__fputwc>:
   292d0:	defff804 	addi	sp,sp,-32
   292d4:	dcc00415 	stw	r19,16(sp)
   292d8:	dc800315 	stw	r18,12(sp)
   292dc:	dc000115 	stw	r16,4(sp)
   292e0:	dfc00715 	stw	ra,28(sp)
   292e4:	dd400615 	stw	r21,24(sp)
   292e8:	dd000515 	stw	r20,20(sp)
   292ec:	dc400215 	stw	r17,8(sp)
   292f0:	2027883a 	mov	r19,r4
   292f4:	2825883a 	mov	r18,r5
   292f8:	3021883a 	mov	r16,r6
   292fc:	00253000 	call	25300 <__locale_mb_cur_max>
   29300:	00c00044 	movi	r3,1
   29304:	10c03e26 	beq	r2,r3,29400 <__fputwc+0x130>
   29308:	81c01704 	addi	r7,r16,92
   2930c:	900d883a 	mov	r6,r18
   29310:	d80b883a 	mov	r5,sp
   29314:	9809883a 	mov	r4,r19
   29318:	00297a00 	call	297a0 <_wcrtomb_r>
   2931c:	1029883a 	mov	r20,r2
   29320:	00bfffc4 	movi	r2,-1
   29324:	a0802026 	beq	r20,r2,293a8 <__fputwc+0xd8>
   29328:	d9400003 	ldbu	r5,0(sp)
   2932c:	a0001c26 	beq	r20,zero,293a0 <__fputwc+0xd0>
   29330:	0023883a 	mov	r17,zero
   29334:	05400284 	movi	r21,10
   29338:	00000906 	br	29360 <__fputwc+0x90>
   2933c:	80800017 	ldw	r2,0(r16)
   29340:	11400005 	stb	r5,0(r2)
   29344:	80c00017 	ldw	r3,0(r16)
   29348:	18c00044 	addi	r3,r3,1
   2934c:	80c00015 	stw	r3,0(r16)
   29350:	8c400044 	addi	r17,r17,1
   29354:	dc45883a 	add	r2,sp,r17
   29358:	8d00112e 	bgeu	r17,r20,293a0 <__fputwc+0xd0>
   2935c:	11400003 	ldbu	r5,0(r2)
   29360:	80c00217 	ldw	r3,8(r16)
   29364:	18ffffc4 	addi	r3,r3,-1
   29368:	80c00215 	stw	r3,8(r16)
   2936c:	183ff30e 	bge	r3,zero,2933c <__alt_data_end+0xfffe933c>
   29370:	80800617 	ldw	r2,24(r16)
   29374:	18801916 	blt	r3,r2,293dc <__fputwc+0x10c>
   29378:	80800017 	ldw	r2,0(r16)
   2937c:	11400005 	stb	r5,0(r2)
   29380:	80800017 	ldw	r2,0(r16)
   29384:	10c00003 	ldbu	r3,0(r2)
   29388:	10800044 	addi	r2,r2,1
   2938c:	1d402326 	beq	r3,r21,2941c <__fputwc+0x14c>
   29390:	80800015 	stw	r2,0(r16)
   29394:	8c400044 	addi	r17,r17,1
   29398:	dc45883a 	add	r2,sp,r17
   2939c:	8d3fef36 	bltu	r17,r20,2935c <__alt_data_end+0xfffe935c>
   293a0:	9005883a 	mov	r2,r18
   293a4:	00000406 	br	293b8 <__fputwc+0xe8>
   293a8:	80c0030b 	ldhu	r3,12(r16)
   293ac:	a005883a 	mov	r2,r20
   293b0:	18c01014 	ori	r3,r3,64
   293b4:	80c0030d 	sth	r3,12(r16)
   293b8:	dfc00717 	ldw	ra,28(sp)
   293bc:	dd400617 	ldw	r21,24(sp)
   293c0:	dd000517 	ldw	r20,20(sp)
   293c4:	dcc00417 	ldw	r19,16(sp)
   293c8:	dc800317 	ldw	r18,12(sp)
   293cc:	dc400217 	ldw	r17,8(sp)
   293d0:	dc000117 	ldw	r16,4(sp)
   293d4:	dec00804 	addi	sp,sp,32
   293d8:	f800283a 	ret
   293dc:	800d883a 	mov	r6,r16
   293e0:	29403fcc 	andi	r5,r5,255
   293e4:	9809883a 	mov	r4,r19
   293e8:	00296480 	call	29648 <__swbuf_r>
   293ec:	10bfffe0 	cmpeqi	r2,r2,-1
   293f0:	10803fcc 	andi	r2,r2,255
   293f4:	103fd626 	beq	r2,zero,29350 <__alt_data_end+0xfffe9350>
   293f8:	00bfffc4 	movi	r2,-1
   293fc:	003fee06 	br	293b8 <__alt_data_end+0xfffe93b8>
   29400:	90ffffc4 	addi	r3,r18,-1
   29404:	01003f84 	movi	r4,254
   29408:	20ffbf36 	bltu	r4,r3,29308 <__alt_data_end+0xfffe9308>
   2940c:	900b883a 	mov	r5,r18
   29410:	dc800005 	stb	r18,0(sp)
   29414:	1029883a 	mov	r20,r2
   29418:	003fc506 	br	29330 <__alt_data_end+0xfffe9330>
   2941c:	800d883a 	mov	r6,r16
   29420:	a80b883a 	mov	r5,r21
   29424:	9809883a 	mov	r4,r19
   29428:	00296480 	call	29648 <__swbuf_r>
   2942c:	10bfffe0 	cmpeqi	r2,r2,-1
   29430:	003fef06 	br	293f0 <__alt_data_end+0xfffe93f0>

00029434 <_fputwc_r>:
   29434:	3080030b 	ldhu	r2,12(r6)
   29438:	10c8000c 	andi	r3,r2,8192
   2943c:	1800051e 	bne	r3,zero,29454 <_fputwc_r+0x20>
   29440:	30c01917 	ldw	r3,100(r6)
   29444:	10880014 	ori	r2,r2,8192
   29448:	3080030d 	sth	r2,12(r6)
   2944c:	18880014 	ori	r2,r3,8192
   29450:	30801915 	stw	r2,100(r6)
   29454:	00292d01 	jmpi	292d0 <__fputwc>

00029458 <fputwc>:
   29458:	008000f4 	movhi	r2,3
   2945c:	defffc04 	addi	sp,sp,-16
   29460:	10847704 	addi	r2,r2,4572
   29464:	dc000115 	stw	r16,4(sp)
   29468:	14000017 	ldw	r16,0(r2)
   2946c:	dc400215 	stw	r17,8(sp)
   29470:	dfc00315 	stw	ra,12(sp)
   29474:	2023883a 	mov	r17,r4
   29478:	80000226 	beq	r16,zero,29484 <fputwc+0x2c>
   2947c:	80800e17 	ldw	r2,56(r16)
   29480:	10001026 	beq	r2,zero,294c4 <fputwc+0x6c>
   29484:	2880030b 	ldhu	r2,12(r5)
   29488:	10c8000c 	andi	r3,r2,8192
   2948c:	1800051e 	bne	r3,zero,294a4 <fputwc+0x4c>
   29490:	28c01917 	ldw	r3,100(r5)
   29494:	10880014 	ori	r2,r2,8192
   29498:	2880030d 	sth	r2,12(r5)
   2949c:	18880014 	ori	r2,r3,8192
   294a0:	28801915 	stw	r2,100(r5)
   294a4:	280d883a 	mov	r6,r5
   294a8:	8009883a 	mov	r4,r16
   294ac:	880b883a 	mov	r5,r17
   294b0:	dfc00317 	ldw	ra,12(sp)
   294b4:	dc400217 	ldw	r17,8(sp)
   294b8:	dc000117 	ldw	r16,4(sp)
   294bc:	dec00404 	addi	sp,sp,16
   294c0:	00292d01 	jmpi	292d0 <__fputwc>
   294c4:	8009883a 	mov	r4,r16
   294c8:	d9400015 	stw	r5,0(sp)
   294cc:	00247b00 	call	247b0 <__sinit>
   294d0:	d9400017 	ldw	r5,0(sp)
   294d4:	003feb06 	br	29484 <__alt_data_end+0xfffe9484>

000294d8 <_fstat_r>:
   294d8:	defffd04 	addi	sp,sp,-12
   294dc:	2805883a 	mov	r2,r5
   294e0:	dc000015 	stw	r16,0(sp)
   294e4:	040000f4 	movhi	r16,3
   294e8:	dc400115 	stw	r17,4(sp)
   294ec:	840b4704 	addi	r16,r16,11548
   294f0:	2023883a 	mov	r17,r4
   294f4:	300b883a 	mov	r5,r6
   294f8:	1009883a 	mov	r4,r2
   294fc:	dfc00215 	stw	ra,8(sp)
   29500:	80000015 	stw	zero,0(r16)
   29504:	002cdf00 	call	2cdf0 <fstat>
   29508:	00ffffc4 	movi	r3,-1
   2950c:	10c00526 	beq	r2,r3,29524 <_fstat_r+0x4c>
   29510:	dfc00217 	ldw	ra,8(sp)
   29514:	dc400117 	ldw	r17,4(sp)
   29518:	dc000017 	ldw	r16,0(sp)
   2951c:	dec00304 	addi	sp,sp,12
   29520:	f800283a 	ret
   29524:	80c00017 	ldw	r3,0(r16)
   29528:	183ff926 	beq	r3,zero,29510 <__alt_data_end+0xfffe9510>
   2952c:	88c00015 	stw	r3,0(r17)
   29530:	003ff706 	br	29510 <__alt_data_end+0xfffe9510>

00029534 <_isatty_r>:
   29534:	defffd04 	addi	sp,sp,-12
   29538:	dc000015 	stw	r16,0(sp)
   2953c:	040000f4 	movhi	r16,3
   29540:	dc400115 	stw	r17,4(sp)
   29544:	840b4704 	addi	r16,r16,11548
   29548:	2023883a 	mov	r17,r4
   2954c:	2809883a 	mov	r4,r5
   29550:	dfc00215 	stw	ra,8(sp)
   29554:	80000015 	stw	zero,0(r16)
   29558:	002cef00 	call	2cef0 <isatty>
   2955c:	00ffffc4 	movi	r3,-1
   29560:	10c00526 	beq	r2,r3,29578 <_isatty_r+0x44>
   29564:	dfc00217 	ldw	ra,8(sp)
   29568:	dc400117 	ldw	r17,4(sp)
   2956c:	dc000017 	ldw	r16,0(sp)
   29570:	dec00304 	addi	sp,sp,12
   29574:	f800283a 	ret
   29578:	80c00017 	ldw	r3,0(r16)
   2957c:	183ff926 	beq	r3,zero,29564 <__alt_data_end+0xfffe9564>
   29580:	88c00015 	stw	r3,0(r17)
   29584:	003ff706 	br	29564 <__alt_data_end+0xfffe9564>

00029588 <_lseek_r>:
   29588:	defffd04 	addi	sp,sp,-12
   2958c:	2805883a 	mov	r2,r5
   29590:	dc000015 	stw	r16,0(sp)
   29594:	040000f4 	movhi	r16,3
   29598:	dc400115 	stw	r17,4(sp)
   2959c:	300b883a 	mov	r5,r6
   295a0:	840b4704 	addi	r16,r16,11548
   295a4:	2023883a 	mov	r17,r4
   295a8:	380d883a 	mov	r6,r7
   295ac:	1009883a 	mov	r4,r2
   295b0:	dfc00215 	stw	ra,8(sp)
   295b4:	80000015 	stw	zero,0(r16)
   295b8:	002d0d00 	call	2d0d0 <lseek>
   295bc:	00ffffc4 	movi	r3,-1
   295c0:	10c00526 	beq	r2,r3,295d8 <_lseek_r+0x50>
   295c4:	dfc00217 	ldw	ra,8(sp)
   295c8:	dc400117 	ldw	r17,4(sp)
   295cc:	dc000017 	ldw	r16,0(sp)
   295d0:	dec00304 	addi	sp,sp,12
   295d4:	f800283a 	ret
   295d8:	80c00017 	ldw	r3,0(r16)
   295dc:	183ff926 	beq	r3,zero,295c4 <__alt_data_end+0xfffe95c4>
   295e0:	88c00015 	stw	r3,0(r17)
   295e4:	003ff706 	br	295c4 <__alt_data_end+0xfffe95c4>

000295e8 <_read_r>:
   295e8:	defffd04 	addi	sp,sp,-12
   295ec:	2805883a 	mov	r2,r5
   295f0:	dc000015 	stw	r16,0(sp)
   295f4:	040000f4 	movhi	r16,3
   295f8:	dc400115 	stw	r17,4(sp)
   295fc:	300b883a 	mov	r5,r6
   29600:	840b4704 	addi	r16,r16,11548
   29604:	2023883a 	mov	r17,r4
   29608:	380d883a 	mov	r6,r7
   2960c:	1009883a 	mov	r4,r2
   29610:	dfc00215 	stw	ra,8(sp)
   29614:	80000015 	stw	zero,0(r16)
   29618:	002d2b80 	call	2d2b8 <read>
   2961c:	00ffffc4 	movi	r3,-1
   29620:	10c00526 	beq	r2,r3,29638 <_read_r+0x50>
   29624:	dfc00217 	ldw	ra,8(sp)
   29628:	dc400117 	ldw	r17,4(sp)
   2962c:	dc000017 	ldw	r16,0(sp)
   29630:	dec00304 	addi	sp,sp,12
   29634:	f800283a 	ret
   29638:	80c00017 	ldw	r3,0(r16)
   2963c:	183ff926 	beq	r3,zero,29624 <__alt_data_end+0xfffe9624>
   29640:	88c00015 	stw	r3,0(r17)
   29644:	003ff706 	br	29624 <__alt_data_end+0xfffe9624>

00029648 <__swbuf_r>:
   29648:	defffb04 	addi	sp,sp,-20
   2964c:	dcc00315 	stw	r19,12(sp)
   29650:	dc800215 	stw	r18,8(sp)
   29654:	dc000015 	stw	r16,0(sp)
   29658:	dfc00415 	stw	ra,16(sp)
   2965c:	dc400115 	stw	r17,4(sp)
   29660:	2025883a 	mov	r18,r4
   29664:	2827883a 	mov	r19,r5
   29668:	3021883a 	mov	r16,r6
   2966c:	20000226 	beq	r4,zero,29678 <__swbuf_r+0x30>
   29670:	20800e17 	ldw	r2,56(r4)
   29674:	10004226 	beq	r2,zero,29780 <__swbuf_r+0x138>
   29678:	80800617 	ldw	r2,24(r16)
   2967c:	8100030b 	ldhu	r4,12(r16)
   29680:	80800215 	stw	r2,8(r16)
   29684:	2080020c 	andi	r2,r4,8
   29688:	10003626 	beq	r2,zero,29764 <__swbuf_r+0x11c>
   2968c:	80c00417 	ldw	r3,16(r16)
   29690:	18003426 	beq	r3,zero,29764 <__swbuf_r+0x11c>
   29694:	2088000c 	andi	r2,r4,8192
   29698:	9c403fcc 	andi	r17,r19,255
   2969c:	10001a26 	beq	r2,zero,29708 <__swbuf_r+0xc0>
   296a0:	80800017 	ldw	r2,0(r16)
   296a4:	81000517 	ldw	r4,20(r16)
   296a8:	10c7c83a 	sub	r3,r2,r3
   296ac:	1900200e 	bge	r3,r4,29730 <__swbuf_r+0xe8>
   296b0:	18c00044 	addi	r3,r3,1
   296b4:	81000217 	ldw	r4,8(r16)
   296b8:	11400044 	addi	r5,r2,1
   296bc:	81400015 	stw	r5,0(r16)
   296c0:	213fffc4 	addi	r4,r4,-1
   296c4:	81000215 	stw	r4,8(r16)
   296c8:	14c00005 	stb	r19,0(r2)
   296cc:	80800517 	ldw	r2,20(r16)
   296d0:	10c01e26 	beq	r2,r3,2974c <__swbuf_r+0x104>
   296d4:	8080030b 	ldhu	r2,12(r16)
   296d8:	1080004c 	andi	r2,r2,1
   296dc:	10000226 	beq	r2,zero,296e8 <__swbuf_r+0xa0>
   296e0:	00800284 	movi	r2,10
   296e4:	88801926 	beq	r17,r2,2974c <__swbuf_r+0x104>
   296e8:	8805883a 	mov	r2,r17
   296ec:	dfc00417 	ldw	ra,16(sp)
   296f0:	dcc00317 	ldw	r19,12(sp)
   296f4:	dc800217 	ldw	r18,8(sp)
   296f8:	dc400117 	ldw	r17,4(sp)
   296fc:	dc000017 	ldw	r16,0(sp)
   29700:	dec00504 	addi	sp,sp,20
   29704:	f800283a 	ret
   29708:	81401917 	ldw	r5,100(r16)
   2970c:	00b7ffc4 	movi	r2,-8193
   29710:	21080014 	ori	r4,r4,8192
   29714:	2884703a 	and	r2,r5,r2
   29718:	80801915 	stw	r2,100(r16)
   2971c:	80800017 	ldw	r2,0(r16)
   29720:	8100030d 	sth	r4,12(r16)
   29724:	81000517 	ldw	r4,20(r16)
   29728:	10c7c83a 	sub	r3,r2,r3
   2972c:	193fe016 	blt	r3,r4,296b0 <__alt_data_end+0xfffe96b0>
   29730:	800b883a 	mov	r5,r16
   29734:	9009883a 	mov	r4,r18
   29738:	00243d40 	call	243d4 <_fflush_r>
   2973c:	1000071e 	bne	r2,zero,2975c <__swbuf_r+0x114>
   29740:	80800017 	ldw	r2,0(r16)
   29744:	00c00044 	movi	r3,1
   29748:	003fda06 	br	296b4 <__alt_data_end+0xfffe96b4>
   2974c:	800b883a 	mov	r5,r16
   29750:	9009883a 	mov	r4,r18
   29754:	00243d40 	call	243d4 <_fflush_r>
   29758:	103fe326 	beq	r2,zero,296e8 <__alt_data_end+0xfffe96e8>
   2975c:	00bfffc4 	movi	r2,-1
   29760:	003fe206 	br	296ec <__alt_data_end+0xfffe96ec>
   29764:	800b883a 	mov	r5,r16
   29768:	9009883a 	mov	r4,r18
   2976c:	00227dc0 	call	227dc <__swsetup_r>
   29770:	103ffa1e 	bne	r2,zero,2975c <__alt_data_end+0xfffe975c>
   29774:	8100030b 	ldhu	r4,12(r16)
   29778:	80c00417 	ldw	r3,16(r16)
   2977c:	003fc506 	br	29694 <__alt_data_end+0xfffe9694>
   29780:	00247b00 	call	247b0 <__sinit>
   29784:	003fbc06 	br	29678 <__alt_data_end+0xfffe9678>

00029788 <__swbuf>:
   29788:	008000f4 	movhi	r2,3
   2978c:	10847704 	addi	r2,r2,4572
   29790:	280d883a 	mov	r6,r5
   29794:	200b883a 	mov	r5,r4
   29798:	11000017 	ldw	r4,0(r2)
   2979c:	00296481 	jmpi	29648 <__swbuf_r>

000297a0 <_wcrtomb_r>:
   297a0:	defff604 	addi	sp,sp,-40
   297a4:	008000f4 	movhi	r2,3
   297a8:	dc800815 	stw	r18,32(sp)
   297ac:	dc400715 	stw	r17,28(sp)
   297b0:	dc000615 	stw	r16,24(sp)
   297b4:	10847b04 	addi	r2,r2,4588
   297b8:	dfc00915 	stw	ra,36(sp)
   297bc:	2021883a 	mov	r16,r4
   297c0:	3823883a 	mov	r17,r7
   297c4:	14800017 	ldw	r18,0(r2)
   297c8:	28001426 	beq	r5,zero,2981c <_wcrtomb_r+0x7c>
   297cc:	d9400415 	stw	r5,16(sp)
   297d0:	d9800515 	stw	r6,20(sp)
   297d4:	00252f40 	call	252f4 <__locale_charset>
   297d8:	d9800517 	ldw	r6,20(sp)
   297dc:	d9400417 	ldw	r5,16(sp)
   297e0:	100f883a 	mov	r7,r2
   297e4:	dc400015 	stw	r17,0(sp)
   297e8:	8009883a 	mov	r4,r16
   297ec:	903ee83a 	callr	r18
   297f0:	00ffffc4 	movi	r3,-1
   297f4:	10c0031e 	bne	r2,r3,29804 <_wcrtomb_r+0x64>
   297f8:	88000015 	stw	zero,0(r17)
   297fc:	00c02284 	movi	r3,138
   29800:	80c00015 	stw	r3,0(r16)
   29804:	dfc00917 	ldw	ra,36(sp)
   29808:	dc800817 	ldw	r18,32(sp)
   2980c:	dc400717 	ldw	r17,28(sp)
   29810:	dc000617 	ldw	r16,24(sp)
   29814:	dec00a04 	addi	sp,sp,40
   29818:	f800283a 	ret
   2981c:	00252f40 	call	252f4 <__locale_charset>
   29820:	100f883a 	mov	r7,r2
   29824:	dc400015 	stw	r17,0(sp)
   29828:	000d883a 	mov	r6,zero
   2982c:	d9400104 	addi	r5,sp,4
   29830:	8009883a 	mov	r4,r16
   29834:	903ee83a 	callr	r18
   29838:	003fed06 	br	297f0 <__alt_data_end+0xfffe97f0>

0002983c <wcrtomb>:
   2983c:	defff604 	addi	sp,sp,-40
   29840:	008000f4 	movhi	r2,3
   29844:	dc800615 	stw	r18,24(sp)
   29848:	dc400515 	stw	r17,20(sp)
   2984c:	10847704 	addi	r2,r2,4572
   29850:	dfc00915 	stw	ra,36(sp)
   29854:	dd000815 	stw	r20,32(sp)
   29858:	dcc00715 	stw	r19,28(sp)
   2985c:	dc000415 	stw	r16,16(sp)
   29860:	3025883a 	mov	r18,r6
   29864:	14400017 	ldw	r17,0(r2)
   29868:	20001926 	beq	r4,zero,298d0 <wcrtomb+0x94>
   2986c:	008000f4 	movhi	r2,3
   29870:	10847b04 	addi	r2,r2,4588
   29874:	15000017 	ldw	r20,0(r2)
   29878:	2021883a 	mov	r16,r4
   2987c:	2827883a 	mov	r19,r5
   29880:	00252f40 	call	252f4 <__locale_charset>
   29884:	100f883a 	mov	r7,r2
   29888:	dc800015 	stw	r18,0(sp)
   2988c:	980d883a 	mov	r6,r19
   29890:	800b883a 	mov	r5,r16
   29894:	8809883a 	mov	r4,r17
   29898:	a03ee83a 	callr	r20
   2989c:	00ffffc4 	movi	r3,-1
   298a0:	10c0031e 	bne	r2,r3,298b0 <wcrtomb+0x74>
   298a4:	90000015 	stw	zero,0(r18)
   298a8:	00c02284 	movi	r3,138
   298ac:	88c00015 	stw	r3,0(r17)
   298b0:	dfc00917 	ldw	ra,36(sp)
   298b4:	dd000817 	ldw	r20,32(sp)
   298b8:	dcc00717 	ldw	r19,28(sp)
   298bc:	dc800617 	ldw	r18,24(sp)
   298c0:	dc400517 	ldw	r17,20(sp)
   298c4:	dc000417 	ldw	r16,16(sp)
   298c8:	dec00a04 	addi	sp,sp,40
   298cc:	f800283a 	ret
   298d0:	008000f4 	movhi	r2,3
   298d4:	10847b04 	addi	r2,r2,4588
   298d8:	14000017 	ldw	r16,0(r2)
   298dc:	00252f40 	call	252f4 <__locale_charset>
   298e0:	100f883a 	mov	r7,r2
   298e4:	dc800015 	stw	r18,0(sp)
   298e8:	000d883a 	mov	r6,zero
   298ec:	d9400104 	addi	r5,sp,4
   298f0:	8809883a 	mov	r4,r17
   298f4:	803ee83a 	callr	r16
   298f8:	003fe806 	br	2989c <__alt_data_end+0xfffe989c>

000298fc <__ascii_wctomb>:
   298fc:	28000526 	beq	r5,zero,29914 <__ascii_wctomb+0x18>
   29900:	00803fc4 	movi	r2,255
   29904:	11800536 	bltu	r2,r6,2991c <__ascii_wctomb+0x20>
   29908:	29800005 	stb	r6,0(r5)
   2990c:	00800044 	movi	r2,1
   29910:	f800283a 	ret
   29914:	0005883a 	mov	r2,zero
   29918:	f800283a 	ret
   2991c:	00802284 	movi	r2,138
   29920:	20800015 	stw	r2,0(r4)
   29924:	00bfffc4 	movi	r2,-1
   29928:	f800283a 	ret

0002992c <_wctomb_r>:
   2992c:	008000f4 	movhi	r2,3
   29930:	defff904 	addi	sp,sp,-28
   29934:	10847b04 	addi	r2,r2,4588
   29938:	dfc00615 	stw	ra,24(sp)
   2993c:	dc400515 	stw	r17,20(sp)
   29940:	dc000415 	stw	r16,16(sp)
   29944:	3823883a 	mov	r17,r7
   29948:	14000017 	ldw	r16,0(r2)
   2994c:	d9000115 	stw	r4,4(sp)
   29950:	d9400215 	stw	r5,8(sp)
   29954:	d9800315 	stw	r6,12(sp)
   29958:	00252f40 	call	252f4 <__locale_charset>
   2995c:	d9800317 	ldw	r6,12(sp)
   29960:	d9400217 	ldw	r5,8(sp)
   29964:	d9000117 	ldw	r4,4(sp)
   29968:	100f883a 	mov	r7,r2
   2996c:	dc400015 	stw	r17,0(sp)
   29970:	803ee83a 	callr	r16
   29974:	dfc00617 	ldw	ra,24(sp)
   29978:	dc400517 	ldw	r17,20(sp)
   2997c:	dc000417 	ldw	r16,16(sp)
   29980:	dec00704 	addi	sp,sp,28
   29984:	f800283a 	ret

00029988 <__udivdi3>:
   29988:	defff504 	addi	sp,sp,-44
   2998c:	dcc00415 	stw	r19,16(sp)
   29990:	dc000115 	stw	r16,4(sp)
   29994:	dfc00a15 	stw	ra,40(sp)
   29998:	df000915 	stw	fp,36(sp)
   2999c:	ddc00815 	stw	r23,32(sp)
   299a0:	dd800715 	stw	r22,28(sp)
   299a4:	dd400615 	stw	r21,24(sp)
   299a8:	dd000515 	stw	r20,20(sp)
   299ac:	dc800315 	stw	r18,12(sp)
   299b0:	dc400215 	stw	r17,8(sp)
   299b4:	2027883a 	mov	r19,r4
   299b8:	2821883a 	mov	r16,r5
   299bc:	3800411e 	bne	r7,zero,29ac4 <__udivdi3+0x13c>
   299c0:	3023883a 	mov	r17,r6
   299c4:	2025883a 	mov	r18,r4
   299c8:	2980522e 	bgeu	r5,r6,29b14 <__udivdi3+0x18c>
   299cc:	00bfffd4 	movui	r2,65535
   299d0:	282d883a 	mov	r22,r5
   299d4:	1180a836 	bltu	r2,r6,29c78 <__udivdi3+0x2f0>
   299d8:	00803fc4 	movi	r2,255
   299dc:	1185803a 	cmpltu	r2,r2,r6
   299e0:	100490fa 	slli	r2,r2,3
   299e4:	3086d83a 	srl	r3,r6,r2
   299e8:	010000f4 	movhi	r4,3
   299ec:	213d7e04 	addi	r4,r4,-2568
   299f0:	20c7883a 	add	r3,r4,r3
   299f4:	18c00003 	ldbu	r3,0(r3)
   299f8:	1885883a 	add	r2,r3,r2
   299fc:	00c00804 	movi	r3,32
   29a00:	1887c83a 	sub	r3,r3,r2
   29a04:	18000526 	beq	r3,zero,29a1c <__udivdi3+0x94>
   29a08:	80e0983a 	sll	r16,r16,r3
   29a0c:	9884d83a 	srl	r2,r19,r2
   29a10:	30e2983a 	sll	r17,r6,r3
   29a14:	98e4983a 	sll	r18,r19,r3
   29a18:	142cb03a 	or	r22,r2,r16
   29a1c:	882ad43a 	srli	r21,r17,16
   29a20:	b009883a 	mov	r4,r22
   29a24:	8d3fffcc 	andi	r20,r17,65535
   29a28:	a80b883a 	mov	r5,r21
   29a2c:	002a5940 	call	2a594 <__umodsi3>
   29a30:	b009883a 	mov	r4,r22
   29a34:	a80b883a 	mov	r5,r21
   29a38:	1027883a 	mov	r19,r2
   29a3c:	002a5300 	call	2a530 <__udivsi3>
   29a40:	102d883a 	mov	r22,r2
   29a44:	9826943a 	slli	r19,r19,16
   29a48:	9004d43a 	srli	r2,r18,16
   29a4c:	a5a1383a 	mul	r16,r20,r22
   29a50:	14c4b03a 	or	r2,r2,r19
   29a54:	1400052e 	bgeu	r2,r16,29a6c <__udivdi3+0xe4>
   29a58:	1445883a 	add	r2,r2,r17
   29a5c:	b0ffffc4 	addi	r3,r22,-1
   29a60:	14400136 	bltu	r2,r17,29a68 <__udivdi3+0xe0>
   29a64:	14012336 	bltu	r2,r16,29ef4 <__udivdi3+0x56c>
   29a68:	182d883a 	mov	r22,r3
   29a6c:	1421c83a 	sub	r16,r2,r16
   29a70:	a80b883a 	mov	r5,r21
   29a74:	8009883a 	mov	r4,r16
   29a78:	002a5940 	call	2a594 <__umodsi3>
   29a7c:	1027883a 	mov	r19,r2
   29a80:	a80b883a 	mov	r5,r21
   29a84:	8009883a 	mov	r4,r16
   29a88:	002a5300 	call	2a530 <__udivsi3>
   29a8c:	9826943a 	slli	r19,r19,16
   29a90:	a0a9383a 	mul	r20,r20,r2
   29a94:	94bfffcc 	andi	r18,r18,65535
   29a98:	94e4b03a 	or	r18,r18,r19
   29a9c:	9500052e 	bgeu	r18,r20,29ab4 <__udivdi3+0x12c>
   29aa0:	8ca5883a 	add	r18,r17,r18
   29aa4:	10ffffc4 	addi	r3,r2,-1
   29aa8:	9440f136 	bltu	r18,r17,29e70 <__udivdi3+0x4e8>
   29aac:	9500f02e 	bgeu	r18,r20,29e70 <__udivdi3+0x4e8>
   29ab0:	10bfff84 	addi	r2,r2,-2
   29ab4:	b00c943a 	slli	r6,r22,16
   29ab8:	0007883a 	mov	r3,zero
   29abc:	3084b03a 	or	r2,r6,r2
   29ac0:	00005906 	br	29c28 <__udivdi3+0x2a0>
   29ac4:	29c05636 	bltu	r5,r7,29c20 <__udivdi3+0x298>
   29ac8:	00bfffd4 	movui	r2,65535
   29acc:	11c0622e 	bgeu	r2,r7,29c58 <__udivdi3+0x2d0>
   29ad0:	00804034 	movhi	r2,256
   29ad4:	10bfffc4 	addi	r2,r2,-1
   29ad8:	11c0ee36 	bltu	r2,r7,29e94 <__udivdi3+0x50c>
   29adc:	00800404 	movi	r2,16
   29ae0:	3886d83a 	srl	r3,r7,r2
   29ae4:	010000f4 	movhi	r4,3
   29ae8:	213d7e04 	addi	r4,r4,-2568
   29aec:	20c7883a 	add	r3,r4,r3
   29af0:	18c00003 	ldbu	r3,0(r3)
   29af4:	05400804 	movi	r21,32
   29af8:	1885883a 	add	r2,r3,r2
   29afc:	a8abc83a 	sub	r21,r21,r2
   29b00:	a800621e 	bne	r21,zero,29c8c <__udivdi3+0x304>
   29b04:	3c00e936 	bltu	r7,r16,29eac <__udivdi3+0x524>
   29b08:	9985403a 	cmpgeu	r2,r19,r6
   29b0c:	0007883a 	mov	r3,zero
   29b10:	00004506 	br	29c28 <__udivdi3+0x2a0>
   29b14:	3000041e 	bne	r6,zero,29b28 <__udivdi3+0x1a0>
   29b18:	000b883a 	mov	r5,zero
   29b1c:	01000044 	movi	r4,1
   29b20:	002a5300 	call	2a530 <__udivsi3>
   29b24:	1023883a 	mov	r17,r2
   29b28:	00bfffd4 	movui	r2,65535
   29b2c:	14404e2e 	bgeu	r2,r17,29c68 <__udivdi3+0x2e0>
   29b30:	00804034 	movhi	r2,256
   29b34:	10bfffc4 	addi	r2,r2,-1
   29b38:	1440d836 	bltu	r2,r17,29e9c <__udivdi3+0x514>
   29b3c:	00800404 	movi	r2,16
   29b40:	8886d83a 	srl	r3,r17,r2
   29b44:	010000f4 	movhi	r4,3
   29b48:	213d7e04 	addi	r4,r4,-2568
   29b4c:	20c7883a 	add	r3,r4,r3
   29b50:	18c00003 	ldbu	r3,0(r3)
   29b54:	1885883a 	add	r2,r3,r2
   29b58:	00c00804 	movi	r3,32
   29b5c:	1887c83a 	sub	r3,r3,r2
   29b60:	18008f1e 	bne	r3,zero,29da0 <__udivdi3+0x418>
   29b64:	882ad43a 	srli	r21,r17,16
   29b68:	8461c83a 	sub	r16,r16,r17
   29b6c:	8d3fffcc 	andi	r20,r17,65535
   29b70:	00c00044 	movi	r3,1
   29b74:	8009883a 	mov	r4,r16
   29b78:	a80b883a 	mov	r5,r21
   29b7c:	d8c00015 	stw	r3,0(sp)
   29b80:	002a5940 	call	2a594 <__umodsi3>
   29b84:	8009883a 	mov	r4,r16
   29b88:	a80b883a 	mov	r5,r21
   29b8c:	1027883a 	mov	r19,r2
   29b90:	002a5300 	call	2a530 <__udivsi3>
   29b94:	9826943a 	slli	r19,r19,16
   29b98:	9008d43a 	srli	r4,r18,16
   29b9c:	1521383a 	mul	r16,r2,r20
   29ba0:	102d883a 	mov	r22,r2
   29ba4:	24c8b03a 	or	r4,r4,r19
   29ba8:	d8c00017 	ldw	r3,0(sp)
   29bac:	2400052e 	bgeu	r4,r16,29bc4 <__udivdi3+0x23c>
   29bb0:	2449883a 	add	r4,r4,r17
   29bb4:	b0bfffc4 	addi	r2,r22,-1
   29bb8:	24400136 	bltu	r4,r17,29bc0 <__udivdi3+0x238>
   29bbc:	2400ca36 	bltu	r4,r16,29ee8 <__udivdi3+0x560>
   29bc0:	102d883a 	mov	r22,r2
   29bc4:	2421c83a 	sub	r16,r4,r16
   29bc8:	a80b883a 	mov	r5,r21
   29bcc:	8009883a 	mov	r4,r16
   29bd0:	d8c00015 	stw	r3,0(sp)
   29bd4:	002a5940 	call	2a594 <__umodsi3>
   29bd8:	1027883a 	mov	r19,r2
   29bdc:	a80b883a 	mov	r5,r21
   29be0:	8009883a 	mov	r4,r16
   29be4:	002a5300 	call	2a530 <__udivsi3>
   29be8:	9826943a 	slli	r19,r19,16
   29bec:	1529383a 	mul	r20,r2,r20
   29bf0:	94bfffcc 	andi	r18,r18,65535
   29bf4:	94e4b03a 	or	r18,r18,r19
   29bf8:	d8c00017 	ldw	r3,0(sp)
   29bfc:	9500052e 	bgeu	r18,r20,29c14 <__udivdi3+0x28c>
   29c00:	8ca5883a 	add	r18,r17,r18
   29c04:	113fffc4 	addi	r4,r2,-1
   29c08:	94409736 	bltu	r18,r17,29e68 <__udivdi3+0x4e0>
   29c0c:	9500962e 	bgeu	r18,r20,29e68 <__udivdi3+0x4e0>
   29c10:	10bfff84 	addi	r2,r2,-2
   29c14:	b00c943a 	slli	r6,r22,16
   29c18:	3084b03a 	or	r2,r6,r2
   29c1c:	00000206 	br	29c28 <__udivdi3+0x2a0>
   29c20:	0007883a 	mov	r3,zero
   29c24:	0005883a 	mov	r2,zero
   29c28:	dfc00a17 	ldw	ra,40(sp)
   29c2c:	df000917 	ldw	fp,36(sp)
   29c30:	ddc00817 	ldw	r23,32(sp)
   29c34:	dd800717 	ldw	r22,28(sp)
   29c38:	dd400617 	ldw	r21,24(sp)
   29c3c:	dd000517 	ldw	r20,20(sp)
   29c40:	dcc00417 	ldw	r19,16(sp)
   29c44:	dc800317 	ldw	r18,12(sp)
   29c48:	dc400217 	ldw	r17,8(sp)
   29c4c:	dc000117 	ldw	r16,4(sp)
   29c50:	dec00b04 	addi	sp,sp,44
   29c54:	f800283a 	ret
   29c58:	00803fc4 	movi	r2,255
   29c5c:	11c5803a 	cmpltu	r2,r2,r7
   29c60:	100490fa 	slli	r2,r2,3
   29c64:	003f9e06 	br	29ae0 <__alt_data_end+0xfffe9ae0>
   29c68:	00803fc4 	movi	r2,255
   29c6c:	1445803a 	cmpltu	r2,r2,r17
   29c70:	100490fa 	slli	r2,r2,3
   29c74:	003fb206 	br	29b40 <__alt_data_end+0xfffe9b40>
   29c78:	00804034 	movhi	r2,256
   29c7c:	10bfffc4 	addi	r2,r2,-1
   29c80:	11808836 	bltu	r2,r6,29ea4 <__udivdi3+0x51c>
   29c84:	00800404 	movi	r2,16
   29c88:	003f5606 	br	299e4 <__alt_data_end+0xfffe99e4>
   29c8c:	30aed83a 	srl	r23,r6,r2
   29c90:	3d4e983a 	sll	r7,r7,r21
   29c94:	80acd83a 	srl	r22,r16,r2
   29c98:	9884d83a 	srl	r2,r19,r2
   29c9c:	3deeb03a 	or	r23,r7,r23
   29ca0:	b824d43a 	srli	r18,r23,16
   29ca4:	8560983a 	sll	r16,r16,r21
   29ca8:	b009883a 	mov	r4,r22
   29cac:	900b883a 	mov	r5,r18
   29cb0:	3568983a 	sll	r20,r6,r21
   29cb4:	1420b03a 	or	r16,r2,r16
   29cb8:	002a5940 	call	2a594 <__umodsi3>
   29cbc:	b009883a 	mov	r4,r22
   29cc0:	900b883a 	mov	r5,r18
   29cc4:	1023883a 	mov	r17,r2
   29cc8:	002a5300 	call	2a530 <__udivsi3>
   29ccc:	8808943a 	slli	r4,r17,16
   29cd0:	bf3fffcc 	andi	fp,r23,65535
   29cd4:	8006d43a 	srli	r3,r16,16
   29cd8:	e0a3383a 	mul	r17,fp,r2
   29cdc:	100d883a 	mov	r6,r2
   29ce0:	1906b03a 	or	r3,r3,r4
   29ce4:	1c40042e 	bgeu	r3,r17,29cf8 <__udivdi3+0x370>
   29ce8:	1dc7883a 	add	r3,r3,r23
   29cec:	10bfffc4 	addi	r2,r2,-1
   29cf0:	1dc0752e 	bgeu	r3,r23,29ec8 <__udivdi3+0x540>
   29cf4:	100d883a 	mov	r6,r2
   29cf8:	1c63c83a 	sub	r17,r3,r17
   29cfc:	900b883a 	mov	r5,r18
   29d00:	8809883a 	mov	r4,r17
   29d04:	d9800015 	stw	r6,0(sp)
   29d08:	002a5940 	call	2a594 <__umodsi3>
   29d0c:	102d883a 	mov	r22,r2
   29d10:	8809883a 	mov	r4,r17
   29d14:	900b883a 	mov	r5,r18
   29d18:	002a5300 	call	2a530 <__udivsi3>
   29d1c:	b02c943a 	slli	r22,r22,16
   29d20:	e089383a 	mul	r4,fp,r2
   29d24:	843fffcc 	andi	r16,r16,65535
   29d28:	85a0b03a 	or	r16,r16,r22
   29d2c:	d9800017 	ldw	r6,0(sp)
   29d30:	8100042e 	bgeu	r16,r4,29d44 <__udivdi3+0x3bc>
   29d34:	85e1883a 	add	r16,r16,r23
   29d38:	10ffffc4 	addi	r3,r2,-1
   29d3c:	85c05e2e 	bgeu	r16,r23,29eb8 <__udivdi3+0x530>
   29d40:	1805883a 	mov	r2,r3
   29d44:	300c943a 	slli	r6,r6,16
   29d48:	a17fffcc 	andi	r5,r20,65535
   29d4c:	a028d43a 	srli	r20,r20,16
   29d50:	3084b03a 	or	r2,r6,r2
   29d54:	10ffffcc 	andi	r3,r2,65535
   29d58:	100cd43a 	srli	r6,r2,16
   29d5c:	194f383a 	mul	r7,r3,r5
   29d60:	1d07383a 	mul	r3,r3,r20
   29d64:	314b383a 	mul	r5,r6,r5
   29d68:	3810d43a 	srli	r8,r7,16
   29d6c:	8121c83a 	sub	r16,r16,r4
   29d70:	1947883a 	add	r3,r3,r5
   29d74:	40c7883a 	add	r3,r8,r3
   29d78:	350d383a 	mul	r6,r6,r20
   29d7c:	1940022e 	bgeu	r3,r5,29d88 <__udivdi3+0x400>
   29d80:	01000074 	movhi	r4,1
   29d84:	310d883a 	add	r6,r6,r4
   29d88:	1828d43a 	srli	r20,r3,16
   29d8c:	a18d883a 	add	r6,r20,r6
   29d90:	81803e36 	bltu	r16,r6,29e8c <__udivdi3+0x504>
   29d94:	81803826 	beq	r16,r6,29e78 <__udivdi3+0x4f0>
   29d98:	0007883a 	mov	r3,zero
   29d9c:	003fa206 	br	29c28 <__alt_data_end+0xfffe9c28>
   29da0:	88e2983a 	sll	r17,r17,r3
   29da4:	80a8d83a 	srl	r20,r16,r2
   29da8:	80e0983a 	sll	r16,r16,r3
   29dac:	882ad43a 	srli	r21,r17,16
   29db0:	9884d83a 	srl	r2,r19,r2
   29db4:	a009883a 	mov	r4,r20
   29db8:	a80b883a 	mov	r5,r21
   29dbc:	142eb03a 	or	r23,r2,r16
   29dc0:	98e4983a 	sll	r18,r19,r3
   29dc4:	002a5940 	call	2a594 <__umodsi3>
   29dc8:	a009883a 	mov	r4,r20
   29dcc:	a80b883a 	mov	r5,r21
   29dd0:	1021883a 	mov	r16,r2
   29dd4:	002a5300 	call	2a530 <__udivsi3>
   29dd8:	1039883a 	mov	fp,r2
   29ddc:	8d3fffcc 	andi	r20,r17,65535
   29de0:	8020943a 	slli	r16,r16,16
   29de4:	b804d43a 	srli	r2,r23,16
   29de8:	a72d383a 	mul	r22,r20,fp
   29dec:	1404b03a 	or	r2,r2,r16
   29df0:	1580062e 	bgeu	r2,r22,29e0c <__udivdi3+0x484>
   29df4:	1445883a 	add	r2,r2,r17
   29df8:	e0ffffc4 	addi	r3,fp,-1
   29dfc:	14403836 	bltu	r2,r17,29ee0 <__udivdi3+0x558>
   29e00:	1580372e 	bgeu	r2,r22,29ee0 <__udivdi3+0x558>
   29e04:	e73fff84 	addi	fp,fp,-2
   29e08:	1445883a 	add	r2,r2,r17
   29e0c:	15adc83a 	sub	r22,r2,r22
   29e10:	a80b883a 	mov	r5,r21
   29e14:	b009883a 	mov	r4,r22
   29e18:	002a5940 	call	2a594 <__umodsi3>
   29e1c:	1027883a 	mov	r19,r2
   29e20:	b009883a 	mov	r4,r22
   29e24:	a80b883a 	mov	r5,r21
   29e28:	002a5300 	call	2a530 <__udivsi3>
   29e2c:	9826943a 	slli	r19,r19,16
   29e30:	a0a1383a 	mul	r16,r20,r2
   29e34:	b93fffcc 	andi	r4,r23,65535
   29e38:	24c8b03a 	or	r4,r4,r19
   29e3c:	2400062e 	bgeu	r4,r16,29e58 <__udivdi3+0x4d0>
   29e40:	2449883a 	add	r4,r4,r17
   29e44:	10ffffc4 	addi	r3,r2,-1
   29e48:	24402336 	bltu	r4,r17,29ed8 <__udivdi3+0x550>
   29e4c:	2400222e 	bgeu	r4,r16,29ed8 <__udivdi3+0x550>
   29e50:	10bfff84 	addi	r2,r2,-2
   29e54:	2449883a 	add	r4,r4,r17
   29e58:	e038943a 	slli	fp,fp,16
   29e5c:	2421c83a 	sub	r16,r4,r16
   29e60:	e086b03a 	or	r3,fp,r2
   29e64:	003f4306 	br	29b74 <__alt_data_end+0xfffe9b74>
   29e68:	2005883a 	mov	r2,r4
   29e6c:	003f6906 	br	29c14 <__alt_data_end+0xfffe9c14>
   29e70:	1805883a 	mov	r2,r3
   29e74:	003f0f06 	br	29ab4 <__alt_data_end+0xfffe9ab4>
   29e78:	1806943a 	slli	r3,r3,16
   29e7c:	9d66983a 	sll	r19,r19,r21
   29e80:	39ffffcc 	andi	r7,r7,65535
   29e84:	19c7883a 	add	r3,r3,r7
   29e88:	98ffc32e 	bgeu	r19,r3,29d98 <__alt_data_end+0xfffe9d98>
   29e8c:	10bfffc4 	addi	r2,r2,-1
   29e90:	003fc106 	br	29d98 <__alt_data_end+0xfffe9d98>
   29e94:	00800604 	movi	r2,24
   29e98:	003f1106 	br	29ae0 <__alt_data_end+0xfffe9ae0>
   29e9c:	00800604 	movi	r2,24
   29ea0:	003f2706 	br	29b40 <__alt_data_end+0xfffe9b40>
   29ea4:	00800604 	movi	r2,24
   29ea8:	003ece06 	br	299e4 <__alt_data_end+0xfffe99e4>
   29eac:	0007883a 	mov	r3,zero
   29eb0:	00800044 	movi	r2,1
   29eb4:	003f5c06 	br	29c28 <__alt_data_end+0xfffe9c28>
   29eb8:	813fa12e 	bgeu	r16,r4,29d40 <__alt_data_end+0xfffe9d40>
   29ebc:	10bfff84 	addi	r2,r2,-2
   29ec0:	85e1883a 	add	r16,r16,r23
   29ec4:	003f9f06 	br	29d44 <__alt_data_end+0xfffe9d44>
   29ec8:	1c7f8a2e 	bgeu	r3,r17,29cf4 <__alt_data_end+0xfffe9cf4>
   29ecc:	31bfff84 	addi	r6,r6,-2
   29ed0:	1dc7883a 	add	r3,r3,r23
   29ed4:	003f8806 	br	29cf8 <__alt_data_end+0xfffe9cf8>
   29ed8:	1805883a 	mov	r2,r3
   29edc:	003fde06 	br	29e58 <__alt_data_end+0xfffe9e58>
   29ee0:	1839883a 	mov	fp,r3
   29ee4:	003fc906 	br	29e0c <__alt_data_end+0xfffe9e0c>
   29ee8:	b5bfff84 	addi	r22,r22,-2
   29eec:	2449883a 	add	r4,r4,r17
   29ef0:	003f3406 	br	29bc4 <__alt_data_end+0xfffe9bc4>
   29ef4:	b5bfff84 	addi	r22,r22,-2
   29ef8:	1445883a 	add	r2,r2,r17
   29efc:	003edb06 	br	29a6c <__alt_data_end+0xfffe9a6c>

00029f00 <__umoddi3>:
   29f00:	defff404 	addi	sp,sp,-48
   29f04:	df000a15 	stw	fp,40(sp)
   29f08:	dc400315 	stw	r17,12(sp)
   29f0c:	dc000215 	stw	r16,8(sp)
   29f10:	dfc00b15 	stw	ra,44(sp)
   29f14:	ddc00915 	stw	r23,36(sp)
   29f18:	dd800815 	stw	r22,32(sp)
   29f1c:	dd400715 	stw	r21,28(sp)
   29f20:	dd000615 	stw	r20,24(sp)
   29f24:	dcc00515 	stw	r19,20(sp)
   29f28:	dc800415 	stw	r18,16(sp)
   29f2c:	2021883a 	mov	r16,r4
   29f30:	2823883a 	mov	r17,r5
   29f34:	2839883a 	mov	fp,r5
   29f38:	38003c1e 	bne	r7,zero,2a02c <__umoddi3+0x12c>
   29f3c:	3027883a 	mov	r19,r6
   29f40:	2029883a 	mov	r20,r4
   29f44:	2980512e 	bgeu	r5,r6,2a08c <__umoddi3+0x18c>
   29f48:	00bfffd4 	movui	r2,65535
   29f4c:	11809a36 	bltu	r2,r6,2a1b8 <__umoddi3+0x2b8>
   29f50:	01003fc4 	movi	r4,255
   29f54:	2189803a 	cmpltu	r4,r4,r6
   29f58:	200890fa 	slli	r4,r4,3
   29f5c:	3104d83a 	srl	r2,r6,r4
   29f60:	00c000f4 	movhi	r3,3
   29f64:	18fd7e04 	addi	r3,r3,-2568
   29f68:	1885883a 	add	r2,r3,r2
   29f6c:	10c00003 	ldbu	r3,0(r2)
   29f70:	00800804 	movi	r2,32
   29f74:	1909883a 	add	r4,r3,r4
   29f78:	1125c83a 	sub	r18,r2,r4
   29f7c:	90000526 	beq	r18,zero,29f94 <__umoddi3+0x94>
   29f80:	8ca2983a 	sll	r17,r17,r18
   29f84:	8108d83a 	srl	r4,r16,r4
   29f88:	34a6983a 	sll	r19,r6,r18
   29f8c:	84a8983a 	sll	r20,r16,r18
   29f90:	2478b03a 	or	fp,r4,r17
   29f94:	982ed43a 	srli	r23,r19,16
   29f98:	e009883a 	mov	r4,fp
   29f9c:	9dbfffcc 	andi	r22,r19,65535
   29fa0:	b80b883a 	mov	r5,r23
   29fa4:	002a5940 	call	2a594 <__umodsi3>
   29fa8:	e009883a 	mov	r4,fp
   29fac:	b80b883a 	mov	r5,r23
   29fb0:	102b883a 	mov	r21,r2
   29fb4:	002a5300 	call	2a530 <__udivsi3>
   29fb8:	a806943a 	slli	r3,r21,16
   29fbc:	a008d43a 	srli	r4,r20,16
   29fc0:	b085383a 	mul	r2,r22,r2
   29fc4:	20c8b03a 	or	r4,r4,r3
   29fc8:	2080032e 	bgeu	r4,r2,29fd8 <__umoddi3+0xd8>
   29fcc:	24c9883a 	add	r4,r4,r19
   29fd0:	24c00136 	bltu	r4,r19,29fd8 <__umoddi3+0xd8>
   29fd4:	20811036 	bltu	r4,r2,2a418 <__umoddi3+0x518>
   29fd8:	20abc83a 	sub	r21,r4,r2
   29fdc:	b80b883a 	mov	r5,r23
   29fe0:	a809883a 	mov	r4,r21
   29fe4:	002a5940 	call	2a594 <__umodsi3>
   29fe8:	1023883a 	mov	r17,r2
   29fec:	b80b883a 	mov	r5,r23
   29ff0:	a809883a 	mov	r4,r21
   29ff4:	002a5300 	call	2a530 <__udivsi3>
   29ff8:	8822943a 	slli	r17,r17,16
   29ffc:	b085383a 	mul	r2,r22,r2
   2a000:	a0ffffcc 	andi	r3,r20,65535
   2a004:	1c46b03a 	or	r3,r3,r17
   2a008:	1880042e 	bgeu	r3,r2,2a01c <__umoddi3+0x11c>
   2a00c:	1cc7883a 	add	r3,r3,r19
   2a010:	1cc00236 	bltu	r3,r19,2a01c <__umoddi3+0x11c>
   2a014:	1880012e 	bgeu	r3,r2,2a01c <__umoddi3+0x11c>
   2a018:	1cc7883a 	add	r3,r3,r19
   2a01c:	1885c83a 	sub	r2,r3,r2
   2a020:	1484d83a 	srl	r2,r2,r18
   2a024:	0007883a 	mov	r3,zero
   2a028:	00004f06 	br	2a168 <__umoddi3+0x268>
   2a02c:	29c04c36 	bltu	r5,r7,2a160 <__umoddi3+0x260>
   2a030:	00bfffd4 	movui	r2,65535
   2a034:	11c0582e 	bgeu	r2,r7,2a198 <__umoddi3+0x298>
   2a038:	00804034 	movhi	r2,256
   2a03c:	10bfffc4 	addi	r2,r2,-1
   2a040:	11c0e736 	bltu	r2,r7,2a3e0 <__umoddi3+0x4e0>
   2a044:	01000404 	movi	r4,16
   2a048:	3904d83a 	srl	r2,r7,r4
   2a04c:	00c000f4 	movhi	r3,3
   2a050:	18fd7e04 	addi	r3,r3,-2568
   2a054:	1885883a 	add	r2,r3,r2
   2a058:	14c00003 	ldbu	r19,0(r2)
   2a05c:	00c00804 	movi	r3,32
   2a060:	9927883a 	add	r19,r19,r4
   2a064:	1ce9c83a 	sub	r20,r3,r19
   2a068:	a000581e 	bne	r20,zero,2a1cc <__umoddi3+0x2cc>
   2a06c:	3c400136 	bltu	r7,r17,2a074 <__umoddi3+0x174>
   2a070:	8180eb36 	bltu	r16,r6,2a420 <__umoddi3+0x520>
   2a074:	8185c83a 	sub	r2,r16,r6
   2a078:	89e3c83a 	sub	r17,r17,r7
   2a07c:	8089803a 	cmpltu	r4,r16,r2
   2a080:	8939c83a 	sub	fp,r17,r4
   2a084:	e007883a 	mov	r3,fp
   2a088:	00003706 	br	2a168 <__umoddi3+0x268>
   2a08c:	3000041e 	bne	r6,zero,2a0a0 <__umoddi3+0x1a0>
   2a090:	000b883a 	mov	r5,zero
   2a094:	01000044 	movi	r4,1
   2a098:	002a5300 	call	2a530 <__udivsi3>
   2a09c:	1027883a 	mov	r19,r2
   2a0a0:	00bfffd4 	movui	r2,65535
   2a0a4:	14c0402e 	bgeu	r2,r19,2a1a8 <__umoddi3+0x2a8>
   2a0a8:	00804034 	movhi	r2,256
   2a0ac:	10bfffc4 	addi	r2,r2,-1
   2a0b0:	14c0cd36 	bltu	r2,r19,2a3e8 <__umoddi3+0x4e8>
   2a0b4:	00800404 	movi	r2,16
   2a0b8:	9886d83a 	srl	r3,r19,r2
   2a0bc:	010000f4 	movhi	r4,3
   2a0c0:	213d7e04 	addi	r4,r4,-2568
   2a0c4:	20c7883a 	add	r3,r4,r3
   2a0c8:	18c00003 	ldbu	r3,0(r3)
   2a0cc:	1887883a 	add	r3,r3,r2
   2a0d0:	00800804 	movi	r2,32
   2a0d4:	10e5c83a 	sub	r18,r2,r3
   2a0d8:	9000901e 	bne	r18,zero,2a31c <__umoddi3+0x41c>
   2a0dc:	982cd43a 	srli	r22,r19,16
   2a0e0:	8ce3c83a 	sub	r17,r17,r19
   2a0e4:	9d7fffcc 	andi	r21,r19,65535
   2a0e8:	b00b883a 	mov	r5,r22
   2a0ec:	8809883a 	mov	r4,r17
   2a0f0:	002a5940 	call	2a594 <__umodsi3>
   2a0f4:	8809883a 	mov	r4,r17
   2a0f8:	b00b883a 	mov	r5,r22
   2a0fc:	1021883a 	mov	r16,r2
   2a100:	002a5300 	call	2a530 <__udivsi3>
   2a104:	8006943a 	slli	r3,r16,16
   2a108:	a008d43a 	srli	r4,r20,16
   2a10c:	1545383a 	mul	r2,r2,r21
   2a110:	20c8b03a 	or	r4,r4,r3
   2a114:	2080042e 	bgeu	r4,r2,2a128 <__umoddi3+0x228>
   2a118:	24c9883a 	add	r4,r4,r19
   2a11c:	24c00236 	bltu	r4,r19,2a128 <__umoddi3+0x228>
   2a120:	2080012e 	bgeu	r4,r2,2a128 <__umoddi3+0x228>
   2a124:	24c9883a 	add	r4,r4,r19
   2a128:	20a1c83a 	sub	r16,r4,r2
   2a12c:	b00b883a 	mov	r5,r22
   2a130:	8009883a 	mov	r4,r16
   2a134:	002a5940 	call	2a594 <__umodsi3>
   2a138:	1023883a 	mov	r17,r2
   2a13c:	b00b883a 	mov	r5,r22
   2a140:	8009883a 	mov	r4,r16
   2a144:	002a5300 	call	2a530 <__udivsi3>
   2a148:	8822943a 	slli	r17,r17,16
   2a14c:	1545383a 	mul	r2,r2,r21
   2a150:	a53fffcc 	andi	r20,r20,65535
   2a154:	a446b03a 	or	r3,r20,r17
   2a158:	18bfb02e 	bgeu	r3,r2,2a01c <__alt_data_end+0xfffea01c>
   2a15c:	003fab06 	br	2a00c <__alt_data_end+0xfffea00c>
   2a160:	2005883a 	mov	r2,r4
   2a164:	2807883a 	mov	r3,r5
   2a168:	dfc00b17 	ldw	ra,44(sp)
   2a16c:	df000a17 	ldw	fp,40(sp)
   2a170:	ddc00917 	ldw	r23,36(sp)
   2a174:	dd800817 	ldw	r22,32(sp)
   2a178:	dd400717 	ldw	r21,28(sp)
   2a17c:	dd000617 	ldw	r20,24(sp)
   2a180:	dcc00517 	ldw	r19,20(sp)
   2a184:	dc800417 	ldw	r18,16(sp)
   2a188:	dc400317 	ldw	r17,12(sp)
   2a18c:	dc000217 	ldw	r16,8(sp)
   2a190:	dec00c04 	addi	sp,sp,48
   2a194:	f800283a 	ret
   2a198:	04c03fc4 	movi	r19,255
   2a19c:	99c9803a 	cmpltu	r4,r19,r7
   2a1a0:	200890fa 	slli	r4,r4,3
   2a1a4:	003fa806 	br	2a048 <__alt_data_end+0xfffea048>
   2a1a8:	00803fc4 	movi	r2,255
   2a1ac:	14c5803a 	cmpltu	r2,r2,r19
   2a1b0:	100490fa 	slli	r2,r2,3
   2a1b4:	003fc006 	br	2a0b8 <__alt_data_end+0xfffea0b8>
   2a1b8:	00804034 	movhi	r2,256
   2a1bc:	10bfffc4 	addi	r2,r2,-1
   2a1c0:	11808b36 	bltu	r2,r6,2a3f0 <__umoddi3+0x4f0>
   2a1c4:	01000404 	movi	r4,16
   2a1c8:	003f6406 	br	29f5c <__alt_data_end+0xfffe9f5c>
   2a1cc:	34c4d83a 	srl	r2,r6,r19
   2a1d0:	3d0e983a 	sll	r7,r7,r20
   2a1d4:	8cf8d83a 	srl	fp,r17,r19
   2a1d8:	8d10983a 	sll	r8,r17,r20
   2a1dc:	38aab03a 	or	r21,r7,r2
   2a1e0:	a82cd43a 	srli	r22,r21,16
   2a1e4:	84e2d83a 	srl	r17,r16,r19
   2a1e8:	e009883a 	mov	r4,fp
   2a1ec:	b00b883a 	mov	r5,r22
   2a1f0:	8a22b03a 	or	r17,r17,r8
   2a1f4:	3524983a 	sll	r18,r6,r20
   2a1f8:	002a5940 	call	2a594 <__umodsi3>
   2a1fc:	e009883a 	mov	r4,fp
   2a200:	b00b883a 	mov	r5,r22
   2a204:	102f883a 	mov	r23,r2
   2a208:	002a5300 	call	2a530 <__udivsi3>
   2a20c:	100d883a 	mov	r6,r2
   2a210:	b808943a 	slli	r4,r23,16
   2a214:	aa3fffcc 	andi	r8,r21,65535
   2a218:	8804d43a 	srli	r2,r17,16
   2a21c:	41af383a 	mul	r23,r8,r6
   2a220:	8520983a 	sll	r16,r16,r20
   2a224:	1104b03a 	or	r2,r2,r4
   2a228:	15c0042e 	bgeu	r2,r23,2a23c <__umoddi3+0x33c>
   2a22c:	1545883a 	add	r2,r2,r21
   2a230:	30ffffc4 	addi	r3,r6,-1
   2a234:	1540742e 	bgeu	r2,r21,2a408 <__umoddi3+0x508>
   2a238:	180d883a 	mov	r6,r3
   2a23c:	15efc83a 	sub	r23,r2,r23
   2a240:	b00b883a 	mov	r5,r22
   2a244:	b809883a 	mov	r4,r23
   2a248:	d9800115 	stw	r6,4(sp)
   2a24c:	da000015 	stw	r8,0(sp)
   2a250:	002a5940 	call	2a594 <__umodsi3>
   2a254:	b00b883a 	mov	r5,r22
   2a258:	b809883a 	mov	r4,r23
   2a25c:	1039883a 	mov	fp,r2
   2a260:	002a5300 	call	2a530 <__udivsi3>
   2a264:	da000017 	ldw	r8,0(sp)
   2a268:	e038943a 	slli	fp,fp,16
   2a26c:	100b883a 	mov	r5,r2
   2a270:	4089383a 	mul	r4,r8,r2
   2a274:	8a3fffcc 	andi	r8,r17,65535
   2a278:	4710b03a 	or	r8,r8,fp
   2a27c:	d9800117 	ldw	r6,4(sp)
   2a280:	4100042e 	bgeu	r8,r4,2a294 <__umoddi3+0x394>
   2a284:	4551883a 	add	r8,r8,r21
   2a288:	10bfffc4 	addi	r2,r2,-1
   2a28c:	45405a2e 	bgeu	r8,r21,2a3f8 <__umoddi3+0x4f8>
   2a290:	100b883a 	mov	r5,r2
   2a294:	300c943a 	slli	r6,r6,16
   2a298:	91ffffcc 	andi	r7,r18,65535
   2a29c:	9004d43a 	srli	r2,r18,16
   2a2a0:	314cb03a 	or	r6,r6,r5
   2a2a4:	317fffcc 	andi	r5,r6,65535
   2a2a8:	300cd43a 	srli	r6,r6,16
   2a2ac:	29d3383a 	mul	r9,r5,r7
   2a2b0:	288b383a 	mul	r5,r5,r2
   2a2b4:	31cf383a 	mul	r7,r6,r7
   2a2b8:	4806d43a 	srli	r3,r9,16
   2a2bc:	4111c83a 	sub	r8,r8,r4
   2a2c0:	29cb883a 	add	r5,r5,r7
   2a2c4:	194b883a 	add	r5,r3,r5
   2a2c8:	3085383a 	mul	r2,r6,r2
   2a2cc:	29c0022e 	bgeu	r5,r7,2a2d8 <__umoddi3+0x3d8>
   2a2d0:	00c00074 	movhi	r3,1
   2a2d4:	10c5883a 	add	r2,r2,r3
   2a2d8:	2808d43a 	srli	r4,r5,16
   2a2dc:	280a943a 	slli	r5,r5,16
   2a2e0:	4a7fffcc 	andi	r9,r9,65535
   2a2e4:	2085883a 	add	r2,r4,r2
   2a2e8:	2a4b883a 	add	r5,r5,r9
   2a2ec:	40803636 	bltu	r8,r2,2a3c8 <__umoddi3+0x4c8>
   2a2f0:	40804d26 	beq	r8,r2,2a428 <__umoddi3+0x528>
   2a2f4:	4089c83a 	sub	r4,r8,r2
   2a2f8:	280f883a 	mov	r7,r5
   2a2fc:	81cfc83a 	sub	r7,r16,r7
   2a300:	81c7803a 	cmpltu	r3,r16,r7
   2a304:	20c7c83a 	sub	r3,r4,r3
   2a308:	1cc4983a 	sll	r2,r3,r19
   2a30c:	3d0ed83a 	srl	r7,r7,r20
   2a310:	1d06d83a 	srl	r3,r3,r20
   2a314:	11c4b03a 	or	r2,r2,r7
   2a318:	003f9306 	br	2a168 <__alt_data_end+0xfffea168>
   2a31c:	9ca6983a 	sll	r19,r19,r18
   2a320:	88e8d83a 	srl	r20,r17,r3
   2a324:	80c4d83a 	srl	r2,r16,r3
   2a328:	982cd43a 	srli	r22,r19,16
   2a32c:	8ca2983a 	sll	r17,r17,r18
   2a330:	a009883a 	mov	r4,r20
   2a334:	b00b883a 	mov	r5,r22
   2a338:	1478b03a 	or	fp,r2,r17
   2a33c:	002a5940 	call	2a594 <__umodsi3>
   2a340:	a009883a 	mov	r4,r20
   2a344:	b00b883a 	mov	r5,r22
   2a348:	1023883a 	mov	r17,r2
   2a34c:	002a5300 	call	2a530 <__udivsi3>
   2a350:	9d7fffcc 	andi	r21,r19,65535
   2a354:	880a943a 	slli	r5,r17,16
   2a358:	e008d43a 	srli	r4,fp,16
   2a35c:	a885383a 	mul	r2,r21,r2
   2a360:	84a8983a 	sll	r20,r16,r18
   2a364:	2148b03a 	or	r4,r4,r5
   2a368:	2080042e 	bgeu	r4,r2,2a37c <__umoddi3+0x47c>
   2a36c:	24c9883a 	add	r4,r4,r19
   2a370:	24c00236 	bltu	r4,r19,2a37c <__umoddi3+0x47c>
   2a374:	2080012e 	bgeu	r4,r2,2a37c <__umoddi3+0x47c>
   2a378:	24c9883a 	add	r4,r4,r19
   2a37c:	20a3c83a 	sub	r17,r4,r2
   2a380:	b00b883a 	mov	r5,r22
   2a384:	8809883a 	mov	r4,r17
   2a388:	002a5940 	call	2a594 <__umodsi3>
   2a38c:	102f883a 	mov	r23,r2
   2a390:	8809883a 	mov	r4,r17
   2a394:	b00b883a 	mov	r5,r22
   2a398:	002a5300 	call	2a530 <__udivsi3>
   2a39c:	b82e943a 	slli	r23,r23,16
   2a3a0:	a885383a 	mul	r2,r21,r2
   2a3a4:	e13fffcc 	andi	r4,fp,65535
   2a3a8:	25c8b03a 	or	r4,r4,r23
   2a3ac:	2080042e 	bgeu	r4,r2,2a3c0 <__umoddi3+0x4c0>
   2a3b0:	24c9883a 	add	r4,r4,r19
   2a3b4:	24c00236 	bltu	r4,r19,2a3c0 <__umoddi3+0x4c0>
   2a3b8:	2080012e 	bgeu	r4,r2,2a3c0 <__umoddi3+0x4c0>
   2a3bc:	24c9883a 	add	r4,r4,r19
   2a3c0:	20a3c83a 	sub	r17,r4,r2
   2a3c4:	003f4806 	br	2a0e8 <__alt_data_end+0xfffea0e8>
   2a3c8:	2c8fc83a 	sub	r7,r5,r18
   2a3cc:	1545c83a 	sub	r2,r2,r21
   2a3d0:	29cb803a 	cmpltu	r5,r5,r7
   2a3d4:	1145c83a 	sub	r2,r2,r5
   2a3d8:	4089c83a 	sub	r4,r8,r2
   2a3dc:	003fc706 	br	2a2fc <__alt_data_end+0xfffea2fc>
   2a3e0:	01000604 	movi	r4,24
   2a3e4:	003f1806 	br	2a048 <__alt_data_end+0xfffea048>
   2a3e8:	00800604 	movi	r2,24
   2a3ec:	003f3206 	br	2a0b8 <__alt_data_end+0xfffea0b8>
   2a3f0:	01000604 	movi	r4,24
   2a3f4:	003ed906 	br	29f5c <__alt_data_end+0xfffe9f5c>
   2a3f8:	413fa52e 	bgeu	r8,r4,2a290 <__alt_data_end+0xfffea290>
   2a3fc:	297fff84 	addi	r5,r5,-2
   2a400:	4551883a 	add	r8,r8,r21
   2a404:	003fa306 	br	2a294 <__alt_data_end+0xfffea294>
   2a408:	15ff8b2e 	bgeu	r2,r23,2a238 <__alt_data_end+0xfffea238>
   2a40c:	31bfff84 	addi	r6,r6,-2
   2a410:	1545883a 	add	r2,r2,r21
   2a414:	003f8906 	br	2a23c <__alt_data_end+0xfffea23c>
   2a418:	24c9883a 	add	r4,r4,r19
   2a41c:	003eee06 	br	29fd8 <__alt_data_end+0xfffe9fd8>
   2a420:	8005883a 	mov	r2,r16
   2a424:	003f1706 	br	2a084 <__alt_data_end+0xfffea084>
   2a428:	817fe736 	bltu	r16,r5,2a3c8 <__alt_data_end+0xfffea3c8>
   2a42c:	280f883a 	mov	r7,r5
   2a430:	0009883a 	mov	r4,zero
   2a434:	003fb106 	br	2a2fc <__alt_data_end+0xfffea2fc>

0002a438 <__divsi3>:
   2a438:	20001b16 	blt	r4,zero,2a4a8 <__divsi3+0x70>
   2a43c:	000f883a 	mov	r7,zero
   2a440:	28001616 	blt	r5,zero,2a49c <__divsi3+0x64>
   2a444:	200d883a 	mov	r6,r4
   2a448:	29001a2e 	bgeu	r5,r4,2a4b4 <__divsi3+0x7c>
   2a44c:	00800804 	movi	r2,32
   2a450:	00c00044 	movi	r3,1
   2a454:	00000106 	br	2a45c <__divsi3+0x24>
   2a458:	10000d26 	beq	r2,zero,2a490 <__divsi3+0x58>
   2a45c:	294b883a 	add	r5,r5,r5
   2a460:	10bfffc4 	addi	r2,r2,-1
   2a464:	18c7883a 	add	r3,r3,r3
   2a468:	293ffb36 	bltu	r5,r4,2a458 <__alt_data_end+0xfffea458>
   2a46c:	0005883a 	mov	r2,zero
   2a470:	18000726 	beq	r3,zero,2a490 <__divsi3+0x58>
   2a474:	0005883a 	mov	r2,zero
   2a478:	31400236 	bltu	r6,r5,2a484 <__divsi3+0x4c>
   2a47c:	314dc83a 	sub	r6,r6,r5
   2a480:	10c4b03a 	or	r2,r2,r3
   2a484:	1806d07a 	srli	r3,r3,1
   2a488:	280ad07a 	srli	r5,r5,1
   2a48c:	183ffa1e 	bne	r3,zero,2a478 <__alt_data_end+0xfffea478>
   2a490:	38000126 	beq	r7,zero,2a498 <__divsi3+0x60>
   2a494:	0085c83a 	sub	r2,zero,r2
   2a498:	f800283a 	ret
   2a49c:	014bc83a 	sub	r5,zero,r5
   2a4a0:	39c0005c 	xori	r7,r7,1
   2a4a4:	003fe706 	br	2a444 <__alt_data_end+0xfffea444>
   2a4a8:	0109c83a 	sub	r4,zero,r4
   2a4ac:	01c00044 	movi	r7,1
   2a4b0:	003fe306 	br	2a440 <__alt_data_end+0xfffea440>
   2a4b4:	00c00044 	movi	r3,1
   2a4b8:	003fee06 	br	2a474 <__alt_data_end+0xfffea474>

0002a4bc <__modsi3>:
   2a4bc:	20001716 	blt	r4,zero,2a51c <__modsi3+0x60>
   2a4c0:	000f883a 	mov	r7,zero
   2a4c4:	2005883a 	mov	r2,r4
   2a4c8:	28001216 	blt	r5,zero,2a514 <__modsi3+0x58>
   2a4cc:	2900162e 	bgeu	r5,r4,2a528 <__modsi3+0x6c>
   2a4d0:	01800804 	movi	r6,32
   2a4d4:	00c00044 	movi	r3,1
   2a4d8:	00000106 	br	2a4e0 <__modsi3+0x24>
   2a4dc:	30000a26 	beq	r6,zero,2a508 <__modsi3+0x4c>
   2a4e0:	294b883a 	add	r5,r5,r5
   2a4e4:	31bfffc4 	addi	r6,r6,-1
   2a4e8:	18c7883a 	add	r3,r3,r3
   2a4ec:	293ffb36 	bltu	r5,r4,2a4dc <__alt_data_end+0xfffea4dc>
   2a4f0:	18000526 	beq	r3,zero,2a508 <__modsi3+0x4c>
   2a4f4:	1806d07a 	srli	r3,r3,1
   2a4f8:	11400136 	bltu	r2,r5,2a500 <__modsi3+0x44>
   2a4fc:	1145c83a 	sub	r2,r2,r5
   2a500:	280ad07a 	srli	r5,r5,1
   2a504:	183ffb1e 	bne	r3,zero,2a4f4 <__alt_data_end+0xfffea4f4>
   2a508:	38000126 	beq	r7,zero,2a510 <__modsi3+0x54>
   2a50c:	0085c83a 	sub	r2,zero,r2
   2a510:	f800283a 	ret
   2a514:	014bc83a 	sub	r5,zero,r5
   2a518:	003fec06 	br	2a4cc <__alt_data_end+0xfffea4cc>
   2a51c:	0109c83a 	sub	r4,zero,r4
   2a520:	01c00044 	movi	r7,1
   2a524:	003fe706 	br	2a4c4 <__alt_data_end+0xfffea4c4>
   2a528:	00c00044 	movi	r3,1
   2a52c:	003ff106 	br	2a4f4 <__alt_data_end+0xfffea4f4>

0002a530 <__udivsi3>:
   2a530:	200d883a 	mov	r6,r4
   2a534:	2900152e 	bgeu	r5,r4,2a58c <__udivsi3+0x5c>
   2a538:	28001416 	blt	r5,zero,2a58c <__udivsi3+0x5c>
   2a53c:	00800804 	movi	r2,32
   2a540:	00c00044 	movi	r3,1
   2a544:	00000206 	br	2a550 <__udivsi3+0x20>
   2a548:	10000e26 	beq	r2,zero,2a584 <__udivsi3+0x54>
   2a54c:	28000516 	blt	r5,zero,2a564 <__udivsi3+0x34>
   2a550:	294b883a 	add	r5,r5,r5
   2a554:	10bfffc4 	addi	r2,r2,-1
   2a558:	18c7883a 	add	r3,r3,r3
   2a55c:	293ffa36 	bltu	r5,r4,2a548 <__alt_data_end+0xfffea548>
   2a560:	18000826 	beq	r3,zero,2a584 <__udivsi3+0x54>
   2a564:	0005883a 	mov	r2,zero
   2a568:	31400236 	bltu	r6,r5,2a574 <__udivsi3+0x44>
   2a56c:	314dc83a 	sub	r6,r6,r5
   2a570:	10c4b03a 	or	r2,r2,r3
   2a574:	1806d07a 	srli	r3,r3,1
   2a578:	280ad07a 	srli	r5,r5,1
   2a57c:	183ffa1e 	bne	r3,zero,2a568 <__alt_data_end+0xfffea568>
   2a580:	f800283a 	ret
   2a584:	0005883a 	mov	r2,zero
   2a588:	f800283a 	ret
   2a58c:	00c00044 	movi	r3,1
   2a590:	003ff406 	br	2a564 <__alt_data_end+0xfffea564>

0002a594 <__umodsi3>:
   2a594:	2005883a 	mov	r2,r4
   2a598:	2900122e 	bgeu	r5,r4,2a5e4 <__umodsi3+0x50>
   2a59c:	28001116 	blt	r5,zero,2a5e4 <__umodsi3+0x50>
   2a5a0:	01800804 	movi	r6,32
   2a5a4:	00c00044 	movi	r3,1
   2a5a8:	00000206 	br	2a5b4 <__umodsi3+0x20>
   2a5ac:	30000c26 	beq	r6,zero,2a5e0 <__umodsi3+0x4c>
   2a5b0:	28000516 	blt	r5,zero,2a5c8 <__umodsi3+0x34>
   2a5b4:	294b883a 	add	r5,r5,r5
   2a5b8:	31bfffc4 	addi	r6,r6,-1
   2a5bc:	18c7883a 	add	r3,r3,r3
   2a5c0:	293ffa36 	bltu	r5,r4,2a5ac <__alt_data_end+0xfffea5ac>
   2a5c4:	18000626 	beq	r3,zero,2a5e0 <__umodsi3+0x4c>
   2a5c8:	1806d07a 	srli	r3,r3,1
   2a5cc:	11400136 	bltu	r2,r5,2a5d4 <__umodsi3+0x40>
   2a5d0:	1145c83a 	sub	r2,r2,r5
   2a5d4:	280ad07a 	srli	r5,r5,1
   2a5d8:	183ffb1e 	bne	r3,zero,2a5c8 <__alt_data_end+0xfffea5c8>
   2a5dc:	f800283a 	ret
   2a5e0:	f800283a 	ret
   2a5e4:	00c00044 	movi	r3,1
   2a5e8:	003ff706 	br	2a5c8 <__alt_data_end+0xfffea5c8>

0002a5ec <__adddf3>:
   2a5ec:	02c00434 	movhi	r11,16
   2a5f0:	5affffc4 	addi	r11,r11,-1
   2a5f4:	2806d7fa 	srli	r3,r5,31
   2a5f8:	2ad4703a 	and	r10,r5,r11
   2a5fc:	3ad2703a 	and	r9,r7,r11
   2a600:	3804d53a 	srli	r2,r7,20
   2a604:	3018d77a 	srli	r12,r6,29
   2a608:	280ad53a 	srli	r5,r5,20
   2a60c:	501490fa 	slli	r10,r10,3
   2a610:	2010d77a 	srli	r8,r4,29
   2a614:	481290fa 	slli	r9,r9,3
   2a618:	380ed7fa 	srli	r7,r7,31
   2a61c:	defffb04 	addi	sp,sp,-20
   2a620:	dc800215 	stw	r18,8(sp)
   2a624:	dc400115 	stw	r17,4(sp)
   2a628:	dc000015 	stw	r16,0(sp)
   2a62c:	dfc00415 	stw	ra,16(sp)
   2a630:	dcc00315 	stw	r19,12(sp)
   2a634:	1c803fcc 	andi	r18,r3,255
   2a638:	2c01ffcc 	andi	r16,r5,2047
   2a63c:	5210b03a 	or	r8,r10,r8
   2a640:	202290fa 	slli	r17,r4,3
   2a644:	1081ffcc 	andi	r2,r2,2047
   2a648:	4b12b03a 	or	r9,r9,r12
   2a64c:	300c90fa 	slli	r6,r6,3
   2a650:	91c07526 	beq	r18,r7,2a828 <__adddf3+0x23c>
   2a654:	8087c83a 	sub	r3,r16,r2
   2a658:	00c0ab0e 	bge	zero,r3,2a908 <__adddf3+0x31c>
   2a65c:	10002a1e 	bne	r2,zero,2a708 <__adddf3+0x11c>
   2a660:	4984b03a 	or	r2,r9,r6
   2a664:	1000961e 	bne	r2,zero,2a8c0 <__adddf3+0x2d4>
   2a668:	888001cc 	andi	r2,r17,7
   2a66c:	10000726 	beq	r2,zero,2a68c <__adddf3+0xa0>
   2a670:	888003cc 	andi	r2,r17,15
   2a674:	00c00104 	movi	r3,4
   2a678:	10c00426 	beq	r2,r3,2a68c <__adddf3+0xa0>
   2a67c:	88c7883a 	add	r3,r17,r3
   2a680:	1c63803a 	cmpltu	r17,r3,r17
   2a684:	4451883a 	add	r8,r8,r17
   2a688:	1823883a 	mov	r17,r3
   2a68c:	4080202c 	andhi	r2,r8,128
   2a690:	10005926 	beq	r2,zero,2a7f8 <__adddf3+0x20c>
   2a694:	84000044 	addi	r16,r16,1
   2a698:	0081ffc4 	movi	r2,2047
   2a69c:	8080ba26 	beq	r16,r2,2a988 <__adddf3+0x39c>
   2a6a0:	00bfe034 	movhi	r2,65408
   2a6a4:	10bfffc4 	addi	r2,r2,-1
   2a6a8:	4090703a 	and	r8,r8,r2
   2a6ac:	4004977a 	slli	r2,r8,29
   2a6b0:	4010927a 	slli	r8,r8,9
   2a6b4:	8822d0fa 	srli	r17,r17,3
   2a6b8:	8401ffcc 	andi	r16,r16,2047
   2a6bc:	4010d33a 	srli	r8,r8,12
   2a6c0:	9007883a 	mov	r3,r18
   2a6c4:	1444b03a 	or	r2,r2,r17
   2a6c8:	8401ffcc 	andi	r16,r16,2047
   2a6cc:	8020953a 	slli	r16,r16,20
   2a6d0:	18c03fcc 	andi	r3,r3,255
   2a6d4:	01000434 	movhi	r4,16
   2a6d8:	213fffc4 	addi	r4,r4,-1
   2a6dc:	180697fa 	slli	r3,r3,31
   2a6e0:	4110703a 	and	r8,r8,r4
   2a6e4:	4410b03a 	or	r8,r8,r16
   2a6e8:	40c6b03a 	or	r3,r8,r3
   2a6ec:	dfc00417 	ldw	ra,16(sp)
   2a6f0:	dcc00317 	ldw	r19,12(sp)
   2a6f4:	dc800217 	ldw	r18,8(sp)
   2a6f8:	dc400117 	ldw	r17,4(sp)
   2a6fc:	dc000017 	ldw	r16,0(sp)
   2a700:	dec00504 	addi	sp,sp,20
   2a704:	f800283a 	ret
   2a708:	0081ffc4 	movi	r2,2047
   2a70c:	80bfd626 	beq	r16,r2,2a668 <__alt_data_end+0xfffea668>
   2a710:	4a402034 	orhi	r9,r9,128
   2a714:	00800e04 	movi	r2,56
   2a718:	10c09f16 	blt	r2,r3,2a998 <__adddf3+0x3ac>
   2a71c:	008007c4 	movi	r2,31
   2a720:	10c0c216 	blt	r2,r3,2aa2c <__adddf3+0x440>
   2a724:	00800804 	movi	r2,32
   2a728:	10c5c83a 	sub	r2,r2,r3
   2a72c:	488a983a 	sll	r5,r9,r2
   2a730:	30c8d83a 	srl	r4,r6,r3
   2a734:	3084983a 	sll	r2,r6,r2
   2a738:	48c6d83a 	srl	r3,r9,r3
   2a73c:	290cb03a 	or	r6,r5,r4
   2a740:	1004c03a 	cmpne	r2,r2,zero
   2a744:	308cb03a 	or	r6,r6,r2
   2a748:	898dc83a 	sub	r6,r17,r6
   2a74c:	89a3803a 	cmpltu	r17,r17,r6
   2a750:	40d1c83a 	sub	r8,r8,r3
   2a754:	4451c83a 	sub	r8,r8,r17
   2a758:	3023883a 	mov	r17,r6
   2a75c:	4080202c 	andhi	r2,r8,128
   2a760:	10002326 	beq	r2,zero,2a7f0 <__adddf3+0x204>
   2a764:	04c02034 	movhi	r19,128
   2a768:	9cffffc4 	addi	r19,r19,-1
   2a76c:	44e6703a 	and	r19,r8,r19
   2a770:	98007626 	beq	r19,zero,2a94c <__adddf3+0x360>
   2a774:	9809883a 	mov	r4,r19
   2a778:	002cbf00 	call	2cbf0 <__clzsi2>
   2a77c:	10fffe04 	addi	r3,r2,-8
   2a780:	010007c4 	movi	r4,31
   2a784:	20c07716 	blt	r4,r3,2a964 <__adddf3+0x378>
   2a788:	00800804 	movi	r2,32
   2a78c:	10c5c83a 	sub	r2,r2,r3
   2a790:	8884d83a 	srl	r2,r17,r2
   2a794:	98d0983a 	sll	r8,r19,r3
   2a798:	88e2983a 	sll	r17,r17,r3
   2a79c:	1204b03a 	or	r2,r2,r8
   2a7a0:	1c007416 	blt	r3,r16,2a974 <__adddf3+0x388>
   2a7a4:	1c21c83a 	sub	r16,r3,r16
   2a7a8:	82000044 	addi	r8,r16,1
   2a7ac:	00c007c4 	movi	r3,31
   2a7b0:	1a009116 	blt	r3,r8,2a9f8 <__adddf3+0x40c>
   2a7b4:	00c00804 	movi	r3,32
   2a7b8:	1a07c83a 	sub	r3,r3,r8
   2a7bc:	8a08d83a 	srl	r4,r17,r8
   2a7c0:	88e2983a 	sll	r17,r17,r3
   2a7c4:	10c6983a 	sll	r3,r2,r3
   2a7c8:	1210d83a 	srl	r8,r2,r8
   2a7cc:	8804c03a 	cmpne	r2,r17,zero
   2a7d0:	1906b03a 	or	r3,r3,r4
   2a7d4:	18a2b03a 	or	r17,r3,r2
   2a7d8:	0021883a 	mov	r16,zero
   2a7dc:	003fa206 	br	2a668 <__alt_data_end+0xfffea668>
   2a7e0:	1890b03a 	or	r8,r3,r2
   2a7e4:	40017d26 	beq	r8,zero,2addc <__adddf3+0x7f0>
   2a7e8:	1011883a 	mov	r8,r2
   2a7ec:	1823883a 	mov	r17,r3
   2a7f0:	888001cc 	andi	r2,r17,7
   2a7f4:	103f9e1e 	bne	r2,zero,2a670 <__alt_data_end+0xfffea670>
   2a7f8:	4004977a 	slli	r2,r8,29
   2a7fc:	8822d0fa 	srli	r17,r17,3
   2a800:	4010d0fa 	srli	r8,r8,3
   2a804:	9007883a 	mov	r3,r18
   2a808:	1444b03a 	or	r2,r2,r17
   2a80c:	0101ffc4 	movi	r4,2047
   2a810:	81002426 	beq	r16,r4,2a8a4 <__adddf3+0x2b8>
   2a814:	8120703a 	and	r16,r16,r4
   2a818:	01000434 	movhi	r4,16
   2a81c:	213fffc4 	addi	r4,r4,-1
   2a820:	4110703a 	and	r8,r8,r4
   2a824:	003fa806 	br	2a6c8 <__alt_data_end+0xfffea6c8>
   2a828:	8089c83a 	sub	r4,r16,r2
   2a82c:	01005e0e 	bge	zero,r4,2a9a8 <__adddf3+0x3bc>
   2a830:	10002b26 	beq	r2,zero,2a8e0 <__adddf3+0x2f4>
   2a834:	0081ffc4 	movi	r2,2047
   2a838:	80bf8b26 	beq	r16,r2,2a668 <__alt_data_end+0xfffea668>
   2a83c:	4a402034 	orhi	r9,r9,128
   2a840:	00800e04 	movi	r2,56
   2a844:	1100a40e 	bge	r2,r4,2aad8 <__adddf3+0x4ec>
   2a848:	498cb03a 	or	r6,r9,r6
   2a84c:	300ac03a 	cmpne	r5,r6,zero
   2a850:	0013883a 	mov	r9,zero
   2a854:	2c4b883a 	add	r5,r5,r17
   2a858:	2c63803a 	cmpltu	r17,r5,r17
   2a85c:	4a11883a 	add	r8,r9,r8
   2a860:	8a11883a 	add	r8,r17,r8
   2a864:	2823883a 	mov	r17,r5
   2a868:	4080202c 	andhi	r2,r8,128
   2a86c:	103fe026 	beq	r2,zero,2a7f0 <__alt_data_end+0xfffea7f0>
   2a870:	84000044 	addi	r16,r16,1
   2a874:	0081ffc4 	movi	r2,2047
   2a878:	8080d226 	beq	r16,r2,2abc4 <__adddf3+0x5d8>
   2a87c:	00bfe034 	movhi	r2,65408
   2a880:	10bfffc4 	addi	r2,r2,-1
   2a884:	4090703a 	and	r8,r8,r2
   2a888:	880ad07a 	srli	r5,r17,1
   2a88c:	400897fa 	slli	r4,r8,31
   2a890:	88c0004c 	andi	r3,r17,1
   2a894:	28e2b03a 	or	r17,r5,r3
   2a898:	4010d07a 	srli	r8,r8,1
   2a89c:	2462b03a 	or	r17,r4,r17
   2a8a0:	003f7106 	br	2a668 <__alt_data_end+0xfffea668>
   2a8a4:	4088b03a 	or	r4,r8,r2
   2a8a8:	20014526 	beq	r4,zero,2adc0 <__adddf3+0x7d4>
   2a8ac:	01000434 	movhi	r4,16
   2a8b0:	42000234 	orhi	r8,r8,8
   2a8b4:	213fffc4 	addi	r4,r4,-1
   2a8b8:	4110703a 	and	r8,r8,r4
   2a8bc:	003f8206 	br	2a6c8 <__alt_data_end+0xfffea6c8>
   2a8c0:	18ffffc4 	addi	r3,r3,-1
   2a8c4:	1800491e 	bne	r3,zero,2a9ec <__adddf3+0x400>
   2a8c8:	898bc83a 	sub	r5,r17,r6
   2a8cc:	8963803a 	cmpltu	r17,r17,r5
   2a8d0:	4251c83a 	sub	r8,r8,r9
   2a8d4:	4451c83a 	sub	r8,r8,r17
   2a8d8:	2823883a 	mov	r17,r5
   2a8dc:	003f9f06 	br	2a75c <__alt_data_end+0xfffea75c>
   2a8e0:	4984b03a 	or	r2,r9,r6
   2a8e4:	103f6026 	beq	r2,zero,2a668 <__alt_data_end+0xfffea668>
   2a8e8:	213fffc4 	addi	r4,r4,-1
   2a8ec:	2000931e 	bne	r4,zero,2ab3c <__adddf3+0x550>
   2a8f0:	898d883a 	add	r6,r17,r6
   2a8f4:	3463803a 	cmpltu	r17,r6,r17
   2a8f8:	4251883a 	add	r8,r8,r9
   2a8fc:	8a11883a 	add	r8,r17,r8
   2a900:	3023883a 	mov	r17,r6
   2a904:	003fd806 	br	2a868 <__alt_data_end+0xfffea868>
   2a908:	1800541e 	bne	r3,zero,2aa5c <__adddf3+0x470>
   2a90c:	80800044 	addi	r2,r16,1
   2a910:	1081ffcc 	andi	r2,r2,2047
   2a914:	00c00044 	movi	r3,1
   2a918:	1880a00e 	bge	r3,r2,2ab9c <__adddf3+0x5b0>
   2a91c:	8989c83a 	sub	r4,r17,r6
   2a920:	8905803a 	cmpltu	r2,r17,r4
   2a924:	4267c83a 	sub	r19,r8,r9
   2a928:	98a7c83a 	sub	r19,r19,r2
   2a92c:	9880202c 	andhi	r2,r19,128
   2a930:	10006326 	beq	r2,zero,2aac0 <__adddf3+0x4d4>
   2a934:	3463c83a 	sub	r17,r6,r17
   2a938:	4a07c83a 	sub	r3,r9,r8
   2a93c:	344d803a 	cmpltu	r6,r6,r17
   2a940:	19a7c83a 	sub	r19,r3,r6
   2a944:	3825883a 	mov	r18,r7
   2a948:	983f8a1e 	bne	r19,zero,2a774 <__alt_data_end+0xfffea774>
   2a94c:	8809883a 	mov	r4,r17
   2a950:	002cbf00 	call	2cbf0 <__clzsi2>
   2a954:	10800804 	addi	r2,r2,32
   2a958:	10fffe04 	addi	r3,r2,-8
   2a95c:	010007c4 	movi	r4,31
   2a960:	20ff890e 	bge	r4,r3,2a788 <__alt_data_end+0xfffea788>
   2a964:	10bff604 	addi	r2,r2,-40
   2a968:	8884983a 	sll	r2,r17,r2
   2a96c:	0023883a 	mov	r17,zero
   2a970:	1c3f8c0e 	bge	r3,r16,2a7a4 <__alt_data_end+0xfffea7a4>
   2a974:	023fe034 	movhi	r8,65408
   2a978:	423fffc4 	addi	r8,r8,-1
   2a97c:	80e1c83a 	sub	r16,r16,r3
   2a980:	1210703a 	and	r8,r2,r8
   2a984:	003f3806 	br	2a668 <__alt_data_end+0xfffea668>
   2a988:	9007883a 	mov	r3,r18
   2a98c:	0011883a 	mov	r8,zero
   2a990:	0005883a 	mov	r2,zero
   2a994:	003f4c06 	br	2a6c8 <__alt_data_end+0xfffea6c8>
   2a998:	498cb03a 	or	r6,r9,r6
   2a99c:	300cc03a 	cmpne	r6,r6,zero
   2a9a0:	0007883a 	mov	r3,zero
   2a9a4:	003f6806 	br	2a748 <__alt_data_end+0xfffea748>
   2a9a8:	20009c1e 	bne	r4,zero,2ac1c <__adddf3+0x630>
   2a9ac:	80800044 	addi	r2,r16,1
   2a9b0:	1141ffcc 	andi	r5,r2,2047
   2a9b4:	01000044 	movi	r4,1
   2a9b8:	2140670e 	bge	r4,r5,2ab58 <__adddf3+0x56c>
   2a9bc:	0101ffc4 	movi	r4,2047
   2a9c0:	11007f26 	beq	r2,r4,2abc0 <__adddf3+0x5d4>
   2a9c4:	898d883a 	add	r6,r17,r6
   2a9c8:	4247883a 	add	r3,r8,r9
   2a9cc:	3451803a 	cmpltu	r8,r6,r17
   2a9d0:	40d1883a 	add	r8,r8,r3
   2a9d4:	402297fa 	slli	r17,r8,31
   2a9d8:	300cd07a 	srli	r6,r6,1
   2a9dc:	4010d07a 	srli	r8,r8,1
   2a9e0:	1021883a 	mov	r16,r2
   2a9e4:	89a2b03a 	or	r17,r17,r6
   2a9e8:	003f1f06 	br	2a668 <__alt_data_end+0xfffea668>
   2a9ec:	0081ffc4 	movi	r2,2047
   2a9f0:	80bf481e 	bne	r16,r2,2a714 <__alt_data_end+0xfffea714>
   2a9f4:	003f1c06 	br	2a668 <__alt_data_end+0xfffea668>
   2a9f8:	843ff844 	addi	r16,r16,-31
   2a9fc:	01000804 	movi	r4,32
   2aa00:	1406d83a 	srl	r3,r2,r16
   2aa04:	41005026 	beq	r8,r4,2ab48 <__adddf3+0x55c>
   2aa08:	01001004 	movi	r4,64
   2aa0c:	2211c83a 	sub	r8,r4,r8
   2aa10:	1204983a 	sll	r2,r2,r8
   2aa14:	88a2b03a 	or	r17,r17,r2
   2aa18:	8822c03a 	cmpne	r17,r17,zero
   2aa1c:	1c62b03a 	or	r17,r3,r17
   2aa20:	0011883a 	mov	r8,zero
   2aa24:	0021883a 	mov	r16,zero
   2aa28:	003f7106 	br	2a7f0 <__alt_data_end+0xfffea7f0>
   2aa2c:	193ff804 	addi	r4,r3,-32
   2aa30:	00800804 	movi	r2,32
   2aa34:	4908d83a 	srl	r4,r9,r4
   2aa38:	18804526 	beq	r3,r2,2ab50 <__adddf3+0x564>
   2aa3c:	00801004 	movi	r2,64
   2aa40:	10c5c83a 	sub	r2,r2,r3
   2aa44:	4886983a 	sll	r3,r9,r2
   2aa48:	198cb03a 	or	r6,r3,r6
   2aa4c:	300cc03a 	cmpne	r6,r6,zero
   2aa50:	218cb03a 	or	r6,r4,r6
   2aa54:	0007883a 	mov	r3,zero
   2aa58:	003f3b06 	br	2a748 <__alt_data_end+0xfffea748>
   2aa5c:	80002a26 	beq	r16,zero,2ab08 <__adddf3+0x51c>
   2aa60:	0101ffc4 	movi	r4,2047
   2aa64:	11006826 	beq	r2,r4,2ac08 <__adddf3+0x61c>
   2aa68:	00c7c83a 	sub	r3,zero,r3
   2aa6c:	42002034 	orhi	r8,r8,128
   2aa70:	01000e04 	movi	r4,56
   2aa74:	20c07c16 	blt	r4,r3,2ac68 <__adddf3+0x67c>
   2aa78:	010007c4 	movi	r4,31
   2aa7c:	20c0da16 	blt	r4,r3,2ade8 <__adddf3+0x7fc>
   2aa80:	01000804 	movi	r4,32
   2aa84:	20c9c83a 	sub	r4,r4,r3
   2aa88:	4114983a 	sll	r10,r8,r4
   2aa8c:	88cad83a 	srl	r5,r17,r3
   2aa90:	8908983a 	sll	r4,r17,r4
   2aa94:	40c6d83a 	srl	r3,r8,r3
   2aa98:	5162b03a 	or	r17,r10,r5
   2aa9c:	2008c03a 	cmpne	r4,r4,zero
   2aaa0:	8922b03a 	or	r17,r17,r4
   2aaa4:	3463c83a 	sub	r17,r6,r17
   2aaa8:	48c7c83a 	sub	r3,r9,r3
   2aaac:	344d803a 	cmpltu	r6,r6,r17
   2aab0:	1991c83a 	sub	r8,r3,r6
   2aab4:	1021883a 	mov	r16,r2
   2aab8:	3825883a 	mov	r18,r7
   2aabc:	003f2706 	br	2a75c <__alt_data_end+0xfffea75c>
   2aac0:	24d0b03a 	or	r8,r4,r19
   2aac4:	40001b1e 	bne	r8,zero,2ab34 <__adddf3+0x548>
   2aac8:	0005883a 	mov	r2,zero
   2aacc:	0007883a 	mov	r3,zero
   2aad0:	0021883a 	mov	r16,zero
   2aad4:	003f4d06 	br	2a80c <__alt_data_end+0xfffea80c>
   2aad8:	008007c4 	movi	r2,31
   2aadc:	11003c16 	blt	r2,r4,2abd0 <__adddf3+0x5e4>
   2aae0:	00800804 	movi	r2,32
   2aae4:	1105c83a 	sub	r2,r2,r4
   2aae8:	488e983a 	sll	r7,r9,r2
   2aaec:	310ad83a 	srl	r5,r6,r4
   2aaf0:	3084983a 	sll	r2,r6,r2
   2aaf4:	4912d83a 	srl	r9,r9,r4
   2aaf8:	394ab03a 	or	r5,r7,r5
   2aafc:	1004c03a 	cmpne	r2,r2,zero
   2ab00:	288ab03a 	or	r5,r5,r2
   2ab04:	003f5306 	br	2a854 <__alt_data_end+0xfffea854>
   2ab08:	4448b03a 	or	r4,r8,r17
   2ab0c:	20003e26 	beq	r4,zero,2ac08 <__adddf3+0x61c>
   2ab10:	00c6303a 	nor	r3,zero,r3
   2ab14:	18003a1e 	bne	r3,zero,2ac00 <__adddf3+0x614>
   2ab18:	3463c83a 	sub	r17,r6,r17
   2ab1c:	4a07c83a 	sub	r3,r9,r8
   2ab20:	344d803a 	cmpltu	r6,r6,r17
   2ab24:	1991c83a 	sub	r8,r3,r6
   2ab28:	1021883a 	mov	r16,r2
   2ab2c:	3825883a 	mov	r18,r7
   2ab30:	003f0a06 	br	2a75c <__alt_data_end+0xfffea75c>
   2ab34:	2023883a 	mov	r17,r4
   2ab38:	003f0d06 	br	2a770 <__alt_data_end+0xfffea770>
   2ab3c:	0081ffc4 	movi	r2,2047
   2ab40:	80bf3f1e 	bne	r16,r2,2a840 <__alt_data_end+0xfffea840>
   2ab44:	003ec806 	br	2a668 <__alt_data_end+0xfffea668>
   2ab48:	0005883a 	mov	r2,zero
   2ab4c:	003fb106 	br	2aa14 <__alt_data_end+0xfffeaa14>
   2ab50:	0007883a 	mov	r3,zero
   2ab54:	003fbc06 	br	2aa48 <__alt_data_end+0xfffeaa48>
   2ab58:	4444b03a 	or	r2,r8,r17
   2ab5c:	8000871e 	bne	r16,zero,2ad7c <__adddf3+0x790>
   2ab60:	1000ba26 	beq	r2,zero,2ae4c <__adddf3+0x860>
   2ab64:	4984b03a 	or	r2,r9,r6
   2ab68:	103ebf26 	beq	r2,zero,2a668 <__alt_data_end+0xfffea668>
   2ab6c:	8985883a 	add	r2,r17,r6
   2ab70:	4247883a 	add	r3,r8,r9
   2ab74:	1451803a 	cmpltu	r8,r2,r17
   2ab78:	40d1883a 	add	r8,r8,r3
   2ab7c:	40c0202c 	andhi	r3,r8,128
   2ab80:	1023883a 	mov	r17,r2
   2ab84:	183f1a26 	beq	r3,zero,2a7f0 <__alt_data_end+0xfffea7f0>
   2ab88:	00bfe034 	movhi	r2,65408
   2ab8c:	10bfffc4 	addi	r2,r2,-1
   2ab90:	2021883a 	mov	r16,r4
   2ab94:	4090703a 	and	r8,r8,r2
   2ab98:	003eb306 	br	2a668 <__alt_data_end+0xfffea668>
   2ab9c:	4444b03a 	or	r2,r8,r17
   2aba0:	8000291e 	bne	r16,zero,2ac48 <__adddf3+0x65c>
   2aba4:	10004b1e 	bne	r2,zero,2acd4 <__adddf3+0x6e8>
   2aba8:	4990b03a 	or	r8,r9,r6
   2abac:	40008b26 	beq	r8,zero,2addc <__adddf3+0x7f0>
   2abb0:	4811883a 	mov	r8,r9
   2abb4:	3023883a 	mov	r17,r6
   2abb8:	3825883a 	mov	r18,r7
   2abbc:	003eaa06 	br	2a668 <__alt_data_end+0xfffea668>
   2abc0:	1021883a 	mov	r16,r2
   2abc4:	0011883a 	mov	r8,zero
   2abc8:	0005883a 	mov	r2,zero
   2abcc:	003f0f06 	br	2a80c <__alt_data_end+0xfffea80c>
   2abd0:	217ff804 	addi	r5,r4,-32
   2abd4:	00800804 	movi	r2,32
   2abd8:	494ad83a 	srl	r5,r9,r5
   2abdc:	20807d26 	beq	r4,r2,2add4 <__adddf3+0x7e8>
   2abe0:	00801004 	movi	r2,64
   2abe4:	1109c83a 	sub	r4,r2,r4
   2abe8:	4912983a 	sll	r9,r9,r4
   2abec:	498cb03a 	or	r6,r9,r6
   2abf0:	300cc03a 	cmpne	r6,r6,zero
   2abf4:	298ab03a 	or	r5,r5,r6
   2abf8:	0013883a 	mov	r9,zero
   2abfc:	003f1506 	br	2a854 <__alt_data_end+0xfffea854>
   2ac00:	0101ffc4 	movi	r4,2047
   2ac04:	113f9a1e 	bne	r2,r4,2aa70 <__alt_data_end+0xfffeaa70>
   2ac08:	4811883a 	mov	r8,r9
   2ac0c:	3023883a 	mov	r17,r6
   2ac10:	1021883a 	mov	r16,r2
   2ac14:	3825883a 	mov	r18,r7
   2ac18:	003e9306 	br	2a668 <__alt_data_end+0xfffea668>
   2ac1c:	8000161e 	bne	r16,zero,2ac78 <__adddf3+0x68c>
   2ac20:	444ab03a 	or	r5,r8,r17
   2ac24:	28005126 	beq	r5,zero,2ad6c <__adddf3+0x780>
   2ac28:	0108303a 	nor	r4,zero,r4
   2ac2c:	20004d1e 	bne	r4,zero,2ad64 <__adddf3+0x778>
   2ac30:	89a3883a 	add	r17,r17,r6
   2ac34:	4253883a 	add	r9,r8,r9
   2ac38:	898d803a 	cmpltu	r6,r17,r6
   2ac3c:	3251883a 	add	r8,r6,r9
   2ac40:	1021883a 	mov	r16,r2
   2ac44:	003f0806 	br	2a868 <__alt_data_end+0xfffea868>
   2ac48:	1000301e 	bne	r2,zero,2ad0c <__adddf3+0x720>
   2ac4c:	4984b03a 	or	r2,r9,r6
   2ac50:	10007126 	beq	r2,zero,2ae18 <__adddf3+0x82c>
   2ac54:	4811883a 	mov	r8,r9
   2ac58:	3023883a 	mov	r17,r6
   2ac5c:	3825883a 	mov	r18,r7
   2ac60:	0401ffc4 	movi	r16,2047
   2ac64:	003e8006 	br	2a668 <__alt_data_end+0xfffea668>
   2ac68:	4462b03a 	or	r17,r8,r17
   2ac6c:	8822c03a 	cmpne	r17,r17,zero
   2ac70:	0007883a 	mov	r3,zero
   2ac74:	003f8b06 	br	2aaa4 <__alt_data_end+0xfffeaaa4>
   2ac78:	0141ffc4 	movi	r5,2047
   2ac7c:	11403b26 	beq	r2,r5,2ad6c <__adddf3+0x780>
   2ac80:	0109c83a 	sub	r4,zero,r4
   2ac84:	42002034 	orhi	r8,r8,128
   2ac88:	01400e04 	movi	r5,56
   2ac8c:	29006716 	blt	r5,r4,2ae2c <__adddf3+0x840>
   2ac90:	014007c4 	movi	r5,31
   2ac94:	29007016 	blt	r5,r4,2ae58 <__adddf3+0x86c>
   2ac98:	01400804 	movi	r5,32
   2ac9c:	290bc83a 	sub	r5,r5,r4
   2aca0:	4154983a 	sll	r10,r8,r5
   2aca4:	890ed83a 	srl	r7,r17,r4
   2aca8:	894a983a 	sll	r5,r17,r5
   2acac:	4108d83a 	srl	r4,r8,r4
   2acb0:	51e2b03a 	or	r17,r10,r7
   2acb4:	280ac03a 	cmpne	r5,r5,zero
   2acb8:	8962b03a 	or	r17,r17,r5
   2acbc:	89a3883a 	add	r17,r17,r6
   2acc0:	2253883a 	add	r9,r4,r9
   2acc4:	898d803a 	cmpltu	r6,r17,r6
   2acc8:	3251883a 	add	r8,r6,r9
   2accc:	1021883a 	mov	r16,r2
   2acd0:	003ee506 	br	2a868 <__alt_data_end+0xfffea868>
   2acd4:	4984b03a 	or	r2,r9,r6
   2acd8:	103e6326 	beq	r2,zero,2a668 <__alt_data_end+0xfffea668>
   2acdc:	8987c83a 	sub	r3,r17,r6
   2ace0:	88c9803a 	cmpltu	r4,r17,r3
   2ace4:	4245c83a 	sub	r2,r8,r9
   2ace8:	1105c83a 	sub	r2,r2,r4
   2acec:	1100202c 	andhi	r4,r2,128
   2acf0:	203ebb26 	beq	r4,zero,2a7e0 <__alt_data_end+0xfffea7e0>
   2acf4:	3463c83a 	sub	r17,r6,r17
   2acf8:	4a07c83a 	sub	r3,r9,r8
   2acfc:	344d803a 	cmpltu	r6,r6,r17
   2ad00:	1991c83a 	sub	r8,r3,r6
   2ad04:	3825883a 	mov	r18,r7
   2ad08:	003e5706 	br	2a668 <__alt_data_end+0xfffea668>
   2ad0c:	4984b03a 	or	r2,r9,r6
   2ad10:	10002e26 	beq	r2,zero,2adcc <__adddf3+0x7e0>
   2ad14:	4004d0fa 	srli	r2,r8,3
   2ad18:	8822d0fa 	srli	r17,r17,3
   2ad1c:	4010977a 	slli	r8,r8,29
   2ad20:	10c0022c 	andhi	r3,r2,8
   2ad24:	4462b03a 	or	r17,r8,r17
   2ad28:	18000826 	beq	r3,zero,2ad4c <__adddf3+0x760>
   2ad2c:	4808d0fa 	srli	r4,r9,3
   2ad30:	20c0022c 	andhi	r3,r4,8
   2ad34:	1800051e 	bne	r3,zero,2ad4c <__adddf3+0x760>
   2ad38:	300cd0fa 	srli	r6,r6,3
   2ad3c:	4806977a 	slli	r3,r9,29
   2ad40:	2005883a 	mov	r2,r4
   2ad44:	3825883a 	mov	r18,r7
   2ad48:	19a2b03a 	or	r17,r3,r6
   2ad4c:	8810d77a 	srli	r8,r17,29
   2ad50:	100490fa 	slli	r2,r2,3
   2ad54:	882290fa 	slli	r17,r17,3
   2ad58:	0401ffc4 	movi	r16,2047
   2ad5c:	4090b03a 	or	r8,r8,r2
   2ad60:	003e4106 	br	2a668 <__alt_data_end+0xfffea668>
   2ad64:	0141ffc4 	movi	r5,2047
   2ad68:	117fc71e 	bne	r2,r5,2ac88 <__alt_data_end+0xfffeac88>
   2ad6c:	4811883a 	mov	r8,r9
   2ad70:	3023883a 	mov	r17,r6
   2ad74:	1021883a 	mov	r16,r2
   2ad78:	003e3b06 	br	2a668 <__alt_data_end+0xfffea668>
   2ad7c:	10002f26 	beq	r2,zero,2ae3c <__adddf3+0x850>
   2ad80:	4984b03a 	or	r2,r9,r6
   2ad84:	10001126 	beq	r2,zero,2adcc <__adddf3+0x7e0>
   2ad88:	4004d0fa 	srli	r2,r8,3
   2ad8c:	8822d0fa 	srli	r17,r17,3
   2ad90:	4010977a 	slli	r8,r8,29
   2ad94:	10c0022c 	andhi	r3,r2,8
   2ad98:	4462b03a 	or	r17,r8,r17
   2ad9c:	183feb26 	beq	r3,zero,2ad4c <__alt_data_end+0xfffead4c>
   2ada0:	4808d0fa 	srli	r4,r9,3
   2ada4:	20c0022c 	andhi	r3,r4,8
   2ada8:	183fe81e 	bne	r3,zero,2ad4c <__alt_data_end+0xfffead4c>
   2adac:	300cd0fa 	srli	r6,r6,3
   2adb0:	4806977a 	slli	r3,r9,29
   2adb4:	2005883a 	mov	r2,r4
   2adb8:	19a2b03a 	or	r17,r3,r6
   2adbc:	003fe306 	br	2ad4c <__alt_data_end+0xfffead4c>
   2adc0:	0011883a 	mov	r8,zero
   2adc4:	0005883a 	mov	r2,zero
   2adc8:	003e3f06 	br	2a6c8 <__alt_data_end+0xfffea6c8>
   2adcc:	0401ffc4 	movi	r16,2047
   2add0:	003e2506 	br	2a668 <__alt_data_end+0xfffea668>
   2add4:	0013883a 	mov	r9,zero
   2add8:	003f8406 	br	2abec <__alt_data_end+0xfffeabec>
   2addc:	0005883a 	mov	r2,zero
   2ade0:	0007883a 	mov	r3,zero
   2ade4:	003e8906 	br	2a80c <__alt_data_end+0xfffea80c>
   2ade8:	197ff804 	addi	r5,r3,-32
   2adec:	01000804 	movi	r4,32
   2adf0:	414ad83a 	srl	r5,r8,r5
   2adf4:	19002426 	beq	r3,r4,2ae88 <__adddf3+0x89c>
   2adf8:	01001004 	movi	r4,64
   2adfc:	20c7c83a 	sub	r3,r4,r3
   2ae00:	40c6983a 	sll	r3,r8,r3
   2ae04:	1c46b03a 	or	r3,r3,r17
   2ae08:	1806c03a 	cmpne	r3,r3,zero
   2ae0c:	28e2b03a 	or	r17,r5,r3
   2ae10:	0007883a 	mov	r3,zero
   2ae14:	003f2306 	br	2aaa4 <__alt_data_end+0xfffeaaa4>
   2ae18:	0007883a 	mov	r3,zero
   2ae1c:	5811883a 	mov	r8,r11
   2ae20:	00bfffc4 	movi	r2,-1
   2ae24:	0401ffc4 	movi	r16,2047
   2ae28:	003e7806 	br	2a80c <__alt_data_end+0xfffea80c>
   2ae2c:	4462b03a 	or	r17,r8,r17
   2ae30:	8822c03a 	cmpne	r17,r17,zero
   2ae34:	0009883a 	mov	r4,zero
   2ae38:	003fa006 	br	2acbc <__alt_data_end+0xfffeacbc>
   2ae3c:	4811883a 	mov	r8,r9
   2ae40:	3023883a 	mov	r17,r6
   2ae44:	0401ffc4 	movi	r16,2047
   2ae48:	003e0706 	br	2a668 <__alt_data_end+0xfffea668>
   2ae4c:	4811883a 	mov	r8,r9
   2ae50:	3023883a 	mov	r17,r6
   2ae54:	003e0406 	br	2a668 <__alt_data_end+0xfffea668>
   2ae58:	21fff804 	addi	r7,r4,-32
   2ae5c:	01400804 	movi	r5,32
   2ae60:	41ced83a 	srl	r7,r8,r7
   2ae64:	21400a26 	beq	r4,r5,2ae90 <__adddf3+0x8a4>
   2ae68:	01401004 	movi	r5,64
   2ae6c:	2909c83a 	sub	r4,r5,r4
   2ae70:	4108983a 	sll	r4,r8,r4
   2ae74:	2448b03a 	or	r4,r4,r17
   2ae78:	2008c03a 	cmpne	r4,r4,zero
   2ae7c:	3922b03a 	or	r17,r7,r4
   2ae80:	0009883a 	mov	r4,zero
   2ae84:	003f8d06 	br	2acbc <__alt_data_end+0xfffeacbc>
   2ae88:	0007883a 	mov	r3,zero
   2ae8c:	003fdd06 	br	2ae04 <__alt_data_end+0xfffeae04>
   2ae90:	0009883a 	mov	r4,zero
   2ae94:	003ff706 	br	2ae74 <__alt_data_end+0xfffeae74>

0002ae98 <__divdf3>:
   2ae98:	defff204 	addi	sp,sp,-56
   2ae9c:	dd400915 	stw	r21,36(sp)
   2aea0:	282ad53a 	srli	r21,r5,20
   2aea4:	dd000815 	stw	r20,32(sp)
   2aea8:	2828d7fa 	srli	r20,r5,31
   2aeac:	dc000415 	stw	r16,16(sp)
   2aeb0:	04000434 	movhi	r16,16
   2aeb4:	df000c15 	stw	fp,48(sp)
   2aeb8:	843fffc4 	addi	r16,r16,-1
   2aebc:	dfc00d15 	stw	ra,52(sp)
   2aec0:	ddc00b15 	stw	r23,44(sp)
   2aec4:	dd800a15 	stw	r22,40(sp)
   2aec8:	dcc00715 	stw	r19,28(sp)
   2aecc:	dc800615 	stw	r18,24(sp)
   2aed0:	dc400515 	stw	r17,20(sp)
   2aed4:	ad41ffcc 	andi	r21,r21,2047
   2aed8:	2c20703a 	and	r16,r5,r16
   2aedc:	a7003fcc 	andi	fp,r20,255
   2aee0:	a8006126 	beq	r21,zero,2b068 <__divdf3+0x1d0>
   2aee4:	0081ffc4 	movi	r2,2047
   2aee8:	2025883a 	mov	r18,r4
   2aeec:	a8803726 	beq	r21,r2,2afcc <__divdf3+0x134>
   2aef0:	80c00434 	orhi	r3,r16,16
   2aef4:	180690fa 	slli	r3,r3,3
   2aef8:	2020d77a 	srli	r16,r4,29
   2aefc:	202490fa 	slli	r18,r4,3
   2af00:	ad7f0044 	addi	r21,r21,-1023
   2af04:	80e0b03a 	or	r16,r16,r3
   2af08:	0027883a 	mov	r19,zero
   2af0c:	0013883a 	mov	r9,zero
   2af10:	3808d53a 	srli	r4,r7,20
   2af14:	382cd7fa 	srli	r22,r7,31
   2af18:	04400434 	movhi	r17,16
   2af1c:	8c7fffc4 	addi	r17,r17,-1
   2af20:	2101ffcc 	andi	r4,r4,2047
   2af24:	3011883a 	mov	r8,r6
   2af28:	3c62703a 	and	r17,r7,r17
   2af2c:	b5c03fcc 	andi	r23,r22,255
   2af30:	20006c26 	beq	r4,zero,2b0e4 <__divdf3+0x24c>
   2af34:	0081ffc4 	movi	r2,2047
   2af38:	20806426 	beq	r4,r2,2b0cc <__divdf3+0x234>
   2af3c:	88c00434 	orhi	r3,r17,16
   2af40:	180690fa 	slli	r3,r3,3
   2af44:	3022d77a 	srli	r17,r6,29
   2af48:	301090fa 	slli	r8,r6,3
   2af4c:	213f0044 	addi	r4,r4,-1023
   2af50:	88e2b03a 	or	r17,r17,r3
   2af54:	000d883a 	mov	r6,zero
   2af58:	a584f03a 	xor	r2,r20,r22
   2af5c:	34cab03a 	or	r5,r6,r19
   2af60:	1007883a 	mov	r3,r2
   2af64:	14c03fcc 	andi	r19,r2,255
   2af68:	008003c4 	movi	r2,15
   2af6c:	a92bc83a 	sub	r21,r21,r4
   2af70:	11409036 	bltu	r2,r5,2b1b4 <__divdf3+0x31c>
   2af74:	280a90ba 	slli	r5,r5,2
   2af78:	008000f4 	movhi	r2,3
   2af7c:	10abe304 	addi	r2,r2,-20596
   2af80:	288b883a 	add	r5,r5,r2
   2af84:	28800017 	ldw	r2,0(r5)
   2af88:	1000683a 	jmp	r2
   2af8c:	0002b1b4 	movhi	zero,2758
   2af90:	0002b004 	movi	zero,2752
   2af94:	0002b1a4 	muli	zero,zero,2758
   2af98:	0002aff8 	rdprs	zero,zero,2751
   2af9c:	0002b1a4 	muli	zero,zero,2758
   2afa0:	0002b178 	rdprs	zero,zero,2757
   2afa4:	0002b1a4 	muli	zero,zero,2758
   2afa8:	0002aff8 	rdprs	zero,zero,2751
   2afac:	0002b004 	movi	zero,2752
   2afb0:	0002b004 	movi	zero,2752
   2afb4:	0002b178 	rdprs	zero,zero,2757
   2afb8:	0002aff8 	rdprs	zero,zero,2751
   2afbc:	0002afe8 	cmpgeui	zero,zero,2751
   2afc0:	0002afe8 	cmpgeui	zero,zero,2751
   2afc4:	0002afe8 	cmpgeui	zero,zero,2751
   2afc8:	0002b498 	cmpnei	zero,zero,2770
   2afcc:	2404b03a 	or	r2,r4,r16
   2afd0:	1000661e 	bne	r2,zero,2b16c <__divdf3+0x2d4>
   2afd4:	04c00204 	movi	r19,8
   2afd8:	0021883a 	mov	r16,zero
   2afdc:	0025883a 	mov	r18,zero
   2afe0:	02400084 	movi	r9,2
   2afe4:	003fca06 	br	2af10 <__alt_data_end+0xfffeaf10>
   2afe8:	8023883a 	mov	r17,r16
   2afec:	9011883a 	mov	r8,r18
   2aff0:	e02f883a 	mov	r23,fp
   2aff4:	480d883a 	mov	r6,r9
   2aff8:	00800084 	movi	r2,2
   2affc:	3081311e 	bne	r6,r2,2b4c4 <__divdf3+0x62c>
   2b000:	b827883a 	mov	r19,r23
   2b004:	98c0004c 	andi	r3,r19,1
   2b008:	0081ffc4 	movi	r2,2047
   2b00c:	000b883a 	mov	r5,zero
   2b010:	0025883a 	mov	r18,zero
   2b014:	1004953a 	slli	r2,r2,20
   2b018:	18c03fcc 	andi	r3,r3,255
   2b01c:	04400434 	movhi	r17,16
   2b020:	8c7fffc4 	addi	r17,r17,-1
   2b024:	180697fa 	slli	r3,r3,31
   2b028:	2c4a703a 	and	r5,r5,r17
   2b02c:	288ab03a 	or	r5,r5,r2
   2b030:	28c6b03a 	or	r3,r5,r3
   2b034:	9005883a 	mov	r2,r18
   2b038:	dfc00d17 	ldw	ra,52(sp)
   2b03c:	df000c17 	ldw	fp,48(sp)
   2b040:	ddc00b17 	ldw	r23,44(sp)
   2b044:	dd800a17 	ldw	r22,40(sp)
   2b048:	dd400917 	ldw	r21,36(sp)
   2b04c:	dd000817 	ldw	r20,32(sp)
   2b050:	dcc00717 	ldw	r19,28(sp)
   2b054:	dc800617 	ldw	r18,24(sp)
   2b058:	dc400517 	ldw	r17,20(sp)
   2b05c:	dc000417 	ldw	r16,16(sp)
   2b060:	dec00e04 	addi	sp,sp,56
   2b064:	f800283a 	ret
   2b068:	2404b03a 	or	r2,r4,r16
   2b06c:	2027883a 	mov	r19,r4
   2b070:	10003926 	beq	r2,zero,2b158 <__divdf3+0x2c0>
   2b074:	80012e26 	beq	r16,zero,2b530 <__divdf3+0x698>
   2b078:	8009883a 	mov	r4,r16
   2b07c:	d9800315 	stw	r6,12(sp)
   2b080:	d9c00215 	stw	r7,8(sp)
   2b084:	002cbf00 	call	2cbf0 <__clzsi2>
   2b088:	d9800317 	ldw	r6,12(sp)
   2b08c:	d9c00217 	ldw	r7,8(sp)
   2b090:	10fffd44 	addi	r3,r2,-11
   2b094:	01000704 	movi	r4,28
   2b098:	20c12116 	blt	r4,r3,2b520 <__divdf3+0x688>
   2b09c:	01000744 	movi	r4,29
   2b0a0:	147ffe04 	addi	r17,r2,-8
   2b0a4:	20c9c83a 	sub	r4,r4,r3
   2b0a8:	8460983a 	sll	r16,r16,r17
   2b0ac:	9908d83a 	srl	r4,r19,r4
   2b0b0:	9c64983a 	sll	r18,r19,r17
   2b0b4:	2420b03a 	or	r16,r4,r16
   2b0b8:	057f0084 	movi	r21,-1022
   2b0bc:	a8ebc83a 	sub	r21,r21,r3
   2b0c0:	0027883a 	mov	r19,zero
   2b0c4:	0013883a 	mov	r9,zero
   2b0c8:	003f9106 	br	2af10 <__alt_data_end+0xfffeaf10>
   2b0cc:	3444b03a 	or	r2,r6,r17
   2b0d0:	10001f1e 	bne	r2,zero,2b150 <__divdf3+0x2b8>
   2b0d4:	0023883a 	mov	r17,zero
   2b0d8:	0011883a 	mov	r8,zero
   2b0dc:	01800084 	movi	r6,2
   2b0e0:	003f9d06 	br	2af58 <__alt_data_end+0xfffeaf58>
   2b0e4:	3444b03a 	or	r2,r6,r17
   2b0e8:	10001526 	beq	r2,zero,2b140 <__divdf3+0x2a8>
   2b0ec:	88011b26 	beq	r17,zero,2b55c <__divdf3+0x6c4>
   2b0f0:	8809883a 	mov	r4,r17
   2b0f4:	d9800315 	stw	r6,12(sp)
   2b0f8:	da400115 	stw	r9,4(sp)
   2b0fc:	002cbf00 	call	2cbf0 <__clzsi2>
   2b100:	d9800317 	ldw	r6,12(sp)
   2b104:	da400117 	ldw	r9,4(sp)
   2b108:	10fffd44 	addi	r3,r2,-11
   2b10c:	01000704 	movi	r4,28
   2b110:	20c10e16 	blt	r4,r3,2b54c <__divdf3+0x6b4>
   2b114:	01000744 	movi	r4,29
   2b118:	123ffe04 	addi	r8,r2,-8
   2b11c:	20c9c83a 	sub	r4,r4,r3
   2b120:	8a22983a 	sll	r17,r17,r8
   2b124:	3108d83a 	srl	r4,r6,r4
   2b128:	3210983a 	sll	r8,r6,r8
   2b12c:	2462b03a 	or	r17,r4,r17
   2b130:	013f0084 	movi	r4,-1022
   2b134:	20c9c83a 	sub	r4,r4,r3
   2b138:	000d883a 	mov	r6,zero
   2b13c:	003f8606 	br	2af58 <__alt_data_end+0xfffeaf58>
   2b140:	0023883a 	mov	r17,zero
   2b144:	0011883a 	mov	r8,zero
   2b148:	01800044 	movi	r6,1
   2b14c:	003f8206 	br	2af58 <__alt_data_end+0xfffeaf58>
   2b150:	018000c4 	movi	r6,3
   2b154:	003f8006 	br	2af58 <__alt_data_end+0xfffeaf58>
   2b158:	04c00104 	movi	r19,4
   2b15c:	0021883a 	mov	r16,zero
   2b160:	0025883a 	mov	r18,zero
   2b164:	02400044 	movi	r9,1
   2b168:	003f6906 	br	2af10 <__alt_data_end+0xfffeaf10>
   2b16c:	04c00304 	movi	r19,12
   2b170:	024000c4 	movi	r9,3
   2b174:	003f6606 	br	2af10 <__alt_data_end+0xfffeaf10>
   2b178:	01400434 	movhi	r5,16
   2b17c:	0007883a 	mov	r3,zero
   2b180:	297fffc4 	addi	r5,r5,-1
   2b184:	04bfffc4 	movi	r18,-1
   2b188:	0081ffc4 	movi	r2,2047
   2b18c:	003fa106 	br	2b014 <__alt_data_end+0xfffeb014>
   2b190:	00c00044 	movi	r3,1
   2b194:	1887c83a 	sub	r3,r3,r2
   2b198:	01000e04 	movi	r4,56
   2b19c:	20c1210e 	bge	r4,r3,2b624 <__divdf3+0x78c>
   2b1a0:	98c0004c 	andi	r3,r19,1
   2b1a4:	0005883a 	mov	r2,zero
   2b1a8:	000b883a 	mov	r5,zero
   2b1ac:	0025883a 	mov	r18,zero
   2b1b0:	003f9806 	br	2b014 <__alt_data_end+0xfffeb014>
   2b1b4:	8c00fd36 	bltu	r17,r16,2b5ac <__divdf3+0x714>
   2b1b8:	8440fb26 	beq	r16,r17,2b5a8 <__divdf3+0x710>
   2b1bc:	8007883a 	mov	r3,r16
   2b1c0:	ad7fffc4 	addi	r21,r21,-1
   2b1c4:	0021883a 	mov	r16,zero
   2b1c8:	400ad63a 	srli	r5,r8,24
   2b1cc:	8822923a 	slli	r17,r17,8
   2b1d0:	1809883a 	mov	r4,r3
   2b1d4:	402c923a 	slli	r22,r8,8
   2b1d8:	8978b03a 	or	fp,r17,r5
   2b1dc:	e028d43a 	srli	r20,fp,16
   2b1e0:	d8c00015 	stw	r3,0(sp)
   2b1e4:	e5ffffcc 	andi	r23,fp,65535
   2b1e8:	a00b883a 	mov	r5,r20
   2b1ec:	002a5300 	call	2a530 <__udivsi3>
   2b1f0:	d8c00017 	ldw	r3,0(sp)
   2b1f4:	a00b883a 	mov	r5,r20
   2b1f8:	d8800315 	stw	r2,12(sp)
   2b1fc:	1809883a 	mov	r4,r3
   2b200:	002a5940 	call	2a594 <__umodsi3>
   2b204:	d9800317 	ldw	r6,12(sp)
   2b208:	1006943a 	slli	r3,r2,16
   2b20c:	9004d43a 	srli	r2,r18,16
   2b210:	b9a3383a 	mul	r17,r23,r6
   2b214:	10c4b03a 	or	r2,r2,r3
   2b218:	1440062e 	bgeu	r2,r17,2b234 <__divdf3+0x39c>
   2b21c:	1705883a 	add	r2,r2,fp
   2b220:	30ffffc4 	addi	r3,r6,-1
   2b224:	1700ee36 	bltu	r2,fp,2b5e0 <__divdf3+0x748>
   2b228:	1440ed2e 	bgeu	r2,r17,2b5e0 <__divdf3+0x748>
   2b22c:	31bfff84 	addi	r6,r6,-2
   2b230:	1705883a 	add	r2,r2,fp
   2b234:	1463c83a 	sub	r17,r2,r17
   2b238:	a00b883a 	mov	r5,r20
   2b23c:	8809883a 	mov	r4,r17
   2b240:	d9800315 	stw	r6,12(sp)
   2b244:	002a5300 	call	2a530 <__udivsi3>
   2b248:	a00b883a 	mov	r5,r20
   2b24c:	8809883a 	mov	r4,r17
   2b250:	d8800215 	stw	r2,8(sp)
   2b254:	002a5940 	call	2a594 <__umodsi3>
   2b258:	d9c00217 	ldw	r7,8(sp)
   2b25c:	1004943a 	slli	r2,r2,16
   2b260:	94bfffcc 	andi	r18,r18,65535
   2b264:	b9d1383a 	mul	r8,r23,r7
   2b268:	90a4b03a 	or	r18,r18,r2
   2b26c:	d9800317 	ldw	r6,12(sp)
   2b270:	9200062e 	bgeu	r18,r8,2b28c <__divdf3+0x3f4>
   2b274:	9725883a 	add	r18,r18,fp
   2b278:	38bfffc4 	addi	r2,r7,-1
   2b27c:	9700d636 	bltu	r18,fp,2b5d8 <__divdf3+0x740>
   2b280:	9200d52e 	bgeu	r18,r8,2b5d8 <__divdf3+0x740>
   2b284:	39ffff84 	addi	r7,r7,-2
   2b288:	9725883a 	add	r18,r18,fp
   2b28c:	3004943a 	slli	r2,r6,16
   2b290:	b012d43a 	srli	r9,r22,16
   2b294:	b1bfffcc 	andi	r6,r22,65535
   2b298:	11e2b03a 	or	r17,r2,r7
   2b29c:	8806d43a 	srli	r3,r17,16
   2b2a0:	893fffcc 	andi	r4,r17,65535
   2b2a4:	218b383a 	mul	r5,r4,r6
   2b2a8:	30c5383a 	mul	r2,r6,r3
   2b2ac:	2249383a 	mul	r4,r4,r9
   2b2b0:	280ed43a 	srli	r7,r5,16
   2b2b4:	9225c83a 	sub	r18,r18,r8
   2b2b8:	2089883a 	add	r4,r4,r2
   2b2bc:	3909883a 	add	r4,r7,r4
   2b2c0:	1a47383a 	mul	r3,r3,r9
   2b2c4:	2080022e 	bgeu	r4,r2,2b2d0 <__divdf3+0x438>
   2b2c8:	00800074 	movhi	r2,1
   2b2cc:	1887883a 	add	r3,r3,r2
   2b2d0:	2004d43a 	srli	r2,r4,16
   2b2d4:	2008943a 	slli	r4,r4,16
   2b2d8:	297fffcc 	andi	r5,r5,65535
   2b2dc:	10c7883a 	add	r3,r2,r3
   2b2e0:	2149883a 	add	r4,r4,r5
   2b2e4:	90c0a536 	bltu	r18,r3,2b57c <__divdf3+0x6e4>
   2b2e8:	90c0bf26 	beq	r18,r3,2b5e8 <__divdf3+0x750>
   2b2ec:	90c7c83a 	sub	r3,r18,r3
   2b2f0:	810fc83a 	sub	r7,r16,r4
   2b2f4:	81e5803a 	cmpltu	r18,r16,r7
   2b2f8:	1ca5c83a 	sub	r18,r3,r18
   2b2fc:	e480c126 	beq	fp,r18,2b604 <__divdf3+0x76c>
   2b300:	a00b883a 	mov	r5,r20
   2b304:	9009883a 	mov	r4,r18
   2b308:	d9800315 	stw	r6,12(sp)
   2b30c:	d9c00215 	stw	r7,8(sp)
   2b310:	da400115 	stw	r9,4(sp)
   2b314:	002a5300 	call	2a530 <__udivsi3>
   2b318:	a00b883a 	mov	r5,r20
   2b31c:	9009883a 	mov	r4,r18
   2b320:	d8800015 	stw	r2,0(sp)
   2b324:	002a5940 	call	2a594 <__umodsi3>
   2b328:	d9c00217 	ldw	r7,8(sp)
   2b32c:	da000017 	ldw	r8,0(sp)
   2b330:	1006943a 	slli	r3,r2,16
   2b334:	3804d43a 	srli	r2,r7,16
   2b338:	ba21383a 	mul	r16,r23,r8
   2b33c:	d9800317 	ldw	r6,12(sp)
   2b340:	10c4b03a 	or	r2,r2,r3
   2b344:	da400117 	ldw	r9,4(sp)
   2b348:	1400062e 	bgeu	r2,r16,2b364 <__divdf3+0x4cc>
   2b34c:	1705883a 	add	r2,r2,fp
   2b350:	40ffffc4 	addi	r3,r8,-1
   2b354:	1700ad36 	bltu	r2,fp,2b60c <__divdf3+0x774>
   2b358:	1400ac2e 	bgeu	r2,r16,2b60c <__divdf3+0x774>
   2b35c:	423fff84 	addi	r8,r8,-2
   2b360:	1705883a 	add	r2,r2,fp
   2b364:	1421c83a 	sub	r16,r2,r16
   2b368:	a00b883a 	mov	r5,r20
   2b36c:	8009883a 	mov	r4,r16
   2b370:	d9800315 	stw	r6,12(sp)
   2b374:	d9c00215 	stw	r7,8(sp)
   2b378:	da000015 	stw	r8,0(sp)
   2b37c:	da400115 	stw	r9,4(sp)
   2b380:	002a5300 	call	2a530 <__udivsi3>
   2b384:	8009883a 	mov	r4,r16
   2b388:	a00b883a 	mov	r5,r20
   2b38c:	1025883a 	mov	r18,r2
   2b390:	002a5940 	call	2a594 <__umodsi3>
   2b394:	d9c00217 	ldw	r7,8(sp)
   2b398:	1004943a 	slli	r2,r2,16
   2b39c:	bcaf383a 	mul	r23,r23,r18
   2b3a0:	393fffcc 	andi	r4,r7,65535
   2b3a4:	2088b03a 	or	r4,r4,r2
   2b3a8:	d9800317 	ldw	r6,12(sp)
   2b3ac:	da000017 	ldw	r8,0(sp)
   2b3b0:	da400117 	ldw	r9,4(sp)
   2b3b4:	25c0062e 	bgeu	r4,r23,2b3d0 <__divdf3+0x538>
   2b3b8:	2709883a 	add	r4,r4,fp
   2b3bc:	90bfffc4 	addi	r2,r18,-1
   2b3c0:	27009436 	bltu	r4,fp,2b614 <__divdf3+0x77c>
   2b3c4:	25c0932e 	bgeu	r4,r23,2b614 <__divdf3+0x77c>
   2b3c8:	94bfff84 	addi	r18,r18,-2
   2b3cc:	2709883a 	add	r4,r4,fp
   2b3d0:	4004943a 	slli	r2,r8,16
   2b3d4:	25efc83a 	sub	r23,r4,r23
   2b3d8:	1490b03a 	or	r8,r2,r18
   2b3dc:	4008d43a 	srli	r4,r8,16
   2b3e0:	40ffffcc 	andi	r3,r8,65535
   2b3e4:	30c5383a 	mul	r2,r6,r3
   2b3e8:	1a47383a 	mul	r3,r3,r9
   2b3ec:	310d383a 	mul	r6,r6,r4
   2b3f0:	100ad43a 	srli	r5,r2,16
   2b3f4:	4913383a 	mul	r9,r9,r4
   2b3f8:	1987883a 	add	r3,r3,r6
   2b3fc:	28c7883a 	add	r3,r5,r3
   2b400:	1980022e 	bgeu	r3,r6,2b40c <__divdf3+0x574>
   2b404:	01000074 	movhi	r4,1
   2b408:	4913883a 	add	r9,r9,r4
   2b40c:	1808d43a 	srli	r4,r3,16
   2b410:	1806943a 	slli	r3,r3,16
   2b414:	10bfffcc 	andi	r2,r2,65535
   2b418:	2253883a 	add	r9,r4,r9
   2b41c:	1887883a 	add	r3,r3,r2
   2b420:	ba403836 	bltu	r23,r9,2b504 <__divdf3+0x66c>
   2b424:	ba403626 	beq	r23,r9,2b500 <__divdf3+0x668>
   2b428:	42000054 	ori	r8,r8,1
   2b42c:	a880ffc4 	addi	r2,r21,1023
   2b430:	00bf570e 	bge	zero,r2,2b190 <__alt_data_end+0xfffeb190>
   2b434:	40c001cc 	andi	r3,r8,7
   2b438:	18000726 	beq	r3,zero,2b458 <__divdf3+0x5c0>
   2b43c:	40c003cc 	andi	r3,r8,15
   2b440:	01000104 	movi	r4,4
   2b444:	19000426 	beq	r3,r4,2b458 <__divdf3+0x5c0>
   2b448:	4107883a 	add	r3,r8,r4
   2b44c:	1a11803a 	cmpltu	r8,r3,r8
   2b450:	8a23883a 	add	r17,r17,r8
   2b454:	1811883a 	mov	r8,r3
   2b458:	88c0402c 	andhi	r3,r17,256
   2b45c:	18000426 	beq	r3,zero,2b470 <__divdf3+0x5d8>
   2b460:	00ffc034 	movhi	r3,65280
   2b464:	18ffffc4 	addi	r3,r3,-1
   2b468:	a8810004 	addi	r2,r21,1024
   2b46c:	88e2703a 	and	r17,r17,r3
   2b470:	00c1ff84 	movi	r3,2046
   2b474:	18bee316 	blt	r3,r2,2b004 <__alt_data_end+0xfffeb004>
   2b478:	8824977a 	slli	r18,r17,29
   2b47c:	4010d0fa 	srli	r8,r8,3
   2b480:	8822927a 	slli	r17,r17,9
   2b484:	1081ffcc 	andi	r2,r2,2047
   2b488:	9224b03a 	or	r18,r18,r8
   2b48c:	880ad33a 	srli	r5,r17,12
   2b490:	98c0004c 	andi	r3,r19,1
   2b494:	003edf06 	br	2b014 <__alt_data_end+0xfffeb014>
   2b498:	8080022c 	andhi	r2,r16,8
   2b49c:	10001226 	beq	r2,zero,2b4e8 <__divdf3+0x650>
   2b4a0:	8880022c 	andhi	r2,r17,8
   2b4a4:	1000101e 	bne	r2,zero,2b4e8 <__divdf3+0x650>
   2b4a8:	00800434 	movhi	r2,16
   2b4ac:	89400234 	orhi	r5,r17,8
   2b4b0:	10bfffc4 	addi	r2,r2,-1
   2b4b4:	b007883a 	mov	r3,r22
   2b4b8:	288a703a 	and	r5,r5,r2
   2b4bc:	4025883a 	mov	r18,r8
   2b4c0:	003f3106 	br	2b188 <__alt_data_end+0xfffeb188>
   2b4c4:	008000c4 	movi	r2,3
   2b4c8:	3080a626 	beq	r6,r2,2b764 <__divdf3+0x8cc>
   2b4cc:	00800044 	movi	r2,1
   2b4d0:	3080521e 	bne	r6,r2,2b61c <__divdf3+0x784>
   2b4d4:	b807883a 	mov	r3,r23
   2b4d8:	0005883a 	mov	r2,zero
   2b4dc:	000b883a 	mov	r5,zero
   2b4e0:	0025883a 	mov	r18,zero
   2b4e4:	003ecb06 	br	2b014 <__alt_data_end+0xfffeb014>
   2b4e8:	00800434 	movhi	r2,16
   2b4ec:	81400234 	orhi	r5,r16,8
   2b4f0:	10bfffc4 	addi	r2,r2,-1
   2b4f4:	a007883a 	mov	r3,r20
   2b4f8:	288a703a 	and	r5,r5,r2
   2b4fc:	003f2206 	br	2b188 <__alt_data_end+0xfffeb188>
   2b500:	183fca26 	beq	r3,zero,2b42c <__alt_data_end+0xfffeb42c>
   2b504:	e5ef883a 	add	r23,fp,r23
   2b508:	40bfffc4 	addi	r2,r8,-1
   2b50c:	bf00392e 	bgeu	r23,fp,2b5f4 <__divdf3+0x75c>
   2b510:	1011883a 	mov	r8,r2
   2b514:	ba7fc41e 	bne	r23,r9,2b428 <__alt_data_end+0xfffeb428>
   2b518:	b0ffc31e 	bne	r22,r3,2b428 <__alt_data_end+0xfffeb428>
   2b51c:	003fc306 	br	2b42c <__alt_data_end+0xfffeb42c>
   2b520:	10bff604 	addi	r2,r2,-40
   2b524:	98a0983a 	sll	r16,r19,r2
   2b528:	0025883a 	mov	r18,zero
   2b52c:	003ee206 	br	2b0b8 <__alt_data_end+0xfffeb0b8>
   2b530:	d9800315 	stw	r6,12(sp)
   2b534:	d9c00215 	stw	r7,8(sp)
   2b538:	002cbf00 	call	2cbf0 <__clzsi2>
   2b53c:	10800804 	addi	r2,r2,32
   2b540:	d9c00217 	ldw	r7,8(sp)
   2b544:	d9800317 	ldw	r6,12(sp)
   2b548:	003ed106 	br	2b090 <__alt_data_end+0xfffeb090>
   2b54c:	10bff604 	addi	r2,r2,-40
   2b550:	30a2983a 	sll	r17,r6,r2
   2b554:	0011883a 	mov	r8,zero
   2b558:	003ef506 	br	2b130 <__alt_data_end+0xfffeb130>
   2b55c:	3009883a 	mov	r4,r6
   2b560:	d9800315 	stw	r6,12(sp)
   2b564:	da400115 	stw	r9,4(sp)
   2b568:	002cbf00 	call	2cbf0 <__clzsi2>
   2b56c:	10800804 	addi	r2,r2,32
   2b570:	da400117 	ldw	r9,4(sp)
   2b574:	d9800317 	ldw	r6,12(sp)
   2b578:	003ee306 	br	2b108 <__alt_data_end+0xfffeb108>
   2b57c:	85a1883a 	add	r16,r16,r22
   2b580:	8585803a 	cmpltu	r2,r16,r22
   2b584:	1705883a 	add	r2,r2,fp
   2b588:	14a5883a 	add	r18,r2,r18
   2b58c:	88bfffc4 	addi	r2,r17,-1
   2b590:	e4800c2e 	bgeu	fp,r18,2b5c4 <__divdf3+0x72c>
   2b594:	90c03e36 	bltu	r18,r3,2b690 <__divdf3+0x7f8>
   2b598:	1c806926 	beq	r3,r18,2b740 <__divdf3+0x8a8>
   2b59c:	90c7c83a 	sub	r3,r18,r3
   2b5a0:	1023883a 	mov	r17,r2
   2b5a4:	003f5206 	br	2b2f0 <__alt_data_end+0xfffeb2f0>
   2b5a8:	923f0436 	bltu	r18,r8,2b1bc <__alt_data_end+0xfffeb1bc>
   2b5ac:	800897fa 	slli	r4,r16,31
   2b5b0:	9004d07a 	srli	r2,r18,1
   2b5b4:	8006d07a 	srli	r3,r16,1
   2b5b8:	902097fa 	slli	r16,r18,31
   2b5bc:	20a4b03a 	or	r18,r4,r2
   2b5c0:	003f0106 	br	2b1c8 <__alt_data_end+0xfffeb1c8>
   2b5c4:	e4bff51e 	bne	fp,r18,2b59c <__alt_data_end+0xfffeb59c>
   2b5c8:	85bff22e 	bgeu	r16,r22,2b594 <__alt_data_end+0xfffeb594>
   2b5cc:	e0c7c83a 	sub	r3,fp,r3
   2b5d0:	1023883a 	mov	r17,r2
   2b5d4:	003f4606 	br	2b2f0 <__alt_data_end+0xfffeb2f0>
   2b5d8:	100f883a 	mov	r7,r2
   2b5dc:	003f2b06 	br	2b28c <__alt_data_end+0xfffeb28c>
   2b5e0:	180d883a 	mov	r6,r3
   2b5e4:	003f1306 	br	2b234 <__alt_data_end+0xfffeb234>
   2b5e8:	813fe436 	bltu	r16,r4,2b57c <__alt_data_end+0xfffeb57c>
   2b5ec:	0007883a 	mov	r3,zero
   2b5f0:	003f3f06 	br	2b2f0 <__alt_data_end+0xfffeb2f0>
   2b5f4:	ba402c36 	bltu	r23,r9,2b6a8 <__divdf3+0x810>
   2b5f8:	4dc05426 	beq	r9,r23,2b74c <__divdf3+0x8b4>
   2b5fc:	1011883a 	mov	r8,r2
   2b600:	003f8906 	br	2b428 <__alt_data_end+0xfffeb428>
   2b604:	023fffc4 	movi	r8,-1
   2b608:	003f8806 	br	2b42c <__alt_data_end+0xfffeb42c>
   2b60c:	1811883a 	mov	r8,r3
   2b610:	003f5406 	br	2b364 <__alt_data_end+0xfffeb364>
   2b614:	1025883a 	mov	r18,r2
   2b618:	003f6d06 	br	2b3d0 <__alt_data_end+0xfffeb3d0>
   2b61c:	b827883a 	mov	r19,r23
   2b620:	003f8206 	br	2b42c <__alt_data_end+0xfffeb42c>
   2b624:	010007c4 	movi	r4,31
   2b628:	20c02616 	blt	r4,r3,2b6c4 <__divdf3+0x82c>
   2b62c:	00800804 	movi	r2,32
   2b630:	10c5c83a 	sub	r2,r2,r3
   2b634:	888a983a 	sll	r5,r17,r2
   2b638:	40c8d83a 	srl	r4,r8,r3
   2b63c:	4084983a 	sll	r2,r8,r2
   2b640:	88e2d83a 	srl	r17,r17,r3
   2b644:	2906b03a 	or	r3,r5,r4
   2b648:	1004c03a 	cmpne	r2,r2,zero
   2b64c:	1886b03a 	or	r3,r3,r2
   2b650:	188001cc 	andi	r2,r3,7
   2b654:	10000726 	beq	r2,zero,2b674 <__divdf3+0x7dc>
   2b658:	188003cc 	andi	r2,r3,15
   2b65c:	01000104 	movi	r4,4
   2b660:	11000426 	beq	r2,r4,2b674 <__divdf3+0x7dc>
   2b664:	1805883a 	mov	r2,r3
   2b668:	10c00104 	addi	r3,r2,4
   2b66c:	1885803a 	cmpltu	r2,r3,r2
   2b670:	88a3883a 	add	r17,r17,r2
   2b674:	8880202c 	andhi	r2,r17,128
   2b678:	10002726 	beq	r2,zero,2b718 <__divdf3+0x880>
   2b67c:	98c0004c 	andi	r3,r19,1
   2b680:	00800044 	movi	r2,1
   2b684:	000b883a 	mov	r5,zero
   2b688:	0025883a 	mov	r18,zero
   2b68c:	003e6106 	br	2b014 <__alt_data_end+0xfffeb014>
   2b690:	85a1883a 	add	r16,r16,r22
   2b694:	8585803a 	cmpltu	r2,r16,r22
   2b698:	1705883a 	add	r2,r2,fp
   2b69c:	14a5883a 	add	r18,r2,r18
   2b6a0:	8c7fff84 	addi	r17,r17,-2
   2b6a4:	003f1106 	br	2b2ec <__alt_data_end+0xfffeb2ec>
   2b6a8:	b589883a 	add	r4,r22,r22
   2b6ac:	25ad803a 	cmpltu	r22,r4,r22
   2b6b0:	b739883a 	add	fp,r22,fp
   2b6b4:	40bfff84 	addi	r2,r8,-2
   2b6b8:	bf2f883a 	add	r23,r23,fp
   2b6bc:	202d883a 	mov	r22,r4
   2b6c0:	003f9306 	br	2b510 <__alt_data_end+0xfffeb510>
   2b6c4:	013ff844 	movi	r4,-31
   2b6c8:	2085c83a 	sub	r2,r4,r2
   2b6cc:	8888d83a 	srl	r4,r17,r2
   2b6d0:	00800804 	movi	r2,32
   2b6d4:	18802126 	beq	r3,r2,2b75c <__divdf3+0x8c4>
   2b6d8:	00801004 	movi	r2,64
   2b6dc:	10c5c83a 	sub	r2,r2,r3
   2b6e0:	8884983a 	sll	r2,r17,r2
   2b6e4:	1204b03a 	or	r2,r2,r8
   2b6e8:	1004c03a 	cmpne	r2,r2,zero
   2b6ec:	2084b03a 	or	r2,r4,r2
   2b6f0:	144001cc 	andi	r17,r2,7
   2b6f4:	88000d1e 	bne	r17,zero,2b72c <__divdf3+0x894>
   2b6f8:	000b883a 	mov	r5,zero
   2b6fc:	1024d0fa 	srli	r18,r2,3
   2b700:	98c0004c 	andi	r3,r19,1
   2b704:	0005883a 	mov	r2,zero
   2b708:	9464b03a 	or	r18,r18,r17
   2b70c:	003e4106 	br	2b014 <__alt_data_end+0xfffeb014>
   2b710:	1007883a 	mov	r3,r2
   2b714:	0023883a 	mov	r17,zero
   2b718:	880a927a 	slli	r5,r17,9
   2b71c:	1805883a 	mov	r2,r3
   2b720:	8822977a 	slli	r17,r17,29
   2b724:	280ad33a 	srli	r5,r5,12
   2b728:	003ff406 	br	2b6fc <__alt_data_end+0xfffeb6fc>
   2b72c:	10c003cc 	andi	r3,r2,15
   2b730:	01000104 	movi	r4,4
   2b734:	193ff626 	beq	r3,r4,2b710 <__alt_data_end+0xfffeb710>
   2b738:	0023883a 	mov	r17,zero
   2b73c:	003fca06 	br	2b668 <__alt_data_end+0xfffeb668>
   2b740:	813fd336 	bltu	r16,r4,2b690 <__alt_data_end+0xfffeb690>
   2b744:	1023883a 	mov	r17,r2
   2b748:	003fa806 	br	2b5ec <__alt_data_end+0xfffeb5ec>
   2b74c:	b0ffd636 	bltu	r22,r3,2b6a8 <__alt_data_end+0xfffeb6a8>
   2b750:	1011883a 	mov	r8,r2
   2b754:	b0ff341e 	bne	r22,r3,2b428 <__alt_data_end+0xfffeb428>
   2b758:	003f3406 	br	2b42c <__alt_data_end+0xfffeb42c>
   2b75c:	0005883a 	mov	r2,zero
   2b760:	003fe006 	br	2b6e4 <__alt_data_end+0xfffeb6e4>
   2b764:	00800434 	movhi	r2,16
   2b768:	89400234 	orhi	r5,r17,8
   2b76c:	10bfffc4 	addi	r2,r2,-1
   2b770:	b807883a 	mov	r3,r23
   2b774:	288a703a 	and	r5,r5,r2
   2b778:	4025883a 	mov	r18,r8
   2b77c:	003e8206 	br	2b188 <__alt_data_end+0xfffeb188>

0002b780 <__eqdf2>:
   2b780:	2804d53a 	srli	r2,r5,20
   2b784:	3806d53a 	srli	r3,r7,20
   2b788:	02000434 	movhi	r8,16
   2b78c:	423fffc4 	addi	r8,r8,-1
   2b790:	1081ffcc 	andi	r2,r2,2047
   2b794:	0281ffc4 	movi	r10,2047
   2b798:	2a12703a 	and	r9,r5,r8
   2b79c:	18c1ffcc 	andi	r3,r3,2047
   2b7a0:	3a10703a 	and	r8,r7,r8
   2b7a4:	280ad7fa 	srli	r5,r5,31
   2b7a8:	380ed7fa 	srli	r7,r7,31
   2b7ac:	12801026 	beq	r2,r10,2b7f0 <__eqdf2+0x70>
   2b7b0:	0281ffc4 	movi	r10,2047
   2b7b4:	1a800a26 	beq	r3,r10,2b7e0 <__eqdf2+0x60>
   2b7b8:	10c00226 	beq	r2,r3,2b7c4 <__eqdf2+0x44>
   2b7bc:	00800044 	movi	r2,1
   2b7c0:	f800283a 	ret
   2b7c4:	4a3ffd1e 	bne	r9,r8,2b7bc <__alt_data_end+0xfffeb7bc>
   2b7c8:	21bffc1e 	bne	r4,r6,2b7bc <__alt_data_end+0xfffeb7bc>
   2b7cc:	29c00c26 	beq	r5,r7,2b800 <__eqdf2+0x80>
   2b7d0:	103ffa1e 	bne	r2,zero,2b7bc <__alt_data_end+0xfffeb7bc>
   2b7d4:	2244b03a 	or	r2,r4,r9
   2b7d8:	1004c03a 	cmpne	r2,r2,zero
   2b7dc:	f800283a 	ret
   2b7e0:	3214b03a 	or	r10,r6,r8
   2b7e4:	503ff426 	beq	r10,zero,2b7b8 <__alt_data_end+0xfffeb7b8>
   2b7e8:	00800044 	movi	r2,1
   2b7ec:	f800283a 	ret
   2b7f0:	2254b03a 	or	r10,r4,r9
   2b7f4:	503fee26 	beq	r10,zero,2b7b0 <__alt_data_end+0xfffeb7b0>
   2b7f8:	00800044 	movi	r2,1
   2b7fc:	f800283a 	ret
   2b800:	0005883a 	mov	r2,zero
   2b804:	f800283a 	ret

0002b808 <__gedf2>:
   2b808:	2804d53a 	srli	r2,r5,20
   2b80c:	3806d53a 	srli	r3,r7,20
   2b810:	02000434 	movhi	r8,16
   2b814:	423fffc4 	addi	r8,r8,-1
   2b818:	1081ffcc 	andi	r2,r2,2047
   2b81c:	0241ffc4 	movi	r9,2047
   2b820:	2a14703a 	and	r10,r5,r8
   2b824:	18c1ffcc 	andi	r3,r3,2047
   2b828:	3a10703a 	and	r8,r7,r8
   2b82c:	280ad7fa 	srli	r5,r5,31
   2b830:	380ed7fa 	srli	r7,r7,31
   2b834:	12401d26 	beq	r2,r9,2b8ac <__gedf2+0xa4>
   2b838:	0241ffc4 	movi	r9,2047
   2b83c:	1a401226 	beq	r3,r9,2b888 <__gedf2+0x80>
   2b840:	1000081e 	bne	r2,zero,2b864 <__gedf2+0x5c>
   2b844:	2296b03a 	or	r11,r4,r10
   2b848:	5813003a 	cmpeq	r9,r11,zero
   2b84c:	1800091e 	bne	r3,zero,2b874 <__gedf2+0x6c>
   2b850:	3218b03a 	or	r12,r6,r8
   2b854:	6000071e 	bne	r12,zero,2b874 <__gedf2+0x6c>
   2b858:	0005883a 	mov	r2,zero
   2b85c:	5800101e 	bne	r11,zero,2b8a0 <__gedf2+0x98>
   2b860:	f800283a 	ret
   2b864:	18000c1e 	bne	r3,zero,2b898 <__gedf2+0x90>
   2b868:	3212b03a 	or	r9,r6,r8
   2b86c:	48000c26 	beq	r9,zero,2b8a0 <__gedf2+0x98>
   2b870:	0013883a 	mov	r9,zero
   2b874:	39c03fcc 	andi	r7,r7,255
   2b878:	48000826 	beq	r9,zero,2b89c <__gedf2+0x94>
   2b87c:	38000926 	beq	r7,zero,2b8a4 <__gedf2+0x9c>
   2b880:	00800044 	movi	r2,1
   2b884:	f800283a 	ret
   2b888:	3212b03a 	or	r9,r6,r8
   2b88c:	483fec26 	beq	r9,zero,2b840 <__alt_data_end+0xfffeb840>
   2b890:	00bfff84 	movi	r2,-2
   2b894:	f800283a 	ret
   2b898:	39c03fcc 	andi	r7,r7,255
   2b89c:	29c00626 	beq	r5,r7,2b8b8 <__gedf2+0xb0>
   2b8a0:	283ff726 	beq	r5,zero,2b880 <__alt_data_end+0xfffeb880>
   2b8a4:	00bfffc4 	movi	r2,-1
   2b8a8:	f800283a 	ret
   2b8ac:	2292b03a 	or	r9,r4,r10
   2b8b0:	483fe126 	beq	r9,zero,2b838 <__alt_data_end+0xfffeb838>
   2b8b4:	003ff606 	br	2b890 <__alt_data_end+0xfffeb890>
   2b8b8:	18bff916 	blt	r3,r2,2b8a0 <__alt_data_end+0xfffeb8a0>
   2b8bc:	10c00316 	blt	r2,r3,2b8cc <__gedf2+0xc4>
   2b8c0:	42bff736 	bltu	r8,r10,2b8a0 <__alt_data_end+0xfffeb8a0>
   2b8c4:	52000326 	beq	r10,r8,2b8d4 <__gedf2+0xcc>
   2b8c8:	5200042e 	bgeu	r10,r8,2b8dc <__gedf2+0xd4>
   2b8cc:	283fec1e 	bne	r5,zero,2b880 <__alt_data_end+0xfffeb880>
   2b8d0:	003ff406 	br	2b8a4 <__alt_data_end+0xfffeb8a4>
   2b8d4:	313ff236 	bltu	r6,r4,2b8a0 <__alt_data_end+0xfffeb8a0>
   2b8d8:	21bffc36 	bltu	r4,r6,2b8cc <__alt_data_end+0xfffeb8cc>
   2b8dc:	0005883a 	mov	r2,zero
   2b8e0:	f800283a 	ret

0002b8e4 <__ledf2>:
   2b8e4:	2804d53a 	srli	r2,r5,20
   2b8e8:	3810d53a 	srli	r8,r7,20
   2b8ec:	00c00434 	movhi	r3,16
   2b8f0:	18ffffc4 	addi	r3,r3,-1
   2b8f4:	1081ffcc 	andi	r2,r2,2047
   2b8f8:	0241ffc4 	movi	r9,2047
   2b8fc:	28d4703a 	and	r10,r5,r3
   2b900:	4201ffcc 	andi	r8,r8,2047
   2b904:	38c6703a 	and	r3,r7,r3
   2b908:	280ad7fa 	srli	r5,r5,31
   2b90c:	380ed7fa 	srli	r7,r7,31
   2b910:	12401f26 	beq	r2,r9,2b990 <__ledf2+0xac>
   2b914:	0241ffc4 	movi	r9,2047
   2b918:	42401426 	beq	r8,r9,2b96c <__ledf2+0x88>
   2b91c:	1000091e 	bne	r2,zero,2b944 <__ledf2+0x60>
   2b920:	2296b03a 	or	r11,r4,r10
   2b924:	5813003a 	cmpeq	r9,r11,zero
   2b928:	29403fcc 	andi	r5,r5,255
   2b92c:	40000a1e 	bne	r8,zero,2b958 <__ledf2+0x74>
   2b930:	30d8b03a 	or	r12,r6,r3
   2b934:	6000081e 	bne	r12,zero,2b958 <__ledf2+0x74>
   2b938:	0005883a 	mov	r2,zero
   2b93c:	5800111e 	bne	r11,zero,2b984 <__ledf2+0xa0>
   2b940:	f800283a 	ret
   2b944:	29403fcc 	andi	r5,r5,255
   2b948:	40000c1e 	bne	r8,zero,2b97c <__ledf2+0x98>
   2b94c:	30d2b03a 	or	r9,r6,r3
   2b950:	48000c26 	beq	r9,zero,2b984 <__ledf2+0xa0>
   2b954:	0013883a 	mov	r9,zero
   2b958:	39c03fcc 	andi	r7,r7,255
   2b95c:	48000826 	beq	r9,zero,2b980 <__ledf2+0x9c>
   2b960:	38001126 	beq	r7,zero,2b9a8 <__ledf2+0xc4>
   2b964:	00800044 	movi	r2,1
   2b968:	f800283a 	ret
   2b96c:	30d2b03a 	or	r9,r6,r3
   2b970:	483fea26 	beq	r9,zero,2b91c <__alt_data_end+0xfffeb91c>
   2b974:	00800084 	movi	r2,2
   2b978:	f800283a 	ret
   2b97c:	39c03fcc 	andi	r7,r7,255
   2b980:	39400726 	beq	r7,r5,2b9a0 <__ledf2+0xbc>
   2b984:	2800081e 	bne	r5,zero,2b9a8 <__ledf2+0xc4>
   2b988:	00800044 	movi	r2,1
   2b98c:	f800283a 	ret
   2b990:	2292b03a 	or	r9,r4,r10
   2b994:	483fdf26 	beq	r9,zero,2b914 <__alt_data_end+0xfffeb914>
   2b998:	00800084 	movi	r2,2
   2b99c:	f800283a 	ret
   2b9a0:	4080030e 	bge	r8,r2,2b9b0 <__ledf2+0xcc>
   2b9a4:	383fef26 	beq	r7,zero,2b964 <__alt_data_end+0xfffeb964>
   2b9a8:	00bfffc4 	movi	r2,-1
   2b9ac:	f800283a 	ret
   2b9b0:	123feb16 	blt	r2,r8,2b960 <__alt_data_end+0xfffeb960>
   2b9b4:	1abff336 	bltu	r3,r10,2b984 <__alt_data_end+0xfffeb984>
   2b9b8:	50c00326 	beq	r10,r3,2b9c8 <__ledf2+0xe4>
   2b9bc:	50c0042e 	bgeu	r10,r3,2b9d0 <__ledf2+0xec>
   2b9c0:	283fe81e 	bne	r5,zero,2b964 <__alt_data_end+0xfffeb964>
   2b9c4:	003ff806 	br	2b9a8 <__alt_data_end+0xfffeb9a8>
   2b9c8:	313fee36 	bltu	r6,r4,2b984 <__alt_data_end+0xfffeb984>
   2b9cc:	21bffc36 	bltu	r4,r6,2b9c0 <__alt_data_end+0xfffeb9c0>
   2b9d0:	0005883a 	mov	r2,zero
   2b9d4:	f800283a 	ret

0002b9d8 <__muldf3>:
   2b9d8:	defff304 	addi	sp,sp,-52
   2b9dc:	dd400815 	stw	r21,32(sp)
   2b9e0:	282ad53a 	srli	r21,r5,20
   2b9e4:	dd800915 	stw	r22,36(sp)
   2b9e8:	282cd7fa 	srli	r22,r5,31
   2b9ec:	dc000315 	stw	r16,12(sp)
   2b9f0:	04000434 	movhi	r16,16
   2b9f4:	dd000715 	stw	r20,28(sp)
   2b9f8:	843fffc4 	addi	r16,r16,-1
   2b9fc:	dfc00c15 	stw	ra,48(sp)
   2ba00:	df000b15 	stw	fp,44(sp)
   2ba04:	ddc00a15 	stw	r23,40(sp)
   2ba08:	dcc00615 	stw	r19,24(sp)
   2ba0c:	dc800515 	stw	r18,20(sp)
   2ba10:	dc400415 	stw	r17,16(sp)
   2ba14:	ad41ffcc 	andi	r21,r21,2047
   2ba18:	2c20703a 	and	r16,r5,r16
   2ba1c:	b029883a 	mov	r20,r22
   2ba20:	b2403fcc 	andi	r9,r22,255
   2ba24:	a8006026 	beq	r21,zero,2bba8 <__muldf3+0x1d0>
   2ba28:	0081ffc4 	movi	r2,2047
   2ba2c:	2027883a 	mov	r19,r4
   2ba30:	a8803626 	beq	r21,r2,2bb0c <__muldf3+0x134>
   2ba34:	80c00434 	orhi	r3,r16,16
   2ba38:	180690fa 	slli	r3,r3,3
   2ba3c:	2020d77a 	srli	r16,r4,29
   2ba40:	202690fa 	slli	r19,r4,3
   2ba44:	ad7f0044 	addi	r21,r21,-1023
   2ba48:	80e0b03a 	or	r16,r16,r3
   2ba4c:	0025883a 	mov	r18,zero
   2ba50:	0039883a 	mov	fp,zero
   2ba54:	3808d53a 	srli	r4,r7,20
   2ba58:	382ed7fa 	srli	r23,r7,31
   2ba5c:	04400434 	movhi	r17,16
   2ba60:	8c7fffc4 	addi	r17,r17,-1
   2ba64:	2101ffcc 	andi	r4,r4,2047
   2ba68:	3011883a 	mov	r8,r6
   2ba6c:	3c62703a 	and	r17,r7,r17
   2ba70:	ba803fcc 	andi	r10,r23,255
   2ba74:	20006d26 	beq	r4,zero,2bc2c <__muldf3+0x254>
   2ba78:	0081ffc4 	movi	r2,2047
   2ba7c:	20806526 	beq	r4,r2,2bc14 <__muldf3+0x23c>
   2ba80:	88c00434 	orhi	r3,r17,16
   2ba84:	180690fa 	slli	r3,r3,3
   2ba88:	3022d77a 	srli	r17,r6,29
   2ba8c:	301090fa 	slli	r8,r6,3
   2ba90:	213f0044 	addi	r4,r4,-1023
   2ba94:	88e2b03a 	or	r17,r17,r3
   2ba98:	000b883a 	mov	r5,zero
   2ba9c:	a909883a 	add	r4,r21,r4
   2baa0:	2c84b03a 	or	r2,r5,r18
   2baa4:	00c003c4 	movi	r3,15
   2baa8:	bdacf03a 	xor	r22,r23,r22
   2baac:	22c00044 	addi	r11,r4,1
   2bab0:	18809936 	bltu	r3,r2,2bd18 <__muldf3+0x340>
   2bab4:	100490ba 	slli	r2,r2,2
   2bab8:	00c000f4 	movhi	r3,3
   2babc:	18eeb304 	addi	r3,r3,-17716
   2bac0:	10c5883a 	add	r2,r2,r3
   2bac4:	10800017 	ldw	r2,0(r2)
   2bac8:	1000683a 	jmp	r2
   2bacc:	0002bd18 	cmpnei	zero,zero,2804
   2bad0:	0002bb2c 	andhi	zero,zero,2796
   2bad4:	0002bb2c 	andhi	zero,zero,2796
   2bad8:	0002bb28 	cmpgeui	zero,zero,2796
   2badc:	0002bcf4 	movhi	zero,2803
   2bae0:	0002bcf4 	movhi	zero,2803
   2bae4:	0002bcdc 	xori	zero,zero,2803
   2bae8:	0002bb28 	cmpgeui	zero,zero,2796
   2baec:	0002bcf4 	movhi	zero,2803
   2baf0:	0002bcdc 	xori	zero,zero,2803
   2baf4:	0002bcf4 	movhi	zero,2803
   2baf8:	0002bb28 	cmpgeui	zero,zero,2796
   2bafc:	0002bd04 	movi	zero,2804
   2bb00:	0002bd04 	movi	zero,2804
   2bb04:	0002bd04 	movi	zero,2804
   2bb08:	0002bf20 	cmpeqi	zero,zero,2812
   2bb0c:	2404b03a 	or	r2,r4,r16
   2bb10:	10006f1e 	bne	r2,zero,2bcd0 <__muldf3+0x2f8>
   2bb14:	04800204 	movi	r18,8
   2bb18:	0021883a 	mov	r16,zero
   2bb1c:	0027883a 	mov	r19,zero
   2bb20:	07000084 	movi	fp,2
   2bb24:	003fcb06 	br	2ba54 <__alt_data_end+0xfffeba54>
   2bb28:	502d883a 	mov	r22,r10
   2bb2c:	00800084 	movi	r2,2
   2bb30:	28805726 	beq	r5,r2,2bc90 <__muldf3+0x2b8>
   2bb34:	008000c4 	movi	r2,3
   2bb38:	28816626 	beq	r5,r2,2c0d4 <__muldf3+0x6fc>
   2bb3c:	00800044 	movi	r2,1
   2bb40:	2881411e 	bne	r5,r2,2c048 <__muldf3+0x670>
   2bb44:	b029883a 	mov	r20,r22
   2bb48:	0005883a 	mov	r2,zero
   2bb4c:	000b883a 	mov	r5,zero
   2bb50:	0027883a 	mov	r19,zero
   2bb54:	1004953a 	slli	r2,r2,20
   2bb58:	a0c03fcc 	andi	r3,r20,255
   2bb5c:	04400434 	movhi	r17,16
   2bb60:	8c7fffc4 	addi	r17,r17,-1
   2bb64:	180697fa 	slli	r3,r3,31
   2bb68:	2c4a703a 	and	r5,r5,r17
   2bb6c:	288ab03a 	or	r5,r5,r2
   2bb70:	28c6b03a 	or	r3,r5,r3
   2bb74:	9805883a 	mov	r2,r19
   2bb78:	dfc00c17 	ldw	ra,48(sp)
   2bb7c:	df000b17 	ldw	fp,44(sp)
   2bb80:	ddc00a17 	ldw	r23,40(sp)
   2bb84:	dd800917 	ldw	r22,36(sp)
   2bb88:	dd400817 	ldw	r21,32(sp)
   2bb8c:	dd000717 	ldw	r20,28(sp)
   2bb90:	dcc00617 	ldw	r19,24(sp)
   2bb94:	dc800517 	ldw	r18,20(sp)
   2bb98:	dc400417 	ldw	r17,16(sp)
   2bb9c:	dc000317 	ldw	r16,12(sp)
   2bba0:	dec00d04 	addi	sp,sp,52
   2bba4:	f800283a 	ret
   2bba8:	2404b03a 	or	r2,r4,r16
   2bbac:	2025883a 	mov	r18,r4
   2bbb0:	10004226 	beq	r2,zero,2bcbc <__muldf3+0x2e4>
   2bbb4:	8000fc26 	beq	r16,zero,2bfa8 <__muldf3+0x5d0>
   2bbb8:	8009883a 	mov	r4,r16
   2bbbc:	d9800215 	stw	r6,8(sp)
   2bbc0:	d9c00015 	stw	r7,0(sp)
   2bbc4:	da400115 	stw	r9,4(sp)
   2bbc8:	002cbf00 	call	2cbf0 <__clzsi2>
   2bbcc:	d9800217 	ldw	r6,8(sp)
   2bbd0:	d9c00017 	ldw	r7,0(sp)
   2bbd4:	da400117 	ldw	r9,4(sp)
   2bbd8:	10fffd44 	addi	r3,r2,-11
   2bbdc:	01000704 	movi	r4,28
   2bbe0:	20c0ed16 	blt	r4,r3,2bf98 <__muldf3+0x5c0>
   2bbe4:	01000744 	movi	r4,29
   2bbe8:	147ffe04 	addi	r17,r2,-8
   2bbec:	20c9c83a 	sub	r4,r4,r3
   2bbf0:	8460983a 	sll	r16,r16,r17
   2bbf4:	9108d83a 	srl	r4,r18,r4
   2bbf8:	9466983a 	sll	r19,r18,r17
   2bbfc:	2420b03a 	or	r16,r4,r16
   2bc00:	013f0084 	movi	r4,-1022
   2bc04:	20ebc83a 	sub	r21,r4,r3
   2bc08:	0025883a 	mov	r18,zero
   2bc0c:	0039883a 	mov	fp,zero
   2bc10:	003f9006 	br	2ba54 <__alt_data_end+0xfffeba54>
   2bc14:	3444b03a 	or	r2,r6,r17
   2bc18:	1000261e 	bne	r2,zero,2bcb4 <__muldf3+0x2dc>
   2bc1c:	0023883a 	mov	r17,zero
   2bc20:	0011883a 	mov	r8,zero
   2bc24:	01400084 	movi	r5,2
   2bc28:	003f9c06 	br	2ba9c <__alt_data_end+0xfffeba9c>
   2bc2c:	3444b03a 	or	r2,r6,r17
   2bc30:	10001c26 	beq	r2,zero,2bca4 <__muldf3+0x2cc>
   2bc34:	8800ce26 	beq	r17,zero,2bf70 <__muldf3+0x598>
   2bc38:	8809883a 	mov	r4,r17
   2bc3c:	d9800215 	stw	r6,8(sp)
   2bc40:	da400115 	stw	r9,4(sp)
   2bc44:	da800015 	stw	r10,0(sp)
   2bc48:	002cbf00 	call	2cbf0 <__clzsi2>
   2bc4c:	d9800217 	ldw	r6,8(sp)
   2bc50:	da400117 	ldw	r9,4(sp)
   2bc54:	da800017 	ldw	r10,0(sp)
   2bc58:	113ffd44 	addi	r4,r2,-11
   2bc5c:	00c00704 	movi	r3,28
   2bc60:	1900bf16 	blt	r3,r4,2bf60 <__muldf3+0x588>
   2bc64:	00c00744 	movi	r3,29
   2bc68:	123ffe04 	addi	r8,r2,-8
   2bc6c:	1907c83a 	sub	r3,r3,r4
   2bc70:	8a22983a 	sll	r17,r17,r8
   2bc74:	30c6d83a 	srl	r3,r6,r3
   2bc78:	3210983a 	sll	r8,r6,r8
   2bc7c:	1c62b03a 	or	r17,r3,r17
   2bc80:	017f0084 	movi	r5,-1022
   2bc84:	2909c83a 	sub	r4,r5,r4
   2bc88:	000b883a 	mov	r5,zero
   2bc8c:	003f8306 	br	2ba9c <__alt_data_end+0xfffeba9c>
   2bc90:	b029883a 	mov	r20,r22
   2bc94:	0081ffc4 	movi	r2,2047
   2bc98:	000b883a 	mov	r5,zero
   2bc9c:	0027883a 	mov	r19,zero
   2bca0:	003fac06 	br	2bb54 <__alt_data_end+0xfffebb54>
   2bca4:	0023883a 	mov	r17,zero
   2bca8:	0011883a 	mov	r8,zero
   2bcac:	01400044 	movi	r5,1
   2bcb0:	003f7a06 	br	2ba9c <__alt_data_end+0xfffeba9c>
   2bcb4:	014000c4 	movi	r5,3
   2bcb8:	003f7806 	br	2ba9c <__alt_data_end+0xfffeba9c>
   2bcbc:	04800104 	movi	r18,4
   2bcc0:	0021883a 	mov	r16,zero
   2bcc4:	0027883a 	mov	r19,zero
   2bcc8:	07000044 	movi	fp,1
   2bccc:	003f6106 	br	2ba54 <__alt_data_end+0xfffeba54>
   2bcd0:	04800304 	movi	r18,12
   2bcd4:	070000c4 	movi	fp,3
   2bcd8:	003f5e06 	br	2ba54 <__alt_data_end+0xfffeba54>
   2bcdc:	01400434 	movhi	r5,16
   2bce0:	0029883a 	mov	r20,zero
   2bce4:	297fffc4 	addi	r5,r5,-1
   2bce8:	04ffffc4 	movi	r19,-1
   2bcec:	0081ffc4 	movi	r2,2047
   2bcf0:	003f9806 	br	2bb54 <__alt_data_end+0xfffebb54>
   2bcf4:	8023883a 	mov	r17,r16
   2bcf8:	9811883a 	mov	r8,r19
   2bcfc:	e00b883a 	mov	r5,fp
   2bd00:	003f8a06 	br	2bb2c <__alt_data_end+0xfffebb2c>
   2bd04:	8023883a 	mov	r17,r16
   2bd08:	9811883a 	mov	r8,r19
   2bd0c:	482d883a 	mov	r22,r9
   2bd10:	e00b883a 	mov	r5,fp
   2bd14:	003f8506 	br	2bb2c <__alt_data_end+0xfffebb2c>
   2bd18:	980ad43a 	srli	r5,r19,16
   2bd1c:	401ad43a 	srli	r13,r8,16
   2bd20:	9cffffcc 	andi	r19,r19,65535
   2bd24:	423fffcc 	andi	r8,r8,65535
   2bd28:	44d9383a 	mul	r12,r8,r19
   2bd2c:	4145383a 	mul	r2,r8,r5
   2bd30:	6ccd383a 	mul	r6,r13,r19
   2bd34:	6006d43a 	srli	r3,r12,16
   2bd38:	2b5d383a 	mul	r14,r5,r13
   2bd3c:	308d883a 	add	r6,r6,r2
   2bd40:	198d883a 	add	r6,r3,r6
   2bd44:	3080022e 	bgeu	r6,r2,2bd50 <__muldf3+0x378>
   2bd48:	00800074 	movhi	r2,1
   2bd4c:	709d883a 	add	r14,r14,r2
   2bd50:	8828d43a 	srli	r20,r17,16
   2bd54:	8bffffcc 	andi	r15,r17,65535
   2bd58:	7ce3383a 	mul	r17,r15,r19
   2bd5c:	7945383a 	mul	r2,r15,r5
   2bd60:	a4e7383a 	mul	r19,r20,r19
   2bd64:	8814d43a 	srli	r10,r17,16
   2bd68:	3012943a 	slli	r9,r6,16
   2bd6c:	98a7883a 	add	r19,r19,r2
   2bd70:	633fffcc 	andi	r12,r12,65535
   2bd74:	54d5883a 	add	r10,r10,r19
   2bd78:	3006d43a 	srli	r3,r6,16
   2bd7c:	4b13883a 	add	r9,r9,r12
   2bd80:	2d0b383a 	mul	r5,r5,r20
   2bd84:	5080022e 	bgeu	r10,r2,2bd90 <__muldf3+0x3b8>
   2bd88:	00800074 	movhi	r2,1
   2bd8c:	288b883a 	add	r5,r5,r2
   2bd90:	802ad43a 	srli	r21,r16,16
   2bd94:	843fffcc 	andi	r16,r16,65535
   2bd98:	440d383a 	mul	r6,r8,r16
   2bd9c:	4565383a 	mul	r18,r8,r21
   2bda0:	8359383a 	mul	r12,r16,r13
   2bda4:	500e943a 	slli	r7,r10,16
   2bda8:	3010d43a 	srli	r8,r6,16
   2bdac:	5026d43a 	srli	r19,r10,16
   2bdb0:	6499883a 	add	r12,r12,r18
   2bdb4:	8abfffcc 	andi	r10,r17,65535
   2bdb8:	3a95883a 	add	r10,r7,r10
   2bdbc:	4319883a 	add	r12,r8,r12
   2bdc0:	9967883a 	add	r19,r19,r5
   2bdc4:	1a87883a 	add	r3,r3,r10
   2bdc8:	6d5b383a 	mul	r13,r13,r21
   2bdcc:	6480022e 	bgeu	r12,r18,2bdd8 <__muldf3+0x400>
   2bdd0:	00800074 	movhi	r2,1
   2bdd4:	689b883a 	add	r13,r13,r2
   2bdd8:	7c25383a 	mul	r18,r15,r16
   2bddc:	7d4b383a 	mul	r5,r15,r21
   2bde0:	850f383a 	mul	r7,r16,r20
   2bde4:	901ed43a 	srli	r15,r18,16
   2bde8:	6004d43a 	srli	r2,r12,16
   2bdec:	6010943a 	slli	r8,r12,16
   2bdf0:	394f883a 	add	r7,r7,r5
   2bdf4:	333fffcc 	andi	r12,r6,65535
   2bdf8:	79df883a 	add	r15,r15,r7
   2bdfc:	135b883a 	add	r13,r2,r13
   2be00:	a563383a 	mul	r17,r20,r21
   2be04:	4305883a 	add	r2,r8,r12
   2be08:	7940022e 	bgeu	r15,r5,2be14 <__muldf3+0x43c>
   2be0c:	01400074 	movhi	r5,1
   2be10:	8963883a 	add	r17,r17,r5
   2be14:	780a943a 	slli	r5,r15,16
   2be18:	91bfffcc 	andi	r6,r18,65535
   2be1c:	70c7883a 	add	r3,r14,r3
   2be20:	298d883a 	add	r6,r5,r6
   2be24:	1a8f803a 	cmpltu	r7,r3,r10
   2be28:	34cb883a 	add	r5,r6,r19
   2be2c:	10c7883a 	add	r3,r2,r3
   2be30:	3955883a 	add	r10,r7,r5
   2be34:	1885803a 	cmpltu	r2,r3,r2
   2be38:	6a91883a 	add	r8,r13,r10
   2be3c:	780cd43a 	srli	r6,r15,16
   2be40:	1219883a 	add	r12,r2,r8
   2be44:	2ccb803a 	cmpltu	r5,r5,r19
   2be48:	51cf803a 	cmpltu	r7,r10,r7
   2be4c:	29ceb03a 	or	r7,r5,r7
   2be50:	4351803a 	cmpltu	r8,r8,r13
   2be54:	608b803a 	cmpltu	r5,r12,r2
   2be58:	4144b03a 	or	r2,r8,r5
   2be5c:	398f883a 	add	r7,r7,r6
   2be60:	3885883a 	add	r2,r7,r2
   2be64:	1810927a 	slli	r8,r3,9
   2be68:	1445883a 	add	r2,r2,r17
   2be6c:	1004927a 	slli	r2,r2,9
   2be70:	6022d5fa 	srli	r17,r12,23
   2be74:	1806d5fa 	srli	r3,r3,23
   2be78:	4252b03a 	or	r9,r8,r9
   2be7c:	600a927a 	slli	r5,r12,9
   2be80:	4810c03a 	cmpne	r8,r9,zero
   2be84:	1462b03a 	or	r17,r2,r17
   2be88:	40c6b03a 	or	r3,r8,r3
   2be8c:	8880402c 	andhi	r2,r17,256
   2be90:	1950b03a 	or	r8,r3,r5
   2be94:	10000726 	beq	r2,zero,2beb4 <__muldf3+0x4dc>
   2be98:	4006d07a 	srli	r3,r8,1
   2be9c:	880497fa 	slli	r2,r17,31
   2bea0:	4200004c 	andi	r8,r8,1
   2bea4:	8822d07a 	srli	r17,r17,1
   2bea8:	1a10b03a 	or	r8,r3,r8
   2beac:	1210b03a 	or	r8,r2,r8
   2beb0:	5809883a 	mov	r4,r11
   2beb4:	2080ffc4 	addi	r2,r4,1023
   2beb8:	0080440e 	bge	zero,r2,2bfcc <__muldf3+0x5f4>
   2bebc:	40c001cc 	andi	r3,r8,7
   2bec0:	18000726 	beq	r3,zero,2bee0 <__muldf3+0x508>
   2bec4:	40c003cc 	andi	r3,r8,15
   2bec8:	01400104 	movi	r5,4
   2becc:	19400426 	beq	r3,r5,2bee0 <__muldf3+0x508>
   2bed0:	4147883a 	add	r3,r8,r5
   2bed4:	1a11803a 	cmpltu	r8,r3,r8
   2bed8:	8a23883a 	add	r17,r17,r8
   2bedc:	1811883a 	mov	r8,r3
   2bee0:	88c0402c 	andhi	r3,r17,256
   2bee4:	18000426 	beq	r3,zero,2bef8 <__muldf3+0x520>
   2bee8:	00ffc034 	movhi	r3,65280
   2beec:	18ffffc4 	addi	r3,r3,-1
   2bef0:	20810004 	addi	r2,r4,1024
   2bef4:	88e2703a 	and	r17,r17,r3
   2bef8:	00c1ff84 	movi	r3,2046
   2befc:	18bf6416 	blt	r3,r2,2bc90 <__alt_data_end+0xfffebc90>
   2bf00:	8826977a 	slli	r19,r17,29
   2bf04:	4010d0fa 	srli	r8,r8,3
   2bf08:	8822927a 	slli	r17,r17,9
   2bf0c:	1081ffcc 	andi	r2,r2,2047
   2bf10:	9a26b03a 	or	r19,r19,r8
   2bf14:	880ad33a 	srli	r5,r17,12
   2bf18:	b029883a 	mov	r20,r22
   2bf1c:	003f0d06 	br	2bb54 <__alt_data_end+0xfffebb54>
   2bf20:	8080022c 	andhi	r2,r16,8
   2bf24:	10000926 	beq	r2,zero,2bf4c <__muldf3+0x574>
   2bf28:	8880022c 	andhi	r2,r17,8
   2bf2c:	1000071e 	bne	r2,zero,2bf4c <__muldf3+0x574>
   2bf30:	00800434 	movhi	r2,16
   2bf34:	89400234 	orhi	r5,r17,8
   2bf38:	10bfffc4 	addi	r2,r2,-1
   2bf3c:	b829883a 	mov	r20,r23
   2bf40:	288a703a 	and	r5,r5,r2
   2bf44:	4027883a 	mov	r19,r8
   2bf48:	003f6806 	br	2bcec <__alt_data_end+0xfffebcec>
   2bf4c:	00800434 	movhi	r2,16
   2bf50:	81400234 	orhi	r5,r16,8
   2bf54:	10bfffc4 	addi	r2,r2,-1
   2bf58:	288a703a 	and	r5,r5,r2
   2bf5c:	003f6306 	br	2bcec <__alt_data_end+0xfffebcec>
   2bf60:	10bff604 	addi	r2,r2,-40
   2bf64:	30a2983a 	sll	r17,r6,r2
   2bf68:	0011883a 	mov	r8,zero
   2bf6c:	003f4406 	br	2bc80 <__alt_data_end+0xfffebc80>
   2bf70:	3009883a 	mov	r4,r6
   2bf74:	d9800215 	stw	r6,8(sp)
   2bf78:	da400115 	stw	r9,4(sp)
   2bf7c:	da800015 	stw	r10,0(sp)
   2bf80:	002cbf00 	call	2cbf0 <__clzsi2>
   2bf84:	10800804 	addi	r2,r2,32
   2bf88:	da800017 	ldw	r10,0(sp)
   2bf8c:	da400117 	ldw	r9,4(sp)
   2bf90:	d9800217 	ldw	r6,8(sp)
   2bf94:	003f3006 	br	2bc58 <__alt_data_end+0xfffebc58>
   2bf98:	10bff604 	addi	r2,r2,-40
   2bf9c:	90a0983a 	sll	r16,r18,r2
   2bfa0:	0027883a 	mov	r19,zero
   2bfa4:	003f1606 	br	2bc00 <__alt_data_end+0xfffebc00>
   2bfa8:	d9800215 	stw	r6,8(sp)
   2bfac:	d9c00015 	stw	r7,0(sp)
   2bfb0:	da400115 	stw	r9,4(sp)
   2bfb4:	002cbf00 	call	2cbf0 <__clzsi2>
   2bfb8:	10800804 	addi	r2,r2,32
   2bfbc:	da400117 	ldw	r9,4(sp)
   2bfc0:	d9c00017 	ldw	r7,0(sp)
   2bfc4:	d9800217 	ldw	r6,8(sp)
   2bfc8:	003f0306 	br	2bbd8 <__alt_data_end+0xfffebbd8>
   2bfcc:	00c00044 	movi	r3,1
   2bfd0:	1887c83a 	sub	r3,r3,r2
   2bfd4:	01000e04 	movi	r4,56
   2bfd8:	20feda16 	blt	r4,r3,2bb44 <__alt_data_end+0xfffebb44>
   2bfdc:	010007c4 	movi	r4,31
   2bfe0:	20c01b16 	blt	r4,r3,2c050 <__muldf3+0x678>
   2bfe4:	00800804 	movi	r2,32
   2bfe8:	10c5c83a 	sub	r2,r2,r3
   2bfec:	888a983a 	sll	r5,r17,r2
   2bff0:	40c8d83a 	srl	r4,r8,r3
   2bff4:	4084983a 	sll	r2,r8,r2
   2bff8:	88e2d83a 	srl	r17,r17,r3
   2bffc:	2906b03a 	or	r3,r5,r4
   2c000:	1004c03a 	cmpne	r2,r2,zero
   2c004:	1886b03a 	or	r3,r3,r2
   2c008:	188001cc 	andi	r2,r3,7
   2c00c:	10000726 	beq	r2,zero,2c02c <__muldf3+0x654>
   2c010:	188003cc 	andi	r2,r3,15
   2c014:	01000104 	movi	r4,4
   2c018:	11000426 	beq	r2,r4,2c02c <__muldf3+0x654>
   2c01c:	1805883a 	mov	r2,r3
   2c020:	10c00104 	addi	r3,r2,4
   2c024:	1885803a 	cmpltu	r2,r3,r2
   2c028:	88a3883a 	add	r17,r17,r2
   2c02c:	8880202c 	andhi	r2,r17,128
   2c030:	10001c26 	beq	r2,zero,2c0a4 <__muldf3+0x6cc>
   2c034:	b029883a 	mov	r20,r22
   2c038:	00800044 	movi	r2,1
   2c03c:	000b883a 	mov	r5,zero
   2c040:	0027883a 	mov	r19,zero
   2c044:	003ec306 	br	2bb54 <__alt_data_end+0xfffebb54>
   2c048:	5809883a 	mov	r4,r11
   2c04c:	003f9906 	br	2beb4 <__alt_data_end+0xfffebeb4>
   2c050:	013ff844 	movi	r4,-31
   2c054:	2085c83a 	sub	r2,r4,r2
   2c058:	8888d83a 	srl	r4,r17,r2
   2c05c:	00800804 	movi	r2,32
   2c060:	18801a26 	beq	r3,r2,2c0cc <__muldf3+0x6f4>
   2c064:	00801004 	movi	r2,64
   2c068:	10c5c83a 	sub	r2,r2,r3
   2c06c:	8884983a 	sll	r2,r17,r2
   2c070:	1204b03a 	or	r2,r2,r8
   2c074:	1004c03a 	cmpne	r2,r2,zero
   2c078:	2084b03a 	or	r2,r4,r2
   2c07c:	144001cc 	andi	r17,r2,7
   2c080:	88000d1e 	bne	r17,zero,2c0b8 <__muldf3+0x6e0>
   2c084:	000b883a 	mov	r5,zero
   2c088:	1026d0fa 	srli	r19,r2,3
   2c08c:	b029883a 	mov	r20,r22
   2c090:	0005883a 	mov	r2,zero
   2c094:	9c66b03a 	or	r19,r19,r17
   2c098:	003eae06 	br	2bb54 <__alt_data_end+0xfffebb54>
   2c09c:	1007883a 	mov	r3,r2
   2c0a0:	0023883a 	mov	r17,zero
   2c0a4:	880a927a 	slli	r5,r17,9
   2c0a8:	1805883a 	mov	r2,r3
   2c0ac:	8822977a 	slli	r17,r17,29
   2c0b0:	280ad33a 	srli	r5,r5,12
   2c0b4:	003ff406 	br	2c088 <__alt_data_end+0xfffec088>
   2c0b8:	10c003cc 	andi	r3,r2,15
   2c0bc:	01000104 	movi	r4,4
   2c0c0:	193ff626 	beq	r3,r4,2c09c <__alt_data_end+0xfffec09c>
   2c0c4:	0023883a 	mov	r17,zero
   2c0c8:	003fd506 	br	2c020 <__alt_data_end+0xfffec020>
   2c0cc:	0005883a 	mov	r2,zero
   2c0d0:	003fe706 	br	2c070 <__alt_data_end+0xfffec070>
   2c0d4:	00800434 	movhi	r2,16
   2c0d8:	89400234 	orhi	r5,r17,8
   2c0dc:	10bfffc4 	addi	r2,r2,-1
   2c0e0:	b029883a 	mov	r20,r22
   2c0e4:	288a703a 	and	r5,r5,r2
   2c0e8:	4027883a 	mov	r19,r8
   2c0ec:	003eff06 	br	2bcec <__alt_data_end+0xfffebcec>

0002c0f0 <__subdf3>:
   2c0f0:	02000434 	movhi	r8,16
   2c0f4:	423fffc4 	addi	r8,r8,-1
   2c0f8:	defffb04 	addi	sp,sp,-20
   2c0fc:	2a14703a 	and	r10,r5,r8
   2c100:	3812d53a 	srli	r9,r7,20
   2c104:	3a10703a 	and	r8,r7,r8
   2c108:	2006d77a 	srli	r3,r4,29
   2c10c:	3004d77a 	srli	r2,r6,29
   2c110:	dc000015 	stw	r16,0(sp)
   2c114:	501490fa 	slli	r10,r10,3
   2c118:	2820d53a 	srli	r16,r5,20
   2c11c:	401090fa 	slli	r8,r8,3
   2c120:	dc800215 	stw	r18,8(sp)
   2c124:	dc400115 	stw	r17,4(sp)
   2c128:	dfc00415 	stw	ra,16(sp)
   2c12c:	202290fa 	slli	r17,r4,3
   2c130:	dcc00315 	stw	r19,12(sp)
   2c134:	4a41ffcc 	andi	r9,r9,2047
   2c138:	0101ffc4 	movi	r4,2047
   2c13c:	2824d7fa 	srli	r18,r5,31
   2c140:	8401ffcc 	andi	r16,r16,2047
   2c144:	50c6b03a 	or	r3,r10,r3
   2c148:	380ed7fa 	srli	r7,r7,31
   2c14c:	408ab03a 	or	r5,r8,r2
   2c150:	300c90fa 	slli	r6,r6,3
   2c154:	49009626 	beq	r9,r4,2c3b0 <__subdf3+0x2c0>
   2c158:	39c0005c 	xori	r7,r7,1
   2c15c:	8245c83a 	sub	r2,r16,r9
   2c160:	3c807426 	beq	r7,r18,2c334 <__subdf3+0x244>
   2c164:	0080af0e 	bge	zero,r2,2c424 <__subdf3+0x334>
   2c168:	48002a1e 	bne	r9,zero,2c214 <__subdf3+0x124>
   2c16c:	2988b03a 	or	r4,r5,r6
   2c170:	20009a1e 	bne	r4,zero,2c3dc <__subdf3+0x2ec>
   2c174:	888001cc 	andi	r2,r17,7
   2c178:	10000726 	beq	r2,zero,2c198 <__subdf3+0xa8>
   2c17c:	888003cc 	andi	r2,r17,15
   2c180:	01000104 	movi	r4,4
   2c184:	11000426 	beq	r2,r4,2c198 <__subdf3+0xa8>
   2c188:	890b883a 	add	r5,r17,r4
   2c18c:	2c63803a 	cmpltu	r17,r5,r17
   2c190:	1c47883a 	add	r3,r3,r17
   2c194:	2823883a 	mov	r17,r5
   2c198:	1880202c 	andhi	r2,r3,128
   2c19c:	10005926 	beq	r2,zero,2c304 <__subdf3+0x214>
   2c1a0:	84000044 	addi	r16,r16,1
   2c1a4:	0081ffc4 	movi	r2,2047
   2c1a8:	8080be26 	beq	r16,r2,2c4a4 <__subdf3+0x3b4>
   2c1ac:	017fe034 	movhi	r5,65408
   2c1b0:	297fffc4 	addi	r5,r5,-1
   2c1b4:	1946703a 	and	r3,r3,r5
   2c1b8:	1804977a 	slli	r2,r3,29
   2c1bc:	1806927a 	slli	r3,r3,9
   2c1c0:	8822d0fa 	srli	r17,r17,3
   2c1c4:	8401ffcc 	andi	r16,r16,2047
   2c1c8:	180ad33a 	srli	r5,r3,12
   2c1cc:	9100004c 	andi	r4,r18,1
   2c1d0:	1444b03a 	or	r2,r2,r17
   2c1d4:	80c1ffcc 	andi	r3,r16,2047
   2c1d8:	1820953a 	slli	r16,r3,20
   2c1dc:	20c03fcc 	andi	r3,r4,255
   2c1e0:	180897fa 	slli	r4,r3,31
   2c1e4:	00c00434 	movhi	r3,16
   2c1e8:	18ffffc4 	addi	r3,r3,-1
   2c1ec:	28c6703a 	and	r3,r5,r3
   2c1f0:	1c06b03a 	or	r3,r3,r16
   2c1f4:	1906b03a 	or	r3,r3,r4
   2c1f8:	dfc00417 	ldw	ra,16(sp)
   2c1fc:	dcc00317 	ldw	r19,12(sp)
   2c200:	dc800217 	ldw	r18,8(sp)
   2c204:	dc400117 	ldw	r17,4(sp)
   2c208:	dc000017 	ldw	r16,0(sp)
   2c20c:	dec00504 	addi	sp,sp,20
   2c210:	f800283a 	ret
   2c214:	0101ffc4 	movi	r4,2047
   2c218:	813fd626 	beq	r16,r4,2c174 <__alt_data_end+0xfffec174>
   2c21c:	29402034 	orhi	r5,r5,128
   2c220:	01000e04 	movi	r4,56
   2c224:	2080a316 	blt	r4,r2,2c4b4 <__subdf3+0x3c4>
   2c228:	010007c4 	movi	r4,31
   2c22c:	2080c616 	blt	r4,r2,2c548 <__subdf3+0x458>
   2c230:	01000804 	movi	r4,32
   2c234:	2089c83a 	sub	r4,r4,r2
   2c238:	2910983a 	sll	r8,r5,r4
   2c23c:	308ed83a 	srl	r7,r6,r2
   2c240:	3108983a 	sll	r4,r6,r4
   2c244:	2884d83a 	srl	r2,r5,r2
   2c248:	41ccb03a 	or	r6,r8,r7
   2c24c:	2008c03a 	cmpne	r4,r4,zero
   2c250:	310cb03a 	or	r6,r6,r4
   2c254:	898dc83a 	sub	r6,r17,r6
   2c258:	89a3803a 	cmpltu	r17,r17,r6
   2c25c:	1887c83a 	sub	r3,r3,r2
   2c260:	1c47c83a 	sub	r3,r3,r17
   2c264:	3023883a 	mov	r17,r6
   2c268:	1880202c 	andhi	r2,r3,128
   2c26c:	10002326 	beq	r2,zero,2c2fc <__subdf3+0x20c>
   2c270:	04c02034 	movhi	r19,128
   2c274:	9cffffc4 	addi	r19,r19,-1
   2c278:	1ce6703a 	and	r19,r3,r19
   2c27c:	98007a26 	beq	r19,zero,2c468 <__subdf3+0x378>
   2c280:	9809883a 	mov	r4,r19
   2c284:	002cbf00 	call	2cbf0 <__clzsi2>
   2c288:	113ffe04 	addi	r4,r2,-8
   2c28c:	00c007c4 	movi	r3,31
   2c290:	19007b16 	blt	r3,r4,2c480 <__subdf3+0x390>
   2c294:	00800804 	movi	r2,32
   2c298:	1105c83a 	sub	r2,r2,r4
   2c29c:	8884d83a 	srl	r2,r17,r2
   2c2a0:	9906983a 	sll	r3,r19,r4
   2c2a4:	8922983a 	sll	r17,r17,r4
   2c2a8:	10c4b03a 	or	r2,r2,r3
   2c2ac:	24007816 	blt	r4,r16,2c490 <__subdf3+0x3a0>
   2c2b0:	2421c83a 	sub	r16,r4,r16
   2c2b4:	80c00044 	addi	r3,r16,1
   2c2b8:	010007c4 	movi	r4,31
   2c2bc:	20c09516 	blt	r4,r3,2c514 <__subdf3+0x424>
   2c2c0:	01400804 	movi	r5,32
   2c2c4:	28cbc83a 	sub	r5,r5,r3
   2c2c8:	88c8d83a 	srl	r4,r17,r3
   2c2cc:	8962983a 	sll	r17,r17,r5
   2c2d0:	114a983a 	sll	r5,r2,r5
   2c2d4:	10c6d83a 	srl	r3,r2,r3
   2c2d8:	8804c03a 	cmpne	r2,r17,zero
   2c2dc:	290ab03a 	or	r5,r5,r4
   2c2e0:	28a2b03a 	or	r17,r5,r2
   2c2e4:	0021883a 	mov	r16,zero
   2c2e8:	003fa206 	br	2c174 <__alt_data_end+0xfffec174>
   2c2ec:	2090b03a 	or	r8,r4,r2
   2c2f0:	40018e26 	beq	r8,zero,2c92c <__subdf3+0x83c>
   2c2f4:	1007883a 	mov	r3,r2
   2c2f8:	2023883a 	mov	r17,r4
   2c2fc:	888001cc 	andi	r2,r17,7
   2c300:	103f9e1e 	bne	r2,zero,2c17c <__alt_data_end+0xfffec17c>
   2c304:	1804977a 	slli	r2,r3,29
   2c308:	8822d0fa 	srli	r17,r17,3
   2c30c:	1810d0fa 	srli	r8,r3,3
   2c310:	9100004c 	andi	r4,r18,1
   2c314:	1444b03a 	or	r2,r2,r17
   2c318:	00c1ffc4 	movi	r3,2047
   2c31c:	80c02826 	beq	r16,r3,2c3c0 <__subdf3+0x2d0>
   2c320:	01400434 	movhi	r5,16
   2c324:	297fffc4 	addi	r5,r5,-1
   2c328:	80e0703a 	and	r16,r16,r3
   2c32c:	414a703a 	and	r5,r8,r5
   2c330:	003fa806 	br	2c1d4 <__alt_data_end+0xfffec1d4>
   2c334:	0080630e 	bge	zero,r2,2c4c4 <__subdf3+0x3d4>
   2c338:	48003026 	beq	r9,zero,2c3fc <__subdf3+0x30c>
   2c33c:	0101ffc4 	movi	r4,2047
   2c340:	813f8c26 	beq	r16,r4,2c174 <__alt_data_end+0xfffec174>
   2c344:	29402034 	orhi	r5,r5,128
   2c348:	01000e04 	movi	r4,56
   2c34c:	2080a90e 	bge	r4,r2,2c5f4 <__subdf3+0x504>
   2c350:	298cb03a 	or	r6,r5,r6
   2c354:	3012c03a 	cmpne	r9,r6,zero
   2c358:	0005883a 	mov	r2,zero
   2c35c:	4c53883a 	add	r9,r9,r17
   2c360:	4c63803a 	cmpltu	r17,r9,r17
   2c364:	10c7883a 	add	r3,r2,r3
   2c368:	88c7883a 	add	r3,r17,r3
   2c36c:	4823883a 	mov	r17,r9
   2c370:	1880202c 	andhi	r2,r3,128
   2c374:	1000d026 	beq	r2,zero,2c6b8 <__subdf3+0x5c8>
   2c378:	84000044 	addi	r16,r16,1
   2c37c:	0081ffc4 	movi	r2,2047
   2c380:	8080fe26 	beq	r16,r2,2c77c <__subdf3+0x68c>
   2c384:	00bfe034 	movhi	r2,65408
   2c388:	10bfffc4 	addi	r2,r2,-1
   2c38c:	1886703a 	and	r3,r3,r2
   2c390:	880ad07a 	srli	r5,r17,1
   2c394:	180497fa 	slli	r2,r3,31
   2c398:	8900004c 	andi	r4,r17,1
   2c39c:	2922b03a 	or	r17,r5,r4
   2c3a0:	1806d07a 	srli	r3,r3,1
   2c3a4:	1462b03a 	or	r17,r2,r17
   2c3a8:	3825883a 	mov	r18,r7
   2c3ac:	003f7106 	br	2c174 <__alt_data_end+0xfffec174>
   2c3b0:	2984b03a 	or	r2,r5,r6
   2c3b4:	103f6826 	beq	r2,zero,2c158 <__alt_data_end+0xfffec158>
   2c3b8:	39c03fcc 	andi	r7,r7,255
   2c3bc:	003f6706 	br	2c15c <__alt_data_end+0xfffec15c>
   2c3c0:	4086b03a 	or	r3,r8,r2
   2c3c4:	18015226 	beq	r3,zero,2c910 <__subdf3+0x820>
   2c3c8:	00c00434 	movhi	r3,16
   2c3cc:	41400234 	orhi	r5,r8,8
   2c3d0:	18ffffc4 	addi	r3,r3,-1
   2c3d4:	28ca703a 	and	r5,r5,r3
   2c3d8:	003f7e06 	br	2c1d4 <__alt_data_end+0xfffec1d4>
   2c3dc:	10bfffc4 	addi	r2,r2,-1
   2c3e0:	1000491e 	bne	r2,zero,2c508 <__subdf3+0x418>
   2c3e4:	898fc83a 	sub	r7,r17,r6
   2c3e8:	89e3803a 	cmpltu	r17,r17,r7
   2c3ec:	1947c83a 	sub	r3,r3,r5
   2c3f0:	1c47c83a 	sub	r3,r3,r17
   2c3f4:	3823883a 	mov	r17,r7
   2c3f8:	003f9b06 	br	2c268 <__alt_data_end+0xfffec268>
   2c3fc:	2988b03a 	or	r4,r5,r6
   2c400:	203f5c26 	beq	r4,zero,2c174 <__alt_data_end+0xfffec174>
   2c404:	10bfffc4 	addi	r2,r2,-1
   2c408:	1000931e 	bne	r2,zero,2c658 <__subdf3+0x568>
   2c40c:	898d883a 	add	r6,r17,r6
   2c410:	3463803a 	cmpltu	r17,r6,r17
   2c414:	1947883a 	add	r3,r3,r5
   2c418:	88c7883a 	add	r3,r17,r3
   2c41c:	3023883a 	mov	r17,r6
   2c420:	003fd306 	br	2c370 <__alt_data_end+0xfffec370>
   2c424:	1000541e 	bne	r2,zero,2c578 <__subdf3+0x488>
   2c428:	80800044 	addi	r2,r16,1
   2c42c:	1081ffcc 	andi	r2,r2,2047
   2c430:	01000044 	movi	r4,1
   2c434:	2080a20e 	bge	r4,r2,2c6c0 <__subdf3+0x5d0>
   2c438:	8989c83a 	sub	r4,r17,r6
   2c43c:	8905803a 	cmpltu	r2,r17,r4
   2c440:	1967c83a 	sub	r19,r3,r5
   2c444:	98a7c83a 	sub	r19,r19,r2
   2c448:	9880202c 	andhi	r2,r19,128
   2c44c:	10006326 	beq	r2,zero,2c5dc <__subdf3+0x4ec>
   2c450:	3463c83a 	sub	r17,r6,r17
   2c454:	28c7c83a 	sub	r3,r5,r3
   2c458:	344d803a 	cmpltu	r6,r6,r17
   2c45c:	19a7c83a 	sub	r19,r3,r6
   2c460:	3825883a 	mov	r18,r7
   2c464:	983f861e 	bne	r19,zero,2c280 <__alt_data_end+0xfffec280>
   2c468:	8809883a 	mov	r4,r17
   2c46c:	002cbf00 	call	2cbf0 <__clzsi2>
   2c470:	10800804 	addi	r2,r2,32
   2c474:	113ffe04 	addi	r4,r2,-8
   2c478:	00c007c4 	movi	r3,31
   2c47c:	193f850e 	bge	r3,r4,2c294 <__alt_data_end+0xfffec294>
   2c480:	10bff604 	addi	r2,r2,-40
   2c484:	8884983a 	sll	r2,r17,r2
   2c488:	0023883a 	mov	r17,zero
   2c48c:	243f880e 	bge	r4,r16,2c2b0 <__alt_data_end+0xfffec2b0>
   2c490:	00ffe034 	movhi	r3,65408
   2c494:	18ffffc4 	addi	r3,r3,-1
   2c498:	8121c83a 	sub	r16,r16,r4
   2c49c:	10c6703a 	and	r3,r2,r3
   2c4a0:	003f3406 	br	2c174 <__alt_data_end+0xfffec174>
   2c4a4:	9100004c 	andi	r4,r18,1
   2c4a8:	000b883a 	mov	r5,zero
   2c4ac:	0005883a 	mov	r2,zero
   2c4b0:	003f4806 	br	2c1d4 <__alt_data_end+0xfffec1d4>
   2c4b4:	298cb03a 	or	r6,r5,r6
   2c4b8:	300cc03a 	cmpne	r6,r6,zero
   2c4bc:	0005883a 	mov	r2,zero
   2c4c0:	003f6406 	br	2c254 <__alt_data_end+0xfffec254>
   2c4c4:	10009a1e 	bne	r2,zero,2c730 <__subdf3+0x640>
   2c4c8:	82400044 	addi	r9,r16,1
   2c4cc:	4881ffcc 	andi	r2,r9,2047
   2c4d0:	02800044 	movi	r10,1
   2c4d4:	5080670e 	bge	r10,r2,2c674 <__subdf3+0x584>
   2c4d8:	0081ffc4 	movi	r2,2047
   2c4dc:	4880af26 	beq	r9,r2,2c79c <__subdf3+0x6ac>
   2c4e0:	898d883a 	add	r6,r17,r6
   2c4e4:	1945883a 	add	r2,r3,r5
   2c4e8:	3447803a 	cmpltu	r3,r6,r17
   2c4ec:	1887883a 	add	r3,r3,r2
   2c4f0:	182297fa 	slli	r17,r3,31
   2c4f4:	300cd07a 	srli	r6,r6,1
   2c4f8:	1806d07a 	srli	r3,r3,1
   2c4fc:	4821883a 	mov	r16,r9
   2c500:	89a2b03a 	or	r17,r17,r6
   2c504:	003f1b06 	br	2c174 <__alt_data_end+0xfffec174>
   2c508:	0101ffc4 	movi	r4,2047
   2c50c:	813f441e 	bne	r16,r4,2c220 <__alt_data_end+0xfffec220>
   2c510:	003f1806 	br	2c174 <__alt_data_end+0xfffec174>
   2c514:	843ff844 	addi	r16,r16,-31
   2c518:	01400804 	movi	r5,32
   2c51c:	1408d83a 	srl	r4,r2,r16
   2c520:	19405026 	beq	r3,r5,2c664 <__subdf3+0x574>
   2c524:	01401004 	movi	r5,64
   2c528:	28c7c83a 	sub	r3,r5,r3
   2c52c:	10c4983a 	sll	r2,r2,r3
   2c530:	88a2b03a 	or	r17,r17,r2
   2c534:	8822c03a 	cmpne	r17,r17,zero
   2c538:	2462b03a 	or	r17,r4,r17
   2c53c:	0007883a 	mov	r3,zero
   2c540:	0021883a 	mov	r16,zero
   2c544:	003f6d06 	br	2c2fc <__alt_data_end+0xfffec2fc>
   2c548:	11fff804 	addi	r7,r2,-32
   2c54c:	01000804 	movi	r4,32
   2c550:	29ced83a 	srl	r7,r5,r7
   2c554:	11004526 	beq	r2,r4,2c66c <__subdf3+0x57c>
   2c558:	01001004 	movi	r4,64
   2c55c:	2089c83a 	sub	r4,r4,r2
   2c560:	2904983a 	sll	r2,r5,r4
   2c564:	118cb03a 	or	r6,r2,r6
   2c568:	300cc03a 	cmpne	r6,r6,zero
   2c56c:	398cb03a 	or	r6,r7,r6
   2c570:	0005883a 	mov	r2,zero
   2c574:	003f3706 	br	2c254 <__alt_data_end+0xfffec254>
   2c578:	80002a26 	beq	r16,zero,2c624 <__subdf3+0x534>
   2c57c:	0101ffc4 	movi	r4,2047
   2c580:	49006626 	beq	r9,r4,2c71c <__subdf3+0x62c>
   2c584:	0085c83a 	sub	r2,zero,r2
   2c588:	18c02034 	orhi	r3,r3,128
   2c58c:	01000e04 	movi	r4,56
   2c590:	20807e16 	blt	r4,r2,2c78c <__subdf3+0x69c>
   2c594:	010007c4 	movi	r4,31
   2c598:	2080e716 	blt	r4,r2,2c938 <__subdf3+0x848>
   2c59c:	01000804 	movi	r4,32
   2c5a0:	2089c83a 	sub	r4,r4,r2
   2c5a4:	1914983a 	sll	r10,r3,r4
   2c5a8:	8890d83a 	srl	r8,r17,r2
   2c5ac:	8908983a 	sll	r4,r17,r4
   2c5b0:	1884d83a 	srl	r2,r3,r2
   2c5b4:	5222b03a 	or	r17,r10,r8
   2c5b8:	2006c03a 	cmpne	r3,r4,zero
   2c5bc:	88e2b03a 	or	r17,r17,r3
   2c5c0:	3463c83a 	sub	r17,r6,r17
   2c5c4:	2885c83a 	sub	r2,r5,r2
   2c5c8:	344d803a 	cmpltu	r6,r6,r17
   2c5cc:	1187c83a 	sub	r3,r2,r6
   2c5d0:	4821883a 	mov	r16,r9
   2c5d4:	3825883a 	mov	r18,r7
   2c5d8:	003f2306 	br	2c268 <__alt_data_end+0xfffec268>
   2c5dc:	24d0b03a 	or	r8,r4,r19
   2c5e0:	40001b1e 	bne	r8,zero,2c650 <__subdf3+0x560>
   2c5e4:	0005883a 	mov	r2,zero
   2c5e8:	0009883a 	mov	r4,zero
   2c5ec:	0021883a 	mov	r16,zero
   2c5f0:	003f4906 	br	2c318 <__alt_data_end+0xfffec318>
   2c5f4:	010007c4 	movi	r4,31
   2c5f8:	20803a16 	blt	r4,r2,2c6e4 <__subdf3+0x5f4>
   2c5fc:	01000804 	movi	r4,32
   2c600:	2089c83a 	sub	r4,r4,r2
   2c604:	2912983a 	sll	r9,r5,r4
   2c608:	3090d83a 	srl	r8,r6,r2
   2c60c:	3108983a 	sll	r4,r6,r4
   2c610:	2884d83a 	srl	r2,r5,r2
   2c614:	4a12b03a 	or	r9,r9,r8
   2c618:	2008c03a 	cmpne	r4,r4,zero
   2c61c:	4912b03a 	or	r9,r9,r4
   2c620:	003f4e06 	br	2c35c <__alt_data_end+0xfffec35c>
   2c624:	1c48b03a 	or	r4,r3,r17
   2c628:	20003c26 	beq	r4,zero,2c71c <__subdf3+0x62c>
   2c62c:	0084303a 	nor	r2,zero,r2
   2c630:	1000381e 	bne	r2,zero,2c714 <__subdf3+0x624>
   2c634:	3463c83a 	sub	r17,r6,r17
   2c638:	28c5c83a 	sub	r2,r5,r3
   2c63c:	344d803a 	cmpltu	r6,r6,r17
   2c640:	1187c83a 	sub	r3,r2,r6
   2c644:	4821883a 	mov	r16,r9
   2c648:	3825883a 	mov	r18,r7
   2c64c:	003f0606 	br	2c268 <__alt_data_end+0xfffec268>
   2c650:	2023883a 	mov	r17,r4
   2c654:	003f0906 	br	2c27c <__alt_data_end+0xfffec27c>
   2c658:	0101ffc4 	movi	r4,2047
   2c65c:	813f3a1e 	bne	r16,r4,2c348 <__alt_data_end+0xfffec348>
   2c660:	003ec406 	br	2c174 <__alt_data_end+0xfffec174>
   2c664:	0005883a 	mov	r2,zero
   2c668:	003fb106 	br	2c530 <__alt_data_end+0xfffec530>
   2c66c:	0005883a 	mov	r2,zero
   2c670:	003fbc06 	br	2c564 <__alt_data_end+0xfffec564>
   2c674:	1c44b03a 	or	r2,r3,r17
   2c678:	80008e1e 	bne	r16,zero,2c8b4 <__subdf3+0x7c4>
   2c67c:	1000c826 	beq	r2,zero,2c9a0 <__subdf3+0x8b0>
   2c680:	2984b03a 	or	r2,r5,r6
   2c684:	103ebb26 	beq	r2,zero,2c174 <__alt_data_end+0xfffec174>
   2c688:	8989883a 	add	r4,r17,r6
   2c68c:	1945883a 	add	r2,r3,r5
   2c690:	2447803a 	cmpltu	r3,r4,r17
   2c694:	1887883a 	add	r3,r3,r2
   2c698:	1880202c 	andhi	r2,r3,128
   2c69c:	2023883a 	mov	r17,r4
   2c6a0:	103f1626 	beq	r2,zero,2c2fc <__alt_data_end+0xfffec2fc>
   2c6a4:	00bfe034 	movhi	r2,65408
   2c6a8:	10bfffc4 	addi	r2,r2,-1
   2c6ac:	5021883a 	mov	r16,r10
   2c6b0:	1886703a 	and	r3,r3,r2
   2c6b4:	003eaf06 	br	2c174 <__alt_data_end+0xfffec174>
   2c6b8:	3825883a 	mov	r18,r7
   2c6bc:	003f0f06 	br	2c2fc <__alt_data_end+0xfffec2fc>
   2c6c0:	1c44b03a 	or	r2,r3,r17
   2c6c4:	8000251e 	bne	r16,zero,2c75c <__subdf3+0x66c>
   2c6c8:	1000661e 	bne	r2,zero,2c864 <__subdf3+0x774>
   2c6cc:	2990b03a 	or	r8,r5,r6
   2c6d0:	40009626 	beq	r8,zero,2c92c <__subdf3+0x83c>
   2c6d4:	2807883a 	mov	r3,r5
   2c6d8:	3023883a 	mov	r17,r6
   2c6dc:	3825883a 	mov	r18,r7
   2c6e0:	003ea406 	br	2c174 <__alt_data_end+0xfffec174>
   2c6e4:	127ff804 	addi	r9,r2,-32
   2c6e8:	01000804 	movi	r4,32
   2c6ec:	2a52d83a 	srl	r9,r5,r9
   2c6f0:	11008c26 	beq	r2,r4,2c924 <__subdf3+0x834>
   2c6f4:	01001004 	movi	r4,64
   2c6f8:	2085c83a 	sub	r2,r4,r2
   2c6fc:	2884983a 	sll	r2,r5,r2
   2c700:	118cb03a 	or	r6,r2,r6
   2c704:	300cc03a 	cmpne	r6,r6,zero
   2c708:	4992b03a 	or	r9,r9,r6
   2c70c:	0005883a 	mov	r2,zero
   2c710:	003f1206 	br	2c35c <__alt_data_end+0xfffec35c>
   2c714:	0101ffc4 	movi	r4,2047
   2c718:	493f9c1e 	bne	r9,r4,2c58c <__alt_data_end+0xfffec58c>
   2c71c:	2807883a 	mov	r3,r5
   2c720:	3023883a 	mov	r17,r6
   2c724:	4821883a 	mov	r16,r9
   2c728:	3825883a 	mov	r18,r7
   2c72c:	003e9106 	br	2c174 <__alt_data_end+0xfffec174>
   2c730:	80001f1e 	bne	r16,zero,2c7b0 <__subdf3+0x6c0>
   2c734:	1c48b03a 	or	r4,r3,r17
   2c738:	20005a26 	beq	r4,zero,2c8a4 <__subdf3+0x7b4>
   2c73c:	0084303a 	nor	r2,zero,r2
   2c740:	1000561e 	bne	r2,zero,2c89c <__subdf3+0x7ac>
   2c744:	89a3883a 	add	r17,r17,r6
   2c748:	1945883a 	add	r2,r3,r5
   2c74c:	898d803a 	cmpltu	r6,r17,r6
   2c750:	3087883a 	add	r3,r6,r2
   2c754:	4821883a 	mov	r16,r9
   2c758:	003f0506 	br	2c370 <__alt_data_end+0xfffec370>
   2c75c:	10002b1e 	bne	r2,zero,2c80c <__subdf3+0x71c>
   2c760:	2984b03a 	or	r2,r5,r6
   2c764:	10008026 	beq	r2,zero,2c968 <__subdf3+0x878>
   2c768:	2807883a 	mov	r3,r5
   2c76c:	3023883a 	mov	r17,r6
   2c770:	3825883a 	mov	r18,r7
   2c774:	0401ffc4 	movi	r16,2047
   2c778:	003e7e06 	br	2c174 <__alt_data_end+0xfffec174>
   2c77c:	3809883a 	mov	r4,r7
   2c780:	0011883a 	mov	r8,zero
   2c784:	0005883a 	mov	r2,zero
   2c788:	003ee306 	br	2c318 <__alt_data_end+0xfffec318>
   2c78c:	1c62b03a 	or	r17,r3,r17
   2c790:	8822c03a 	cmpne	r17,r17,zero
   2c794:	0005883a 	mov	r2,zero
   2c798:	003f8906 	br	2c5c0 <__alt_data_end+0xfffec5c0>
   2c79c:	3809883a 	mov	r4,r7
   2c7a0:	4821883a 	mov	r16,r9
   2c7a4:	0011883a 	mov	r8,zero
   2c7a8:	0005883a 	mov	r2,zero
   2c7ac:	003eda06 	br	2c318 <__alt_data_end+0xfffec318>
   2c7b0:	0101ffc4 	movi	r4,2047
   2c7b4:	49003b26 	beq	r9,r4,2c8a4 <__subdf3+0x7b4>
   2c7b8:	0085c83a 	sub	r2,zero,r2
   2c7bc:	18c02034 	orhi	r3,r3,128
   2c7c0:	01000e04 	movi	r4,56
   2c7c4:	20806e16 	blt	r4,r2,2c980 <__subdf3+0x890>
   2c7c8:	010007c4 	movi	r4,31
   2c7cc:	20807716 	blt	r4,r2,2c9ac <__subdf3+0x8bc>
   2c7d0:	01000804 	movi	r4,32
   2c7d4:	2089c83a 	sub	r4,r4,r2
   2c7d8:	1914983a 	sll	r10,r3,r4
   2c7dc:	8890d83a 	srl	r8,r17,r2
   2c7e0:	8908983a 	sll	r4,r17,r4
   2c7e4:	1884d83a 	srl	r2,r3,r2
   2c7e8:	5222b03a 	or	r17,r10,r8
   2c7ec:	2006c03a 	cmpne	r3,r4,zero
   2c7f0:	88e2b03a 	or	r17,r17,r3
   2c7f4:	89a3883a 	add	r17,r17,r6
   2c7f8:	1145883a 	add	r2,r2,r5
   2c7fc:	898d803a 	cmpltu	r6,r17,r6
   2c800:	3087883a 	add	r3,r6,r2
   2c804:	4821883a 	mov	r16,r9
   2c808:	003ed906 	br	2c370 <__alt_data_end+0xfffec370>
   2c80c:	2984b03a 	or	r2,r5,r6
   2c810:	10004226 	beq	r2,zero,2c91c <__subdf3+0x82c>
   2c814:	1808d0fa 	srli	r4,r3,3
   2c818:	8822d0fa 	srli	r17,r17,3
   2c81c:	1806977a 	slli	r3,r3,29
   2c820:	2080022c 	andhi	r2,r4,8
   2c824:	1c62b03a 	or	r17,r3,r17
   2c828:	10000826 	beq	r2,zero,2c84c <__subdf3+0x75c>
   2c82c:	2812d0fa 	srli	r9,r5,3
   2c830:	4880022c 	andhi	r2,r9,8
   2c834:	1000051e 	bne	r2,zero,2c84c <__subdf3+0x75c>
   2c838:	300cd0fa 	srli	r6,r6,3
   2c83c:	2804977a 	slli	r2,r5,29
   2c840:	4809883a 	mov	r4,r9
   2c844:	3825883a 	mov	r18,r7
   2c848:	11a2b03a 	or	r17,r2,r6
   2c84c:	8806d77a 	srli	r3,r17,29
   2c850:	200890fa 	slli	r4,r4,3
   2c854:	882290fa 	slli	r17,r17,3
   2c858:	0401ffc4 	movi	r16,2047
   2c85c:	1906b03a 	or	r3,r3,r4
   2c860:	003e4406 	br	2c174 <__alt_data_end+0xfffec174>
   2c864:	2984b03a 	or	r2,r5,r6
   2c868:	103e4226 	beq	r2,zero,2c174 <__alt_data_end+0xfffec174>
   2c86c:	8989c83a 	sub	r4,r17,r6
   2c870:	8911803a 	cmpltu	r8,r17,r4
   2c874:	1945c83a 	sub	r2,r3,r5
   2c878:	1205c83a 	sub	r2,r2,r8
   2c87c:	1200202c 	andhi	r8,r2,128
   2c880:	403e9a26 	beq	r8,zero,2c2ec <__alt_data_end+0xfffec2ec>
   2c884:	3463c83a 	sub	r17,r6,r17
   2c888:	28c5c83a 	sub	r2,r5,r3
   2c88c:	344d803a 	cmpltu	r6,r6,r17
   2c890:	1187c83a 	sub	r3,r2,r6
   2c894:	3825883a 	mov	r18,r7
   2c898:	003e3606 	br	2c174 <__alt_data_end+0xfffec174>
   2c89c:	0101ffc4 	movi	r4,2047
   2c8a0:	493fc71e 	bne	r9,r4,2c7c0 <__alt_data_end+0xfffec7c0>
   2c8a4:	2807883a 	mov	r3,r5
   2c8a8:	3023883a 	mov	r17,r6
   2c8ac:	4821883a 	mov	r16,r9
   2c8b0:	003e3006 	br	2c174 <__alt_data_end+0xfffec174>
   2c8b4:	10003626 	beq	r2,zero,2c990 <__subdf3+0x8a0>
   2c8b8:	2984b03a 	or	r2,r5,r6
   2c8bc:	10001726 	beq	r2,zero,2c91c <__subdf3+0x82c>
   2c8c0:	1808d0fa 	srli	r4,r3,3
   2c8c4:	8822d0fa 	srli	r17,r17,3
   2c8c8:	1806977a 	slli	r3,r3,29
   2c8cc:	2080022c 	andhi	r2,r4,8
   2c8d0:	1c62b03a 	or	r17,r3,r17
   2c8d4:	10000726 	beq	r2,zero,2c8f4 <__subdf3+0x804>
   2c8d8:	2812d0fa 	srli	r9,r5,3
   2c8dc:	4880022c 	andhi	r2,r9,8
   2c8e0:	1000041e 	bne	r2,zero,2c8f4 <__subdf3+0x804>
   2c8e4:	300cd0fa 	srli	r6,r6,3
   2c8e8:	2804977a 	slli	r2,r5,29
   2c8ec:	4809883a 	mov	r4,r9
   2c8f0:	11a2b03a 	or	r17,r2,r6
   2c8f4:	8806d77a 	srli	r3,r17,29
   2c8f8:	200890fa 	slli	r4,r4,3
   2c8fc:	882290fa 	slli	r17,r17,3
   2c900:	3825883a 	mov	r18,r7
   2c904:	1906b03a 	or	r3,r3,r4
   2c908:	0401ffc4 	movi	r16,2047
   2c90c:	003e1906 	br	2c174 <__alt_data_end+0xfffec174>
   2c910:	000b883a 	mov	r5,zero
   2c914:	0005883a 	mov	r2,zero
   2c918:	003e2e06 	br	2c1d4 <__alt_data_end+0xfffec1d4>
   2c91c:	0401ffc4 	movi	r16,2047
   2c920:	003e1406 	br	2c174 <__alt_data_end+0xfffec174>
   2c924:	0005883a 	mov	r2,zero
   2c928:	003f7506 	br	2c700 <__alt_data_end+0xfffec700>
   2c92c:	0005883a 	mov	r2,zero
   2c930:	0009883a 	mov	r4,zero
   2c934:	003e7806 	br	2c318 <__alt_data_end+0xfffec318>
   2c938:	123ff804 	addi	r8,r2,-32
   2c93c:	01000804 	movi	r4,32
   2c940:	1a10d83a 	srl	r8,r3,r8
   2c944:	11002526 	beq	r2,r4,2c9dc <__subdf3+0x8ec>
   2c948:	01001004 	movi	r4,64
   2c94c:	2085c83a 	sub	r2,r4,r2
   2c950:	1884983a 	sll	r2,r3,r2
   2c954:	1444b03a 	or	r2,r2,r17
   2c958:	1004c03a 	cmpne	r2,r2,zero
   2c95c:	40a2b03a 	or	r17,r8,r2
   2c960:	0005883a 	mov	r2,zero
   2c964:	003f1606 	br	2c5c0 <__alt_data_end+0xfffec5c0>
   2c968:	02000434 	movhi	r8,16
   2c96c:	0009883a 	mov	r4,zero
   2c970:	423fffc4 	addi	r8,r8,-1
   2c974:	00bfffc4 	movi	r2,-1
   2c978:	0401ffc4 	movi	r16,2047
   2c97c:	003e6606 	br	2c318 <__alt_data_end+0xfffec318>
   2c980:	1c62b03a 	or	r17,r3,r17
   2c984:	8822c03a 	cmpne	r17,r17,zero
   2c988:	0005883a 	mov	r2,zero
   2c98c:	003f9906 	br	2c7f4 <__alt_data_end+0xfffec7f4>
   2c990:	2807883a 	mov	r3,r5
   2c994:	3023883a 	mov	r17,r6
   2c998:	0401ffc4 	movi	r16,2047
   2c99c:	003df506 	br	2c174 <__alt_data_end+0xfffec174>
   2c9a0:	2807883a 	mov	r3,r5
   2c9a4:	3023883a 	mov	r17,r6
   2c9a8:	003df206 	br	2c174 <__alt_data_end+0xfffec174>
   2c9ac:	123ff804 	addi	r8,r2,-32
   2c9b0:	01000804 	movi	r4,32
   2c9b4:	1a10d83a 	srl	r8,r3,r8
   2c9b8:	11000a26 	beq	r2,r4,2c9e4 <__subdf3+0x8f4>
   2c9bc:	01001004 	movi	r4,64
   2c9c0:	2085c83a 	sub	r2,r4,r2
   2c9c4:	1884983a 	sll	r2,r3,r2
   2c9c8:	1444b03a 	or	r2,r2,r17
   2c9cc:	1004c03a 	cmpne	r2,r2,zero
   2c9d0:	40a2b03a 	or	r17,r8,r2
   2c9d4:	0005883a 	mov	r2,zero
   2c9d8:	003f8606 	br	2c7f4 <__alt_data_end+0xfffec7f4>
   2c9dc:	0005883a 	mov	r2,zero
   2c9e0:	003fdc06 	br	2c954 <__alt_data_end+0xfffec954>
   2c9e4:	0005883a 	mov	r2,zero
   2c9e8:	003ff706 	br	2c9c8 <__alt_data_end+0xfffec9c8>

0002c9ec <__fixdfsi>:
   2c9ec:	280cd53a 	srli	r6,r5,20
   2c9f0:	00c00434 	movhi	r3,16
   2c9f4:	18ffffc4 	addi	r3,r3,-1
   2c9f8:	3181ffcc 	andi	r6,r6,2047
   2c9fc:	01c0ff84 	movi	r7,1022
   2ca00:	28c6703a 	and	r3,r5,r3
   2ca04:	280ad7fa 	srli	r5,r5,31
   2ca08:	3980120e 	bge	r7,r6,2ca54 <__fixdfsi+0x68>
   2ca0c:	00810744 	movi	r2,1053
   2ca10:	11800c16 	blt	r2,r6,2ca44 <__fixdfsi+0x58>
   2ca14:	00810cc4 	movi	r2,1075
   2ca18:	1185c83a 	sub	r2,r2,r6
   2ca1c:	01c007c4 	movi	r7,31
   2ca20:	18c00434 	orhi	r3,r3,16
   2ca24:	38800d16 	blt	r7,r2,2ca5c <__fixdfsi+0x70>
   2ca28:	31befb44 	addi	r6,r6,-1043
   2ca2c:	2084d83a 	srl	r2,r4,r2
   2ca30:	1986983a 	sll	r3,r3,r6
   2ca34:	1884b03a 	or	r2,r3,r2
   2ca38:	28000726 	beq	r5,zero,2ca58 <__fixdfsi+0x6c>
   2ca3c:	0085c83a 	sub	r2,zero,r2
   2ca40:	f800283a 	ret
   2ca44:	00a00034 	movhi	r2,32768
   2ca48:	10bfffc4 	addi	r2,r2,-1
   2ca4c:	2885883a 	add	r2,r5,r2
   2ca50:	f800283a 	ret
   2ca54:	0005883a 	mov	r2,zero
   2ca58:	f800283a 	ret
   2ca5c:	008104c4 	movi	r2,1043
   2ca60:	1185c83a 	sub	r2,r2,r6
   2ca64:	1884d83a 	srl	r2,r3,r2
   2ca68:	003ff306 	br	2ca38 <__alt_data_end+0xfffeca38>

0002ca6c <__floatsidf>:
   2ca6c:	defffd04 	addi	sp,sp,-12
   2ca70:	dfc00215 	stw	ra,8(sp)
   2ca74:	dc400115 	stw	r17,4(sp)
   2ca78:	dc000015 	stw	r16,0(sp)
   2ca7c:	20002b26 	beq	r4,zero,2cb2c <__floatsidf+0xc0>
   2ca80:	2023883a 	mov	r17,r4
   2ca84:	2020d7fa 	srli	r16,r4,31
   2ca88:	20002d16 	blt	r4,zero,2cb40 <__floatsidf+0xd4>
   2ca8c:	8809883a 	mov	r4,r17
   2ca90:	002cbf00 	call	2cbf0 <__clzsi2>
   2ca94:	01410784 	movi	r5,1054
   2ca98:	288bc83a 	sub	r5,r5,r2
   2ca9c:	01010cc4 	movi	r4,1075
   2caa0:	2149c83a 	sub	r4,r4,r5
   2caa4:	00c007c4 	movi	r3,31
   2caa8:	1900160e 	bge	r3,r4,2cb04 <__floatsidf+0x98>
   2caac:	00c104c4 	movi	r3,1043
   2cab0:	1947c83a 	sub	r3,r3,r5
   2cab4:	88c6983a 	sll	r3,r17,r3
   2cab8:	00800434 	movhi	r2,16
   2cabc:	10bfffc4 	addi	r2,r2,-1
   2cac0:	1886703a 	and	r3,r3,r2
   2cac4:	2941ffcc 	andi	r5,r5,2047
   2cac8:	800d883a 	mov	r6,r16
   2cacc:	0005883a 	mov	r2,zero
   2cad0:	280a953a 	slli	r5,r5,20
   2cad4:	31803fcc 	andi	r6,r6,255
   2cad8:	01000434 	movhi	r4,16
   2cadc:	300c97fa 	slli	r6,r6,31
   2cae0:	213fffc4 	addi	r4,r4,-1
   2cae4:	1906703a 	and	r3,r3,r4
   2cae8:	1946b03a 	or	r3,r3,r5
   2caec:	1986b03a 	or	r3,r3,r6
   2caf0:	dfc00217 	ldw	ra,8(sp)
   2caf4:	dc400117 	ldw	r17,4(sp)
   2caf8:	dc000017 	ldw	r16,0(sp)
   2cafc:	dec00304 	addi	sp,sp,12
   2cb00:	f800283a 	ret
   2cb04:	00c002c4 	movi	r3,11
   2cb08:	1887c83a 	sub	r3,r3,r2
   2cb0c:	88c6d83a 	srl	r3,r17,r3
   2cb10:	8904983a 	sll	r2,r17,r4
   2cb14:	01000434 	movhi	r4,16
   2cb18:	213fffc4 	addi	r4,r4,-1
   2cb1c:	2941ffcc 	andi	r5,r5,2047
   2cb20:	1906703a 	and	r3,r3,r4
   2cb24:	800d883a 	mov	r6,r16
   2cb28:	003fe906 	br	2cad0 <__alt_data_end+0xfffecad0>
   2cb2c:	000d883a 	mov	r6,zero
   2cb30:	000b883a 	mov	r5,zero
   2cb34:	0007883a 	mov	r3,zero
   2cb38:	0005883a 	mov	r2,zero
   2cb3c:	003fe406 	br	2cad0 <__alt_data_end+0xfffecad0>
   2cb40:	0123c83a 	sub	r17,zero,r4
   2cb44:	003fd106 	br	2ca8c <__alt_data_end+0xfffeca8c>

0002cb48 <__floatunsidf>:
   2cb48:	defffe04 	addi	sp,sp,-8
   2cb4c:	dc000015 	stw	r16,0(sp)
   2cb50:	dfc00115 	stw	ra,4(sp)
   2cb54:	2021883a 	mov	r16,r4
   2cb58:	20002226 	beq	r4,zero,2cbe4 <__floatunsidf+0x9c>
   2cb5c:	002cbf00 	call	2cbf0 <__clzsi2>
   2cb60:	01010784 	movi	r4,1054
   2cb64:	2089c83a 	sub	r4,r4,r2
   2cb68:	01810cc4 	movi	r6,1075
   2cb6c:	310dc83a 	sub	r6,r6,r4
   2cb70:	00c007c4 	movi	r3,31
   2cb74:	1980120e 	bge	r3,r6,2cbc0 <__floatunsidf+0x78>
   2cb78:	00c104c4 	movi	r3,1043
   2cb7c:	1907c83a 	sub	r3,r3,r4
   2cb80:	80ca983a 	sll	r5,r16,r3
   2cb84:	00800434 	movhi	r2,16
   2cb88:	10bfffc4 	addi	r2,r2,-1
   2cb8c:	2101ffcc 	andi	r4,r4,2047
   2cb90:	0021883a 	mov	r16,zero
   2cb94:	288a703a 	and	r5,r5,r2
   2cb98:	2008953a 	slli	r4,r4,20
   2cb9c:	00c00434 	movhi	r3,16
   2cba0:	18ffffc4 	addi	r3,r3,-1
   2cba4:	28c6703a 	and	r3,r5,r3
   2cba8:	8005883a 	mov	r2,r16
   2cbac:	1906b03a 	or	r3,r3,r4
   2cbb0:	dfc00117 	ldw	ra,4(sp)
   2cbb4:	dc000017 	ldw	r16,0(sp)
   2cbb8:	dec00204 	addi	sp,sp,8
   2cbbc:	f800283a 	ret
   2cbc0:	00c002c4 	movi	r3,11
   2cbc4:	188bc83a 	sub	r5,r3,r2
   2cbc8:	814ad83a 	srl	r5,r16,r5
   2cbcc:	00c00434 	movhi	r3,16
   2cbd0:	18ffffc4 	addi	r3,r3,-1
   2cbd4:	81a0983a 	sll	r16,r16,r6
   2cbd8:	2101ffcc 	andi	r4,r4,2047
   2cbdc:	28ca703a 	and	r5,r5,r3
   2cbe0:	003fed06 	br	2cb98 <__alt_data_end+0xfffecb98>
   2cbe4:	0009883a 	mov	r4,zero
   2cbe8:	000b883a 	mov	r5,zero
   2cbec:	003fea06 	br	2cb98 <__alt_data_end+0xfffecb98>

0002cbf0 <__clzsi2>:
   2cbf0:	00bfffd4 	movui	r2,65535
   2cbf4:	11000536 	bltu	r2,r4,2cc0c <__clzsi2+0x1c>
   2cbf8:	00803fc4 	movi	r2,255
   2cbfc:	11000f36 	bltu	r2,r4,2cc3c <__clzsi2+0x4c>
   2cc00:	00800804 	movi	r2,32
   2cc04:	0007883a 	mov	r3,zero
   2cc08:	00000506 	br	2cc20 <__clzsi2+0x30>
   2cc0c:	00804034 	movhi	r2,256
   2cc10:	10bfffc4 	addi	r2,r2,-1
   2cc14:	11000c2e 	bgeu	r2,r4,2cc48 <__clzsi2+0x58>
   2cc18:	00800204 	movi	r2,8
   2cc1c:	00c00604 	movi	r3,24
   2cc20:	20c8d83a 	srl	r4,r4,r3
   2cc24:	00c000f4 	movhi	r3,3
   2cc28:	18fd7e04 	addi	r3,r3,-2568
   2cc2c:	1909883a 	add	r4,r3,r4
   2cc30:	20c00003 	ldbu	r3,0(r4)
   2cc34:	10c5c83a 	sub	r2,r2,r3
   2cc38:	f800283a 	ret
   2cc3c:	00800604 	movi	r2,24
   2cc40:	00c00204 	movi	r3,8
   2cc44:	003ff606 	br	2cc20 <__alt_data_end+0xfffecc20>
   2cc48:	00800404 	movi	r2,16
   2cc4c:	1007883a 	mov	r3,r2
   2cc50:	003ff306 	br	2cc20 <__alt_data_end+0xfffecc20>

0002cc54 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2cc54:	defffe04 	addi	sp,sp,-8
   2cc58:	dfc00115 	stw	ra,4(sp)
   2cc5c:	df000015 	stw	fp,0(sp)
   2cc60:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2cc64:	008000f4 	movhi	r2,3
   2cc68:	10848104 	addi	r2,r2,4612
   2cc6c:	10800017 	ldw	r2,0(r2)
   2cc70:	10000526 	beq	r2,zero,2cc88 <alt_get_errno+0x34>
   2cc74:	008000f4 	movhi	r2,3
   2cc78:	10848104 	addi	r2,r2,4612
   2cc7c:	10800017 	ldw	r2,0(r2)
   2cc80:	103ee83a 	callr	r2
   2cc84:	00000206 	br	2cc90 <alt_get_errno+0x3c>
   2cc88:	008000f4 	movhi	r2,3
   2cc8c:	108b4704 	addi	r2,r2,11548
}
   2cc90:	e037883a 	mov	sp,fp
   2cc94:	dfc00117 	ldw	ra,4(sp)
   2cc98:	df000017 	ldw	fp,0(sp)
   2cc9c:	dec00204 	addi	sp,sp,8
   2cca0:	f800283a 	ret

0002cca4 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2cca4:	defffb04 	addi	sp,sp,-20
   2cca8:	dfc00415 	stw	ra,16(sp)
   2ccac:	df000315 	stw	fp,12(sp)
   2ccb0:	df000304 	addi	fp,sp,12
   2ccb4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2ccb8:	e0bfff17 	ldw	r2,-4(fp)
   2ccbc:	10000616 	blt	r2,zero,2ccd8 <close+0x34>
   2ccc0:	e0bfff17 	ldw	r2,-4(fp)
   2ccc4:	10c00324 	muli	r3,r2,12
   2ccc8:	008000f4 	movhi	r2,3
   2cccc:	10bffe04 	addi	r2,r2,-8
   2ccd0:	1885883a 	add	r2,r3,r2
   2ccd4:	00000106 	br	2ccdc <close+0x38>
   2ccd8:	0005883a 	mov	r2,zero
   2ccdc:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   2cce0:	e0bffd17 	ldw	r2,-12(fp)
   2cce4:	10001926 	beq	r2,zero,2cd4c <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2cce8:	e0bffd17 	ldw	r2,-12(fp)
   2ccec:	10800017 	ldw	r2,0(r2)
   2ccf0:	10800417 	ldw	r2,16(r2)
   2ccf4:	10000626 	beq	r2,zero,2cd10 <close+0x6c>
   2ccf8:	e0bffd17 	ldw	r2,-12(fp)
   2ccfc:	10800017 	ldw	r2,0(r2)
   2cd00:	10800417 	ldw	r2,16(r2)
   2cd04:	e13ffd17 	ldw	r4,-12(fp)
   2cd08:	103ee83a 	callr	r2
   2cd0c:	00000106 	br	2cd14 <close+0x70>
   2cd10:	0005883a 	mov	r2,zero
   2cd14:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2cd18:	e13fff17 	ldw	r4,-4(fp)
   2cd1c:	002d3b40 	call	2d3b4 <alt_release_fd>
    if (rval < 0)
   2cd20:	e0bffe17 	ldw	r2,-8(fp)
   2cd24:	1000070e 	bge	r2,zero,2cd44 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   2cd28:	002cc540 	call	2cc54 <alt_get_errno>
   2cd2c:	1007883a 	mov	r3,r2
   2cd30:	e0bffe17 	ldw	r2,-8(fp)
   2cd34:	0085c83a 	sub	r2,zero,r2
   2cd38:	18800015 	stw	r2,0(r3)
      return -1;
   2cd3c:	00bfffc4 	movi	r2,-1
   2cd40:	00000706 	br	2cd60 <close+0xbc>
    }
    return 0;
   2cd44:	0005883a 	mov	r2,zero
   2cd48:	00000506 	br	2cd60 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2cd4c:	002cc540 	call	2cc54 <alt_get_errno>
   2cd50:	1007883a 	mov	r3,r2
   2cd54:	00801444 	movi	r2,81
   2cd58:	18800015 	stw	r2,0(r3)
    return -1;
   2cd5c:	00bfffc4 	movi	r2,-1
  }
}
   2cd60:	e037883a 	mov	sp,fp
   2cd64:	dfc00117 	ldw	ra,4(sp)
   2cd68:	df000017 	ldw	fp,0(sp)
   2cd6c:	dec00204 	addi	sp,sp,8
   2cd70:	f800283a 	ret

0002cd74 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2cd74:	defffc04 	addi	sp,sp,-16
   2cd78:	df000315 	stw	fp,12(sp)
   2cd7c:	df000304 	addi	fp,sp,12
   2cd80:	e13ffd15 	stw	r4,-12(fp)
   2cd84:	e17ffe15 	stw	r5,-8(fp)
   2cd88:	e1bfff15 	stw	r6,-4(fp)
  return len;
   2cd8c:	e0bfff17 	ldw	r2,-4(fp)
}
   2cd90:	e037883a 	mov	sp,fp
   2cd94:	df000017 	ldw	fp,0(sp)
   2cd98:	dec00104 	addi	sp,sp,4
   2cd9c:	f800283a 	ret

0002cda0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2cda0:	defffe04 	addi	sp,sp,-8
   2cda4:	dfc00115 	stw	ra,4(sp)
   2cda8:	df000015 	stw	fp,0(sp)
   2cdac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2cdb0:	008000f4 	movhi	r2,3
   2cdb4:	10848104 	addi	r2,r2,4612
   2cdb8:	10800017 	ldw	r2,0(r2)
   2cdbc:	10000526 	beq	r2,zero,2cdd4 <alt_get_errno+0x34>
   2cdc0:	008000f4 	movhi	r2,3
   2cdc4:	10848104 	addi	r2,r2,4612
   2cdc8:	10800017 	ldw	r2,0(r2)
   2cdcc:	103ee83a 	callr	r2
   2cdd0:	00000206 	br	2cddc <alt_get_errno+0x3c>
   2cdd4:	008000f4 	movhi	r2,3
   2cdd8:	108b4704 	addi	r2,r2,11548
}
   2cddc:	e037883a 	mov	sp,fp
   2cde0:	dfc00117 	ldw	ra,4(sp)
   2cde4:	df000017 	ldw	fp,0(sp)
   2cde8:	dec00204 	addi	sp,sp,8
   2cdec:	f800283a 	ret

0002cdf0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2cdf0:	defffb04 	addi	sp,sp,-20
   2cdf4:	dfc00415 	stw	ra,16(sp)
   2cdf8:	df000315 	stw	fp,12(sp)
   2cdfc:	df000304 	addi	fp,sp,12
   2ce00:	e13ffe15 	stw	r4,-8(fp)
   2ce04:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2ce08:	e0bffe17 	ldw	r2,-8(fp)
   2ce0c:	10000616 	blt	r2,zero,2ce28 <fstat+0x38>
   2ce10:	e0bffe17 	ldw	r2,-8(fp)
   2ce14:	10c00324 	muli	r3,r2,12
   2ce18:	008000f4 	movhi	r2,3
   2ce1c:	10bffe04 	addi	r2,r2,-8
   2ce20:	1885883a 	add	r2,r3,r2
   2ce24:	00000106 	br	2ce2c <fstat+0x3c>
   2ce28:	0005883a 	mov	r2,zero
   2ce2c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   2ce30:	e0bffd17 	ldw	r2,-12(fp)
   2ce34:	10001026 	beq	r2,zero,2ce78 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2ce38:	e0bffd17 	ldw	r2,-12(fp)
   2ce3c:	10800017 	ldw	r2,0(r2)
   2ce40:	10800817 	ldw	r2,32(r2)
   2ce44:	10000726 	beq	r2,zero,2ce64 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   2ce48:	e0bffd17 	ldw	r2,-12(fp)
   2ce4c:	10800017 	ldw	r2,0(r2)
   2ce50:	10800817 	ldw	r2,32(r2)
   2ce54:	e17fff17 	ldw	r5,-4(fp)
   2ce58:	e13ffd17 	ldw	r4,-12(fp)
   2ce5c:	103ee83a 	callr	r2
   2ce60:	00000a06 	br	2ce8c <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2ce64:	e0bfff17 	ldw	r2,-4(fp)
   2ce68:	00c80004 	movi	r3,8192
   2ce6c:	10c00115 	stw	r3,4(r2)
      return 0;
   2ce70:	0005883a 	mov	r2,zero
   2ce74:	00000506 	br	2ce8c <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2ce78:	002cda00 	call	2cda0 <alt_get_errno>
   2ce7c:	1007883a 	mov	r3,r2
   2ce80:	00801444 	movi	r2,81
   2ce84:	18800015 	stw	r2,0(r3)
    return -1;
   2ce88:	00bfffc4 	movi	r2,-1
  }
}
   2ce8c:	e037883a 	mov	sp,fp
   2ce90:	dfc00117 	ldw	ra,4(sp)
   2ce94:	df000017 	ldw	fp,0(sp)
   2ce98:	dec00204 	addi	sp,sp,8
   2ce9c:	f800283a 	ret

0002cea0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2cea0:	defffe04 	addi	sp,sp,-8
   2cea4:	dfc00115 	stw	ra,4(sp)
   2cea8:	df000015 	stw	fp,0(sp)
   2ceac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2ceb0:	008000f4 	movhi	r2,3
   2ceb4:	10848104 	addi	r2,r2,4612
   2ceb8:	10800017 	ldw	r2,0(r2)
   2cebc:	10000526 	beq	r2,zero,2ced4 <alt_get_errno+0x34>
   2cec0:	008000f4 	movhi	r2,3
   2cec4:	10848104 	addi	r2,r2,4612
   2cec8:	10800017 	ldw	r2,0(r2)
   2cecc:	103ee83a 	callr	r2
   2ced0:	00000206 	br	2cedc <alt_get_errno+0x3c>
   2ced4:	008000f4 	movhi	r2,3
   2ced8:	108b4704 	addi	r2,r2,11548
}
   2cedc:	e037883a 	mov	sp,fp
   2cee0:	dfc00117 	ldw	ra,4(sp)
   2cee4:	df000017 	ldw	fp,0(sp)
   2cee8:	dec00204 	addi	sp,sp,8
   2ceec:	f800283a 	ret

0002cef0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2cef0:	deffed04 	addi	sp,sp,-76
   2cef4:	dfc01215 	stw	ra,72(sp)
   2cef8:	df001115 	stw	fp,68(sp)
   2cefc:	df001104 	addi	fp,sp,68
   2cf00:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2cf04:	e0bfff17 	ldw	r2,-4(fp)
   2cf08:	10000616 	blt	r2,zero,2cf24 <isatty+0x34>
   2cf0c:	e0bfff17 	ldw	r2,-4(fp)
   2cf10:	10c00324 	muli	r3,r2,12
   2cf14:	008000f4 	movhi	r2,3
   2cf18:	10bffe04 	addi	r2,r2,-8
   2cf1c:	1885883a 	add	r2,r3,r2
   2cf20:	00000106 	br	2cf28 <isatty+0x38>
   2cf24:	0005883a 	mov	r2,zero
   2cf28:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   2cf2c:	e0bfef17 	ldw	r2,-68(fp)
   2cf30:	10000e26 	beq	r2,zero,2cf6c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2cf34:	e0bfef17 	ldw	r2,-68(fp)
   2cf38:	10800017 	ldw	r2,0(r2)
   2cf3c:	10800817 	ldw	r2,32(r2)
   2cf40:	1000021e 	bne	r2,zero,2cf4c <isatty+0x5c>
    {
      return 1;
   2cf44:	00800044 	movi	r2,1
   2cf48:	00000d06 	br	2cf80 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2cf4c:	e0bff004 	addi	r2,fp,-64
   2cf50:	100b883a 	mov	r5,r2
   2cf54:	e13fff17 	ldw	r4,-4(fp)
   2cf58:	002cdf00 	call	2cdf0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2cf5c:	e0bff117 	ldw	r2,-60(fp)
   2cf60:	10880020 	cmpeqi	r2,r2,8192
   2cf64:	10803fcc 	andi	r2,r2,255
   2cf68:	00000506 	br	2cf80 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2cf6c:	002cea00 	call	2cea0 <alt_get_errno>
   2cf70:	1007883a 	mov	r3,r2
   2cf74:	00801444 	movi	r2,81
   2cf78:	18800015 	stw	r2,0(r3)
    return 0;
   2cf7c:	0005883a 	mov	r2,zero
  }
}
   2cf80:	e037883a 	mov	sp,fp
   2cf84:	dfc00117 	ldw	ra,4(sp)
   2cf88:	df000017 	ldw	fp,0(sp)
   2cf8c:	dec00204 	addi	sp,sp,8
   2cf90:	f800283a 	ret

0002cf94 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2cf94:	defffc04 	addi	sp,sp,-16
   2cf98:	df000315 	stw	fp,12(sp)
   2cf9c:	df000304 	addi	fp,sp,12
   2cfa0:	e13ffd15 	stw	r4,-12(fp)
   2cfa4:	e17ffe15 	stw	r5,-8(fp)
   2cfa8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   2cfac:	e0fffe17 	ldw	r3,-8(fp)
   2cfb0:	e0bffd17 	ldw	r2,-12(fp)
   2cfb4:	18800c26 	beq	r3,r2,2cfe8 <alt_load_section+0x54>
  {
    while( to != end )
   2cfb8:	00000806 	br	2cfdc <alt_load_section+0x48>
    {
      *to++ = *from++;
   2cfbc:	e0bffe17 	ldw	r2,-8(fp)
   2cfc0:	10c00104 	addi	r3,r2,4
   2cfc4:	e0fffe15 	stw	r3,-8(fp)
   2cfc8:	e0fffd17 	ldw	r3,-12(fp)
   2cfcc:	19000104 	addi	r4,r3,4
   2cfd0:	e13ffd15 	stw	r4,-12(fp)
   2cfd4:	18c00017 	ldw	r3,0(r3)
   2cfd8:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   2cfdc:	e0fffe17 	ldw	r3,-8(fp)
   2cfe0:	e0bfff17 	ldw	r2,-4(fp)
   2cfe4:	18bff51e 	bne	r3,r2,2cfbc <__alt_data_end+0xfffecfbc>
    {
      *to++ = *from++;
    }
  }
}
   2cfe8:	0001883a 	nop
   2cfec:	e037883a 	mov	sp,fp
   2cff0:	df000017 	ldw	fp,0(sp)
   2cff4:	dec00104 	addi	sp,sp,4
   2cff8:	f800283a 	ret

0002cffc <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2cffc:	defffe04 	addi	sp,sp,-8
   2d000:	dfc00115 	stw	ra,4(sp)
   2d004:	df000015 	stw	fp,0(sp)
   2d008:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2d00c:	018000f4 	movhi	r6,3
   2d010:	31848604 	addi	r6,r6,4632
   2d014:	014000f4 	movhi	r5,3
   2d018:	297dcb04 	addi	r5,r5,-2260
   2d01c:	010000f4 	movhi	r4,3
   2d020:	21048604 	addi	r4,r4,4632
   2d024:	002cf940 	call	2cf94 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2d028:	018000b4 	movhi	r6,2
   2d02c:	31809104 	addi	r6,r6,580
   2d030:	014000b4 	movhi	r5,2
   2d034:	29400804 	addi	r5,r5,32
   2d038:	010000b4 	movhi	r4,2
   2d03c:	21000804 	addi	r4,r4,32
   2d040:	002cf940 	call	2cf94 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2d044:	018000f4 	movhi	r6,3
   2d048:	31bdcb04 	addi	r6,r6,-2260
   2d04c:	014000f4 	movhi	r5,3
   2d050:	297d0504 	addi	r5,r5,-3052
   2d054:	010000f4 	movhi	r4,3
   2d058:	213d0504 	addi	r4,r4,-3052
   2d05c:	002cf940 	call	2cf94 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2d060:	002e2800 	call	2e280 <alt_dcache_flush_all>
  alt_icache_flush_all();
   2d064:	002e47c0 	call	2e47c <alt_icache_flush_all>
}
   2d068:	0001883a 	nop
   2d06c:	e037883a 	mov	sp,fp
   2d070:	dfc00117 	ldw	ra,4(sp)
   2d074:	df000017 	ldw	fp,0(sp)
   2d078:	dec00204 	addi	sp,sp,8
   2d07c:	f800283a 	ret

0002d080 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d080:	defffe04 	addi	sp,sp,-8
   2d084:	dfc00115 	stw	ra,4(sp)
   2d088:	df000015 	stw	fp,0(sp)
   2d08c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d090:	008000f4 	movhi	r2,3
   2d094:	10848104 	addi	r2,r2,4612
   2d098:	10800017 	ldw	r2,0(r2)
   2d09c:	10000526 	beq	r2,zero,2d0b4 <alt_get_errno+0x34>
   2d0a0:	008000f4 	movhi	r2,3
   2d0a4:	10848104 	addi	r2,r2,4612
   2d0a8:	10800017 	ldw	r2,0(r2)
   2d0ac:	103ee83a 	callr	r2
   2d0b0:	00000206 	br	2d0bc <alt_get_errno+0x3c>
   2d0b4:	008000f4 	movhi	r2,3
   2d0b8:	108b4704 	addi	r2,r2,11548
}
   2d0bc:	e037883a 	mov	sp,fp
   2d0c0:	dfc00117 	ldw	ra,4(sp)
   2d0c4:	df000017 	ldw	fp,0(sp)
   2d0c8:	dec00204 	addi	sp,sp,8
   2d0cc:	f800283a 	ret

0002d0d0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2d0d0:	defff904 	addi	sp,sp,-28
   2d0d4:	dfc00615 	stw	ra,24(sp)
   2d0d8:	df000515 	stw	fp,20(sp)
   2d0dc:	df000504 	addi	fp,sp,20
   2d0e0:	e13ffd15 	stw	r4,-12(fp)
   2d0e4:	e17ffe15 	stw	r5,-8(fp)
   2d0e8:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2d0ec:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d0f0:	e0bffd17 	ldw	r2,-12(fp)
   2d0f4:	10000616 	blt	r2,zero,2d110 <lseek+0x40>
   2d0f8:	e0bffd17 	ldw	r2,-12(fp)
   2d0fc:	10c00324 	muli	r3,r2,12
   2d100:	008000f4 	movhi	r2,3
   2d104:	10bffe04 	addi	r2,r2,-8
   2d108:	1885883a 	add	r2,r3,r2
   2d10c:	00000106 	br	2d114 <lseek+0x44>
   2d110:	0005883a 	mov	r2,zero
   2d114:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   2d118:	e0bffc17 	ldw	r2,-16(fp)
   2d11c:	10001026 	beq	r2,zero,2d160 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2d120:	e0bffc17 	ldw	r2,-16(fp)
   2d124:	10800017 	ldw	r2,0(r2)
   2d128:	10800717 	ldw	r2,28(r2)
   2d12c:	10000926 	beq	r2,zero,2d154 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2d130:	e0bffc17 	ldw	r2,-16(fp)
   2d134:	10800017 	ldw	r2,0(r2)
   2d138:	10800717 	ldw	r2,28(r2)
   2d13c:	e1bfff17 	ldw	r6,-4(fp)
   2d140:	e17ffe17 	ldw	r5,-8(fp)
   2d144:	e13ffc17 	ldw	r4,-16(fp)
   2d148:	103ee83a 	callr	r2
   2d14c:	e0bffb15 	stw	r2,-20(fp)
   2d150:	00000506 	br	2d168 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2d154:	00bfde84 	movi	r2,-134
   2d158:	e0bffb15 	stw	r2,-20(fp)
   2d15c:	00000206 	br	2d168 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   2d160:	00bfebc4 	movi	r2,-81
   2d164:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   2d168:	e0bffb17 	ldw	r2,-20(fp)
   2d16c:	1000070e 	bge	r2,zero,2d18c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   2d170:	002d0800 	call	2d080 <alt_get_errno>
   2d174:	1007883a 	mov	r3,r2
   2d178:	e0bffb17 	ldw	r2,-20(fp)
   2d17c:	0085c83a 	sub	r2,zero,r2
   2d180:	18800015 	stw	r2,0(r3)
    rc = -1;
   2d184:	00bfffc4 	movi	r2,-1
   2d188:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   2d18c:	e0bffb17 	ldw	r2,-20(fp)
}
   2d190:	e037883a 	mov	sp,fp
   2d194:	dfc00117 	ldw	ra,4(sp)
   2d198:	df000017 	ldw	fp,0(sp)
   2d19c:	dec00204 	addi	sp,sp,8
   2d1a0:	f800283a 	ret

0002d1a4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2d1a4:	defffd04 	addi	sp,sp,-12
   2d1a8:	dfc00215 	stw	ra,8(sp)
   2d1ac:	df000115 	stw	fp,4(sp)
   2d1b0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2d1b4:	0009883a 	mov	r4,zero
   2d1b8:	002d6480 	call	2d648 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2d1bc:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2d1c0:	002d6800 	call	2d680 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2d1c4:	018000f4 	movhi	r6,3
   2d1c8:	31bdc104 	addi	r6,r6,-2300
   2d1cc:	014000f4 	movhi	r5,3
   2d1d0:	297dc104 	addi	r5,r5,-2300
   2d1d4:	010000f4 	movhi	r4,3
   2d1d8:	213dc104 	addi	r4,r4,-2300
   2d1dc:	002e8440 	call	2e844 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2d1e0:	002e3bc0 	call	2e3bc <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2d1e4:	010000f4 	movhi	r4,3
   2d1e8:	21390704 	addi	r4,r4,-7140
   2d1ec:	002f0800 	call	2f080 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2d1f0:	d0a6d217 	ldw	r2,-25784(gp)
   2d1f4:	d0e6d317 	ldw	r3,-25780(gp)
   2d1f8:	d126d417 	ldw	r4,-25776(gp)
   2d1fc:	200d883a 	mov	r6,r4
   2d200:	180b883a 	mov	r5,r3
   2d204:	1009883a 	mov	r4,r2
   2d208:	00202900 	call	20290 <main>
   2d20c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2d210:	01000044 	movi	r4,1
   2d214:	002cca40 	call	2cca4 <close>
  exit (result);
   2d218:	e13fff17 	ldw	r4,-4(fp)
   2d21c:	002f0940 	call	2f094 <exit>

0002d220 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2d220:	defffe04 	addi	sp,sp,-8
   2d224:	df000115 	stw	fp,4(sp)
   2d228:	df000104 	addi	fp,sp,4
   2d22c:	e13fff15 	stw	r4,-4(fp)
}
   2d230:	0001883a 	nop
   2d234:	e037883a 	mov	sp,fp
   2d238:	df000017 	ldw	fp,0(sp)
   2d23c:	dec00104 	addi	sp,sp,4
   2d240:	f800283a 	ret

0002d244 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2d244:	defffe04 	addi	sp,sp,-8
   2d248:	df000115 	stw	fp,4(sp)
   2d24c:	df000104 	addi	fp,sp,4
   2d250:	e13fff15 	stw	r4,-4(fp)
}
   2d254:	0001883a 	nop
   2d258:	e037883a 	mov	sp,fp
   2d25c:	df000017 	ldw	fp,0(sp)
   2d260:	dec00104 	addi	sp,sp,4
   2d264:	f800283a 	ret

0002d268 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d268:	defffe04 	addi	sp,sp,-8
   2d26c:	dfc00115 	stw	ra,4(sp)
   2d270:	df000015 	stw	fp,0(sp)
   2d274:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d278:	008000f4 	movhi	r2,3
   2d27c:	10848104 	addi	r2,r2,4612
   2d280:	10800017 	ldw	r2,0(r2)
   2d284:	10000526 	beq	r2,zero,2d29c <alt_get_errno+0x34>
   2d288:	008000f4 	movhi	r2,3
   2d28c:	10848104 	addi	r2,r2,4612
   2d290:	10800017 	ldw	r2,0(r2)
   2d294:	103ee83a 	callr	r2
   2d298:	00000206 	br	2d2a4 <alt_get_errno+0x3c>
   2d29c:	008000f4 	movhi	r2,3
   2d2a0:	108b4704 	addi	r2,r2,11548
}
   2d2a4:	e037883a 	mov	sp,fp
   2d2a8:	dfc00117 	ldw	ra,4(sp)
   2d2ac:	df000017 	ldw	fp,0(sp)
   2d2b0:	dec00204 	addi	sp,sp,8
   2d2b4:	f800283a 	ret

0002d2b8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2d2b8:	defff904 	addi	sp,sp,-28
   2d2bc:	dfc00615 	stw	ra,24(sp)
   2d2c0:	df000515 	stw	fp,20(sp)
   2d2c4:	df000504 	addi	fp,sp,20
   2d2c8:	e13ffd15 	stw	r4,-12(fp)
   2d2cc:	e17ffe15 	stw	r5,-8(fp)
   2d2d0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d2d4:	e0bffd17 	ldw	r2,-12(fp)
   2d2d8:	10000616 	blt	r2,zero,2d2f4 <read+0x3c>
   2d2dc:	e0bffd17 	ldw	r2,-12(fp)
   2d2e0:	10c00324 	muli	r3,r2,12
   2d2e4:	008000f4 	movhi	r2,3
   2d2e8:	10bffe04 	addi	r2,r2,-8
   2d2ec:	1885883a 	add	r2,r3,r2
   2d2f0:	00000106 	br	2d2f8 <read+0x40>
   2d2f4:	0005883a 	mov	r2,zero
   2d2f8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2d2fc:	e0bffb17 	ldw	r2,-20(fp)
   2d300:	10002226 	beq	r2,zero,2d38c <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2d304:	e0bffb17 	ldw	r2,-20(fp)
   2d308:	10800217 	ldw	r2,8(r2)
   2d30c:	108000cc 	andi	r2,r2,3
   2d310:	10800060 	cmpeqi	r2,r2,1
   2d314:	1000181e 	bne	r2,zero,2d378 <read+0xc0>
        (fd->dev->read))
   2d318:	e0bffb17 	ldw	r2,-20(fp)
   2d31c:	10800017 	ldw	r2,0(r2)
   2d320:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2d324:	10001426 	beq	r2,zero,2d378 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2d328:	e0bffb17 	ldw	r2,-20(fp)
   2d32c:	10800017 	ldw	r2,0(r2)
   2d330:	10800517 	ldw	r2,20(r2)
   2d334:	e0ffff17 	ldw	r3,-4(fp)
   2d338:	180d883a 	mov	r6,r3
   2d33c:	e17ffe17 	ldw	r5,-8(fp)
   2d340:	e13ffb17 	ldw	r4,-20(fp)
   2d344:	103ee83a 	callr	r2
   2d348:	e0bffc15 	stw	r2,-16(fp)
   2d34c:	e0bffc17 	ldw	r2,-16(fp)
   2d350:	1000070e 	bge	r2,zero,2d370 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   2d354:	002d2680 	call	2d268 <alt_get_errno>
   2d358:	1007883a 	mov	r3,r2
   2d35c:	e0bffc17 	ldw	r2,-16(fp)
   2d360:	0085c83a 	sub	r2,zero,r2
   2d364:	18800015 	stw	r2,0(r3)
          return -1;
   2d368:	00bfffc4 	movi	r2,-1
   2d36c:	00000c06 	br	2d3a0 <read+0xe8>
        }
        return rval;
   2d370:	e0bffc17 	ldw	r2,-16(fp)
   2d374:	00000a06 	br	2d3a0 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2d378:	002d2680 	call	2d268 <alt_get_errno>
   2d37c:	1007883a 	mov	r3,r2
   2d380:	00800344 	movi	r2,13
   2d384:	18800015 	stw	r2,0(r3)
   2d388:	00000406 	br	2d39c <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2d38c:	002d2680 	call	2d268 <alt_get_errno>
   2d390:	1007883a 	mov	r3,r2
   2d394:	00801444 	movi	r2,81
   2d398:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2d39c:	00bfffc4 	movi	r2,-1
}
   2d3a0:	e037883a 	mov	sp,fp
   2d3a4:	dfc00117 	ldw	ra,4(sp)
   2d3a8:	df000017 	ldw	fp,0(sp)
   2d3ac:	dec00204 	addi	sp,sp,8
   2d3b0:	f800283a 	ret

0002d3b4 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2d3b4:	defffe04 	addi	sp,sp,-8
   2d3b8:	df000115 	stw	fp,4(sp)
   2d3bc:	df000104 	addi	fp,sp,4
   2d3c0:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2d3c4:	e0bfff17 	ldw	r2,-4(fp)
   2d3c8:	108000d0 	cmplti	r2,r2,3
   2d3cc:	10000d1e 	bne	r2,zero,2d404 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   2d3d0:	008000f4 	movhi	r2,3
   2d3d4:	10bffe04 	addi	r2,r2,-8
   2d3d8:	e0ffff17 	ldw	r3,-4(fp)
   2d3dc:	18c00324 	muli	r3,r3,12
   2d3e0:	10c5883a 	add	r2,r2,r3
   2d3e4:	10800204 	addi	r2,r2,8
   2d3e8:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   2d3ec:	008000f4 	movhi	r2,3
   2d3f0:	10bffe04 	addi	r2,r2,-8
   2d3f4:	e0ffff17 	ldw	r3,-4(fp)
   2d3f8:	18c00324 	muli	r3,r3,12
   2d3fc:	10c5883a 	add	r2,r2,r3
   2d400:	10000015 	stw	zero,0(r2)
  }
}
   2d404:	0001883a 	nop
   2d408:	e037883a 	mov	sp,fp
   2d40c:	df000017 	ldw	fp,0(sp)
   2d410:	dec00104 	addi	sp,sp,4
   2d414:	f800283a 	ret

0002d418 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2d418:	defff904 	addi	sp,sp,-28
   2d41c:	df000615 	stw	fp,24(sp)
   2d420:	df000604 	addi	fp,sp,24
   2d424:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2d428:	0005303a 	rdctl	r2,status
   2d42c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2d430:	e0fffe17 	ldw	r3,-8(fp)
   2d434:	00bfff84 	movi	r2,-2
   2d438:	1884703a 	and	r2,r3,r2
   2d43c:	1001703a 	wrctl	status,r2
  
  return context;
   2d440:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2d444:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2d448:	d0a00c17 	ldw	r2,-32720(gp)
   2d44c:	10c000c4 	addi	r3,r2,3
   2d450:	00bfff04 	movi	r2,-4
   2d454:	1884703a 	and	r2,r3,r2
   2d458:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2d45c:	d0e00c17 	ldw	r3,-32720(gp)
   2d460:	e0bfff17 	ldw	r2,-4(fp)
   2d464:	1887883a 	add	r3,r3,r2
   2d468:	00800134 	movhi	r2,4
   2d46c:	10800004 	addi	r2,r2,0
   2d470:	10c0062e 	bgeu	r2,r3,2d48c <sbrk+0x74>
   2d474:	e0bffb17 	ldw	r2,-20(fp)
   2d478:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2d47c:	e0bffa17 	ldw	r2,-24(fp)
   2d480:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2d484:	00bfffc4 	movi	r2,-1
   2d488:	00000b06 	br	2d4b8 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   2d48c:	d0a00c17 	ldw	r2,-32720(gp)
   2d490:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   2d494:	d0e00c17 	ldw	r3,-32720(gp)
   2d498:	e0bfff17 	ldw	r2,-4(fp)
   2d49c:	1885883a 	add	r2,r3,r2
   2d4a0:	d0a00c15 	stw	r2,-32720(gp)
   2d4a4:	e0bffb17 	ldw	r2,-20(fp)
   2d4a8:	e0bffc15 	stw	r2,-16(fp)
   2d4ac:	e0bffc17 	ldw	r2,-16(fp)
   2d4b0:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2d4b4:	e0bffd17 	ldw	r2,-12(fp)
} 
   2d4b8:	e037883a 	mov	sp,fp
   2d4bc:	df000017 	ldw	fp,0(sp)
   2d4c0:	dec00104 	addi	sp,sp,4
   2d4c4:	f800283a 	ret

0002d4c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d4c8:	defffe04 	addi	sp,sp,-8
   2d4cc:	dfc00115 	stw	ra,4(sp)
   2d4d0:	df000015 	stw	fp,0(sp)
   2d4d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d4d8:	008000f4 	movhi	r2,3
   2d4dc:	10848104 	addi	r2,r2,4612
   2d4e0:	10800017 	ldw	r2,0(r2)
   2d4e4:	10000526 	beq	r2,zero,2d4fc <alt_get_errno+0x34>
   2d4e8:	008000f4 	movhi	r2,3
   2d4ec:	10848104 	addi	r2,r2,4612
   2d4f0:	10800017 	ldw	r2,0(r2)
   2d4f4:	103ee83a 	callr	r2
   2d4f8:	00000206 	br	2d504 <alt_get_errno+0x3c>
   2d4fc:	008000f4 	movhi	r2,3
   2d500:	108b4704 	addi	r2,r2,11548
}
   2d504:	e037883a 	mov	sp,fp
   2d508:	dfc00117 	ldw	ra,4(sp)
   2d50c:	df000017 	ldw	fp,0(sp)
   2d510:	dec00204 	addi	sp,sp,8
   2d514:	f800283a 	ret

0002d518 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2d518:	defff904 	addi	sp,sp,-28
   2d51c:	dfc00615 	stw	ra,24(sp)
   2d520:	df000515 	stw	fp,20(sp)
   2d524:	df000504 	addi	fp,sp,20
   2d528:	e13ffd15 	stw	r4,-12(fp)
   2d52c:	e17ffe15 	stw	r5,-8(fp)
   2d530:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d534:	e0bffd17 	ldw	r2,-12(fp)
   2d538:	10000616 	blt	r2,zero,2d554 <write+0x3c>
   2d53c:	e0bffd17 	ldw	r2,-12(fp)
   2d540:	10c00324 	muli	r3,r2,12
   2d544:	008000f4 	movhi	r2,3
   2d548:	10bffe04 	addi	r2,r2,-8
   2d54c:	1885883a 	add	r2,r3,r2
   2d550:	00000106 	br	2d558 <write+0x40>
   2d554:	0005883a 	mov	r2,zero
   2d558:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2d55c:	e0bffb17 	ldw	r2,-20(fp)
   2d560:	10002126 	beq	r2,zero,2d5e8 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2d564:	e0bffb17 	ldw	r2,-20(fp)
   2d568:	10800217 	ldw	r2,8(r2)
   2d56c:	108000cc 	andi	r2,r2,3
   2d570:	10001826 	beq	r2,zero,2d5d4 <write+0xbc>
   2d574:	e0bffb17 	ldw	r2,-20(fp)
   2d578:	10800017 	ldw	r2,0(r2)
   2d57c:	10800617 	ldw	r2,24(r2)
   2d580:	10001426 	beq	r2,zero,2d5d4 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2d584:	e0bffb17 	ldw	r2,-20(fp)
   2d588:	10800017 	ldw	r2,0(r2)
   2d58c:	10800617 	ldw	r2,24(r2)
   2d590:	e0ffff17 	ldw	r3,-4(fp)
   2d594:	180d883a 	mov	r6,r3
   2d598:	e17ffe17 	ldw	r5,-8(fp)
   2d59c:	e13ffb17 	ldw	r4,-20(fp)
   2d5a0:	103ee83a 	callr	r2
   2d5a4:	e0bffc15 	stw	r2,-16(fp)
   2d5a8:	e0bffc17 	ldw	r2,-16(fp)
   2d5ac:	1000070e 	bge	r2,zero,2d5cc <write+0xb4>
      {
        ALT_ERRNO = -rval;
   2d5b0:	002d4c80 	call	2d4c8 <alt_get_errno>
   2d5b4:	1007883a 	mov	r3,r2
   2d5b8:	e0bffc17 	ldw	r2,-16(fp)
   2d5bc:	0085c83a 	sub	r2,zero,r2
   2d5c0:	18800015 	stw	r2,0(r3)
        return -1;
   2d5c4:	00bfffc4 	movi	r2,-1
   2d5c8:	00000c06 	br	2d5fc <write+0xe4>
      }
      return rval;
   2d5cc:	e0bffc17 	ldw	r2,-16(fp)
   2d5d0:	00000a06 	br	2d5fc <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2d5d4:	002d4c80 	call	2d4c8 <alt_get_errno>
   2d5d8:	1007883a 	mov	r3,r2
   2d5dc:	00800344 	movi	r2,13
   2d5e0:	18800015 	stw	r2,0(r3)
   2d5e4:	00000406 	br	2d5f8 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2d5e8:	002d4c80 	call	2d4c8 <alt_get_errno>
   2d5ec:	1007883a 	mov	r3,r2
   2d5f0:	00801444 	movi	r2,81
   2d5f4:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2d5f8:	00bfffc4 	movi	r2,-1
}
   2d5fc:	e037883a 	mov	sp,fp
   2d600:	dfc00117 	ldw	ra,4(sp)
   2d604:	df000017 	ldw	fp,0(sp)
   2d608:	dec00204 	addi	sp,sp,8
   2d60c:	f800283a 	ret

0002d610 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2d610:	defffd04 	addi	sp,sp,-12
   2d614:	dfc00215 	stw	ra,8(sp)
   2d618:	df000115 	stw	fp,4(sp)
   2d61c:	df000104 	addi	fp,sp,4
   2d620:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2d624:	014000f4 	movhi	r5,3
   2d628:	29447e04 	addi	r5,r5,4600
   2d62c:	e13fff17 	ldw	r4,-4(fp)
   2d630:	002e3180 	call	2e318 <alt_dev_llist_insert>
}
   2d634:	e037883a 	mov	sp,fp
   2d638:	dfc00117 	ldw	ra,4(sp)
   2d63c:	df000017 	ldw	fp,0(sp)
   2d640:	dec00204 	addi	sp,sp,8
   2d644:	f800283a 	ret

0002d648 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2d648:	defffd04 	addi	sp,sp,-12
   2d64c:	dfc00215 	stw	ra,8(sp)
   2d650:	df000115 	stw	fp,4(sp)
   2d654:	df000104 	addi	fp,sp,4
   2d658:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   2d65c:	002ecd80 	call	2ecd8 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2d660:	00800044 	movi	r2,1
   2d664:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   2d668:	0001883a 	nop
   2d66c:	e037883a 	mov	sp,fp
   2d670:	dfc00117 	ldw	ra,4(sp)
   2d674:	df000017 	ldw	fp,0(sp)
   2d678:	dec00204 	addi	sp,sp,8
   2d67c:	f800283a 	ret

0002d680 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2d680:	defffe04 	addi	sp,sp,-8
   2d684:	dfc00115 	stw	ra,4(sp)
   2d688:	df000015 	stw	fp,0(sp)
   2d68c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   2d690:	000d883a 	mov	r6,zero
   2d694:	000b883a 	mov	r5,zero
   2d698:	010000f4 	movhi	r4,3
   2d69c:	21006804 	addi	r4,r4,416
   2d6a0:	002d82c0 	call	2d82c <altera_avalon_jtag_uart_init>
   2d6a4:	010000f4 	movhi	r4,3
   2d6a8:	21005e04 	addi	r4,r4,376
   2d6ac:	002d6100 	call	2d610 <alt_dev_reg>
}
   2d6b0:	0001883a 	nop
   2d6b4:	e037883a 	mov	sp,fp
   2d6b8:	dfc00117 	ldw	ra,4(sp)
   2d6bc:	df000017 	ldw	fp,0(sp)
   2d6c0:	dec00204 	addi	sp,sp,8
   2d6c4:	f800283a 	ret

0002d6c8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2d6c8:	defffa04 	addi	sp,sp,-24
   2d6cc:	dfc00515 	stw	ra,20(sp)
   2d6d0:	df000415 	stw	fp,16(sp)
   2d6d4:	df000404 	addi	fp,sp,16
   2d6d8:	e13ffd15 	stw	r4,-12(fp)
   2d6dc:	e17ffe15 	stw	r5,-8(fp)
   2d6e0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d6e4:	e0bffd17 	ldw	r2,-12(fp)
   2d6e8:	10800017 	ldw	r2,0(r2)
   2d6ec:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2d6f0:	e0bffc17 	ldw	r2,-16(fp)
   2d6f4:	10c00a04 	addi	r3,r2,40
   2d6f8:	e0bffd17 	ldw	r2,-12(fp)
   2d6fc:	10800217 	ldw	r2,8(r2)
   2d700:	100f883a 	mov	r7,r2
   2d704:	e1bfff17 	ldw	r6,-4(fp)
   2d708:	e17ffe17 	ldw	r5,-8(fp)
   2d70c:	1809883a 	mov	r4,r3
   2d710:	002dd000 	call	2dd00 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2d714:	e037883a 	mov	sp,fp
   2d718:	dfc00117 	ldw	ra,4(sp)
   2d71c:	df000017 	ldw	fp,0(sp)
   2d720:	dec00204 	addi	sp,sp,8
   2d724:	f800283a 	ret

0002d728 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2d728:	defffa04 	addi	sp,sp,-24
   2d72c:	dfc00515 	stw	ra,20(sp)
   2d730:	df000415 	stw	fp,16(sp)
   2d734:	df000404 	addi	fp,sp,16
   2d738:	e13ffd15 	stw	r4,-12(fp)
   2d73c:	e17ffe15 	stw	r5,-8(fp)
   2d740:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d744:	e0bffd17 	ldw	r2,-12(fp)
   2d748:	10800017 	ldw	r2,0(r2)
   2d74c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2d750:	e0bffc17 	ldw	r2,-16(fp)
   2d754:	10c00a04 	addi	r3,r2,40
   2d758:	e0bffd17 	ldw	r2,-12(fp)
   2d75c:	10800217 	ldw	r2,8(r2)
   2d760:	100f883a 	mov	r7,r2
   2d764:	e1bfff17 	ldw	r6,-4(fp)
   2d768:	e17ffe17 	ldw	r5,-8(fp)
   2d76c:	1809883a 	mov	r4,r3
   2d770:	002df1c0 	call	2df1c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2d774:	e037883a 	mov	sp,fp
   2d778:	dfc00117 	ldw	ra,4(sp)
   2d77c:	df000017 	ldw	fp,0(sp)
   2d780:	dec00204 	addi	sp,sp,8
   2d784:	f800283a 	ret

0002d788 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2d788:	defffc04 	addi	sp,sp,-16
   2d78c:	dfc00315 	stw	ra,12(sp)
   2d790:	df000215 	stw	fp,8(sp)
   2d794:	df000204 	addi	fp,sp,8
   2d798:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d79c:	e0bfff17 	ldw	r2,-4(fp)
   2d7a0:	10800017 	ldw	r2,0(r2)
   2d7a4:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2d7a8:	e0bffe17 	ldw	r2,-8(fp)
   2d7ac:	10c00a04 	addi	r3,r2,40
   2d7b0:	e0bfff17 	ldw	r2,-4(fp)
   2d7b4:	10800217 	ldw	r2,8(r2)
   2d7b8:	100b883a 	mov	r5,r2
   2d7bc:	1809883a 	mov	r4,r3
   2d7c0:	002dba80 	call	2dba8 <altera_avalon_jtag_uart_close>
}
   2d7c4:	e037883a 	mov	sp,fp
   2d7c8:	dfc00117 	ldw	ra,4(sp)
   2d7cc:	df000017 	ldw	fp,0(sp)
   2d7d0:	dec00204 	addi	sp,sp,8
   2d7d4:	f800283a 	ret

0002d7d8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2d7d8:	defffa04 	addi	sp,sp,-24
   2d7dc:	dfc00515 	stw	ra,20(sp)
   2d7e0:	df000415 	stw	fp,16(sp)
   2d7e4:	df000404 	addi	fp,sp,16
   2d7e8:	e13ffd15 	stw	r4,-12(fp)
   2d7ec:	e17ffe15 	stw	r5,-8(fp)
   2d7f0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2d7f4:	e0bffd17 	ldw	r2,-12(fp)
   2d7f8:	10800017 	ldw	r2,0(r2)
   2d7fc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2d800:	e0bffc17 	ldw	r2,-16(fp)
   2d804:	10800a04 	addi	r2,r2,40
   2d808:	e1bfff17 	ldw	r6,-4(fp)
   2d80c:	e17ffe17 	ldw	r5,-8(fp)
   2d810:	1009883a 	mov	r4,r2
   2d814:	002dc100 	call	2dc10 <altera_avalon_jtag_uart_ioctl>
}
   2d818:	e037883a 	mov	sp,fp
   2d81c:	dfc00117 	ldw	ra,4(sp)
   2d820:	df000017 	ldw	fp,0(sp)
   2d824:	dec00204 	addi	sp,sp,8
   2d828:	f800283a 	ret

0002d82c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2d82c:	defffa04 	addi	sp,sp,-24
   2d830:	dfc00515 	stw	ra,20(sp)
   2d834:	df000415 	stw	fp,16(sp)
   2d838:	df000404 	addi	fp,sp,16
   2d83c:	e13ffd15 	stw	r4,-12(fp)
   2d840:	e17ffe15 	stw	r5,-8(fp)
   2d844:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2d848:	e0bffd17 	ldw	r2,-12(fp)
   2d84c:	00c00044 	movi	r3,1
   2d850:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2d854:	e0bffd17 	ldw	r2,-12(fp)
   2d858:	10800017 	ldw	r2,0(r2)
   2d85c:	10800104 	addi	r2,r2,4
   2d860:	1007883a 	mov	r3,r2
   2d864:	e0bffd17 	ldw	r2,-12(fp)
   2d868:	10800817 	ldw	r2,32(r2)
   2d86c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   2d870:	e0bffe17 	ldw	r2,-8(fp)
   2d874:	e0ffff17 	ldw	r3,-4(fp)
   2d878:	d8000015 	stw	zero,0(sp)
   2d87c:	e1fffd17 	ldw	r7,-12(fp)
   2d880:	018000f4 	movhi	r6,3
   2d884:	31b63d04 	addi	r6,r6,-9996
   2d888:	180b883a 	mov	r5,r3
   2d88c:	1009883a 	mov	r4,r2
   2d890:	002e4b00 	call	2e4b0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2d894:	e0bffd17 	ldw	r2,-12(fp)
   2d898:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2d89c:	e0bffd17 	ldw	r2,-12(fp)
   2d8a0:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2d8a4:	008000f4 	movhi	r2,3
   2d8a8:	108b4c04 	addi	r2,r2,11568
   2d8ac:	10800017 	ldw	r2,0(r2)
   2d8b0:	e1fffd17 	ldw	r7,-12(fp)
   2d8b4:	018000f4 	movhi	r6,3
   2d8b8:	31b6c004 	addi	r6,r6,-9472
   2d8bc:	100b883a 	mov	r5,r2
   2d8c0:	1809883a 	mov	r4,r3
   2d8c4:	002e1400 	call	2e140 <alt_alarm_start>
   2d8c8:	1000040e 	bge	r2,zero,2d8dc <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2d8cc:	e0fffd17 	ldw	r3,-12(fp)
   2d8d0:	00a00034 	movhi	r2,32768
   2d8d4:	10bfffc4 	addi	r2,r2,-1
   2d8d8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2d8dc:	0001883a 	nop
   2d8e0:	e037883a 	mov	sp,fp
   2d8e4:	dfc00117 	ldw	ra,4(sp)
   2d8e8:	df000017 	ldw	fp,0(sp)
   2d8ec:	dec00204 	addi	sp,sp,8
   2d8f0:	f800283a 	ret

0002d8f4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2d8f4:	defff804 	addi	sp,sp,-32
   2d8f8:	df000715 	stw	fp,28(sp)
   2d8fc:	df000704 	addi	fp,sp,28
   2d900:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2d904:	e0bfff17 	ldw	r2,-4(fp)
   2d908:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   2d90c:	e0bffb17 	ldw	r2,-20(fp)
   2d910:	10800017 	ldw	r2,0(r2)
   2d914:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2d918:	e0bffc17 	ldw	r2,-16(fp)
   2d91c:	10800104 	addi	r2,r2,4
   2d920:	10800037 	ldwio	r2,0(r2)
   2d924:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2d928:	e0bffd17 	ldw	r2,-12(fp)
   2d92c:	1080c00c 	andi	r2,r2,768
   2d930:	10006d26 	beq	r2,zero,2dae8 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2d934:	e0bffd17 	ldw	r2,-12(fp)
   2d938:	1080400c 	andi	r2,r2,256
   2d93c:	10003526 	beq	r2,zero,2da14 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2d940:	00800074 	movhi	r2,1
   2d944:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2d948:	e0bffb17 	ldw	r2,-20(fp)
   2d94c:	10800a17 	ldw	r2,40(r2)
   2d950:	10800044 	addi	r2,r2,1
   2d954:	1081ffcc 	andi	r2,r2,2047
   2d958:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   2d95c:	e0bffb17 	ldw	r2,-20(fp)
   2d960:	10c00b17 	ldw	r3,44(r2)
   2d964:	e0bffe17 	ldw	r2,-8(fp)
   2d968:	18801526 	beq	r3,r2,2d9c0 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2d96c:	e0bffc17 	ldw	r2,-16(fp)
   2d970:	10800037 	ldwio	r2,0(r2)
   2d974:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2d978:	e0bff917 	ldw	r2,-28(fp)
   2d97c:	10a0000c 	andi	r2,r2,32768
   2d980:	10001126 	beq	r2,zero,2d9c8 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2d984:	e0bffb17 	ldw	r2,-20(fp)
   2d988:	10800a17 	ldw	r2,40(r2)
   2d98c:	e0fff917 	ldw	r3,-28(fp)
   2d990:	1809883a 	mov	r4,r3
   2d994:	e0fffb17 	ldw	r3,-20(fp)
   2d998:	1885883a 	add	r2,r3,r2
   2d99c:	10800e04 	addi	r2,r2,56
   2d9a0:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2d9a4:	e0bffb17 	ldw	r2,-20(fp)
   2d9a8:	10800a17 	ldw	r2,40(r2)
   2d9ac:	10800044 	addi	r2,r2,1
   2d9b0:	10c1ffcc 	andi	r3,r2,2047
   2d9b4:	e0bffb17 	ldw	r2,-20(fp)
   2d9b8:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   2d9bc:	003fe206 	br	2d948 <__alt_data_end+0xfffed948>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   2d9c0:	0001883a 	nop
   2d9c4:	00000106 	br	2d9cc <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   2d9c8:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2d9cc:	e0bff917 	ldw	r2,-28(fp)
   2d9d0:	10bfffec 	andhi	r2,r2,65535
   2d9d4:	10000f26 	beq	r2,zero,2da14 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2d9d8:	e0bffb17 	ldw	r2,-20(fp)
   2d9dc:	10c00817 	ldw	r3,32(r2)
   2d9e0:	00bfff84 	movi	r2,-2
   2d9e4:	1886703a 	and	r3,r3,r2
   2d9e8:	e0bffb17 	ldw	r2,-20(fp)
   2d9ec:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2d9f0:	e0bffc17 	ldw	r2,-16(fp)
   2d9f4:	10800104 	addi	r2,r2,4
   2d9f8:	1007883a 	mov	r3,r2
   2d9fc:	e0bffb17 	ldw	r2,-20(fp)
   2da00:	10800817 	ldw	r2,32(r2)
   2da04:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2da08:	e0bffc17 	ldw	r2,-16(fp)
   2da0c:	10800104 	addi	r2,r2,4
   2da10:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2da14:	e0bffd17 	ldw	r2,-12(fp)
   2da18:	1080800c 	andi	r2,r2,512
   2da1c:	103fbe26 	beq	r2,zero,2d918 <__alt_data_end+0xfffed918>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2da20:	e0bffd17 	ldw	r2,-12(fp)
   2da24:	1004d43a 	srli	r2,r2,16
   2da28:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2da2c:	00001406 	br	2da80 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2da30:	e0bffc17 	ldw	r2,-16(fp)
   2da34:	e0fffb17 	ldw	r3,-20(fp)
   2da38:	18c00d17 	ldw	r3,52(r3)
   2da3c:	e13ffb17 	ldw	r4,-20(fp)
   2da40:	20c7883a 	add	r3,r4,r3
   2da44:	18c20e04 	addi	r3,r3,2104
   2da48:	18c00003 	ldbu	r3,0(r3)
   2da4c:	18c03fcc 	andi	r3,r3,255
   2da50:	18c0201c 	xori	r3,r3,128
   2da54:	18ffe004 	addi	r3,r3,-128
   2da58:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2da5c:	e0bffb17 	ldw	r2,-20(fp)
   2da60:	10800d17 	ldw	r2,52(r2)
   2da64:	10800044 	addi	r2,r2,1
   2da68:	10c1ffcc 	andi	r3,r2,2047
   2da6c:	e0bffb17 	ldw	r2,-20(fp)
   2da70:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2da74:	e0bffa17 	ldw	r2,-24(fp)
   2da78:	10bfffc4 	addi	r2,r2,-1
   2da7c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   2da80:	e0bffa17 	ldw	r2,-24(fp)
   2da84:	10000526 	beq	r2,zero,2da9c <altera_avalon_jtag_uart_irq+0x1a8>
   2da88:	e0bffb17 	ldw	r2,-20(fp)
   2da8c:	10c00d17 	ldw	r3,52(r2)
   2da90:	e0bffb17 	ldw	r2,-20(fp)
   2da94:	10800c17 	ldw	r2,48(r2)
   2da98:	18bfe51e 	bne	r3,r2,2da30 <__alt_data_end+0xfffeda30>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   2da9c:	e0bffa17 	ldw	r2,-24(fp)
   2daa0:	103f9d26 	beq	r2,zero,2d918 <__alt_data_end+0xfffed918>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2daa4:	e0bffb17 	ldw	r2,-20(fp)
   2daa8:	10c00817 	ldw	r3,32(r2)
   2daac:	00bfff44 	movi	r2,-3
   2dab0:	1886703a 	and	r3,r3,r2
   2dab4:	e0bffb17 	ldw	r2,-20(fp)
   2dab8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2dabc:	e0bffb17 	ldw	r2,-20(fp)
   2dac0:	10800017 	ldw	r2,0(r2)
   2dac4:	10800104 	addi	r2,r2,4
   2dac8:	1007883a 	mov	r3,r2
   2dacc:	e0bffb17 	ldw	r2,-20(fp)
   2dad0:	10800817 	ldw	r2,32(r2)
   2dad4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2dad8:	e0bffc17 	ldw	r2,-16(fp)
   2dadc:	10800104 	addi	r2,r2,4
   2dae0:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   2dae4:	003f8c06 	br	2d918 <__alt_data_end+0xfffed918>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   2dae8:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   2daec:	0001883a 	nop
   2daf0:	e037883a 	mov	sp,fp
   2daf4:	df000017 	ldw	fp,0(sp)
   2daf8:	dec00104 	addi	sp,sp,4
   2dafc:	f800283a 	ret

0002db00 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2db00:	defff804 	addi	sp,sp,-32
   2db04:	df000715 	stw	fp,28(sp)
   2db08:	df000704 	addi	fp,sp,28
   2db0c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2db10:	e0bffb17 	ldw	r2,-20(fp)
   2db14:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2db18:	e0bff917 	ldw	r2,-28(fp)
   2db1c:	10800017 	ldw	r2,0(r2)
   2db20:	10800104 	addi	r2,r2,4
   2db24:	10800037 	ldwio	r2,0(r2)
   2db28:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2db2c:	e0bffa17 	ldw	r2,-24(fp)
   2db30:	1081000c 	andi	r2,r2,1024
   2db34:	10000b26 	beq	r2,zero,2db64 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2db38:	e0bff917 	ldw	r2,-28(fp)
   2db3c:	10800017 	ldw	r2,0(r2)
   2db40:	10800104 	addi	r2,r2,4
   2db44:	1007883a 	mov	r3,r2
   2db48:	e0bff917 	ldw	r2,-28(fp)
   2db4c:	10800817 	ldw	r2,32(r2)
   2db50:	10810014 	ori	r2,r2,1024
   2db54:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2db58:	e0bff917 	ldw	r2,-28(fp)
   2db5c:	10000915 	stw	zero,36(r2)
   2db60:	00000a06 	br	2db8c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2db64:	e0bff917 	ldw	r2,-28(fp)
   2db68:	10c00917 	ldw	r3,36(r2)
   2db6c:	00a00034 	movhi	r2,32768
   2db70:	10bfff04 	addi	r2,r2,-4
   2db74:	10c00536 	bltu	r2,r3,2db8c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   2db78:	e0bff917 	ldw	r2,-28(fp)
   2db7c:	10800917 	ldw	r2,36(r2)
   2db80:	10c00044 	addi	r3,r2,1
   2db84:	e0bff917 	ldw	r2,-28(fp)
   2db88:	10c00915 	stw	r3,36(r2)
   2db8c:	008000f4 	movhi	r2,3
   2db90:	108b4c04 	addi	r2,r2,11568
   2db94:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2db98:	e037883a 	mov	sp,fp
   2db9c:	df000017 	ldw	fp,0(sp)
   2dba0:	dec00104 	addi	sp,sp,4
   2dba4:	f800283a 	ret

0002dba8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2dba8:	defffd04 	addi	sp,sp,-12
   2dbac:	df000215 	stw	fp,8(sp)
   2dbb0:	df000204 	addi	fp,sp,8
   2dbb4:	e13ffe15 	stw	r4,-8(fp)
   2dbb8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2dbbc:	00000506 	br	2dbd4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2dbc0:	e0bfff17 	ldw	r2,-4(fp)
   2dbc4:	1090000c 	andi	r2,r2,16384
   2dbc8:	10000226 	beq	r2,zero,2dbd4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2dbcc:	00bffd44 	movi	r2,-11
   2dbd0:	00000b06 	br	2dc00 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2dbd4:	e0bffe17 	ldw	r2,-8(fp)
   2dbd8:	10c00d17 	ldw	r3,52(r2)
   2dbdc:	e0bffe17 	ldw	r2,-8(fp)
   2dbe0:	10800c17 	ldw	r2,48(r2)
   2dbe4:	18800526 	beq	r3,r2,2dbfc <altera_avalon_jtag_uart_close+0x54>
   2dbe8:	e0bffe17 	ldw	r2,-8(fp)
   2dbec:	10c00917 	ldw	r3,36(r2)
   2dbf0:	e0bffe17 	ldw	r2,-8(fp)
   2dbf4:	10800117 	ldw	r2,4(r2)
   2dbf8:	18bff136 	bltu	r3,r2,2dbc0 <__alt_data_end+0xfffedbc0>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   2dbfc:	0005883a 	mov	r2,zero
}
   2dc00:	e037883a 	mov	sp,fp
   2dc04:	df000017 	ldw	fp,0(sp)
   2dc08:	dec00104 	addi	sp,sp,4
   2dc0c:	f800283a 	ret

0002dc10 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2dc10:	defffa04 	addi	sp,sp,-24
   2dc14:	df000515 	stw	fp,20(sp)
   2dc18:	df000504 	addi	fp,sp,20
   2dc1c:	e13ffd15 	stw	r4,-12(fp)
   2dc20:	e17ffe15 	stw	r5,-8(fp)
   2dc24:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   2dc28:	00bff9c4 	movi	r2,-25
   2dc2c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   2dc30:	e0bffe17 	ldw	r2,-8(fp)
   2dc34:	10da8060 	cmpeqi	r3,r2,27137
   2dc38:	1800031e 	bne	r3,zero,2dc48 <altera_avalon_jtag_uart_ioctl+0x38>
   2dc3c:	109a80a0 	cmpeqi	r2,r2,27138
   2dc40:	1000181e 	bne	r2,zero,2dca4 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   2dc44:	00002906 	br	2dcec <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   2dc48:	e0bffd17 	ldw	r2,-12(fp)
   2dc4c:	10c00117 	ldw	r3,4(r2)
   2dc50:	00a00034 	movhi	r2,32768
   2dc54:	10bfffc4 	addi	r2,r2,-1
   2dc58:	18802126 	beq	r3,r2,2dce0 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   2dc5c:	e0bfff17 	ldw	r2,-4(fp)
   2dc60:	10800017 	ldw	r2,0(r2)
   2dc64:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2dc68:	e0bffc17 	ldw	r2,-16(fp)
   2dc6c:	10800090 	cmplti	r2,r2,2
   2dc70:	1000061e 	bne	r2,zero,2dc8c <altera_avalon_jtag_uart_ioctl+0x7c>
   2dc74:	e0fffc17 	ldw	r3,-16(fp)
   2dc78:	00a00034 	movhi	r2,32768
   2dc7c:	10bfffc4 	addi	r2,r2,-1
   2dc80:	18800226 	beq	r3,r2,2dc8c <altera_avalon_jtag_uart_ioctl+0x7c>
   2dc84:	e0bffc17 	ldw	r2,-16(fp)
   2dc88:	00000206 	br	2dc94 <altera_avalon_jtag_uart_ioctl+0x84>
   2dc8c:	00a00034 	movhi	r2,32768
   2dc90:	10bfff84 	addi	r2,r2,-2
   2dc94:	e0fffd17 	ldw	r3,-12(fp)
   2dc98:	18800115 	stw	r2,4(r3)
      rc = 0;
   2dc9c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2dca0:	00000f06 	br	2dce0 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   2dca4:	e0bffd17 	ldw	r2,-12(fp)
   2dca8:	10c00117 	ldw	r3,4(r2)
   2dcac:	00a00034 	movhi	r2,32768
   2dcb0:	10bfffc4 	addi	r2,r2,-1
   2dcb4:	18800c26 	beq	r3,r2,2dce8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2dcb8:	e0bffd17 	ldw	r2,-12(fp)
   2dcbc:	10c00917 	ldw	r3,36(r2)
   2dcc0:	e0bffd17 	ldw	r2,-12(fp)
   2dcc4:	10800117 	ldw	r2,4(r2)
   2dcc8:	1885803a 	cmpltu	r2,r3,r2
   2dccc:	10c03fcc 	andi	r3,r2,255
   2dcd0:	e0bfff17 	ldw	r2,-4(fp)
   2dcd4:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2dcd8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2dcdc:	00000206 	br	2dce8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   2dce0:	0001883a 	nop
   2dce4:	00000106 	br	2dcec <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   2dce8:	0001883a 	nop

  default:
    break;
  }

  return rc;
   2dcec:	e0bffb17 	ldw	r2,-20(fp)
}
   2dcf0:	e037883a 	mov	sp,fp
   2dcf4:	df000017 	ldw	fp,0(sp)
   2dcf8:	dec00104 	addi	sp,sp,4
   2dcfc:	f800283a 	ret

0002dd00 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2dd00:	defff304 	addi	sp,sp,-52
   2dd04:	dfc00c15 	stw	ra,48(sp)
   2dd08:	df000b15 	stw	fp,44(sp)
   2dd0c:	df000b04 	addi	fp,sp,44
   2dd10:	e13ffc15 	stw	r4,-16(fp)
   2dd14:	e17ffd15 	stw	r5,-12(fp)
   2dd18:	e1bffe15 	stw	r6,-8(fp)
   2dd1c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   2dd20:	e0bffd17 	ldw	r2,-12(fp)
   2dd24:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2dd28:	00004706 	br	2de48 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2dd2c:	e0bffc17 	ldw	r2,-16(fp)
   2dd30:	10800a17 	ldw	r2,40(r2)
   2dd34:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   2dd38:	e0bffc17 	ldw	r2,-16(fp)
   2dd3c:	10800b17 	ldw	r2,44(r2)
   2dd40:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   2dd44:	e0fff717 	ldw	r3,-36(fp)
   2dd48:	e0bff817 	ldw	r2,-32(fp)
   2dd4c:	18800536 	bltu	r3,r2,2dd64 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2dd50:	e0fff717 	ldw	r3,-36(fp)
   2dd54:	e0bff817 	ldw	r2,-32(fp)
   2dd58:	1885c83a 	sub	r2,r3,r2
   2dd5c:	e0bff615 	stw	r2,-40(fp)
   2dd60:	00000406 	br	2dd74 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2dd64:	00c20004 	movi	r3,2048
   2dd68:	e0bff817 	ldw	r2,-32(fp)
   2dd6c:	1885c83a 	sub	r2,r3,r2
   2dd70:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2dd74:	e0bff617 	ldw	r2,-40(fp)
   2dd78:	10001e26 	beq	r2,zero,2ddf4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2dd7c:	e0fffe17 	ldw	r3,-8(fp)
   2dd80:	e0bff617 	ldw	r2,-40(fp)
   2dd84:	1880022e 	bgeu	r3,r2,2dd90 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2dd88:	e0bffe17 	ldw	r2,-8(fp)
   2dd8c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2dd90:	e0bffc17 	ldw	r2,-16(fp)
   2dd94:	10c00e04 	addi	r3,r2,56
   2dd98:	e0bff817 	ldw	r2,-32(fp)
   2dd9c:	1885883a 	add	r2,r3,r2
   2dda0:	e1bff617 	ldw	r6,-40(fp)
   2dda4:	100b883a 	mov	r5,r2
   2dda8:	e13ff517 	ldw	r4,-44(fp)
   2ddac:	0025e000 	call	25e00 <memcpy>
      ptr   += n;
   2ddb0:	e0fff517 	ldw	r3,-44(fp)
   2ddb4:	e0bff617 	ldw	r2,-40(fp)
   2ddb8:	1885883a 	add	r2,r3,r2
   2ddbc:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   2ddc0:	e0fffe17 	ldw	r3,-8(fp)
   2ddc4:	e0bff617 	ldw	r2,-40(fp)
   2ddc8:	1885c83a 	sub	r2,r3,r2
   2ddcc:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2ddd0:	e0fff817 	ldw	r3,-32(fp)
   2ddd4:	e0bff617 	ldw	r2,-40(fp)
   2ddd8:	1885883a 	add	r2,r3,r2
   2dddc:	10c1ffcc 	andi	r3,r2,2047
   2dde0:	e0bffc17 	ldw	r2,-16(fp)
   2dde4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2dde8:	e0bffe17 	ldw	r2,-8(fp)
   2ddec:	00bfcf16 	blt	zero,r2,2dd2c <__alt_data_end+0xfffedd2c>
   2ddf0:	00000106 	br	2ddf8 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   2ddf4:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   2ddf8:	e0fff517 	ldw	r3,-44(fp)
   2ddfc:	e0bffd17 	ldw	r2,-12(fp)
   2de00:	1880141e 	bne	r3,r2,2de54 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2de04:	e0bfff17 	ldw	r2,-4(fp)
   2de08:	1090000c 	andi	r2,r2,16384
   2de0c:	1000131e 	bne	r2,zero,2de5c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2de10:	0001883a 	nop
   2de14:	e0bffc17 	ldw	r2,-16(fp)
   2de18:	10c00a17 	ldw	r3,40(r2)
   2de1c:	e0bff717 	ldw	r2,-36(fp)
   2de20:	1880051e 	bne	r3,r2,2de38 <altera_avalon_jtag_uart_read+0x138>
   2de24:	e0bffc17 	ldw	r2,-16(fp)
   2de28:	10c00917 	ldw	r3,36(r2)
   2de2c:	e0bffc17 	ldw	r2,-16(fp)
   2de30:	10800117 	ldw	r2,4(r2)
   2de34:	18bff736 	bltu	r3,r2,2de14 <__alt_data_end+0xfffede14>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2de38:	e0bffc17 	ldw	r2,-16(fp)
   2de3c:	10c00a17 	ldw	r3,40(r2)
   2de40:	e0bff717 	ldw	r2,-36(fp)
   2de44:	18800726 	beq	r3,r2,2de64 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2de48:	e0bffe17 	ldw	r2,-8(fp)
   2de4c:	00bfb716 	blt	zero,r2,2dd2c <__alt_data_end+0xfffedd2c>
   2de50:	00000506 	br	2de68 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   2de54:	0001883a 	nop
   2de58:	00000306 	br	2de68 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   2de5c:	0001883a 	nop
   2de60:	00000106 	br	2de68 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   2de64:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2de68:	e0fff517 	ldw	r3,-44(fp)
   2de6c:	e0bffd17 	ldw	r2,-12(fp)
   2de70:	18801826 	beq	r3,r2,2ded4 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2de74:	0005303a 	rdctl	r2,status
   2de78:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2de7c:	e0fffb17 	ldw	r3,-20(fp)
   2de80:	00bfff84 	movi	r2,-2
   2de84:	1884703a 	and	r2,r3,r2
   2de88:	1001703a 	wrctl	status,r2
  
  return context;
   2de8c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2de90:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2de94:	e0bffc17 	ldw	r2,-16(fp)
   2de98:	10800817 	ldw	r2,32(r2)
   2de9c:	10c00054 	ori	r3,r2,1
   2dea0:	e0bffc17 	ldw	r2,-16(fp)
   2dea4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2dea8:	e0bffc17 	ldw	r2,-16(fp)
   2deac:	10800017 	ldw	r2,0(r2)
   2deb0:	10800104 	addi	r2,r2,4
   2deb4:	1007883a 	mov	r3,r2
   2deb8:	e0bffc17 	ldw	r2,-16(fp)
   2debc:	10800817 	ldw	r2,32(r2)
   2dec0:	18800035 	stwio	r2,0(r3)
   2dec4:	e0bffa17 	ldw	r2,-24(fp)
   2dec8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2decc:	e0bff917 	ldw	r2,-28(fp)
   2ded0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2ded4:	e0fff517 	ldw	r3,-44(fp)
   2ded8:	e0bffd17 	ldw	r2,-12(fp)
   2dedc:	18800426 	beq	r3,r2,2def0 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   2dee0:	e0fff517 	ldw	r3,-44(fp)
   2dee4:	e0bffd17 	ldw	r2,-12(fp)
   2dee8:	1885c83a 	sub	r2,r3,r2
   2deec:	00000606 	br	2df08 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   2def0:	e0bfff17 	ldw	r2,-4(fp)
   2def4:	1090000c 	andi	r2,r2,16384
   2def8:	10000226 	beq	r2,zero,2df04 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   2defc:	00bffd44 	movi	r2,-11
   2df00:	00000106 	br	2df08 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   2df04:	00bffec4 	movi	r2,-5
}
   2df08:	e037883a 	mov	sp,fp
   2df0c:	dfc00117 	ldw	ra,4(sp)
   2df10:	df000017 	ldw	fp,0(sp)
   2df14:	dec00204 	addi	sp,sp,8
   2df18:	f800283a 	ret

0002df1c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2df1c:	defff304 	addi	sp,sp,-52
   2df20:	dfc00c15 	stw	ra,48(sp)
   2df24:	df000b15 	stw	fp,44(sp)
   2df28:	df000b04 	addi	fp,sp,44
   2df2c:	e13ffc15 	stw	r4,-16(fp)
   2df30:	e17ffd15 	stw	r5,-12(fp)
   2df34:	e1bffe15 	stw	r6,-8(fp)
   2df38:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2df3c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2df40:	e0bffd17 	ldw	r2,-12(fp)
   2df44:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2df48:	00003706 	br	2e028 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2df4c:	e0bffc17 	ldw	r2,-16(fp)
   2df50:	10800c17 	ldw	r2,48(r2)
   2df54:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   2df58:	e0bffc17 	ldw	r2,-16(fp)
   2df5c:	10800d17 	ldw	r2,52(r2)
   2df60:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   2df64:	e0fff917 	ldw	r3,-28(fp)
   2df68:	e0bff517 	ldw	r2,-44(fp)
   2df6c:	1880062e 	bgeu	r3,r2,2df88 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2df70:	e0fff517 	ldw	r3,-44(fp)
   2df74:	e0bff917 	ldw	r2,-28(fp)
   2df78:	1885c83a 	sub	r2,r3,r2
   2df7c:	10bfffc4 	addi	r2,r2,-1
   2df80:	e0bff615 	stw	r2,-40(fp)
   2df84:	00000b06 	br	2dfb4 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2df88:	e0bff517 	ldw	r2,-44(fp)
   2df8c:	10000526 	beq	r2,zero,2dfa4 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2df90:	00c20004 	movi	r3,2048
   2df94:	e0bff917 	ldw	r2,-28(fp)
   2df98:	1885c83a 	sub	r2,r3,r2
   2df9c:	e0bff615 	stw	r2,-40(fp)
   2dfa0:	00000406 	br	2dfb4 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2dfa4:	00c1ffc4 	movi	r3,2047
   2dfa8:	e0bff917 	ldw	r2,-28(fp)
   2dfac:	1885c83a 	sub	r2,r3,r2
   2dfb0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2dfb4:	e0bff617 	ldw	r2,-40(fp)
   2dfb8:	10001e26 	beq	r2,zero,2e034 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2dfbc:	e0fffe17 	ldw	r3,-8(fp)
   2dfc0:	e0bff617 	ldw	r2,-40(fp)
   2dfc4:	1880022e 	bgeu	r3,r2,2dfd0 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2dfc8:	e0bffe17 	ldw	r2,-8(fp)
   2dfcc:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2dfd0:	e0bffc17 	ldw	r2,-16(fp)
   2dfd4:	10c20e04 	addi	r3,r2,2104
   2dfd8:	e0bff917 	ldw	r2,-28(fp)
   2dfdc:	1885883a 	add	r2,r3,r2
   2dfe0:	e1bff617 	ldw	r6,-40(fp)
   2dfe4:	e17ffd17 	ldw	r5,-12(fp)
   2dfe8:	1009883a 	mov	r4,r2
   2dfec:	0025e000 	call	25e00 <memcpy>
      ptr   += n;
   2dff0:	e0fffd17 	ldw	r3,-12(fp)
   2dff4:	e0bff617 	ldw	r2,-40(fp)
   2dff8:	1885883a 	add	r2,r3,r2
   2dffc:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   2e000:	e0fffe17 	ldw	r3,-8(fp)
   2e004:	e0bff617 	ldw	r2,-40(fp)
   2e008:	1885c83a 	sub	r2,r3,r2
   2e00c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e010:	e0fff917 	ldw	r3,-28(fp)
   2e014:	e0bff617 	ldw	r2,-40(fp)
   2e018:	1885883a 	add	r2,r3,r2
   2e01c:	10c1ffcc 	andi	r3,r2,2047
   2e020:	e0bffc17 	ldw	r2,-16(fp)
   2e024:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2e028:	e0bffe17 	ldw	r2,-8(fp)
   2e02c:	00bfc716 	blt	zero,r2,2df4c <__alt_data_end+0xfffedf4c>
   2e030:	00000106 	br	2e038 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   2e034:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e038:	0005303a 	rdctl	r2,status
   2e03c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e040:	e0fffb17 	ldw	r3,-20(fp)
   2e044:	00bfff84 	movi	r2,-2
   2e048:	1884703a 	and	r2,r3,r2
   2e04c:	1001703a 	wrctl	status,r2
  
  return context;
   2e050:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2e054:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e058:	e0bffc17 	ldw	r2,-16(fp)
   2e05c:	10800817 	ldw	r2,32(r2)
   2e060:	10c00094 	ori	r3,r2,2
   2e064:	e0bffc17 	ldw	r2,-16(fp)
   2e068:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e06c:	e0bffc17 	ldw	r2,-16(fp)
   2e070:	10800017 	ldw	r2,0(r2)
   2e074:	10800104 	addi	r2,r2,4
   2e078:	1007883a 	mov	r3,r2
   2e07c:	e0bffc17 	ldw	r2,-16(fp)
   2e080:	10800817 	ldw	r2,32(r2)
   2e084:	18800035 	stwio	r2,0(r3)
   2e088:	e0bffa17 	ldw	r2,-24(fp)
   2e08c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e090:	e0bff817 	ldw	r2,-32(fp)
   2e094:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2e098:	e0bffe17 	ldw	r2,-8(fp)
   2e09c:	0080100e 	bge	zero,r2,2e0e0 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   2e0a0:	e0bfff17 	ldw	r2,-4(fp)
   2e0a4:	1090000c 	andi	r2,r2,16384
   2e0a8:	1000101e 	bne	r2,zero,2e0ec <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2e0ac:	0001883a 	nop
   2e0b0:	e0bffc17 	ldw	r2,-16(fp)
   2e0b4:	10c00d17 	ldw	r3,52(r2)
   2e0b8:	e0bff517 	ldw	r2,-44(fp)
   2e0bc:	1880051e 	bne	r3,r2,2e0d4 <altera_avalon_jtag_uart_write+0x1b8>
   2e0c0:	e0bffc17 	ldw	r2,-16(fp)
   2e0c4:	10c00917 	ldw	r3,36(r2)
   2e0c8:	e0bffc17 	ldw	r2,-16(fp)
   2e0cc:	10800117 	ldw	r2,4(r2)
   2e0d0:	18bff736 	bltu	r3,r2,2e0b0 <__alt_data_end+0xfffee0b0>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2e0d4:	e0bffc17 	ldw	r2,-16(fp)
   2e0d8:	10800917 	ldw	r2,36(r2)
   2e0dc:	1000051e 	bne	r2,zero,2e0f4 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   2e0e0:	e0bffe17 	ldw	r2,-8(fp)
   2e0e4:	00bfd016 	blt	zero,r2,2e028 <__alt_data_end+0xfffee028>
   2e0e8:	00000306 	br	2e0f8 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   2e0ec:	0001883a 	nop
   2e0f0:	00000106 	br	2e0f8 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   2e0f4:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2e0f8:	e0fffd17 	ldw	r3,-12(fp)
   2e0fc:	e0bff717 	ldw	r2,-36(fp)
   2e100:	18800426 	beq	r3,r2,2e114 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   2e104:	e0fffd17 	ldw	r3,-12(fp)
   2e108:	e0bff717 	ldw	r2,-36(fp)
   2e10c:	1885c83a 	sub	r2,r3,r2
   2e110:	00000606 	br	2e12c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   2e114:	e0bfff17 	ldw	r2,-4(fp)
   2e118:	1090000c 	andi	r2,r2,16384
   2e11c:	10000226 	beq	r2,zero,2e128 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   2e120:	00bffd44 	movi	r2,-11
   2e124:	00000106 	br	2e12c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2e128:	00bffec4 	movi	r2,-5
}
   2e12c:	e037883a 	mov	sp,fp
   2e130:	dfc00117 	ldw	ra,4(sp)
   2e134:	df000017 	ldw	fp,0(sp)
   2e138:	dec00204 	addi	sp,sp,8
   2e13c:	f800283a 	ret

0002e140 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2e140:	defff504 	addi	sp,sp,-44
   2e144:	df000a15 	stw	fp,40(sp)
   2e148:	df000a04 	addi	fp,sp,40
   2e14c:	e13ffc15 	stw	r4,-16(fp)
   2e150:	e17ffd15 	stw	r5,-12(fp)
   2e154:	e1bffe15 	stw	r6,-8(fp)
   2e158:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   2e15c:	e03ff615 	stw	zero,-40(fp)
   2e160:	008000f4 	movhi	r2,3
   2e164:	108b4c04 	addi	r2,r2,11568
   2e168:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
   2e16c:	10003f26 	beq	r2,zero,2e26c <alt_alarm_start+0x12c>
  {
    if (alarm)
   2e170:	e0bffc17 	ldw	r2,-16(fp)
   2e174:	10003b26 	beq	r2,zero,2e264 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
   2e178:	e0bffc17 	ldw	r2,-16(fp)
   2e17c:	e0fffe17 	ldw	r3,-8(fp)
   2e180:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   2e184:	e0bffc17 	ldw	r2,-16(fp)
   2e188:	e0ffff17 	ldw	r3,-4(fp)
   2e18c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e190:	0005303a 	rdctl	r2,status
   2e194:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e198:	e0fff917 	ldw	r3,-28(fp)
   2e19c:	00bfff84 	movi	r2,-2
   2e1a0:	1884703a 	and	r2,r3,r2
   2e1a4:	1001703a 	wrctl	status,r2
  
  return context;
   2e1a8:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   2e1ac:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2e1b0:	008000f4 	movhi	r2,3
   2e1b4:	108b4d04 	addi	r2,r2,11572
   2e1b8:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
   2e1bc:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   2e1c0:	e0fffd17 	ldw	r3,-12(fp)
   2e1c4:	e0bff617 	ldw	r2,-40(fp)
   2e1c8:	1885883a 	add	r2,r3,r2
   2e1cc:	10c00044 	addi	r3,r2,1
   2e1d0:	e0bffc17 	ldw	r2,-16(fp)
   2e1d4:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   2e1d8:	e0bffc17 	ldw	r2,-16(fp)
   2e1dc:	10c00217 	ldw	r3,8(r2)
   2e1e0:	e0bff617 	ldw	r2,-40(fp)
   2e1e4:	1880042e 	bgeu	r3,r2,2e1f8 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
   2e1e8:	e0bffc17 	ldw	r2,-16(fp)
   2e1ec:	00c00044 	movi	r3,1
   2e1f0:	10c00405 	stb	r3,16(r2)
   2e1f4:	00000206 	br	2e200 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
   2e1f8:	e0bffc17 	ldw	r2,-16(fp)
   2e1fc:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2e200:	e0fffc17 	ldw	r3,-16(fp)
   2e204:	008000f4 	movhi	r2,3
   2e208:	10848404 	addi	r2,r2,4624
   2e20c:	e0bffa15 	stw	r2,-24(fp)
   2e210:	e0fffb15 	stw	r3,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2e214:	e0bffb17 	ldw	r2,-20(fp)
   2e218:	e0fffa17 	ldw	r3,-24(fp)
   2e21c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2e220:	e0bffa17 	ldw	r2,-24(fp)
   2e224:	10c00017 	ldw	r3,0(r2)
   2e228:	e0bffb17 	ldw	r2,-20(fp)
   2e22c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2e230:	e0bffa17 	ldw	r2,-24(fp)
   2e234:	10800017 	ldw	r2,0(r2)
   2e238:	e0fffb17 	ldw	r3,-20(fp)
   2e23c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2e240:	e0bffa17 	ldw	r2,-24(fp)
   2e244:	e0fffb17 	ldw	r3,-20(fp)
   2e248:	10c00015 	stw	r3,0(r2)
   2e24c:	e0bff817 	ldw	r2,-32(fp)
   2e250:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e254:	e0bff717 	ldw	r2,-36(fp)
   2e258:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   2e25c:	0005883a 	mov	r2,zero
   2e260:	00000306 	br	2e270 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
   2e264:	00bffa84 	movi	r2,-22
   2e268:	00000106 	br	2e270 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
   2e26c:	00bfde84 	movi	r2,-134
  }
}
   2e270:	e037883a 	mov	sp,fp
   2e274:	df000017 	ldw	fp,0(sp)
   2e278:	dec00104 	addi	sp,sp,4
   2e27c:	f800283a 	ret

0002e280 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   2e280:	defffe04 	addi	sp,sp,-8
   2e284:	df000115 	stw	fp,4(sp)
   2e288:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2e28c:	e03fff15 	stw	zero,-4(fp)
   2e290:	00000506 	br	2e2a8 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   2e294:	e0bfff17 	ldw	r2,-4(fp)
   2e298:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2e29c:	e0bfff17 	ldw	r2,-4(fp)
   2e2a0:	10800804 	addi	r2,r2,32
   2e2a4:	e0bfff15 	stw	r2,-4(fp)
   2e2a8:	e0bfff17 	ldw	r2,-4(fp)
   2e2ac:	10820030 	cmpltui	r2,r2,2048
   2e2b0:	103ff81e 	bne	r2,zero,2e294 <__alt_data_end+0xfffee294>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   2e2b4:	0001883a 	nop
   2e2b8:	e037883a 	mov	sp,fp
   2e2bc:	df000017 	ldw	fp,0(sp)
   2e2c0:	dec00104 	addi	sp,sp,4
   2e2c4:	f800283a 	ret

0002e2c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2e2c8:	defffe04 	addi	sp,sp,-8
   2e2cc:	dfc00115 	stw	ra,4(sp)
   2e2d0:	df000015 	stw	fp,0(sp)
   2e2d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e2d8:	008000f4 	movhi	r2,3
   2e2dc:	10848104 	addi	r2,r2,4612
   2e2e0:	10800017 	ldw	r2,0(r2)
   2e2e4:	10000526 	beq	r2,zero,2e2fc <alt_get_errno+0x34>
   2e2e8:	008000f4 	movhi	r2,3
   2e2ec:	10848104 	addi	r2,r2,4612
   2e2f0:	10800017 	ldw	r2,0(r2)
   2e2f4:	103ee83a 	callr	r2
   2e2f8:	00000206 	br	2e304 <alt_get_errno+0x3c>
   2e2fc:	008000f4 	movhi	r2,3
   2e300:	108b4704 	addi	r2,r2,11548
}
   2e304:	e037883a 	mov	sp,fp
   2e308:	dfc00117 	ldw	ra,4(sp)
   2e30c:	df000017 	ldw	fp,0(sp)
   2e310:	dec00204 	addi	sp,sp,8
   2e314:	f800283a 	ret

0002e318 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   2e318:	defffa04 	addi	sp,sp,-24
   2e31c:	dfc00515 	stw	ra,20(sp)
   2e320:	df000415 	stw	fp,16(sp)
   2e324:	df000404 	addi	fp,sp,16
   2e328:	e13ffe15 	stw	r4,-8(fp)
   2e32c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   2e330:	e0bffe17 	ldw	r2,-8(fp)
   2e334:	10000326 	beq	r2,zero,2e344 <alt_dev_llist_insert+0x2c>
   2e338:	e0bffe17 	ldw	r2,-8(fp)
   2e33c:	10800217 	ldw	r2,8(r2)
   2e340:	1000061e 	bne	r2,zero,2e35c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   2e344:	002e2c80 	call	2e2c8 <alt_get_errno>
   2e348:	1007883a 	mov	r3,r2
   2e34c:	00800584 	movi	r2,22
   2e350:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   2e354:	00bffa84 	movi	r2,-22
   2e358:	00001306 	br	2e3a8 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   2e35c:	e0bffe17 	ldw	r2,-8(fp)
   2e360:	e0ffff17 	ldw	r3,-4(fp)
   2e364:	e0fffc15 	stw	r3,-16(fp)
   2e368:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2e36c:	e0bffd17 	ldw	r2,-12(fp)
   2e370:	e0fffc17 	ldw	r3,-16(fp)
   2e374:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2e378:	e0bffc17 	ldw	r2,-16(fp)
   2e37c:	10c00017 	ldw	r3,0(r2)
   2e380:	e0bffd17 	ldw	r2,-12(fp)
   2e384:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2e388:	e0bffc17 	ldw	r2,-16(fp)
   2e38c:	10800017 	ldw	r2,0(r2)
   2e390:	e0fffd17 	ldw	r3,-12(fp)
   2e394:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2e398:	e0bffc17 	ldw	r2,-16(fp)
   2e39c:	e0fffd17 	ldw	r3,-12(fp)
   2e3a0:	10c00015 	stw	r3,0(r2)

  return 0;  
   2e3a4:	0005883a 	mov	r2,zero
}
   2e3a8:	e037883a 	mov	sp,fp
   2e3ac:	dfc00117 	ldw	ra,4(sp)
   2e3b0:	df000017 	ldw	fp,0(sp)
   2e3b4:	dec00204 	addi	sp,sp,8
   2e3b8:	f800283a 	ret

0002e3bc <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   2e3bc:	defffd04 	addi	sp,sp,-12
   2e3c0:	dfc00215 	stw	ra,8(sp)
   2e3c4:	df000115 	stw	fp,4(sp)
   2e3c8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2e3cc:	008000f4 	movhi	r2,3
   2e3d0:	10bd0404 	addi	r2,r2,-3056
   2e3d4:	e0bfff15 	stw	r2,-4(fp)
   2e3d8:	00000606 	br	2e3f4 <_do_ctors+0x38>
        (*ctor) (); 
   2e3dc:	e0bfff17 	ldw	r2,-4(fp)
   2e3e0:	10800017 	ldw	r2,0(r2)
   2e3e4:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2e3e8:	e0bfff17 	ldw	r2,-4(fp)
   2e3ec:	10bfff04 	addi	r2,r2,-4
   2e3f0:	e0bfff15 	stw	r2,-4(fp)
   2e3f4:	e0ffff17 	ldw	r3,-4(fp)
   2e3f8:	008000f4 	movhi	r2,3
   2e3fc:	10bd0504 	addi	r2,r2,-3052
   2e400:	18bff62e 	bgeu	r3,r2,2e3dc <__alt_data_end+0xfffee3dc>
        (*ctor) (); 
}
   2e404:	0001883a 	nop
   2e408:	e037883a 	mov	sp,fp
   2e40c:	dfc00117 	ldw	ra,4(sp)
   2e410:	df000017 	ldw	fp,0(sp)
   2e414:	dec00204 	addi	sp,sp,8
   2e418:	f800283a 	ret

0002e41c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   2e41c:	defffd04 	addi	sp,sp,-12
   2e420:	dfc00215 	stw	ra,8(sp)
   2e424:	df000115 	stw	fp,4(sp)
   2e428:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2e42c:	008000f4 	movhi	r2,3
   2e430:	10bd0404 	addi	r2,r2,-3056
   2e434:	e0bfff15 	stw	r2,-4(fp)
   2e438:	00000606 	br	2e454 <_do_dtors+0x38>
        (*dtor) (); 
   2e43c:	e0bfff17 	ldw	r2,-4(fp)
   2e440:	10800017 	ldw	r2,0(r2)
   2e444:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2e448:	e0bfff17 	ldw	r2,-4(fp)
   2e44c:	10bfff04 	addi	r2,r2,-4
   2e450:	e0bfff15 	stw	r2,-4(fp)
   2e454:	e0ffff17 	ldw	r3,-4(fp)
   2e458:	008000f4 	movhi	r2,3
   2e45c:	10bd0504 	addi	r2,r2,-3052
   2e460:	18bff62e 	bgeu	r3,r2,2e43c <__alt_data_end+0xfffee43c>
        (*dtor) (); 
}
   2e464:	0001883a 	nop
   2e468:	e037883a 	mov	sp,fp
   2e46c:	dfc00117 	ldw	ra,4(sp)
   2e470:	df000017 	ldw	fp,0(sp)
   2e474:	dec00204 	addi	sp,sp,8
   2e478:	f800283a 	ret

0002e47c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   2e47c:	defffe04 	addi	sp,sp,-8
   2e480:	dfc00115 	stw	ra,4(sp)
   2e484:	df000015 	stw	fp,0(sp)
   2e488:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   2e48c:	01440004 	movi	r5,4096
   2e490:	0009883a 	mov	r4,zero
   2e494:	002ef540 	call	2ef54 <alt_icache_flush>
#endif
}
   2e498:	0001883a 	nop
   2e49c:	e037883a 	mov	sp,fp
   2e4a0:	dfc00117 	ldw	ra,4(sp)
   2e4a4:	df000017 	ldw	fp,0(sp)
   2e4a8:	dec00204 	addi	sp,sp,8
   2e4ac:	f800283a 	ret

0002e4b0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2e4b0:	defff904 	addi	sp,sp,-28
   2e4b4:	dfc00615 	stw	ra,24(sp)
   2e4b8:	df000515 	stw	fp,20(sp)
   2e4bc:	df000504 	addi	fp,sp,20
   2e4c0:	e13ffc15 	stw	r4,-16(fp)
   2e4c4:	e17ffd15 	stw	r5,-12(fp)
   2e4c8:	e1bffe15 	stw	r6,-8(fp)
   2e4cc:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   2e4d0:	e0800217 	ldw	r2,8(fp)
   2e4d4:	d8800015 	stw	r2,0(sp)
   2e4d8:	e1ffff17 	ldw	r7,-4(fp)
   2e4dc:	e1bffe17 	ldw	r6,-8(fp)
   2e4e0:	e17ffd17 	ldw	r5,-12(fp)
   2e4e4:	e13ffc17 	ldw	r4,-16(fp)
   2e4e8:	002e6900 	call	2e690 <alt_iic_isr_register>
}  
   2e4ec:	e037883a 	mov	sp,fp
   2e4f0:	dfc00117 	ldw	ra,4(sp)
   2e4f4:	df000017 	ldw	fp,0(sp)
   2e4f8:	dec00204 	addi	sp,sp,8
   2e4fc:	f800283a 	ret

0002e500 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   2e500:	defff904 	addi	sp,sp,-28
   2e504:	df000615 	stw	fp,24(sp)
   2e508:	df000604 	addi	fp,sp,24
   2e50c:	e13ffe15 	stw	r4,-8(fp)
   2e510:	e17fff15 	stw	r5,-4(fp)
   2e514:	e0bfff17 	ldw	r2,-4(fp)
   2e518:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e51c:	0005303a 	rdctl	r2,status
   2e520:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e524:	e0fffb17 	ldw	r3,-20(fp)
   2e528:	00bfff84 	movi	r2,-2
   2e52c:	1884703a 	and	r2,r3,r2
   2e530:	1001703a 	wrctl	status,r2
  
  return context;
   2e534:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2e538:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   2e53c:	00c00044 	movi	r3,1
   2e540:	e0bffa17 	ldw	r2,-24(fp)
   2e544:	1884983a 	sll	r2,r3,r2
   2e548:	1007883a 	mov	r3,r2
   2e54c:	008000f4 	movhi	r2,3
   2e550:	108b4b04 	addi	r2,r2,11564
   2e554:	10800017 	ldw	r2,0(r2)
   2e558:	1886b03a 	or	r3,r3,r2
   2e55c:	008000f4 	movhi	r2,3
   2e560:	108b4b04 	addi	r2,r2,11564
   2e564:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2e568:	008000f4 	movhi	r2,3
   2e56c:	108b4b04 	addi	r2,r2,11564
   2e570:	10800017 	ldw	r2,0(r2)
   2e574:	100170fa 	wrctl	ienable,r2
   2e578:	e0bffc17 	ldw	r2,-16(fp)
   2e57c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e580:	e0bffd17 	ldw	r2,-12(fp)
   2e584:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2e588:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   2e58c:	0001883a 	nop
}
   2e590:	e037883a 	mov	sp,fp
   2e594:	df000017 	ldw	fp,0(sp)
   2e598:	dec00104 	addi	sp,sp,4
   2e59c:	f800283a 	ret

0002e5a0 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   2e5a0:	defff904 	addi	sp,sp,-28
   2e5a4:	df000615 	stw	fp,24(sp)
   2e5a8:	df000604 	addi	fp,sp,24
   2e5ac:	e13ffe15 	stw	r4,-8(fp)
   2e5b0:	e17fff15 	stw	r5,-4(fp)
   2e5b4:	e0bfff17 	ldw	r2,-4(fp)
   2e5b8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e5bc:	0005303a 	rdctl	r2,status
   2e5c0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e5c4:	e0fffb17 	ldw	r3,-20(fp)
   2e5c8:	00bfff84 	movi	r2,-2
   2e5cc:	1884703a 	and	r2,r3,r2
   2e5d0:	1001703a 	wrctl	status,r2
  
  return context;
   2e5d4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2e5d8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   2e5dc:	00c00044 	movi	r3,1
   2e5e0:	e0bffa17 	ldw	r2,-24(fp)
   2e5e4:	1884983a 	sll	r2,r3,r2
   2e5e8:	0084303a 	nor	r2,zero,r2
   2e5ec:	1007883a 	mov	r3,r2
   2e5f0:	008000f4 	movhi	r2,3
   2e5f4:	108b4b04 	addi	r2,r2,11564
   2e5f8:	10800017 	ldw	r2,0(r2)
   2e5fc:	1886703a 	and	r3,r3,r2
   2e600:	008000f4 	movhi	r2,3
   2e604:	108b4b04 	addi	r2,r2,11564
   2e608:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2e60c:	008000f4 	movhi	r2,3
   2e610:	108b4b04 	addi	r2,r2,11564
   2e614:	10800017 	ldw	r2,0(r2)
   2e618:	100170fa 	wrctl	ienable,r2
   2e61c:	e0bffc17 	ldw	r2,-16(fp)
   2e620:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e624:	e0bffd17 	ldw	r2,-12(fp)
   2e628:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2e62c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   2e630:	0001883a 	nop
}
   2e634:	e037883a 	mov	sp,fp
   2e638:	df000017 	ldw	fp,0(sp)
   2e63c:	dec00104 	addi	sp,sp,4
   2e640:	f800283a 	ret

0002e644 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   2e644:	defffc04 	addi	sp,sp,-16
   2e648:	df000315 	stw	fp,12(sp)
   2e64c:	df000304 	addi	fp,sp,12
   2e650:	e13ffe15 	stw	r4,-8(fp)
   2e654:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   2e658:	000530fa 	rdctl	r2,ienable
   2e65c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   2e660:	00c00044 	movi	r3,1
   2e664:	e0bfff17 	ldw	r2,-4(fp)
   2e668:	1884983a 	sll	r2,r3,r2
   2e66c:	1007883a 	mov	r3,r2
   2e670:	e0bffd17 	ldw	r2,-12(fp)
   2e674:	1884703a 	and	r2,r3,r2
   2e678:	1004c03a 	cmpne	r2,r2,zero
   2e67c:	10803fcc 	andi	r2,r2,255
}
   2e680:	e037883a 	mov	sp,fp
   2e684:	df000017 	ldw	fp,0(sp)
   2e688:	dec00104 	addi	sp,sp,4
   2e68c:	f800283a 	ret

0002e690 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2e690:	defff504 	addi	sp,sp,-44
   2e694:	dfc00a15 	stw	ra,40(sp)
   2e698:	df000915 	stw	fp,36(sp)
   2e69c:	df000904 	addi	fp,sp,36
   2e6a0:	e13ffc15 	stw	r4,-16(fp)
   2e6a4:	e17ffd15 	stw	r5,-12(fp)
   2e6a8:	e1bffe15 	stw	r6,-8(fp)
   2e6ac:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   2e6b0:	00bffa84 	movi	r2,-22
   2e6b4:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   2e6b8:	e0bffd17 	ldw	r2,-12(fp)
   2e6bc:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2e6c0:	e0bff817 	ldw	r2,-32(fp)
   2e6c4:	10800808 	cmpgei	r2,r2,32
   2e6c8:	1000271e 	bne	r2,zero,2e768 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e6cc:	0005303a 	rdctl	r2,status
   2e6d0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e6d4:	e0fffb17 	ldw	r3,-20(fp)
   2e6d8:	00bfff84 	movi	r2,-2
   2e6dc:	1884703a 	and	r2,r3,r2
   2e6e0:	1001703a 	wrctl	status,r2
  
  return context;
   2e6e4:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   2e6e8:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   2e6ec:	008000f4 	movhi	r2,3
   2e6f0:	108b5904 	addi	r2,r2,11620
   2e6f4:	e0fff817 	ldw	r3,-32(fp)
   2e6f8:	180690fa 	slli	r3,r3,3
   2e6fc:	10c5883a 	add	r2,r2,r3
   2e700:	e0fffe17 	ldw	r3,-8(fp)
   2e704:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   2e708:	008000f4 	movhi	r2,3
   2e70c:	108b5904 	addi	r2,r2,11620
   2e710:	e0fff817 	ldw	r3,-32(fp)
   2e714:	180690fa 	slli	r3,r3,3
   2e718:	10c5883a 	add	r2,r2,r3
   2e71c:	10800104 	addi	r2,r2,4
   2e720:	e0ffff17 	ldw	r3,-4(fp)
   2e724:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   2e728:	e0bffe17 	ldw	r2,-8(fp)
   2e72c:	10000526 	beq	r2,zero,2e744 <alt_iic_isr_register+0xb4>
   2e730:	e0bff817 	ldw	r2,-32(fp)
   2e734:	100b883a 	mov	r5,r2
   2e738:	e13ffc17 	ldw	r4,-16(fp)
   2e73c:	002e5000 	call	2e500 <alt_ic_irq_enable>
   2e740:	00000406 	br	2e754 <alt_iic_isr_register+0xc4>
   2e744:	e0bff817 	ldw	r2,-32(fp)
   2e748:	100b883a 	mov	r5,r2
   2e74c:	e13ffc17 	ldw	r4,-16(fp)
   2e750:	002e5a00 	call	2e5a0 <alt_ic_irq_disable>
   2e754:	e0bff715 	stw	r2,-36(fp)
   2e758:	e0bffa17 	ldw	r2,-24(fp)
   2e75c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e760:	e0bff917 	ldw	r2,-28(fp)
   2e764:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   2e768:	e0bff717 	ldw	r2,-36(fp)
}
   2e76c:	e037883a 	mov	sp,fp
   2e770:	dfc00117 	ldw	ra,4(sp)
   2e774:	df000017 	ldw	fp,0(sp)
   2e778:	dec00204 	addi	sp,sp,8
   2e77c:	f800283a 	ret

0002e780 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   2e780:	defff904 	addi	sp,sp,-28
   2e784:	dfc00615 	stw	ra,24(sp)
   2e788:	df000515 	stw	fp,20(sp)
   2e78c:	df000504 	addi	fp,sp,20
   2e790:	e13ffc15 	stw	r4,-16(fp)
   2e794:	e17ffd15 	stw	r5,-12(fp)
   2e798:	e1bffe15 	stw	r6,-8(fp)
   2e79c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   2e7a0:	e1bfff17 	ldw	r6,-4(fp)
   2e7a4:	e17ffe17 	ldw	r5,-8(fp)
   2e7a8:	e13ffd17 	ldw	r4,-12(fp)
   2e7ac:	002e9dc0 	call	2e9dc <open>
   2e7b0:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   2e7b4:	e0bffb17 	ldw	r2,-20(fp)
   2e7b8:	10001c16 	blt	r2,zero,2e82c <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   2e7bc:	008000f4 	movhi	r2,3
   2e7c0:	10bffe04 	addi	r2,r2,-8
   2e7c4:	e0fffb17 	ldw	r3,-20(fp)
   2e7c8:	18c00324 	muli	r3,r3,12
   2e7cc:	10c5883a 	add	r2,r2,r3
   2e7d0:	10c00017 	ldw	r3,0(r2)
   2e7d4:	e0bffc17 	ldw	r2,-16(fp)
   2e7d8:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   2e7dc:	008000f4 	movhi	r2,3
   2e7e0:	10bffe04 	addi	r2,r2,-8
   2e7e4:	e0fffb17 	ldw	r3,-20(fp)
   2e7e8:	18c00324 	muli	r3,r3,12
   2e7ec:	10c5883a 	add	r2,r2,r3
   2e7f0:	10800104 	addi	r2,r2,4
   2e7f4:	10c00017 	ldw	r3,0(r2)
   2e7f8:	e0bffc17 	ldw	r2,-16(fp)
   2e7fc:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   2e800:	008000f4 	movhi	r2,3
   2e804:	10bffe04 	addi	r2,r2,-8
   2e808:	e0fffb17 	ldw	r3,-20(fp)
   2e80c:	18c00324 	muli	r3,r3,12
   2e810:	10c5883a 	add	r2,r2,r3
   2e814:	10800204 	addi	r2,r2,8
   2e818:	10c00017 	ldw	r3,0(r2)
   2e81c:	e0bffc17 	ldw	r2,-16(fp)
   2e820:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   2e824:	e13ffb17 	ldw	r4,-20(fp)
   2e828:	002d3b40 	call	2d3b4 <alt_release_fd>
  }
} 
   2e82c:	0001883a 	nop
   2e830:	e037883a 	mov	sp,fp
   2e834:	dfc00117 	ldw	ra,4(sp)
   2e838:	df000017 	ldw	fp,0(sp)
   2e83c:	dec00204 	addi	sp,sp,8
   2e840:	f800283a 	ret

0002e844 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   2e844:	defffb04 	addi	sp,sp,-20
   2e848:	dfc00415 	stw	ra,16(sp)
   2e84c:	df000315 	stw	fp,12(sp)
   2e850:	df000304 	addi	fp,sp,12
   2e854:	e13ffd15 	stw	r4,-12(fp)
   2e858:	e17ffe15 	stw	r5,-8(fp)
   2e85c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   2e860:	01c07fc4 	movi	r7,511
   2e864:	01800044 	movi	r6,1
   2e868:	e17ffd17 	ldw	r5,-12(fp)
   2e86c:	010000f4 	movhi	r4,3
   2e870:	21000104 	addi	r4,r4,4
   2e874:	002e7800 	call	2e780 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   2e878:	01c07fc4 	movi	r7,511
   2e87c:	000d883a 	mov	r6,zero
   2e880:	e17ffe17 	ldw	r5,-8(fp)
   2e884:	010000f4 	movhi	r4,3
   2e888:	213ffe04 	addi	r4,r4,-8
   2e88c:	002e7800 	call	2e780 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   2e890:	01c07fc4 	movi	r7,511
   2e894:	01800044 	movi	r6,1
   2e898:	e17fff17 	ldw	r5,-4(fp)
   2e89c:	010000f4 	movhi	r4,3
   2e8a0:	21000404 	addi	r4,r4,16
   2e8a4:	002e7800 	call	2e780 <alt_open_fd>
}  
   2e8a8:	0001883a 	nop
   2e8ac:	e037883a 	mov	sp,fp
   2e8b0:	dfc00117 	ldw	ra,4(sp)
   2e8b4:	df000017 	ldw	fp,0(sp)
   2e8b8:	dec00204 	addi	sp,sp,8
   2e8bc:	f800283a 	ret

0002e8c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2e8c0:	defffe04 	addi	sp,sp,-8
   2e8c4:	dfc00115 	stw	ra,4(sp)
   2e8c8:	df000015 	stw	fp,0(sp)
   2e8cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e8d0:	008000f4 	movhi	r2,3
   2e8d4:	10848104 	addi	r2,r2,4612
   2e8d8:	10800017 	ldw	r2,0(r2)
   2e8dc:	10000526 	beq	r2,zero,2e8f4 <alt_get_errno+0x34>
   2e8e0:	008000f4 	movhi	r2,3
   2e8e4:	10848104 	addi	r2,r2,4612
   2e8e8:	10800017 	ldw	r2,0(r2)
   2e8ec:	103ee83a 	callr	r2
   2e8f0:	00000206 	br	2e8fc <alt_get_errno+0x3c>
   2e8f4:	008000f4 	movhi	r2,3
   2e8f8:	108b4704 	addi	r2,r2,11548
}
   2e8fc:	e037883a 	mov	sp,fp
   2e900:	dfc00117 	ldw	ra,4(sp)
   2e904:	df000017 	ldw	fp,0(sp)
   2e908:	dec00204 	addi	sp,sp,8
   2e90c:	f800283a 	ret

0002e910 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   2e910:	defffd04 	addi	sp,sp,-12
   2e914:	df000215 	stw	fp,8(sp)
   2e918:	df000204 	addi	fp,sp,8
   2e91c:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   2e920:	e0bfff17 	ldw	r2,-4(fp)
   2e924:	10800217 	ldw	r2,8(r2)
   2e928:	10d00034 	orhi	r3,r2,16384
   2e92c:	e0bfff17 	ldw	r2,-4(fp)
   2e930:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2e934:	e03ffe15 	stw	zero,-8(fp)
   2e938:	00001d06 	br	2e9b0 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2e93c:	008000f4 	movhi	r2,3
   2e940:	10bffe04 	addi	r2,r2,-8
   2e944:	e0fffe17 	ldw	r3,-8(fp)
   2e948:	18c00324 	muli	r3,r3,12
   2e94c:	10c5883a 	add	r2,r2,r3
   2e950:	10c00017 	ldw	r3,0(r2)
   2e954:	e0bfff17 	ldw	r2,-4(fp)
   2e958:	10800017 	ldw	r2,0(r2)
   2e95c:	1880111e 	bne	r3,r2,2e9a4 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2e960:	008000f4 	movhi	r2,3
   2e964:	10bffe04 	addi	r2,r2,-8
   2e968:	e0fffe17 	ldw	r3,-8(fp)
   2e96c:	18c00324 	muli	r3,r3,12
   2e970:	10c5883a 	add	r2,r2,r3
   2e974:	10800204 	addi	r2,r2,8
   2e978:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2e97c:	1000090e 	bge	r2,zero,2e9a4 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   2e980:	e0bffe17 	ldw	r2,-8(fp)
   2e984:	10c00324 	muli	r3,r2,12
   2e988:	008000f4 	movhi	r2,3
   2e98c:	10bffe04 	addi	r2,r2,-8
   2e990:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2e994:	e0bfff17 	ldw	r2,-4(fp)
   2e998:	18800226 	beq	r3,r2,2e9a4 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   2e99c:	00bffcc4 	movi	r2,-13
   2e9a0:	00000a06 	br	2e9cc <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2e9a4:	e0bffe17 	ldw	r2,-8(fp)
   2e9a8:	10800044 	addi	r2,r2,1
   2e9ac:	e0bffe15 	stw	r2,-8(fp)
   2e9b0:	008000f4 	movhi	r2,3
   2e9b4:	10848004 	addi	r2,r2,4608
   2e9b8:	10800017 	ldw	r2,0(r2)
   2e9bc:	1007883a 	mov	r3,r2
   2e9c0:	e0bffe17 	ldw	r2,-8(fp)
   2e9c4:	18bfdd2e 	bgeu	r3,r2,2e93c <__alt_data_end+0xfffee93c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   2e9c8:	0005883a 	mov	r2,zero
}
   2e9cc:	e037883a 	mov	sp,fp
   2e9d0:	df000017 	ldw	fp,0(sp)
   2e9d4:	dec00104 	addi	sp,sp,4
   2e9d8:	f800283a 	ret

0002e9dc <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   2e9dc:	defff604 	addi	sp,sp,-40
   2e9e0:	dfc00915 	stw	ra,36(sp)
   2e9e4:	df000815 	stw	fp,32(sp)
   2e9e8:	df000804 	addi	fp,sp,32
   2e9ec:	e13ffd15 	stw	r4,-12(fp)
   2e9f0:	e17ffe15 	stw	r5,-8(fp)
   2e9f4:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   2e9f8:	00bfffc4 	movi	r2,-1
   2e9fc:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   2ea00:	00bffb44 	movi	r2,-19
   2ea04:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   2ea08:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   2ea0c:	014000f4 	movhi	r5,3
   2ea10:	29447e04 	addi	r5,r5,4600
   2ea14:	e13ffd17 	ldw	r4,-12(fp)
   2ea18:	002ecfc0 	call	2ecfc <alt_find_dev>
   2ea1c:	e0bff815 	stw	r2,-32(fp)
   2ea20:	e0bff817 	ldw	r2,-32(fp)
   2ea24:	1000051e 	bne	r2,zero,2ea3c <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   2ea28:	e13ffd17 	ldw	r4,-12(fp)
   2ea2c:	002ed8c0 	call	2ed8c <alt_find_file>
   2ea30:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   2ea34:	00800044 	movi	r2,1
   2ea38:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   2ea3c:	e0bff817 	ldw	r2,-32(fp)
   2ea40:	10002926 	beq	r2,zero,2eae8 <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
   2ea44:	e13ff817 	ldw	r4,-32(fp)
   2ea48:	002eea00 	call	2eea0 <alt_get_fd>
   2ea4c:	e0bff915 	stw	r2,-28(fp)
   2ea50:	e0bff917 	ldw	r2,-28(fp)
   2ea54:	1000030e 	bge	r2,zero,2ea64 <open+0x88>
    {
      status = index;
   2ea58:	e0bff917 	ldw	r2,-28(fp)
   2ea5c:	e0bffa15 	stw	r2,-24(fp)
   2ea60:	00002306 	br	2eaf0 <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
   2ea64:	e0bff917 	ldw	r2,-28(fp)
   2ea68:	10c00324 	muli	r3,r2,12
   2ea6c:	008000f4 	movhi	r2,3
   2ea70:	10bffe04 	addi	r2,r2,-8
   2ea74:	1885883a 	add	r2,r3,r2
   2ea78:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   2ea7c:	e0fffe17 	ldw	r3,-8(fp)
   2ea80:	00900034 	movhi	r2,16384
   2ea84:	10bfffc4 	addi	r2,r2,-1
   2ea88:	1886703a 	and	r3,r3,r2
   2ea8c:	e0bffc17 	ldw	r2,-16(fp)
   2ea90:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   2ea94:	e0bffb17 	ldw	r2,-20(fp)
   2ea98:	1000051e 	bne	r2,zero,2eab0 <open+0xd4>
   2ea9c:	e13ffc17 	ldw	r4,-16(fp)
   2eaa0:	002e9100 	call	2e910 <alt_file_locked>
   2eaa4:	e0bffa15 	stw	r2,-24(fp)
   2eaa8:	e0bffa17 	ldw	r2,-24(fp)
   2eaac:	10001016 	blt	r2,zero,2eaf0 <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   2eab0:	e0bff817 	ldw	r2,-32(fp)
   2eab4:	10800317 	ldw	r2,12(r2)
   2eab8:	10000826 	beq	r2,zero,2eadc <open+0x100>
   2eabc:	e0bff817 	ldw	r2,-32(fp)
   2eac0:	10800317 	ldw	r2,12(r2)
   2eac4:	e1ffff17 	ldw	r7,-4(fp)
   2eac8:	e1bffe17 	ldw	r6,-8(fp)
   2eacc:	e17ffd17 	ldw	r5,-12(fp)
   2ead0:	e13ffc17 	ldw	r4,-16(fp)
   2ead4:	103ee83a 	callr	r2
   2ead8:	00000106 	br	2eae0 <open+0x104>
   2eadc:	0005883a 	mov	r2,zero
   2eae0:	e0bffa15 	stw	r2,-24(fp)
   2eae4:	00000206 	br	2eaf0 <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
   2eae8:	00bffb44 	movi	r2,-19
   2eaec:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   2eaf0:	e0bffa17 	ldw	r2,-24(fp)
   2eaf4:	1000090e 	bge	r2,zero,2eb1c <open+0x140>
  {
    alt_release_fd (index);  
   2eaf8:	e13ff917 	ldw	r4,-28(fp)
   2eafc:	002d3b40 	call	2d3b4 <alt_release_fd>
    ALT_ERRNO = -status;
   2eb00:	002e8c00 	call	2e8c0 <alt_get_errno>
   2eb04:	1007883a 	mov	r3,r2
   2eb08:	e0bffa17 	ldw	r2,-24(fp)
   2eb0c:	0085c83a 	sub	r2,zero,r2
   2eb10:	18800015 	stw	r2,0(r3)
    return -1;
   2eb14:	00bfffc4 	movi	r2,-1
   2eb18:	00000106 	br	2eb20 <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
   2eb1c:	e0bff917 	ldw	r2,-28(fp)
}
   2eb20:	e037883a 	mov	sp,fp
   2eb24:	dfc00117 	ldw	ra,4(sp)
   2eb28:	df000017 	ldw	fp,0(sp)
   2eb2c:	dec00204 	addi	sp,sp,8
   2eb30:	f800283a 	ret

0002eb34 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   2eb34:	defffa04 	addi	sp,sp,-24
   2eb38:	df000515 	stw	fp,20(sp)
   2eb3c:	df000504 	addi	fp,sp,20
   2eb40:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2eb44:	0005303a 	rdctl	r2,status
   2eb48:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2eb4c:	e0fffc17 	ldw	r3,-16(fp)
   2eb50:	00bfff84 	movi	r2,-2
   2eb54:	1884703a 	and	r2,r3,r2
   2eb58:	1001703a 	wrctl	status,r2
  
  return context;
   2eb5c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   2eb60:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   2eb64:	e0bfff17 	ldw	r2,-4(fp)
   2eb68:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   2eb6c:	e0bffd17 	ldw	r2,-12(fp)
   2eb70:	10800017 	ldw	r2,0(r2)
   2eb74:	e0fffd17 	ldw	r3,-12(fp)
   2eb78:	18c00117 	ldw	r3,4(r3)
   2eb7c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   2eb80:	e0bffd17 	ldw	r2,-12(fp)
   2eb84:	10800117 	ldw	r2,4(r2)
   2eb88:	e0fffd17 	ldw	r3,-12(fp)
   2eb8c:	18c00017 	ldw	r3,0(r3)
   2eb90:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   2eb94:	e0bffd17 	ldw	r2,-12(fp)
   2eb98:	e0fffd17 	ldw	r3,-12(fp)
   2eb9c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   2eba0:	e0bffd17 	ldw	r2,-12(fp)
   2eba4:	e0fffd17 	ldw	r3,-12(fp)
   2eba8:	10c00015 	stw	r3,0(r2)
   2ebac:	e0bffb17 	ldw	r2,-20(fp)
   2ebb0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ebb4:	e0bffe17 	ldw	r2,-8(fp)
   2ebb8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   2ebbc:	0001883a 	nop
   2ebc0:	e037883a 	mov	sp,fp
   2ebc4:	df000017 	ldw	fp,0(sp)
   2ebc8:	dec00104 	addi	sp,sp,4
   2ebcc:	f800283a 	ret

0002ebd0 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   2ebd0:	defffb04 	addi	sp,sp,-20
   2ebd4:	dfc00415 	stw	ra,16(sp)
   2ebd8:	df000315 	stw	fp,12(sp)
   2ebdc:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   2ebe0:	d0a00e17 	ldw	r2,-32712(gp)
   2ebe4:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   2ebe8:	d0a6d717 	ldw	r2,-25764(gp)
   2ebec:	10800044 	addi	r2,r2,1
   2ebf0:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2ebf4:	00002e06 	br	2ecb0 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   2ebf8:	e0bffd17 	ldw	r2,-12(fp)
   2ebfc:	10800017 	ldw	r2,0(r2)
   2ec00:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   2ec04:	e0bffd17 	ldw	r2,-12(fp)
   2ec08:	10800403 	ldbu	r2,16(r2)
   2ec0c:	10803fcc 	andi	r2,r2,255
   2ec10:	10000426 	beq	r2,zero,2ec24 <alt_tick+0x54>
   2ec14:	d0a6d717 	ldw	r2,-25764(gp)
   2ec18:	1000021e 	bne	r2,zero,2ec24 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   2ec1c:	e0bffd17 	ldw	r2,-12(fp)
   2ec20:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   2ec24:	e0bffd17 	ldw	r2,-12(fp)
   2ec28:	10800217 	ldw	r2,8(r2)
   2ec2c:	d0e6d717 	ldw	r3,-25764(gp)
   2ec30:	18801d36 	bltu	r3,r2,2eca8 <alt_tick+0xd8>
   2ec34:	e0bffd17 	ldw	r2,-12(fp)
   2ec38:	10800403 	ldbu	r2,16(r2)
   2ec3c:	10803fcc 	andi	r2,r2,255
   2ec40:	1000191e 	bne	r2,zero,2eca8 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   2ec44:	e0bffd17 	ldw	r2,-12(fp)
   2ec48:	10800317 	ldw	r2,12(r2)
   2ec4c:	e0fffd17 	ldw	r3,-12(fp)
   2ec50:	18c00517 	ldw	r3,20(r3)
   2ec54:	1809883a 	mov	r4,r3
   2ec58:	103ee83a 	callr	r2
   2ec5c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   2ec60:	e0bfff17 	ldw	r2,-4(fp)
   2ec64:	1000031e 	bne	r2,zero,2ec74 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   2ec68:	e13ffd17 	ldw	r4,-12(fp)
   2ec6c:	002eb340 	call	2eb34 <alt_alarm_stop>
   2ec70:	00000d06 	br	2eca8 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   2ec74:	e0bffd17 	ldw	r2,-12(fp)
   2ec78:	10c00217 	ldw	r3,8(r2)
   2ec7c:	e0bfff17 	ldw	r2,-4(fp)
   2ec80:	1887883a 	add	r3,r3,r2
   2ec84:	e0bffd17 	ldw	r2,-12(fp)
   2ec88:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   2ec8c:	e0bffd17 	ldw	r2,-12(fp)
   2ec90:	10c00217 	ldw	r3,8(r2)
   2ec94:	d0a6d717 	ldw	r2,-25764(gp)
   2ec98:	1880032e 	bgeu	r3,r2,2eca8 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   2ec9c:	e0bffd17 	ldw	r2,-12(fp)
   2eca0:	00c00044 	movi	r3,1
   2eca4:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   2eca8:	e0bffe17 	ldw	r2,-8(fp)
   2ecac:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2ecb0:	e0fffd17 	ldw	r3,-12(fp)
   2ecb4:	d0a00e04 	addi	r2,gp,-32712
   2ecb8:	18bfcf1e 	bne	r3,r2,2ebf8 <__alt_data_end+0xfffeebf8>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   2ecbc:	0001883a 	nop
}
   2ecc0:	0001883a 	nop
   2ecc4:	e037883a 	mov	sp,fp
   2ecc8:	dfc00117 	ldw	ra,4(sp)
   2eccc:	df000017 	ldw	fp,0(sp)
   2ecd0:	dec00204 	addi	sp,sp,8
   2ecd4:	f800283a 	ret

0002ecd8 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   2ecd8:	deffff04 	addi	sp,sp,-4
   2ecdc:	df000015 	stw	fp,0(sp)
   2ece0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   2ece4:	000170fa 	wrctl	ienable,zero
}
   2ece8:	0001883a 	nop
   2ecec:	e037883a 	mov	sp,fp
   2ecf0:	df000017 	ldw	fp,0(sp)
   2ecf4:	dec00104 	addi	sp,sp,4
   2ecf8:	f800283a 	ret

0002ecfc <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   2ecfc:	defffa04 	addi	sp,sp,-24
   2ed00:	dfc00515 	stw	ra,20(sp)
   2ed04:	df000415 	stw	fp,16(sp)
   2ed08:	df000404 	addi	fp,sp,16
   2ed0c:	e13ffe15 	stw	r4,-8(fp)
   2ed10:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   2ed14:	e0bfff17 	ldw	r2,-4(fp)
   2ed18:	10800017 	ldw	r2,0(r2)
   2ed1c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   2ed20:	e13ffe17 	ldw	r4,-8(fp)
   2ed24:	00204740 	call	20474 <strlen>
   2ed28:	10800044 	addi	r2,r2,1
   2ed2c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2ed30:	00000d06 	br	2ed68 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   2ed34:	e0bffc17 	ldw	r2,-16(fp)
   2ed38:	10800217 	ldw	r2,8(r2)
   2ed3c:	e0fffd17 	ldw	r3,-12(fp)
   2ed40:	180d883a 	mov	r6,r3
   2ed44:	e17ffe17 	ldw	r5,-8(fp)
   2ed48:	1009883a 	mov	r4,r2
   2ed4c:	002f0cc0 	call	2f0cc <memcmp>
   2ed50:	1000021e 	bne	r2,zero,2ed5c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   2ed54:	e0bffc17 	ldw	r2,-16(fp)
   2ed58:	00000706 	br	2ed78 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   2ed5c:	e0bffc17 	ldw	r2,-16(fp)
   2ed60:	10800017 	ldw	r2,0(r2)
   2ed64:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2ed68:	e0fffc17 	ldw	r3,-16(fp)
   2ed6c:	e0bfff17 	ldw	r2,-4(fp)
   2ed70:	18bff01e 	bne	r3,r2,2ed34 <__alt_data_end+0xfffeed34>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   2ed74:	0005883a 	mov	r2,zero
}
   2ed78:	e037883a 	mov	sp,fp
   2ed7c:	dfc00117 	ldw	ra,4(sp)
   2ed80:	df000017 	ldw	fp,0(sp)
   2ed84:	dec00204 	addi	sp,sp,8
   2ed88:	f800283a 	ret

0002ed8c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   2ed8c:	defffb04 	addi	sp,sp,-20
   2ed90:	dfc00415 	stw	ra,16(sp)
   2ed94:	df000315 	stw	fp,12(sp)
   2ed98:	df000304 	addi	fp,sp,12
   2ed9c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   2eda0:	008000f4 	movhi	r2,3
   2eda4:	10847c04 	addi	r2,r2,4592
   2eda8:	10800017 	ldw	r2,0(r2)
   2edac:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2edb0:	00003106 	br	2ee78 <alt_find_file+0xec>
  {
    len = strlen(next->name);
   2edb4:	e0bffd17 	ldw	r2,-12(fp)
   2edb8:	10800217 	ldw	r2,8(r2)
   2edbc:	1009883a 	mov	r4,r2
   2edc0:	00204740 	call	20474 <strlen>
   2edc4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   2edc8:	e0bffd17 	ldw	r2,-12(fp)
   2edcc:	10c00217 	ldw	r3,8(r2)
   2edd0:	e0bffe17 	ldw	r2,-8(fp)
   2edd4:	10bfffc4 	addi	r2,r2,-1
   2edd8:	1885883a 	add	r2,r3,r2
   2eddc:	10800003 	ldbu	r2,0(r2)
   2ede0:	10803fcc 	andi	r2,r2,255
   2ede4:	1080201c 	xori	r2,r2,128
   2ede8:	10bfe004 	addi	r2,r2,-128
   2edec:	10800bd8 	cmpnei	r2,r2,47
   2edf0:	1000031e 	bne	r2,zero,2ee00 <alt_find_file+0x74>
    {
      len -= 1;
   2edf4:	e0bffe17 	ldw	r2,-8(fp)
   2edf8:	10bfffc4 	addi	r2,r2,-1
   2edfc:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2ee00:	e0bffe17 	ldw	r2,-8(fp)
   2ee04:	e0ffff17 	ldw	r3,-4(fp)
   2ee08:	1885883a 	add	r2,r3,r2
   2ee0c:	10800003 	ldbu	r2,0(r2)
   2ee10:	10803fcc 	andi	r2,r2,255
   2ee14:	1080201c 	xori	r2,r2,128
   2ee18:	10bfe004 	addi	r2,r2,-128
   2ee1c:	10800be0 	cmpeqi	r2,r2,47
   2ee20:	1000081e 	bne	r2,zero,2ee44 <alt_find_file+0xb8>
   2ee24:	e0bffe17 	ldw	r2,-8(fp)
   2ee28:	e0ffff17 	ldw	r3,-4(fp)
   2ee2c:	1885883a 	add	r2,r3,r2
   2ee30:	10800003 	ldbu	r2,0(r2)
   2ee34:	10803fcc 	andi	r2,r2,255
   2ee38:	1080201c 	xori	r2,r2,128
   2ee3c:	10bfe004 	addi	r2,r2,-128
   2ee40:	10000a1e 	bne	r2,zero,2ee6c <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
   2ee44:	e0bffd17 	ldw	r2,-12(fp)
   2ee48:	10800217 	ldw	r2,8(r2)
   2ee4c:	e0fffe17 	ldw	r3,-8(fp)
   2ee50:	180d883a 	mov	r6,r3
   2ee54:	e17fff17 	ldw	r5,-4(fp)
   2ee58:	1009883a 	mov	r4,r2
   2ee5c:	002f0cc0 	call	2f0cc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2ee60:	1000021e 	bne	r2,zero,2ee6c <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   2ee64:	e0bffd17 	ldw	r2,-12(fp)
   2ee68:	00000806 	br	2ee8c <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
   2ee6c:	e0bffd17 	ldw	r2,-12(fp)
   2ee70:	10800017 	ldw	r2,0(r2)
   2ee74:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2ee78:	e0fffd17 	ldw	r3,-12(fp)
   2ee7c:	008000f4 	movhi	r2,3
   2ee80:	10847c04 	addi	r2,r2,4592
   2ee84:	18bfcb1e 	bne	r3,r2,2edb4 <__alt_data_end+0xfffeedb4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   2ee88:	0005883a 	mov	r2,zero
}
   2ee8c:	e037883a 	mov	sp,fp
   2ee90:	dfc00117 	ldw	ra,4(sp)
   2ee94:	df000017 	ldw	fp,0(sp)
   2ee98:	dec00204 	addi	sp,sp,8
   2ee9c:	f800283a 	ret

0002eea0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   2eea0:	defffc04 	addi	sp,sp,-16
   2eea4:	df000315 	stw	fp,12(sp)
   2eea8:	df000304 	addi	fp,sp,12
   2eeac:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   2eeb0:	00bffa04 	movi	r2,-24
   2eeb4:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2eeb8:	e03ffd15 	stw	zero,-12(fp)
   2eebc:	00001d06 	br	2ef34 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
   2eec0:	008000f4 	movhi	r2,3
   2eec4:	10bffe04 	addi	r2,r2,-8
   2eec8:	e0fffd17 	ldw	r3,-12(fp)
   2eecc:	18c00324 	muli	r3,r3,12
   2eed0:	10c5883a 	add	r2,r2,r3
   2eed4:	10800017 	ldw	r2,0(r2)
   2eed8:	1000131e 	bne	r2,zero,2ef28 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
   2eedc:	008000f4 	movhi	r2,3
   2eee0:	10bffe04 	addi	r2,r2,-8
   2eee4:	e0fffd17 	ldw	r3,-12(fp)
   2eee8:	18c00324 	muli	r3,r3,12
   2eeec:	10c5883a 	add	r2,r2,r3
   2eef0:	e0ffff17 	ldw	r3,-4(fp)
   2eef4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   2eef8:	008000f4 	movhi	r2,3
   2eefc:	10848004 	addi	r2,r2,4608
   2ef00:	10c00017 	ldw	r3,0(r2)
   2ef04:	e0bffd17 	ldw	r2,-12(fp)
   2ef08:	1880040e 	bge	r3,r2,2ef1c <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
   2ef0c:	008000f4 	movhi	r2,3
   2ef10:	10848004 	addi	r2,r2,4608
   2ef14:	e0fffd17 	ldw	r3,-12(fp)
   2ef18:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
   2ef1c:	e0bffd17 	ldw	r2,-12(fp)
   2ef20:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   2ef24:	00000606 	br	2ef40 <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2ef28:	e0bffd17 	ldw	r2,-12(fp)
   2ef2c:	10800044 	addi	r2,r2,1
   2ef30:	e0bffd15 	stw	r2,-12(fp)
   2ef34:	e0bffd17 	ldw	r2,-12(fp)
   2ef38:	10800810 	cmplti	r2,r2,32
   2ef3c:	103fe01e 	bne	r2,zero,2eec0 <__alt_data_end+0xfffeeec0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   2ef40:	e0bffe17 	ldw	r2,-8(fp)
}
   2ef44:	e037883a 	mov	sp,fp
   2ef48:	df000017 	ldw	fp,0(sp)
   2ef4c:	dec00104 	addi	sp,sp,4
   2ef50:	f800283a 	ret

0002ef54 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   2ef54:	defffb04 	addi	sp,sp,-20
   2ef58:	df000415 	stw	fp,16(sp)
   2ef5c:	df000404 	addi	fp,sp,16
   2ef60:	e13ffe15 	stw	r4,-8(fp)
   2ef64:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   2ef68:	e0bfff17 	ldw	r2,-4(fp)
   2ef6c:	10840070 	cmpltui	r2,r2,4097
   2ef70:	1000021e 	bne	r2,zero,2ef7c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   2ef74:	00840004 	movi	r2,4096
   2ef78:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   2ef7c:	e0fffe17 	ldw	r3,-8(fp)
   2ef80:	e0bfff17 	ldw	r2,-4(fp)
   2ef84:	1885883a 	add	r2,r3,r2
   2ef88:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2ef8c:	e0bffe17 	ldw	r2,-8(fp)
   2ef90:	e0bffc15 	stw	r2,-16(fp)
   2ef94:	00000506 	br	2efac <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   2ef98:	e0bffc17 	ldw	r2,-16(fp)
   2ef9c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2efa0:	e0bffc17 	ldw	r2,-16(fp)
   2efa4:	10800804 	addi	r2,r2,32
   2efa8:	e0bffc15 	stw	r2,-16(fp)
   2efac:	e0fffc17 	ldw	r3,-16(fp)
   2efb0:	e0bffd17 	ldw	r2,-12(fp)
   2efb4:	18bff836 	bltu	r3,r2,2ef98 <__alt_data_end+0xfffeef98>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   2efb8:	e0bffe17 	ldw	r2,-8(fp)
   2efbc:	108007cc 	andi	r2,r2,31
   2efc0:	10000226 	beq	r2,zero,2efcc <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   2efc4:	e0bffc17 	ldw	r2,-16(fp)
   2efc8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   2efcc:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   2efd0:	0001883a 	nop
   2efd4:	e037883a 	mov	sp,fp
   2efd8:	df000017 	ldw	fp,0(sp)
   2efdc:	dec00104 	addi	sp,sp,4
   2efe0:	f800283a 	ret

0002efe4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   2efe4:	defffe04 	addi	sp,sp,-8
   2efe8:	df000115 	stw	fp,4(sp)
   2efec:	df000104 	addi	fp,sp,4
   2eff0:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   2eff4:	e0bfff17 	ldw	r2,-4(fp)
   2eff8:	10bffe84 	addi	r2,r2,-6
   2effc:	10c00428 	cmpgeui	r3,r2,16
   2f000:	18001a1e 	bne	r3,zero,2f06c <alt_exception_cause_generated_bad_addr+0x88>
   2f004:	100690ba 	slli	r3,r2,2
   2f008:	008000f4 	movhi	r2,3
   2f00c:	10bc0704 	addi	r2,r2,-4068
   2f010:	1885883a 	add	r2,r3,r2
   2f014:	10800017 	ldw	r2,0(r2)
   2f018:	1000683a 	jmp	r2
   2f01c:	0002f05c 	xori	zero,zero,3009
   2f020:	0002f05c 	xori	zero,zero,3009
   2f024:	0002f06c 	andhi	zero,zero,3009
   2f028:	0002f06c 	andhi	zero,zero,3009
   2f02c:	0002f06c 	andhi	zero,zero,3009
   2f030:	0002f05c 	xori	zero,zero,3009
   2f034:	0002f064 	muli	zero,zero,3009
   2f038:	0002f06c 	andhi	zero,zero,3009
   2f03c:	0002f05c 	xori	zero,zero,3009
   2f040:	0002f05c 	xori	zero,zero,3009
   2f044:	0002f06c 	andhi	zero,zero,3009
   2f048:	0002f05c 	xori	zero,zero,3009
   2f04c:	0002f064 	muli	zero,zero,3009
   2f050:	0002f06c 	andhi	zero,zero,3009
   2f054:	0002f06c 	andhi	zero,zero,3009
   2f058:	0002f05c 	xori	zero,zero,3009
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   2f05c:	00800044 	movi	r2,1
   2f060:	00000306 	br	2f070 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   2f064:	0005883a 	mov	r2,zero
   2f068:	00000106 	br	2f070 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   2f06c:	0005883a 	mov	r2,zero
  }
}
   2f070:	e037883a 	mov	sp,fp
   2f074:	df000017 	ldw	fp,0(sp)
   2f078:	dec00104 	addi	sp,sp,4
   2f07c:	f800283a 	ret

0002f080 <atexit>:
   2f080:	200b883a 	mov	r5,r4
   2f084:	000f883a 	mov	r7,zero
   2f088:	000d883a 	mov	r6,zero
   2f08c:	0009883a 	mov	r4,zero
   2f090:	002f1481 	jmpi	2f148 <__register_exitproc>

0002f094 <exit>:
   2f094:	defffe04 	addi	sp,sp,-8
   2f098:	000b883a 	mov	r5,zero
   2f09c:	dc000015 	stw	r16,0(sp)
   2f0a0:	dfc00115 	stw	ra,4(sp)
   2f0a4:	2021883a 	mov	r16,r4
   2f0a8:	002f2600 	call	2f260 <__call_exitprocs>
   2f0ac:	008000f4 	movhi	r2,3
   2f0b0:	10847604 	addi	r2,r2,4568
   2f0b4:	11000017 	ldw	r4,0(r2)
   2f0b8:	20800f17 	ldw	r2,60(r4)
   2f0bc:	10000126 	beq	r2,zero,2f0c4 <exit+0x30>
   2f0c0:	103ee83a 	callr	r2
   2f0c4:	8009883a 	mov	r4,r16
   2f0c8:	002f3e00 	call	2f3e0 <_exit>

0002f0cc <memcmp>:
   2f0cc:	01c000c4 	movi	r7,3
   2f0d0:	3980192e 	bgeu	r7,r6,2f138 <memcmp+0x6c>
   2f0d4:	2144b03a 	or	r2,r4,r5
   2f0d8:	11c4703a 	and	r2,r2,r7
   2f0dc:	10000f26 	beq	r2,zero,2f11c <memcmp+0x50>
   2f0e0:	20800003 	ldbu	r2,0(r4)
   2f0e4:	28c00003 	ldbu	r3,0(r5)
   2f0e8:	10c0151e 	bne	r2,r3,2f140 <memcmp+0x74>
   2f0ec:	31bfff84 	addi	r6,r6,-2
   2f0f0:	01ffffc4 	movi	r7,-1
   2f0f4:	00000406 	br	2f108 <memcmp+0x3c>
   2f0f8:	20800003 	ldbu	r2,0(r4)
   2f0fc:	28c00003 	ldbu	r3,0(r5)
   2f100:	31bfffc4 	addi	r6,r6,-1
   2f104:	10c00e1e 	bne	r2,r3,2f140 <memcmp+0x74>
   2f108:	21000044 	addi	r4,r4,1
   2f10c:	29400044 	addi	r5,r5,1
   2f110:	31fff91e 	bne	r6,r7,2f0f8 <__alt_data_end+0xfffef0f8>
   2f114:	0005883a 	mov	r2,zero
   2f118:	f800283a 	ret
   2f11c:	20c00017 	ldw	r3,0(r4)
   2f120:	28800017 	ldw	r2,0(r5)
   2f124:	18bfee1e 	bne	r3,r2,2f0e0 <__alt_data_end+0xfffef0e0>
   2f128:	31bfff04 	addi	r6,r6,-4
   2f12c:	21000104 	addi	r4,r4,4
   2f130:	29400104 	addi	r5,r5,4
   2f134:	39bff936 	bltu	r7,r6,2f11c <__alt_data_end+0xfffef11c>
   2f138:	303fe91e 	bne	r6,zero,2f0e0 <__alt_data_end+0xfffef0e0>
   2f13c:	003ff506 	br	2f114 <__alt_data_end+0xfffef114>
   2f140:	10c5c83a 	sub	r2,r2,r3
   2f144:	f800283a 	ret

0002f148 <__register_exitproc>:
   2f148:	defffa04 	addi	sp,sp,-24
   2f14c:	dc000315 	stw	r16,12(sp)
   2f150:	040000f4 	movhi	r16,3
   2f154:	84047604 	addi	r16,r16,4568
   2f158:	80c00017 	ldw	r3,0(r16)
   2f15c:	dc400415 	stw	r17,16(sp)
   2f160:	dfc00515 	stw	ra,20(sp)
   2f164:	18805217 	ldw	r2,328(r3)
   2f168:	2023883a 	mov	r17,r4
   2f16c:	10003726 	beq	r2,zero,2f24c <__register_exitproc+0x104>
   2f170:	10c00117 	ldw	r3,4(r2)
   2f174:	010007c4 	movi	r4,31
   2f178:	20c00e16 	blt	r4,r3,2f1b4 <__register_exitproc+0x6c>
   2f17c:	1a000044 	addi	r8,r3,1
   2f180:	8800221e 	bne	r17,zero,2f20c <__register_exitproc+0xc4>
   2f184:	18c00084 	addi	r3,r3,2
   2f188:	18c7883a 	add	r3,r3,r3
   2f18c:	18c7883a 	add	r3,r3,r3
   2f190:	12000115 	stw	r8,4(r2)
   2f194:	10c7883a 	add	r3,r2,r3
   2f198:	19400015 	stw	r5,0(r3)
   2f19c:	0005883a 	mov	r2,zero
   2f1a0:	dfc00517 	ldw	ra,20(sp)
   2f1a4:	dc400417 	ldw	r17,16(sp)
   2f1a8:	dc000317 	ldw	r16,12(sp)
   2f1ac:	dec00604 	addi	sp,sp,24
   2f1b0:	f800283a 	ret
   2f1b4:	00800034 	movhi	r2,0
   2f1b8:	10800004 	addi	r2,r2,0
   2f1bc:	10002626 	beq	r2,zero,2f258 <__register_exitproc+0x110>
   2f1c0:	01006404 	movi	r4,400
   2f1c4:	d9400015 	stw	r5,0(sp)
   2f1c8:	d9800115 	stw	r6,4(sp)
   2f1cc:	d9c00215 	stw	r7,8(sp)
   2f1d0:	00000000 	call	0 <__reset-0x20000>
   2f1d4:	d9400017 	ldw	r5,0(sp)
   2f1d8:	d9800117 	ldw	r6,4(sp)
   2f1dc:	d9c00217 	ldw	r7,8(sp)
   2f1e0:	10001d26 	beq	r2,zero,2f258 <__register_exitproc+0x110>
   2f1e4:	81000017 	ldw	r4,0(r16)
   2f1e8:	10000115 	stw	zero,4(r2)
   2f1ec:	02000044 	movi	r8,1
   2f1f0:	22405217 	ldw	r9,328(r4)
   2f1f4:	0007883a 	mov	r3,zero
   2f1f8:	12400015 	stw	r9,0(r2)
   2f1fc:	20805215 	stw	r2,328(r4)
   2f200:	10006215 	stw	zero,392(r2)
   2f204:	10006315 	stw	zero,396(r2)
   2f208:	883fde26 	beq	r17,zero,2f184 <__alt_data_end+0xfffef184>
   2f20c:	18c9883a 	add	r4,r3,r3
   2f210:	2109883a 	add	r4,r4,r4
   2f214:	1109883a 	add	r4,r2,r4
   2f218:	21802215 	stw	r6,136(r4)
   2f21c:	01800044 	movi	r6,1
   2f220:	12406217 	ldw	r9,392(r2)
   2f224:	30cc983a 	sll	r6,r6,r3
   2f228:	4992b03a 	or	r9,r9,r6
   2f22c:	12406215 	stw	r9,392(r2)
   2f230:	21c04215 	stw	r7,264(r4)
   2f234:	01000084 	movi	r4,2
   2f238:	893fd21e 	bne	r17,r4,2f184 <__alt_data_end+0xfffef184>
   2f23c:	11006317 	ldw	r4,396(r2)
   2f240:	218cb03a 	or	r6,r4,r6
   2f244:	11806315 	stw	r6,396(r2)
   2f248:	003fce06 	br	2f184 <__alt_data_end+0xfffef184>
   2f24c:	18805304 	addi	r2,r3,332
   2f250:	18805215 	stw	r2,328(r3)
   2f254:	003fc606 	br	2f170 <__alt_data_end+0xfffef170>
   2f258:	00bfffc4 	movi	r2,-1
   2f25c:	003fd006 	br	2f1a0 <__alt_data_end+0xfffef1a0>

0002f260 <__call_exitprocs>:
   2f260:	defff504 	addi	sp,sp,-44
   2f264:	df000915 	stw	fp,36(sp)
   2f268:	dd400615 	stw	r21,24(sp)
   2f26c:	dc800315 	stw	r18,12(sp)
   2f270:	dfc00a15 	stw	ra,40(sp)
   2f274:	ddc00815 	stw	r23,32(sp)
   2f278:	dd800715 	stw	r22,28(sp)
   2f27c:	dd000515 	stw	r20,20(sp)
   2f280:	dcc00415 	stw	r19,16(sp)
   2f284:	dc400215 	stw	r17,8(sp)
   2f288:	dc000115 	stw	r16,4(sp)
   2f28c:	d9000015 	stw	r4,0(sp)
   2f290:	2839883a 	mov	fp,r5
   2f294:	04800044 	movi	r18,1
   2f298:	057fffc4 	movi	r21,-1
   2f29c:	008000f4 	movhi	r2,3
   2f2a0:	10847604 	addi	r2,r2,4568
   2f2a4:	12000017 	ldw	r8,0(r2)
   2f2a8:	45005217 	ldw	r20,328(r8)
   2f2ac:	44c05204 	addi	r19,r8,328
   2f2b0:	a0001c26 	beq	r20,zero,2f324 <__call_exitprocs+0xc4>
   2f2b4:	a0800117 	ldw	r2,4(r20)
   2f2b8:	15ffffc4 	addi	r23,r2,-1
   2f2bc:	b8000d16 	blt	r23,zero,2f2f4 <__call_exitprocs+0x94>
   2f2c0:	14000044 	addi	r16,r2,1
   2f2c4:	8421883a 	add	r16,r16,r16
   2f2c8:	8421883a 	add	r16,r16,r16
   2f2cc:	84402004 	addi	r17,r16,128
   2f2d0:	a463883a 	add	r17,r20,r17
   2f2d4:	a421883a 	add	r16,r20,r16
   2f2d8:	e0001e26 	beq	fp,zero,2f354 <__call_exitprocs+0xf4>
   2f2dc:	80804017 	ldw	r2,256(r16)
   2f2e0:	e0801c26 	beq	fp,r2,2f354 <__call_exitprocs+0xf4>
   2f2e4:	bdffffc4 	addi	r23,r23,-1
   2f2e8:	843fff04 	addi	r16,r16,-4
   2f2ec:	8c7fff04 	addi	r17,r17,-4
   2f2f0:	bd7ff91e 	bne	r23,r21,2f2d8 <__alt_data_end+0xfffef2d8>
   2f2f4:	00800034 	movhi	r2,0
   2f2f8:	10800004 	addi	r2,r2,0
   2f2fc:	10000926 	beq	r2,zero,2f324 <__call_exitprocs+0xc4>
   2f300:	a0800117 	ldw	r2,4(r20)
   2f304:	1000301e 	bne	r2,zero,2f3c8 <__call_exitprocs+0x168>
   2f308:	a0800017 	ldw	r2,0(r20)
   2f30c:	10003226 	beq	r2,zero,2f3d8 <__call_exitprocs+0x178>
   2f310:	a009883a 	mov	r4,r20
   2f314:	98800015 	stw	r2,0(r19)
   2f318:	00000000 	call	0 <__reset-0x20000>
   2f31c:	9d000017 	ldw	r20,0(r19)
   2f320:	a03fe41e 	bne	r20,zero,2f2b4 <__alt_data_end+0xfffef2b4>
   2f324:	dfc00a17 	ldw	ra,40(sp)
   2f328:	df000917 	ldw	fp,36(sp)
   2f32c:	ddc00817 	ldw	r23,32(sp)
   2f330:	dd800717 	ldw	r22,28(sp)
   2f334:	dd400617 	ldw	r21,24(sp)
   2f338:	dd000517 	ldw	r20,20(sp)
   2f33c:	dcc00417 	ldw	r19,16(sp)
   2f340:	dc800317 	ldw	r18,12(sp)
   2f344:	dc400217 	ldw	r17,8(sp)
   2f348:	dc000117 	ldw	r16,4(sp)
   2f34c:	dec00b04 	addi	sp,sp,44
   2f350:	f800283a 	ret
   2f354:	a0800117 	ldw	r2,4(r20)
   2f358:	80c00017 	ldw	r3,0(r16)
   2f35c:	10bfffc4 	addi	r2,r2,-1
   2f360:	15c01426 	beq	r2,r23,2f3b4 <__call_exitprocs+0x154>
   2f364:	80000015 	stw	zero,0(r16)
   2f368:	183fde26 	beq	r3,zero,2f2e4 <__alt_data_end+0xfffef2e4>
   2f36c:	95c8983a 	sll	r4,r18,r23
   2f370:	a0806217 	ldw	r2,392(r20)
   2f374:	a5800117 	ldw	r22,4(r20)
   2f378:	2084703a 	and	r2,r4,r2
   2f37c:	10000b26 	beq	r2,zero,2f3ac <__call_exitprocs+0x14c>
   2f380:	a0806317 	ldw	r2,396(r20)
   2f384:	2088703a 	and	r4,r4,r2
   2f388:	20000c1e 	bne	r4,zero,2f3bc <__call_exitprocs+0x15c>
   2f38c:	89400017 	ldw	r5,0(r17)
   2f390:	d9000017 	ldw	r4,0(sp)
   2f394:	183ee83a 	callr	r3
   2f398:	a0800117 	ldw	r2,4(r20)
   2f39c:	15bfbf1e 	bne	r2,r22,2f29c <__alt_data_end+0xfffef29c>
   2f3a0:	98800017 	ldw	r2,0(r19)
   2f3a4:	153fcf26 	beq	r2,r20,2f2e4 <__alt_data_end+0xfffef2e4>
   2f3a8:	003fbc06 	br	2f29c <__alt_data_end+0xfffef29c>
   2f3ac:	183ee83a 	callr	r3
   2f3b0:	003ff906 	br	2f398 <__alt_data_end+0xfffef398>
   2f3b4:	a5c00115 	stw	r23,4(r20)
   2f3b8:	003feb06 	br	2f368 <__alt_data_end+0xfffef368>
   2f3bc:	89000017 	ldw	r4,0(r17)
   2f3c0:	183ee83a 	callr	r3
   2f3c4:	003ff406 	br	2f398 <__alt_data_end+0xfffef398>
   2f3c8:	a0800017 	ldw	r2,0(r20)
   2f3cc:	a027883a 	mov	r19,r20
   2f3d0:	1029883a 	mov	r20,r2
   2f3d4:	003fb606 	br	2f2b0 <__alt_data_end+0xfffef2b0>
   2f3d8:	0005883a 	mov	r2,zero
   2f3dc:	003ffb06 	br	2f3cc <__alt_data_end+0xfffef3cc>

0002f3e0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   2f3e0:	defffd04 	addi	sp,sp,-12
   2f3e4:	df000215 	stw	fp,8(sp)
   2f3e8:	df000204 	addi	fp,sp,8
   2f3ec:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   2f3f0:	0001883a 	nop
   2f3f4:	e0bfff17 	ldw	r2,-4(fp)
   2f3f8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   2f3fc:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   2f400:	10000226 	beq	r2,zero,2f40c <_exit+0x2c>
    ALT_SIM_FAIL();
   2f404:	002af070 	cmpltui	zero,zero,43969
   2f408:	00000106 	br	2f410 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   2f40c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   2f410:	003fff06 	br	2f410 <__alt_data_end+0xfffef410>
